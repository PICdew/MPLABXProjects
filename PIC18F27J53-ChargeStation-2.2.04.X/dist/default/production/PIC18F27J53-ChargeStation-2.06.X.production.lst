

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 10 22:38:47 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   160                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   161                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   162                           	dabs	1,0xD00,48,_BDT
   163                           	dabs	1,0xD38,8,_CtrlTrfData
   164                           	dabs	1,0xD30,8,_SetupPkt
   165  0000                     
   166                           	psect	idataBANK0
   167  016B02                     __pidataBANK0:
   168                           	opt stack 0
   169                           
   170                           ;initializer for I2C_LCD_SetCursor@F8672
   171  016B02  00                 	db	0
   172  016B03  40                 	db	64
   173                           
   174                           ;initializer for epoch_to_caltime@month_cache
   175  016B04  01                 	db	1
   176                           
   177                           	psect	idataBANK1
   178  016B05                     __pidataBANK1:
   179                           	opt stack 0
   180                           
   181                           ;initializer for rx_loop@comm_buf_init
   182  016B05  01                 	db	1
   183                           
   184                           	psect	mediumconst
   185  00FB1A                     __pmediumconst:
   186                           	opt stack 0
   187  00FB1A  00                 	db	0
   188  00FB1B                     _USB_SD_Ptr:
   189                           	opt stack 0
   190  00FB1B  FC                 	db	low _sd000
   191  00FB1C  FB                 	db	high _sd000
   192  00FB1D  66                 	db	low _sd001
   193  00FB1E  FB                 	db	high _sd001
   194  00FB1F  9A                 	db	low _sd002
   195  00FB20  FB                 	db	high _sd002
   196  00FB21                     __end_of_USB_SD_Ptr:
   197                           	opt stack 0
   198  00FB21                     _USB_CD_Ptr:
   199                           	opt stack 0
   200  00FB21  23                 	db	low _configDescriptor1
   201  00FB22  FB                 	db	high _configDescriptor1
   202  00FB23                     __end_of_USB_CD_Ptr:
   203                           	opt stack 0
   204  00FB23                     _configDescriptor1:
   205                           	opt stack 0
   206  00FB23  09                 	db	9
   207  00FB24  02                 	db	2
   208  00FB25  43                 	db	67
   209  00FB26  00                 	db	0
   210  00FB27  02                 	db	2
   211  00FB28  01                 	db	1
   212  00FB29  00                 	db	0
   213  00FB2A  C0                 	db	192
   214  00FB2B  32                 	db	50
   215  00FB2C  09                 	db	9
   216  00FB2D  04                 	db	4
   217  00FB2E  00                 	db	0
   218  00FB2F  00                 	db	0
   219  00FB30  01                 	db	1
   220  00FB31  02                 	db	2
   221  00FB32  02                 	db	2
   222  00FB33  01                 	db	1
   223  00FB34  00                 	db	0
   224  00FB35  05                 	db	5
   225  00FB36  24                 	db	36
   226  00FB37  00                 	db	0
   227  00FB38  10                 	db	16
   228  00FB39  01                 	db	1
   229  00FB3A  04                 	db	4
   230  00FB3B  24                 	db	36
   231  00FB3C  02                 	db	2
   232  00FB3D  02                 	db	2
   233  00FB3E  05                 	db	5
   234  00FB3F  24                 	db	36
   235  00FB40  06                 	db	6
   236  00FB41  00                 	db	0
   237  00FB42  01                 	db	1
   238  00FB43  05                 	db	5
   239  00FB44  24                 	db	36
   240  00FB45  01                 	db	1
   241  00FB46  00                 	db	0
   242  00FB47  01                 	db	1
   243  00FB48  07                 	db	7
   244  00FB49  05                 	db	5
   245  00FB4A  81                 	db	129
   246  00FB4B  03                 	db	3
   247  00FB4C  08                 	db	8
   248  00FB4D  00                 	db	0
   249  00FB4E  02                 	db	2
   250  00FB4F  09                 	db	9
   251  00FB50  04                 	db	4
   252  00FB51  01                 	db	1
   253  00FB52  00                 	db	0
   254  00FB53  02                 	db	2
   255  00FB54  0A                 	db	10
   256  00FB55  00                 	db	0
   257  00FB56  00                 	db	0
   258  00FB57  00                 	db	0
   259  00FB58  07                 	db	7
   260  00FB59  05                 	db	5
   261  00FB5A  02                 	db	2
   262  00FB5B  02                 	db	2
   263  00FB5C  40                 	db	64
   264  00FB5D  00                 	db	0
   265  00FB5E  00                 	db	0
   266  00FB5F  07                 	db	7
   267  00FB60  05                 	db	5
   268  00FB61  82                 	db	130
   269  00FB62  02                 	db	2
   270  00FB63  40                 	db	64
   271  00FB64  00                 	db	0
   272  00FB65  00                 	db	0
   273  00FB66                     __end_of_configDescriptor1:
   274                           	opt stack 0
   275  00FB66                     _sd001:
   276                           	opt stack 0
   277  00FB66  34                 	db	52
   278  00FB67  03                 	db	3
   279  00FB68  004D               	dw	77
   280  00FB6A  0069               	dw	105
   281  00FB6C  0063               	dw	99
   282  00FB6E  0072               	dw	114
   283  00FB70  006F               	dw	111
   284  00FB72  0063               	dw	99
   285  00FB74  0068               	dw	104
   286  00FB76  0069               	dw	105
   287  00FB78  0070               	dw	112
   288  00FB7A  0020               	dw	32
   289  00FB7C  0054               	dw	84
   290  00FB7E  0065               	dw	101
   291  00FB80  0063               	dw	99
   292  00FB82  0068               	dw	104
   293  00FB84  006E               	dw	110
   294  00FB86  006F               	dw	111
   295  00FB88  006C               	dw	108
   296  00FB8A  006F               	dw	111
   297  00FB8C  0067               	dw	103
   298  00FB8E  0079               	dw	121
   299  00FB90  0020               	dw	32
   300  00FB92  0049               	dw	73
   301  00FB94  006E               	dw	110
   302  00FB96  0063               	dw	99
   303  00FB98  002E               	dw	46
   304  00FB9A                     __end_of_sd001:
   305                           	opt stack 0
   306  00FB9A                     _sd002:
   307                           	opt stack 0
   308  00FB9A  34                 	db	52
   309  00FB9B  03                 	db	3
   310  00FB9C  0043               	dw	67
   311  00FB9E  0044               	dw	68
   312  00FBA0  0043               	dw	67
   313  00FBA2  0020               	dw	32
   314  00FBA4  0052               	dw	82
   315  00FBA6  0053               	dw	83
   316  00FBA8  002D               	dw	45
   317  00FBAA  0032               	dw	50
   318  00FBAC  0033               	dw	51
   319  00FBAE  0032               	dw	50
   320  00FBB0  0020               	dw	32
   321  00FBB2  0045               	dw	69
   322  00FBB4  006D               	dw	109
   323  00FBB6  0075               	dw	117
   324  00FBB8  006C               	dw	108
   325  00FBBA  0061               	dw	97
   326  00FBBC  0074               	dw	116
   327  00FBBE  0069               	dw	105
   328  00FBC0  006F               	dw	111
   329  00FBC2  006E               	dw	110
   330  00FBC4  0020               	dw	32
   331  00FBC6  0044               	dw	68
   332  00FBC8  0065               	dw	101
   333  00FBCA  006D               	dw	109
   334  00FBCC  006F               	dw	111
   335  00FBCE                     __end_of_sd002:
   336                           	opt stack 0
   337  00FBCE                     _weekday_3char:
   338                           	opt stack 0
   339  00FBCE  53                 	db	83
   340  00FBCF  55                 	db	85
   341  00FBD0  4E                 	db	78
   342  00FBD1  00                 	db	0
   343  00FBD2  4D                 	db	77
   344  00FBD3  4F                 	db	79
   345  00FBD4  4E                 	db	78
   346  00FBD5  00                 	db	0
   347  00FBD6  54                 	db	84
   348  00FBD7  55                 	db	85
   349  00FBD8  45                 	db	69
   350  00FBD9  00                 	db	0
   351  00FBDA  57                 	db	87
   352  00FBDB  45                 	db	69
   353  00FBDC  44                 	db	68
   354  00FBDD  00                 	db	0
   355  00FBDE  54                 	db	84
   356  00FBDF  48                 	db	72
   357  00FBE0  55                 	db	85
   358  00FBE1  00                 	db	0
   359  00FBE2  46                 	db	70
   360  00FBE3  52                 	db	82
   361  00FBE4  49                 	db	73
   362  00FBE5  00                 	db	0
   363  00FBE6  53                 	db	83
   364  00FBE7  41                 	db	65
   365  00FBE8  54                 	db	84
   366  00FBE9  00                 	db	0
   367  00FBEA                     __end_of_weekday_3char:
   368                           	opt stack 0
   369  00FBEA                     _device_dsc:
   370                           	opt stack 0
   371  00FBEA  12                 	db	18
   372  00FBEB  01                 	db	1
   373  00FBEC  0200               	dw	512
   374  00FBEE  02                 	db	2
   375  00FBEF  00                 	db	0
   376  00FBF0  00                 	db	0
   377  00FBF1  08                 	db	8
   378  00FBF2  04D8               	dw	1240
   379  00FBF4  000A               	dw	10
   380  00FBF6  0100               	dw	256
   381  00FBF8  01                 	db	1
   382  00FBF9  02                 	db	2
   383  00FBFA  00                 	db	0
   384  00FBFB  01                 	db	1
   385  00FBFC                     __end_of_device_dsc:
   386                           	opt stack 0
   387  00FBFC                     _sd000:
   388                           	opt stack 0
   389  00FBFC  04                 	db	4
   390  00FBFD  03                 	db	3
   391  00FBFE  0409               	dw	1033
   392  00FC00                     __end_of_sd000:
   393                           	opt stack 0
   394  0000                     _ANCON0	set	3912
   395  0000                     _ANCON1	set	3913
   396  0000                     _PADCFG1bits	set	3900
   397  0000                     _RTCCAL	set	3902
   398  0000                     _RTCCFGbits	set	3903
   399  0000                     _RTCVALH	set	3899
   400  0000                     _RTCVALL	set	3898
   401  0000                     _T5CONbits	set	3874
   402  0000                     _UADDR	set	3896
   403  0000                     _UCFG	set	3897
   404  0000                     _UEIE	set	3895
   405  0000                     _UEP0bits	set	3878
   406  0000                     _UIE	set	3894
   407  0000                     _UIEbits	set	3894
   408  0000                     _UEP0	set	3878
   409  0000                     _UEP1	set	3879
   410  0000                     _ADRES	set	4035
   411  0000                     _ADCON0bits	set	4034
   412  0000                     _ADCON1bits	set	4033
   413  0000                     _BAUDCON1bits	set	3966
   414  0000                     _CTMUCONH	set	4019
   415  0000                     _CTMUCONHbits	set	4019
   416  0000                     _CTMUCONL	set	4018
   417  0000                     _CTMUCONLbits	set	4018
   418  0000                     _CTMUICON	set	4017
   419  0000                     _EECON2	set	4007
   420  0000                     _INTCON2bits	set	4081
   421  0000                     _INTCONbits	set	4082
   422  0000                     _IPR1bits	set	3999
   423  0000                     _IPR2bits	set	4002
   424  0000                     _IPR5bits	set	3993
   425  0000                     _OSCCONbits	set	4051
   426  0000                     _OSCTUNEbits	set	3995
   427  0000                     _PIE1bits	set	3997
   428  0000                     _PIE2bits	set	4000
   429  0000                     _PIE5bits	set	3985
   430  0000                     _PIR1bits	set	3998
   431  0000                     _PIR2bits	set	4001
   432  0000                     _PIR5bits	set	3992
   433  0000                     _RCONbits	set	4048
   434  0000                     _RCREG1	set	4015
   435  0000                     _RCSTA1bits	set	4012
   436  0000                     _SPBRG1	set	4016
   437  0000                     _SPBRGH1	set	3967
   438  0000                     _SSP1ADD	set	4040
   439  0000                     _SSP1BUF	set	4041
   440  0000                     _SSP1CON1	set	4038
   441  0000                     _SSP1CON2	set	4037
   442  0000                     _SSP1CON2bits	set	4037
   443  0000                     _SSP1STAT	set	4039
   444  0000                     _T0CONbits	set	4053
   445  0000                     _T1CONbits	set	4045
   446  0000                     _T3CONbits	set	3961
   447  0000                     _TMR1H	set	4047
   448  0000                     _TRISA	set	3986
   449  0000                     _TRISB	set	3987
   450  0000                     _TRISC	set	3988
   451  0000                     _TXREG1	set	4014
   452  0000                     _TXSTA1bits	set	4013
   453  0000                     _UCON	set	3941
   454  0000                     _UCONbits	set	3941
   455  0000                     _UEIR	set	3939
   456  0000                     _UIR	set	3938
   457  0000                     _UIRbits	set	3938
   458  0000                     _USTAT	set	3940
   459  0000                     _BCL1IF	set	32011
   460  0000                     _GIE	set	32663
   461  0000                     _LATA5	set	31821
   462  0000                     _LATA6	set	31822
   463  0000                     _LATA7	set	31823
   464  0000                     _LATB2	set	31826
   465  0000                     _LATB6	set	31830
   466  0000                     _LATB7	set	31831
   467  0000                     _LATC2	set	31834
   468  0000                     _SSP1IF	set	31987
   469  00FC00                     STR_44:
   470  00FC00  09                 	db	9
   471  00FC01  2A                 	db	42
   472  00FC02  2A                 	db	42
   473  00FC03  2A                 	db	42
   474  00FC04  2A                 	db	42
   475  00FC05  2A                 	db	42
   476  00FC06  2A                 	db	42
   477  00FC07  2A                 	db	42
   478  00FC08  2A                 	db	42
   479  00FC09  2A                 	db	42
   480  00FC0A  2A                 	db	42
   481  00FC0B  2A                 	db	42
   482  00FC0C  2A                 	db	42
   483  00FC0D  2A                 	db	42
   484  00FC0E  2A                 	db	42
   485  00FC0F  2A                 	db	42
   486  00FC10  2A                 	db	42
   487  00FC11  2A                 	db	42
   488  00FC12  2A                 	db	42
   489  00FC13  2A                 	db	42
   490  00FC14  2A                 	db	42
   491  00FC15  2A                 	db	42
   492  00FC16  2A                 	db	42
   493  00FC17  2A                 	db	42
   494  00FC18  2A                 	db	42
   495  00FC19  2A                 	db	42
   496  00FC1A  2A                 	db	42
   497  00FC1B  2A                 	db	42
   498  00FC1C  2A                 	db	42
   499  00FC1D  0A                 	db	10
   500  00FC1E  09                 	db	9
   501  00FC1F  2A                 	db	42
   502  00FC20  2A                 	db	42
   503  00FC21  2A                 	db	42
   504  00FC22  2A                 	db	42
   505  00FC23  20                 	db	32
   506  00FC24  43                 	db	67	;'C'
   507  00FC25  68                 	db	104	;'h'
   508  00FC26  61                 	db	97	;'a'
   509  00FC27  72                 	db	114	;'r'
   510  00FC28  67                 	db	103	;'g'
   511  00FC29  65                 	db	101	;'e'
   512  00FC2A  20                 	db	32
   513  00FC2B  53                 	db	83	;'S'
   514  00FC2C  74                 	db	116	;'t'
   515  00FC2D  61                 	db	97	;'a'
   516  00FC2E  74                 	db	116	;'t'
   517  00FC2F  69                 	db	105	;'i'
   518  00FC30  6F                 	db	111	;'o'
   519  00FC31  6E                 	db	110	;'n'
   520  00FC32  20                 	db	32
   521  00FC33  36                 	db	54	;'6'
   522  00FC34  2E                 	db	46
   523  00FC35  37                 	db	55	;'7'
   524  00FC36  20                 	db	32
   525  00FC37  2A                 	db	42
   526  00FC38  2A                 	db	42
   527  00FC39  2A                 	db	42
   528  00FC3A  2A                 	db	42
   529  00FC3B  0A                 	db	10
   530  00FC3C  09                 	db	9
   531  00FC3D  2A                 	db	42
   532  00FC3E  2A                 	db	42
   533  00FC3F  2A                 	db	42
   534  00FC40  2A                 	db	42
   535  00FC41  20                 	db	32
   536  00FC42  4D                 	db	77	;'M'
   537  00FC43  61                 	db	97	;'a'
   538  00FC44  64                 	db	100	;'d'
   539  00FC45  65                 	db	101	;'e'
   540  00FC46  20                 	db	32
   541  00FC47  62                 	db	98	;'b'
   542  00FC48  79                 	db	121	;'y'
   543  00FC49  20                 	db	32
   544  00FC4A  40                 	db	64	;'@'
   545  00FC4B  52                 	db	82	;'R'
   546  00FC4C  79                 	db	121	;'y'
   547  00FC4D  6F                 	db	111	;'o'
   548  00FC4E  6B                 	db	107	;'k'
   549  00FC4F  65                 	db	101	;'e'
   550  00FC50  72                 	db	114	;'r'
   551  00FC51  69                 	db	105	;'i'
   552  00FC52  20                 	db	32
   553  00FC53  20                 	db	32
   554  00FC54  20                 	db	32
   555  00FC55  2A                 	db	42
   556  00FC56  2A                 	db	42
   557  00FC57  2A                 	db	42
   558  00FC58  2A                 	db	42
   559  00FC59  0A                 	db	10
   560  00FC5A  09                 	db	9
   561  00FC5B  2A                 	db	42
   562  00FC5C  2A                 	db	42
   563  00FC5D  2A                 	db	42
   564  00FC5E  2A                 	db	42
   565  00FC5F  2A                 	db	42
   566  00FC60  2A                 	db	42
   567  00FC61  2A                 	db	42
   568  00FC62  2A                 	db	42
   569  00FC63  2A                 	db	42
   570  00FC64  2A                 	db	42
   571  00FC65  2A                 	db	42
   572  00FC66  2A                 	db	42
   573  00FC67  2A                 	db	42
   574  00FC68  2A                 	db	42
   575  00FC69  2A                 	db	42
   576  00FC6A  2A                 	db	42
   577  00FC6B  2A                 	db	42
   578  00FC6C  2A                 	db	42
   579  00FC6D  2A                 	db	42
   580  00FC6E  2A                 	db	42
   581  00FC6F  2A                 	db	42
   582  00FC70  2A                 	db	42
   583  00FC71  2A                 	db	42
   584  00FC72  2A                 	db	42
   585  00FC73  2A                 	db	42
   586  00FC74  2A                 	db	42
   587  00FC75  2A                 	db	42
   588  00FC76  2A                 	db	42
   589  00FC77  0A                 	db	10
   590  00FC78  0A                 	db	10
   591  00FC79  09                 	db	9
   592  00FC7A  63                 	db	99	;'c'
   593  00FC7B  6F                 	db	111	;'o'
   594  00FC7C  6D                 	db	109	;'m'
   595  00FC7D  6D                 	db	109	;'m'
   596  00FC7E  61                 	db	97	;'a'
   597  00FC7F  6E                 	db	110	;'n'
   598  00FC80  64                 	db	100	;'d'
   599  00FC81  20                 	db	32
   600  00FC82  09                 	db	9
   601  00FC83  6F                 	db	111	;'o'
   602  00FC84  70                 	db	112	;'p'
   603  00FC85  65                 	db	101	;'e'
   604  00FC86  6C                 	db	108	;'l'
   605  00FC87  61                 	db	97	;'a'
   606  00FC88  6E                 	db	110	;'n'
   607  00FC89  64                 	db	100	;'d'
   608  00FC8A  31                 	db	49	;'1'
   609  00FC8B  09                 	db	9
   610  00FC8C  6F                 	db	111	;'o'
   611  00FC8D  70                 	db	112	;'p'
   612  00FC8E  65                 	db	101	;'e'
   613  00FC8F  6C                 	db	108	;'l'
   614  00FC90  61                 	db	97	;'a'
   615  00FC91  6E                 	db	110	;'n'
   616  00FC92  64                 	db	100	;'d'
   617  00FC93  32                 	db	50	;'2'
   618  00FC94  0A                 	db	10
   619  00FC95  0A                 	db	10
   620  00FC96  09                 	db	9
   621  00FC97  70                 	db	112	;'p'
   622  00FC98  72                 	db	114	;'r'
   623  00FC99  69                 	db	105	;'i'
   624  00FC9A  6E                 	db	110	;'n'
   625  00FC9B  74                 	db	116	;'t'
   626  00FC9C  5F                 	db	95	;'_'
   627  00FC9D  74                 	db	116	;'t'
   628  00FC9E  69                 	db	105	;'i'
   629  00FC9F  6D                 	db	109	;'m'
   630  00FCA0  65                 	db	101	;'e'
   631  00FCA1  28                 	db	40
   632  00FCA2  74                 	db	116	;'t'
   633  00FCA3  29                 	db	41
   634  00FCA4  0A                 	db	10
   635  00FCA5  09                 	db	9
   636  00FCA6  61                 	db	97	;'a'
   637  00FCA7  64                 	db	100	;'d'
   638  00FCA8  6A                 	db	106	;'j'
   639  00FCA9  75                 	db	117	;'u'
   640  00FCAA  73                 	db	115	;'s'
   641  00FCAB  74                 	db	116	;'t'
   642  00FCAC  5F                 	db	95	;'_'
   643  00FCAD  74                 	db	116	;'t'
   644  00FCAE  69                 	db	105	;'i'
   645  00FCAF  6D                 	db	109	;'m'
   646  00FCB0  65                 	db	101	;'e'
   647  00FCB1  28                 	db	40
   648  00FCB2  61                 	db	97	;'a'
   649  00FCB3  74                 	db	116	;'t'
   650  00FCB4  29                 	db	41
   651  00FCB5  20                 	db	32
   652  00FCB6  5B                 	db	91	;'['
   653  00FCB7  68                 	db	104	;'h'
   654  00FCB8  61                 	db	97	;'a'
   655  00FCB9  6E                 	db	110	;'n'
   656  00FCBA  64                 	db	100	;'d'
   657  00FCBB  3A                 	db	58	;':'
   658  00FCBC  79                 	db	121	;'y'
   659  00FCBD  2C                 	db	44
   660  00FCBE  4D                 	db	77	;'M'
   661  00FCBF  2C                 	db	44
   662  00FCC0  64                 	db	100	;'d'
   663  00FCC1  2C                 	db	44
   664  00FCC2  68                 	db	104	;'h'
   665  00FCC3  2C                 	db	44
   666  00FCC4  6D                 	db	109	;'m'
   667  00FCC5  2C                 	db	44
   668  00FCC6  73                 	db	115	;'s'
   669  00FCC7  5D                 	db	93	;']'
   670  00FCC8  20                 	db	32
   671  00FCC9  5B                 	db	91	;'['
   672  00FCCA  76                 	db	118	;'v'
   673  00FCCB  61                 	db	97	;'a'
   674  00FCCC  6C                 	db	108	;'l'
   675  00FCCD  75                 	db	117	;'u'
   676  00FCCE  65                 	db	101	;'e'
   677  00FCCF  28                 	db	40
   678  00FCD0  64                 	db	100	;'d'
   679  00FCD1  65                 	db	101	;'e'
   680  00FCD2  63                 	db	99	;'c'
   681  00FCD3  69                 	db	105	;'i'
   682  00FCD4  6D                 	db	109	;'m'
   683  00FCD5  61                 	db	97	;'a'
   684  00FCD6  6C                 	db	108	;'l'
   685  00FCD7  29                 	db	41
   686  00FCD8  5D                 	db	93	;']'
   687  00FCD9  0A                 	db	10
   688  00FCDA  09                 	db	9
   689  00FCDB  73                 	db	115	;'s'
   690  00FCDC  65                 	db	101	;'e'
   691  00FCDD  74                 	db	116	;'t'
   692  00FCDE  74                 	db	116	;'t'
   693  00FCDF  69                 	db	105	;'i'
   694  00FCE0  6E                 	db	110	;'n'
   695  00FCE1  67                 	db	103	;'g'
   696  00FCE2  73                 	db	115	;'s'
   697  00FCE3  28                 	db	40
   698  00FCE4  73                 	db	115	;'s'
   699  00FCE5  65                 	db	101	;'e'
   700  00FCE6  74                 	db	116	;'t'
   701  00FCE7  29                 	db	41
   702  00FCE8  20                 	db	32
   703  00FCE9  5B                 	db	91	;'['
   704  00FCEA  70                 	db	112	;'p'
   705  00FCEB  6F                 	db	111	;'o'
   706  00FCEC  72                 	db	114	;'r'
   707  00FCED  74                 	db	116	;'t'
   708  00FCEE  3A                 	db	58	;':'
   709  00FCEF  6C                 	db	108	;'l'
   710  00FCF0  65                 	db	101	;'e'
   711  00FCF1  66                 	db	102	;'f'
   712  00FCF2  74                 	db	116	;'t'
   713  00FCF3  28                 	db	40
   714  00FCF4  6C                 	db	108	;'l'
   715  00FCF5  29                 	db	41
   716  00FCF6  2C                 	db	44
   717  00FCF7  63                 	db	99	;'c'
   718  00FCF8  65                 	db	101	;'e'
   719  00FCF9  6E                 	db	110	;'n'
   720  00FCFA  74                 	db	116	;'t'
   721  00FCFB  65                 	db	101	;'e'
   722  00FCFC  72                 	db	114	;'r'
   723  00FCFD  28                 	db	40
   724  00FCFE  63                 	db	99	;'c'
   725  00FCFF  29                 	db	41
   726  00FD00  2C                 	db	44
   727  00FD01  72                 	db	114	;'r'
   728  00FD02  69                 	db	105	;'i'
   729  00FD03  67                 	db	103	;'g'
   730  00FD04  68                 	db	104	;'h'
   731  00FD05  74                 	db	116	;'t'
   732  00FD06  28                 	db	40
   733  00FD07  72                 	db	114	;'r'
   734  00FD08  29                 	db	41
   735  00FD09  5D                 	db	93	;']'
   736  00FD0A  0A                 	db	10
   737  00FD0B  09                 	db	9
   738  00FD0C  09                 	db	9
   739  00FD0D  5B                 	db	91	;'['
   740  00FD0E  61                 	db	97	;'a'
   741  00FD0F  75                 	db	117	;'u'
   742  00FD10  74                 	db	116	;'t'
   743  00FD11  6F                 	db	111	;'o'
   744  00FD12  5F                 	db	95	;'_'
   745  00FD13  73                 	db	115	;'s'
   746  00FD14  74                 	db	116	;'t'
   747  00FD15  6F                 	db	111	;'o'
   748  00FD16  70                 	db	112	;'p'
   749  00FD17  28                 	db	40
   750  00FD18  61                 	db	97	;'a'
   751  00FD19  73                 	db	115	;'s'
   752  00FD1A  29                 	db	41
   753  00FD1B  2C                 	db	44
   754  00FD1C  61                 	db	97	;'a'
   755  00FD1D  6C                 	db	108	;'l'
   756  00FD1E  77                 	db	119	;'w'
   757  00FD1F  61                 	db	97	;'a'
   758  00FD20  79                 	db	121	;'y'
   759  00FD21  73                 	db	115	;'s'
   760  00FD22  5F                 	db	95	;'_'
   761  00FD23  6F                 	db	111	;'o'
   762  00FD24  6E                 	db	110	;'n'
   763  00FD25  28                 	db	40
   764  00FD26  61                 	db	97	;'a'
   765  00FD27  6F                 	db	111	;'o'
   766  00FD28  29                 	db	41
   767  00FD29  2C                 	db	44
   768  00FD2A  69                 	db	105	;'i'
   769  00FD2B  6E                 	db	110	;'n'
   770  00FD2C  74                 	db	116	;'t'
   771  00FD2D  65                 	db	101	;'e'
   772  00FD2E  67                 	db	103	;'g'
   773  00FD2F  72                 	db	114	;'r'
   774  00FD30  61                 	db	97	;'a'
   775  00FD31  74                 	db	116	;'t'
   776  00FD32  69                 	db	105	;'i'
   777  00FD33  6E                 	db	110	;'n'
   778  00FD34  67                 	db	103	;'g'
   779  00FD35  5F                 	db	95	;'_'
   780  00FD36  72                 	db	114	;'r'
   781  00FD37  65                 	db	101	;'e'
   782  00FD38  73                 	db	115	;'s'
   783  00FD39  65                 	db	101	;'e'
   784  00FD3A  74                 	db	116	;'t'
   785  00FD3B  28                 	db	40
   786  00FD3C  69                 	db	105	;'i'
   787  00FD3D  72                 	db	114	;'r'
   788  00FD3E  29                 	db	41
   789  00FD3F  5D                 	db	93	;']'
   790  00FD40  0A                 	db	10
   791  00FD41  09                 	db	9
   792  00FD42  64                 	db	100	;'d'
   793  00FD43  69                 	db	105	;'i'
   794  00FD44  73                 	db	115	;'s'
   795  00FD45  70                 	db	112	;'p'
   796  00FD46  6C                 	db	108	;'l'
   797  00FD47  61                 	db	97	;'a'
   798  00FD48  79                 	db	121	;'y'
   799  00FD49  28                 	db	40
   800  00FD4A  64                 	db	100	;'d'
   801  00FD4B  29                 	db	41
   802  00FD4C  20                 	db	32
   803  00FD4D  5B                 	db	91	;'['
   804  00FD4E  70                 	db	112	;'p'
   805  00FD4F  6F                 	db	111	;'o'
   806  00FD50  72                 	db	114	;'r'
   807  00FD51  74                 	db	116	;'t'
   808  00FD52  3A                 	db	58	;':'
   809  00FD53  6C                 	db	108	;'l'
   810  00FD54  65                 	db	101	;'e'
   811  00FD55  66                 	db	102	;'f'
   812  00FD56  74                 	db	116	;'t'
   813  00FD57  28                 	db	40
   814  00FD58  6C                 	db	108	;'l'
   815  00FD59  29                 	db	41
   816  00FD5A  2C                 	db	44
   817  00FD5B  63                 	db	99	;'c'
   818  00FD5C  65                 	db	101	;'e'
   819  00FD5D  6E                 	db	110	;'n'
   820  00FD5E  74                 	db	116	;'t'
   821  00FD5F  65                 	db	101	;'e'
   822  00FD60  72                 	db	114	;'r'
   823  00FD61  28                 	db	40
   824  00FD62  63                 	db	99	;'c'
   825  00FD63  29                 	db	41
   826  00FD64  2C                 	db	44
   827  00FD65  72                 	db	114	;'r'
   828  00FD66  69                 	db	105	;'i'
   829  00FD67  67                 	db	103	;'g'
   830  00FD68  68                 	db	104	;'h'
   831  00FD69  74                 	db	116	;'t'
   832  00FD6A  28                 	db	40
   833  00FD6B  72                 	db	114	;'r'
   834  00FD6C  29                 	db	41
   835  00FD6D  5D                 	db	93	;']'
   836  00FD6E  0A                 	db	10
   837  00FD6F  09                 	db	9
   838  00FD70  09                 	db	9
   839  00FD71  5B                 	db	91	;'['
   840  00FD72  63                 	db	99	;'c'
   841  00FD73  6F                 	db	111	;'o'
   842  00FD74  6E                 	db	110	;'n'
   843  00FD75  74                 	db	116	;'t'
   844  00FD76  65                 	db	101	;'e'
   845  00FD77  6E                 	db	110	;'n'
   846  00FD78  74                 	db	116	;'t'
   847  00FD79  3A                 	db	58	;':'
   848  00FD7A  63                 	db	99	;'c'
   849  00FD7B  75                 	db	117	;'u'
   850  00FD7C  72                 	db	114	;'r'
   851  00FD7D  72                 	db	114	;'r'
   852  00FD7E  65                 	db	101	;'e'
   853  00FD7F  6E                 	db	110	;'n'
   854  00FD80  74                 	db	116	;'t'
   855  00FD81  28                 	db	40
   856  00FD82  63                 	db	99	;'c'
   857  00FD83  29                 	db	41
   858  00FD84  2C                 	db	44
   859  00FD85  69                 	db	105	;'i'
   860  00FD86  6E                 	db	110	;'n'
   861  00FD87  74                 	db	116	;'t'
   862  00FD88  65                 	db	101	;'e'
   863  00FD89  67                 	db	103	;'g'
   864  00FD8A  72                 	db	114	;'r'
   865  00FD8B  61                 	db	97	;'a'
   866  00FD8C  74                 	db	116	;'t'
   867  00FD8D  65                 	db	101	;'e'
   868  00FD8E  64                 	db	100	;'d'
   869  00FD8F  5F                 	db	95	;'_'
   870  00FD90  63                 	db	99	;'c'
   871  00FD91  75                 	db	117	;'u'
   872  00FD92  72                 	db	114	;'r'
   873  00FD93  72                 	db	114	;'r'
   874  00FD94  65                 	db	101	;'e'
   875  00FD95  6E                 	db	110	;'n'
   876  00FD96  74                 	db	116	;'t'
   877  00FD97  28                 	db	40
   878  00FD98  69                 	db	105	;'i'
   879  00FD99  63                 	db	99	;'c'
   880  00FD9A  29                 	db	41
   881  00FD9B  2C                 	db	44
   882  00FD9C  69                 	db	105	;'i'
   883  00FD9D  6E                 	db	110	;'n'
   884  00FD9E  74                 	db	116	;'t'
   885  00FD9F  65                 	db	101	;'e'
   886  00FDA0  67                 	db	103	;'g'
   887  00FDA1  72                 	db	114	;'r'
   888  00FDA2  61                 	db	97	;'a'
   889  00FDA3  74                 	db	116	;'t'
   890  00FDA4  65                 	db	101	;'e'
   891  00FDA5  64                 	db	100	;'d'
   892  00FDA6  5F                 	db	95	;'_'
   893  00FDA7  74                 	db	116	;'t'
   894  00FDA8  69                 	db	105	;'i'
   895  00FDA9  6D                 	db	109	;'m'
   896  00FDAA  65                 	db	101	;'e'
   897  00FDAB  28                 	db	40
   898  00FDAC  69                 	db	105	;'i'
   899  00FDAD  74                 	db	116	;'t'
   900  00FDAE  29                 	db	41
   901  00FDAF  5D                 	db	93	;']'
   902  00FDB0  0A                 	db	10
   903  00FDB1  09                 	db	9
   904  00FDB2  74                 	db	116	;'t'
   905  00FDB3  6F                 	db	111	;'o'
   906  00FDB4  75                 	db	117	;'u'
   907  00FDB5  63                 	db	99	;'c'
   908  00FDB6  68                 	db	104	;'h'
   909  00FDB7  20                 	db	32
   910  00FDB8  5B                 	db	91	;'['
   911  00FDB9  72                 	db	114	;'r'
   912  00FDBA  65                 	db	101	;'e'
   913  00FDBB  73                 	db	115	;'s'
   914  00FDBC  65                 	db	101	;'e'
   915  00FDBD  74                 	db	116	;'t'
   916  00FDBE  28                 	db	40
   917  00FDBF  72                 	db	114	;'r'
   918  00FDC0  29                 	db	41
   919  00FDC1  2C                 	db	44
   920  00FDC2  69                 	db	105	;'i'
   921  00FDC3  6E                 	db	110	;'n'
   922  00FDC4  69                 	db	105	;'i'
   923  00FDC5  74                 	db	116	;'t'
   924  00FDC6  69                 	db	105	;'i'
   925  00FDC7  61                 	db	97	;'a'
   926  00FDC8  6C                 	db	108	;'l'
   927  00FDC9  69                 	db	105	;'i'
   928  00FDCA  7A                 	db	122	;'z'
   929  00FDCB  65                 	db	101	;'e'
   930  00FDCC  28                 	db	40
   931  00FDCD  69                 	db	105	;'i'
   932  00FDCE  6E                 	db	110	;'n'
   933  00FDCF  69                 	db	105	;'i'
   934  00FDD0  74                 	db	116	;'t'
   935  00FDD1  29                 	db	41
   936  00FDD2  5D                 	db	93	;']'
   937  00FDD3  20                 	db	32
   938  00FDD4  5B                 	db	91	;'['
   939  00FDD5  76                 	db	118	;'v'
   940  00FDD6  61                 	db	97	;'a'
   941  00FDD7  6C                 	db	108	;'l'
   942  00FDD8  75                 	db	117	;'u'
   943  00FDD9  65                 	db	101	;'e'
   944  00FDDA  28                 	db	40
   945  00FDDB  25                 	db	37
   946  00FDDC  29                 	db	41
   947  00FDDD  5D                 	db	93	;']'
   948  00FDDE  0A                 	db	10
   949  00FDDF  09                 	db	9
   950  00FDE0  52                 	db	82	;'R'
   951  00FDE1  45                 	db	69	;'E'
   952  00FDE2  53                 	db	83	;'S'
   953  00FDE3  45                 	db	69	;'E'
   954  00FDE4  54                 	db	84	;'T'
   955  00FDE5  28                 	db	40
   956  00FDE6  29                 	db	41
   957  00FDE7  3B                 	db	59	;';'
   958  00FDE8  0A                 	db	10
   959  00FDE9  00                 	db	0
   960  00FDEA                     STR_62:
   961  00FDEA  09                 	db	9
   962  00FDEB  69                 	db	105	;'i'
   963  00FDEC  6E                 	db	110	;'n'
   964  00FDED  76                 	db	118	;'v'
   965  00FDEE  61                 	db	97	;'a'
   966  00FDEF  6C                 	db	108	;'l'
   967  00FDF0  69                 	db	105	;'i'
   968  00FDF1  64                 	db	100	;'d'
   969  00FDF2  20                 	db	32
   970  00FDF3  64                 	db	100	;'d'
   971  00FDF4  61                 	db	97	;'a'
   972  00FDF5  74                 	db	116	;'t'
   973  00FDF6  61                 	db	97	;'a'
   974  00FDF7  0A                 	db	10
   975  00FDF8  09                 	db	9
   976  00FDF9  69                 	db	105	;'i'
   977  00FDFA  6E                 	db	110	;'n'
   978  00FDFB  69                 	db	105	;'i'
   979  00FDFC  74                 	db	116	;'t'
   980  00FDFD  69                 	db	105	;'i'
   981  00FDFE  61                 	db	97	;'a'
   982  00FDFF  6C                 	db	108	;'l'
   983  00FE00  69                 	db	105	;'i'
   984  00FE01  7A                 	db	122	;'z'
   985  00FE02  69                 	db	105	;'i'
   986  00FE03  6E                 	db	110	;'n'
   987  00FE04  67                 	db	103	;'g'
   988  00FE05  20                 	db	32
   989  00FE06  66                 	db	102	;'f'
   990  00FE07  61                 	db	97	;'a'
   991  00FE08  69                 	db	105	;'i'
   992  00FE09  6C                 	db	108	;'l'
   993  00FE0A  65                 	db	101	;'e'
   994  00FE0B  64                 	db	100	;'d'
   995  00FE0C  0A                 	db	10
   996  00FE0D  00                 	db	0
   997  00FE0E                     STR_61:
   998  00FE0E  09                 	db	9
   999  00FE0F  69                 	db	105	;'i'
  1000  00FE10  6E                 	db	110	;'n'
  1001  00FE11  69                 	db	105	;'i'
  1002  00FE12  74                 	db	116	;'t'
  1003  00FE13  69                 	db	105	;'i'
  1004  00FE14  61                 	db	97	;'a'
  1005  00FE15  6C                 	db	108	;'l'
  1006  00FE16  69                 	db	105	;'i'
  1007  00FE17  7A                 	db	122	;'z'
  1008  00FE18  69                 	db	105	;'i'
  1009  00FE19  6E                 	db	110	;'n'
  1010  00FE1A  67                 	db	103	;'g'
  1011  00FE1B  20                 	db	32
  1012  00FE1C  63                 	db	99	;'c'
  1013  00FE1D  6F                 	db	111	;'o'
  1014  00FE1E  6D                 	db	109	;'m'
  1015  00FE1F  70                 	db	112	;'p'
  1016  00FE20  6C                 	db	108	;'l'
  1017  00FE21  65                 	db	101	;'e'
  1018  00FE22  74                 	db	116	;'t'
  1019  00FE23  65                 	db	101	;'e'
  1020  00FE24  0A                 	db	10
  1021  00FE25  00                 	db	0
  1022  00FE26                     STR_72:
  1023  00FE26  69                 	db	105	;'i'
  1024  00FE27  6E                 	db	110	;'n'
  1025  00FE28  74                 	db	116	;'t'
  1026  00FE29  65                 	db	101	;'e'
  1027  00FE2A  67                 	db	103	;'g'
  1028  00FE2B  72                 	db	114	;'r'
  1029  00FE2C  61                 	db	97	;'a'
  1030  00FE2D  74                 	db	116	;'t'
  1031  00FE2E  65                 	db	101	;'e'
  1032  00FE2F  64                 	db	100	;'d'
  1033  00FE30  5F                 	db	95	;'_'
  1034  00FE31  63                 	db	99	;'c'
  1035  00FE32  75                 	db	117	;'u'
  1036  00FE33  72                 	db	114	;'r'
  1037  00FE34  72                 	db	114	;'r'
  1038  00FE35  65                 	db	101	;'e'
  1039  00FE36  6E                 	db	110	;'n'
  1040  00FE37  74                 	db	116	;'t'
  1041  00FE38  00                 	db	0
  1042  00FE39                     STR_65:
  1043  00FE39  09                 	db	9
  1044  00FE3A  73                 	db	115	;'s'
  1045  00FE3B  65                 	db	101	;'e'
  1046  00FE3C  74                 	db	116	;'t'
  1047  00FE3D  69                 	db	105	;'i'
  1048  00FE3E  6E                 	db	110	;'n'
  1049  00FE3F  67                 	db	103	;'g'
  1050  00FE40  20                 	db	32
  1051  00FE41  63                 	db	99	;'c'
  1052  00FE42  6F                 	db	111	;'o'
  1053  00FE43  6D                 	db	109	;'m'
  1054  00FE44  70                 	db	112	;'p'
  1055  00FE45  6C                 	db	108	;'l'
  1056  00FE46  65                 	db	101	;'e'
  1057  00FE47  74                 	db	116	;'t'
  1058  00FE48  65                 	db	101	;'e'
  1059  00FE49  0A                 	db	10
  1060  00FE4A  00                 	db	0
  1061  00FE4B                     STR_8:
  1062  00FE4B  43                 	db	67	;'C'
  1063  00FE4C  68                 	db	104	;'h'
  1064  00FE4D  61                 	db	97	;'a'
  1065  00FE4E  72                 	db	114	;'r'
  1066  00FE4F  67                 	db	103	;'g'
  1067  00FE50  65                 	db	101	;'e'
  1068  00FE51  20                 	db	32
  1069  00FE52  53                 	db	83	;'S'
  1070  00FE53  74                 	db	116	;'t'
  1071  00FE54  61                 	db	97	;'a'
  1072  00FE55  74                 	db	116	;'t'
  1073  00FE56  69                 	db	105	;'i'
  1074  00FE57  6F                 	db	111	;'o'
  1075  00FE58  6E                 	db	110	;'n'
  1076  00FE59  20                 	db	32
  1077  00FE5A  36                 	db	54	;'6'
  1078  00FE5B  00                 	db	0
  1079  00FE5C                     STR_18:
  1080  00FE5C  54                 	db	84	;'T'
  1081  00FE5D  6F                 	db	111	;'o'
  1082  00FE5E  67                 	db	103	;'g'
  1083  00FE5F  67                 	db	103	;'g'
  1084  00FE60  6C                 	db	108	;'l'
  1085  00FE61  65                 	db	101	;'e'
  1086  00FE62  20                 	db	32
  1087  00FE63  41                 	db	65	;'A'
  1088  00FE64  75                 	db	117	;'u'
  1089  00FE65  74                 	db	116	;'t'
  1090  00FE66  6F                 	db	111	;'o'
  1091  00FE67  53                 	db	83	;'S'
  1092  00FE68  74                 	db	116	;'t'
  1093  00FE69  6F                 	db	111	;'o'
  1094  00FE6A  70                 	db	112	;'p'
  1095  00FE6B  3F                 	db	63	;'?'
  1096  00FE6C  00                 	db	0
  1097  00FE6D                     STR_17:
  1098  00FE6D  49                 	db	73	;'I'
  1099  00FE6E  6E                 	db	110	;'n'
  1100  00FE6F  74                 	db	116	;'t'
  1101  00FE70  65                 	db	101	;'e'
  1102  00FE71  67                 	db	103	;'g'
  1103  00FE72  72                 	db	114	;'r'
  1104  00FE73  61                 	db	97	;'a'
  1105  00FE74  74                 	db	116	;'t'
  1106  00FE75  20                 	db	32
  1107  00FE76  52                 	db	82	;'R'
  1108  00FE77  65                 	db	101	;'e'
  1109  00FE78  73                 	db	115	;'s'
  1110  00FE79  65                 	db	101	;'e'
  1111  00FE7A  74                 	db	116	;'t'
  1112  00FE7B  65                 	db	101	;'e'
  1113  00FE7C  64                 	db	100	;'d'
  1114  00FE7D  00                 	db	0
  1115  00FE7E                     STR_16:
  1116  00FE7E  49                 	db	73	;'I'
  1117  00FE7F  6E                 	db	110	;'n'
  1118  00FE80  74                 	db	116	;'t'
  1119  00FE81  65                 	db	101	;'e'
  1120  00FE82  67                 	db	103	;'g'
  1121  00FE83  72                 	db	114	;'r'
  1122  00FE84  61                 	db	97	;'a'
  1123  00FE85  74                 	db	116	;'t'
  1124  00FE86  20                 	db	32
  1125  00FE87  52                 	db	82	;'R'
  1126  00FE88  65                 	db	101	;'e'
  1127  00FE89  73                 	db	115	;'s'
  1128  00FE8A  65                 	db	101	;'e'
  1129  00FE8B  74                 	db	116	;'t'
  1130  00FE8C  3F                 	db	63	;'?'
  1131  00FE8D  00                 	db	0
  1132  00FE8E                     STR_74:
  1133  00FE8E  69                 	db	105	;'i'
  1134  00FE8F  6E                 	db	110	;'n'
  1135  00FE90  74                 	db	116	;'t'
  1136  00FE91  65                 	db	101	;'e'
  1137  00FE92  67                 	db	103	;'g'
  1138  00FE93  72                 	db	114	;'r'
  1139  00FE94  61                 	db	97	;'a'
  1140  00FE95  74                 	db	116	;'t'
  1141  00FE96  65                 	db	101	;'e'
  1142  00FE97  64                 	db	100	;'d'
  1143  00FE98  5F                 	db	95	;'_'
  1144  00FE99  74                 	db	116	;'t'
  1145  00FE9A  69                 	db	105	;'i'
  1146  00FE9B  6D                 	db	109	;'m'
  1147  00FE9C  65                 	db	101	;'e'
  1148  00FE9D  00                 	db	0
  1149  00FE9E                     STR_19:
  1150  00FE9E  41                 	db	65	;'A'
  1151  00FE9F  6C                 	db	108	;'l'
  1152  00FEA0  77                 	db	119	;'w'
  1153  00FEA1  61                 	db	97	;'a'
  1154  00FEA2  79                 	db	121	;'y'
  1155  00FEA3  73                 	db	115	;'s'
  1156  00FEA4  20                 	db	32
  1157  00FEA5  43                 	db	67	;'C'
  1158  00FEA6  68                 	db	104	;'h'
  1159  00FEA7  61                 	db	97	;'a'
  1160  00FEA8  72                 	db	114	;'r'
  1161  00FEA9  67                 	db	103	;'g'
  1162  00FEAA  69                 	db	105	;'i'
  1163  00FEAB  6E                 	db	110	;'n'
  1164  00FEAC  67                 	db	103	;'g'
  1165  00FEAD  00                 	db	0
  1166  00FEAE                     STR_10:
  1167  00FEAE  53                 	db	83	;'S'
  1168  00FEAF  74                 	db	116	;'t'
  1169  00FEB0  61                 	db	97	;'a'
  1170  00FEB1  72                 	db	114	;'r'
  1171  00FEB2  74                 	db	116	;'t'
  1172  00FEB3  20                 	db	32
  1173  00FEB4  43                 	db	67	;'C'
  1174  00FEB5  68                 	db	104	;'h'
  1175  00FEB6  61                 	db	97	;'a'
  1176  00FEB7  72                 	db	114	;'r'
  1177  00FEB8  67                 	db	103	;'g'
  1178  00FEB9  69                 	db	105	;'i'
  1179  00FEBA  6E                 	db	110	;'n'
  1180  00FEBB  67                 	db	103	;'g'
  1181  00FEBC  00                 	db	0
  1182  00FEBD                     STR_24:
  1183  00FEBD  4E                 	db	78	;'N'
  1184  00FEBE  6F                 	db	111	;'o'
  1185  00FEBF  74                 	db	116	;'t'
  1186  00FEC0  68                 	db	104	;'h'
  1187  00FEC1  69                 	db	105	;'i'
  1188  00FEC2  6E                 	db	110	;'n'
  1189  00FEC3  67                 	db	103	;'g'
  1190  00FEC4  20                 	db	32
  1191  00FEC5  64                 	db	100	;'d'
  1192  00FEC6  6F                 	db	111	;'o'
  1193  00FEC7  6E                 	db	110	;'n'
  1194  00FEC8  65                 	db	101	;'e'
  1195  00FEC9  2E                 	db	46
  1196  00FECA  00                 	db	0
  1197  00FECB                     STR_9:
  1198  00FECB  4D                 	db	77	;'M'
  1199  00FECC  61                 	db	97	;'a'
  1200  00FECD  64                 	db	100	;'d'
  1201  00FECE  65                 	db	101	;'e'
  1202  00FECF  20                 	db	32
  1203  00FED0  62                 	db	98	;'b'
  1204  00FED1  79                 	db	121	;'y'
  1205  00FED2  20                 	db	32
  1206  00FED3  4B                 	db	75	;'K'
  1207  00FED4  45                 	db	69	;'E'
  1208  00FED5  52                 	db	82	;'R'
  1209  00FED6  49                 	db	73	;'I'
  1210  00FED7  00                 	db	0
  1211  00FED8                     STR_20:
  1212  00FED8  41                 	db	65	;'A'
  1213  00FED9  75                 	db	117	;'u'
  1214  00FEDA  74                 	db	116	;'t'
  1215  00FEDB  6F                 	db	111	;'o'
  1216  00FEDC  20                 	db	32
  1217  00FEDD  53                 	db	83	;'S'
  1218  00FEDE  74                 	db	116	;'t'
  1219  00FEDF  6F                 	db	111	;'o'
  1220  00FEE0  70                 	db	112	;'p'
  1221  00FEE1  20                 	db	32
  1222  00FEE2  4F                 	db	79	;'O'
  1223  00FEE3  4E                 	db	78	;'N'
  1224  00FEE4  00                 	db	0
  1225  00FEE5                     STR_21:
  1226  00FEE5  54                 	db	84	;'T'
  1227  00FEE6  6F                 	db	111	;'o'
  1228  00FEE7  67                 	db	103	;'g'
  1229  00FEE8  67                 	db	103	;'g'
  1230  00FEE9  6C                 	db	108	;'l'
  1231  00FEEA  65                 	db	101	;'e'
  1232  00FEEB  20                 	db	32
  1233  00FEEC  4C                 	db	76	;'L'
  1234  00FEED  45                 	db	69	;'E'
  1235  00FEEE  44                 	db	68	;'D'
  1236  00FEEF  3F                 	db	63	;'?'
  1237  00FEF0  00                 	db	0
  1238  00FEF1                     STR_5:
  1239  00FEF1  43                 	db	67	;'C'
  1240  00FEF2  45                 	db	69	;'E'
  1241  00FEF3  4E                 	db	78	;'N'
  1242  00FEF4  54                 	db	84	;'T'
  1243  00FEF5  45                 	db	69	;'E'
  1244  00FEF6  52                 	db	82	;'R'
  1245  00FEF7  20                 	db	32
  1246  00FEF8  50                 	db	80	;'P'
  1247  00FEF9  4F                 	db	79	;'O'
  1248  00FEFA  52                 	db	82	;'R'
  1249  00FEFB  54                 	db	84	;'T'
  1250  00FEFC  00                 	db	0
  1251  00FEFD                     STR_51:
  1252  00FEFD  61                 	db	97	;'a'
  1253  00FEFE  64                 	db	100	;'d'
  1254  00FEFF  6A                 	db	106	;'j'
  1255  00FF00  75                 	db	117	;'u'
  1256  00FF01  73                 	db	115	;'s'
  1257  00FF02  74                 	db	116	;'t'
  1258  00FF03  5F                 	db	95	;'_'
  1259  00FF04  74                 	db	116	;'t'
  1260  00FF05  69                 	db	105	;'i'
  1261  00FF06  6D                 	db	109	;'m'
  1262  00FF07  65                 	db	101	;'e'
  1263  00FF08  00                 	db	0
  1264  00FF09                     STR_4:
  1265  00FF09  43                 	db	67	;'C'
  1266  00FF0A  65                 	db	101	;'e'
  1267  00FF0B  6E                 	db	110	;'n'
  1268  00FF0C  74                 	db	116	;'t'
  1269  00FF0D  65                 	db	101	;'e'
  1270  00FF0E  72                 	db	114	;'r'
  1271  00FF0F  20                 	db	32
  1272  00FF10  50                 	db	80	;'P'
  1273  00FF11  6F                 	db	111	;'o'
  1274  00FF12  72                 	db	114	;'r'
  1275  00FF13  74                 	db	116	;'t'
  1276  00FF14  00                 	db	0
  1277  00FF15                     STR_7:
  1278  00FF15  52                 	db	82	;'R'
  1279  00FF16  49                 	db	73	;'I'
  1280  00FF17  47                 	db	71	;'G'
  1281  00FF18  48                 	db	72	;'H'
  1282  00FF19  54                 	db	84	;'T'
  1283  00FF1A  20                 	db	32
  1284  00FF1B  50                 	db	80	;'P'
  1285  00FF1C  4F                 	db	79	;'O'
  1286  00FF1D  52                 	db	82	;'R'
  1287  00FF1E  54                 	db	84	;'T'
  1288  00FF1F  00                 	db	0
  1289  00FF20                     STR_92:
  1290  00FF20  70                 	db	112	;'p'
  1291  00FF21  72                 	db	114	;'r'
  1292  00FF22  69                 	db	105	;'i'
  1293  00FF23  6E                 	db	110	;'n'
  1294  00FF24  74                 	db	116	;'t'
  1295  00FF25  5F                 	db	95	;'_'
  1296  00FF26  74                 	db	116	;'t'
  1297  00FF27  69                 	db	105	;'i'
  1298  00FF28  6D                 	db	109	;'m'
  1299  00FF29  65                 	db	101	;'e'
  1300  00FF2A  00                 	db	0
  1301  00FF2B                     STR_59:
  1302  00FF2B  69                 	db	105	;'i'
  1303  00FF2C  6E                 	db	110	;'n'
  1304  00FF2D  69                 	db	105	;'i'
  1305  00FF2E  74                 	db	116	;'t'
  1306  00FF2F  69                 	db	105	;'i'
  1307  00FF30  61                 	db	97	;'a'
  1308  00FF31  6C                 	db	108	;'l'
  1309  00FF32  69                 	db	105	;'i'
  1310  00FF33  7A                 	db	122	;'z'
  1311  00FF34  65                 	db	101	;'e'
  1312  00FF35  00                 	db	0
  1313  00FF36                     STR_6:
  1314  00FF36  52                 	db	82	;'R'
  1315  00FF37  69                 	db	105	;'i'
  1316  00FF38  67                 	db	103	;'g'
  1317  00FF39  68                 	db	104	;'h'
  1318  00FF3A  74                 	db	116	;'t'
  1319  00FF3B  20                 	db	32
  1320  00FF3C  50                 	db	80	;'P'
  1321  00FF3D  6F                 	db	111	;'o'
  1322  00FF3E  72                 	db	114	;'r'
  1323  00FF3F  74                 	db	116	;'t'
  1324  00FF40  00                 	db	0
  1325  00FF41                     STR_3:
  1326  00FF41  4C                 	db	76	;'L'
  1327  00FF42  45                 	db	69	;'E'
  1328  00FF43  46                 	db	70	;'F'
  1329  00FF44  54                 	db	84	;'T'
  1330  00FF45  20                 	db	32
  1331  00FF46  50                 	db	80	;'P'
  1332  00FF47  4F                 	db	79	;'O'
  1333  00FF48  52                 	db	82	;'R'
  1334  00FF49  54                 	db	84	;'T'
  1335  00FF4A  00                 	db	0
  1336  00FF4B                     STR_47:
  1337  00FF4B  61                 	db	97	;'a'
  1338  00FF4C  75                 	db	117	;'u'
  1339  00FF4D  74                 	db	116	;'t'
  1340  00FF4E  6F                 	db	111	;'o'
  1341  00FF4F  5F                 	db	95	;'_'
  1342  00FF50  73                 	db	115	;'s'
  1343  00FF51  74                 	db	116	;'t'
  1344  00FF52  6F                 	db	111	;'o'
  1345  00FF53  70                 	db	112	;'p'
  1346  00FF54  00                 	db	0
  1347  00FF55                     STR_2:
  1348  00FF55  4C                 	db	76	;'L'
  1349  00FF56  65                 	db	101	;'e'
  1350  00FF57  66                 	db	102	;'f'
  1351  00FF58  74                 	db	116	;'t'
  1352  00FF59  20                 	db	32
  1353  00FF5A  50                 	db	80	;'P'
  1354  00FF5B  6F                 	db	111	;'o'
  1355  00FF5C  72                 	db	114	;'r'
  1356  00FF5D  74                 	db	116	;'t'
  1357  00FF5E  00                 	db	0
  1358  00FF5F                     STR_48:
  1359  00FF5F  52                 	db	82	;'R'
  1360  00FF60  45                 	db	69	;'E'
  1361  00FF61  53                 	db	83	;'S'
  1362  00FF62  45                 	db	69	;'E'
  1363  00FF63  54                 	db	84	;'T'
  1364  00FF64  28                 	db	40
  1365  00FF65  29                 	db	41
  1366  00FF66  3B                 	db	59	;';'
  1367  00FF67  00                 	db	0
  1368  00FF68                     STR_98:
  1369  00FF68  53                 	db	83	;'S'
  1370  00FF69  4C                 	db	76	;'L'
  1371  00FF6A  45                 	db	69	;'E'
  1372  00FF6B  45                 	db	69	;'E'
  1373  00FF6C  50                 	db	80	;'P'
  1374  00FF6D  49                 	db	73	;'I'
  1375  00FF6E  4E                 	db	78	;'N'
  1376  00FF6F  47                 	db	71	;'G'
  1377  00FF70  00                 	db	0
  1378  00FF71                     STR_49:
  1379  00FF71  62                 	db	98	;'b'
  1380  00FF72  6F                 	db	111	;'o'
  1381  00FF73  6F                 	db	111	;'o'
  1382  00FF74  74                 	db	116	;'t'
  1383  00FF75  6C                 	db	108	;'l'
  1384  00FF76  6F                 	db	111	;'o'
  1385  00FF77  61                 	db	97	;'a'
  1386  00FF78  64                 	db	100	;'d'
  1387  00FF79  00                 	db	0
  1388  00FF7A                     STR_45:
  1389  00FF7A  73                 	db	115	;'s'
  1390  00FF7B  65                 	db	101	;'e'
  1391  00FF7C  74                 	db	116	;'t'
  1392  00FF7D  74                 	db	116	;'t'
  1393  00FF7E  69                 	db	105	;'i'
  1394  00FF7F  6E                 	db	110	;'n'
  1395  00FF80  67                 	db	103	;'g'
  1396  00FF81  73                 	db	115	;'s'
  1397  00FF82  00                 	db	0
  1398  00FF83                     STR_32:
  1399  00FF83  09                 	db	9
  1400  00FF84  65                 	db	101	;'e'
  1401  00FF85  72                 	db	114	;'r'
  1402  00FF86  72                 	db	114	;'r'
  1403  00FF87  6F                 	db	111	;'o'
  1404  00FF88  72                 	db	114	;'r'
  1405  00FF89  0A                 	db	10
  1406  00FF8A  00                 	db	0
  1407  00FF8B                     STR_23:
  1408  00FF8B  4C                 	db	76	;'L'
  1409  00FF8C  45                 	db	69	;'E'
  1410  00FF8D  44                 	db	68	;'D'
  1411  00FF8E  20                 	db	32
  1412  00FF8F  4F                 	db	79	;'O'
  1413  00FF90  46                 	db	70	;'F'
  1414  00FF91  46                 	db	70	;'F'
  1415  00FF92  00                 	db	0
  1416  00FF93                     STR_66:
  1417  00FF93  64                 	db	100	;'d'
  1418  00FF94  69                 	db	105	;'i'
  1419  00FF95  73                 	db	115	;'s'
  1420  00FF96  70                 	db	112	;'p'
  1421  00FF97  6C                 	db	108	;'l'
  1422  00FF98  61                 	db	97	;'a'
  1423  00FF99  79                 	db	121	;'y'
  1424  00FF9A  00                 	db	0
  1425  00FF9B                     STR_22:
  1426  00FF9B  4C                 	db	76	;'L'
  1427  00FF9C  45                 	db	69	;'E'
  1428  00FF9D  44                 	db	68	;'D'
  1429  00FF9E  20                 	db	32
  1430  00FF9F  4F                 	db	79	;'O'
  1431  00FFA0  4E                 	db	78	;'N'
  1432  00FFA1  00                 	db	0
  1433  00FFA2                     STR_76:
  1434  00FFA2  63                 	db	99	;'c'
  1435  00FFA3  65                 	db	101	;'e'
  1436  00FFA4  6E                 	db	110	;'n'
  1437  00FFA5  74                 	db	116	;'t'
  1438  00FFA6  65                 	db	101	;'e'
  1439  00FFA7  72                 	db	114	;'r'
  1440  00FFA8  00                 	db	0
  1441  00FFA9                     STR_58:
  1442  00FFA9  74                 	db	116	;'t'
  1443  00FFAA  6F                 	db	111	;'o'
  1444  00FFAB  75                 	db	117	;'u'
  1445  00FFAC  63                 	db	99	;'c'
  1446  00FFAD  68                 	db	104	;'h'
  1447  00FFAE  00                 	db	0
  1448  00FFAF                     STR_63:
  1449  00FFAF  72                 	db	114	;'r'
  1450  00FFB0  65                 	db	101	;'e'
  1451  00FFB1  73                 	db	115	;'s'
  1452  00FFB2  65                 	db	101	;'e'
  1453  00FFB3  74                 	db	116	;'t'
  1454  00FFB4  00                 	db	0
  1455  00FFB5                     STR_84:
  1456  00FFB5  72                 	db	114	;'r'
  1457  00FFB6  69                 	db	105	;'i'
  1458  00FFB7  67                 	db	103	;'g'
  1459  00FFB8  68                 	db	104	;'h'
  1460  00FFB9  74                 	db	116	;'t'
  1461  00FFBA  00                 	db	0
  1462  00FFBB                     STR_36:
  1463  00FFBB  6D                 	db	109	;'m'
  1464  00FFBC  41                 	db	65	;'A'
  1465  00FFBD  68                 	db	104	;'h'
  1466  00FFBE  0A                 	db	10
  1467  00FFBF  00                 	db	0
  1468  00FFC0                     STR_42:
  1469  00FFC0  68                 	db	104	;'h'
  1470  00FFC1  65                 	db	101	;'e'
  1471  00FFC2  6C                 	db	108	;'l'
  1472  00FFC3  70                 	db	112	;'p'
  1473  00FFC4  00                 	db	0
  1474  00FFC5                     STR_68:
  1475  00FFC5  6C                 	db	108	;'l'
  1476  00FFC6  65                 	db	101	;'e'
  1477  00FFC7  66                 	db	102	;'f'
  1478  00FFC8  74                 	db	116	;'t'
  1479  00FFC9  00                 	db	0
  1480  00FFCA                     STR_60:
  1481  00FFCA  69                 	db	105	;'i'
  1482  00FFCB  6E                 	db	110	;'n'
  1483  00FFCC  69                 	db	105	;'i'
  1484  00FFCD  74                 	db	116	;'t'
  1485  00FFCE  00                 	db	0
  1486  00FFCF                     STR_95:
  1487  00FFCF  08                 	db	8
  1488  00FFD0  20                 	db	32
  1489  00FFD1  08                 	db	8
  1490  00FFD2  00                 	db	0
  1491  00FFD3                     STR_11:
  1492  00FFD3  6D                 	db	109	;'m'
  1493  00FFD4  41                 	db	65	;'A'
  1494  00FFD5  68                 	db	104	;'h'
  1495  00FFD6  00                 	db	0
  1496  00FFD7                     STR_34:
  1497  00FFD7  41                 	db	65	;'A'
  1498  00FFD8  0A                 	db	10
  1499  00FFD9  00                 	db	0
  1500  00FFDA                     STR_1:
  1501  00FFDA  20                 	db	32
  1502  00FFDB  20                 	db	32
  1503  00FFDC  00                 	db	0
  1504  00FFDD                     STR_30:
  1505  00FFDD  29                 	db	41
  1506  00FFDE  20                 	db	32
  1507  00FFDF  00                 	db	0
  1508  00FFE0                     STR_12:
  1509  00FFE0  64                 	db	100	;'d'
  1510  00FFE1  20                 	db	32
  1511  00FFE2  00                 	db	0
  1512  00FFE3                     STR_13:
  1513  00FFE3  68                 	db	104	;'h'
  1514  00FFE4  20                 	db	32
  1515  00FFE5  00                 	db	0
  1516  00FFE6                     STR_14:
  1517  00FFE6  6D                 	db	109	;'m'
  1518  00FFE7  20                 	db	32
  1519  00FFE8  00                 	db	0
  1520  00FFE9                     STR_29:
  1521  00FFE9  20                 	db	32
  1522  00FFEA  28                 	db	40
  1523  00FFEB  00                 	db	0
  1524  00FFEC                     STR_73:
  1525  00FFEC  69                 	db	105	;'i'
  1526  00FFED  63                 	db	99	;'c'
  1527  00FFEE  00                 	db	0
  1528  00FFEF                     STR_50:
  1529  00FFEF  61                 	db	97	;'a'
  1530  00FFF0  74                 	db	116	;'t'
  1531  00FFF1  00                 	db	0
  1532  00FFF2                     STR_26:
  1533  00FFF2  09                 	db	9
  1534  00FFF3  00                 	db	0
  1535  00FFF4                     STR_31:
  1536  00FFF4  2D                 	db	45
  1537  00FFF5  00                 	db	0
  1538  00FFF6                     STR_27:
  1539  00FFF6  2F                 	db	47
  1540  00FFF7  00                 	db	0
  1541  00FFF8                     STR_53:
  1542  00FFF8  4D                 	db	77	;'M'
  1543  00FFF9  00                 	db	0
  1544  00FFFA                     STR_69:
  1545  00FFFA  6C                 	db	108	;'l'
  1546  00FFFB  00                 	db	0
  1547  00FFFC                     STR_56:
  1548  00FFFC  6D                 	db	109	;'m'
  1549  00FFFD  00                 	db	0
  1550  0000                     
  1551                           ; #config settings
  1552  00FFFE  00                 	db	0	; dummy byte at the end
  1553  0000                     
  1554                           	psect	cinit
  1555  015782                     __pcinit:
  1556                           	opt stack 0
  1557  015782                     start_initialization:
  1558                           	opt stack 0
  1559  015782                     __initialization:
  1560                           	opt stack 0
  1561                           
  1562                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1563  015782  EE04  F0A4         	lfsr	0,__pbssBIGRAMl
  1564  015786  EE17 F0D0          	lfsr	1,2000
  1565  01578A                     clear_0:
  1566  01578A  6AEE               	clrf	postinc0,c
  1567  01578C  50E5               	movf	postdec1,w,c
  1568  01578E  50E1               	movf	fsr1l,w,c
  1569  015790  E1FC               	bnz	clear_0
  1570  015792  50E2               	movf	fsr1h,w,c
  1571  015794  E1FA               	bnz	clear_0
  1572                           
  1573                           ; Clear objects allocated to BANK4 (164 bytes)
  1574  015796  EE04  F000         	lfsr	0,__pbssBANK4
  1575  01579A  0EA4               	movlw	164
  1576  01579C                     clear_1:
  1577  01579C  6AEE               	clrf	postinc0,c
  1578  01579E  06E8               	decf	wreg,f,c
  1579  0157A0  E1FD               	bnz	clear_1
  1580                           
  1581                           ; Clear objects allocated to BANK3 (133 bytes)
  1582  0157A2  EE03  F000         	lfsr	0,__pbssBANK3
  1583  0157A6  0E85               	movlw	133
  1584  0157A8                     clear_2:
  1585  0157A8  6AEE               	clrf	postinc0,c
  1586  0157AA  06E8               	decf	wreg,f,c
  1587  0157AC  E1FD               	bnz	clear_2
  1588                           
  1589                           ; Clear objects allocated to BANK2 (38 bytes)
  1590  0157AE  EE02  F0CD         	lfsr	0,__pbssBANK2
  1591  0157B2  0E26               	movlw	38
  1592  0157B4                     clear_3:
  1593  0157B4  6AEE               	clrf	postinc0,c
  1594  0157B6  06E8               	decf	wreg,f,c
  1595  0157B8  E1FD               	bnz	clear_3
  1596                           
  1597                           ; Clear objects allocated to BANK1 (54 bytes)
  1598  0157BA  EE01  F0C9         	lfsr	0,__pbssBANK1
  1599  0157BE  0E36               	movlw	54
  1600  0157C0                     clear_4:
  1601  0157C0  6AEE               	clrf	postinc0,c
  1602  0157C2  06E8               	decf	wreg,f,c
  1603  0157C4  E1FD               	bnz	clear_4
  1604                           
  1605                           ; Clear objects allocated to BANK0 (85 bytes)
  1606  0157C6  EE00  F060         	lfsr	0,__pbssBANK0
  1607  0157CA  0E55               	movlw	85
  1608  0157CC                     clear_5:
  1609  0157CC  6AEE               	clrf	postinc0,c
  1610  0157CE  06E8               	decf	wreg,f,c
  1611  0157D0  E1FD               	bnz	clear_5
  1612                           
  1613                           ; Clear objects allocated to COMRAM (43 bytes)
  1614  0157D2  EE00  F02D         	lfsr	0,__pbssCOMRAM
  1615  0157D6  0E2B               	movlw	43
  1616  0157D8                     clear_6:
  1617  0157D8  6AEE               	clrf	postinc0,c
  1618  0157DA  06E8               	decf	wreg,f,c
  1619  0157DC  E1FD               	bnz	clear_6
  1620                           
  1621                           ; Initialize objects allocated to BANK1 (1 bytes)
  1622                           ; load TBLPTR registers with __pidataBANK1
  1623  0157DE  0E05               	movlw	low __pidataBANK1
  1624  0157E0  6EF6               	movwf	tblptrl,c
  1625  0157E2  0E6B               	movlw	high __pidataBANK1
  1626  0157E4  6EF7               	movwf	tblptrh,c
  1627  0157E6  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1628  0157E8  6EF8               	movwf	tblptru,c
  1629  0157EA  0009               	tblrd		*+	;fetch initializer
  1630  0157EC  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1631                           
  1632                           ; Initialize objects allocated to BANK0 (3 bytes)
  1633                           ; load TBLPTR registers with __pidataBANK0
  1634  0157F0  0E02               	movlw	low __pidataBANK0
  1635  0157F2  6EF6               	movwf	tblptrl,c
  1636  0157F4  0E6B               	movlw	high __pidataBANK0
  1637  0157F6  6EF7               	movwf	tblptrh,c
  1638  0157F8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1639  0157FA  6EF8               	movwf	tblptru,c
  1640  0157FC  0009               	tblrd		*+	;fetch initializer
  1641  0157FE  CFF5 F0FD          	movff	tablat,__pdataBANK0
  1642  015802  0009               	tblrd		*+	;fetch initializer
  1643  015804  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
  1644  015808  0009               	tblrd		*+	;fetch initializer
  1645  01580A  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
  1646  01580E                     end_of_initialization:
  1647                           	opt stack 0
  1648  01580E                     __end_of__initialization:
  1649                           	opt stack 0
  1650  01580E  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1651  015810  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1652  015812  0100               	movlb	0
  1653  015814  EFC1  F094         	goto	_main	;jump to C main() function
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           postdec1	equ	0xFE5
  1661                           fsr1h	equ	0xFE2
  1662                           fsr1l	equ	0xFE1
  1663                           
  1664                           	psect	bssCOMRAM
  1665  00002D                     __pbssCOMRAM:
  1666                           	opt stack 0
  1667  00002D                     LED_indicator@cnt:
  1668                           	opt stack 0
  1669  00002D                     	ds	3
  1670  000030                     LED_indicator@cntf:
  1671                           	opt stack 0
  1672  000030                     	ds	3
  1673  000033                     ISR@cnt_t0:
  1674                           	opt stack 0
  1675  000033                     	ds	2
  1676  000035                     USBCBSendResume@delay_count:
  1677                           	opt stack 0
  1678  000035                     	ds	2
  1679  000037                     _pBDTEntryEP0OutCurrent:
  1680                           	opt stack 0
  1681  000037                     	ds	2
  1682  000039                     _pBDTEntryEP0OutNext:
  1683                           	opt stack 0
  1684  000039                     	ds	2
  1685  00003B                     _pDst:
  1686                           	opt stack 0
  1687  00003B                     	ds	2
  1688  00003D                     millis_timer@cnt:
  1689                           	opt stack 0
  1690  00003D                     	ds	2
  1691  00003F                     ISR@cnt_t1:
  1692                           	opt stack 0
  1693  00003F                     	ds	1
  1694  000040                     _BothEP0OutUOWNsSet:
  1695                           	opt stack 0
  1696  000040                     	ds	1
  1697  000041                     _RemoteWakeup:
  1698                           	opt stack 0
  1699  000041                     	ds	1
  1700  000042                     _USBDeferINDataStagePackets:
  1701                           	opt stack 0
  1702  000042                     	ds	1
  1703  000043                     _USBDeferOUTDataStagePackets:
  1704                           	opt stack 0
  1705  000043                     	ds	1
  1706  000044                     _USBDeferStatusStagePacket:
  1707                           	opt stack 0
  1708  000044                     	ds	1
  1709  000045                     _USBDeviceState:
  1710                           	opt stack 0
  1711  000045                     	ds	1
  1712  000046                     _USBStatusStageEnabledFlag1:
  1713                           	opt stack 0
  1714  000046                     	ds	1
  1715  000047                     _USBStatusStageEnabledFlag2:
  1716                           	opt stack 0
  1717  000047                     	ds	1
  1718  000048                     _USBStatusStageTimeoutCounter:
  1719                           	opt stack 0
  1720  000048                     	ds	1
  1721  000049                     _controlTransferState:
  1722                           	opt stack 0
  1723  000049                     	ds	1
  1724  00004A                     _control_signal_bitmap:
  1725                           	opt stack 0
  1726  00004A                     	ds	1
  1727  00004B                     _cut_time_flag:
  1728                           	opt stack 0
  1729  00004B                     	ds	1
  1730  00004C                     _display_flag:
  1731                           	opt stack 0
  1732  00004C                     	ds	1
  1733  00004D                     _endpoint_number:
  1734                           	opt stack 0
  1735  00004D                     	ds	1
  1736  00004E                     _next_print_content:
  1737                           	opt stack 0
  1738  00004E                     	ds	1
  1739  00004F                     _shortPacketStatus:
  1740                           	opt stack 0
  1741  00004F                     	ds	1
  1742  000050                     _time_change_flag:
  1743                           	opt stack 0
  1744  000050                     	ds	1
  1745  000051                     _delay_display:
  1746                           	opt stack 0
  1747  000051                     	ds	3
  1748  000054                     _USBAlternateInterface:
  1749                           	opt stack 0
  1750  000054                     	ds	2
  1751  000056                     _USBActiveConfiguration:
  1752                           	opt stack 0
  1753  000056                     	ds	1
  1754  000057                     _USTATcopy:
  1755                           	opt stack 0
  1756  000057                     	ds	1
  1757                           tblptru	equ	0xFF8
  1758                           tblptrh	equ	0xFF7
  1759                           tblptrl	equ	0xFF6
  1760                           tablat	equ	0xFF5
  1761                           postinc0	equ	0xFEE
  1762                           wreg	equ	0xFE8
  1763                           postdec1	equ	0xFE5
  1764                           fsr1h	equ	0xFE2
  1765                           fsr1l	equ	0xFE1
  1766                           
  1767                           	psect	bssBANK0
  1768  000060                     __pbssBANK0:
  1769                           	opt stack 0
  1770  000060                     _outPipes:
  1771                           	opt stack 0
  1772  000060                     	ds	9
  1773  000069                     _inPipes:
  1774                           	opt stack 0
  1775  000069                     	ds	6
  1776  00006F                     _pBDTEntryIn:
  1777                           	opt stack 0
  1778  00006F                     	ds	6
  1779  000075                     _pBDTEntryOut:
  1780                           	opt stack 0
  1781  000075                     	ds	6
  1782  00007B                     _ep_data_in:
  1783                           	opt stack 0
  1784  00007B                     	ds	3
  1785  00007E                     _ep_data_out:
  1786                           	opt stack 0
  1787  00007E                     	ds	3
  1788  000081                     _pCDCDst:
  1789                           	opt stack 0
  1790  000081                     	ds	3
  1791  000084                     _pCDCSrc:
  1792                           	opt stack 0
  1793  000084                     	ds	3
  1794  000087                     _CDCDataInHandle:
  1795                           	opt stack 0
  1796  000087                     	ds	2
  1797  000089                     _CDCDataOutHandle:
  1798                           	opt stack 0
  1799  000089                     	ds	2
  1800  00008B                     _ctmu_value_m:
  1801                           	opt stack 0
  1802  00008B                     	ds	2
  1803  00008D                     epoch_to_caltime@day_cache:
  1804                           	opt stack 0
  1805  00008D                     	ds	2
  1806  00008F                     RTCC_loop@prev_halfsec:
  1807                           	opt stack 0
  1808  00008F                     	ds	1
  1809  000090                     _USBBusIsSuspended:
  1810                           	opt stack 0
  1811  000090                     	ds	1
  1812  000091                     _cdc_mem_type:
  1813                           	opt stack 0
  1814  000091                     	ds	1
  1815  000092                     _cdc_rx_len:
  1816                           	opt stack 0
  1817  000092                     	ds	1
  1818  000093                     _cdc_trf_state:
  1819                           	opt stack 0
  1820  000093                     	ds	1
  1821  000094                     _cdc_tx_len:
  1822                           	opt stack 0
  1823  000094                     	ds	1
  1824  000095                     _colon:
  1825                           	opt stack 0
  1826  000095                     	ds	1
  1827  000096                     _ctmu_flag:
  1828                           	opt stack 0
  1829  000096                     	ds	1
  1830  000097                     _ctmu_ratio:
  1831                           	opt stack 0
  1832  000097                     	ds	1
  1833  000098                     _edit_flag:
  1834                           	opt stack 0
  1835  000098                     	ds	1
  1836  000099                     _halfsec:
  1837                           	opt stack 0
  1838  000099                     	ds	1
  1839  00009A                     _print_content:
  1840                           	opt stack 0
  1841  00009A                     	ds	1
  1842  00009B                     _print_port:
  1843                           	opt stack 0
  1844  00009B                     	ds	1
  1845  00009C                     _sleep_flag:
  1846                           	opt stack 0
  1847  00009C                     	ds	1
  1848  00009D                     epoch_to_caltime@year_cache:
  1849                           	opt stack 0
  1850  00009D                     	ds	1
  1851  00009E                     _tx_buf:
  1852                           	opt stack 0
  1853  00009E                     	ds	8
  1854  0000A6                     _caltime_now:
  1855                           	opt stack 0
  1856  0000A6                     	ds	7
  1857  0000AD                     _ctmu_m:
  1858                           	opt stack 0
  1859  0000AD                     	ds	4
  1860  0000B1                     _epoch_now:
  1861                           	opt stack 0
  1862  0000B1                     	ds	4
  1863                           tblptru	equ	0xFF8
  1864                           tblptrh	equ	0xFF7
  1865                           tblptrl	equ	0xFF6
  1866                           tablat	equ	0xFF5
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           postdec1	equ	0xFE5
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           
  1873                           	psect	dataBANK0
  1874  0000FD                     __pdataBANK0:
  1875                           	opt stack 0
  1876  0000FD                     I2C_LCD_SetCursor@F8672:
  1877                           	opt stack 0
  1878  0000FD                     	ds	2
  1879  0000FF                     epoch_to_caltime@month_cache:
  1880                           	opt stack 0
  1881  0000FF                     	ds	1
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           postinc0	equ	0xFEE
  1887                           wreg	equ	0xFE8
  1888                           postdec1	equ	0xFE5
  1889                           fsr1h	equ	0xFE2
  1890                           fsr1l	equ	0xFE1
  1891                           
  1892                           	psect	bssBANK1
  1893  0001C9                     __pbssBANK1:
  1894                           	opt stack 0
  1895  0001C9                     integrating@ic_cache:
  1896                           	opt stack 0
  1897  0001C9                     	ds	12
  1898  0001D5                     _BaudRateGen:
  1899                           	opt stack 0
  1900  0001D5                     	ds	4
  1901  0001D9                     _ms:
  1902                           	opt stack 0
  1903  0001D9                     	ds	4
  1904  0001DD                     _d1:
  1905                           	opt stack 0
  1906  0001DD                     	ds	3
  1907  0001E0                     _dummy_encapsulated_cmd_response:
  1908                           	opt stack 0
  1909  0001E0                     	ds	8
  1910  0001E8                     _rx_buf:
  1911                           	opt stack 0
  1912  0001E8                     	ds	8
  1913  0001F0                     rx_loop@comm_buf:
  1914                           	opt stack 0
  1915  0001F0                     	ds	8
  1916  0001F8                     _line_coding:
  1917                           	opt stack 0
  1918  0001F8                     	ds	7
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           postinc0	equ	0xFEE
  1924                           wreg	equ	0xFE8
  1925                           postdec1	equ	0xFE5
  1926                           fsr1h	equ	0xFE2
  1927                           fsr1l	equ	0xFE1
  1928                           
  1929                           	psect	dataBANK1
  1930  0001FF                     __pdataBANK1:
  1931                           	opt stack 0
  1932  0001FF                     rx_loop@comm_buf_init:
  1933                           	opt stack 0
  1934  0001FF                     	ds	1
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           postinc0	equ	0xFEE
  1940                           wreg	equ	0xFE8
  1941                           postdec1	equ	0xFE5
  1942                           fsr1h	equ	0xFE2
  1943                           fsr1l	equ	0xFE1
  1944                           
  1945                           	psect	bssBANK2
  1946  0002CD                     __pbssBANK2:
  1947                           	opt stack 0
  1948  0002CD                     charge_time_count@it_cache:
  1949                           	opt stack 0
  1950  0002CD                     	ds	12
  1951  0002D9                     _cdc_notice:
  1952                           	opt stack 0
  1953  0002D9                     	ds	10
  1954  0002E3                     _usb_rx:
  1955                           	opt stack 0
  1956  0002E3                     	ds	8
  1957  0002EB                     _usb_tx:
  1958                           	opt stack 0
  1959  0002EB                     	ds	8
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           postdec1	equ	0xFE5
  1967                           fsr1h	equ	0xFE2
  1968                           fsr1l	equ	0xFE1
  1969                           
  1970                           	psect	bssBANK3
  1971  000300                     __pbssBANK3:
  1972                           	opt stack 0
  1973  000300                     _port:
  1974                           	opt stack 0
  1975  000300                     	ds	69
  1976  000345                     _cdc_data_rx:
  1977                           	opt stack 0
  1978  000345                     	ds	64
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           postinc0	equ	0xFEE
  1984                           wreg	equ	0xFE8
  1985                           postdec1	equ	0xFE5
  1986                           fsr1h	equ	0xFE2
  1987                           fsr1l	equ	0xFE1
  1988                           
  1989                           	psect	bssBANK4
  1990  000400                     __pbssBANK4:
  1991                           	opt stack 0
  1992  000400                     main_init@rxbuf:
  1993                           	opt stack 0
  1994  000400                     	ds	100
  1995  000464                     _cdc_data_tx:
  1996                           	opt stack 0
  1997  000464                     	ds	64
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1h	equ	0xFE2
  2006                           fsr1l	equ	0xFE1
  2007                           
  2008                           	psect	bssBIGRAMl
  2009  0004A4                     __pbssBIGRAMl:
  2010                           	opt stack 0
  2011  0004A4                     main_init@txbuf:
  2012                           	opt stack 0
  2013  0004A4                     	ds	2000
  2014                           tblptru	equ	0xFF8
  2015                           tblptrh	equ	0xFF7
  2016                           tblptrl	equ	0xFF6
  2017                           tablat	equ	0xFF5
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           postdec1	equ	0xFE5
  2021                           fsr1h	equ	0xFE2
  2022                           fsr1l	equ	0xFE1
  2023                           
  2024                           	psect	cstackBANK3
  2025  000385                     __pcstackBANK3:
  2026                           	opt stack 0
  2027  000385                     rx_loop@opland2:
  2028                           	opt stack 0
  2029                           
  2030                           ; 100 bytes @ 0x0
  2031  000385                     	ds	100
  2032                           tblptru	equ	0xFF8
  2033                           tblptrh	equ	0xFF7
  2034                           tblptrl	equ	0xFF6
  2035                           tablat	equ	0xFF5
  2036                           postinc0	equ	0xFEE
  2037                           wreg	equ	0xFE8
  2038                           postdec1	equ	0xFE5
  2039                           fsr1h	equ	0xFE2
  2040                           fsr1l	equ	0xFE1
  2041                           
  2042                           	psect	cstackBANK2
  2043  000200                     __pcstackBANK2:
  2044                           	opt stack 0
  2045  000200                     rx_loop@opland3:
  2046                           	opt stack 0
  2047                           
  2048                           ; 100 bytes @ 0x0
  2049  000200                     	ds	100
  2050  000264                     rx_loop@opland1:
  2051                           	opt stack 0
  2052                           
  2053                           ; 100 bytes @ 0x64
  2054  000264                     	ds	100
  2055  0002C8                     _rx_loop$5269:
  2056                           	opt stack 0
  2057                           
  2058                           ; 2 bytes @ 0xC8
  2059  0002C8                     	ds	2
  2060  0002CA                     rx_loop@ascii:
  2061                           	opt stack 0
  2062                           
  2063                           ; 1 bytes @ 0xCA
  2064  0002CA                     	ds	1
  2065  0002CB                     rx_loop@i:
  2066                           	opt stack 0
  2067                           
  2068                           ; 1 bytes @ 0xCB
  2069  0002CB                     	ds	1
  2070  0002CC                     main@i:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0xCC
  2074  0002CC                     	ds	1
  2075                           tblptru	equ	0xFF8
  2076                           tblptrh	equ	0xFF7
  2077                           tblptrl	equ	0xFF6
  2078                           tablat	equ	0xFF5
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           postdec1	equ	0xFE5
  2082                           fsr1h	equ	0xFE2
  2083                           fsr1l	equ	0xFE1
  2084                           
  2085                           	psect	cstackBANK1
  2086  000100                     __pcstackBANK1:
  2087                           	opt stack 0
  2088  000100                     display_LCD@str:
  2089                           	opt stack 0
  2090  000100                     rx_loop@buf:
  2091                           	opt stack 0
  2092                           
  2093                           ; 100 bytes @ 0x0
  2094  000100                     	ds	10
  2095  00010A                     _display_LCD$5266:
  2096                           	opt stack 0
  2097                           
  2098                           ; 4 bytes @ 0xA
  2099  00010A                     	ds	90
  2100  000164                     rx_loop@opcode:
  2101                           	opt stack 0
  2102                           
  2103                           ; 100 bytes @ 0x64
  2104  000164                     	ds	100
  2105  0001C8                     rx_loop@i_2425:
  2106                           	opt stack 0
  2107                           
  2108                           ; 1 bytes @ 0xC8
  2109  0001C8                     	ds	1
  2110                           tblptru	equ	0xFF8
  2111                           tblptrh	equ	0xFF7
  2112                           tblptrl	equ	0xFF6
  2113                           tablat	equ	0xFF5
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           postdec1	equ	0xFE5
  2117                           fsr1h	equ	0xFE2
  2118                           fsr1l	equ	0xFE1
  2119                           
  2120                           	psect	cstackBANK0
  2121  0000B5                     __pcstackBANK0:
  2122                           	opt stack 0
  2123  0000B5                     ??_timer0_init:
  2124  0000B5                     ??_timer3_init:
  2125  0000B5                     ??_I2C_IdleCheck:
  2126  0000B5                     ??_x_to_d:
  2127  0000B5                     ?_ADC:
  2128                           	opt stack 0
  2129  0000B5                     ?_ringbuf_num:
  2130                           	opt stack 0
  2131  0000B5                     ?_USBTransferOnePacket:
  2132                           	opt stack 0
  2133  0000B5                     ?___awdiv:
  2134                           	opt stack 0
  2135  0000B5                     ?___awmod:
  2136                           	opt stack 0
  2137  0000B5                     ?___lwmod:
  2138                           	opt stack 0
  2139  0000B5                     ?___lldiv:
  2140                           	opt stack 0
  2141  0000B5                     timer1_init@clock_select:
  2142                           	opt stack 0
  2143  0000B5                     ADC_init@p_ref:
  2144                           	opt stack 0
  2145  0000B5                     OUT@value:
  2146                           	opt stack 0
  2147  0000B5                     IN@b:
  2148                           	opt stack 0
  2149  0000B5                     LED_OUT@value:
  2150                           	opt stack 0
  2151  0000B5                     _is_usb_available$2619:
  2152                           	opt stack 0
  2153  0000B5                     USBTransferOnePacket@dir:
  2154                           	opt stack 0
  2155  0000B5                     ringbuf_init@rb:
  2156                           	opt stack 0
  2157  0000B5                     ringbuf_num@rb:
  2158                           	opt stack 0
  2159  0000B5                     ringbuf_delete@rb:
  2160                           	opt stack 0
  2161  0000B5                     Delay_ms@ms:
  2162                           	opt stack 0
  2163  0000B5                     delay_set@d:
  2164                           	opt stack 0
  2165  0000B5                     my_strcmp@str1:
  2166                           	opt stack 0
  2167  0000B5                     putUSBUSART@data:
  2168                           	opt stack 0
  2169  0000B5                     ___awdiv@dividend:
  2170                           	opt stack 0
  2171  0000B5                     ___awmod@dividend:
  2172                           	opt stack 0
  2173  0000B5                     ___lwmod@dividend:
  2174                           	opt stack 0
  2175  0000B5                     memset@p1:
  2176                           	opt stack 0
  2177  0000B5                     ___lldiv@dividend:
  2178                           	opt stack 0
  2179                           
  2180                           ; 4 bytes @ 0x0
  2181  0000B5                     	ds	1
  2182  0000B6                     ??_timer1_init:
  2183  0000B6                     timer0_init@prescaler:
  2184                           	opt stack 0
  2185  0000B6                     timer3_init@prescaler:
  2186                           	opt stack 0
  2187  0000B6                     I2C_IdleCheck@mask:
  2188                           	opt stack 0
  2189  0000B6                     x_to_d@hex:
  2190                           	opt stack 0
  2191  0000B6                     OUT@b:
  2192                           	opt stack 0
  2193  0000B6                     LED_OUT@b:
  2194                           	opt stack 0
  2195  0000B6                     USBTransferOnePacket@data:
  2196                           	opt stack 0
  2197                           
  2198                           ; 2 bytes @ 0x1
  2199  0000B6                     	ds	1
  2200  0000B7                     ??_ADC:
  2201  0000B7                     ??_ringbuf_num:
  2202  0000B7                     ??_Delay_ms:
  2203  0000B7                     timer1_init@prescaler:
  2204                           	opt stack 0
  2205  0000B7                     I2C_Start@rw:
  2206                           	opt stack 0
  2207  0000B7                     I2C_Send@data:
  2208                           	opt stack 0
  2209  0000B7                     I2C_Receive@ack:
  2210                           	opt stack 0
  2211  0000B7                     putUSBUSART@length:
  2212                           	opt stack 0
  2213  0000B7                     ringbuf_init@internal_buf:
  2214                           	opt stack 0
  2215  0000B7                     delay_set@value:
  2216                           	opt stack 0
  2217  0000B7                     I2C_rStart@adrs:
  2218                           	opt stack 0
  2219  0000B7                     RTCC_to_caltime@ct:
  2220                           	opt stack 0
  2221  0000B7                     my_strcmp@str2:
  2222                           	opt stack 0
  2223  0000B7                     ___awdiv@divisor:
  2224                           	opt stack 0
  2225  0000B7                     ___awmod@divisor:
  2226                           	opt stack 0
  2227  0000B7                     ___lwmod@divisor:
  2228                           	opt stack 0
  2229  0000B7                     memset@c:
  2230                           	opt stack 0
  2231                           
  2232                           ; 2 bytes @ 0x2
  2233  0000B7                     	ds	1
  2234  0000B8                     ADC@ch:
  2235                           	opt stack 0
  2236  0000B8                     I2C_Start@adrs:
  2237                           	opt stack 0
  2238  0000B8                     I2C_Receive@data:
  2239                           	opt stack 0
  2240  0000B8                     USBTransferOnePacket@len:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0x3
  2244  0000B8                     	ds	1
  2245  0000B9                     ??_my_strcmp:
  2246  0000B9                     I2C_LCD_Command@c:
  2247                           	opt stack 0
  2248  0000B9                     I2C_LCD_Putc@c:
  2249                           	opt stack 0
  2250  0000B9                     RTCC_to_caltime@dumy:
  2251                           	opt stack 0
  2252  0000B9                     port_loop@i:
  2253                           	opt stack 0
  2254  0000B9                     USBTransferOnePacket@ep:
  2255                           	opt stack 0
  2256  0000B9                     ___awdiv@counter:
  2257                           	opt stack 0
  2258  0000B9                     ___awmod@counter:
  2259                           	opt stack 0
  2260  0000B9                     ___lwmod@counter:
  2261                           	opt stack 0
  2262  0000B9                     ringbuf_init@bufsize:
  2263                           	opt stack 0
  2264  0000B9                     I2C_rStart@rw:
  2265                           	opt stack 0
  2266  0000B9                     I2C_LCD_Puts@s:
  2267                           	opt stack 0
  2268  0000B9                     memset@n:
  2269                           	opt stack 0
  2270  0000B9                     ___lldiv@divisor:
  2271                           	opt stack 0
  2272                           
  2273                           ; 4 bytes @ 0x4
  2274  0000B9                     	ds	1
  2275  0000BA                     I2C_LCD_Command@ans:
  2276                           	opt stack 0
  2277  0000BA                     I2C_LCD_Putc@ans:
  2278                           	opt stack 0
  2279  0000BA                     ___awdiv@sign:
  2280                           	opt stack 0
  2281  0000BA                     ___awmod@sign:
  2282                           	opt stack 0
  2283  0000BA                     USBTransferOnePacket@handle:
  2284                           	opt stack 0
  2285                           
  2286                           ; 2 bytes @ 0x5
  2287  0000BA                     	ds	1
  2288  0000BB                     ??_I2C_LCD_Clear:
  2289  0000BB                     ??_I2C_LCD_Puts:
  2290  0000BB                     ?_EEP_read32:
  2291                           	opt stack 0
  2292  0000BB                     I2C_LCD_SetCursor@row:
  2293                           	opt stack 0
  2294  0000BB                     EEP_read32@Reg_l:
  2295                           	opt stack 0
  2296  0000BB                     month_length@month:
  2297                           	opt stack 0
  2298  0000BB                     ___awdiv@quotient:
  2299                           	opt stack 0
  2300  0000BB                     memset@p:
  2301                           	opt stack 0
  2302                           
  2303                           ; 2 bytes @ 0x6
  2304  0000BB                     	ds	1
  2305  0000BC                     ??_CDCTxService:
  2306  0000BC                     ??_month_length:
  2307  0000BC                     I2C_LCD_SetCursor@row_offsets:
  2308                           	opt stack 0
  2309  0000BC                     I2C_LCD_Puts@ans:
  2310                           	opt stack 0
  2311  0000BC                     getsUSBUSART@buffer:
  2312                           	opt stack 0
  2313                           
  2314                           ; 2 bytes @ 0x7
  2315  0000BC                     	ds	1
  2316  0000BD                     d_to_x@dec:
  2317                           	opt stack 0
  2318  0000BD                     USBDeviceInit@i:
  2319                           	opt stack 0
  2320  0000BD                     ringbuf_put@rb:
  2321                           	opt stack 0
  2322  0000BD                     ringbuf_pop@rb:
  2323                           	opt stack 0
  2324  0000BD                     ringbuf_backspace@rb:
  2325                           	opt stack 0
  2326  0000BD                     _CDCTxService$4419:
  2327                           	opt stack 0
  2328  0000BD                     ___lldiv@quotient:
  2329                           	opt stack 0
  2330                           
  2331                           ; 4 bytes @ 0x8
  2332  0000BD                     	ds	1
  2333  0000BE                     I2C_LCD_SetCursor@col:
  2334                           	opt stack 0
  2335  0000BE                     getsUSBUSART@len:
  2336                           	opt stack 0
  2337  0000BE                     caltime_to_RTCC@ct:
  2338                           	opt stack 0
  2339                           
  2340                           ; 2 bytes @ 0x9
  2341  0000BE                     	ds	1
  2342  0000BF                     ??_getsUSBUSART:
  2343  0000BF                     ??_ringbuf_pop:
  2344  0000BF                     ??_ringbuf_backspace:
  2345  0000BF                     ??_EEP_read32:
  2346  0000BF                     ringbuf_put@asciicode:
  2347                           	opt stack 0
  2348  0000BF                     sleep_loop@i:
  2349                           	opt stack 0
  2350  0000BF                     CDCTxService@i:
  2351                           	opt stack 0
  2352                           
  2353                           ; 1 bytes @ 0xA
  2354  0000BF                     	ds	1
  2355  0000C0                     ??_ringbuf_put:
  2356  0000C0                     month_length@year:
  2357                           	opt stack 0
  2358  0000C0                     CDCTxService@byte_to_send:
  2359                           	opt stack 0
  2360  0000C0                     _getsUSBUSART$4371:
  2361                           	opt stack 0
  2362                           
  2363                           ; 2 bytes @ 0xB
  2364  0000C0                     	ds	1
  2365  0000C1                     ?_put_string_usb:
  2366                           	opt stack 0
  2367  0000C1                     ___lldiv@counter:
  2368                           	opt stack 0
  2369  0000C1                     put_string_usb@s:
  2370                           	opt stack 0
  2371                           
  2372                           ; 2 bytes @ 0xC
  2373  0000C1                     	ds	1
  2374  0000C2                     ?_get_string_usb:
  2375                           	opt stack 0
  2376  0000C2                     ?_CTMU_read:
  2377                           	opt stack 0
  2378  0000C2                     ?___lmul:
  2379                           	opt stack 0
  2380  0000C2                     ?___llmod:
  2381                           	opt stack 0
  2382  0000C2                     get_string_usb@s:
  2383                           	opt stack 0
  2384  0000C2                     ___lmul@multiplier:
  2385                           	opt stack 0
  2386  0000C2                     ___llmod@dividend:
  2387                           	opt stack 0
  2388                           
  2389                           ; 4 bytes @ 0xD
  2390  0000C2                     	ds	1
  2391  0000C3                     ringbuf_pop@ret:
  2392                           	opt stack 0
  2393  0000C3                     put_string_usb@len:
  2394                           	opt stack 0
  2395                           
  2396                           ; 2 bytes @ 0xE
  2397  0000C3                     	ds	1
  2398  0000C4                     ??_CTMU_read:
  2399  0000C4                     tx_send@asciicode:
  2400                           	opt stack 0
  2401  0000C4                     tx_sends@asciicode:
  2402                           	opt stack 0
  2403  0000C4                     get_string_usb@len:
  2404                           	opt stack 0
  2405                           
  2406                           ; 2 bytes @ 0xF
  2407  0000C4                     	ds	1
  2408  0000C5                     CTMU_read@ch:
  2409                           	opt stack 0
  2410                           
  2411                           ; 1 bytes @ 0x10
  2412  0000C5                     	ds	1
  2413  0000C6                     ??_get_string_usb:
  2414  0000C6                     CTMU_read@sum:
  2415                           	opt stack 0
  2416  0000C6                     ___lmul@multiplicand:
  2417                           	opt stack 0
  2418  0000C6                     ___llmod@divisor:
  2419                           	opt stack 0
  2420                           
  2421                           ; 4 bytes @ 0x11
  2422  0000C6                     	ds	1
  2423  0000C7                     get_string_usb@rx_len:
  2424                           	opt stack 0
  2425                           
  2426                           ; 2 bytes @ 0x12
  2427  0000C7                     	ds	2
  2428  0000C9                     USB_loop@rx_len:
  2429                           	opt stack 0
  2430                           
  2431                           ; 2 bytes @ 0x14
  2432  0000C9                     	ds	1
  2433  0000CA                     CTMU_read@i:
  2434                           	opt stack 0
  2435  0000CA                     ___llmod@counter:
  2436                           	opt stack 0
  2437  0000CA                     ___lmul@product:
  2438                           	opt stack 0
  2439                           
  2440                           ; 4 bytes @ 0x15
  2441  0000CA                     	ds	1
  2442  0000CB                     ?___wmul:
  2443                           	opt stack 0
  2444  0000CB                     USB_loop@data:
  2445                           	opt stack 0
  2446  0000CB                     ___wmul@multiplier:
  2447                           	opt stack 0
  2448                           
  2449                           ; 2 bytes @ 0x16
  2450  0000CB                     	ds	2
  2451  0000CD                     ___wmul@multiplicand:
  2452                           	opt stack 0
  2453                           
  2454                           ; 2 bytes @ 0x18
  2455  0000CD                     	ds	1
  2456  0000CE                     ?_get_quot_rem:
  2457                           	opt stack 0
  2458  0000CE                     get_quot_rem@quot:
  2459                           	opt stack 0
  2460  0000CE                     caltime_to_epoch@ct:
  2461                           	opt stack 0
  2462                           
  2463                           ; 2 bytes @ 0x19
  2464  0000CE                     	ds	1
  2465  0000CF                     ___wmul@product:
  2466                           	opt stack 0
  2467                           
  2468                           ; 2 bytes @ 0x1A
  2469  0000CF                     	ds	1
  2470  0000D0                     get_quot_rem@div:
  2471                           	opt stack 0
  2472  0000D0                     caltime_to_epoch@ep:
  2473                           	opt stack 0
  2474                           
  2475                           ; 2 bytes @ 0x1B
  2476  0000D0                     	ds	1
  2477  0000D1                     ??_Auto_cut:
  2478  0000D1                     ?_my_atoi:
  2479                           	opt stack 0
  2480  0000D1                     ?___lwdiv:
  2481                           	opt stack 0
  2482  0000D1                     my_atoi@str:
  2483                           	opt stack 0
  2484  0000D1                     ___lwdiv@dividend:
  2485                           	opt stack 0
  2486                           
  2487                           ; 2 bytes @ 0x1C
  2488  0000D1                     	ds	1
  2489  0000D2                     ??_caltime_to_epoch:
  2490  0000D2                     get_quot_rem@num:
  2491                           	opt stack 0
  2492                           
  2493                           ; 4 bytes @ 0x1D
  2494  0000D2                     	ds	1
  2495  0000D3                     ??_my_atoi:
  2496  0000D3                     Auto_cut@i:
  2497                           	opt stack 0
  2498  0000D3                     ___lwdiv@divisor:
  2499                           	opt stack 0
  2500                           
  2501                           ; 2 bytes @ 0x1E
  2502  0000D3                     	ds	2
  2503  0000D5                     EEP_read32@Reg_h:
  2504                           	opt stack 0
  2505  0000D5                     ___lwdiv@counter:
  2506                           	opt stack 0
  2507                           
  2508                           ; 1 bytes @ 0x20
  2509  0000D5                     	ds	1
  2510  0000D6                     caltime_to_epoch@year:
  2511                           	opt stack 0
  2512  0000D6                     epoch_to_caltime@ct:
  2513                           	opt stack 0
  2514  0000D6                     ___lwdiv@quotient:
  2515                           	opt stack 0
  2516  0000D6                     EEP_read32@d:
  2517                           	opt stack 0
  2518                           
  2519                           ; 4 bytes @ 0x21
  2520  0000D6                     	ds	1
  2521  0000D7                     caltime_to_epoch@month_1955:
  2522                           	opt stack 0
  2523  0000D7                     my_atoi@ret:
  2524                           	opt stack 0
  2525                           
  2526                           ; 2 bytes @ 0x22
  2527  0000D7                     	ds	1
  2528  0000D8                     ctmu_set_ratio@percentage:
  2529                           	opt stack 0
  2530  0000D8                     tx_sendn@value:
  2531                           	opt stack 0
  2532  0000D8                     button_timer_interrupt@bt:
  2533                           	opt stack 0
  2534  0000D8                     epoch_to_caltime@ep:
  2535                           	opt stack 0
  2536  0000D8                     my_utoa@str:
  2537                           	opt stack 0
  2538  0000D8                     caltime_to_epoch@epoch:
  2539                           	opt stack 0
  2540                           
  2541                           ; 4 bytes @ 0x23
  2542  0000D8                     	ds	2
  2543  0000DA                     ??_epoch_to_caltime:
  2544  0000DA                     tx_sendn@digits:
  2545                           	opt stack 0
  2546  0000DA                     button_timer_interrupt@sw_value:
  2547                           	opt stack 0
  2548  0000DA                     EEP_read32@ans:
  2549                           	opt stack 0
  2550  0000DA                     my_utoa@value:
  2551                           	opt stack 0
  2552                           
  2553                           ; 2 bytes @ 0x25
  2554  0000DA                     	ds	1
  2555  0000DB                     tx_sendn@i:
  2556                           	opt stack 0
  2557                           
  2558                           ; 1 bytes @ 0x26
  2559  0000DB                     	ds	1
  2560  0000DC                     caltime_to_epoch@month:
  2561                           	opt stack 0
  2562  0000DC                     my_utoa@digits:
  2563                           	opt stack 0
  2564  0000DC                     tx_sendn@temp:
  2565                           	opt stack 0
  2566  0000DC                     epoch_to_caltime@day_since_epoch:
  2567                           	opt stack 0
  2568                           
  2569                           ; 2 bytes @ 0x27
  2570  0000DC                     	ds	1
  2571  0000DD                     my_utoa@d:
  2572                           	opt stack 0
  2573  0000DD                     RTCC_from_RTCC@ct:
  2574                           	opt stack 0
  2575                           
  2576                           ; 2 bytes @ 0x28
  2577  0000DD                     	ds	1
  2578  0000DE                     epoch_to_caltime@day:
  2579                           	opt stack 0
  2580  0000DE                     my_utoa@v:
  2581                           	opt stack 0
  2582                           
  2583                           ; 2 bytes @ 0x29
  2584  0000DE                     	ds	1
  2585  0000DF                     RTCC_from_RTCC@ep:
  2586                           	opt stack 0
  2587                           
  2588                           ; 2 bytes @ 0x2A
  2589  0000DF                     	ds	1
  2590  0000E0                     epoch_to_caltime@year:
  2591                           	opt stack 0
  2592  0000E0                     display_dec@edit:
  2593                           	opt stack 0
  2594  0000E0                     tx_send_dec@edit:
  2595                           	opt stack 0
  2596  0000E0                     comm_disp@i:
  2597                           	opt stack 0
  2598                           
  2599                           ; 1 bytes @ 0x2B
  2600  0000E0                     	ds	1
  2601  0000E1                     epoch_to_caltime@month:
  2602                           	opt stack 0
  2603  0000E1                     display_dec@str:
  2604                           	opt stack 0
  2605  0000E1                     tx_send_dec@str:
  2606                           	opt stack 0
  2607  0000E1                     comm_disp@str:
  2608                           	opt stack 0
  2609                           
  2610                           ; 10 bytes @ 0x2C
  2611  0000E1                     	ds	1
  2612  0000E2                     epoch_to_caltime@num:
  2613                           	opt stack 0
  2614                           
  2615                           ; 4 bytes @ 0x2D
  2616  0000E2                     	ds	4
  2617  0000E6                     RTCC_from_caltime@ct:
  2618                           	opt stack 0
  2619  0000E6                     RTCC_from_epoch@ct:
  2620                           	opt stack 0
  2621                           
  2622                           ; 2 bytes @ 0x31
  2623  0000E6                     	ds	2
  2624  0000E8                     RTCC_from_caltime@ep:
  2625                           	opt stack 0
  2626  0000E8                     RTCC_from_epoch@ep:
  2627                           	opt stack 0
  2628                           
  2629                           ; 2 bytes @ 0x33
  2630  0000E8                     	ds	2
  2631  0000EA                     RTCC_adjust_time_inc@ct:
  2632                           	opt stack 0
  2633  0000EA                     RTCC_adjust_time_dec@ct:
  2634                           	opt stack 0
  2635                           
  2636                           ; 2 bytes @ 0x35
  2637  0000EA                     	ds	1
  2638  0000EB                     display_dec@dec:
  2639                           	opt stack 0
  2640  0000EB                     tx_send_dec@dec:
  2641                           	opt stack 0
  2642  0000EB                     _comm_disp$5267:
  2643                           	opt stack 0
  2644                           
  2645                           ; 4 bytes @ 0x36
  2646  0000EB                     	ds	1
  2647  0000EC                     display_time_1602@ct:
  2648                           	opt stack 0
  2649  0000EC                     RTCC_adjust_time_inc@ep:
  2650                           	opt stack 0
  2651  0000EC                     RTCC_adjust_time_dec@ep:
  2652                           	opt stack 0
  2653  0000EC                     comm_at@hand:
  2654                           	opt stack 0
  2655                           
  2656                           ; 2 bytes @ 0x37
  2657  0000EC                     	ds	2
  2658  0000EE                     ??_RTCC_adjust_time_inc:
  2659  0000EE                     ??_RTCC_adjust_time_dec:
  2660  0000EE                     comm_at@min:
  2661                           	opt stack 0
  2662  0000EE                     display_time_1602@ep:
  2663                           	opt stack 0
  2664                           
  2665                           ; 2 bytes @ 0x39
  2666  0000EE                     	ds	1
  2667  0000EF                     comm_at@max:
  2668                           	opt stack 0
  2669  0000EF                     comm_disp@content:
  2670                           	opt stack 0
  2671                           
  2672                           ; 1 bytes @ 0x3A
  2673  0000EF                     	ds	1
  2674  0000F0                     ??_display_time_1602:
  2675  0000F0                     comm_at@value:
  2676                           	opt stack 0
  2677                           
  2678                           ; 1 bytes @ 0x3B
  2679  0000F0                     	ds	1
  2680  0000F1                     command_operation@opcode:
  2681                           	opt stack 0
  2682                           
  2683                           ; 2 bytes @ 0x3C
  2684  0000F1                     	ds	1
  2685  0000F2                     RTCC_adjust_time_inc@i_2037:
  2686                           	opt stack 0
  2687  0000F2                     RTCC_adjust_time_dec@i_2050:
  2688                           	opt stack 0
  2689                           
  2690                           ; 1 bytes @ 0x3D
  2691  0000F2                     	ds	1
  2692  0000F3                     RTCC_adjust_time_inc@i:
  2693                           	opt stack 0
  2694  0000F3                     RTCC_adjust_time_dec@i:
  2695                           	opt stack 0
  2696  0000F3                     command_operation@opland1:
  2697                           	opt stack 0
  2698                           
  2699                           ; 2 bytes @ 0x3E
  2700  0000F3                     	ds	1
  2701  0000F4                     RTCC_adjust_time_button@mode:
  2702                           	opt stack 0
  2703                           
  2704                           ; 2 bytes @ 0x3F
  2705  0000F4                     	ds	1
  2706  0000F5                     command_operation@opland2:
  2707                           	opt stack 0
  2708                           
  2709                           ; 2 bytes @ 0x40
  2710  0000F5                     	ds	1
  2711  0000F6                     RTCC_adjust_time_button@cnt_inc:
  2712                           	opt stack 0
  2713                           
  2714                           ; 2 bytes @ 0x41
  2715  0000F6                     	ds	1
  2716  0000F7                     command_operation@opland3:
  2717                           	opt stack 0
  2718                           
  2719                           ; 2 bytes @ 0x42
  2720  0000F7                     	ds	1
  2721  0000F8                     RTCC_adjust_time_button@cnt_dec:
  2722                           	opt stack 0
  2723                           
  2724                           ; 2 bytes @ 0x43
  2725  0000F8                     	ds	1
  2726  0000F9                     _command_operation$5268:
  2727                           	opt stack 0
  2728                           
  2729                           ; 1 bytes @ 0x44
  2730  0000F9                     	ds	1
  2731  0000FA                     command_operation@percentage:
  2732                           	opt stack 0
  2733                           
  2734                           ; 1 bytes @ 0x45
  2735  0000FA                     	ds	1
  2736  0000FB                     ??_rx_loop:
  2737                           
  2738                           ; 0 bytes @ 0x46
  2739  0000FB                     	ds	2
  2740  0000FD                     tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           postinc0	equ	0xFEE
  2745                           wreg	equ	0xFE8
  2746                           postdec1	equ	0xFE5
  2747                           fsr1h	equ	0xFE2
  2748                           fsr1l	equ	0xFE1
  2749                           
  2750                           ; 0 bytes @ 0x48
  2751                           
  2752                           	psect	cstackCOMRAM
  2753  000001                     __pcstackCOMRAM:
  2754                           	opt stack 0
  2755  000001                     ??_USBStdGetDscHandler:
  2756  000001                     ??_USBStdGetStatusHandler:
  2757  000001                     ??i2_I2C_IdleCheck:
  2758  000001                     ?i2_USBTransferOnePacket:
  2759                           	opt stack 0
  2760  000001                     ?i2___awdiv:
  2761                           	opt stack 0
  2762  000001                     ?i2___lwdiv:
  2763                           	opt stack 0
  2764  000001                     ?i2___lldiv:
  2765                           	opt stack 0
  2766  000001                     USBConfigureEndpoint@direction:
  2767                           	opt stack 0
  2768  000001                     USBCtrlTrfTxService@byteToSend:
  2769                           	opt stack 0
  2770  000001                     USBCtrlTrfRxService@i:
  2771                           	opt stack 0
  2772  000001                     i2LED_OUT@value:
  2773                           	opt stack 0
  2774  000001                     i2USBTransferOnePacket@dir:
  2775                           	opt stack 0
  2776  000001                     delay_timer_interrupt@d:
  2777                           	opt stack 0
  2778  000001                     i2___awdiv@dividend:
  2779                           	opt stack 0
  2780  000001                     i2___lwdiv@dividend:
  2781                           	opt stack 0
  2782  000001                     i2memset@p1:
  2783                           	opt stack 0
  2784  000001                     i2___lldiv@dividend:
  2785                           	opt stack 0
  2786                           
  2787                           ; 4 bytes @ 0x0
  2788  000001                     	ds	1
  2789  000002                     ??_USBConfigureEndpoint:
  2790  000002                     USBCtrlTrfRxService@byteToRead:
  2791                           	opt stack 0
  2792  000002                     USBCtrlTrfInHandler@lastDTS:
  2793                           	opt stack 0
  2794  000002                     i2I2C_IdleCheck@mask:
  2795                           	opt stack 0
  2796  000002                     i2LED_OUT@b:
  2797                           	opt stack 0
  2798  000002                     USBStdGetStatusHandler@p:
  2799                           	opt stack 0
  2800  000002                     i2USBTransferOnePacket@data:
  2801                           	opt stack 0
  2802                           
  2803                           ; 2 bytes @ 0x1
  2804  000002                     	ds	1
  2805  000003                     i2I2C_Start@rw:
  2806                           	opt stack 0
  2807  000003                     i2I2C_Send@data:
  2808                           	opt stack 0
  2809  000003                     i2___awdiv@divisor:
  2810                           	opt stack 0
  2811  000003                     i2___lwdiv@divisor:
  2812                           	opt stack 0
  2813  000003                     i2memset@c:
  2814                           	opt stack 0
  2815                           
  2816                           ; 2 bytes @ 0x2
  2817  000003                     	ds	1
  2818  000004                     i2I2C_Start@adrs:
  2819                           	opt stack 0
  2820  000004                     i2USBTransferOnePacket@len:
  2821                           	opt stack 0
  2822                           
  2823                           ; 1 bytes @ 0x3
  2824  000004                     	ds	1
  2825  000005                     EEP_write32@Reg_l:
  2826                           	opt stack 0
  2827  000005                     i2USBTransferOnePacket@ep:
  2828                           	opt stack 0
  2829  000005                     i2___awdiv@counter:
  2830                           	opt stack 0
  2831  000005                     i2___lwdiv@quotient:
  2832                           	opt stack 0
  2833  000005                     i2memset@n:
  2834                           	opt stack 0
  2835  000005                     i2___lldiv@divisor:
  2836                           	opt stack 0
  2837                           
  2838                           ; 4 bytes @ 0x4
  2839  000005                     	ds	1
  2840  000006                     USBConfigureEndpoint@EPNum:
  2841                           	opt stack 0
  2842  000006                     i2___awdiv@sign:
  2843                           	opt stack 0
  2844  000006                     i2USBTransferOnePacket@handle:
  2845                           	opt stack 0
  2846  000006                     EEP_write32@data:
  2847                           	opt stack 0
  2848                           
  2849                           ; 4 bytes @ 0x5
  2850  000006                     	ds	1
  2851  000007                     i2___lwdiv@counter:
  2852                           	opt stack 0
  2853  000007                     USBConfigureEndpoint@handle:
  2854                           	opt stack 0
  2855  000007                     i2___awdiv@quotient:
  2856                           	opt stack 0
  2857  000007                     i2memset@p:
  2858                           	opt stack 0
  2859                           
  2860                           ; 2 bytes @ 0x6
  2861  000007                     	ds	2
  2862  000009                     ??_LED_indicator:
  2863  000009                     USBEnableEndpoint@options:
  2864                           	opt stack 0
  2865  000009                     i2USBDeviceInit@i:
  2866                           	opt stack 0
  2867  000009                     i2___lldiv@quotient:
  2868                           	opt stack 0
  2869                           
  2870                           ; 4 bytes @ 0x8
  2871  000009                     	ds	1
  2872  00000A                     EEP_write32@Reg_h:
  2873                           	opt stack 0
  2874  00000A                     USBEnableEndpoint@p:
  2875                           	opt stack 0
  2876                           
  2877                           ; 2 bytes @ 0x9
  2878  00000A                     	ds	1
  2879  00000B                     EEP_write32@ans:
  2880                           	opt stack 0
  2881                           
  2882                           ; 1 bytes @ 0xA
  2883  00000B                     	ds	1
  2884  00000C                     LED_indicator@i:
  2885                           	opt stack 0
  2886  00000C                     USBEnableEndpoint@ep:
  2887                           	opt stack 0
  2888                           
  2889                           ; 1 bytes @ 0xB
  2890  00000C                     	ds	1
  2891  00000D                     i2___lldiv@counter:
  2892                           	opt stack 0
  2893  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2894                           	opt stack 0
  2895                           
  2896                           ; 2 bytes @ 0xC
  2897  00000D                     	ds	1
  2898  00000E                     ??_integrating:
  2899                           
  2900                           ; 0 bytes @ 0xD
  2901  00000E                     	ds	1
  2902  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2903                           	opt stack 0
  2904                           
  2905                           ; 2 bytes @ 0xE
  2906  00000F                     	ds	2
  2907  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2908                           	opt stack 0
  2909                           
  2910                           ; 2 bytes @ 0x10
  2911  000011                     	ds	2
  2912  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2913                           
  2914                           ; 0 bytes @ 0x12
  2915  000013                     	ds	1
  2916  000014                     charge_time_count@i:
  2917                           	opt stack 0
  2918                           
  2919                           ; 1 bytes @ 0x13
  2920  000014                     	ds	1
  2921  000015                     ??_USBStdFeatureReqHandler:
  2922  000015                     USBStdSetCfgHandler@i:
  2923                           	opt stack 0
  2924                           
  2925                           ; 1 bytes @ 0x14
  2926  000015                     	ds	1
  2927  000016                     integrating@i:
  2928                           	opt stack 0
  2929  000016                     USBStdFeatureReqHandler@pUEP:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x15
  2933  000016                     	ds	2
  2934  000018                     USBStdFeatureReqHandler@current_ep_data:
  2935                           	opt stack 0
  2936                           
  2937                           ; 1 bytes @ 0x17
  2938  000018                     	ds	1
  2939  000019                     USBStdFeatureReqHandler@p:
  2940                           	opt stack 0
  2941                           
  2942                           ; 2 bytes @ 0x18
  2943  000019                     	ds	2
  2944  00001B                     ??_USBCtrlEPService:
  2945  00001B                     
  2946                           ; 0 bytes @ 0x1A
  2947  00001B                     	ds	2
  2948  00001D                     USBCtrlEPService@setup_cnt:
  2949                           	opt stack 0
  2950                           
  2951                           ; 1 bytes @ 0x1C
  2952  00001D                     	ds	1
  2953  00001E                     USBDeviceTasks@i:
  2954                           	opt stack 0
  2955                           
  2956                           ; 1 bytes @ 0x1D
  2957  00001E                     	ds	1
  2958  00001F                     ??_ISR:
  2959                           
  2960                           ; 0 bytes @ 0x1E
  2961  00001F                     	ds	14
  2962                           tblptru	equ	0xFF8
  2963                           tblptrh	equ	0xFF7
  2964                           tblptrl	equ	0xFF6
  2965                           tablat	equ	0xFF5
  2966                           postinc0	equ	0xFEE
  2967                           wreg	equ	0xFE8
  2968                           postdec1	equ	0xFE5
  2969                           fsr1h	equ	0xFE2
  2970                           fsr1l	equ	0xFE1
  2971                           
  2972 ;;
  2973 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2974 ;;
  2975 ;; *************** function _main *****************
  2976 ;; Defined at:
  2977 ;;		line 110 in file "main.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  i               1  204[BANK2 ] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  2  939[None  ] int 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;Total ram usage:        1 bytes
  2996 ;; Hardware stack levels required when called:   19
  2997 ;; This function calls:
  2998 ;;		_EEP_read32
  2999 ;;		_LED_OUT
  3000 ;;		_OUT
  3001 ;;		_RTCC_from_RTCC
  3002 ;;		_RTCC_from_epoch
  3003 ;;		_RTCC_loop
  3004 ;;		_USB_loop
  3005 ;;		_ctmu_loop
  3006 ;;		_ctmu_set_ratio
  3007 ;;		_delay_set
  3008 ;;		_main_init
  3009 ;;		_normal_mode_loop
  3010 ;;		_rx_loop
  3011 ;;		_sleep_loop
  3012 ;; This function is called by:
  3013 ;;		Startup code after reset
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text0
  3018  012982                     __ptext0:
  3019                           	opt stack 0
  3020  012982                     _main:
  3021                           	opt stack 12
  3022                           
  3023                           ;main.c: 111: main_init();
  3024                           
  3025                           ;incstack = 0
  3026  012982  EC92  F0A9         	call	_main_init	;wreg free
  3027                           
  3028                           ;main.c: 113: ctmu_ratio = 90;
  3029  012986  0E5A               	movlw	90
  3030  012988  0100               	movlb	0	; () banked
  3031  01298A  6F97               	movwf	_ctmu_ratio& (0+255),b
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;main.c: 114: ctmu_set_ratio(ctmu_ratio);
  3035  01298C  0100               	movlb	0	; () banked
  3036  01298E  5197               	movf	_ctmu_ratio& (0+255),w,b
  3037  012990  EC48  F0A1         	call	_ctmu_set_ratio
  3038                           
  3039                           ;main.c: 116: RTCC_from_RTCC(&caltime_now, &epoch_now);
  3040  012994  0EA6               	movlw	low _caltime_now
  3041  012996  0100               	movlb	0	; () banked
  3042  012998  6FDD               	movwf	RTCC_from_RTCC@ct& (0+255),b
  3043  01299A  0E00               	movlw	high _caltime_now
  3044  01299C  0100               	movlb	0	; () banked
  3045  01299E  6FDE               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  3046  0129A0  0EB1               	movlw	low _epoch_now
  3047  0129A2  0100               	movlb	0	; () banked
  3048  0129A4  6FDF               	movwf	RTCC_from_RTCC@ep& (0+255),b
  3049  0129A6  0E00               	movlw	high _epoch_now
  3050  0129A8  0100               	movlb	0	; () banked
  3051  0129AA  6FE0               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  3052  0129AC  ECD0  F0B4         	call	_RTCC_from_RTCC	;wreg free
  3053                           
  3054                           ;main.c: 117: if (caltime_now.DD == 0) {
  3055  0129B0  0100               	movlb	0	; () banked
  3056  0129B2  51AA               	movf	(_caltime_now+4)& (0+255),w,b
  3057  0129B4  A4D8               	btfss	status,2,c
  3058  0129B6  D017               	goto	l11656
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;main.c: 118: epoch_now = 0;
  3062  0129B8  0E00               	movlw	0
  3063  0129BA  0100               	movlb	0	; () banked
  3064  0129BC  6FB1               	movwf	_epoch_now& (0+255),b
  3065  0129BE  0E00               	movlw	0
  3066  0129C0  6FB2               	movwf	(_epoch_now+1)& (0+255),b
  3067  0129C2  0E00               	movlw	0
  3068  0129C4  6FB3               	movwf	(_epoch_now+2)& (0+255),b
  3069  0129C6  0E00               	movlw	0
  3070  0129C8  6FB4               	movwf	(_epoch_now+3)& (0+255),b
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;main.c: 119: RTCC_from_epoch(&caltime_now, &epoch_now);
  3074  0129CA  0EA6               	movlw	low _caltime_now
  3075  0129CC  0100               	movlb	0	; () banked
  3076  0129CE  6FE6               	movwf	RTCC_from_epoch@ct& (0+255),b
  3077  0129D0  0E00               	movlw	high _caltime_now
  3078  0129D2  0100               	movlb	0	; () banked
  3079  0129D4  6FE7               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  3080  0129D6  0EB1               	movlw	low _epoch_now
  3081  0129D8  0100               	movlb	0	; () banked
  3082  0129DA  6FE8               	movwf	RTCC_from_epoch@ep& (0+255),b
  3083  0129DC  0E00               	movlw	high _epoch_now
  3084  0129DE  0100               	movlb	0	; () banked
  3085  0129E0  6FE9               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  3086  0129E2  ECBF  F0B4         	call	_RTCC_from_epoch	;wreg free
  3087  0129E6                     l11656:
  3088                           
  3089                           ;main.c: 120: }
  3090                           ;main.c: 121: print_content = LOGO;
  3091  0129E6  0E00               	movlw	0
  3092  0129E8  0100               	movlb	0	; () banked
  3093  0129EA  6F9A               	movwf	_print_content& (0+255),b
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;main.c: 122: next_print_content = TIME;
  3097  0129EC  0E01               	movlw	1
  3098  0129EE  6E4E               	movwf	_next_print_content,c
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;main.c: 123: delay_set(&delay_display, 120);
  3102  0129F0  0E51               	movlw	low _delay_display
  3103  0129F2  0100               	movlb	0	; () banked
  3104  0129F4  6FB5               	movwf	delay_set@d& (0+255),b
  3105  0129F6  0E00               	movlw	high _delay_display
  3106  0129F8  0100               	movlb	0	; () banked
  3107  0129FA  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  3108  0129FC  0E00               	movlw	0
  3109  0129FE  0100               	movlb	0	; () banked
  3110  012A00  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  3111  012A02  0E78               	movlw	120
  3112  012A04  6FB7               	movwf	delay_set@value& (0+255),b
  3113  012A06  ECAD  F0B4         	call	_delay_set	;wreg free
  3114                           
  3115                           ;main.c: 125: for (uint8_t i = 0; i < 3; i++) {
  3116  012A0A  0E00               	movlw	0
  3117  012A0C  0102               	movlb	2	; () banked
  3118  012A0E  6FCC               	movwf	main@i& (0+255),b
  3119  012A10                     l11664:
  3120                           
  3121                           ; BSR set to: 2
  3122  012A10  0E02               	movlw	2
  3123  012A12  0102               	movlb	2	; () banked
  3124  012A14  65CC               	cpfsgt	main@i& (0+255),b
  3125  012A16  D001               	goto	l11668
  3126  012A18  D07C               	goto	l942
  3127  012A1A                     l11668:
  3128                           
  3129                           ; BSR set to: 2
  3130                           ;main.c: 126: OUT(i, 1);
  3131  012A1A  0E01               	movlw	1
  3132  012A1C  0100               	movlb	0	; () banked
  3133  012A1E  6FB5               	movwf	OUT@value& (0+255),b
  3134  012A20  0102               	movlb	2	; () banked
  3135  012A22  51CC               	movf	main@i& (0+255),w,b
  3136  012A24  ECDD  F0AE         	call	_OUT
  3137                           
  3138                           ;main.c: 127: LED_OUT(i, 1);
  3139  012A28  0E01               	movlw	1
  3140  012A2A  0100               	movlb	0	; () banked
  3141  012A2C  6FB5               	movwf	LED_OUT@value& (0+255),b
  3142  012A2E  0102               	movlb	2	; () banked
  3143  012A30  51CC               	movf	main@i& (0+255),w,b
  3144  012A32  ECA4  F0AE         	call	_LED_OUT
  3145                           
  3146                           ;main.c: 128: port[i].integrated_current_sec = EEP_read32(0, i);
  3147  012A36  C2CC  F0BB         	movff	main@i,EEP_read32@Reg_l
  3148  012A3A  0E00               	movlw	0
  3149  012A3C  ECCC  F097         	call	_EEP_read32
  3150  012A40  0102               	movlb	2	; () banked
  3151  012A42  51CC               	movf	main@i& (0+255),w,b
  3152  012A44  0D17               	mullw	23
  3153  012A46  0E0C               	movlw	12
  3154  012A48  26F3               	addwf	prodl,f,c
  3155  012A4A  0E00               	movlw	0
  3156  012A4C  22F4               	addwfc	prodh,f,c
  3157  012A4E  0E00               	movlw	low _port
  3158  012A50  24F3               	addwf	prodl,w,c
  3159  012A52  6ED9               	movwf	fsr2l,c
  3160  012A54  0E03               	movlw	high _port
  3161  012A56  20F4               	addwfc	prodh,w,c
  3162  012A58  6EDA               	movwf	fsr2h,c
  3163  012A5A  0100               	movlb	0	; () banked
  3164  012A5C  C0BB  FFDE         	movff	?_EEP_read32,postinc2
  3165  012A60  0100               	movlb	0	; () banked
  3166  012A62  C0BC  FFDE         	movff	?_EEP_read32+1,postinc2
  3167  012A66  0100               	movlb	0	; () banked
  3168  012A68  C0BD  FFDE         	movff	?_EEP_read32+2,postinc2
  3169  012A6C  0100               	movlb	0	; () banked
  3170  012A6E  C0BE  FFDE         	movff	?_EEP_read32+3,postinc2
  3171                           
  3172                           ;main.c: 129: port[i].integrated_time = EEP_read32(1, i);
  3173  012A72  C2CC  F0BB         	movff	main@i,EEP_read32@Reg_l
  3174  012A76  0E01               	movlw	1
  3175  012A78  ECCC  F097         	call	_EEP_read32
  3176  012A7C  0102               	movlb	2	; () banked
  3177  012A7E  51CC               	movf	main@i& (0+255),w,b
  3178  012A80  0D17               	mullw	23
  3179  012A82  0E10               	movlw	16
  3180  012A84  26F3               	addwf	prodl,f,c
  3181  012A86  0E00               	movlw	0
  3182  012A88  22F4               	addwfc	prodh,f,c
  3183  012A8A  0E00               	movlw	low _port
  3184  012A8C  24F3               	addwf	prodl,w,c
  3185  012A8E  6ED9               	movwf	fsr2l,c
  3186  012A90  0E03               	movlw	high _port
  3187  012A92  20F4               	addwfc	prodh,w,c
  3188  012A94  6EDA               	movwf	fsr2h,c
  3189  012A96  0100               	movlb	0	; () banked
  3190  012A98  C0BB  FFDE         	movff	?_EEP_read32,postinc2
  3191  012A9C  0100               	movlb	0	; () banked
  3192  012A9E  C0BC  FFDE         	movff	?_EEP_read32+1,postinc2
  3193  012AA2  0100               	movlb	0	; () banked
  3194  012AA4  C0BD  FFDE         	movff	?_EEP_read32+2,postinc2
  3195  012AA8  0100               	movlb	0	; () banked
  3196  012AAA  C0BE  FFDE         	movff	?_EEP_read32+3,postinc2
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;main.c: 130: port[i].cut_cnt = 0;
  3200  012AAE  0102               	movlb	2	; () banked
  3201  012AB0  51CC               	movf	main@i& (0+255),w,b
  3202  012AB2  0D17               	mullw	23
  3203  012AB4  0E14               	movlw	20
  3204  012AB6  26F3               	addwf	prodl,f,c
  3205  012AB8  0E00               	movlw	0
  3206  012ABA  22F4               	addwfc	prodh,f,c
  3207  012ABC  0E00               	movlw	low _port
  3208  012ABE  24F3               	addwf	prodl,w,c
  3209  012AC0  6ED9               	movwf	fsr2l,c
  3210  012AC2  0E03               	movlw	high _port
  3211  012AC4  20F4               	addwfc	prodh,w,c
  3212  012AC6  6EDA               	movwf	fsr2h,c
  3213  012AC8  0E00               	movlw	0
  3214  012ACA  6EDE               	movwf	postinc2,c
  3215  012ACC  0E00               	movlw	0
  3216  012ACE  6EDD               	movwf	postdec2,c
  3217                           
  3218                           ; BSR set to: 2
  3219                           ;main.c: 131: port[i].flag.auto_cut_ON = 1;
  3220  012AD0  0102               	movlb	2	; () banked
  3221  012AD2  51CC               	movf	main@i& (0+255),w,b
  3222  012AD4  0D17               	mullw	23
  3223  012AD6  0E16               	movlw	22
  3224  012AD8  26F3               	addwf	prodl,f,c
  3225  012ADA  0E00               	movlw	0
  3226  012ADC  22F4               	addwfc	prodh,f,c
  3227  012ADE  0E00               	movlw	low _port
  3228  012AE0  24F3               	addwf	prodl,w,c
  3229  012AE2  6ED9               	movwf	fsr2l,c
  3230  012AE4  0E03               	movlw	high _port
  3231  012AE6  20F4               	addwfc	prodh,w,c
  3232  012AE8  6EDA               	movwf	fsr2h,c
  3233  012AEA  0103               	movlb	3	; () banked
  3234  012AEC  80DF               	bsf	indf2,0,c
  3235                           
  3236                           ; BSR set to: 3
  3237                           ;main.c: 132: port[i].flag.led_indicater_ON = 1;
  3238  012AEE  0102               	movlb	2	; () banked
  3239  012AF0  51CC               	movf	main@i& (0+255),w,b
  3240  012AF2  0D17               	mullw	23
  3241  012AF4  0E16               	movlw	22
  3242  012AF6  26F3               	addwf	prodl,f,c
  3243  012AF8  0E00               	movlw	0
  3244  012AFA  22F4               	addwfc	prodh,f,c
  3245  012AFC  0E00               	movlw	low _port
  3246  012AFE  24F3               	addwf	prodl,w,c
  3247  012B00  6ED9               	movwf	fsr2l,c
  3248  012B02  0E03               	movlw	high _port
  3249  012B04  20F4               	addwfc	prodh,w,c
  3250  012B06  6EDA               	movwf	fsr2h,c
  3251  012B08  0103               	movlb	3	; () banked
  3252  012B0A  82DF               	bsf	indf2,1,c
  3253                           
  3254                           ; BSR set to: 3
  3255  012B0C  0102               	movlb	2	; () banked
  3256  012B0E  2BCC               	incf	main@i& (0+255),f,b
  3257  012B10  D77F               	goto	l11664
  3258  012B12                     l942:
  3259                           
  3260                           ; BSR set to: 2
  3261                           ;main.c: 133: }
  3262                           ;main.c: 135: INTCONbits.GIE = 1;
  3263  012B12  8EF2               	bsf	intcon,7,c	;volatile
  3264                           
  3265                           ;main.c: 138: INTCONbits.GIE = 0;
  3266                           
  3267                           ;main.c: 137: while (1) {
  3268  012B14  9EF2               	bcf	intcon,7,c	;volatile
  3269                           
  3270                           ;main.c: 139: USB_loop();
  3271  012B16  EC74  F0AB         	call	_USB_loop	;wreg free
  3272                           
  3273                           ;main.c: 140: INTCONbits.GIE = 1;
  3274  012B1A  8EF2               	bsf	intcon,7,c	;volatile
  3275                           
  3276                           ;main.c: 141: INTCONbits.GIE = 0;
  3277  012B1C  9EF2               	bcf	intcon,7,c	;volatile
  3278                           
  3279                           ;main.c: 142: rx_loop();
  3280  012B1E  ECE5  F08B         	call	_rx_loop	;wreg free
  3281                           
  3282                           ;main.c: 143: INTCONbits.GIE = 1;
  3283  012B22  8EF2               	bsf	intcon,7,c	;volatile
  3284                           
  3285                           ;main.c: 144: INTCONbits.GIE = 0;
  3286  012B24  9EF2               	bcf	intcon,7,c	;volatile
  3287                           
  3288                           ;main.c: 145: normal_mode_loop();
  3289  012B26  ECC9  F0A7         	call	_normal_mode_loop	;wreg free
  3290                           
  3291                           ;main.c: 146: INTCONbits.GIE = 1;
  3292  012B2A  8EF2               	bsf	intcon,7,c	;volatile
  3293                           
  3294                           ;main.c: 147: INTCONbits.GIE = 0;
  3295  012B2C  9EF2               	bcf	intcon,7,c	;volatile
  3296                           
  3297                           ;main.c: 148: RTCC_loop();
  3298  012B2E  ECBA  F0B1         	call	_RTCC_loop	;wreg free
  3299                           
  3300                           ;main.c: 149: INTCONbits.GIE = 1;
  3301  012B32  8EF2               	bsf	intcon,7,c	;volatile
  3302                           
  3303                           ;main.c: 150: INTCONbits.GIE = 0;
  3304  012B34  9EF2               	bcf	intcon,7,c	;volatile
  3305                           
  3306                           ;main.c: 151: ctmu_loop();
  3307  012B36  ECE6  F09D         	call	_ctmu_loop	;wreg free
  3308                           
  3309                           ;main.c: 152: INTCONbits.GIE = 1;
  3310  012B3A  8EF2               	bsf	intcon,7,c	;volatile
  3311                           
  3312                           ;main.c: 153: INTCONbits.GIE = 0;
  3313  012B3C  9EF2               	bcf	intcon,7,c	;volatile
  3314                           
  3315                           ;main.c: 154: sleep_loop();
  3316  012B3E  EC3B  F0A9         	call	_sleep_loop	;wreg free
  3317  012B42  D7E7               	goto	l942
  3318  012B44                     __end_of_main:
  3319                           	opt stack 0
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           prodh	equ	0xFF4
  3325                           prodl	equ	0xFF3
  3326                           intcon	equ	0xFF2
  3327                           postinc0	equ	0xFEE
  3328                           wreg	equ	0xFE8
  3329                           postdec1	equ	0xFE5
  3330                           fsr1h	equ	0xFE2
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           postdec2	equ	0xFDD
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _sleep_loop *****************
  3340 ;; Defined at:
  3341 ;;		line 749 in file "tasks.h"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  i               1   10[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3358 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3359 ;;Total ram usage:        1 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:   15
  3362 ;; This function calls:
  3363 ;;		_ADC
  3364 ;;		_I2C_LCD_Clear
  3365 ;;		_I2C_LCD_Puts
  3366 ;;		_I2C_LCD_SetCursor
  3367 ;;		_LED_OUT
  3368 ;;		_OUT
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text1
  3375  015276                     __ptext1:
  3376                           	opt stack 0
  3377  015276                     _sleep_loop:
  3378                           	opt stack 15
  3379                           
  3380                           ;tasks.h: 750: if (ADC(12) < 2048) {
  3381                           
  3382                           ;incstack = 0
  3383  015276  0E0C               	movlw	12
  3384  015278  EC6B  F0B3         	call	_ADC
  3385  01527C  0E08               	movlw	8
  3386  01527E  0100               	movlb	0	; () banked
  3387  015280  5DB6               	subwf	(?_ADC+1)& (0+255),w,b
  3388  015282  B0D8               	btfsc	status,0,c
  3389  015284  D049               	goto	l11458
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;tasks.h: 751: sleep_flag = 1;
  3393  015286  0E01               	movlw	1
  3394  015288  0100               	movlb	0	; () banked
  3395  01528A  6F9C               	movwf	_sleep_flag& (0+255),b
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;tasks.h: 752: INTCONbits.GIE = 0;
  3399  01528C  9EF2               	bcf	intcon,7,c	;volatile
  3400                           
  3401                           ;tasks.h: 753: for (uint8_t i = 0; i < 3; i++) {
  3402  01528E  0E00               	movlw	0
  3403  015290  0100               	movlb	0	; () banked
  3404  015292  6FBF               	movwf	sleep_loop@i& (0+255),b
  3405  015294                     l11434:
  3406                           
  3407                           ; BSR set to: 0
  3408  015294  0E02               	movlw	2
  3409  015296  0100               	movlb	0	; () banked
  3410  015298  65BF               	cpfsgt	sleep_loop@i& (0+255),b
  3411  01529A  D001               	goto	l11438
  3412  01529C  D011               	goto	l911
  3413  01529E                     l11438:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;tasks.h: 754: OUT(i, 0);
  3417  01529E  0E00               	movlw	0
  3418  0152A0  0100               	movlb	0	; () banked
  3419  0152A2  6FB5               	movwf	OUT@value& (0+255),b
  3420  0152A4  0100               	movlb	0	; () banked
  3421  0152A6  51BF               	movf	sleep_loop@i& (0+255),w,b
  3422  0152A8  ECDD  F0AE         	call	_OUT
  3423                           
  3424                           ;tasks.h: 755: LED_OUT(i, 0);
  3425  0152AC  0E00               	movlw	0
  3426  0152AE  0100               	movlb	0	; () banked
  3427  0152B0  6FB5               	movwf	LED_OUT@value& (0+255),b
  3428  0152B2  0100               	movlb	0	; () banked
  3429  0152B4  51BF               	movf	sleep_loop@i& (0+255),w,b
  3430  0152B6  ECA4  F0AE         	call	_LED_OUT
  3431  0152BA  0100               	movlb	0	; () banked
  3432  0152BC  2BBF               	incf	sleep_loop@i& (0+255),f,b
  3433  0152BE  D7EA               	goto	l11434
  3434  0152C0                     l911:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;tasks.h: 756: }
  3438                           ;tasks.h: 757: UCONbits.USBEN = 0;
  3439  0152C0  9665               	bcf	3941,3,c	;volatile
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;tasks.h: 758: I2C_LCD_Clear();
  3443  0152C2  EC2C  F0B5         	call	_I2C_LCD_Clear	;wreg free
  3444                           
  3445                           ;tasks.h: 759: I2C_LCD_SetCursor(0, 0);
  3446  0152C6  0E00               	movlw	0
  3447  0152C8  0100               	movlb	0	; () banked
  3448  0152CA  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3449  0152CC  0E00               	movlw	0
  3450  0152CE  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  3451                           
  3452                           ;tasks.h: 760: I2C_LCD_Puts("Charge Station 6");
  3453  0152D2  0E4B               	movlw	low STR_8
  3454  0152D4  0100               	movlb	0	; () banked
  3455  0152D6  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  3456  0152D8  0EFE               	movlw	high STR_8
  3457  0152DA  0100               	movlb	0	; () banked
  3458  0152DC  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3459  0152DE  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  3460                           
  3461                           ;tasks.h: 761: I2C_LCD_SetCursor(0, 1);
  3462  0152E2  0E01               	movlw	1
  3463  0152E4  0100               	movlb	0	; () banked
  3464  0152E6  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3465  0152E8  0E00               	movlw	0
  3466  0152EA  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  3467                           
  3468                           ;tasks.h: 762: I2C_LCD_Puts("SLEEPING");
  3469  0152EE  0E68               	movlw	low STR_98
  3470  0152F0  0100               	movlb	0	; () banked
  3471  0152F2  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  3472  0152F4  0EFF               	movlw	high STR_98
  3473  0152F6  0100               	movlb	0	; () banked
  3474  0152F8  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3475  0152FA  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  3476                           
  3477                           ;tasks.h: 763: }
  3478                           ;tasks.h: 764: while (sleep_flag) {
  3479  0152FE  D00C               	goto	l11458
  3480  015300                     l11454:
  3481                           
  3482                           ;tasks.h: 765: if (ADC(12) > 2048) {
  3483  015300  0E0C               	movlw	12
  3484  015302  EC6B  F0B3         	call	_ADC
  3485  015306  0100               	movlb	0	; () banked
  3486  015308  05B5               	decf	?_ADC& (0+255),w,b
  3487  01530A  0E08               	movlw	8
  3488  01530C  0100               	movlb	0	; () banked
  3489  01530E  59B6               	subwfb	(?_ADC+1)& (0+255),w,b
  3490  015310  B0D8               	btfsc	status,0,c
  3491                           
  3492                           ; BSR set to: 0
  3493  015312  00FF               	reset		;# 
  3494  015314  0003               	sleep		;# 
  3495                           
  3496                           ;tasks.h: 769: __nop();
  3497  015316  F000               	nop	
  3498  015318                     l11458:
  3499  015318  0100               	movlb	0	; () banked
  3500  01531A  519C               	movf	_sleep_flag& (0+255),w,b
  3501  01531C  0100               	movlb	0	; () banked
  3502  01531E  B4D8               	btfsc	status,2,c
  3503  015320  0012               	return	
  3504  015322  D7EE               	goto	l11454
  3505  015324                     __end_of_sleep_loop:
  3506                           	opt stack 0
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           prodh	equ	0xFF4
  3512                           prodl	equ	0xFF3
  3513                           intcon	equ	0xFF2
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           postdec1	equ	0xFE5
  3517                           fsr1h	equ	0xFE2
  3518                           fsr1l	equ	0xFE1
  3519                           indf2	equ	0xFDF
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526 ;; *************** function _rx_loop *****************
  3527 ;; Defined at:
  3528 ;;		line 509 in file "tasks.h"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  i               1  200[BANK1 ] unsigned char 
  3533 ;;  opland2       100    0[BANK3 ] unsigned char [100]
  3534 ;;  opland1       100  100[BANK2 ] unsigned char [100]
  3535 ;;  opcode        100  100[BANK1 ] unsigned char [100]
  3536 ;;  opland3       100    0[BANK2 ] unsigned char [100]
  3537 ;;  i               1  203[BANK2 ] unsigned char 
  3538 ;;  ascii           1  202[BANK2 ] unsigned char 
  3539 ;;  buf           100    0[BANK1 ] unsigned char [100]
  3540 ;; Return value:  Size  Location     Type
  3541 ;;		None               void
  3542 ;; Registers used:
  3543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;      Locals:         0       0     201     204     100       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Totals:         0       2     201     204     100       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;Total ram usage:      507 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:   18
  3556 ;; This function calls:
  3557 ;;		_command_operation
  3558 ;;		_ringbuf_backspace
  3559 ;;		_ringbuf_delete
  3560 ;;		_ringbuf_init
  3561 ;;		_ringbuf_num
  3562 ;;		_ringbuf_pop
  3563 ;;		_ringbuf_put
  3564 ;;		_tx_send
  3565 ;;		_tx_sendn
  3566 ;;		_tx_sends
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text2
  3573  0117CA                     __ptext2:
  3574                           	opt stack 0
  3575  0117CA                     _rx_loop:
  3576                           	opt stack 12
  3577                           
  3578                           ;tasks.h: 510: static ringbuf_t comm_buf;
  3579                           ;tasks.h: 511: static uint8_t comm_buf_init = 1;
  3580                           ;tasks.h: 512: if (comm_buf_init) {
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;incstack = 0
  3584  0117CA  0101               	movlb	1	; () banked
  3585  0117CC  51FF               	movf	rx_loop@comm_buf_init& (0+255),w,b
  3586  0117CE  0101               	movlb	1	; () banked
  3587  0117D0  B4D8               	btfsc	status,2,c
  3588  0117D2  D016               	goto	l11294
  3589                           
  3590                           ; BSR set to: 1
  3591                           ;tasks.h: 513: comm_buf_init = 0;
  3592  0117D4  0E00               	movlw	0
  3593  0117D6  0101               	movlb	1	; () banked
  3594  0117D8  6FFF               	movwf	rx_loop@comm_buf_init& (0+255),b
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;tasks.h: 514: char buf[100];
  3598                           ;tasks.h: 515: ringbuf_init(&comm_buf, buf, sizeof (buf));
  3599  0117DA  0EF0               	movlw	low rx_loop@comm_buf
  3600  0117DC  0100               	movlb	0	; () banked
  3601  0117DE  6FB5               	movwf	ringbuf_init@rb& (0+255),b
  3602  0117E0  0E01               	movlw	high rx_loop@comm_buf
  3603  0117E2  0100               	movlb	0	; () banked
  3604  0117E4  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3605  0117E6  0E00               	movlw	low rx_loop@buf
  3606  0117E8  0100               	movlb	0	; () banked
  3607  0117EA  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
  3608  0117EC  0E01               	movlw	high rx_loop@buf
  3609  0117EE  0100               	movlb	0	; () banked
  3610  0117F0  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3611  0117F2  0E00               	movlw	0
  3612  0117F4  0100               	movlb	0	; () banked
  3613  0117F6  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3614  0117F8  0E64               	movlw	100
  3615  0117FA  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
  3616  0117FC  ECF4  F0B0         	call	_ringbuf_init	;wreg free
  3617  011800                     l11294:
  3618                           
  3619                           ;tasks.h: 516: }
  3620                           ;tasks.h: 517: if (ringbuf_num(&rx_buf)) {
  3621  011800  0EE8               	movlw	low _rx_buf
  3622  011802  0100               	movlb	0	; () banked
  3623  011804  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  3624  011806  0E01               	movlw	high _rx_buf
  3625  011808  0100               	movlb	0	; () banked
  3626  01180A  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3627  01180C  EC5C  F0A0         	call	_ringbuf_num	;wreg free
  3628  011810  0100               	movlb	0	; () banked
  3629  011812  51B5               	movf	?_ringbuf_num& (0+255),w,b
  3630  011814  0100               	movlb	0	; () banked
  3631  011816  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3632  011818  B4D8               	btfsc	status,2,c
  3633  01181A  0012               	return	
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;tasks.h: 518: char ascii = ringbuf_pop(&rx_buf);
  3637  01181C  0EE8               	movlw	low _rx_buf
  3638  01181E  0100               	movlb	0	; () banked
  3639  011820  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3640  011822  0E01               	movlw	high _rx_buf
  3641  011824  0100               	movlb	0	; () banked
  3642  011826  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3643  011828  EC81  F0A5         	call	_ringbuf_pop	;wreg free
  3644  01182C  0102               	movlb	2	; () banked
  3645  01182E  6FCA               	movwf	rx_loop@ascii& (0+255),b
  3646                           
  3647                           ;tasks.h: 519: switch (ascii) {
  3648  011830  D155               	goto	l11360
  3649  011832                     l11298:
  3650                           
  3651                           ; BSR set to: 2
  3652                           ;tasks.h: 521: ringbuf_put(&comm_buf, '\0');
  3653  011832  0EF0               	movlw	low rx_loop@comm_buf
  3654  011834  0100               	movlb	0	; () banked
  3655  011836  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  3656  011838  0E01               	movlw	high rx_loop@comm_buf
  3657  01183A  0100               	movlb	0	; () banked
  3658  01183C  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3659  01183E  0E00               	movlw	0
  3660  011840  0100               	movlb	0	; () banked
  3661  011842  6FBF               	movwf	ringbuf_put@asciicode& (0+255),b
  3662  011844  EC48  F0A4         	call	_ringbuf_put	;wreg free
  3663                           
  3664                           ;tasks.h: 522: tx_send('\t');
  3665  011848  0E09               	movlw	9
  3666  01184A  EC10  F0B5         	call	_tx_send
  3667                           
  3668                           ;tasks.h: 523: tx_sendn(ringbuf_num(&comm_buf) - 1, 2);
  3669  01184E  0EF0               	movlw	low rx_loop@comm_buf
  3670  011850  0100               	movlb	0	; () banked
  3671  011852  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  3672  011854  0E01               	movlw	high rx_loop@comm_buf
  3673  011856  0100               	movlb	0	; () banked
  3674  011858  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3675  01185A  EC5C  F0A0         	call	_ringbuf_num	;wreg free
  3676  01185E  0EFF               	movlw	255
  3677  011860  0100               	movlb	0	; () banked
  3678  011862  25B5               	addwf	?_ringbuf_num& (0+255),w,b
  3679  011864  0102               	movlb	2	; () banked
  3680  011866  6FC8               	movwf	_rx_loop$5269& (0+255),b
  3681  011868  0EFF               	movlw	255
  3682  01186A  0100               	movlb	0	; () banked
  3683  01186C  21B6               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3684  01186E  0102               	movlb	2	; () banked
  3685  011870  6FC9               	movwf	(_rx_loop$5269+1)& (0+255),b
  3686                           
  3687                           ;tasks.h: 523: tx_sendn(ringbuf_num(&comm_buf) - 1, 2);
  3688  011872  C2C8  F0D8         	movff	_rx_loop$5269,tx_sendn@value
  3689  011876  C2C9  F0D9         	movff	_rx_loop$5269+1,tx_sendn@value+1
  3690  01187A  0E02               	movlw	2
  3691  01187C  0100               	movlb	0	; () banked
  3692  01187E  6FDA               	movwf	tx_sendn@digits& (0+255),b
  3693  011880  EC2E  F0AE         	call	_tx_sendn	;wreg free
  3694                           
  3695                           ;tasks.h: 524: tx_sends("\n");
  3696  011884  0EE8               	movlw	low (STR_44+488)
  3697  011886  0100               	movlb	0	; () banked
  3698  011888  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  3699  01188A  0EFD               	movlw	high (STR_44+488)
  3700  01188C  0100               	movlb	0	; () banked
  3701  01188E  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3702  011890  EC4E  F0AF         	call	_tx_sends	;wreg free
  3703                           
  3704                           ;tasks.h: 525: char opcode[100];
  3705                           ;tasks.h: 526: char opland1[100];
  3706                           ;tasks.h: 527: char opland2[100];
  3707                           ;tasks.h: 528: char opland3[100];
  3708                           ;tasks.h: 529: uint8_t i;
  3709                           ;tasks.h: 530: for (i = 0; opcode[i] = ringbuf_pop(&comm_buf); i++);
  3710  011894  0E00               	movlw	0
  3711  011896  0102               	movlb	2	; () banked
  3712  011898  6FCB               	movwf	rx_loop@i& (0+255),b
  3713  01189A  D002               	goto	l11306
  3714  01189C                     l11304:
  3715                           
  3716                           ; BSR set to: 2
  3717  01189C  0102               	movlb	2	; () banked
  3718  01189E  2BCB               	incf	rx_loop@i& (0+255),f,b
  3719  0118A0                     l11306:
  3720                           
  3721                           ; BSR set to: 2
  3722  0118A0  0EF0               	movlw	low rx_loop@comm_buf
  3723  0118A2  0100               	movlb	0	; () banked
  3724  0118A4  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3725  0118A6  0E01               	movlw	high rx_loop@comm_buf
  3726  0118A8  0100               	movlb	0	; () banked
  3727  0118AA  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3728  0118AC  EC81  F0A5         	call	_ringbuf_pop	;wreg free
  3729  0118B0  0100               	movlb	0	; () banked
  3730  0118B2  6FFB               	movwf	??_rx_loop& (0+255),b
  3731  0118B4  0102               	movlb	2	; () banked
  3732  0118B6  51CB               	movf	rx_loop@i& (0+255),w,b
  3733  0118B8  0D01               	mullw	1
  3734  0118BA  0E64               	movlw	low rx_loop@opcode
  3735  0118BC  24F3               	addwf	prodl,w,c
  3736  0118BE  6ED9               	movwf	fsr2l,c
  3737  0118C0  0E01               	movlw	high rx_loop@opcode
  3738  0118C2  20F4               	addwfc	prodh,w,c
  3739  0118C4  6EDA               	movwf	fsr2h,c
  3740  0118C6  C0FB  FFDF         	movff	??_rx_loop,indf2
  3741  0118CA  50DF               	movf	indf2,w,c
  3742  0118CC  A4D8               	btfss	status,2,c
  3743  0118CE  D7E6               	goto	l11304
  3744                           
  3745                           ; BSR set to: 2
  3746                           ;tasks.h: 531: opcode[i] = '\0';
  3747                           
  3748                           ; BSR set to: 2
  3749  0118D0  0102               	movlb	2	; () banked
  3750  0118D2  51CB               	movf	rx_loop@i& (0+255),w,b
  3751  0118D4  0D01               	mullw	1
  3752  0118D6  0E64               	movlw	low rx_loop@opcode
  3753  0118D8  24F3               	addwf	prodl,w,c
  3754  0118DA  6ED9               	movwf	fsr2l,c
  3755  0118DC  0E01               	movlw	high rx_loop@opcode
  3756  0118DE  20F4               	addwfc	prodh,w,c
  3757  0118E0  6EDA               	movwf	fsr2h,c
  3758  0118E2  0E00               	movlw	0
  3759  0118E4  6EDF               	movwf	indf2,c
  3760                           
  3761                           ; BSR set to: 2
  3762                           ;tasks.h: 532: for (i = 0; opland1[i] = ringbuf_pop(&comm_buf); i++);
  3763  0118E6  0E00               	movlw	0
  3764  0118E8  0102               	movlb	2	; () banked
  3765  0118EA  6FCB               	movwf	rx_loop@i& (0+255),b
  3766  0118EC  D002               	goto	l11314
  3767  0118EE                     l11312:
  3768                           
  3769                           ; BSR set to: 2
  3770  0118EE  0102               	movlb	2	; () banked
  3771  0118F0  2BCB               	incf	rx_loop@i& (0+255),f,b
  3772  0118F2                     l11314:
  3773                           
  3774                           ; BSR set to: 2
  3775  0118F2  0EF0               	movlw	low rx_loop@comm_buf
  3776  0118F4  0100               	movlb	0	; () banked
  3777  0118F6  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3778  0118F8  0E01               	movlw	high rx_loop@comm_buf
  3779  0118FA  0100               	movlb	0	; () banked
  3780  0118FC  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3781  0118FE  EC81  F0A5         	call	_ringbuf_pop	;wreg free
  3782  011902  0100               	movlb	0	; () banked
  3783  011904  6FFB               	movwf	??_rx_loop& (0+255),b
  3784  011906  0102               	movlb	2	; () banked
  3785  011908  51CB               	movf	rx_loop@i& (0+255),w,b
  3786  01190A  0D01               	mullw	1
  3787  01190C  0E64               	movlw	low rx_loop@opland1
  3788  01190E  24F3               	addwf	prodl,w,c
  3789  011910  6ED9               	movwf	fsr2l,c
  3790  011912  0E02               	movlw	high rx_loop@opland1
  3791  011914  20F4               	addwfc	prodh,w,c
  3792  011916  6EDA               	movwf	fsr2h,c
  3793  011918  C0FB  FFDF         	movff	??_rx_loop,indf2
  3794  01191C  50DF               	movf	indf2,w,c
  3795  01191E  A4D8               	btfss	status,2,c
  3796  011920  D7E6               	goto	l11312
  3797                           
  3798                           ; BSR set to: 2
  3799                           ;tasks.h: 533: opland1[i] = '\0';
  3800                           
  3801                           ; BSR set to: 2
  3802  011922  0102               	movlb	2	; () banked
  3803  011924  51CB               	movf	rx_loop@i& (0+255),w,b
  3804  011926  0D01               	mullw	1
  3805  011928  0E64               	movlw	low rx_loop@opland1
  3806  01192A  24F3               	addwf	prodl,w,c
  3807  01192C  6ED9               	movwf	fsr2l,c
  3808  01192E  0E02               	movlw	high rx_loop@opland1
  3809  011930  20F4               	addwfc	prodh,w,c
  3810  011932  6EDA               	movwf	fsr2h,c
  3811  011934  0E00               	movlw	0
  3812  011936  6EDF               	movwf	indf2,c
  3813                           
  3814                           ; BSR set to: 2
  3815                           ;tasks.h: 534: for (i = 0; opland2[i] = ringbuf_pop(&comm_buf); i++);
  3816  011938  0E00               	movlw	0
  3817  01193A  0102               	movlb	2	; () banked
  3818  01193C  6FCB               	movwf	rx_loop@i& (0+255),b
  3819  01193E  D002               	goto	l11322
  3820  011940                     l11320:
  3821                           
  3822                           ; BSR set to: 2
  3823  011940  0102               	movlb	2	; () banked
  3824  011942  2BCB               	incf	rx_loop@i& (0+255),f,b
  3825  011944                     l11322:
  3826                           
  3827                           ; BSR set to: 2
  3828  011944  0EF0               	movlw	low rx_loop@comm_buf
  3829  011946  0100               	movlb	0	; () banked
  3830  011948  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3831  01194A  0E01               	movlw	high rx_loop@comm_buf
  3832  01194C  0100               	movlb	0	; () banked
  3833  01194E  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3834  011950  EC81  F0A5         	call	_ringbuf_pop	;wreg free
  3835  011954  0100               	movlb	0	; () banked
  3836  011956  6FFB               	movwf	??_rx_loop& (0+255),b
  3837  011958  0102               	movlb	2	; () banked
  3838  01195A  51CB               	movf	rx_loop@i& (0+255),w,b
  3839  01195C  0D01               	mullw	1
  3840  01195E  0E85               	movlw	low rx_loop@opland2
  3841  011960  24F3               	addwf	prodl,w,c
  3842  011962  6ED9               	movwf	fsr2l,c
  3843  011964  0E03               	movlw	high rx_loop@opland2
  3844  011966  20F4               	addwfc	prodh,w,c
  3845  011968  6EDA               	movwf	fsr2h,c
  3846  01196A  C0FB  FFDF         	movff	??_rx_loop,indf2
  3847  01196E  50DF               	movf	indf2,w,c
  3848  011970  A4D8               	btfss	status,2,c
  3849  011972  D7E6               	goto	l11320
  3850                           
  3851                           ; BSR set to: 2
  3852                           ;tasks.h: 535: opland2[i] = '\0';
  3853                           
  3854                           ; BSR set to: 2
  3855  011974  0102               	movlb	2	; () banked
  3856  011976  51CB               	movf	rx_loop@i& (0+255),w,b
  3857  011978  0D01               	mullw	1
  3858  01197A  0E85               	movlw	low rx_loop@opland2
  3859  01197C  24F3               	addwf	prodl,w,c
  3860  01197E  6ED9               	movwf	fsr2l,c
  3861  011980  0E03               	movlw	high rx_loop@opland2
  3862  011982  20F4               	addwfc	prodh,w,c
  3863  011984  6EDA               	movwf	fsr2h,c
  3864  011986  0E00               	movlw	0
  3865  011988  6EDF               	movwf	indf2,c
  3866                           
  3867                           ; BSR set to: 2
  3868                           ;tasks.h: 536: for (i = 0; opland3[i] = ringbuf_pop(&comm_buf); i++);
  3869  01198A  0E00               	movlw	0
  3870  01198C  0102               	movlb	2	; () banked
  3871  01198E  6FCB               	movwf	rx_loop@i& (0+255),b
  3872  011990  D002               	goto	l11330
  3873  011992                     l11328:
  3874                           
  3875                           ; BSR set to: 2
  3876  011992  0102               	movlb	2	; () banked
  3877  011994  2BCB               	incf	rx_loop@i& (0+255),f,b
  3878  011996                     l11330:
  3879                           
  3880                           ; BSR set to: 2
  3881  011996  0EF0               	movlw	low rx_loop@comm_buf
  3882  011998  0100               	movlb	0	; () banked
  3883  01199A  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
  3884  01199C  0E01               	movlw	high rx_loop@comm_buf
  3885  01199E  0100               	movlb	0	; () banked
  3886  0119A0  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3887  0119A2  EC81  F0A5         	call	_ringbuf_pop	;wreg free
  3888  0119A6  0100               	movlb	0	; () banked
  3889  0119A8  6FFB               	movwf	??_rx_loop& (0+255),b
  3890  0119AA  0102               	movlb	2	; () banked
  3891  0119AC  51CB               	movf	rx_loop@i& (0+255),w,b
  3892  0119AE  0D01               	mullw	1
  3893  0119B0  0E00               	movlw	low rx_loop@opland3
  3894  0119B2  24F3               	addwf	prodl,w,c
  3895  0119B4  6ED9               	movwf	fsr2l,c
  3896  0119B6  0E02               	movlw	high rx_loop@opland3
  3897  0119B8  20F4               	addwfc	prodh,w,c
  3898  0119BA  6EDA               	movwf	fsr2h,c
  3899  0119BC  C0FB  FFDF         	movff	??_rx_loop,indf2
  3900  0119C0  50DF               	movf	indf2,w,c
  3901  0119C2  A4D8               	btfss	status,2,c
  3902  0119C4  D7E6               	goto	l11328
  3903                           
  3904                           ; BSR set to: 2
  3905                           ;tasks.h: 537: opland3[i] = '\0';
  3906                           
  3907                           ; BSR set to: 2
  3908  0119C6  0102               	movlb	2	; () banked
  3909  0119C8  51CB               	movf	rx_loop@i& (0+255),w,b
  3910  0119CA  0D01               	mullw	1
  3911  0119CC  0E00               	movlw	low rx_loop@opland3
  3912  0119CE  24F3               	addwf	prodl,w,c
  3913  0119D0  6ED9               	movwf	fsr2l,c
  3914  0119D2  0E02               	movlw	high rx_loop@opland3
  3915  0119D4  20F4               	addwfc	prodh,w,c
  3916  0119D6  6EDA               	movwf	fsr2h,c
  3917  0119D8  0E00               	movlw	0
  3918  0119DA  6EDF               	movwf	indf2,c
  3919                           
  3920                           ; BSR set to: 2
  3921                           ;tasks.h: 538: command_operation(opcode, opland1, opland2, opland3);
  3922  0119DC  0E64               	movlw	low rx_loop@opcode
  3923  0119DE  0100               	movlb	0	; () banked
  3924  0119E0  6FF1               	movwf	command_operation@opcode& (0+255),b
  3925  0119E2  0E01               	movlw	high rx_loop@opcode
  3926  0119E4  0100               	movlb	0	; () banked
  3927  0119E6  6FF2               	movwf	(command_operation@opcode+1)& (0+255),b
  3928  0119E8  0E64               	movlw	low rx_loop@opland1
  3929  0119EA  0100               	movlb	0	; () banked
  3930  0119EC  6FF3               	movwf	command_operation@opland1& (0+255),b
  3931  0119EE  0E02               	movlw	high rx_loop@opland1
  3932  0119F0  0100               	movlb	0	; () banked
  3933  0119F2  6FF4               	movwf	(command_operation@opland1+1)& (0+255),b
  3934  0119F4  0E85               	movlw	low rx_loop@opland2
  3935  0119F6  0100               	movlb	0	; () banked
  3936  0119F8  6FF5               	movwf	command_operation@opland2& (0+255),b
  3937  0119FA  0E03               	movlw	high rx_loop@opland2
  3938  0119FC  0100               	movlb	0	; () banked
  3939  0119FE  6FF6               	movwf	(command_operation@opland2+1)& (0+255),b
  3940  011A00  0E00               	movlw	low rx_loop@opland3
  3941  011A02  0100               	movlb	0	; () banked
  3942  011A04  6FF7               	movwf	command_operation@opland3& (0+255),b
  3943  011A06  0E02               	movlw	high rx_loop@opland3
  3944  011A08  0100               	movlb	0	; () banked
  3945  011A0A  6FF8               	movwf	(command_operation@opland3+1)& (0+255),b
  3946  011A0C  EC00  F080         	call	_command_operation	;wreg free
  3947                           
  3948                           ;tasks.h: 539: break;
  3949  011A10  0012               	return	
  3950  011A12                     l11336:
  3951                           
  3952                           ;tasks.h: 541: ringbuf_put(&comm_buf, '\0');
  3953  011A12  0EF0               	movlw	low rx_loop@comm_buf
  3954  011A14  0100               	movlb	0	; () banked
  3955  011A16  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  3956  011A18  0E01               	movlw	high rx_loop@comm_buf
  3957  011A1A  0100               	movlb	0	; () banked
  3958  011A1C  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3959  011A1E  0E00               	movlw	0
  3960  011A20  0100               	movlb	0	; () banked
  3961  011A22  6FBF               	movwf	ringbuf_put@asciicode& (0+255),b
  3962  011A24  EC48  F0A4         	call	_ringbuf_put	;wreg free
  3963                           
  3964                           ;tasks.h: 542: tx_send(' ');
  3965  011A28  0E20               	movlw	32
  3966  011A2A  EC10  F0B5         	call	_tx_send
  3967                           
  3968                           ;tasks.h: 543: break;
  3969  011A2E  0012               	return	
  3970  011A30                     l11338:
  3971                           
  3972                           ;tasks.h: 545: ringbuf_backspace(&comm_buf);
  3973  011A30  0EF0               	movlw	low rx_loop@comm_buf
  3974  011A32  0100               	movlb	0	; () banked
  3975  011A34  6FBD               	movwf	ringbuf_backspace@rb& (0+255),b
  3976  011A36  0E01               	movlw	high rx_loop@comm_buf
  3977  011A38  0100               	movlb	0	; () banked
  3978  011A3A  6FBE               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3979  011A3C  EC56  F0AC         	call	_ringbuf_backspace	;wreg free
  3980                           
  3981                           ;tasks.h: 546: tx_sends("\b \b");
  3982  011A40  0ECF               	movlw	low STR_95
  3983  011A42  0100               	movlb	0	; () banked
  3984  011A44  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  3985  011A46  0EFF               	movlw	high STR_95
  3986  011A48  0100               	movlb	0	; () banked
  3987  011A4A  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3988  011A4C  EC4E  F0AF         	call	_tx_sends	;wreg free
  3989                           
  3990                           ;tasks.h: 547: break;
  3991  011A50  0012               	return	
  3992  011A52                     l11342:
  3993                           
  3994                           ;tasks.h: 549: for (uint8_t i = 0; i < ringbuf_num(&comm_buf); i++) tx_sends("\b \b");
  3995  011A52  0E00               	movlw	0
  3996  011A54  0101               	movlb	1	; () banked
  3997  011A56  6FC8               	movwf	rx_loop@i_2425& (0+255),b
  3998  011A58  D00A               	goto	l11348
  3999  011A5A                     l11344:
  4000  011A5A  0ECF               	movlw	low STR_95
  4001  011A5C  0100               	movlb	0	; () banked
  4002  011A5E  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4003  011A60  0EFF               	movlw	high STR_95
  4004  011A62  0100               	movlb	0	; () banked
  4005  011A64  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4006  011A66  EC4E  F0AF         	call	_tx_sends	;wreg free
  4007  011A6A  0101               	movlb	1	; () banked
  4008  011A6C  2BC8               	incf	rx_loop@i_2425& (0+255),f,b
  4009  011A6E                     l11348:
  4010                           
  4011                           ; BSR set to: 1
  4012  011A6E  0EF0               	movlw	low rx_loop@comm_buf
  4013  011A70  0100               	movlb	0	; () banked
  4014  011A72  6FB5               	movwf	ringbuf_num@rb& (0+255),b
  4015  011A74  0E01               	movlw	high rx_loop@comm_buf
  4016  011A76  0100               	movlb	0	; () banked
  4017  011A78  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
  4018  011A7A  EC5C  F0A0         	call	_ringbuf_num	;wreg free
  4019  011A7E  0101               	movlb	1	; () banked
  4020  011A80  51C8               	movf	rx_loop@i_2425& (0+255),w,b
  4021  011A82  0100               	movlb	0	; () banked
  4022  011A84  6FFB               	movwf	??_rx_loop& (0+255),b
  4023  011A86  6BFC               	clrf	(??_rx_loop+1)& (0+255),b
  4024  011A88  0100               	movlb	0	; () banked
  4025  011A8A  51B5               	movf	?_ringbuf_num& (0+255),w,b
  4026  011A8C  0100               	movlb	0	; () banked
  4027  011A8E  5DFB               	subwf	??_rx_loop& (0+255),w,b
  4028  011A90  0100               	movlb	0	; () banked
  4029  011A92  51B6               	movf	(?_ringbuf_num+1)& (0+255),w,b
  4030  011A94  0100               	movlb	0	; () banked
  4031  011A96  59FC               	subwfb	(??_rx_loop+1)& (0+255),w,b
  4032  011A98  A0D8               	btfss	status,0,c
  4033  011A9A  D7DF               	goto	l11344
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;tasks.h: 550: ringbuf_delete(&comm_buf);
  4037                           
  4038                           ; BSR set to: 0
  4039  011A9C  0EF0               	movlw	low rx_loop@comm_buf
  4040  011A9E  0100               	movlb	0	; () banked
  4041  011AA0  6FB5               	movwf	ringbuf_delete@rb& (0+255),b
  4042  011AA2  0E01               	movlw	high rx_loop@comm_buf
  4043  011AA4  0100               	movlb	0	; () banked
  4044  011AA6  6FB6               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  4045  011AA8  EC87  F0B4         	call	_ringbuf_delete	;wreg free
  4046                           
  4047                           ;tasks.h: 551: break;
  4048  011AAC  0012               	return	
  4049  011AAE                     l11352:
  4050                           
  4051                           ;tasks.h: 553: if (ascii >= ' ' && ascii <= '~') {
  4052  011AAE  0E1F               	movlw	31
  4053  011AB0  0102               	movlb	2	; () banked
  4054  011AB2  65CA               	cpfsgt	rx_loop@ascii& (0+255),b
  4055  011AB4  0012               	return	
  4056                           
  4057                           ; BSR set to: 2
  4058  011AB6  0E7F               	movlw	127
  4059  011AB8  0102               	movlb	2	; () banked
  4060  011ABA  61CA               	cpfslt	rx_loop@ascii& (0+255),b
  4061  011ABC  0012               	return	
  4062                           
  4063                           ; BSR set to: 2
  4064                           ;tasks.h: 554: ringbuf_put(&comm_buf, ascii);
  4065  011ABE  0EF0               	movlw	low rx_loop@comm_buf
  4066  011AC0  0100               	movlb	0	; () banked
  4067  011AC2  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  4068  011AC4  0E01               	movlw	high rx_loop@comm_buf
  4069  011AC6  0100               	movlb	0	; () banked
  4070  011AC8  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4071  011ACA  C2CA  F0BF         	movff	rx_loop@ascii,ringbuf_put@asciicode
  4072  011ACE  EC48  F0A4         	call	_ringbuf_put	;wreg free
  4073                           
  4074                           ;tasks.h: 555: tx_send(ascii);
  4075  011AD2  0102               	movlb	2	; () banked
  4076  011AD4  51CA               	movf	rx_loop@ascii& (0+255),w,b
  4077  011AD6  EC10  F0B5         	call	_tx_send
  4078                           
  4079                           ;tasks.h: 558: }
  4080                           
  4081                           ;tasks.h: 556: }
  4082                           ;tasks.h: 557: break;
  4083  011ADA  0012               	return	
  4084  011ADC                     l11360:
  4085  011ADC  0102               	movlb	2	; () banked
  4086  011ADE  51CA               	movf	rx_loop@ascii& (0+255),w,b
  4087                           
  4088                           ; Switch size 1, requested type "space"
  4089                           ; Number of cases is 4, Range of values is 8 to 127
  4090                           ; switch strategies available:
  4091                           ; Name         Instructions Cycles
  4092                           ; simple_byte           13     7 (average)
  4093                           ;	Chosen strategy is simple_byte
  4094  011AE0  0A08               	xorlw	8	; case 8
  4095  011AE2  B4D8               	btfsc	status,2,c
  4096  011AE4  D7A5               	goto	l11338
  4097  011AE6  0A05               	xorlw	5	; case 13
  4098  011AE8  B4D8               	btfsc	status,2,c
  4099  011AEA  D6A3               	goto	l11298
  4100  011AEC  0A2D               	xorlw	45	; case 32
  4101  011AEE  B4D8               	btfsc	status,2,c
  4102  011AF0  D790               	goto	l11336
  4103  011AF2  0A5F               	xorlw	95	; case 127
  4104  011AF4  B4D8               	btfsc	status,2,c
  4105  011AF6  D7AD               	goto	l11342
  4106  011AF8  D7DA               	goto	l11352
  4107  011AFA                     __end_of_rx_loop:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           postdec1	equ	0xFE5
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _ringbuf_delete *****************
  4129 ;; Defined at:
  4130 ;;		line 85 in file "../My_header\My_ringbuf.h"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  4133 ;;		 -> rx_loop@comm_buf(8), 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;		None               void
  4138 ;; Registers used:
  4139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4149 ;;Total ram usage:        2 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:   11
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_rx_loop
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text3
  4160  01690E                     __ptext3:
  4161                           	opt stack 0
  4162  01690E                     _ringbuf_delete:
  4163                           	opt stack 18
  4164                           
  4165                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  4166                           
  4167                           ;incstack = 0
  4168  01690E  0100               	movlb	0	; () banked
  4169  016910  EE20 F006          	lfsr	2,6
  4170  016914  51B5               	movf	ringbuf_delete@rb& (0+255),w,b
  4171  016916  26D9               	addwf	fsr2l,f,c
  4172  016918  51B6               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  4173  01691A  22DA               	addwfc	fsr2h,f,c
  4174  01691C  0100               	movlb	0	; () banked
  4175  01691E  EE10 F004          	lfsr	1,4
  4176  016922  51B5               	movf	ringbuf_delete@rb& (0+255),w,b
  4177  016924  26E1               	addwf	fsr1l,f,c
  4178  016926  51B6               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  4179  016928  22E2               	addwfc	fsr1h,f,c
  4180  01692A  CFDE FFE6          	movff	postinc2,postinc1
  4181  01692E  CFDD FFE5          	movff	postdec2,postdec1
  4182                           
  4183                           ; BSR set to: 0
  4184  016932  0012               	return		;funcret
  4185  016934                     __end_of_ringbuf_delete:
  4186                           	opt stack 0
  4187                           tblptru	equ	0xFF8
  4188                           tblptrh	equ	0xFF7
  4189                           tblptrl	equ	0xFF6
  4190                           tablat	equ	0xFF5
  4191                           prodh	equ	0xFF4
  4192                           prodl	equ	0xFF3
  4193                           intcon	equ	0xFF2
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           postinc1	equ	0xFE6
  4197                           postdec1	equ	0xFE5
  4198                           fsr1h	equ	0xFE2
  4199                           fsr1l	equ	0xFE1
  4200                           indf2	equ	0xFDF
  4201                           postinc2	equ	0xFDE
  4202                           postdec2	equ	0xFDD
  4203                           fsr2h	equ	0xFDA
  4204                           fsr2l	equ	0xFD9
  4205                           status	equ	0xFD8
  4206                           
  4207 ;; *************** function _ringbuf_backspace *****************
  4208 ;; Defined at:
  4209 ;;		line 78 in file "../My_header\My_ringbuf.h"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  4212 ;;		 -> rx_loop@comm_buf(8), 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;		None               void
  4217 ;; Registers used:
  4218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4226 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4227 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;Total ram usage:        6 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:   12
  4231 ;; This function calls:
  4232 ;;		_ringbuf_num
  4233 ;; This function is called by:
  4234 ;;		_rx_loop
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text4
  4239  0158AC                     __ptext4:
  4240                           	opt stack 0
  4241  0158AC                     _ringbuf_backspace:
  4242                           	opt stack 17
  4243                           
  4244                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;incstack = 0
  4248  0158AC  C0BD  F0B5         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  4249  0158B0  C0BE  F0B6         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  4250  0158B4  EC5C  F0A0         	call	_ringbuf_num	;wreg free
  4251  0158B8  0100               	movlb	0	; () banked
  4252  0158BA  51B5               	movf	?_ringbuf_num& (0+255),w,b
  4253  0158BC  0100               	movlb	0	; () banked
  4254  0158BE  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  4255  0158C0  B4D8               	btfsc	status,2,c
  4256  0158C2  0012               	return	
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  4260  0158C4  0100               	movlb	0	; () banked
  4261  0158C6  EE20 F004          	lfsr	2,4
  4262  0158CA  51BD               	movf	ringbuf_backspace@rb& (0+255),w,b
  4263  0158CC  26D9               	addwf	fsr2l,f,c
  4264  0158CE  51BE               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4265  0158D0  22DA               	addwfc	fsr2h,f,c
  4266  0158D2  50DE               	movf	postinc2,w,c
  4267  0158D4  10DE               	iorwf	postinc2,w,c
  4268  0158D6  B4D8               	btfsc	status,2,c
  4269  0158D8  D00B               	goto	l10604
  4270                           
  4271                           ; BSR set to: 0
  4272  0158DA  0100               	movlb	0	; () banked
  4273  0158DC  EE20 F004          	lfsr	2,4
  4274  0158E0  51BD               	movf	ringbuf_backspace@rb& (0+255),w,b
  4275  0158E2  26D9               	addwf	fsr2l,f,c
  4276  0158E4  51BE               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4277  0158E6  22DA               	addwfc	fsr2h,f,c
  4278  0158E8  06DE               	decf	postinc2,f,c
  4279  0158EA  0E00               	movlw	0
  4280  0158EC  5ADD               	subwfb	postdec2,f,c
  4281  0158EE  0012               	return	
  4282  0158F0                     l10604:
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  4286  0158F0  0EFF               	movlw	255
  4287  0158F2  0100               	movlb	0	; () banked
  4288  0158F4  6FBF               	movwf	??_ringbuf_backspace& (0+255),b
  4289  0158F6  0EFF               	movlw	255
  4290  0158F8  0100               	movlb	0	; () banked
  4291  0158FA  6FC0               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  4292  0158FC  0100               	movlb	0	; () banked
  4293  0158FE  EE20 F002          	lfsr	2,2
  4294  015902  51BD               	movf	ringbuf_backspace@rb& (0+255),w,b
  4295  015904  26D9               	addwf	fsr2l,f,c
  4296  015906  51BE               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4297  015908  22DA               	addwfc	fsr2h,f,c
  4298  01590A  CFDE F0C1          	movff	postinc2,??_ringbuf_backspace+2
  4299  01590E  CFDD F0C2          	movff	postdec2,??_ringbuf_backspace+3
  4300  015912  0100               	movlb	0	; () banked
  4301  015914  51BF               	movf	??_ringbuf_backspace& (0+255),w,b
  4302  015916  0100               	movlb	0	; () banked
  4303  015918  27C1               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  4304  01591A  0100               	movlb	0	; () banked
  4305  01591C  51C0               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  4306  01591E  0100               	movlb	0	; () banked
  4307  015920  23C2               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  4308  015922  0100               	movlb	0	; () banked
  4309  015924  EE20 F004          	lfsr	2,4
  4310  015928  51BD               	movf	ringbuf_backspace@rb& (0+255),w,b
  4311  01592A  26D9               	addwf	fsr2l,f,c
  4312  01592C  51BE               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4313  01592E  22DA               	addwfc	fsr2h,f,c
  4314  015930  C0C1  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  4315  015934  C0C2  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  4316                           
  4317                           ; BSR set to: 0
  4318  015938  0012               	return	
  4319  01593A                     __end_of_ringbuf_backspace:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           intcon	equ	0xFF2
  4328                           postinc0	equ	0xFEE
  4329                           wreg	equ	0xFE8
  4330                           postinc1	equ	0xFE6
  4331                           postdec1	equ	0xFE5
  4332                           fsr1h	equ	0xFE2
  4333                           fsr1l	equ	0xFE1
  4334                           indf2	equ	0xFDF
  4335                           postinc2	equ	0xFDE
  4336                           postdec2	equ	0xFDD
  4337                           fsr2h	equ	0xFDA
  4338                           fsr2l	equ	0xFD9
  4339                           status	equ	0xFD8
  4340                           
  4341 ;; *************** function _command_operation *****************
  4342 ;; Defined at:
  4343 ;;		line 406 in file "tasks.h"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  opcode          2   60[BANK0 ] PTR unsigned char 
  4346 ;;		 -> rx_loop@opcode(100), 
  4347 ;;  opland1         2   62[BANK0 ] PTR unsigned char 
  4348 ;;		 -> rx_loop@opland1(100), 
  4349 ;;  opland2         2   64[BANK0 ] PTR unsigned char 
  4350 ;;		 -> rx_loop@opland2(100), 
  4351 ;;  opland3         2   66[BANK0 ] PTR unsigned char 
  4352 ;;		 -> rx_loop@opland3(100), 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  percentage      1   69[BANK0 ] unsigned char 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4364 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;Total ram usage:       10 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:   17
  4371 ;; This function calls:
  4372 ;;		_comm_at
  4373 ;;		_comm_disp
  4374 ;;		_ctmu_set_ratio
  4375 ;;		_month_length
  4376 ;;		_my_atoi
  4377 ;;		_my_strcmp
  4378 ;;		_print_time
  4379 ;;		_tx_sends
  4380 ;; This function is called by:
  4381 ;;		_rx_loop
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text5
  4386  010000                     __ptext5:
  4387                           	opt stack 0
  4388  010000                     _command_operation:
  4389                           	opt stack 12
  4390                           
  4391                           ;tasks.h: 407: if (!my_strcmp(opcode, "help") || !my_strcmp(opcode, "?")) {
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;incstack = 0
  4395  010000  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4396  010004  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4397  010008  0EC0               	movlw	low STR_42
  4398  01000A  0100               	movlb	0	; () banked
  4399  01000C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4400  01000E  0EFF               	movlw	high STR_42
  4401  010010  0100               	movlb	0	; () banked
  4402  010012  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4403  010014  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4404  010018  0900               	iorlw	0
  4405  01001A  B4D8               	btfsc	status,2,c
  4406  01001C  D00F               	goto	l10914
  4407  01001E  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4408  010022  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4409  010026  0EEF               	movlw	low (STR_21+10)
  4410  010028  0100               	movlb	0	; () banked
  4411  01002A  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4412  01002C  0EFE               	movlw	high (STR_21+10)
  4413  01002E  0100               	movlb	0	; () banked
  4414  010030  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4415  010032  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4416  010036  0900               	iorlw	0
  4417  010038  A4D8               	btfss	status,2,c
  4418  01003A  D008               	goto	l10916
  4419  01003C                     l10914:
  4420                           
  4421                           ;tasks.h: 408: tx_sends(
  4422                           ;tasks.h: 409: "\t****************************\n"
  4423                           ;tasks.h: 410: "\t**** Charge Station 6.7 ****\n"
  4424                           ;tasks.h: 411: "\t**** Made by @Ryokeri   ****\n"
  4425                           ;tasks.h: 412: "\t****************************\n\n"
  4426                           ;tasks.h: 413: "\tcommand \topeland1\topeland2\n\n"
  4427                           ;tasks.h: 414: "\tprint_time(t)\n"
  4428                           ;tasks.h: 415: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4429                           ;tasks.h: 416: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[auto_stop(as),al
      +                          ways_on(ao),integrating_reset(ir)]\n"
  4430  01003C  0E00               	movlw	low STR_44
  4431  01003E  0100               	movlb	0	; () banked
  4432  010040  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4433  010042  0EFC               	movlw	high STR_44
  4434  010044  0100               	movlb	0	; () banked
  4435  010046  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4436  010048  EC4E  F0AF         	call	_tx_sends	;wreg free
  4437  01004C                     l10916:
  4438                           
  4439                           ;tasks.h: 421: }
  4440                           ;tasks.h: 422: if (!my_strcmp(opcode, "settings") || !my_strcmp(opcode, "set")) {
  4441  01004C  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4442  010050  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4443  010054  0E7A               	movlw	low STR_45
  4444  010056  0100               	movlb	0	; () banked
  4445  010058  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4446  01005A  0EFF               	movlw	high STR_45
  4447  01005C  0100               	movlb	0	; () banked
  4448  01005E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4449  010060  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4450  010064  0900               	iorlw	0
  4451  010066  B4D8               	btfsc	status,2,c
  4452  010068  D00F               	goto	l10920
  4453  01006A  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4454  01006E  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4455  010072  0EB1               	movlw	low (STR_63+2)
  4456  010074  0100               	movlb	0	; () banked
  4457  010076  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4458  010078  0EFF               	movlw	high (STR_63+2)
  4459  01007A  0100               	movlb	0	; () banked
  4460  01007C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4461  01007E  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4462  010082  0900               	iorlw	0
  4463  010084  A4D8               	btfss	status,2,c
  4464  010086  D00C               	goto	l10922
  4465  010088                     l10920:
  4466                           
  4467                           ;tasks.h: 423: if (!my_strcmp(opland1, "auto_stop")) {
  4468  010088  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4469  01008C  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4470  010090  0E4B               	movlw	low STR_47
  4471  010092  0100               	movlb	0	; () banked
  4472  010094  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4473  010096  0EFF               	movlw	high STR_47
  4474  010098  0100               	movlb	0	; () banked
  4475  01009A  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4476  01009C  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4477  0100A0                     l10922:
  4478                           
  4479                           ;tasks.h: 424: }
  4480                           ;tasks.h: 425: }
  4481                           ;tasks.h: 426: if (!my_strcmp(opcode, "RESET();")) {
  4482  0100A0  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4483  0100A4  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4484  0100A8  0E5F               	movlw	low STR_48
  4485  0100AA  0100               	movlb	0	; () banked
  4486  0100AC  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4487  0100AE  0EFF               	movlw	high STR_48
  4488  0100B0  0100               	movlb	0	; () banked
  4489  0100B2  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4490  0100B4  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4491  0100B8  0900               	iorlw	0
  4492  0100BA  B4D8               	btfsc	status,2,c
  4493  0100BC  00FF               	reset		;# 
  4494                           
  4495                           ;tasks.h: 428: }
  4496                           ;tasks.h: 429: if (!my_strcmp(opcode, "bootload")) {
  4497  0100BE  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4498  0100C2  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4499  0100C6  0E71               	movlw	low STR_49
  4500  0100C8  0100               	movlb	0	; () banked
  4501  0100CA  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4502  0100CC  0EFF               	movlw	high STR_49
  4503  0100CE  0100               	movlb	0	; () banked
  4504  0100D0  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4505  0100D2  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4506  0100D6  0900               	iorlw	0
  4507  0100D8  B4D8               	btfsc	status,2,c
  4508  0100DA  EF0E F000          	goto	28	;# 
  4509                           
  4510                           ;tasks.h: 431: }
  4511                           ;tasks.h: 432: if (!my_strcmp(opcode, "at") || !my_strcmp(opcode, "adjust_time")) {
  4512  0100DE  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4513  0100E2  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4514  0100E6  0EEF               	movlw	low STR_50
  4515  0100E8  0100               	movlb	0	; () banked
  4516  0100EA  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4517  0100EC  0EFF               	movlw	high STR_50
  4518  0100EE  0100               	movlb	0	; () banked
  4519  0100F0  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4520  0100F2  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4521  0100F6  0900               	iorlw	0
  4522  0100F8  B4D8               	btfsc	status,2,c
  4523  0100FA  D00F               	goto	l10934
  4524  0100FC  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4525  010100  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4526  010104  0EFD               	movlw	low STR_51
  4527  010106  0100               	movlb	0	; () banked
  4528  010108  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4529  01010A  0EFE               	movlw	high STR_51
  4530  01010C  0100               	movlb	0	; () banked
  4531  01010E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4532  010110  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4533  010114  0900               	iorlw	0
  4534  010116  A4D8               	btfss	status,2,c
  4535  010118  D0F1               	goto	l10960
  4536  01011A                     l10934:
  4537                           
  4538                           ;tasks.h: 433: if (!my_strcmp(opland1, "y")) {
  4539  01011A  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4540  01011E  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4541  010122  0E99               	movlw	low (STR_66+6)
  4542  010124  0100               	movlb	0	; () banked
  4543  010126  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4544  010128  0EFF               	movlw	high (STR_66+6)
  4545  01012A  0100               	movlb	0	; () banked
  4546  01012C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4547  01012E  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4548  010132  0900               	iorlw	0
  4549  010134  A4D8               	btfss	status,2,c
  4550  010136  D018               	goto	l10938
  4551                           
  4552                           ;tasks.h: 434: comm_at(&caltime_now.YY, 0, 99, my_atoi(opland2));
  4553  010138  0EAC               	movlw	low (_caltime_now+6)
  4554  01013A  0100               	movlb	0	; () banked
  4555  01013C  6FEC               	movwf	comm_at@hand& (0+255),b
  4556  01013E  0E00               	movlw	high (_caltime_now+6)
  4557  010140  0100               	movlb	0	; () banked
  4558  010142  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4559  010144  0E00               	movlw	0
  4560  010146  0100               	movlb	0	; () banked
  4561  010148  6FEE               	movwf	comm_at@min& (0+255),b
  4562  01014A  0E63               	movlw	99
  4563  01014C  0100               	movlb	0	; () banked
  4564  01014E  6FEF               	movwf	comm_at@max& (0+255),b
  4565  010150  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4566  010154  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4567  010158  EC88  F0AA         	call	_my_atoi	;wreg free
  4568  01015C  0100               	movlb	0	; () banked
  4569  01015E  51D1               	movf	?_my_atoi& (0+255),w,b
  4570  010160  0100               	movlb	0	; () banked
  4571  010162  6FF0               	movwf	comm_at@value& (0+255),b
  4572  010164  ECE6  F0AF         	call	_comm_at	;wreg free
  4573  010168                     l10938:
  4574                           
  4575                           ;tasks.h: 435: }
  4576                           ;tasks.h: 436: if (!my_strcmp(opland1, "M")) {
  4577  010168  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4578  01016C  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4579  010170  0EF8               	movlw	low STR_53
  4580  010172  0100               	movlb	0	; () banked
  4581  010174  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4582  010176  0EFF               	movlw	high STR_53
  4583  010178  0100               	movlb	0	; () banked
  4584  01017A  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4585  01017C  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4586  010180  0900               	iorlw	0
  4587  010182  A4D8               	btfss	status,2,c
  4588  010184  D018               	goto	l10942
  4589                           
  4590                           ;tasks.h: 437: comm_at(&caltime_now.MM, 1, 12, my_atoi(opland2));
  4591  010186  0EAB               	movlw	low (_caltime_now+5)
  4592  010188  0100               	movlb	0	; () banked
  4593  01018A  6FEC               	movwf	comm_at@hand& (0+255),b
  4594  01018C  0E00               	movlw	high (_caltime_now+5)
  4595  01018E  0100               	movlb	0	; () banked
  4596  010190  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4597  010192  0E01               	movlw	1
  4598  010194  0100               	movlb	0	; () banked
  4599  010196  6FEE               	movwf	comm_at@min& (0+255),b
  4600  010198  0E0C               	movlw	12
  4601  01019A  0100               	movlb	0	; () banked
  4602  01019C  6FEF               	movwf	comm_at@max& (0+255),b
  4603  01019E  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4604  0101A2  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4605  0101A6  EC88  F0AA         	call	_my_atoi	;wreg free
  4606  0101AA  0100               	movlb	0	; () banked
  4607  0101AC  51D1               	movf	?_my_atoi& (0+255),w,b
  4608  0101AE  0100               	movlb	0	; () banked
  4609  0101B0  6FF0               	movwf	comm_at@value& (0+255),b
  4610  0101B2  ECE6  F0AF         	call	_comm_at	;wreg free
  4611  0101B6                     l10942:
  4612                           
  4613                           ;tasks.h: 438: }
  4614                           ;tasks.h: 439: if (!my_strcmp(opland1, "d")) {
  4615  0101B6  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4616  0101BA  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4617  0101BE  0E78               	movlw	low (STR_49+7)
  4618  0101C0  0100               	movlb	0	; () banked
  4619  0101C2  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4620  0101C4  0EFF               	movlw	high (STR_49+7)
  4621  0101C6  0100               	movlb	0	; () banked
  4622  0101C8  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4623  0101CA  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4624  0101CE  0900               	iorlw	0
  4625  0101D0  A4D8               	btfss	status,2,c
  4626  0101D2  D01F               	goto	l10948
  4627                           
  4628                           ;tasks.h: 440: comm_at(&caltime_now.DD, 1, month_length(caltime_now.YY, caltime_now.MM),
      +                           my_atoi(opland2));
  4629  0101D4  C0AB  F0BB         	movff	_caltime_now+5,month_length@month
  4630  0101D8  0100               	movlb	0	; () banked
  4631  0101DA  51AC               	movf	(_caltime_now+6)& (0+255),w,b
  4632  0101DC  EC2C  F0A2         	call	_month_length
  4633  0101E0  0100               	movlb	0	; () banked
  4634  0101E2  6FF9               	movwf	_command_operation$5268& (0+255),b
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;tasks.h: 440: comm_at(&caltime_now.DD, 1, month_length(caltime_now.YY, caltime_now.MM),
      +                           my_atoi(opland2));
  4638  0101E4  0EAA               	movlw	low (_caltime_now+4)
  4639  0101E6  0100               	movlb	0	; () banked
  4640  0101E8  6FEC               	movwf	comm_at@hand& (0+255),b
  4641  0101EA  0E00               	movlw	high (_caltime_now+4)
  4642  0101EC  0100               	movlb	0	; () banked
  4643  0101EE  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4644  0101F0  0E01               	movlw	1
  4645  0101F2  0100               	movlb	0	; () banked
  4646  0101F4  6FEE               	movwf	comm_at@min& (0+255),b
  4647  0101F6  C0F9  F0EF         	movff	_command_operation$5268,comm_at@max
  4648  0101FA  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4649  0101FE  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4650  010202  EC88  F0AA         	call	_my_atoi	;wreg free
  4651  010206  0100               	movlb	0	; () banked
  4652  010208  51D1               	movf	?_my_atoi& (0+255),w,b
  4653  01020A  0100               	movlb	0	; () banked
  4654  01020C  6FF0               	movwf	comm_at@value& (0+255),b
  4655  01020E  ECE6  F0AF         	call	_comm_at	;wreg free
  4656  010212                     l10948:
  4657                           
  4658                           ;tasks.h: 441: }
  4659                           ;tasks.h: 442: if (!my_strcmp(opland1, "h")) {
  4660  010212  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4661  010216  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4662  01021A  0ED5               	movlw	low (STR_11+2)
  4663  01021C  0100               	movlb	0	; () banked
  4664  01021E  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4665  010220  0EFF               	movlw	high (STR_11+2)
  4666  010222  0100               	movlb	0	; () banked
  4667  010224  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4668  010226  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4669  01022A  0900               	iorlw	0
  4670  01022C  A4D8               	btfss	status,2,c
  4671  01022E  D018               	goto	l10952
  4672                           
  4673                           ;tasks.h: 443: comm_at(&caltime_now.hh, 0, 23, my_atoi(opland2));
  4674  010230  0EA8               	movlw	low (_caltime_now+2)
  4675  010232  0100               	movlb	0	; () banked
  4676  010234  6FEC               	movwf	comm_at@hand& (0+255),b
  4677  010236  0E00               	movlw	high (_caltime_now+2)
  4678  010238  0100               	movlb	0	; () banked
  4679  01023A  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4680  01023C  0E00               	movlw	0
  4681  01023E  0100               	movlb	0	; () banked
  4682  010240  6FEE               	movwf	comm_at@min& (0+255),b
  4683  010242  0E17               	movlw	23
  4684  010244  0100               	movlb	0	; () banked
  4685  010246  6FEF               	movwf	comm_at@max& (0+255),b
  4686  010248  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4687  01024C  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4688  010250  EC88  F0AA         	call	_my_atoi	;wreg free
  4689  010254  0100               	movlb	0	; () banked
  4690  010256  51D1               	movf	?_my_atoi& (0+255),w,b
  4691  010258  0100               	movlb	0	; () banked
  4692  01025A  6FF0               	movwf	comm_at@value& (0+255),b
  4693  01025C  ECE6  F0AF         	call	_comm_at	;wreg free
  4694  010260                     l10952:
  4695                           
  4696                           ;tasks.h: 444: }
  4697                           ;tasks.h: 445: if (!my_strcmp(opland1, "m")) {
  4698  010260  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4699  010264  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4700  010268  0EFC               	movlw	low STR_56
  4701  01026A  0100               	movlb	0	; () banked
  4702  01026C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4703  01026E  0EFF               	movlw	high STR_56
  4704  010270  0100               	movlb	0	; () banked
  4705  010272  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4706  010274  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4707  010278  0900               	iorlw	0
  4708  01027A  A4D8               	btfss	status,2,c
  4709  01027C  D018               	goto	l10956
  4710                           
  4711                           ;tasks.h: 446: comm_at(&caltime_now.mm, 0, 59, my_atoi(opland2));
  4712  01027E  0EA7               	movlw	low (_caltime_now+1)
  4713  010280  0100               	movlb	0	; () banked
  4714  010282  6FEC               	movwf	comm_at@hand& (0+255),b
  4715  010284  0E00               	movlw	high (_caltime_now+1)
  4716  010286  0100               	movlb	0	; () banked
  4717  010288  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4718  01028A  0E00               	movlw	0
  4719  01028C  0100               	movlb	0	; () banked
  4720  01028E  6FEE               	movwf	comm_at@min& (0+255),b
  4721  010290  0E3B               	movlw	59
  4722  010292  0100               	movlb	0	; () banked
  4723  010294  6FEF               	movwf	comm_at@max& (0+255),b
  4724  010296  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4725  01029A  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4726  01029E  EC88  F0AA         	call	_my_atoi	;wreg free
  4727  0102A2  0100               	movlb	0	; () banked
  4728  0102A4  51D1               	movf	?_my_atoi& (0+255),w,b
  4729  0102A6  0100               	movlb	0	; () banked
  4730  0102A8  6FF0               	movwf	comm_at@value& (0+255),b
  4731  0102AA  ECE6  F0AF         	call	_comm_at	;wreg free
  4732  0102AE                     l10956:
  4733                           
  4734                           ;tasks.h: 447: }
  4735                           ;tasks.h: 448: if (!my_strcmp(opland1, "s")) {
  4736  0102AE  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4737  0102B2  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4738  0102B6  0E81               	movlw	low (STR_45+7)
  4739  0102B8  0100               	movlb	0	; () banked
  4740  0102BA  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4741  0102BC  0EFF               	movlw	high (STR_45+7)
  4742  0102BE  0100               	movlb	0	; () banked
  4743  0102C0  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4744  0102C2  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4745  0102C6  0900               	iorlw	0
  4746  0102C8  A4D8               	btfss	status,2,c
  4747  0102CA  D018               	goto	l10960
  4748                           
  4749                           ;tasks.h: 449: comm_at(&caltime_now.ss, 0, 59, my_atoi(opland2));
  4750  0102CC  0EA6               	movlw	low _caltime_now
  4751  0102CE  0100               	movlb	0	; () banked
  4752  0102D0  6FEC               	movwf	comm_at@hand& (0+255),b
  4753  0102D2  0E00               	movlw	high _caltime_now
  4754  0102D4  0100               	movlb	0	; () banked
  4755  0102D6  6FED               	movwf	(comm_at@hand+1)& (0+255),b
  4756  0102D8  0E00               	movlw	0
  4757  0102DA  0100               	movlb	0	; () banked
  4758  0102DC  6FEE               	movwf	comm_at@min& (0+255),b
  4759  0102DE  0E3B               	movlw	59
  4760  0102E0  0100               	movlb	0	; () banked
  4761  0102E2  6FEF               	movwf	comm_at@max& (0+255),b
  4762  0102E4  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4763  0102E8  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4764  0102EC  EC88  F0AA         	call	_my_atoi	;wreg free
  4765  0102F0  0100               	movlb	0	; () banked
  4766  0102F2  51D1               	movf	?_my_atoi& (0+255),w,b
  4767  0102F4  0100               	movlb	0	; () banked
  4768  0102F6  6FF0               	movwf	comm_at@value& (0+255),b
  4769  0102F8  ECE6  F0AF         	call	_comm_at	;wreg free
  4770  0102FC                     l10960:
  4771                           
  4772                           ;tasks.h: 450: }
  4773                           ;tasks.h: 451: }
  4774                           ;tasks.h: 452: if (!my_strcmp(opcode, "touch")) {
  4775  0102FC  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4776  010300  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4777  010304  0EA9               	movlw	low STR_58
  4778  010306  0100               	movlb	0	; () banked
  4779  010308  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4780  01030A  0EFF               	movlw	high STR_58
  4781  01030C  0100               	movlb	0	; () banked
  4782  01030E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4783  010310  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4784  010314  0900               	iorlw	0
  4785  010316  A4D8               	btfss	status,2,c
  4786  010318  D06D               	goto	l10986
  4787                           
  4788                           ;tasks.h: 453: if (!my_strcmp(opland1, "initialize") || !my_strcmp(opland1, "init")) {
  4789  01031A  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4790  01031E  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4791  010322  0E2B               	movlw	low STR_59
  4792  010324  0100               	movlb	0	; () banked
  4793  010326  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4794  010328  0EFF               	movlw	high STR_59
  4795  01032A  0100               	movlb	0	; () banked
  4796  01032C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4797  01032E  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4798  010332  0900               	iorlw	0
  4799  010334  B4D8               	btfsc	status,2,c
  4800  010336  D00F               	goto	l10966
  4801  010338  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4802  01033C  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4803  010340  0ECA               	movlw	low STR_60
  4804  010342  0100               	movlb	0	; () banked
  4805  010344  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4806  010346  0EFF               	movlw	high STR_60
  4807  010348  0100               	movlb	0	; () banked
  4808  01034A  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4809  01034C  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4810  010350  0900               	iorlw	0
  4811  010352  A4D8               	btfss	status,2,c
  4812  010354  D025               	goto	l10978
  4813  010356                     l10966:
  4814                           
  4815                           ;tasks.h: 454: uint8_t percentage = my_atoi(opland2);
  4816  010356  C0F5  F0D1         	movff	command_operation@opland2,my_atoi@str
  4817  01035A  C0F6  F0D2         	movff	command_operation@opland2+1,my_atoi@str+1
  4818  01035E  EC88  F0AA         	call	_my_atoi	;wreg free
  4819  010362  0100               	movlb	0	; () banked
  4820  010364  51D1               	movf	?_my_atoi& (0+255),w,b
  4821  010366  0100               	movlb	0	; () banked
  4822  010368  6FFA               	movwf	command_operation@percentage& (0+255),b
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;tasks.h: 455: if (percentage <= 100) {
  4826  01036A  0E65               	movlw	101
  4827  01036C  0100               	movlb	0	; () banked
  4828  01036E  61FA               	cpfslt	command_operation@percentage& (0+255),b
  4829  010370  D00F               	goto	l10976
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;tasks.h: 456: ctmu_ratio = percentage;
  4833  010372  C0FA  F097         	movff	command_operation@percentage,_ctmu_ratio
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;tasks.h: 457: ctmu_set_ratio(ctmu_ratio);
  4837  010376  0100               	movlb	0	; () banked
  4838  010378  5197               	movf	_ctmu_ratio& (0+255),w,b
  4839  01037A  EC48  F0A1         	call	_ctmu_set_ratio
  4840                           
  4841                           ;tasks.h: 458: tx_sends("\tinitializing complete\n");
  4842  01037E  0E0E               	movlw	low STR_61
  4843  010380  0100               	movlb	0	; () banked
  4844  010382  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4845  010384  0EFE               	movlw	high STR_61
  4846  010386  0100               	movlb	0	; () banked
  4847  010388  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4848  01038A  EC4E  F0AF         	call	_tx_sends	;wreg free
  4849                           
  4850                           ;tasks.h: 459: } else {
  4851  01038E  D008               	goto	l10978
  4852  010390                     l10976:
  4853                           
  4854                           ;tasks.h: 460: tx_sends("\tinvalid data\n\tinitializing failed\n");
  4855  010390  0EEA               	movlw	low STR_62
  4856  010392  0100               	movlb	0	; () banked
  4857  010394  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4858  010396  0EFD               	movlw	high STR_62
  4859  010398  0100               	movlb	0	; () banked
  4860  01039A  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4861  01039C  EC4E  F0AF         	call	_tx_sends	;wreg free
  4862  0103A0                     l10978:
  4863                           
  4864                           ;tasks.h: 461: }
  4865                           ;tasks.h: 462: }
  4866                           ;tasks.h: 463: if (!my_strcmp(opland1, "reset") || !my_strcmp(opland1, "r")) {
  4867  0103A0  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4868  0103A4  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4869  0103A8  0EAF               	movlw	low STR_63
  4870  0103AA  0100               	movlb	0	; () banked
  4871  0103AC  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4872  0103AE  0EFF               	movlw	high STR_63
  4873  0103B0  0100               	movlb	0	; () banked
  4874  0103B2  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4875  0103B4  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4876  0103B8  0900               	iorlw	0
  4877  0103BA  B4D8               	btfsc	status,2,c
  4878  0103BC  D00F               	goto	l10982
  4879  0103BE  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4880  0103C2  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4881  0103C6  0EA7               	movlw	low (STR_76+5)
  4882  0103C8  0100               	movlb	0	; () banked
  4883  0103CA  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4884  0103CC  0EFF               	movlw	high (STR_76+5)
  4885  0103CE  0100               	movlb	0	; () banked
  4886  0103D0  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4887  0103D2  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4888  0103D6  0900               	iorlw	0
  4889  0103D8  A4D8               	btfss	status,2,c
  4890  0103DA  D00C               	goto	l10986
  4891  0103DC                     l10982:
  4892                           
  4893                           ;tasks.h: 464: ctmu_set_ratio(ctmu_ratio);
  4894  0103DC  0100               	movlb	0	; () banked
  4895  0103DE  5197               	movf	_ctmu_ratio& (0+255),w,b
  4896  0103E0  EC48  F0A1         	call	_ctmu_set_ratio
  4897                           
  4898                           ;tasks.h: 465: tx_sends("\tseting complete\n");
  4899  0103E4  0E39               	movlw	low STR_65
  4900  0103E6  0100               	movlb	0	; () banked
  4901  0103E8  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  4902  0103EA  0EFE               	movlw	high STR_65
  4903  0103EC  0100               	movlb	0	; () banked
  4904  0103EE  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4905  0103F0  EC4E  F0AF         	call	_tx_sends	;wreg free
  4906  0103F4                     l10986:
  4907                           
  4908                           ;tasks.h: 466: }
  4909                           ;tasks.h: 467: }
  4910                           ;tasks.h: 468: if (!my_strcmp(opcode, "display") || !my_strcmp(opcode, "d")) {
  4911  0103F4  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4912  0103F8  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4913  0103FC  0E93               	movlw	low STR_66
  4914  0103FE  0100               	movlb	0	; () banked
  4915  010400  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4916  010402  0EFF               	movlw	high STR_66
  4917  010404  0100               	movlb	0	; () banked
  4918  010406  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4919  010408  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4920  01040C  0900               	iorlw	0
  4921  01040E  B4D8               	btfsc	status,2,c
  4922  010410  D00F               	goto	l10990
  4923  010412  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  4924  010416  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  4925  01041A  0E78               	movlw	low (STR_49+7)
  4926  01041C  0100               	movlb	0	; () banked
  4927  01041E  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4928  010420  0EFF               	movlw	high (STR_49+7)
  4929  010422  0100               	movlb	0	; () banked
  4930  010424  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4931  010426  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4932  01042A  0900               	iorlw	0
  4933  01042C  A4D8               	btfss	status,2,c
  4934  01042E  D19E               	goto	l11056
  4935  010430                     l10990:
  4936                           
  4937                           ;tasks.h: 469: if (!my_strcmp(opland1, "left") || !my_strcmp(opland1, "l")) {
  4938  010430  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4939  010434  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4940  010438  0EC5               	movlw	low STR_68
  4941  01043A  0100               	movlb	0	; () banked
  4942  01043C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4943  01043E  0EFF               	movlw	high STR_68
  4944  010440  0100               	movlb	0	; () banked
  4945  010442  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4946  010444  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4947  010448  0900               	iorlw	0
  4948  01044A  B4D8               	btfsc	status,2,c
  4949  01044C  D00F               	goto	l10994
  4950  01044E  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  4951  010452  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  4952  010456  0EFA               	movlw	low STR_69
  4953  010458  0100               	movlb	0	; () banked
  4954  01045A  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4955  01045C  0EFF               	movlw	high STR_69
  4956  01045E  0100               	movlb	0	; () banked
  4957  010460  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4958  010462  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4959  010466  0900               	iorlw	0
  4960  010468  A4D8               	btfss	status,2,c
  4961  01046A  D06C               	goto	l11012
  4962  01046C                     l10994:
  4963                           
  4964                           ;tasks.h: 470: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  4965  01046C  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4966  010470  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4967  010474  0E31               	movlw	low (STR_72+11)
  4968  010476  0100               	movlb	0	; () banked
  4969  010478  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4970  01047A  0EFE               	movlw	high (STR_72+11)
  4971  01047C  0100               	movlb	0	; () banked
  4972  01047E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4973  010480  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4974  010484  0900               	iorlw	0
  4975  010486  B4D8               	btfsc	status,2,c
  4976  010488  D00F               	goto	l10998
  4977  01048A  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  4978  01048E  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  4979  010492  0EED               	movlw	low (STR_73+1)
  4980  010494  0100               	movlb	0	; () banked
  4981  010496  6FB7               	movwf	my_strcmp@str2& (0+255),b
  4982  010498  0EFF               	movlw	high (STR_73+1)
  4983  01049A  0100               	movlb	0	; () banked
  4984  01049C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  4985  01049E  ECE5  F0A9         	call	_my_strcmp	;wreg free
  4986  0104A2  0900               	iorlw	0
  4987  0104A4  A4D8               	btfss	status,2,c
  4988  0104A6  D006               	goto	l11000
  4989  0104A8                     l10998:
  4990                           
  4991                           ;tasks.h: 471: comm_disp(0, 0);
  4992  0104A8  0E00               	movlw	0
  4993  0104AA  0100               	movlb	0	; () banked
  4994  0104AC  6FE0               	movwf	comm_disp@i& (0+255),b
  4995  0104AE  0E00               	movlw	0
  4996  0104B0  ECC0  F089         	call	_comm_disp
  4997  0104B4                     l11000:
  4998                           
  4999                           ;tasks.h: 472: }
  5000                           ;tasks.h: 473: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  5001  0104B4  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5002  0104B8  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5003  0104BC  0E26               	movlw	low STR_72
  5004  0104BE  0100               	movlb	0	; () banked
  5005  0104C0  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5006  0104C2  0EFE               	movlw	high STR_72
  5007  0104C4  0100               	movlb	0	; () banked
  5008  0104C6  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5009  0104C8  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5010  0104CC  0900               	iorlw	0
  5011  0104CE  B4D8               	btfsc	status,2,c
  5012  0104D0  D00F               	goto	l11004
  5013  0104D2  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5014  0104D6  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5015  0104DA  0EEC               	movlw	low STR_73
  5016  0104DC  0100               	movlb	0	; () banked
  5017  0104DE  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5018  0104E0  0EFF               	movlw	high STR_73
  5019  0104E2  0100               	movlb	0	; () banked
  5020  0104E4  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5021  0104E6  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5022  0104EA  0900               	iorlw	0
  5023  0104EC  A4D8               	btfss	status,2,c
  5024  0104EE  D006               	goto	l11006
  5025  0104F0                     l11004:
  5026                           
  5027                           ;tasks.h: 474: comm_disp(1, 0);
  5028  0104F0  0E00               	movlw	0
  5029  0104F2  0100               	movlb	0	; () banked
  5030  0104F4  6FE0               	movwf	comm_disp@i& (0+255),b
  5031  0104F6  0E01               	movlw	1
  5032  0104F8  ECC0  F089         	call	_comm_disp
  5033  0104FC                     l11006:
  5034                           
  5035                           ;tasks.h: 475: }
  5036                           ;tasks.h: 476: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  5037  0104FC  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5038  010500  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5039  010504  0E8E               	movlw	low STR_74
  5040  010506  0100               	movlb	0	; () banked
  5041  010508  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5042  01050A  0EFE               	movlw	high STR_74
  5043  01050C  0100               	movlb	0	; () banked
  5044  01050E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5045  010510  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5046  010514  0900               	iorlw	0
  5047  010516  B4D8               	btfsc	status,2,c
  5048  010518  D00F               	goto	l11010
  5049  01051A  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5050  01051E  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5051  010522  0ECC               	movlw	low (STR_60+2)
  5052  010524  0100               	movlb	0	; () banked
  5053  010526  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5054  010528  0EFF               	movlw	high (STR_60+2)
  5055  01052A  0100               	movlb	0	; () banked
  5056  01052C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5057  01052E  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5058  010532  0900               	iorlw	0
  5059  010534  A4D8               	btfss	status,2,c
  5060  010536  D006               	goto	l11012
  5061  010538                     l11010:
  5062                           
  5063                           ;tasks.h: 477: comm_disp(2, 0);
  5064  010538  0E00               	movlw	0
  5065  01053A  0100               	movlb	0	; () banked
  5066  01053C  6FE0               	movwf	comm_disp@i& (0+255),b
  5067  01053E  0E02               	movlw	2
  5068  010540  ECC0  F089         	call	_comm_disp
  5069  010544                     l11012:
  5070                           
  5071                           ;tasks.h: 478: }
  5072                           ;tasks.h: 480: }
  5073                           ;tasks.h: 481: if (!my_strcmp(opland1, "center") || !my_strcmp(opland1, "c")) {
  5074  010544  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  5075  010548  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  5076  01054C  0EA2               	movlw	low STR_76
  5077  01054E  0100               	movlb	0	; () banked
  5078  010550  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5079  010552  0EFF               	movlw	high STR_76
  5080  010554  0100               	movlb	0	; () banked
  5081  010556  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5082  010558  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5083  01055C  0900               	iorlw	0
  5084  01055E  B4D8               	btfsc	status,2,c
  5085  010560  D00F               	goto	l11016
  5086  010562  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  5087  010566  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  5088  01056A  0EED               	movlw	low (STR_73+1)
  5089  01056C  0100               	movlb	0	; () banked
  5090  01056E  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5091  010570  0EFF               	movlw	high (STR_73+1)
  5092  010572  0100               	movlb	0	; () banked
  5093  010574  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5094  010576  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5095  01057A  0900               	iorlw	0
  5096  01057C  A4D8               	btfss	status,2,c
  5097  01057E  D06C               	goto	l11034
  5098  010580                     l11016:
  5099                           
  5100                           ;tasks.h: 482: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  5101  010580  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5102  010584  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5103  010588  0E31               	movlw	low (STR_72+11)
  5104  01058A  0100               	movlb	0	; () banked
  5105  01058C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5106  01058E  0EFE               	movlw	high (STR_72+11)
  5107  010590  0100               	movlb	0	; () banked
  5108  010592  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5109  010594  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5110  010598  0900               	iorlw	0
  5111  01059A  B4D8               	btfsc	status,2,c
  5112  01059C  D00F               	goto	l11020
  5113  01059E  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5114  0105A2  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5115  0105A6  0EED               	movlw	low (STR_73+1)
  5116  0105A8  0100               	movlb	0	; () banked
  5117  0105AA  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5118  0105AC  0EFF               	movlw	high (STR_73+1)
  5119  0105AE  0100               	movlb	0	; () banked
  5120  0105B0  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5121  0105B2  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5122  0105B6  0900               	iorlw	0
  5123  0105B8  A4D8               	btfss	status,2,c
  5124  0105BA  D006               	goto	l11022
  5125  0105BC                     l11020:
  5126                           
  5127                           ;tasks.h: 483: comm_disp(0, 1);
  5128  0105BC  0E01               	movlw	1
  5129  0105BE  0100               	movlb	0	; () banked
  5130  0105C0  6FE0               	movwf	comm_disp@i& (0+255),b
  5131  0105C2  0E00               	movlw	0
  5132  0105C4  ECC0  F089         	call	_comm_disp
  5133  0105C8                     l11022:
  5134                           
  5135                           ;tasks.h: 484: }
  5136                           ;tasks.h: 485: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  5137  0105C8  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5138  0105CC  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5139  0105D0  0E26               	movlw	low STR_72
  5140  0105D2  0100               	movlb	0	; () banked
  5141  0105D4  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5142  0105D6  0EFE               	movlw	high STR_72
  5143  0105D8  0100               	movlb	0	; () banked
  5144  0105DA  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5145  0105DC  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5146  0105E0  0900               	iorlw	0
  5147  0105E2  B4D8               	btfsc	status,2,c
  5148  0105E4  D00F               	goto	l11026
  5149  0105E6  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5150  0105EA  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5151  0105EE  0EEC               	movlw	low STR_73
  5152  0105F0  0100               	movlb	0	; () banked
  5153  0105F2  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5154  0105F4  0EFF               	movlw	high STR_73
  5155  0105F6  0100               	movlb	0	; () banked
  5156  0105F8  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5157  0105FA  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5158  0105FE  0900               	iorlw	0
  5159  010600  A4D8               	btfss	status,2,c
  5160  010602  D006               	goto	l11028
  5161  010604                     l11026:
  5162                           
  5163                           ;tasks.h: 486: comm_disp(1, 1);
  5164  010604  0E01               	movlw	1
  5165  010606  0100               	movlb	0	; () banked
  5166  010608  6FE0               	movwf	comm_disp@i& (0+255),b
  5167  01060A  0E01               	movlw	1
  5168  01060C  ECC0  F089         	call	_comm_disp
  5169  010610                     l11028:
  5170                           
  5171                           ;tasks.h: 487: }
  5172                           ;tasks.h: 488: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  5173  010610  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5174  010614  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5175  010618  0E8E               	movlw	low STR_74
  5176  01061A  0100               	movlb	0	; () banked
  5177  01061C  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5178  01061E  0EFE               	movlw	high STR_74
  5179  010620  0100               	movlb	0	; () banked
  5180  010622  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5181  010624  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5182  010628  0900               	iorlw	0
  5183  01062A  B4D8               	btfsc	status,2,c
  5184  01062C  D00F               	goto	l11032
  5185  01062E  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5186  010632  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5187  010636  0ECC               	movlw	low (STR_60+2)
  5188  010638  0100               	movlb	0	; () banked
  5189  01063A  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5190  01063C  0EFF               	movlw	high (STR_60+2)
  5191  01063E  0100               	movlb	0	; () banked
  5192  010640  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5193  010642  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5194  010646  0900               	iorlw	0
  5195  010648  A4D8               	btfss	status,2,c
  5196  01064A  D006               	goto	l11034
  5197  01064C                     l11032:
  5198                           
  5199                           ;tasks.h: 489: comm_disp(2, 1);
  5200  01064C  0E01               	movlw	1
  5201  01064E  0100               	movlb	0	; () banked
  5202  010650  6FE0               	movwf	comm_disp@i& (0+255),b
  5203  010652  0E02               	movlw	2
  5204  010654  ECC0  F089         	call	_comm_disp
  5205  010658                     l11034:
  5206                           
  5207                           ;tasks.h: 490: }
  5208                           ;tasks.h: 491: }
  5209                           ;tasks.h: 492: if (!my_strcmp(opland1, "right") || !my_strcmp(opland1, "r")) {
  5210  010658  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  5211  01065C  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  5212  010660  0EB5               	movlw	low STR_84
  5213  010662  0100               	movlb	0	; () banked
  5214  010664  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5215  010666  0EFF               	movlw	high STR_84
  5216  010668  0100               	movlb	0	; () banked
  5217  01066A  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5218  01066C  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5219  010670  0900               	iorlw	0
  5220  010672  B4D8               	btfsc	status,2,c
  5221  010674  D00F               	goto	l11038
  5222  010676  C0F3  F0B5         	movff	command_operation@opland1,my_strcmp@str1
  5223  01067A  C0F4  F0B6         	movff	command_operation@opland1+1,my_strcmp@str1+1
  5224  01067E  0EA7               	movlw	low (STR_76+5)
  5225  010680  0100               	movlb	0	; () banked
  5226  010682  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5227  010684  0EFF               	movlw	high (STR_76+5)
  5228  010686  0100               	movlb	0	; () banked
  5229  010688  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5230  01068A  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5231  01068E  0900               	iorlw	0
  5232  010690  A4D8               	btfss	status,2,c
  5233  010692  D06C               	goto	l11056
  5234  010694                     l11038:
  5235                           
  5236                           ;tasks.h: 493: if (!my_strcmp(opland2, "current") || !my_strcmp(opland2, "c")) {
  5237  010694  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5238  010698  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5239  01069C  0E31               	movlw	low (STR_72+11)
  5240  01069E  0100               	movlb	0	; () banked
  5241  0106A0  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5242  0106A2  0EFE               	movlw	high (STR_72+11)
  5243  0106A4  0100               	movlb	0	; () banked
  5244  0106A6  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5245  0106A8  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5246  0106AC  0900               	iorlw	0
  5247  0106AE  B4D8               	btfsc	status,2,c
  5248  0106B0  D00F               	goto	l11042
  5249  0106B2  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5250  0106B6  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5251  0106BA  0EED               	movlw	low (STR_73+1)
  5252  0106BC  0100               	movlb	0	; () banked
  5253  0106BE  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5254  0106C0  0EFF               	movlw	high (STR_73+1)
  5255  0106C2  0100               	movlb	0	; () banked
  5256  0106C4  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5257  0106C6  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5258  0106CA  0900               	iorlw	0
  5259  0106CC  A4D8               	btfss	status,2,c
  5260  0106CE  D006               	goto	l11044
  5261  0106D0                     l11042:
  5262                           
  5263                           ;tasks.h: 494: comm_disp(0, 2);
  5264  0106D0  0E02               	movlw	2
  5265  0106D2  0100               	movlb	0	; () banked
  5266  0106D4  6FE0               	movwf	comm_disp@i& (0+255),b
  5267  0106D6  0E00               	movlw	0
  5268  0106D8  ECC0  F089         	call	_comm_disp
  5269  0106DC                     l11044:
  5270                           
  5271                           ;tasks.h: 495: }
  5272                           ;tasks.h: 496: if (!my_strcmp(opland2, "integrated_current") || !my_strcmp(opland2, "ic"
      +                          )) {
  5273  0106DC  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5274  0106E0  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5275  0106E4  0E26               	movlw	low STR_72
  5276  0106E6  0100               	movlb	0	; () banked
  5277  0106E8  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5278  0106EA  0EFE               	movlw	high STR_72
  5279  0106EC  0100               	movlb	0	; () banked
  5280  0106EE  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5281  0106F0  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5282  0106F4  0900               	iorlw	0
  5283  0106F6  B4D8               	btfsc	status,2,c
  5284  0106F8  D00F               	goto	l11048
  5285  0106FA  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5286  0106FE  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5287  010702  0EEC               	movlw	low STR_73
  5288  010704  0100               	movlb	0	; () banked
  5289  010706  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5290  010708  0EFF               	movlw	high STR_73
  5291  01070A  0100               	movlb	0	; () banked
  5292  01070C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5293  01070E  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5294  010712  0900               	iorlw	0
  5295  010714  A4D8               	btfss	status,2,c
  5296  010716  D006               	goto	l11050
  5297  010718                     l11048:
  5298                           
  5299                           ;tasks.h: 497: comm_disp(1, 2);
  5300  010718  0E02               	movlw	2
  5301  01071A  0100               	movlb	0	; () banked
  5302  01071C  6FE0               	movwf	comm_disp@i& (0+255),b
  5303  01071E  0E01               	movlw	1
  5304  010720  ECC0  F089         	call	_comm_disp
  5305  010724                     l11050:
  5306                           
  5307                           ;tasks.h: 498: }
  5308                           ;tasks.h: 499: if (!my_strcmp(opland2, "integrated_time") || !my_strcmp(opland2, "it")) 
      +                          {
  5309  010724  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5310  010728  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5311  01072C  0E8E               	movlw	low STR_74
  5312  01072E  0100               	movlb	0	; () banked
  5313  010730  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5314  010732  0EFE               	movlw	high STR_74
  5315  010734  0100               	movlb	0	; () banked
  5316  010736  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5317  010738  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5318  01073C  0900               	iorlw	0
  5319  01073E  B4D8               	btfsc	status,2,c
  5320  010740  D00F               	goto	l11054
  5321  010742  C0F5  F0B5         	movff	command_operation@opland2,my_strcmp@str1
  5322  010746  C0F6  F0B6         	movff	command_operation@opland2+1,my_strcmp@str1+1
  5323  01074A  0ECC               	movlw	low (STR_60+2)
  5324  01074C  0100               	movlb	0	; () banked
  5325  01074E  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5326  010750  0EFF               	movlw	high (STR_60+2)
  5327  010752  0100               	movlb	0	; () banked
  5328  010754  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5329  010756  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5330  01075A  0900               	iorlw	0
  5331  01075C  A4D8               	btfss	status,2,c
  5332  01075E  D006               	goto	l11056
  5333  010760                     l11054:
  5334                           
  5335                           ;tasks.h: 500: comm_disp(2, 2);
  5336  010760  0E02               	movlw	2
  5337  010762  0100               	movlb	0	; () banked
  5338  010764  6FE0               	movwf	comm_disp@i& (0+255),b
  5339  010766  0E02               	movlw	2
  5340  010768  ECC0  F089         	call	_comm_disp
  5341  01076C                     l11056:
  5342                           
  5343                           ;tasks.h: 501: }
  5344                           ;tasks.h: 502: }
  5345                           ;tasks.h: 503: }
  5346                           ;tasks.h: 504: if (!my_strcmp(opcode, "print_time") || !my_strcmp(opcode, "t")) {
  5347  01076C  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  5348  010770  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  5349  010774  0E20               	movlw	low STR_92
  5350  010776  0100               	movlb	0	; () banked
  5351  010778  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5352  01077A  0EFF               	movlw	high STR_92
  5353  01077C  0100               	movlb	0	; () banked
  5354  01077E  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5355  010780  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5356  010784  0900               	iorlw	0
  5357  010786  B4D8               	btfsc	status,2,c
  5358  010788  D00F               	goto	l11060
  5359  01078A  C0F1  F0B5         	movff	command_operation@opcode,my_strcmp@str1
  5360  01078E  C0F2  F0B6         	movff	command_operation@opcode+1,my_strcmp@str1+1
  5361  010792  0EF0               	movlw	low (STR_50+1)
  5362  010794  0100               	movlb	0	; () banked
  5363  010796  6FB7               	movwf	my_strcmp@str2& (0+255),b
  5364  010798  0EFF               	movlw	high (STR_50+1)
  5365  01079A  0100               	movlb	0	; () banked
  5366  01079C  6FB8               	movwf	(my_strcmp@str2+1)& (0+255),b
  5367  01079E  ECE5  F0A9         	call	_my_strcmp	;wreg free
  5368  0107A2  0900               	iorlw	0
  5369  0107A4  A4D8               	btfss	status,2,c
  5370  0107A6  0012               	return	
  5371  0107A8                     l11060:
  5372                           
  5373                           ;tasks.h: 505: print_time();
  5374  0107A8  ECCE  F09C         	call	_print_time	;wreg free
  5375  0107AC  0012               	return	
  5376  0107AE                     __end_of_command_operation:
  5377                           	opt stack 0
  5378                           tblptru	equ	0xFF8
  5379                           tblptrh	equ	0xFF7
  5380                           tblptrl	equ	0xFF6
  5381                           tablat	equ	0xFF5
  5382                           prodh	equ	0xFF4
  5383                           prodl	equ	0xFF3
  5384                           intcon	equ	0xFF2
  5385                           postinc0	equ	0xFEE
  5386                           wreg	equ	0xFE8
  5387                           postinc1	equ	0xFE6
  5388                           postdec1	equ	0xFE5
  5389                           fsr1h	equ	0xFE2
  5390                           fsr1l	equ	0xFE1
  5391                           indf2	equ	0xFDF
  5392                           postinc2	equ	0xFDE
  5393                           postdec2	equ	0xFDD
  5394                           fsr2h	equ	0xFDA
  5395                           fsr2l	equ	0xFD9
  5396                           status	equ	0xFD8
  5397                           
  5398 ;; *************** function _my_strcmp *****************
  5399 ;; Defined at:
  5400 ;;		line 53 in file "../My_header\My_stdlib.h"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
  5403 ;;		 -> rx_loop@opland2(100), rx_loop@opland1(100), rx_loop@opcode(100), 
  5404 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
  5405 ;;		 -> STR_93(2), STR_92(11), STR_91(3), STR_90(16), 
  5406 ;;		 -> STR_89(3), STR_88(19), STR_87(2), STR_86(8), 
  5407 ;;		 -> STR_85(2), STR_84(6), STR_83(3), STR_82(16), 
  5408 ;;		 -> STR_81(3), STR_80(19), STR_79(2), STR_78(8), 
  5409 ;;		 -> STR_77(2), STR_76(7), STR_75(3), STR_74(16), 
  5410 ;;		 -> STR_73(3), STR_72(19), STR_71(2), STR_70(8), 
  5411 ;;		 -> STR_69(2), STR_68(5), STR_67(2), STR_66(8), 
  5412 ;;		 -> STR_64(2), STR_63(6), STR_60(5), STR_59(11), 
  5413 ;;		 -> STR_58(6), STR_57(2), STR_56(2), STR_55(2), 
  5414 ;;		 -> STR_54(2), STR_53(2), STR_52(2), STR_51(12), 
  5415 ;;		 -> STR_50(3), STR_49(9), STR_48(9), STR_47(10), 
  5416 ;;		 -> STR_46(4), STR_45(9), STR_43(2), STR_42(5), 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      char 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5428 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5430 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5431 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5432 ;;Total ram usage:        5 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:   11
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_command_operation
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text6
  5443  0153CA                     __ptext6:
  5444                           	opt stack 0
  5445  0153CA                     _my_strcmp:
  5446                           	opt stack 17
  5447                           
  5448                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  5449                           
  5450                           ;incstack = 0
  5451  0153CA  D02C               	goto	l10008
  5452  0153CC                     l10000:
  5453                           
  5454                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  5455  0153CC  C0B5  FFD9         	movff	my_strcmp@str1,fsr2l
  5456  0153D0  C0B6  FFDA         	movff	my_strcmp@str1+1,fsr2h
  5457  0153D4  50DF               	movf	indf2,w,c
  5458  0153D6  0100               	movlb	0	; () banked
  5459  0153D8  6FB9               	movwf	??_my_strcmp& (0+255),b
  5460  0153DA  C0B7  FFF6         	movff	my_strcmp@str2,tblptrl
  5461  0153DE  C0B8  FFF7         	movff	my_strcmp@str2+1,tblptrh
  5462  0153E2                     	if	0	;tblptru may be non-zero
  5463  0153E2                     	endif
  5464  0153E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5465  0153E2  0E00               	movlw	low (__mediumconst shr (0+16))
  5466  0153E4  6EF8               	movwf	tblptru,c
  5467  0153E6                     	endif
  5468  0153E6  0008               	tblrd		*
  5469  0153E8  50F5               	movf	tablat,w,c
  5470  0153EA  0100               	movlb	0	; () banked
  5471  0153EC  19B9               	xorwf	??_my_strcmp& (0+255),w,b
  5472  0153EE  B4D8               	btfsc	status,2,c
  5473  0153F0  D013               	goto	l10006
  5474                           
  5475                           ; BSR set to: 0
  5476  0153F2  C0B5  FFD9         	movff	my_strcmp@str1,fsr2l
  5477  0153F6  C0B6  FFDA         	movff	my_strcmp@str1+1,fsr2h
  5478  0153FA  50DF               	movf	indf2,w,c
  5479  0153FC  0100               	movlb	0	; () banked
  5480  0153FE  6FB9               	movwf	??_my_strcmp& (0+255),b
  5481  015400  C0B7  FFF6         	movff	my_strcmp@str2,tblptrl
  5482  015404  C0B8  FFF7         	movff	my_strcmp@str2+1,tblptrh
  5483  015408                     	if	0	;tblptru may be non-zero
  5484  015408                     	endif
  5485  015408                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5486  015408  0E00               	movlw	low (__mediumconst shr (0+16))
  5487  01540A  6EF8               	movwf	tblptru,c
  5488  01540C                     	endif
  5489  01540C  0008               	tblrd		*
  5490  01540E  50F5               	movf	tablat,w,c
  5491  015410  0800               	sublw	0
  5492  015412  0100               	movlb	0	; () banked
  5493  015414  25B9               	addwf	??_my_strcmp& (0+255),w,b
  5494                           
  5495                           ; BSR set to: 0
  5496  015416  0012               	return	
  5497  015418                     l10006:
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;My_header\My_stdlib.h: 56: str1++;
  5501  015418  0100               	movlb	0	; () banked
  5502  01541A  4BB5               	infsnz	my_strcmp@str1& (0+255),f,b
  5503  01541C  2BB6               	incf	(my_strcmp@str1+1)& (0+255),f,b
  5504                           
  5505                           ;My_header\My_stdlib.h: 57: str2++;
  5506  01541E  0100               	movlb	0	; () banked
  5507  015420  4BB7               	infsnz	my_strcmp@str2& (0+255),f,b
  5508  015422  2BB8               	incf	(my_strcmp@str2+1)& (0+255),f,b
  5509  015424                     l10008:
  5510  015424  C0B5  FFD9         	movff	my_strcmp@str1,fsr2l
  5511  015428  C0B6  FFDA         	movff	my_strcmp@str1+1,fsr2h
  5512  01542C  50DF               	movf	indf2,w,c
  5513  01542E  B4D8               	btfsc	status,2,c
  5514  015430  D00B               	goto	l10012
  5515  015432  C0B7  FFF6         	movff	my_strcmp@str2,tblptrl
  5516  015436  C0B8  FFF7         	movff	my_strcmp@str2+1,tblptrh
  5517  01543A                     	if	0	;tblptru may be non-zero
  5518  01543A                     	endif
  5519  01543A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5520  01543A  0E00               	movlw	low (__mediumconst shr (0+16))
  5521  01543C  6EF8               	movwf	tblptru,c
  5522  01543E                     	endif
  5523  01543E  0008               	tblrd		*
  5524  015440  50F5               	movf	tablat,w,c
  5525  015442  0900               	iorlw	0
  5526  015444  A4D8               	btfss	status,2,c
  5527  015446  D7C2               	goto	l10000
  5528  015448                     l10012:
  5529                           
  5530                           ;My_header\My_stdlib.h: 58: }
  5531                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  5532  015448  C0B5  FFD9         	movff	my_strcmp@str1,fsr2l
  5533  01544C  C0B6  FFDA         	movff	my_strcmp@str1+1,fsr2h
  5534  015450  50DF               	movf	indf2,w,c
  5535  015452  0100               	movlb	0	; () banked
  5536  015454  6FB9               	movwf	??_my_strcmp& (0+255),b
  5537  015456  C0B7  FFF6         	movff	my_strcmp@str2,tblptrl
  5538  01545A  C0B8  FFF7         	movff	my_strcmp@str2+1,tblptrh
  5539  01545E                     	if	0	;tblptru may be non-zero
  5540  01545E                     	endif
  5541  01545E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5542  01545E  0E00               	movlw	low (__mediumconst shr (0+16))
  5543  015460  6EF8               	movwf	tblptru,c
  5544  015462                     	endif
  5545  015462  0008               	tblrd		*
  5546  015464  50F5               	movf	tablat,w,c
  5547  015466  0800               	sublw	0
  5548  015468  0100               	movlb	0	; () banked
  5549  01546A  25B9               	addwf	??_my_strcmp& (0+255),w,b
  5550  01546C  0012               	return	
  5551  01546E                     __end_of_my_strcmp:
  5552                           	opt stack 0
  5553                           tblptru	equ	0xFF8
  5554                           tblptrh	equ	0xFF7
  5555                           tblptrl	equ	0xFF6
  5556                           tablat	equ	0xFF5
  5557                           prodh	equ	0xFF4
  5558                           prodl	equ	0xFF3
  5559                           intcon	equ	0xFF2
  5560                           postinc0	equ	0xFEE
  5561                           wreg	equ	0xFE8
  5562                           postinc1	equ	0xFE6
  5563                           postdec1	equ	0xFE5
  5564                           fsr1h	equ	0xFE2
  5565                           fsr1l	equ	0xFE1
  5566                           indf2	equ	0xFDF
  5567                           postinc2	equ	0xFDE
  5568                           postdec2	equ	0xFDD
  5569                           fsr2h	equ	0xFDA
  5570                           fsr2l	equ	0xFD9
  5571                           status	equ	0xFD8
  5572                           
  5573 ;; *************** function _my_atoi *****************
  5574 ;; Defined at:
  5575 ;;		line 41 in file "../My_header\My_stdlib.h"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  str             2   28[BANK0 ] PTR const unsigned char 
  5578 ;;		 -> rx_loop@opland2(100), 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  ret             2   34[BANK0 ] unsigned int 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  2   28[BANK0 ] unsigned int 
  5583 ;; Registers used:
  5584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5591 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5592 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5593 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5594 ;;Total ram usage:        8 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:   12
  5597 ;; This function calls:
  5598 ;;		___wmul
  5599 ;; This function is called by:
  5600 ;;		_command_operation
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text7
  5605  015510                     __ptext7:
  5606                           	opt stack 0
  5607  015510                     _my_atoi:
  5608                           	opt stack 16
  5609                           
  5610                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;incstack = 0
  5614  015510  0E00               	movlw	0
  5615  015512  0100               	movlb	0	; () banked
  5616  015514  6FD8               	movwf	(my_atoi@ret+1)& (0+255),b
  5617  015516  0E00               	movlw	0
  5618  015518  6FD7               	movwf	my_atoi@ret& (0+255),b
  5619                           
  5620                           ;My_header\My_stdlib.h: 43: while (*str) {
  5621  01551A  D03E               	goto	l9996
  5622  01551C                     l9986:
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  5626  01551C  C0D1  FFD9         	movff	my_atoi@str,fsr2l
  5627  015520  C0D2  FFDA         	movff	my_atoi@str+1,fsr2h
  5628  015524  0E2F               	movlw	47
  5629  015526  64DF               	cpfsgt	indf2,c
  5630  015528  D034               	goto	l9994
  5631                           
  5632                           ; BSR set to: 0
  5633  01552A  C0D1  FFD9         	movff	my_atoi@str,fsr2l
  5634  01552E  C0D2  FFDA         	movff	my_atoi@str+1,fsr2h
  5635  015532  0E3A               	movlw	58
  5636  015534  60DF               	cpfslt	indf2,c
  5637  015536  D02D               	goto	l9994
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;My_header\My_stdlib.h: 45: ret *= 10;
  5641  015538  C0D7  F0CB         	movff	my_atoi@ret,___wmul@multiplier
  5642  01553C  C0D8  F0CC         	movff	my_atoi@ret+1,___wmul@multiplier+1
  5643  015540  0E00               	movlw	0
  5644  015542  0100               	movlb	0	; () banked
  5645  015544  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5646  015546  0E0A               	movlw	10
  5647  015548  6FCD               	movwf	___wmul@multiplicand& (0+255),b
  5648  01554A  ECED  F0B2         	call	___wmul	;wreg free
  5649  01554E  C0CB  F0D7         	movff	?___wmul,my_atoi@ret
  5650  015552  C0CC  F0D8         	movff	?___wmul+1,my_atoi@ret+1
  5651                           
  5652                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  5653  015556  0ED0               	movlw	208
  5654  015558  0100               	movlb	0	; () banked
  5655  01555A  6FD3               	movwf	??_my_atoi& (0+255),b
  5656  01555C  0EFF               	movlw	255
  5657  01555E  0100               	movlb	0	; () banked
  5658  015560  6FD4               	movwf	(??_my_atoi+1)& (0+255),b
  5659  015562  C0D1  FFD9         	movff	my_atoi@str,fsr2l
  5660  015566  C0D2  FFDA         	movff	my_atoi@str+1,fsr2h
  5661  01556A  50DF               	movf	indf2,w,c
  5662  01556C  0100               	movlb	0	; () banked
  5663  01556E  6FD5               	movwf	(??_my_atoi+2)& (0+255),b
  5664  015570  6BD6               	clrf	(??_my_atoi+3)& (0+255),b
  5665  015572  0100               	movlb	0	; () banked
  5666  015574  51D3               	movf	??_my_atoi& (0+255),w,b
  5667  015576  0100               	movlb	0	; () banked
  5668  015578  27D5               	addwf	(??_my_atoi+2)& (0+255),f,b
  5669  01557A  0100               	movlb	0	; () banked
  5670  01557C  51D4               	movf	(??_my_atoi+1)& (0+255),w,b
  5671  01557E  0100               	movlb	0	; () banked
  5672  015580  23D6               	addwfc	(??_my_atoi+3)& (0+255),f,b
  5673  015582  0100               	movlb	0	; () banked
  5674  015584  51D5               	movf	(??_my_atoi+2)& (0+255),w,b
  5675  015586  0100               	movlb	0	; () banked
  5676  015588  27D7               	addwf	my_atoi@ret& (0+255),f,b
  5677  01558A  0100               	movlb	0	; () banked
  5678  01558C  51D6               	movf	(??_my_atoi+3)& (0+255),w,b
  5679  01558E  0100               	movlb	0	; () banked
  5680  015590  23D8               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  5681  015592                     l9994:
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;My_header\My_stdlib.h: 47: }
  5685                           ;My_header\My_stdlib.h: 48: str++;
  5686  015592  0100               	movlb	0	; () banked
  5687  015594  4BD1               	infsnz	my_atoi@str& (0+255),f,b
  5688  015596  2BD2               	incf	(my_atoi@str+1)& (0+255),f,b
  5689  015598                     l9996:
  5690                           
  5691                           ; BSR set to: 0
  5692  015598  C0D1  FFD9         	movff	my_atoi@str,fsr2l
  5693  01559C  C0D2  FFDA         	movff	my_atoi@str+1,fsr2h
  5694  0155A0  50DF               	movf	indf2,w,c
  5695  0155A2  A4D8               	btfss	status,2,c
  5696  0155A4  D7BB               	goto	l9986
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;My_header\My_stdlib.h: 49: }
  5700                           ;My_header\My_stdlib.h: 50: return ret;
  5701  0155A6  C0D7  F0D1         	movff	my_atoi@ret,?_my_atoi
  5702  0155AA  C0D8  F0D2         	movff	my_atoi@ret+1,?_my_atoi+1
  5703                           
  5704                           ; BSR set to: 0
  5705  0155AE  0012               	return		;funcret
  5706  0155B0                     __end_of_my_atoi:
  5707                           	opt stack 0
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           prodh	equ	0xFF4
  5713                           prodl	equ	0xFF3
  5714                           intcon	equ	0xFF2
  5715                           postinc0	equ	0xFEE
  5716                           wreg	equ	0xFE8
  5717                           postinc1	equ	0xFE6
  5718                           postdec1	equ	0xFE5
  5719                           fsr1h	equ	0xFE2
  5720                           fsr1l	equ	0xFE1
  5721                           indf2	equ	0xFDF
  5722                           postinc2	equ	0xFDE
  5723                           postdec2	equ	0xFDD
  5724                           fsr2h	equ	0xFDA
  5725                           fsr2l	equ	0xFD9
  5726                           status	equ	0xFD8
  5727                           
  5728 ;; *************** function _ctmu_set_ratio *****************
  5729 ;; Defined at:
  5730 ;;		line 353 in file "tasks.h"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  percentage      1    wreg     unsigned char 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  percentage      1   35[BANK0 ] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;		None               void
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5745 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5748 ;;Total ram usage:        1 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:   13
  5751 ;; This function calls:
  5752 ;;		_CTMU_read
  5753 ;;		___lwdiv
  5754 ;;		___wmul
  5755 ;; This function is called by:
  5756 ;;		_command_operation
  5757 ;;		_main
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text8
  5762  014290                     __ptext8:
  5763                           	opt stack 0
  5764  014290                     _ctmu_set_ratio:
  5765                           	opt stack 15
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;incstack = 0
  5769                           ;ctmu_set_ratio@percentage stored from wreg
  5770  014290  0100               	movlb	0	; () banked
  5771  014292  6FD8               	movwf	ctmu_set_ratio@percentage& (0+255),b
  5772                           
  5773                           ;tasks.h: 354: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  5774  014294  C0D8  F0CB         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  5775  014298  0100               	movlb	0	; () banked
  5776  01429A  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  5777  01429C  0E00               	movlw	0
  5778  01429E  ECAB  F0A6         	call	_CTMU_read
  5779  0142A2  C0C2  F0CD         	movff	?_CTMU_read,___wmul@multiplicand
  5780  0142A6  C0C3  F0CE         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  5781  0142AA  ECED  F0B2         	call	___wmul	;wreg free
  5782  0142AE  C0CB  F0D1         	movff	?___wmul,___lwdiv@dividend
  5783  0142B2  C0CC  F0D2         	movff	?___wmul+1,___lwdiv@dividend+1
  5784  0142B6  0E00               	movlw	0
  5785  0142B8  0100               	movlb	0	; () banked
  5786  0142BA  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5787  0142BC  0E64               	movlw	100
  5788  0142BE  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5789  0142C0  ECF2  F0AD         	call	___lwdiv	;wreg free
  5790  0142C4  C0D1  F304         	movff	?___lwdiv,_port+4
  5791  0142C8  C0D2  F305         	movff	?___lwdiv+1,_port+5
  5792                           
  5793                           ;tasks.h: 355: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  5794  0142CC  C0D8  F0CB         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  5795  0142D0  0100               	movlb	0	; () banked
  5796  0142D2  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  5797  0142D4  0E01               	movlw	1
  5798  0142D6  ECAB  F0A6         	call	_CTMU_read
  5799  0142DA  C0C2  F0CD         	movff	?_CTMU_read,___wmul@multiplicand
  5800  0142DE  C0C3  F0CE         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  5801  0142E2  ECED  F0B2         	call	___wmul	;wreg free
  5802  0142E6  C0CB  F0D1         	movff	?___wmul,___lwdiv@dividend
  5803  0142EA  C0CC  F0D2         	movff	?___wmul+1,___lwdiv@dividend+1
  5804  0142EE  0E00               	movlw	0
  5805  0142F0  0100               	movlb	0	; () banked
  5806  0142F2  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5807  0142F4  0E64               	movlw	100
  5808  0142F6  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5809  0142F8  ECF2  F0AD         	call	___lwdiv	;wreg free
  5810  0142FC  C0D1  F31B         	movff	?___lwdiv,_port+27
  5811  014300  C0D2  F31C         	movff	?___lwdiv+1,_port+28
  5812                           
  5813                           ;tasks.h: 356: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  5814  014304  C0D8  F0CB         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  5815  014308  0100               	movlb	0	; () banked
  5816  01430A  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  5817  01430C  0E02               	movlw	2
  5818  01430E  ECAB  F0A6         	call	_CTMU_read
  5819  014312  C0C2  F0CD         	movff	?_CTMU_read,___wmul@multiplicand
  5820  014316  C0C3  F0CE         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  5821  01431A  ECED  F0B2         	call	___wmul	;wreg free
  5822  01431E  C0CB  F0D1         	movff	?___wmul,___lwdiv@dividend
  5823  014322  C0CC  F0D2         	movff	?___wmul+1,___lwdiv@dividend+1
  5824  014326  0E00               	movlw	0
  5825  014328  0100               	movlb	0	; () banked
  5826  01432A  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5827  01432C  0E64               	movlw	100
  5828  01432E  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5829  014330  ECF2  F0AD         	call	___lwdiv	;wreg free
  5830  014334  C0D1  F332         	movff	?___lwdiv,_port+50
  5831  014338  C0D2  F333         	movff	?___lwdiv+1,_port+51
  5832                           
  5833                           ;tasks.h: 357: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  5834  01433C  C0D8  F0CB         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  5835  014340  0100               	movlb	0	; () banked
  5836  014342  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  5837  014344  0E03               	movlw	3
  5838  014346  ECAB  F0A6         	call	_CTMU_read
  5839  01434A  C0C2  F0CD         	movff	?_CTMU_read,___wmul@multiplicand
  5840  01434E  C0C3  F0CE         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  5841  014352  ECED  F0B2         	call	___wmul	;wreg free
  5842  014356  C0CB  F0D1         	movff	?___wmul,___lwdiv@dividend
  5843  01435A  C0CC  F0D2         	movff	?___wmul+1,___lwdiv@dividend+1
  5844  01435E  0E00               	movlw	0
  5845  014360  0100               	movlb	0	; () banked
  5846  014362  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5847  014364  0E64               	movlw	100
  5848  014366  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5849  014368  ECF2  F0AD         	call	___lwdiv	;wreg free
  5850  01436C  C0D1  F08B         	movff	?___lwdiv,_ctmu_value_m
  5851  014370  C0D2  F08C         	movff	?___lwdiv+1,_ctmu_value_m+1
  5852  014374  0012               	return		;funcret
  5853  014376                     __end_of_ctmu_set_ratio:
  5854                           	opt stack 0
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           postinc0	equ	0xFEE
  5863                           wreg	equ	0xFE8
  5864                           postinc1	equ	0xFE6
  5865                           postdec1	equ	0xFE5
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           indf2	equ	0xFDF
  5869                           postinc2	equ	0xFDE
  5870                           postdec2	equ	0xFDD
  5871                           fsr2h	equ	0xFDA
  5872                           fsr2l	equ	0xFD9
  5873                           status	equ	0xFD8
  5874                           
  5875 ;; *************** function _comm_disp *****************
  5876 ;; Defined at:
  5877 ;;		line 371 in file "tasks.h"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  content         1    wreg     unsigned char 
  5880 ;;  i               1   43[BANK0 ] unsigned char 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  content         1   58[BANK0 ] unsigned char 
  5883 ;;  str            10   44[BANK0 ] unsigned char [10]
  5884 ;; Return value:  Size  Location     Type
  5885 ;;		None               void
  5886 ;; Registers used:
  5887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5893 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5897 ;;Total ram usage:       16 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:   15
  5900 ;; This function calls:
  5901 ;;		___lldiv
  5902 ;;		___llmod
  5903 ;;		___lwdiv
  5904 ;;		___lwmod
  5905 ;;		_my_utoa
  5906 ;;		_tx_send
  5907 ;;		_tx_sendn
  5908 ;;		_tx_sends
  5909 ;; This function is called by:
  5910 ;;		_command_operation
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text9
  5915  011380                     __ptext9:
  5916                           	opt stack 0
  5917  011380                     _comm_disp:
  5918                           	opt stack 13
  5919                           
  5920                           ;incstack = 0
  5921                           ;comm_disp@content stored from wreg
  5922  011380  0100               	movlb	0	; () banked
  5923  011382  6FEF               	movwf	comm_disp@content& (0+255),b
  5924                           
  5925                           ;tasks.h: 372: switch (content) {
  5926  011384  D216               	goto	l10300
  5927  011386                     l10250:
  5928                           
  5929                           ;tasks.h: 374: tx_sends("\t");
  5930  011386  0EF2               	movlw	low STR_26
  5931  011388  0100               	movlb	0	; () banked
  5932  01138A  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  5933  01138C  0EFF               	movlw	high STR_26
  5934  01138E  0100               	movlb	0	; () banked
  5935  011390  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  5936  011392  EC4E  F0AF         	call	_tx_sends	;wreg free
  5937                           
  5938                           ;tasks.h: 375: tx_send((port[i].current % 10000) / 1000 + '0');
  5939  011396  0E27               	movlw	39
  5940  011398  0100               	movlb	0	; () banked
  5941  01139A  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  5942  01139C  0E10               	movlw	16
  5943  01139E  6FB7               	movwf	___lwmod@divisor& (0+255),b
  5944  0113A0  0100               	movlb	0	; () banked
  5945  0113A2  51E0               	movf	comm_disp@i& (0+255),w,b
  5946  0113A4  0D17               	mullw	23
  5947  0113A6  0E06               	movlw	6
  5948  0113A8  26F3               	addwf	prodl,f,c
  5949  0113AA  0E00               	movlw	0
  5950  0113AC  22F4               	addwfc	prodh,f,c
  5951  0113AE  0E00               	movlw	low _port
  5952  0113B0  24F3               	addwf	prodl,w,c
  5953  0113B2  6ED9               	movwf	fsr2l,c
  5954  0113B4  0E03               	movlw	high _port
  5955  0113B6  20F4               	addwfc	prodh,w,c
  5956  0113B8  6EDA               	movwf	fsr2h,c
  5957  0113BA  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  5958  0113BE  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  5959  0113C2  ECB5  F0AF         	call	___lwmod	;wreg free
  5960  0113C6  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  5961  0113CA  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  5962  0113CE  0E03               	movlw	3
  5963  0113D0  0100               	movlb	0	; () banked
  5964  0113D2  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5965  0113D4  0EE8               	movlw	232
  5966  0113D6  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  5967  0113D8  ECF2  F0AD         	call	___lwdiv	;wreg free
  5968  0113DC  0100               	movlb	0	; () banked
  5969  0113DE  51D1               	movf	?___lwdiv& (0+255),w,b
  5970  0113E0  0F30               	addlw	48
  5971  0113E2  EC10  F0B5         	call	_tx_send
  5972                           
  5973                           ;tasks.h: 376: tx_send('.');
  5974  0113E6  0E2E               	movlw	46
  5975  0113E8  EC10  F0B5         	call	_tx_send
  5976                           
  5977                           ;tasks.h: 377: tx_send((port[i].current % 1000) / 100 + '0');
  5978  0113EC  0E03               	movlw	3
  5979  0113EE  0100               	movlb	0	; () banked
  5980  0113F0  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  5981  0113F2  0EE8               	movlw	232
  5982  0113F4  6FB7               	movwf	___lwmod@divisor& (0+255),b
  5983  0113F6  0100               	movlb	0	; () banked
  5984  0113F8  51E0               	movf	comm_disp@i& (0+255),w,b
  5985  0113FA  0D17               	mullw	23
  5986  0113FC  0E06               	movlw	6
  5987  0113FE  26F3               	addwf	prodl,f,c
  5988  011400  0E00               	movlw	0
  5989  011402  22F4               	addwfc	prodh,f,c
  5990  011404  0E00               	movlw	low _port
  5991  011406  24F3               	addwf	prodl,w,c
  5992  011408  6ED9               	movwf	fsr2l,c
  5993  01140A  0E03               	movlw	high _port
  5994  01140C  20F4               	addwfc	prodh,w,c
  5995  01140E  6EDA               	movwf	fsr2h,c
  5996  011410  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  5997  011414  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  5998  011418  ECB5  F0AF         	call	___lwmod	;wreg free
  5999  01141C  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  6000  011420  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  6001  011424  0E00               	movlw	0
  6002  011426  0100               	movlb	0	; () banked
  6003  011428  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6004  01142A  0E64               	movlw	100
  6005  01142C  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  6006  01142E  ECF2  F0AD         	call	___lwdiv	;wreg free
  6007  011432  0100               	movlb	0	; () banked
  6008  011434  51D1               	movf	?___lwdiv& (0+255),w,b
  6009  011436  0F30               	addlw	48
  6010  011438  EC10  F0B5         	call	_tx_send
  6011                           
  6012                           ;tasks.h: 378: tx_send((port[i].current % 100) / 10 + '0');
  6013  01143C  0E00               	movlw	0
  6014  01143E  0100               	movlb	0	; () banked
  6015  011440  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  6016  011442  0E64               	movlw	100
  6017  011444  6FB7               	movwf	___lwmod@divisor& (0+255),b
  6018  011446  0100               	movlb	0	; () banked
  6019  011448  51E0               	movf	comm_disp@i& (0+255),w,b
  6020  01144A  0D17               	mullw	23
  6021  01144C  0E06               	movlw	6
  6022  01144E  26F3               	addwf	prodl,f,c
  6023  011450  0E00               	movlw	0
  6024  011452  22F4               	addwfc	prodh,f,c
  6025  011454  0E00               	movlw	low _port
  6026  011456  24F3               	addwf	prodl,w,c
  6027  011458  6ED9               	movwf	fsr2l,c
  6028  01145A  0E03               	movlw	high _port
  6029  01145C  20F4               	addwfc	prodh,w,c
  6030  01145E  6EDA               	movwf	fsr2h,c
  6031  011460  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  6032  011464  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  6033  011468  ECB5  F0AF         	call	___lwmod	;wreg free
  6034  01146C  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  6035  011470  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  6036  011474  0E00               	movlw	0
  6037  011476  0100               	movlb	0	; () banked
  6038  011478  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6039  01147A  0E0A               	movlw	10
  6040  01147C  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  6041  01147E  ECF2  F0AD         	call	___lwdiv	;wreg free
  6042  011482  0100               	movlb	0	; () banked
  6043  011484  51D1               	movf	?___lwdiv& (0+255),w,b
  6044  011486  0F30               	addlw	48
  6045  011488  EC10  F0B5         	call	_tx_send
  6046                           
  6047                           ;tasks.h: 379: tx_send((port[i].current % 10) / 1 + '0');
  6048  01148C  0100               	movlb	0	; () banked
  6049  01148E  51E0               	movf	comm_disp@i& (0+255),w,b
  6050  011490  0D17               	mullw	23
  6051  011492  0E06               	movlw	6
  6052  011494  26F3               	addwf	prodl,f,c
  6053  011496  0E00               	movlw	0
  6054  011498  22F4               	addwfc	prodh,f,c
  6055  01149A  0E00               	movlw	low _port
  6056  01149C  24F3               	addwf	prodl,w,c
  6057  01149E  6ED9               	movwf	fsr2l,c
  6058  0114A0  0E03               	movlw	high _port
  6059  0114A2  20F4               	addwfc	prodh,w,c
  6060  0114A4  6EDA               	movwf	fsr2h,c
  6061  0114A6  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  6062  0114AA  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  6063  0114AE  0E00               	movlw	0
  6064  0114B0  0100               	movlb	0	; () banked
  6065  0114B2  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  6066  0114B4  0E0A               	movlw	10
  6067  0114B6  6FB7               	movwf	___lwmod@divisor& (0+255),b
  6068  0114B8  ECB5  F0AF         	call	___lwmod	;wreg free
  6069  0114BC  0100               	movlb	0	; () banked
  6070  0114BE  51B5               	movf	?___lwmod& (0+255),w,b
  6071  0114C0  0F30               	addlw	48
  6072  0114C2  EC10  F0B5         	call	_tx_send
  6073                           
  6074                           ;tasks.h: 380: tx_sends("A\n");
  6075  0114C6  0ED7               	movlw	low STR_34
  6076  0114C8  0100               	movlb	0	; () banked
  6077  0114CA  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6078  0114CC  0EFF               	movlw	high STR_34
  6079  0114CE  0100               	movlb	0	; () banked
  6080  0114D0  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6081  0114D2  EC4E  F0AF         	call	_tx_sends	;wreg free
  6082                           
  6083                           ;tasks.h: 381: break;
  6084  0114D6  0012               	return	
  6085  0114D8                     l10264:
  6086                           
  6087                           ;tasks.h: 383: tx_sends("\t");
  6088  0114D8  0EF2               	movlw	low STR_26
  6089  0114DA  0100               	movlb	0	; () banked
  6090  0114DC  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6091  0114DE  0EFF               	movlw	high STR_26
  6092  0114E0  0100               	movlb	0	; () banked
  6093  0114E2  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6094  0114E4  EC4E  F0AF         	call	_tx_sends	;wreg free
  6095                           
  6096                           ;tasks.h: 384: tx_sendn(port[i].integrated_current, 5);
  6097  0114E8  0100               	movlb	0	; () banked
  6098  0114EA  51E0               	movf	comm_disp@i& (0+255),w,b
  6099  0114EC  0D17               	mullw	23
  6100  0114EE  0E08               	movlw	8
  6101  0114F0  26F3               	addwf	prodl,f,c
  6102  0114F2  0E00               	movlw	0
  6103  0114F4  22F4               	addwfc	prodh,f,c
  6104  0114F6  0E00               	movlw	low _port
  6105  0114F8  24F3               	addwf	prodl,w,c
  6106  0114FA  6ED9               	movwf	fsr2l,c
  6107  0114FC  0E03               	movlw	high _port
  6108  0114FE  20F4               	addwfc	prodh,w,c
  6109  011500  6EDA               	movwf	fsr2h,c
  6110  011502  CFDE F0D8          	movff	postinc2,tx_sendn@value
  6111  011506  CFDD F0D9          	movff	postdec2,tx_sendn@value+1
  6112  01150A  0E05               	movlw	5
  6113  01150C  0100               	movlb	0	; () banked
  6114  01150E  6FDA               	movwf	tx_sendn@digits& (0+255),b
  6115  011510  EC2E  F0AE         	call	_tx_sendn	;wreg free
  6116                           
  6117                           ;tasks.h: 385: tx_sends("mAh\n");
  6118  011514  0EBB               	movlw	low STR_36
  6119  011516  0100               	movlb	0	; () banked
  6120  011518  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6121  01151A  0EFF               	movlw	high STR_36
  6122  01151C  0100               	movlb	0	; () banked
  6123  01151E  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6124  011520  EC4E  F0AF         	call	_tx_sends	;wreg free
  6125                           
  6126                           ;tasks.h: 386: break;
  6127  011524  0012               	return	
  6128  011526                     l10270:
  6129                           
  6130                           ;tasks.h: 388: tx_sends("\t");
  6131  011526  0EF2               	movlw	low STR_26
  6132  011528  0100               	movlb	0	; () banked
  6133  01152A  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6134  01152C  0EFF               	movlw	high STR_26
  6135  01152E  0100               	movlb	0	; () banked
  6136  011530  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6137  011532  EC4E  F0AF         	call	_tx_sends	;wreg free
  6138                           
  6139                           ;tasks.h: 389: char str[10];
  6140                           ;tasks.h: 390: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
  6141  011536  0E10               	movlw	16
  6142  011538  0100               	movlb	0	; () banked
  6143  01153A  6FB9               	movwf	___lldiv@divisor& (0+255),b
  6144  01153C  0E0E               	movlw	14
  6145  01153E  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  6146  011540  0E00               	movlw	0
  6147  011542  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  6148  011544  0E00               	movlw	0
  6149  011546  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  6150  011548  0100               	movlb	0	; () banked
  6151  01154A  51E0               	movf	comm_disp@i& (0+255),w,b
  6152  01154C  0D17               	mullw	23
  6153  01154E  0E10               	movlw	16
  6154  011550  26F3               	addwf	prodl,f,c
  6155  011552  0E00               	movlw	0
  6156  011554  22F4               	addwfc	prodh,f,c
  6157  011556  0E00               	movlw	low _port
  6158  011558  24F3               	addwf	prodl,w,c
  6159  01155A  6ED9               	movwf	fsr2l,c
  6160  01155C  0E03               	movlw	high _port
  6161  01155E  20F4               	addwfc	prodh,w,c
  6162  011560  6EDA               	movwf	fsr2h,c
  6163  011562  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  6164  011566  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  6165  01156A  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  6166  01156E  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  6167  011572  EC6B  F0A7         	call	___lldiv	;wreg free
  6168  011576  C0B5  F0EB         	movff	?___lldiv,_comm_disp$5267
  6169  01157A  C0B6  F0EC         	movff	?___lldiv+1,_comm_disp$5267+1
  6170  01157E  C0B7  F0ED         	movff	?___lldiv+2,_comm_disp$5267+2
  6171  011582  C0B8  F0EE         	movff	?___lldiv+3,_comm_disp$5267+3
  6172                           
  6173                           ;tasks.h: 389: char str[10];
  6174                           ;tasks.h: 390: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
  6175  011586  0EE1               	movlw	low comm_disp@str
  6176  011588  0100               	movlb	0	; () banked
  6177  01158A  6FD8               	movwf	my_utoa@str& (0+255),b
  6178  01158C  0E00               	movlw	high comm_disp@str
  6179  01158E  0100               	movlb	0	; () banked
  6180  011590  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  6181  011592  C0EB  F0B5         	movff	_comm_disp$5267,___lldiv@dividend
  6182  011596  C0EC  F0B6         	movff	_comm_disp$5267+1,___lldiv@dividend+1
  6183  01159A  C0ED  F0B7         	movff	_comm_disp$5267+2,___lldiv@dividend+2
  6184  01159E  C0EE  F0B8         	movff	_comm_disp$5267+3,___lldiv@dividend+3
  6185  0115A2  0E18               	movlw	24
  6186  0115A4  0100               	movlb	0	; () banked
  6187  0115A6  6FB9               	movwf	___lldiv@divisor& (0+255),b
  6188  0115A8  0E00               	movlw	0
  6189  0115AA  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  6190  0115AC  0E00               	movlw	0
  6191  0115AE  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  6192  0115B0  0E00               	movlw	0
  6193  0115B2  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  6194  0115B4  EC6B  F0A7         	call	___lldiv	;wreg free
  6195  0115B8  C0B5  F0DA         	movff	?___lldiv,my_utoa@value
  6196  0115BC  C0B6  F0DB         	movff	?___lldiv+1,my_utoa@value+1
  6197  0115C0  0E02               	movlw	2
  6198  0115C2  0100               	movlb	0	; () banked
  6199  0115C4  6FDC               	movwf	my_utoa@digits& (0+255),b
  6200  0115C6  EC2B  F0AD         	call	_my_utoa	;wreg free
  6201                           
  6202                           ;tasks.h: 391: tx_sends(str);
  6203  0115CA  0EE1               	movlw	low comm_disp@str
  6204  0115CC  0100               	movlb	0	; () banked
  6205  0115CE  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6206  0115D0  0E00               	movlw	high comm_disp@str
  6207  0115D2  0100               	movlb	0	; () banked
  6208  0115D4  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6209  0115D6  EC4E  F0AF         	call	_tx_sends	;wreg free
  6210                           
  6211                           ;tasks.h: 392: tx_sends("d ");
  6212  0115DA  0EE0               	movlw	low STR_12
  6213  0115DC  0100               	movlb	0	; () banked
  6214  0115DE  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6215  0115E0  0EFF               	movlw	high STR_12
  6216  0115E2  0100               	movlb	0	; () banked
  6217  0115E4  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6218  0115E6  EC4E  F0AF         	call	_tx_sends	;wreg free
  6219                           
  6220                           ;tasks.h: 393: my_utoa(str, (port[i].integrated_time / 3600) % 24, 2);
  6221  0115EA  0EE1               	movlw	low comm_disp@str
  6222  0115EC  0100               	movlb	0	; () banked
  6223  0115EE  6FD8               	movwf	my_utoa@str& (0+255),b
  6224  0115F0  0E00               	movlw	high comm_disp@str
  6225  0115F2  0100               	movlb	0	; () banked
  6226  0115F4  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  6227  0115F6  0E10               	movlw	16
  6228  0115F8  0100               	movlb	0	; () banked
  6229  0115FA  6FB9               	movwf	___lldiv@divisor& (0+255),b
  6230  0115FC  0E0E               	movlw	14
  6231  0115FE  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  6232  011600  0E00               	movlw	0
  6233  011602  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  6234  011604  0E00               	movlw	0
  6235  011606  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  6236  011608  0100               	movlb	0	; () banked
  6237  01160A  51E0               	movf	comm_disp@i& (0+255),w,b
  6238  01160C  0D17               	mullw	23
  6239  01160E  0E10               	movlw	16
  6240  011610  26F3               	addwf	prodl,f,c
  6241  011612  0E00               	movlw	0
  6242  011614  22F4               	addwfc	prodh,f,c
  6243  011616  0E00               	movlw	low _port
  6244  011618  24F3               	addwf	prodl,w,c
  6245  01161A  6ED9               	movwf	fsr2l,c
  6246  01161C  0E03               	movlw	high _port
  6247  01161E  20F4               	addwfc	prodh,w,c
  6248  011620  6EDA               	movwf	fsr2h,c
  6249  011622  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  6250  011626  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  6251  01162A  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  6252  01162E  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  6253  011632  EC6B  F0A7         	call	___lldiv	;wreg free
  6254  011636  C0B5  F0C2         	movff	?___lldiv,___llmod@dividend
  6255  01163A  C0B6  F0C3         	movff	?___lldiv+1,___llmod@dividend+1
  6256  01163E  C0B7  F0C4         	movff	?___lldiv+2,___llmod@dividend+2
  6257  011642  C0B8  F0C5         	movff	?___lldiv+3,___llmod@dividend+3
  6258  011646  0E18               	movlw	24
  6259  011648  0100               	movlb	0	; () banked
  6260  01164A  6FC6               	movwf	___llmod@divisor& (0+255),b
  6261  01164C  0E00               	movlw	0
  6262  01164E  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  6263  011650  0E00               	movlw	0
  6264  011652  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  6265  011654  0E00               	movlw	0
  6266  011656  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  6267  011658  EC27  F0AB         	call	___llmod	;wreg free
  6268  01165C  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  6269  011660  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  6270  011664  0E02               	movlw	2
  6271  011666  0100               	movlb	0	; () banked
  6272  011668  6FDC               	movwf	my_utoa@digits& (0+255),b
  6273  01166A  EC2B  F0AD         	call	_my_utoa	;wreg free
  6274                           
  6275                           ;tasks.h: 394: tx_sends(str);
  6276  01166E  0EE1               	movlw	low comm_disp@str
  6277  011670  0100               	movlb	0	; () banked
  6278  011672  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6279  011674  0E00               	movlw	high comm_disp@str
  6280  011676  0100               	movlb	0	; () banked
  6281  011678  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6282  01167A  EC4E  F0AF         	call	_tx_sends	;wreg free
  6283                           
  6284                           ;tasks.h: 395: tx_sends("h ");
  6285  01167E  0EE3               	movlw	low STR_13
  6286  011680  0100               	movlb	0	; () banked
  6287  011682  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6288  011684  0EFF               	movlw	high STR_13
  6289  011686  0100               	movlb	0	; () banked
  6290  011688  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6291  01168A  EC4E  F0AF         	call	_tx_sends	;wreg free
  6292                           
  6293                           ;tasks.h: 396: my_utoa(str, (port[i].integrated_time / 60) % 60, 2);
  6294  01168E  0EE1               	movlw	low comm_disp@str
  6295  011690  0100               	movlb	0	; () banked
  6296  011692  6FD8               	movwf	my_utoa@str& (0+255),b
  6297  011694  0E00               	movlw	high comm_disp@str
  6298  011696  0100               	movlb	0	; () banked
  6299  011698  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  6300  01169A  0E3C               	movlw	60
  6301  01169C  0100               	movlb	0	; () banked
  6302  01169E  6FB9               	movwf	___lldiv@divisor& (0+255),b
  6303  0116A0  0E00               	movlw	0
  6304  0116A2  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  6305  0116A4  0E00               	movlw	0
  6306  0116A6  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  6307  0116A8  0E00               	movlw	0
  6308  0116AA  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  6309  0116AC  0100               	movlb	0	; () banked
  6310  0116AE  51E0               	movf	comm_disp@i& (0+255),w,b
  6311  0116B0  0D17               	mullw	23
  6312  0116B2  0E10               	movlw	16
  6313  0116B4  26F3               	addwf	prodl,f,c
  6314  0116B6  0E00               	movlw	0
  6315  0116B8  22F4               	addwfc	prodh,f,c
  6316  0116BA  0E00               	movlw	low _port
  6317  0116BC  24F3               	addwf	prodl,w,c
  6318  0116BE  6ED9               	movwf	fsr2l,c
  6319  0116C0  0E03               	movlw	high _port
  6320  0116C2  20F4               	addwfc	prodh,w,c
  6321  0116C4  6EDA               	movwf	fsr2h,c
  6322  0116C6  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  6323  0116CA  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  6324  0116CE  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  6325  0116D2  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  6326  0116D6  EC6B  F0A7         	call	___lldiv	;wreg free
  6327  0116DA  C0B5  F0C2         	movff	?___lldiv,___llmod@dividend
  6328  0116DE  C0B6  F0C3         	movff	?___lldiv+1,___llmod@dividend+1
  6329  0116E2  C0B7  F0C4         	movff	?___lldiv+2,___llmod@dividend+2
  6330  0116E6  C0B8  F0C5         	movff	?___lldiv+3,___llmod@dividend+3
  6331  0116EA  0E3C               	movlw	60
  6332  0116EC  0100               	movlb	0	; () banked
  6333  0116EE  6FC6               	movwf	___llmod@divisor& (0+255),b
  6334  0116F0  0E00               	movlw	0
  6335  0116F2  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  6336  0116F4  0E00               	movlw	0
  6337  0116F6  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  6338  0116F8  0E00               	movlw	0
  6339  0116FA  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  6340  0116FC  EC27  F0AB         	call	___llmod	;wreg free
  6341  011700  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  6342  011704  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  6343  011708  0E02               	movlw	2
  6344  01170A  0100               	movlb	0	; () banked
  6345  01170C  6FDC               	movwf	my_utoa@digits& (0+255),b
  6346  01170E  EC2B  F0AD         	call	_my_utoa	;wreg free
  6347                           
  6348                           ;tasks.h: 397: tx_sends(str);
  6349  011712  0EE1               	movlw	low comm_disp@str
  6350  011714  0100               	movlb	0	; () banked
  6351  011716  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6352  011718  0E00               	movlw	high comm_disp@str
  6353  01171A  0100               	movlb	0	; () banked
  6354  01171C  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6355  01171E  EC4E  F0AF         	call	_tx_sends	;wreg free
  6356                           
  6357                           ;tasks.h: 398: tx_sends("m ");
  6358  011722  0EE6               	movlw	low STR_14
  6359  011724  0100               	movlb	0	; () banked
  6360  011726  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6361  011728  0EFF               	movlw	high STR_14
  6362  01172A  0100               	movlb	0	; () banked
  6363  01172C  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6364  01172E  EC4E  F0AF         	call	_tx_sends	;wreg free
  6365                           
  6366                           ;tasks.h: 399: my_utoa(str, port[i].integrated_time % 60, 2);
  6367  011732  0EE1               	movlw	low comm_disp@str
  6368  011734  0100               	movlb	0	; () banked
  6369  011736  6FD8               	movwf	my_utoa@str& (0+255),b
  6370  011738  0E00               	movlw	high comm_disp@str
  6371  01173A  0100               	movlb	0	; () banked
  6372  01173C  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  6373  01173E  0100               	movlb	0	; () banked
  6374  011740  51E0               	movf	comm_disp@i& (0+255),w,b
  6375  011742  0D17               	mullw	23
  6376  011744  0E10               	movlw	16
  6377  011746  26F3               	addwf	prodl,f,c
  6378  011748  0E00               	movlw	0
  6379  01174A  22F4               	addwfc	prodh,f,c
  6380  01174C  0E00               	movlw	low _port
  6381  01174E  24F3               	addwf	prodl,w,c
  6382  011750  6ED9               	movwf	fsr2l,c
  6383  011752  0E03               	movlw	high _port
  6384  011754  20F4               	addwfc	prodh,w,c
  6385  011756  6EDA               	movwf	fsr2h,c
  6386  011758  CFDE F0C2          	movff	postinc2,___llmod@dividend
  6387  01175C  CFDE F0C3          	movff	postinc2,___llmod@dividend+1
  6388  011760  CFDE F0C4          	movff	postinc2,___llmod@dividend+2
  6389  011764  CFDE F0C5          	movff	postinc2,___llmod@dividend+3
  6390  011768  0E3C               	movlw	60
  6391  01176A  0100               	movlb	0	; () banked
  6392  01176C  6FC6               	movwf	___llmod@divisor& (0+255),b
  6393  01176E  0E00               	movlw	0
  6394  011770  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  6395  011772  0E00               	movlw	0
  6396  011774  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  6397  011776  0E00               	movlw	0
  6398  011778  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  6399  01177A  EC27  F0AB         	call	___llmod	;wreg free
  6400  01177E  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  6401  011782  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  6402  011786  0E02               	movlw	2
  6403  011788  0100               	movlb	0	; () banked
  6404  01178A  6FDC               	movwf	my_utoa@digits& (0+255),b
  6405  01178C  EC2B  F0AD         	call	_my_utoa	;wreg free
  6406                           
  6407                           ;tasks.h: 400: tx_sends(str);
  6408  011790  0EE1               	movlw	low comm_disp@str
  6409  011792  0100               	movlb	0	; () banked
  6410  011794  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6411  011796  0E00               	movlw	high comm_disp@str
  6412  011798  0100               	movlb	0	; () banked
  6413  01179A  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6414  01179C  EC4E  F0AF         	call	_tx_sends	;wreg free
  6415                           
  6416                           ;tasks.h: 401: tx_sends("s");
  6417  0117A0  0E81               	movlw	low (STR_45+7)
  6418  0117A2  0100               	movlb	0	; () banked
  6419  0117A4  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6420  0117A6  0EFF               	movlw	high (STR_45+7)
  6421  0117A8  0100               	movlb	0	; () banked
  6422  0117AA  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6423  0117AC  EC4E  F0AF         	call	_tx_sends	;wreg free
  6424                           
  6425                           ;tasks.h: 403: }
  6426                           
  6427                           ;tasks.h: 402: break;
  6428  0117B0  0012               	return	
  6429  0117B2                     l10300:
  6430  0117B2  0100               	movlb	0	; () banked
  6431  0117B4  51EF               	movf	comm_disp@content& (0+255),w,b
  6432                           
  6433                           ; Switch size 1, requested type "space"
  6434                           ; Number of cases is 3, Range of values is 0 to 2
  6435                           ; switch strategies available:
  6436                           ; Name         Instructions Cycles
  6437                           ; simple_byte           10     6 (average)
  6438                           ;	Chosen strategy is simple_byte
  6439  0117B6  0A00               	xorlw	0	; case 0
  6440  0117B8  B4D8               	btfsc	status,2,c
  6441  0117BA  D5E5               	goto	l10250
  6442  0117BC  0A01               	xorlw	1	; case 1
  6443  0117BE  B4D8               	btfsc	status,2,c
  6444  0117C0  D68B               	goto	l10264
  6445  0117C2  0A03               	xorlw	3	; case 2
  6446  0117C4  A4D8               	btfss	status,2,c
  6447  0117C6  0012               	return	
  6448  0117C8  D6AE               	goto	l10270
  6449  0117CA                     __end_of_comm_disp:
  6450                           	opt stack 0
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           intcon	equ	0xFF2
  6458                           postinc0	equ	0xFEE
  6459                           wreg	equ	0xFE8
  6460                           postinc1	equ	0xFE6
  6461                           postdec1	equ	0xFE5
  6462                           fsr1h	equ	0xFE2
  6463                           fsr1l	equ	0xFE1
  6464                           indf2	equ	0xFDF
  6465                           postinc2	equ	0xFDE
  6466                           postdec2	equ	0xFDD
  6467                           fsr2h	equ	0xFDA
  6468                           fsr2l	equ	0xFD9
  6469                           status	equ	0xFD8
  6470                           
  6471 ;; *************** function _tx_sendn *****************
  6472 ;; Defined at:
  6473 ;;		line 272 in file "../My_header\My_header.h"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  value           2   35[BANK0 ] const unsigned int 
  6476 ;;  digits          1   37[BANK0 ] unsigned char 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  i               1   38[BANK0 ] unsigned char 
  6479 ;;  temp            2   39[BANK0 ] unsigned int 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;		None               void
  6482 ;; Registers used:
  6483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6489 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6492 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6493 ;;Total ram usage:        6 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:   14
  6496 ;; This function calls:
  6497 ;;		___lwdiv
  6498 ;;		___lwmod
  6499 ;;		_tx_send
  6500 ;; This function is called by:
  6501 ;;		_comm_disp
  6502 ;;		_rx_loop
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text10
  6507  015C5C                     __ptext10:
  6508                           	opt stack 0
  6509  015C5C                     _tx_sendn:
  6510                           	opt stack 15
  6511                           
  6512                           ;My_header\My_header.h: 273: while (digits--) {
  6513                           
  6514                           ;incstack = 0
  6515  015C5C  D033               	goto	l9802
  6516  015C5E                     l234:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;My_header\My_header.h: 274: uint16_t temp = value;
  6520  015C5E  C0D8  F0DC         	movff	tx_sendn@value,tx_sendn@temp
  6521  015C62  C0D9  F0DD         	movff	tx_sendn@value+1,tx_sendn@temp+1
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;My_header\My_header.h: 275: for (uint8_t i = 0; i < digits; i++) {
  6525  015C66  0E00               	movlw	0
  6526  015C68  0100               	movlb	0	; () banked
  6527  015C6A  6FDB               	movwf	tx_sendn@i& (0+255),b
  6528  015C6C  D011               	goto	l9796
  6529  015C6E                     l9792:
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;My_header\My_header.h: 276: temp /= 10;
  6533  015C6E  C0DC  F0D1         	movff	tx_sendn@temp,___lwdiv@dividend
  6534  015C72  C0DD  F0D2         	movff	tx_sendn@temp+1,___lwdiv@dividend+1
  6535  015C76  0E00               	movlw	0
  6536  015C78  0100               	movlb	0	; () banked
  6537  015C7A  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6538  015C7C  0E0A               	movlw	10
  6539  015C7E  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  6540  015C80  ECF2  F0AD         	call	___lwdiv	;wreg free
  6541  015C84  C0D1  F0DC         	movff	?___lwdiv,tx_sendn@temp
  6542  015C88  C0D2  F0DD         	movff	?___lwdiv+1,tx_sendn@temp+1
  6543  015C8C  0100               	movlb	0	; () banked
  6544  015C8E  2BDB               	incf	tx_sendn@i& (0+255),f,b
  6545  015C90                     l9796:
  6546                           
  6547                           ; BSR set to: 0
  6548  015C90  0100               	movlb	0	; () banked
  6549  015C92  51DA               	movf	tx_sendn@digits& (0+255),w,b
  6550  015C94  0100               	movlb	0	; () banked
  6551  015C96  5DDB               	subwf	tx_sendn@i& (0+255),w,b
  6552  015C98  A0D8               	btfss	status,0,c
  6553  015C9A  D7E9               	goto	l9792
  6554                           
  6555                           ; BSR set to: 0
  6556                           ;My_header\My_header.h: 277: }
  6557                           ;My_header\My_header.h: 278: temp %= 10;
  6558                           
  6559                           ; BSR set to: 0
  6560  015C9C  C0DC  F0B5         	movff	tx_sendn@temp,___lwmod@dividend
  6561  015CA0  C0DD  F0B6         	movff	tx_sendn@temp+1,___lwmod@dividend+1
  6562  015CA4  0E00               	movlw	0
  6563  015CA6  0100               	movlb	0	; () banked
  6564  015CA8  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  6565  015CAA  0E0A               	movlw	10
  6566  015CAC  6FB7               	movwf	___lwmod@divisor& (0+255),b
  6567  015CAE  ECB5  F0AF         	call	___lwmod	;wreg free
  6568  015CB2  C0B5  F0DC         	movff	?___lwmod,tx_sendn@temp
  6569  015CB6  C0B6  F0DD         	movff	?___lwmod+1,tx_sendn@temp+1
  6570                           
  6571                           ;My_header\My_header.h: 279: tx_send('0' + temp);
  6572  015CBA  0100               	movlb	0	; () banked
  6573  015CBC  51DC               	movf	tx_sendn@temp& (0+255),w,b
  6574  015CBE  0F30               	addlw	48
  6575  015CC0  EC10  F0B5         	call	_tx_send
  6576  015CC4                     l9802:
  6577  015CC4  0100               	movlb	0	; () banked
  6578  015CC6  07DA               	decf	tx_sendn@digits& (0+255),f,b
  6579  015CC8  0100               	movlb	0	; () banked
  6580  015CCA  29DA               	incf	tx_sendn@digits& (0+255),w,b
  6581  015CCC  B4D8               	btfsc	status,2,c
  6582  015CCE  0012               	return	
  6583  015CD0  D7C6               	goto	l234
  6584  015CD2                     __end_of_tx_sendn:
  6585                           	opt stack 0
  6586                           tblptru	equ	0xFF8
  6587                           tblptrh	equ	0xFF7
  6588                           tblptrl	equ	0xFF6
  6589                           tablat	equ	0xFF5
  6590                           prodh	equ	0xFF4
  6591                           prodl	equ	0xFF3
  6592                           intcon	equ	0xFF2
  6593                           postinc0	equ	0xFEE
  6594                           wreg	equ	0xFE8
  6595                           postinc1	equ	0xFE6
  6596                           postdec1	equ	0xFE5
  6597                           fsr1h	equ	0xFE2
  6598                           fsr1l	equ	0xFE1
  6599                           indf2	equ	0xFDF
  6600                           postinc2	equ	0xFDE
  6601                           postdec2	equ	0xFDD
  6602                           fsr2h	equ	0xFDA
  6603                           fsr2l	equ	0xFD9
  6604                           status	equ	0xFD8
  6605                           
  6606 ;; *************** function _comm_at *****************
  6607 ;; Defined at:
  6608 ;;		line 360 in file "tasks.h"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  hand            2   55[BANK0 ] PTR unsigned char 
  6611 ;;		 -> caltime_now(7), 
  6612 ;;  min             1   57[BANK0 ] unsigned char 
  6613 ;;  max             1   58[BANK0 ] unsigned char 
  6614 ;;  value           1   59[BANK0 ] unsigned char 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;		None
  6617 ;; Return value:  Size  Location     Type
  6618 ;;		None               void
  6619 ;; Registers used:
  6620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6626 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6629 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6630 ;;Total ram usage:        5 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; Hardware stack levels required when called:   16
  6633 ;; This function calls:
  6634 ;;		_RTCC_from_caltime
  6635 ;;		_print_time
  6636 ;;		_tx_sends
  6637 ;; This function is called by:
  6638 ;;		_command_operation
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text11
  6643  015FCC                     __ptext11:
  6644                           	opt stack 0
  6645  015FCC                     _comm_at:
  6646                           	opt stack 12
  6647                           
  6648                           ;tasks.h: 361: if (value >= min && value <= max) {
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;incstack = 0
  6652  015FCC  0100               	movlb	0	; () banked
  6653  015FCE  51EE               	movf	comm_at@min& (0+255),w,b
  6654  015FD0  0100               	movlb	0	; () banked
  6655  015FD2  5DF0               	subwf	comm_at@value& (0+255),w,b
  6656  015FD4  A0D8               	btfss	status,0,c
  6657  015FD6  D01F               	goto	l10246
  6658                           
  6659                           ; BSR set to: 0
  6660  015FD8  0100               	movlb	0	; () banked
  6661  015FDA  51F0               	movf	comm_at@value& (0+255),w,b
  6662  015FDC  0100               	movlb	0	; () banked
  6663  015FDE  5DEF               	subwf	comm_at@max& (0+255),w,b
  6664  015FE0  A0D8               	btfss	status,0,c
  6665  015FE2  D019               	goto	l10246
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;tasks.h: 362: *hand = value;
  6669  015FE4  C0EC  FFD9         	movff	comm_at@hand,fsr2l
  6670  015FE8  C0ED  FFDA         	movff	comm_at@hand+1,fsr2h
  6671  015FEC  C0F0  FFDF         	movff	comm_at@value,indf2
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;tasks.h: 363: RTCC_from_caltime(&caltime_now, &epoch_now);
  6675  015FF0  0EA6               	movlw	low _caltime_now
  6676  015FF2  0100               	movlb	0	; () banked
  6677  015FF4  6FE6               	movwf	RTCC_from_caltime@ct& (0+255),b
  6678  015FF6  0E00               	movlw	high _caltime_now
  6679  015FF8  0100               	movlb	0	; () banked
  6680  015FFA  6FE7               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  6681  015FFC  0EB1               	movlw	low _epoch_now
  6682  015FFE  0100               	movlb	0	; () banked
  6683  016000  6FE8               	movwf	RTCC_from_caltime@ep& (0+255),b
  6684  016002  0E00               	movlw	high _epoch_now
  6685  016004  0100               	movlb	0	; () banked
  6686  016006  6FE9               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  6687  016008  ECD2  F0B2         	call	_RTCC_from_caltime	;wreg free
  6688                           
  6689                           ;tasks.h: 364: time_change_flag = 1;
  6690  01600C  0E01               	movlw	1
  6691  01600E  6E50               	movwf	_time_change_flag,c
  6692                           
  6693                           ;tasks.h: 365: print_time();
  6694  016010  ECCE  F09C         	call	_print_time	;wreg free
  6695                           
  6696                           ;tasks.h: 366: } else {
  6697  016014  0012               	return	
  6698  016016                     l10246:
  6699                           
  6700                           ;tasks.h: 367: tx_sends("\terror\n");
  6701  016016  0E83               	movlw	low STR_32
  6702  016018  0100               	movlb	0	; () banked
  6703  01601A  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6704  01601C  0EFF               	movlw	high STR_32
  6705  01601E  0100               	movlb	0	; () banked
  6706  016020  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6707  016022  EC4E  F0AF         	call	_tx_sends	;wreg free
  6708  016026  0012               	return	
  6709  016028                     __end_of_comm_at:
  6710                           	opt stack 0
  6711                           tblptru	equ	0xFF8
  6712                           tblptrh	equ	0xFF7
  6713                           tblptrl	equ	0xFF6
  6714                           tablat	equ	0xFF5
  6715                           prodh	equ	0xFF4
  6716                           prodl	equ	0xFF3
  6717                           intcon	equ	0xFF2
  6718                           postinc0	equ	0xFEE
  6719                           wreg	equ	0xFE8
  6720                           postinc1	equ	0xFE6
  6721                           postdec1	equ	0xFE5
  6722                           fsr1h	equ	0xFE2
  6723                           fsr1l	equ	0xFE1
  6724                           indf2	equ	0xFDF
  6725                           postinc2	equ	0xFDE
  6726                           postdec2	equ	0xFDD
  6727                           fsr2h	equ	0xFDA
  6728                           fsr2l	equ	0xFD9
  6729                           status	equ	0xFD8
  6730                           
  6731 ;; *************** function _print_time *****************
  6732 ;; Defined at:
  6733 ;;		line 331 in file "tasks.h"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;		None               void
  6740 ;; Registers used:
  6741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6751 ;;Total ram usage:        0 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:   15
  6754 ;; This function calls:
  6755 ;;		_tx_send
  6756 ;;		_tx_send_dec
  6757 ;;		_tx_sends
  6758 ;; This function is called by:
  6759 ;;		_comm_at
  6760 ;;		_command_operation
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text12
  6765  01399C                     __ptext12:
  6766                           	opt stack 0
  6767  01399C                     _print_time:
  6768                           	opt stack 13
  6769                           
  6770                           ;tasks.h: 332: GIE = 0;
  6771                           
  6772                           ;incstack = 0
  6773  01399C  9EF2               	bcf	intcon,7,c	;volatile
  6774                           
  6775                           ;tasks.h: 333: tx_sends("\t");
  6776  01399E  0EF2               	movlw	low STR_26
  6777  0139A0  0100               	movlb	0	; () banked
  6778  0139A2  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6779  0139A4  0EFF               	movlw	high STR_26
  6780  0139A6  0100               	movlb	0	; () banked
  6781  0139A8  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6782  0139AA  EC4E  F0AF         	call	_tx_sends	;wreg free
  6783                           
  6784                           ;tasks.h: 334: tx_send_dec(20, edit_flag.flag.YY);
  6785  0139AE  0E00               	movlw	0
  6786  0139B0  BB98               	btfsc	_edit_flag& (0+255),5,b
  6787  0139B2  0E01               	movlw	1
  6788  0139B4  0100               	movlb	0	; () banked
  6789  0139B6  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6790  0139B8  0E14               	movlw	20
  6791  0139BA  EC70  F0B0         	call	_tx_send_dec
  6792                           
  6793                           ;tasks.h: 335: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  6794  0139BE  0E00               	movlw	0
  6795  0139C0  BB98               	btfsc	_edit_flag& (0+255),5,b
  6796  0139C2  0E01               	movlw	1
  6797  0139C4  0100               	movlb	0	; () banked
  6798  0139C6  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6799  0139C8  0100               	movlb	0	; () banked
  6800  0139CA  51AC               	movf	(_caltime_now+6)& (0+255),w,b
  6801  0139CC  EC70  F0B0         	call	_tx_send_dec
  6802                           
  6803                           ;tasks.h: 336: tx_sends("/");
  6804  0139D0  0EF6               	movlw	low STR_27
  6805  0139D2  0100               	movlb	0	; () banked
  6806  0139D4  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6807  0139D6  0EFF               	movlw	high STR_27
  6808  0139D8  0100               	movlb	0	; () banked
  6809  0139DA  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6810  0139DC  EC4E  F0AF         	call	_tx_sends	;wreg free
  6811                           
  6812                           ;tasks.h: 337: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  6813  0139E0  0E00               	movlw	0
  6814  0139E2  B998               	btfsc	_edit_flag& (0+255),4,b
  6815  0139E4  0E01               	movlw	1
  6816  0139E6  0100               	movlb	0	; () banked
  6817  0139E8  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6818  0139EA  0100               	movlb	0	; () banked
  6819  0139EC  51AB               	movf	(_caltime_now+5)& (0+255),w,b
  6820  0139EE  EC70  F0B0         	call	_tx_send_dec
  6821                           
  6822                           ;tasks.h: 338: tx_sends("/");
  6823  0139F2  0EF6               	movlw	low STR_27
  6824  0139F4  0100               	movlb	0	; () banked
  6825  0139F6  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6826  0139F8  0EFF               	movlw	high STR_27
  6827  0139FA  0100               	movlb	0	; () banked
  6828  0139FC  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6829  0139FE  EC4E  F0AF         	call	_tx_sends	;wreg free
  6830                           
  6831                           ;tasks.h: 339: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  6832  013A02  0E00               	movlw	0
  6833  013A04  B798               	btfsc	_edit_flag& (0+255),3,b
  6834  013A06  0E01               	movlw	1
  6835  013A08  0100               	movlb	0	; () banked
  6836  013A0A  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6837  013A0C  0100               	movlb	0	; () banked
  6838  013A0E  51AA               	movf	(_caltime_now+4)& (0+255),w,b
  6839  013A10  EC70  F0B0         	call	_tx_send_dec
  6840                           
  6841                           ;tasks.h: 340: tx_sends(" (");
  6842  013A14  0EE9               	movlw	low STR_29
  6843  013A16  0100               	movlb	0	; () banked
  6844  013A18  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6845  013A1A  0EFF               	movlw	high STR_29
  6846  013A1C  0100               	movlb	0	; () banked
  6847  013A1E  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6848  013A20  EC4E  F0AF         	call	_tx_sends	;wreg free
  6849                           
  6850                           ;tasks.h: 341: tx_sends(weekday_3char[caltime_now.EE]);
  6851  013A24  0100               	movlb	0	; () banked
  6852  013A26  51A9               	movf	(_caltime_now+3)& (0+255),w,b
  6853  013A28  0D04               	mullw	4
  6854  013A2A  0ECE               	movlw	low _weekday_3char
  6855  013A2C  24F3               	addwf	prodl,w,c
  6856  013A2E  0100               	movlb	0	; () banked
  6857  013A30  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6858  013A32  0EFB               	movlw	high _weekday_3char
  6859  013A34  20F4               	addwfc	prodh,w,c
  6860  013A36  0100               	movlb	0	; () banked
  6861  013A38  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6862  013A3A  EC4E  F0AF         	call	_tx_sends	;wreg free
  6863                           
  6864                           ;tasks.h: 342: tx_sends(") ");
  6865  013A3E  0EDD               	movlw	low STR_30
  6866  013A40  0100               	movlb	0	; () banked
  6867  013A42  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6868  013A44  0EFF               	movlw	high STR_30
  6869  013A46  0100               	movlb	0	; () banked
  6870  013A48  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6871  013A4A  EC4E  F0AF         	call	_tx_sends	;wreg free
  6872                           
  6873                           ;tasks.h: 343: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  6874  013A4E  0E00               	movlw	0
  6875  013A50  B598               	btfsc	_edit_flag& (0+255),2,b
  6876  013A52  0E01               	movlw	1
  6877  013A54  0100               	movlb	0	; () banked
  6878  013A56  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6879  013A58  0100               	movlb	0	; () banked
  6880  013A5A  51A8               	movf	(_caltime_now+2)& (0+255),w,b
  6881  013A5C  EC70  F0B0         	call	_tx_send_dec
  6882                           
  6883                           ;tasks.h: 344: if (colon)tx_send(':');
  6884  013A60  0100               	movlb	0	; () banked
  6885  013A62  5195               	movf	_colon& (0+255),w,b
  6886  013A64  B4D8               	btfsc	status,2,c
  6887  013A66  D004               	goto	l9890
  6888                           
  6889                           ; BSR set to: 0
  6890  013A68  0E3A               	movlw	58
  6891  013A6A  EC10  F0B5         	call	_tx_send
  6892  013A6E  D003               	goto	l9892
  6893  013A70                     l9890:
  6894                           
  6895                           ;tasks.h: 345: else tx_send(' ');
  6896  013A70  0E20               	movlw	32
  6897  013A72  EC10  F0B5         	call	_tx_send
  6898  013A76                     l9892:
  6899                           
  6900                           ;tasks.h: 346: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  6901  013A76  0E00               	movlw	0
  6902  013A78  B398               	btfsc	_edit_flag& (0+255),1,b
  6903  013A7A  0E01               	movlw	1
  6904  013A7C  0100               	movlb	0	; () banked
  6905  013A7E  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6906  013A80  0100               	movlb	0	; () banked
  6907  013A82  51A7               	movf	(_caltime_now+1)& (0+255),w,b
  6908  013A84  EC70  F0B0         	call	_tx_send_dec
  6909                           
  6910                           ;tasks.h: 347: tx_sends("-");
  6911  013A88  0EF4               	movlw	low STR_31
  6912  013A8A  0100               	movlb	0	; () banked
  6913  013A8C  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  6914  013A8E  0EFF               	movlw	high STR_31
  6915  013A90  0100               	movlb	0	; () banked
  6916  013A92  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  6917  013A94  EC4E  F0AF         	call	_tx_sends	;wreg free
  6918                           
  6919                           ;tasks.h: 348: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  6920  013A98  0E00               	movlw	0
  6921  013A9A  B198               	btfsc	_edit_flag& (0+255),0,b
  6922  013A9C  0E01               	movlw	1
  6923  013A9E  0100               	movlb	0	; () banked
  6924  013AA0  6FE0               	movwf	tx_send_dec@edit& (0+255),b
  6925  013AA2  0100               	movlb	0	; () banked
  6926  013AA4  51A6               	movf	_caltime_now& (0+255),w,b
  6927  013AA6  EC70  F0B0         	call	_tx_send_dec
  6928                           
  6929                           ;tasks.h: 349: tx_send('\n');
  6930  013AAA  0E0A               	movlw	10
  6931  013AAC  EC10  F0B5         	call	_tx_send
  6932                           
  6933                           ;tasks.h: 350: GIE = 1;
  6934  013AB0  8EF2               	bsf	intcon,7,c	;volatile
  6935  013AB2  0012               	return		;funcret
  6936  013AB4                     __end_of_print_time:
  6937                           	opt stack 0
  6938                           tblptru	equ	0xFF8
  6939                           tblptrh	equ	0xFF7
  6940                           tblptrl	equ	0xFF6
  6941                           tablat	equ	0xFF5
  6942                           prodh	equ	0xFF4
  6943                           prodl	equ	0xFF3
  6944                           intcon	equ	0xFF2
  6945                           postinc0	equ	0xFEE
  6946                           wreg	equ	0xFE8
  6947                           postinc1	equ	0xFE6
  6948                           postdec1	equ	0xFE5
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           indf2	equ	0xFDF
  6952                           postinc2	equ	0xFDE
  6953                           postdec2	equ	0xFDD
  6954                           fsr2h	equ	0xFDA
  6955                           fsr2l	equ	0xFD9
  6956                           status	equ	0xFD8
  6957                           
  6958 ;; *************** function _tx_send_dec *****************
  6959 ;; Defined at:
  6960 ;;		line 324 in file "tasks.h"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  dec             1    wreg     unsigned char 
  6963 ;;  edit            1   43[BANK0 ] unsigned char 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  dec             1   54[BANK0 ] unsigned char 
  6966 ;;  str            10   44[BANK0 ] unsigned char [10]
  6967 ;; Return value:  Size  Location     Type
  6968 ;;		None               void
  6969 ;; Registers used:
  6970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6976 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6980 ;;Total ram usage:       12 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:   14
  6983 ;; This function calls:
  6984 ;;		_my_utoa
  6985 ;;		_tx_sends
  6986 ;; This function is called by:
  6987 ;;		_print_time
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text13
  6992  0160E0                     __ptext13:
  6993                           	opt stack 0
  6994  0160E0                     _tx_send_dec:
  6995                           	opt stack 13
  6996                           
  6997                           ;incstack = 0
  6998                           ;tx_send_dec@dec stored from wreg
  6999  0160E0  0100               	movlb	0	; () banked
  7000  0160E2  6FEB               	movwf	tx_send_dec@dec& (0+255),b
  7001                           
  7002                           ;tasks.h: 325: uint8_t str[10];
  7003                           ;tasks.h: 326: my_utoa(&str, dec, 2);
  7004  0160E4  0EE1               	movlw	low tx_send_dec@str
  7005  0160E6  0100               	movlb	0	; () banked
  7006  0160E8  6FD8               	movwf	my_utoa@str& (0+255),b
  7007  0160EA  0E00               	movlw	high tx_send_dec@str
  7008  0160EC  0100               	movlb	0	; () banked
  7009  0160EE  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  7010  0160F0  C0EB  F0DA         	movff	tx_send_dec@dec,my_utoa@value
  7011  0160F4  0100               	movlb	0	; () banked
  7012  0160F6  6BDB               	clrf	(my_utoa@value+1)& (0+255),b
  7013  0160F8  0E02               	movlw	2
  7014  0160FA  0100               	movlb	0	; () banked
  7015  0160FC  6FDC               	movwf	my_utoa@digits& (0+255),b
  7016  0160FE  EC2B  F0AD         	call	_my_utoa	;wreg free
  7017                           
  7018                           ;tasks.h: 327: if (edit && halfsec)tx_sends("  ");
  7019  016102  0100               	movlb	0	; () banked
  7020  016104  51E0               	movf	tx_send_dec@edit& (0+255),w,b
  7021  016106  0100               	movlb	0	; () banked
  7022  016108  B4D8               	btfsc	status,2,c
  7023  01610A  D00D               	goto	l9786
  7024                           
  7025                           ; BSR set to: 0
  7026  01610C  0100               	movlb	0	; () banked
  7027  01610E  5199               	movf	_halfsec& (0+255),w,b
  7028  016110  B4D8               	btfsc	status,2,c
  7029  016112  D009               	goto	l9786
  7030                           
  7031                           ; BSR set to: 0
  7032  016114  0EDA               	movlw	low STR_1
  7033  016116  0100               	movlb	0	; () banked
  7034  016118  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  7035  01611A  0EFF               	movlw	high STR_1
  7036  01611C  0100               	movlb	0	; () banked
  7037  01611E  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  7038  016120  EC4E  F0AF         	call	_tx_sends	;wreg free
  7039  016124  0012               	return	
  7040  016126                     l9786:
  7041                           
  7042                           ;tasks.h: 328: else tx_sends(str);
  7043  016126  0EE1               	movlw	low tx_send_dec@str
  7044  016128  0100               	movlb	0	; () banked
  7045  01612A  6FC4               	movwf	tx_sends@asciicode& (0+255),b
  7046  01612C  0E00               	movlw	high tx_send_dec@str
  7047  01612E  0100               	movlb	0	; () banked
  7048  016130  6FC5               	movwf	(tx_sends@asciicode+1)& (0+255),b
  7049  016132  EC4E  F0AF         	call	_tx_sends	;wreg free
  7050  016136  0012               	return	
  7051  016138                     __end_of_tx_send_dec:
  7052                           	opt stack 0
  7053                           tblptru	equ	0xFF8
  7054                           tblptrh	equ	0xFF7
  7055                           tblptrl	equ	0xFF6
  7056                           tablat	equ	0xFF5
  7057                           prodh	equ	0xFF4
  7058                           prodl	equ	0xFF3
  7059                           intcon	equ	0xFF2
  7060                           postinc0	equ	0xFEE
  7061                           wreg	equ	0xFE8
  7062                           postinc1	equ	0xFE6
  7063                           postdec1	equ	0xFE5
  7064                           fsr1h	equ	0xFE2
  7065                           fsr1l	equ	0xFE1
  7066                           indf2	equ	0xFDF
  7067                           postinc2	equ	0xFDE
  7068                           postdec2	equ	0xFDD
  7069                           fsr2h	equ	0xFDA
  7070                           fsr2l	equ	0xFD9
  7071                           status	equ	0xFD8
  7072                           
  7073 ;; *************** function _tx_sends *****************
  7074 ;; Defined at:
  7075 ;;		line 227 in file "../My_header\My_header.h"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  asciicode       2   15[BANK0 ] PTR const unsigned char 
  7078 ;;		 -> STR_96(4), STR_95(4), STR_94(2), STR_65(18), 
  7079 ;;		 -> STR_62(36), STR_61(24), STR_44(490), STR_41(2), 
  7080 ;;		 -> STR_40(3), STR_39(3), STR_38(3), comm_disp@str(10), 
  7081 ;;		 -> STR_37(2), STR_36(5), STR_35(2), STR_34(3), 
  7082 ;;		 -> STR_33(2), STR_32(8), STR_31(2), STR_30(3), 
  7083 ;;		 -> STR_29(3), STR_28(2), STR_27(2), STR_26(2), 
  7084 ;;		 -> STR_25(3), tx_send_dec@str(10), weekday_3char(28), 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;		None               void
  7089 ;; Registers used:
  7090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7100 ;;Total ram usage:        2 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:   13
  7103 ;; This function calls:
  7104 ;;		_ringbuf_put
  7105 ;; This function is called by:
  7106 ;;		_tx_send_dec
  7107 ;;		_print_time
  7108 ;;		_comm_at
  7109 ;;		_comm_disp
  7110 ;;		_command_operation
  7111 ;;		_rx_loop
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text14
  7116  015E9C                     __ptext14:
  7117                           	opt stack 0
  7118  015E9C                     _tx_sends:
  7119                           	opt stack 16
  7120                           
  7121                           ;My_header\My_header.h: 228: while (*asciicode) {
  7122                           
  7123                           ;incstack = 0
  7124  015E9C  D01E               	goto	l9562
  7125  015E9E                     l9558:
  7126                           
  7127                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  7128  015E9E  0E9E               	movlw	low _tx_buf
  7129  015EA0  0100               	movlb	0	; () banked
  7130  015EA2  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  7131  015EA4  0E00               	movlw	high _tx_buf
  7132  015EA6  0100               	movlb	0	; () banked
  7133  015EA8  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  7134  015EAA  C0C4  FFF6         	movff	tx_sends@asciicode,tblptrl
  7135  015EAE  C0C5  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  7136  015EB2  0E00               	movlw	low (__mediumconst shr (0+16))
  7137  015EB4  6EF8               	movwf	tblptru,c
  7138  015EB6  0E0E               	movlw	(high __ramtop+-1)
  7139  015EB8  64F7               	cpfsgt	tblptrh,c
  7140  015EBA  D003               	bra	u10317
  7141  015EBC  0008               	tblrd		*
  7142  015EBE  50F5               	movf	tablat,w,c
  7143  015EC0  D005               	bra	u10310
  7144  015EC2                     u10317:
  7145  015EC2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7146  015EC6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7147  015ECA  50E7               	movf	indf1,w,c
  7148  015ECC                     u10310:
  7149  015ECC  0100               	movlb	0	; () banked
  7150  015ECE  6FBF               	movwf	ringbuf_put@asciicode& (0+255),b
  7151  015ED0  EC48  F0A4         	call	_ringbuf_put	;wreg free
  7152  015ED4  0100               	movlb	0	; () banked
  7153  015ED6  4BC4               	infsnz	tx_sends@asciicode& (0+255),f,b
  7154  015ED8  2BC5               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  7155  015EDA                     l9562:
  7156  015EDA  C0C4  FFF6         	movff	tx_sends@asciicode,tblptrl
  7157  015EDE  C0C5  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  7158  015EE2  0E00               	movlw	low (__mediumconst shr (0+16))
  7159  015EE4  6EF8               	movwf	tblptru,c
  7160  015EE6  0E0E               	movlw	(high __ramtop+-1)
  7161  015EE8  64F7               	cpfsgt	tblptrh,c
  7162  015EEA  D003               	bra	u10327
  7163  015EEC  0008               	tblrd		*
  7164  015EEE  50F5               	movf	tablat,w,c
  7165  015EF0  D005               	bra	u10320
  7166  015EF2                     u10327:
  7167  015EF2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7168  015EF6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7169  015EFA  50E7               	movf	indf1,w,c
  7170  015EFC                     u10320:
  7171  015EFC  0900               	iorlw	0
  7172  015EFE  A4D8               	btfss	status,2,c
  7173  015F00  D7CE               	goto	l9558
  7174                           
  7175                           ;My_header\My_header.h: 230: }
  7176                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  7177  015F02  889D               	bsf	3997,4,c	;volatile
  7178  015F04  0012               	return		;funcret
  7179  015F06                     __end_of_tx_sends:
  7180                           	opt stack 0
  7181                           tblptru	equ	0xFF8
  7182                           tblptrh	equ	0xFF7
  7183                           tblptrl	equ	0xFF6
  7184                           tablat	equ	0xFF5
  7185                           prodh	equ	0xFF4
  7186                           prodl	equ	0xFF3
  7187                           intcon	equ	0xFF2
  7188                           postinc0	equ	0xFEE
  7189                           wreg	equ	0xFE8
  7190                           indf1	equ	0xFE7
  7191                           postinc1	equ	0xFE6
  7192                           postdec1	equ	0xFE5
  7193                           fsr1h	equ	0xFE2
  7194                           fsr1l	equ	0xFE1
  7195                           indf2	equ	0xFDF
  7196                           postinc2	equ	0xFDE
  7197                           postdec2	equ	0xFDD
  7198                           fsr2h	equ	0xFDA
  7199                           fsr2l	equ	0xFD9
  7200                           status	equ	0xFD8
  7201                           
  7202 ;; *************** function _tx_send *****************
  7203 ;; Defined at:
  7204 ;;		line 222 in file "../My_header\My_header.h"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  asciicode       1    wreg     const unsigned char 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  asciicode       1   15[BANK0 ] const unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;		None               void
  7211 ;; Registers used:
  7212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;Total ram usage:        1 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:   13
  7225 ;; This function calls:
  7226 ;;		_ringbuf_put
  7227 ;; This function is called by:
  7228 ;;		_tx_sendn
  7229 ;;		_print_time
  7230 ;;		_comm_disp
  7231 ;;		_rx_loop
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text15
  7236  016A20                     __ptext15:
  7237                           	opt stack 0
  7238  016A20                     _tx_send:
  7239                           	opt stack 15
  7240                           
  7241                           ;incstack = 0
  7242                           ;tx_send@asciicode stored from wreg
  7243  016A20  0100               	movlb	0	; () banked
  7244  016A22  6FC4               	movwf	tx_send@asciicode& (0+255),b
  7245                           
  7246                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  7247  016A24  0E9E               	movlw	low _tx_buf
  7248  016A26  0100               	movlb	0	; () banked
  7249  016A28  6FBD               	movwf	ringbuf_put@rb& (0+255),b
  7250  016A2A  0E00               	movlw	high _tx_buf
  7251  016A2C  0100               	movlb	0	; () banked
  7252  016A2E  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
  7253  016A30  C0C4  F0BF         	movff	tx_send@asciicode,ringbuf_put@asciicode
  7254  016A34  EC48  F0A4         	call	_ringbuf_put	;wreg free
  7255                           
  7256                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  7257  016A38  889D               	bsf	3997,4,c	;volatile
  7258  016A3A  0012               	return		;funcret
  7259  016A3C                     __end_of_tx_send:
  7260                           	opt stack 0
  7261                           tblptru	equ	0xFF8
  7262                           tblptrh	equ	0xFF7
  7263                           tblptrl	equ	0xFF6
  7264                           tablat	equ	0xFF5
  7265                           prodh	equ	0xFF4
  7266                           prodl	equ	0xFF3
  7267                           intcon	equ	0xFF2
  7268                           postinc0	equ	0xFEE
  7269                           wreg	equ	0xFE8
  7270                           indf1	equ	0xFE7
  7271                           postinc1	equ	0xFE6
  7272                           postdec1	equ	0xFE5
  7273                           fsr1h	equ	0xFE2
  7274                           fsr1l	equ	0xFE1
  7275                           indf2	equ	0xFDF
  7276                           postinc2	equ	0xFDE
  7277                           postdec2	equ	0xFDD
  7278                           fsr2h	equ	0xFDA
  7279                           fsr2l	equ	0xFD9
  7280                           status	equ	0xFD8
  7281                           
  7282 ;; *************** function _RTCC_from_caltime *****************
  7283 ;; Defined at:
  7284 ;;		line 236 in file "../My_header\My_RTCC.h"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  ct              2   49[BANK0 ] PTR struct .
  7287 ;;		 -> caltime_now(7), 
  7288 ;;  ep              2   51[BANK0 ] PTR unsigned long 
  7289 ;;		 -> epoch_now(4), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;		None
  7292 ;; Return value:  Size  Location     Type
  7293 ;;		None               void
  7294 ;; Registers used:
  7295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7305 ;;Total ram usage:        4 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:   14
  7308 ;; This function calls:
  7309 ;;		_caltime_to_RTCC
  7310 ;;		_caltime_to_epoch
  7311 ;;		_epoch_to_caltime
  7312 ;; This function is called by:
  7313 ;;		_comm_at
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text16
  7318  0165A4                     __ptext16:
  7319                           	opt stack 0
  7320  0165A4                     _RTCC_from_caltime:
  7321                           	opt stack 13
  7322                           
  7323                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  7324                           
  7325                           ;incstack = 0
  7326  0165A4  C0E6  F0CE         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  7327  0165A8  C0E7  F0CF         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  7328  0165AC  C0E8  F0D0         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  7329  0165B0  C0E9  F0D1         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  7330  0165B4  ECE1  F08E         	call	_caltime_to_epoch	;wreg free
  7331                           
  7332                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  7333  0165B8  C0E6  F0D6         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  7334  0165BC  C0E7  F0D7         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  7335  0165C0  C0E8  F0D8         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  7336  0165C4  C0E9  F0D9         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  7337  0165C8  ECCB  F093         	call	_epoch_to_caltime	;wreg free
  7338                           
  7339                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  7340  0165CC  C0E6  F0BE         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  7341  0165D0  C0E7  F0BF         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  7342  0165D4  ECB2  F0A4         	call	_caltime_to_RTCC	;wreg free
  7343  0165D8  0012               	return		;funcret
  7344  0165DA                     __end_of_RTCC_from_caltime:
  7345                           	opt stack 0
  7346                           tblptru	equ	0xFF8
  7347                           tblptrh	equ	0xFF7
  7348                           tblptrl	equ	0xFF6
  7349                           tablat	equ	0xFF5
  7350                           prodh	equ	0xFF4
  7351                           prodl	equ	0xFF3
  7352                           intcon	equ	0xFF2
  7353                           postinc0	equ	0xFEE
  7354                           wreg	equ	0xFE8
  7355                           indf1	equ	0xFE7
  7356                           postinc1	equ	0xFE6
  7357                           postdec1	equ	0xFE5
  7358                           fsr1h	equ	0xFE2
  7359                           fsr1l	equ	0xFE1
  7360                           indf2	equ	0xFDF
  7361                           postinc2	equ	0xFDE
  7362                           postdec2	equ	0xFDD
  7363                           fsr2h	equ	0xFDA
  7364                           fsr2l	equ	0xFD9
  7365                           status	equ	0xFD8
  7366                           
  7367 ;; *************** function _normal_mode_loop *****************
  7368 ;; Defined at:
  7369 ;;		line 693 in file "tasks.h"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;		None               void
  7376 ;; Registers used:
  7377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7387 ;;Total ram usage:        0 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:   17
  7390 ;; This function calls:
  7391 ;;		_Auto_cut
  7392 ;;		_RTCC_adjust_time_button
  7393 ;;		_display_LCD
  7394 ;;		_port_loop
  7395 ;; This function is called by:
  7396 ;;		_main
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text17
  7401  014F92                     __ptext17:
  7402                           	opt stack 0
  7403  014F92                     _normal_mode_loop:
  7404                           	opt stack 13
  7405                           
  7406                           ;tasks.h: 694: INTCONbits.GIE = 0;
  7407                           
  7408                           ;incstack = 0
  7409  014F92  9EF2               	bcf	intcon,7,c	;volatile
  7410                           
  7411                           ;tasks.h: 695: if (!edit_flag.flags) {
  7412  014F94  0100               	movlb	0	; () banked
  7413  014F96  5198               	movf	_edit_flag& (0+255),w,b
  7414  014F98  A4D8               	btfss	status,2,c
  7415  014F9A  D021               	goto	l11396
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;tasks.h: 696: port_loop();
  7419  014F9C  ECFF  F086         	call	_port_loop	;wreg free
  7420                           
  7421                           ;tasks.h: 697: if (ctmu_m.flag.press) {
  7422  014FA0  0100               	movlb	0	; () banked
  7423  014FA2  A1AF               	btfss	(_ctmu_m+2)& (0+255),0,b
  7424  014FA4  D01C               	goto	l11396
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;tasks.h: 698: ctmu_m.flags = 0;
  7428  014FA6  0E00               	movlw	0
  7429  014FA8  0100               	movlb	0	; () banked
  7430  014FAA  6FB0               	movwf	(_ctmu_m+3)& (0+255),b
  7431  014FAC  0E00               	movlw	0
  7432  014FAE  6FAF               	movwf	(_ctmu_m+2)& (0+255),b
  7433                           
  7434                           ;tasks.h: 699: display_flag = 1;
  7435  014FB0  0E01               	movlw	1
  7436  014FB2  6E4C               	movwf	_display_flag,c
  7437                           
  7438                           ;tasks.h: 700: switch (print_content) {
  7439  014FB4  D008               	goto	l11394
  7440  014FB6                     l11384:
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;tasks.h: 702: print_content = TIME;
  7444  014FB6  0E01               	movlw	1
  7445  014FB8  D001               	goto	L2
  7446  014FBA                     l11386:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;tasks.h: 705: print_content = LOGO;
  7450  014FBA  0E00               	movlw	0
  7451  014FBC                     L2:
  7452  014FBC  0100               	movlb	0	; () banked
  7453  014FBE  6F9A               	movwf	_print_content& (0+255),b
  7454                           
  7455                           ;tasks.h: 709: break;
  7456  014FC0  D00E               	goto	l11396
  7457  014FC2                     l11390:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;tasks.h: 711: print_content = CURRENT;
  7461  014FC2  0E03               	movlw	3
  7462  014FC4  D7FB               	goto	L2
  7463  014FC6                     l11394:
  7464                           
  7465                           ; BSR set to: 0
  7466  014FC6  0100               	movlb	0	; () banked
  7467  014FC8  519A               	movf	_print_content& (0+255),w,b
  7468                           
  7469                           ; Switch size 1, requested type "space"
  7470                           ; Number of cases is 3, Range of values is 0 to 3
  7471                           ; switch strategies available:
  7472                           ; Name         Instructions Cycles
  7473                           ; simple_byte           10     6 (average)
  7474                           ;	Chosen strategy is simple_byte
  7475  014FCA  0A00               	xorlw	0	; case 0
  7476  014FCC  B4D8               	btfsc	status,2,c
  7477  014FCE  D7F9               	goto	l11390
  7478  014FD0  0A01               	xorlw	1	; case 1
  7479  014FD2  B4D8               	btfsc	status,2,c
  7480  014FD4  D7F2               	goto	l11386
  7481  014FD6  0A02               	xorlw	2	; case 3
  7482  014FD8  B4D8               	btfsc	status,2,c
  7483  014FDA  D7ED               	goto	l11384
  7484  014FDC  D7F2               	goto	l11390
  7485  014FDE                     l11396:
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;tasks.h: 714: }
  7489                           ;tasks.h: 715: }
  7490                           ;tasks.h: 716: if (print_content == TIME)RTCC_adjust_time_button(&ctmu_m, &port[0].ctmu,
      +                           &port[1].ctmu);
  7491  014FDE  0100               	movlb	0	; () banked
  7492  014FE0  059A               	decf	_print_content& (0+255),w,b
  7493  014FE2  A4D8               	btfss	status,2,c
  7494  014FE4  D014               	goto	l11400
  7495                           
  7496                           ; BSR set to: 0
  7497  014FE6  0EAD               	movlw	low _ctmu_m
  7498  014FE8  0100               	movlb	0	; () banked
  7499  014FEA  6FF4               	movwf	RTCC_adjust_time_button@mode& (0+255),b
  7500  014FEC  0E00               	movlw	high _ctmu_m
  7501  014FEE  0100               	movlb	0	; () banked
  7502  014FF0  6FF5               	movwf	(RTCC_adjust_time_button@mode+1)& (0+255),b
  7503  014FF2  0E00               	movlw	low _port
  7504  014FF4  0100               	movlb	0	; () banked
  7505  014FF6  6FF6               	movwf	RTCC_adjust_time_button@cnt_inc& (0+255),b
  7506  014FF8  0E03               	movlw	high _port
  7507  014FFA  0100               	movlb	0	; () banked
  7508  014FFC  6FF7               	movwf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),b
  7509  014FFE  0E17               	movlw	low (_port+23)
  7510  015000  0100               	movlb	0	; () banked
  7511  015002  6FF8               	movwf	RTCC_adjust_time_button@cnt_dec& (0+255),b
  7512  015004  0E03               	movlw	high (_port+23)
  7513  015006  0100               	movlb	0	; () banked
  7514  015008  6FF9               	movwf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),b
  7515  01500A  ECAA  F09B         	call	_RTCC_adjust_time_button	;wreg free
  7516  01500E                     l11400:
  7517                           
  7518                           ;tasks.h: 717: if (cut_time_flag) {
  7519  01500E  504B               	movf	_cut_time_flag,w,c
  7520  015010  B4D8               	btfsc	status,2,c
  7521  015012  D004               	goto	l11406
  7522                           
  7523                           ;tasks.h: 718: cut_time_flag = 0;
  7524  015014  0E00               	movlw	0
  7525  015016  6E4B               	movwf	_cut_time_flag,c
  7526                           
  7527                           ;tasks.h: 719: Auto_cut();
  7528  015018  EC10  F09B         	call	_Auto_cut	;wreg free
  7529  01501C                     l11406:
  7530                           
  7531                           ;tasks.h: 720: }
  7532                           ;tasks.h: 721: if (time_change_flag) {
  7533  01501C  5050               	movf	_time_change_flag,w,c
  7534  01501E  B4D8               	btfsc	status,2,c
  7535  015020  D004               	goto	l895
  7536                           
  7537                           ;tasks.h: 722: time_change_flag = 0;
  7538  015022  0E00               	movlw	0
  7539  015024  6E50               	movwf	_time_change_flag,c
  7540                           
  7541                           ;tasks.h: 723: display_flag = 1;
  7542  015026  0E01               	movlw	1
  7543  015028  6E4C               	movwf	_display_flag,c
  7544  01502A                     l895:
  7545                           
  7546                           ;tasks.h: 724: }
  7547                           ;tasks.h: 725: if (delay_display.flag) {
  7548  01502A  5051               	movf	_delay_display,w,c
  7549  01502C  B4D8               	btfsc	status,2,c
  7550  01502E  D006               	goto	l896
  7551                           
  7552                           ;tasks.h: 726: delay_display.flag = 0;
  7553  015030  0E00               	movlw	0
  7554  015032  6E51               	movwf	_delay_display,c
  7555                           
  7556                           ;tasks.h: 727: print_content = next_print_content;
  7557  015034  C04E  F09A         	movff	_next_print_content,_print_content
  7558                           
  7559                           ;tasks.h: 728: display_flag = 1;
  7560  015038  0E01               	movlw	1
  7561  01503A  6E4C               	movwf	_display_flag,c
  7562  01503C                     l896:
  7563                           
  7564                           ;tasks.h: 729: }
  7565                           ;tasks.h: 730: if (display_flag) {
  7566  01503C  504C               	movf	_display_flag,w,c
  7567  01503E  B4D8               	btfsc	status,2,c
  7568  015040  0012               	return	
  7569                           
  7570                           ;tasks.h: 731: display_flag = 0;
  7571  015042  0E00               	movlw	0
  7572  015044  6E4C               	movwf	_display_flag,c
  7573                           
  7574                           ;tasks.h: 732: display_LCD();
  7575  015046  ECD7  F083         	call	_display_LCD	;wreg free
  7576  01504A  0012               	return	
  7577  01504C                     __end_of_normal_mode_loop:
  7578                           	opt stack 0
  7579                           tblptru	equ	0xFF8
  7580                           tblptrh	equ	0xFF7
  7581                           tblptrl	equ	0xFF6
  7582                           tablat	equ	0xFF5
  7583                           prodh	equ	0xFF4
  7584                           prodl	equ	0xFF3
  7585                           intcon	equ	0xFF2
  7586                           postinc0	equ	0xFEE
  7587                           wreg	equ	0xFE8
  7588                           indf1	equ	0xFE7
  7589                           postinc1	equ	0xFE6
  7590                           postdec1	equ	0xFE5
  7591                           fsr1h	equ	0xFE2
  7592                           fsr1l	equ	0xFE1
  7593                           indf2	equ	0xFDF
  7594                           postinc2	equ	0xFDE
  7595                           postdec2	equ	0xFDD
  7596                           fsr2h	equ	0xFDA
  7597                           fsr2l	equ	0xFD9
  7598                           status	equ	0xFD8
  7599                           
  7600 ;; *************** function _port_loop *****************
  7601 ;; Defined at:
  7602 ;;		line 562 in file "tasks.h"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  i               1    4[BANK0 ] unsigned char 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;		None               void
  7609 ;; Registers used:
  7610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7619 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7620 ;;Total ram usage:        1 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:   12
  7623 ;; This function calls:
  7624 ;;		_LED_OUT
  7625 ;;		_OUT
  7626 ;;		_delay_set
  7627 ;; This function is called by:
  7628 ;;		_normal_mode_loop
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text18
  7633  010DFE                     __ptext18:
  7634                           	opt stack 0
  7635  010DFE                     _port_loop:
  7636                           	opt stack 17
  7637                           
  7638                           ;tasks.h: 563: uint8_t i;
  7639                           ;tasks.h: 564: for (i = 0; i < 3; i++) {
  7640                           
  7641                           ;incstack = 0
  7642  010DFE  0E00               	movlw	0
  7643  010E00  0100               	movlb	0	; () banked
  7644  010E02  6FB9               	movwf	port_loop@i& (0+255),b
  7645  010E04                     l11064:
  7646                           
  7647                           ; BSR set to: 0
  7648  010E04  0E02               	movlw	2
  7649  010E06  0100               	movlb	0	; () banked
  7650  010E08  65B9               	cpfsgt	port_loop@i& (0+255),b
  7651  010E0A  D001               	goto	l11068
  7652  010E0C  0012               	return	
  7653  010E0E                     l11068:
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;tasks.h: 566: if (port[i].ctmu.flag.pressing) {
  7657  010E0E  0100               	movlb	0	; () banked
  7658  010E10  51B9               	movf	port_loop@i& (0+255),w,b
  7659  010E12  0D17               	mullw	23
  7660  010E14  0E03               	movlw	3
  7661  010E16  26F3               	addwf	prodl,f,c
  7662  010E18  0E00               	movlw	0
  7663  010E1A  22F4               	addwfc	prodh,f,c
  7664  010E1C  0E00               	movlw	low _port
  7665  010E1E  24F3               	addwf	prodl,w,c
  7666  010E20  6ED9               	movwf	fsr2l,c
  7667  010E22  0E03               	movlw	high _port
  7668  010E24  20F4               	addwfc	prodh,w,c
  7669  010E26  6EDA               	movwf	fsr2h,c
  7670  010E28  0103               	movlb	3	; () banked
  7671  010E2A  A0DF               	btfss	indf2,0,c
  7672  010E2C  D007               	goto	l11072
  7673                           
  7674                           ; BSR set to: 3
  7675                           ;tasks.h: 568: LED_OUT(i, 1);
  7676  010E2E  0E01               	movlw	1
  7677  010E30  0100               	movlb	0	; () banked
  7678  010E32  6FB5               	movwf	LED_OUT@value& (0+255),b
  7679  010E34  0100               	movlb	0	; () banked
  7680  010E36  51B9               	movf	port_loop@i& (0+255),w,b
  7681  010E38  ECA4  F0AE         	call	_LED_OUT
  7682  010E3C                     l11072:
  7683                           
  7684                           ;tasks.h: 569: }
  7685                           ;tasks.h: 571: if (port[i].ctmu.flag.press) {
  7686  010E3C  0100               	movlb	0	; () banked
  7687  010E3E  51B9               	movf	port_loop@i& (0+255),w,b
  7688  010E40  0D17               	mullw	23
  7689  010E42  0E02               	movlw	2
  7690  010E44  26F3               	addwf	prodl,f,c
  7691  010E46  0E00               	movlw	0
  7692  010E48  22F4               	addwfc	prodh,f,c
  7693  010E4A  0E00               	movlw	low _port
  7694  010E4C  24F3               	addwf	prodl,w,c
  7695  010E4E  6ED9               	movwf	fsr2l,c
  7696  010E50  0E03               	movlw	high _port
  7697  010E52  20F4               	addwfc	prodh,w,c
  7698  010E54  6EDA               	movwf	fsr2h,c
  7699  010E56  0103               	movlb	3	; () banked
  7700  010E58  A0DF               	btfss	indf2,0,c
  7701  010E5A  D071               	goto	l11108
  7702                           
  7703                           ; BSR set to: 3
  7704                           ;tasks.h: 572: port[i].ctmu.flags = 0;
  7705  010E5C  0100               	movlb	0	; () banked
  7706  010E5E  51B9               	movf	port_loop@i& (0+255),w,b
  7707  010E60  0D17               	mullw	23
  7708  010E62  0E02               	movlw	2
  7709  010E64  26F3               	addwf	prodl,f,c
  7710  010E66  0E00               	movlw	0
  7711  010E68  22F4               	addwfc	prodh,f,c
  7712  010E6A  0E00               	movlw	low _port
  7713  010E6C  24F3               	addwf	prodl,w,c
  7714  010E6E  6ED9               	movwf	fsr2l,c
  7715  010E70  0E03               	movlw	high _port
  7716  010E72  20F4               	addwfc	prodh,w,c
  7717  010E74  6EDA               	movwf	fsr2h,c
  7718  010E76  0E00               	movlw	0
  7719  010E78  6EDE               	movwf	postinc2,c
  7720  010E7A  0E00               	movlw	0
  7721  010E7C  6EDD               	movwf	postdec2,c
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;tasks.h: 573: LED_OUT(i, 0);
  7725  010E7E  0E00               	movlw	0
  7726  010E80  0100               	movlb	0	; () banked
  7727  010E82  6FB5               	movwf	LED_OUT@value& (0+255),b
  7728  010E84  0100               	movlb	0	; () banked
  7729  010E86  51B9               	movf	port_loop@i& (0+255),w,b
  7730  010E88  ECA4  F0AE         	call	_LED_OUT
  7731                           
  7732                           ;tasks.h: 576: if (print_port == i) {
  7733  010E8C  0100               	movlb	0	; () banked
  7734  010E8E  51B9               	movf	port_loop@i& (0+255),w,b
  7735  010E90  0100               	movlb	0	; () banked
  7736  010E92  199B               	xorwf	_print_port& (0+255),w,b
  7737  010E94  B4D8               	btfsc	status,2,c
  7738  010E96  D009               	goto	l11092
  7739  010E98  D012               	goto	l858
  7740  010E9A                     l11082:
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;tasks.h: 579: print_content = INTEGRATING;
  7744  010E9A  0E04               	movlw	4
  7745  010E9C  D001               	goto	L4
  7746  010E9E                     l11084:
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;tasks.h: 582: print_content = CHARGE_TIME;
  7750  010E9E  0E05               	movlw	5
  7751  010EA0                     L4:
  7752  010EA0  0100               	movlb	0	; () banked
  7753  010EA2  6F9A               	movwf	_print_content& (0+255),b
  7754                           
  7755                           ;tasks.h: 586: break;
  7756  010EA4  D00E               	goto	l11094
  7757  010EA6                     l11088:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;tasks.h: 588: print_content = CURRENT;
  7761  010EA6  0E03               	movlw	3
  7762  010EA8  D7FB               	goto	L4
  7763  010EAA                     l11092:
  7764                           
  7765                           ; BSR set to: 0
  7766  010EAA  0100               	movlb	0	; () banked
  7767  010EAC  519A               	movf	_print_content& (0+255),w,b
  7768                           
  7769                           ; Switch size 1, requested type "space"
  7770                           ; Number of cases is 3, Range of values is 3 to 5
  7771                           ; switch strategies available:
  7772                           ; Name         Instructions Cycles
  7773                           ; simple_byte           10     6 (average)
  7774                           ;	Chosen strategy is simple_byte
  7775  010EAE  0A03               	xorlw	3	; case 3
  7776  010EB0  B4D8               	btfsc	status,2,c
  7777  010EB2  D7F3               	goto	l11082
  7778  010EB4  0A07               	xorlw	7	; case 4
  7779  010EB6  B4D8               	btfsc	status,2,c
  7780  010EB8  D7F2               	goto	l11084
  7781  010EBA  0A01               	xorlw	1	; case 5
  7782  010EBC  D7F4               	goto	l11088
  7783  010EBE                     l858:
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;tasks.h: 592: print_port = i;
  7787  010EBE  C0B9  F09B         	movff	port_loop@i,_print_port
  7788  010EC2                     l11094:
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;tasks.h: 593: }
  7792                           ;tasks.h: 595: if (!port[i].flag.out_flag) {
  7793  010EC2  0100               	movlb	0	; () banked
  7794  010EC4  51B9               	movf	port_loop@i& (0+255),w,b
  7795  010EC6  0D17               	mullw	23
  7796  010EC8  0E16               	movlw	22
  7797  010ECA  26F3               	addwf	prodl,f,c
  7798  010ECC  0E00               	movlw	0
  7799  010ECE  22F4               	addwfc	prodh,f,c
  7800  010ED0  0E00               	movlw	low _port
  7801  010ED2  24F3               	addwf	prodl,w,c
  7802  010ED4  6ED9               	movwf	fsr2l,c
  7803  010ED6  0E03               	movlw	high _port
  7804  010ED8  20F4               	addwfc	prodh,w,c
  7805  010EDA  6EDA               	movwf	fsr2h,c
  7806  010EDC  0103               	movlb	3	; () banked
  7807  010EDE  B4DF               	btfsc	indf2,2,c
  7808  010EE0  D014               	goto	l11102
  7809                           
  7810                           ; BSR set to: 3
  7811                           ;tasks.h: 596: print_content = START_CHARGING;
  7812  010EE2  0E02               	movlw	2
  7813  010EE4  0100               	movlb	0	; () banked
  7814  010EE6  6F9A               	movwf	_print_content& (0+255),b
  7815                           
  7816                           ;tasks.h: 597: next_print_content = CURRENT;
  7817  010EE8  0E03               	movlw	3
  7818  010EEA  6E4E               	movwf	_next_print_content,c
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;tasks.h: 598: delay_set(&delay_display, 32);
  7822  010EEC  0E51               	movlw	low _delay_display
  7823  010EEE  0100               	movlb	0	; () banked
  7824  010EF0  6FB5               	movwf	delay_set@d& (0+255),b
  7825  010EF2  0E00               	movlw	high _delay_display
  7826  010EF4  0100               	movlb	0	; () banked
  7827  010EF6  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  7828  010EF8  0E00               	movlw	0
  7829  010EFA  0100               	movlb	0	; () banked
  7830  010EFC  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  7831  010EFE  0E20               	movlw	32
  7832  010F00  6FB7               	movwf	delay_set@value& (0+255),b
  7833  010F02  ECAD  F0B4         	call	_delay_set	;wreg free
  7834                           
  7835                           ;tasks.h: 599: display_flag = 1;
  7836  010F06  0E01               	movlw	1
  7837  010F08  6E4C               	movwf	_display_flag,c
  7838  010F0A                     l11102:
  7839                           
  7840                           ;tasks.h: 600: }
  7841                           ;tasks.h: 602: OUT(i, 1);
  7842  010F0A  0E01               	movlw	1
  7843  010F0C  0100               	movlb	0	; () banked
  7844  010F0E  6FB5               	movwf	OUT@value& (0+255),b
  7845  010F10  0100               	movlb	0	; () banked
  7846  010F12  51B9               	movf	port_loop@i& (0+255),w,b
  7847  010F14  ECDD  F0AE         	call	_OUT
  7848                           
  7849                           ;tasks.h: 603: port[i].cut_cnt = 0;
  7850  010F18  0100               	movlb	0	; () banked
  7851  010F1A  51B9               	movf	port_loop@i& (0+255),w,b
  7852  010F1C  0D17               	mullw	23
  7853  010F1E  0E14               	movlw	20
  7854  010F20  26F3               	addwf	prodl,f,c
  7855  010F22  0E00               	movlw	0
  7856  010F24  22F4               	addwfc	prodh,f,c
  7857  010F26  0E00               	movlw	low _port
  7858  010F28  24F3               	addwf	prodl,w,c
  7859  010F2A  6ED9               	movwf	fsr2l,c
  7860  010F2C  0E03               	movlw	high _port
  7861  010F2E  20F4               	addwfc	prodh,w,c
  7862  010F30  6EDA               	movwf	fsr2h,c
  7863  010F32  0E00               	movlw	0
  7864  010F34  6EDE               	movwf	postinc2,c
  7865  010F36  0E00               	movlw	0
  7866  010F38  6EDD               	movwf	postdec2,c
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;tasks.h: 604: display_flag = 1;
  7870  010F3A  0E01               	movlw	1
  7871  010F3C  6E4C               	movwf	_display_flag,c
  7872  010F3E                     l11108:
  7873                           
  7874                           ;tasks.h: 605: }
  7875                           ;tasks.h: 607: if (port[i].ctmu.flag.long_holding_2) {
  7876  010F3E  0100               	movlb	0	; () banked
  7877  010F40  51B9               	movf	port_loop@i& (0+255),w,b
  7878  010F42  0D17               	mullw	23
  7879  010F44  0E03               	movlw	3
  7880  010F46  26F3               	addwf	prodl,f,c
  7881  010F48  0E00               	movlw	0
  7882  010F4A  22F4               	addwfc	prodh,f,c
  7883  010F4C  0E00               	movlw	low _port
  7884  010F4E  24F3               	addwf	prodl,w,c
  7885  010F50  6ED9               	movwf	fsr2l,c
  7886  010F52  0E03               	movlw	high _port
  7887  010F54  20F4               	addwfc	prodh,w,c
  7888  010F56  6EDA               	movwf	fsr2h,c
  7889  010F58  0103               	movlb	3	; () banked
  7890  010F5A  A4DF               	btfss	indf2,2,c
  7891  010F5C  D016               	goto	l867
  7892                           
  7893                           ; BSR set to: 3
  7894                           ;tasks.h: 608: port[i].ctmu.flags = 0;
  7895  010F5E  0100               	movlb	0	; () banked
  7896  010F60  51B9               	movf	port_loop@i& (0+255),w,b
  7897  010F62  0D17               	mullw	23
  7898  010F64  0E02               	movlw	2
  7899  010F66  26F3               	addwf	prodl,f,c
  7900  010F68  0E00               	movlw	0
  7901  010F6A  22F4               	addwfc	prodh,f,c
  7902  010F6C  0E00               	movlw	low _port
  7903  010F6E  24F3               	addwf	prodl,w,c
  7904  010F70  6ED9               	movwf	fsr2l,c
  7905  010F72  0E03               	movlw	high _port
  7906  010F74  20F4               	addwfc	prodh,w,c
  7907  010F76  6EDA               	movwf	fsr2h,c
  7908  010F78  0E00               	movlw	0
  7909  010F7A  6EDE               	movwf	postinc2,c
  7910  010F7C  0E00               	movlw	0
  7911  010F7E  6EDD               	movwf	postdec2,c
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;tasks.h: 609: print_content = RESET_;
  7915  010F80  0E06               	movlw	6
  7916  010F82  0100               	movlb	0	; () banked
  7917  010F84  6F9A               	movwf	_print_content& (0+255),b
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;tasks.h: 610: display_flag = 1;
  7921  010F86  0E01               	movlw	1
  7922  010F88  6E4C               	movwf	_display_flag,c
  7923  010F8A                     l867:
  7924                           
  7925                           ;tasks.h: 611: }
  7926                           ;tasks.h: 612: if (port[i].ctmu.flag.long_hold_2) {
  7927  010F8A  0100               	movlb	0	; () banked
  7928  010F8C  51B9               	movf	port_loop@i& (0+255),w,b
  7929  010F8E  0D17               	mullw	23
  7930  010F90  0E02               	movlw	2
  7931  010F92  26F3               	addwf	prodl,f,c
  7932  010F94  0E00               	movlw	0
  7933  010F96  22F4               	addwfc	prodh,f,c
  7934  010F98  0E00               	movlw	low _port
  7935  010F9A  24F3               	addwf	prodl,w,c
  7936  010F9C  6ED9               	movwf	fsr2l,c
  7937  010F9E  0E03               	movlw	high _port
  7938  010FA0  20F4               	addwfc	prodh,w,c
  7939  010FA2  6EDA               	movwf	fsr2h,c
  7940  010FA4  0103               	movlb	3	; () banked
  7941  010FA6  A4DF               	btfss	indf2,2,c
  7942  010FA8  D05F               	goto	l11134
  7943                           
  7944                           ; BSR set to: 3
  7945                           ;tasks.h: 613: port[i].ctmu.flags = 0;
  7946  010FAA  0100               	movlb	0	; () banked
  7947  010FAC  51B9               	movf	port_loop@i& (0+255),w,b
  7948  010FAE  0D17               	mullw	23
  7949  010FB0  0E02               	movlw	2
  7950  010FB2  26F3               	addwf	prodl,f,c
  7951  010FB4  0E00               	movlw	0
  7952  010FB6  22F4               	addwfc	prodh,f,c
  7953  010FB8  0E00               	movlw	low _port
  7954  010FBA  24F3               	addwf	prodl,w,c
  7955  010FBC  6ED9               	movwf	fsr2l,c
  7956  010FBE  0E03               	movlw	high _port
  7957  010FC0  20F4               	addwfc	prodh,w,c
  7958  010FC2  6EDA               	movwf	fsr2h,c
  7959  010FC4  0E00               	movlw	0
  7960  010FC6  6EDE               	movwf	postinc2,c
  7961  010FC8  0E00               	movlw	0
  7962  010FCA  6EDD               	movwf	postdec2,c
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;tasks.h: 614: LED_OUT(i, 0);
  7966  010FCC  0E00               	movlw	0
  7967  010FCE  0100               	movlb	0	; () banked
  7968  010FD0  6FB5               	movwf	LED_OUT@value& (0+255),b
  7969  010FD2  0100               	movlb	0	; () banked
  7970  010FD4  51B9               	movf	port_loop@i& (0+255),w,b
  7971  010FD6  ECA4  F0AE         	call	_LED_OUT
  7972                           
  7973                           ;tasks.h: 615: port[i].integrated_current = 0;
  7974  010FDA  0100               	movlb	0	; () banked
  7975  010FDC  51B9               	movf	port_loop@i& (0+255),w,b
  7976  010FDE  0D17               	mullw	23
  7977  010FE0  0E08               	movlw	8
  7978  010FE2  26F3               	addwf	prodl,f,c
  7979  010FE4  0E00               	movlw	0
  7980  010FE6  22F4               	addwfc	prodh,f,c
  7981  010FE8  0E00               	movlw	low _port
  7982  010FEA  24F3               	addwf	prodl,w,c
  7983  010FEC  6ED9               	movwf	fsr2l,c
  7984  010FEE  0E03               	movlw	high _port
  7985  010FF0  20F4               	addwfc	prodh,w,c
  7986  010FF2  6EDA               	movwf	fsr2h,c
  7987  010FF4  6ADE               	clrf	postinc2,c
  7988  010FF6  6ADE               	clrf	postinc2,c
  7989  010FF8  6ADE               	clrf	postinc2,c
  7990  010FFA  6ADD               	clrf	postdec2,c
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;tasks.h: 616: port[i].integrated_current_sec = 0;
  7994  010FFC  0100               	movlb	0	; () banked
  7995  010FFE  51B9               	movf	port_loop@i& (0+255),w,b
  7996  011000  0D17               	mullw	23
  7997  011002  0E0C               	movlw	12
  7998  011004  26F3               	addwf	prodl,f,c
  7999  011006  0E00               	movlw	0
  8000  011008  22F4               	addwfc	prodh,f,c
  8001  01100A  0E00               	movlw	low _port
  8002  01100C  24F3               	addwf	prodl,w,c
  8003  01100E  6ED9               	movwf	fsr2l,c
  8004  011010  0E03               	movlw	high _port
  8005  011012  20F4               	addwfc	prodh,w,c
  8006  011014  6EDA               	movwf	fsr2h,c
  8007  011016  6ADE               	clrf	postinc2,c
  8008  011018  6ADE               	clrf	postinc2,c
  8009  01101A  6ADE               	clrf	postinc2,c
  8010  01101C  6ADD               	clrf	postdec2,c
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;tasks.h: 617: port[i].integrated_time = 0;
  8014  01101E  0100               	movlb	0	; () banked
  8015  011020  51B9               	movf	port_loop@i& (0+255),w,b
  8016  011022  0D17               	mullw	23
  8017  011024  0E10               	movlw	16
  8018  011026  26F3               	addwf	prodl,f,c
  8019  011028  0E00               	movlw	0
  8020  01102A  22F4               	addwfc	prodh,f,c
  8021  01102C  0E00               	movlw	low _port
  8022  01102E  24F3               	addwf	prodl,w,c
  8023  011030  6ED9               	movwf	fsr2l,c
  8024  011032  0E03               	movlw	high _port
  8025  011034  20F4               	addwfc	prodh,w,c
  8026  011036  6EDA               	movwf	fsr2h,c
  8027  011038  6ADE               	clrf	postinc2,c
  8028  01103A  6ADE               	clrf	postinc2,c
  8029  01103C  6ADE               	clrf	postinc2,c
  8030  01103E  6ADD               	clrf	postdec2,c
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;tasks.h: 618: print_content = RESETED;
  8034  011040  0E07               	movlw	7
  8035  011042  0100               	movlb	0	; () banked
  8036  011044  6F9A               	movwf	_print_content& (0+255),b
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;tasks.h: 619: next_print_content = INTEGRATING;
  8040  011046  0E04               	movlw	4
  8041  011048  6E4E               	movwf	_next_print_content,c
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;tasks.h: 620: delay_set(&delay_display, 64);
  8045  01104A  0E51               	movlw	low _delay_display
  8046  01104C  0100               	movlb	0	; () banked
  8047  01104E  6FB5               	movwf	delay_set@d& (0+255),b
  8048  011050  0E00               	movlw	high _delay_display
  8049  011052  0100               	movlb	0	; () banked
  8050  011054  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  8051  011056  0E00               	movlw	0
  8052  011058  0100               	movlb	0	; () banked
  8053  01105A  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  8054  01105C  0E40               	movlw	64
  8055  01105E  6FB7               	movwf	delay_set@value& (0+255),b
  8056  011060  ECAD  F0B4         	call	_delay_set	;wreg free
  8057                           
  8058                           ;tasks.h: 621: display_flag = 1;
  8059  011064  0E01               	movlw	1
  8060  011066  6E4C               	movwf	_display_flag,c
  8061  011068                     l11134:
  8062                           
  8063                           ;tasks.h: 622: }
  8064                           ;tasks.h: 624: if (port[i].ctmu.flag.long_holding_3) {
  8065  011068  0100               	movlb	0	; () banked
  8066  01106A  51B9               	movf	port_loop@i& (0+255),w,b
  8067  01106C  0D17               	mullw	23
  8068  01106E  0E03               	movlw	3
  8069  011070  26F3               	addwf	prodl,f,c
  8070  011072  0E00               	movlw	0
  8071  011074  22F4               	addwfc	prodh,f,c
  8072  011076  0E00               	movlw	low _port
  8073  011078  24F3               	addwf	prodl,w,c
  8074  01107A  6ED9               	movwf	fsr2l,c
  8075  01107C  0E03               	movlw	high _port
  8076  01107E  20F4               	addwfc	prodh,w,c
  8077  011080  6EDA               	movwf	fsr2h,c
  8078  011082  0103               	movlb	3	; () banked
  8079  011084  A6DF               	btfss	indf2,3,c
  8080  011086  D016               	goto	l869
  8081                           
  8082                           ; BSR set to: 3
  8083                           ;tasks.h: 625: port[i].ctmu.flags = 0;
  8084  011088  0100               	movlb	0	; () banked
  8085  01108A  51B9               	movf	port_loop@i& (0+255),w,b
  8086  01108C  0D17               	mullw	23
  8087  01108E  0E02               	movlw	2
  8088  011090  26F3               	addwf	prodl,f,c
  8089  011092  0E00               	movlw	0
  8090  011094  22F4               	addwfc	prodh,f,c
  8091  011096  0E00               	movlw	low _port
  8092  011098  24F3               	addwf	prodl,w,c
  8093  01109A  6ED9               	movwf	fsr2l,c
  8094  01109C  0E03               	movlw	high _port
  8095  01109E  20F4               	addwfc	prodh,w,c
  8096  0110A0  6EDA               	movwf	fsr2h,c
  8097  0110A2  0E00               	movlw	0
  8098  0110A4  6EDE               	movwf	postinc2,c
  8099  0110A6  0E00               	movlw	0
  8100  0110A8  6EDD               	movwf	postdec2,c
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;tasks.h: 626: print_content = TOGGLE_STOP_;
  8104  0110AA  0E08               	movlw	8
  8105  0110AC  0100               	movlb	0	; () banked
  8106  0110AE  6F9A               	movwf	_print_content& (0+255),b
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;tasks.h: 627: display_flag = 1;
  8110  0110B0  0E01               	movlw	1
  8111  0110B2  6E4C               	movwf	_display_flag,c
  8112  0110B4                     l869:
  8113                           
  8114                           ;tasks.h: 628: }
  8115                           ;tasks.h: 629: if (port[i].ctmu.flag.long_hold_3) {
  8116  0110B4  0100               	movlb	0	; () banked
  8117  0110B6  51B9               	movf	port_loop@i& (0+255),w,b
  8118  0110B8  0D17               	mullw	23
  8119  0110BA  0E02               	movlw	2
  8120  0110BC  26F3               	addwf	prodl,f,c
  8121  0110BE  0E00               	movlw	0
  8122  0110C0  22F4               	addwfc	prodh,f,c
  8123  0110C2  0E00               	movlw	low _port
  8124  0110C4  24F3               	addwf	prodl,w,c
  8125  0110C6  6ED9               	movwf	fsr2l,c
  8126  0110C8  0E03               	movlw	high _port
  8127  0110CA  20F4               	addwfc	prodh,w,c
  8128  0110CC  6EDA               	movwf	fsr2h,c
  8129  0110CE  0103               	movlb	3	; () banked
  8130  0110D0  A6DF               	btfss	indf2,3,c
  8131  0110D2  D074               	goto	l11170
  8132                           
  8133                           ; BSR set to: 3
  8134                           ;tasks.h: 630: port[i].ctmu.flags = 0;
  8135  0110D4  0100               	movlb	0	; () banked
  8136  0110D6  51B9               	movf	port_loop@i& (0+255),w,b
  8137  0110D8  0D17               	mullw	23
  8138  0110DA  0E02               	movlw	2
  8139  0110DC  26F3               	addwf	prodl,f,c
  8140  0110DE  0E00               	movlw	0
  8141  0110E0  22F4               	addwfc	prodh,f,c
  8142  0110E2  0E00               	movlw	low _port
  8143  0110E4  24F3               	addwf	prodl,w,c
  8144  0110E6  6ED9               	movwf	fsr2l,c
  8145  0110E8  0E03               	movlw	high _port
  8146  0110EA  20F4               	addwfc	prodh,w,c
  8147  0110EC  6EDA               	movwf	fsr2h,c
  8148  0110EE  0E00               	movlw	0
  8149  0110F0  6EDE               	movwf	postinc2,c
  8150  0110F2  0E00               	movlw	0
  8151  0110F4  6EDD               	movwf	postdec2,c
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;tasks.h: 631: LED_OUT(i, 0);
  8155  0110F6  0E00               	movlw	0
  8156  0110F8  0100               	movlb	0	; () banked
  8157  0110FA  6FB5               	movwf	LED_OUT@value& (0+255),b
  8158  0110FC  0100               	movlb	0	; () banked
  8159  0110FE  51B9               	movf	port_loop@i& (0+255),w,b
  8160  011100  ECA4  F0AE         	call	_LED_OUT
  8161                           
  8162                           ;tasks.h: 632: if (port[i].flag.auto_cut_ON) {
  8163  011104  0100               	movlb	0	; () banked
  8164  011106  51B9               	movf	port_loop@i& (0+255),w,b
  8165  011108  0D17               	mullw	23
  8166  01110A  0E16               	movlw	22
  8167  01110C  26F3               	addwf	prodl,f,c
  8168  01110E  0E00               	movlw	0
  8169  011110  22F4               	addwfc	prodh,f,c
  8170  011112  0E00               	movlw	low _port
  8171  011114  24F3               	addwf	prodl,w,c
  8172  011116  6ED9               	movwf	fsr2l,c
  8173  011118  0E03               	movlw	high _port
  8174  01111A  20F4               	addwfc	prodh,w,c
  8175  01111C  6EDA               	movwf	fsr2h,c
  8176  01111E  0103               	movlb	3	; () banked
  8177  011120  A0DF               	btfss	indf2,0,c
  8178  011122  D029               	goto	l11160
  8179                           
  8180                           ; BSR set to: 3
  8181                           ;tasks.h: 633: port[i].flag.auto_cut_ON = 0;
  8182  011124  0100               	movlb	0	; () banked
  8183  011126  51B9               	movf	port_loop@i& (0+255),w,b
  8184  011128  0D17               	mullw	23
  8185  01112A  0E16               	movlw	22
  8186  01112C  26F3               	addwf	prodl,f,c
  8187  01112E  0E00               	movlw	0
  8188  011130  22F4               	addwfc	prodh,f,c
  8189  011132  0E00               	movlw	low _port
  8190  011134  24F3               	addwf	prodl,w,c
  8191  011136  6ED9               	movwf	fsr2l,c
  8192  011138  0E03               	movlw	high _port
  8193  01113A  20F4               	addwfc	prodh,w,c
  8194  01113C  6EDA               	movwf	fsr2h,c
  8195  01113E  0103               	movlb	3	; () banked
  8196  011140  90DF               	bcf	indf2,0,c
  8197                           
  8198                           ; BSR set to: 3
  8199                           ;tasks.h: 634: OUT(i, 1);
  8200  011142  0E01               	movlw	1
  8201  011144  0100               	movlb	0	; () banked
  8202  011146  6FB5               	movwf	OUT@value& (0+255),b
  8203  011148  0100               	movlb	0	; () banked
  8204  01114A  51B9               	movf	port_loop@i& (0+255),w,b
  8205  01114C  ECDD  F0AE         	call	_OUT
  8206                           
  8207                           ;tasks.h: 635: print_content = ALWAYS_ON;
  8208  011150  0E09               	movlw	9
  8209  011152  0100               	movlb	0	; () banked
  8210  011154  6F9A               	movwf	_print_content& (0+255),b
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;tasks.h: 636: next_print_content = TIME;
  8214  011156  0E01               	movlw	1
  8215  011158  6E4E               	movwf	_next_print_content,c
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;tasks.h: 637: delay_set(&delay_display, 100);
  8219  01115A  0E51               	movlw	low _delay_display
  8220  01115C  0100               	movlb	0	; () banked
  8221  01115E  6FB5               	movwf	delay_set@d& (0+255),b
  8222  011160  0E00               	movlw	high _delay_display
  8223  011162  0100               	movlb	0	; () banked
  8224  011164  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  8225  011166  0E00               	movlw	0
  8226  011168  0100               	movlb	0	; () banked
  8227  01116A  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  8228  01116C  0E64               	movlw	100
  8229  01116E  6FB7               	movwf	delay_set@value& (0+255),b
  8230  011170  ECAD  F0B4         	call	_delay_set	;wreg free
  8231  011174  D021               	goto	l11168
  8232  011176                     l11160:
  8233                           
  8234                           ;tasks.h: 640: port[i].flag.auto_cut_ON = 1;
  8235  011176  0100               	movlb	0	; () banked
  8236  011178  51B9               	movf	port_loop@i& (0+255),w,b
  8237  01117A  0D17               	mullw	23
  8238  01117C  0E16               	movlw	22
  8239  01117E  26F3               	addwf	prodl,f,c
  8240  011180  0E00               	movlw	0
  8241  011182  22F4               	addwfc	prodh,f,c
  8242  011184  0E00               	movlw	low _port
  8243  011186  24F3               	addwf	prodl,w,c
  8244  011188  6ED9               	movwf	fsr2l,c
  8245  01118A  0E03               	movlw	high _port
  8246  01118C  20F4               	addwfc	prodh,w,c
  8247  01118E  6EDA               	movwf	fsr2h,c
  8248  011190  0103               	movlb	3	; () banked
  8249  011192  80DF               	bsf	indf2,0,c
  8250                           
  8251                           ; BSR set to: 3
  8252                           ;tasks.h: 641: print_content = AUTO_STOP;
  8253  011194  0E0A               	movlw	10
  8254  011196  0100               	movlb	0	; () banked
  8255  011198  6F9A               	movwf	_print_content& (0+255),b
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;tasks.h: 642: next_print_content = TIME;
  8259  01119A  0E01               	movlw	1
  8260  01119C  6E4E               	movwf	_next_print_content,c
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;tasks.h: 643: delay_set(&delay_display, 100);
  8264  01119E  0E51               	movlw	low _delay_display
  8265  0111A0  0100               	movlb	0	; () banked
  8266  0111A2  6FB5               	movwf	delay_set@d& (0+255),b
  8267  0111A4  0E00               	movlw	high _delay_display
  8268  0111A6  0100               	movlb	0	; () banked
  8269  0111A8  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  8270  0111AA  0E00               	movlw	0
  8271  0111AC  0100               	movlb	0	; () banked
  8272  0111AE  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  8273  0111B0  0E64               	movlw	100
  8274  0111B2  6FB7               	movwf	delay_set@value& (0+255),b
  8275  0111B4  ECAD  F0B4         	call	_delay_set	;wreg free
  8276  0111B8                     l11168:
  8277                           
  8278                           ;tasks.h: 644: display_flag = 1;
  8279  0111B8  0E01               	movlw	1
  8280  0111BA  6E4C               	movwf	_display_flag,c
  8281  0111BC                     l11170:
  8282                           
  8283                           ;tasks.h: 645: }
  8284                           ;tasks.h: 646: }
  8285                           ;tasks.h: 648: if (port[i].ctmu.flag.long_holding_4) {
  8286  0111BC  0100               	movlb	0	; () banked
  8287  0111BE  51B9               	movf	port_loop@i& (0+255),w,b
  8288  0111C0  0D17               	mullw	23
  8289  0111C2  0E03               	movlw	3
  8290  0111C4  26F3               	addwf	prodl,f,c
  8291  0111C6  0E00               	movlw	0
  8292  0111C8  22F4               	addwfc	prodh,f,c
  8293  0111CA  0E00               	movlw	low _port
  8294  0111CC  24F3               	addwf	prodl,w,c
  8295  0111CE  6ED9               	movwf	fsr2l,c
  8296  0111D0  0E03               	movlw	high _port
  8297  0111D2  20F4               	addwfc	prodh,w,c
  8298  0111D4  6EDA               	movwf	fsr2h,c
  8299  0111D6  0103               	movlb	3	; () banked
  8300  0111D8  A8DF               	btfss	indf2,4,c
  8301  0111DA  D016               	goto	l873
  8302                           
  8303                           ; BSR set to: 3
  8304                           ;tasks.h: 649: port[i].ctmu.flags = 0;
  8305  0111DC  0100               	movlb	0	; () banked
  8306  0111DE  51B9               	movf	port_loop@i& (0+255),w,b
  8307  0111E0  0D17               	mullw	23
  8308  0111E2  0E02               	movlw	2
  8309  0111E4  26F3               	addwf	prodl,f,c
  8310  0111E6  0E00               	movlw	0
  8311  0111E8  22F4               	addwfc	prodh,f,c
  8312  0111EA  0E00               	movlw	low _port
  8313  0111EC  24F3               	addwf	prodl,w,c
  8314  0111EE  6ED9               	movwf	fsr2l,c
  8315  0111F0  0E03               	movlw	high _port
  8316  0111F2  20F4               	addwfc	prodh,w,c
  8317  0111F4  6EDA               	movwf	fsr2h,c
  8318  0111F6  0E00               	movlw	0
  8319  0111F8  6EDE               	movwf	postinc2,c
  8320  0111FA  0E00               	movlw	0
  8321  0111FC  6EDD               	movwf	postdec2,c
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;tasks.h: 650: print_content = TOGGLE_LED_;
  8325  0111FE  0E0B               	movlw	11
  8326  011200  0100               	movlb	0	; () banked
  8327  011202  6F9A               	movwf	_print_content& (0+255),b
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;tasks.h: 651: display_flag = 1;
  8331  011204  0E01               	movlw	1
  8332  011206  6E4C               	movwf	_display_flag,c
  8333  011208                     l873:
  8334                           
  8335                           ;tasks.h: 652: }
  8336                           ;tasks.h: 653: if (port[i].ctmu.flag.long_hold_4) {
  8337  011208  0100               	movlb	0	; () banked
  8338  01120A  51B9               	movf	port_loop@i& (0+255),w,b
  8339  01120C  0D17               	mullw	23
  8340  01120E  0E02               	movlw	2
  8341  011210  26F3               	addwf	prodl,f,c
  8342  011212  0E00               	movlw	0
  8343  011214  22F4               	addwfc	prodh,f,c
  8344  011216  0E00               	movlw	low _port
  8345  011218  24F3               	addwf	prodl,w,c
  8346  01121A  6ED9               	movwf	fsr2l,c
  8347  01121C  0E03               	movlw	high _port
  8348  01121E  20F4               	addwfc	prodh,w,c
  8349  011220  6EDA               	movwf	fsr2h,c
  8350  011222  0103               	movlb	3	; () banked
  8351  011224  A8DF               	btfss	indf2,4,c
  8352  011226  D06D               	goto	l11204
  8353                           
  8354                           ; BSR set to: 3
  8355                           ;tasks.h: 654: port[i].ctmu.flags = 0;
  8356  011228  0100               	movlb	0	; () banked
  8357  01122A  51B9               	movf	port_loop@i& (0+255),w,b
  8358  01122C  0D17               	mullw	23
  8359  01122E  0E02               	movlw	2
  8360  011230  26F3               	addwf	prodl,f,c
  8361  011232  0E00               	movlw	0
  8362  011234  22F4               	addwfc	prodh,f,c
  8363  011236  0E00               	movlw	low _port
  8364  011238  24F3               	addwf	prodl,w,c
  8365  01123A  6ED9               	movwf	fsr2l,c
  8366  01123C  0E03               	movlw	high _port
  8367  01123E  20F4               	addwfc	prodh,w,c
  8368  011240  6EDA               	movwf	fsr2h,c
  8369  011242  0E00               	movlw	0
  8370  011244  6EDE               	movwf	postinc2,c
  8371  011246  0E00               	movlw	0
  8372  011248  6EDD               	movwf	postdec2,c
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;tasks.h: 655: LED_OUT(i, 0);
  8376  01124A  0E00               	movlw	0
  8377  01124C  0100               	movlb	0	; () banked
  8378  01124E  6FB5               	movwf	LED_OUT@value& (0+255),b
  8379  011250  0100               	movlb	0	; () banked
  8380  011252  51B9               	movf	port_loop@i& (0+255),w,b
  8381  011254  ECA4  F0AE         	call	_LED_OUT
  8382                           
  8383                           ;tasks.h: 656: if (port[i].flag.led_indicater_ON) {
  8384  011258  0100               	movlb	0	; () banked
  8385  01125A  51B9               	movf	port_loop@i& (0+255),w,b
  8386  01125C  0D17               	mullw	23
  8387  01125E  0E16               	movlw	22
  8388  011260  26F3               	addwf	prodl,f,c
  8389  011262  0E00               	movlw	0
  8390  011264  22F4               	addwfc	prodh,f,c
  8391  011266  0E00               	movlw	low _port
  8392  011268  24F3               	addwf	prodl,w,c
  8393  01126A  6ED9               	movwf	fsr2l,c
  8394  01126C  0E03               	movlw	high _port
  8395  01126E  20F4               	addwfc	prodh,w,c
  8396  011270  6EDA               	movwf	fsr2h,c
  8397  011272  0103               	movlb	3	; () banked
  8398  011274  A2DF               	btfss	indf2,1,c
  8399  011276  D022               	goto	l11194
  8400                           
  8401                           ; BSR set to: 3
  8402                           ;tasks.h: 657: port[i].flag.led_indicater_ON = 0;
  8403  011278  0100               	movlb	0	; () banked
  8404  01127A  51B9               	movf	port_loop@i& (0+255),w,b
  8405  01127C  0D17               	mullw	23
  8406  01127E  0E16               	movlw	22
  8407  011280  26F3               	addwf	prodl,f,c
  8408  011282  0E00               	movlw	0
  8409  011284  22F4               	addwfc	prodh,f,c
  8410  011286  0E00               	movlw	low _port
  8411  011288  24F3               	addwf	prodl,w,c
  8412  01128A  6ED9               	movwf	fsr2l,c
  8413  01128C  0E03               	movlw	high _port
  8414  01128E  20F4               	addwfc	prodh,w,c
  8415  011290  6EDA               	movwf	fsr2h,c
  8416  011292  0103               	movlb	3	; () banked
  8417  011294  92DF               	bcf	indf2,1,c
  8418                           
  8419                           ; BSR set to: 3
  8420                           ;tasks.h: 658: print_content = LED_OFF;
  8421  011296  0E0D               	movlw	13
  8422  011298  0100               	movlb	0	; () banked
  8423  01129A  6F9A               	movwf	_print_content& (0+255),b
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;tasks.h: 659: next_print_content = TIME;
  8427  01129C  0E01               	movlw	1
  8428  01129E  6E4E               	movwf	_next_print_content,c
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;tasks.h: 660: delay_set(&delay_display, 100);
  8432  0112A0  0E51               	movlw	low _delay_display
  8433  0112A2  0100               	movlb	0	; () banked
  8434  0112A4  6FB5               	movwf	delay_set@d& (0+255),b
  8435  0112A6  0E00               	movlw	high _delay_display
  8436  0112A8  0100               	movlb	0	; () banked
  8437  0112AA  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  8438  0112AC  0E00               	movlw	0
  8439  0112AE  0100               	movlb	0	; () banked
  8440  0112B0  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  8441  0112B2  0E64               	movlw	100
  8442  0112B4  6FB7               	movwf	delay_set@value& (0+255),b
  8443  0112B6  ECAD  F0B4         	call	_delay_set	;wreg free
  8444  0112BA  D021               	goto	l11202
  8445  0112BC                     l11194:
  8446                           
  8447                           ;tasks.h: 663: port[i].flag.led_indicater_ON = 1;
  8448  0112BC  0100               	movlb	0	; () banked
  8449  0112BE  51B9               	movf	port_loop@i& (0+255),w,b
  8450  0112C0  0D17               	mullw	23
  8451  0112C2  0E16               	movlw	22
  8452  0112C4  26F3               	addwf	prodl,f,c
  8453  0112C6  0E00               	movlw	0
  8454  0112C8  22F4               	addwfc	prodh,f,c
  8455  0112CA  0E00               	movlw	low _port
  8456  0112CC  24F3               	addwf	prodl,w,c
  8457  0112CE  6ED9               	movwf	fsr2l,c
  8458  0112D0  0E03               	movlw	high _port
  8459  0112D2  20F4               	addwfc	prodh,w,c
  8460  0112D4  6EDA               	movwf	fsr2h,c
  8461  0112D6  0103               	movlb	3	; () banked
  8462  0112D8  82DF               	bsf	indf2,1,c
  8463                           
  8464                           ; BSR set to: 3
  8465                           ;tasks.h: 664: print_content = LED_ON;
  8466  0112DA  0E0C               	movlw	12
  8467  0112DC  0100               	movlb	0	; () banked
  8468  0112DE  6F9A               	movwf	_print_content& (0+255),b
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;tasks.h: 665: next_print_content = TIME;
  8472  0112E0  0E01               	movlw	1
  8473  0112E2  6E4E               	movwf	_next_print_content,c
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;tasks.h: 666: delay_set(&delay_display, 100);
  8477  0112E4  0E51               	movlw	low _delay_display
  8478  0112E6  0100               	movlb	0	; () banked
  8479  0112E8  6FB5               	movwf	delay_set@d& (0+255),b
  8480  0112EA  0E00               	movlw	high _delay_display
  8481  0112EC  0100               	movlb	0	; () banked
  8482  0112EE  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  8483  0112F0  0E00               	movlw	0
  8484  0112F2  0100               	movlb	0	; () banked
  8485  0112F4  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  8486  0112F6  0E64               	movlw	100
  8487  0112F8  6FB7               	movwf	delay_set@value& (0+255),b
  8488  0112FA  ECAD  F0B4         	call	_delay_set	;wreg free
  8489  0112FE                     l11202:
  8490                           
  8491                           ;tasks.h: 667: display_flag = 1;
  8492  0112FE  0E01               	movlw	1
  8493  011300  6E4C               	movwf	_display_flag,c
  8494  011302                     l11204:
  8495                           
  8496                           ;tasks.h: 668: }
  8497                           ;tasks.h: 669: }
  8498                           ;tasks.h: 671: if (port[i].ctmu.flag.long_holding_5) {
  8499  011302  0100               	movlb	0	; () banked
  8500  011304  51B9               	movf	port_loop@i& (0+255),w,b
  8501  011306  0D17               	mullw	23
  8502  011308  0E03               	movlw	3
  8503  01130A  26F3               	addwf	prodl,f,c
  8504  01130C  0E00               	movlw	0
  8505  01130E  22F4               	addwfc	prodh,f,c
  8506  011310  0E00               	movlw	low _port
  8507  011312  24F3               	addwf	prodl,w,c
  8508  011314  6ED9               	movwf	fsr2l,c
  8509  011316  0E03               	movlw	high _port
  8510  011318  20F4               	addwfc	prodh,w,c
  8511  01131A  6EDA               	movwf	fsr2h,c
  8512  01131C  0103               	movlb	3	; () banked
  8513  01131E  AADF               	btfss	indf2,5,c
  8514  011320  D02C               	goto	l11218
  8515                           
  8516                           ; BSR set to: 3
  8517                           ;tasks.h: 672: port[i].ctmu.flags = 0;
  8518  011322  0100               	movlb	0	; () banked
  8519  011324  51B9               	movf	port_loop@i& (0+255),w,b
  8520  011326  0D17               	mullw	23
  8521  011328  0E02               	movlw	2
  8522  01132A  26F3               	addwf	prodl,f,c
  8523  01132C  0E00               	movlw	0
  8524  01132E  22F4               	addwfc	prodh,f,c
  8525  011330  0E00               	movlw	low _port
  8526  011332  24F3               	addwf	prodl,w,c
  8527  011334  6ED9               	movwf	fsr2l,c
  8528  011336  0E03               	movlw	high _port
  8529  011338  20F4               	addwfc	prodh,w,c
  8530  01133A  6EDA               	movwf	fsr2h,c
  8531  01133C  0E00               	movlw	0
  8532  01133E  6EDE               	movwf	postinc2,c
  8533  011340  0E00               	movlw	0
  8534  011342  6EDD               	movwf	postdec2,c
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;tasks.h: 673: LED_OUT(i, 0);
  8538  011344  0E00               	movlw	0
  8539  011346  0100               	movlb	0	; () banked
  8540  011348  6FB5               	movwf	LED_OUT@value& (0+255),b
  8541  01134A  0100               	movlb	0	; () banked
  8542  01134C  51B9               	movf	port_loop@i& (0+255),w,b
  8543  01134E  ECA4  F0AE         	call	_LED_OUT
  8544                           
  8545                           ;tasks.h: 674: print_content = NOTHING_DONE;
  8546  011352  0E0E               	movlw	14
  8547  011354  0100               	movlb	0	; () banked
  8548  011356  6F9A               	movwf	_print_content& (0+255),b
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;tasks.h: 675: next_print_content = CURRENT;
  8552  011358  0E03               	movlw	3
  8553  01135A  6E4E               	movwf	_next_print_content,c
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;tasks.h: 676: delay_set(&delay_display, 64);
  8557  01135C  0E51               	movlw	low _delay_display
  8558  01135E  0100               	movlb	0	; () banked
  8559  011360  6FB5               	movwf	delay_set@d& (0+255),b
  8560  011362  0E00               	movlw	high _delay_display
  8561  011364  0100               	movlb	0	; () banked
  8562  011366  6FB6               	movwf	(delay_set@d+1)& (0+255),b
  8563  011368  0E00               	movlw	0
  8564  01136A  0100               	movlb	0	; () banked
  8565  01136C  6FB8               	movwf	(delay_set@value+1)& (0+255),b
  8566  01136E  0E40               	movlw	64
  8567  011370  6FB7               	movwf	delay_set@value& (0+255),b
  8568  011372  ECAD  F0B4         	call	_delay_set	;wreg free
  8569                           
  8570                           ;tasks.h: 677: display_flag = 1;
  8571  011376  0E01               	movlw	1
  8572  011378  6E4C               	movwf	_display_flag,c
  8573  01137A                     l11218:
  8574  01137A  0100               	movlb	0	; () banked
  8575  01137C  2BB9               	incf	port_loop@i& (0+255),f,b
  8576  01137E  D542               	goto	l11064
  8577  011380                     __end_of_port_loop:
  8578                           	opt stack 0
  8579                           tblptru	equ	0xFF8
  8580                           tblptrh	equ	0xFF7
  8581                           tblptrl	equ	0xFF6
  8582                           tablat	equ	0xFF5
  8583                           prodh	equ	0xFF4
  8584                           prodl	equ	0xFF3
  8585                           intcon	equ	0xFF2
  8586                           postinc0	equ	0xFEE
  8587                           wreg	equ	0xFE8
  8588                           indf1	equ	0xFE7
  8589                           postinc1	equ	0xFE6
  8590                           postdec1	equ	0xFE5
  8591                           fsr1h	equ	0xFE2
  8592                           fsr1l	equ	0xFE1
  8593                           indf2	equ	0xFDF
  8594                           postinc2	equ	0xFDE
  8595                           postdec2	equ	0xFDD
  8596                           fsr2h	equ	0xFDA
  8597                           fsr2l	equ	0xFD9
  8598                           status	equ	0xFD8
  8599                           
  8600 ;; *************** function _delay_set *****************
  8601 ;; Defined at:
  8602 ;;		line 349 in file "../My_header\My_header.h"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  d               2    0[BANK0 ] PTR struct Delay
  8605 ;;		 -> delay_display(3), 
  8606 ;;  value           2    2[BANK0 ] unsigned int 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;		None
  8609 ;; Return value:  Size  Location     Type
  8610 ;;		None               void
  8611 ;; Registers used:
  8612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8618 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8621 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8622 ;;Total ram usage:        4 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:   11
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_port_loop
  8629 ;;		_main
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text19
  8634  01695A                     __ptext19:
  8635                           	opt stack 0
  8636  01695A                     _delay_set:
  8637                           	opt stack 17
  8638                           
  8639                           ;My_header\My_header.h: 350: d->cnt = value;
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;incstack = 0
  8643  01695A  0100               	movlb	0	; () banked
  8644  01695C  EE20 F001          	lfsr	2,1
  8645  016960  51B5               	movf	delay_set@d& (0+255),w,b
  8646  016962  26D9               	addwf	fsr2l,f,c
  8647  016964  51B6               	movf	(delay_set@d+1)& (0+255),w,b
  8648  016966  22DA               	addwfc	fsr2h,f,c
  8649  016968  C0B7  FFDE         	movff	delay_set@value,postinc2
  8650  01696C  C0B8  FFDD         	movff	delay_set@value+1,postdec2
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;My_header\My_header.h: 351: d->flag = 0;
  8654  016970  C0B5  FFD9         	movff	delay_set@d,fsr2l
  8655  016974  C0B6  FFDA         	movff	delay_set@d+1,fsr2h
  8656  016978  0E00               	movlw	0
  8657  01697A  6EDF               	movwf	indf2,c
  8658                           
  8659                           ; BSR set to: 0
  8660  01697C  0012               	return		;funcret
  8661  01697E                     __end_of_delay_set:
  8662                           	opt stack 0
  8663                           tblptru	equ	0xFF8
  8664                           tblptrh	equ	0xFF7
  8665                           tblptrl	equ	0xFF6
  8666                           tablat	equ	0xFF5
  8667                           prodh	equ	0xFF4
  8668                           prodl	equ	0xFF3
  8669                           intcon	equ	0xFF2
  8670                           postinc0	equ	0xFEE
  8671                           wreg	equ	0xFE8
  8672                           indf1	equ	0xFE7
  8673                           postinc1	equ	0xFE6
  8674                           postdec1	equ	0xFE5
  8675                           fsr1h	equ	0xFE2
  8676                           fsr1l	equ	0xFE1
  8677                           indf2	equ	0xFDF
  8678                           postinc2	equ	0xFDE
  8679                           postdec2	equ	0xFDD
  8680                           fsr2h	equ	0xFDA
  8681                           fsr2l	equ	0xFD9
  8682                           status	equ	0xFD8
  8683                           
  8684 ;; *************** function _LED_OUT *****************
  8685 ;; Defined at:
  8686 ;;		line 125 in file "tasks.h"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  b               1    wreg     unsigned char 
  8689 ;;  value           1    0[BANK0 ] unsigned char 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  b               1    1[BANK0 ] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;		None               void
  8694 ;; Registers used:
  8695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8701 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8705 ;;Total ram usage:        2 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:   11
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_port_loop
  8712 ;;		_sleep_loop
  8713 ;;		_main
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text20
  8718  015D48                     __ptext20:
  8719                           	opt stack 0
  8720  015D48                     _LED_OUT:
  8721                           	opt stack 18
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;incstack = 0
  8725                           ;LED_OUT@b stored from wreg
  8726  015D48  0100               	movlb	0	; () banked
  8727  015D4A  6FB6               	movwf	LED_OUT@b& (0+255),b
  8728                           
  8729                           ;tasks.h: 126: port[b].flag.led_flag = value;
  8730  015D4C  0100               	movlb	0	; () banked
  8731  015D4E  51B6               	movf	LED_OUT@b& (0+255),w,b
  8732  015D50  0D17               	mullw	23
  8733  015D52  0E16               	movlw	22
  8734  015D54  26F3               	addwf	prodl,f,c
  8735  015D56  0E00               	movlw	0
  8736  015D58  22F4               	addwfc	prodh,f,c
  8737  015D5A  0E00               	movlw	low _port
  8738  015D5C  24F3               	addwf	prodl,w,c
  8739  015D5E  6ED9               	movwf	fsr2l,c
  8740  015D60  0E03               	movlw	high _port
  8741  015D62  20F4               	addwfc	prodh,w,c
  8742  015D64  6EDA               	movwf	fsr2h,c
  8743  015D66  0100               	movlb	0	; () banked
  8744  015D68  B1B5               	btfsc	LED_OUT@value& (0+255),0,b
  8745  015D6A  D003               	bra	u11245
  8746  015D6C  0103               	movlb	3	; () banked
  8747  015D6E  96DF               	bcf	indf2,3,c
  8748  015D70  D002               	bra	u11246
  8749  015D72                     u11245:
  8750  015D72  0103               	movlb	3	; () banked
  8751  015D74  86DF               	bsf	indf2,3,c
  8752  015D76                     u11246:
  8753                           
  8754                           ;tasks.h: 127: switch (b) {
  8755  015D76  D015               	goto	l10206
  8756  015D78                     l642:
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;tasks.h: 129: LATB7 = value;
  8760  015D78  0100               	movlb	0	; () banked
  8761  015D7A  A1B5               	btfss	LED_OUT@value& (0+255),0,b
  8762  015D7C  D002               	goto	u11250
  8763  015D7E  8E8A               	bsf	3978,7,c	;volatile
  8764  015D80  0012               	return	
  8765  015D82                     u11250:
  8766  015D82  9E8A               	bcf	3978,7,c	;volatile
  8767                           
  8768                           ;tasks.h: 130: break;
  8769  015D84  0012               	return	
  8770  015D86                     l644:
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;tasks.h: 132: LATB6 = value;
  8774  015D86  0100               	movlb	0	; () banked
  8775  015D88  A1B5               	btfss	LED_OUT@value& (0+255),0,b
  8776  015D8A  D002               	goto	u11270
  8777  015D8C  8C8A               	bsf	3978,6,c	;volatile
  8778  015D8E  0012               	return	
  8779  015D90                     u11270:
  8780  015D90  9C8A               	bcf	3978,6,c	;volatile
  8781                           
  8782                           ;tasks.h: 133: break;
  8783  015D92  0012               	return	
  8784  015D94                     l645:
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;tasks.h: 135: LATC2 = value;
  8788  015D94  0100               	movlb	0	; () banked
  8789  015D96  A1B5               	btfss	LED_OUT@value& (0+255),0,b
  8790  015D98  D002               	goto	u11290
  8791  015D9A  848B               	bsf	3979,2,c	;volatile
  8792  015D9C  0012               	return	
  8793  015D9E                     u11290:
  8794  015D9E  948B               	bcf	3979,2,c	;volatile
  8795                           
  8796                           ;tasks.h: 137: }
  8797                           
  8798                           ;tasks.h: 136: break;
  8799  015DA0  0012               	return	
  8800  015DA2                     l10206:
  8801  015DA2  0100               	movlb	0	; () banked
  8802  015DA4  51B6               	movf	LED_OUT@b& (0+255),w,b
  8803                           
  8804                           ; Switch size 1, requested type "space"
  8805                           ; Number of cases is 3, Range of values is 0 to 2
  8806                           ; switch strategies available:
  8807                           ; Name         Instructions Cycles
  8808                           ; simple_byte           10     6 (average)
  8809                           ;	Chosen strategy is simple_byte
  8810  015DA6  0A00               	xorlw	0	; case 0
  8811  015DA8  B4D8               	btfsc	status,2,c
  8812  015DAA  D7E6               	goto	l642
  8813  015DAC  0A01               	xorlw	1	; case 1
  8814  015DAE  B4D8               	btfsc	status,2,c
  8815  015DB0  D7EA               	goto	l644
  8816  015DB2  0A03               	xorlw	3	; case 2
  8817  015DB4  A4D8               	btfss	status,2,c
  8818  015DB6  0012               	return	
  8819  015DB8  D7ED               	goto	l645
  8820  015DBA                     __end_of_LED_OUT:
  8821                           	opt stack 0
  8822                           tblptru	equ	0xFF8
  8823                           tblptrh	equ	0xFF7
  8824                           tblptrl	equ	0xFF6
  8825                           tablat	equ	0xFF5
  8826                           prodh	equ	0xFF4
  8827                           prodl	equ	0xFF3
  8828                           intcon	equ	0xFF2
  8829                           postinc0	equ	0xFEE
  8830                           wreg	equ	0xFE8
  8831                           indf1	equ	0xFE7
  8832                           postinc1	equ	0xFE6
  8833                           postdec1	equ	0xFE5
  8834                           fsr1h	equ	0xFE2
  8835                           fsr1l	equ	0xFE1
  8836                           indf2	equ	0xFDF
  8837                           postinc2	equ	0xFDE
  8838                           postdec2	equ	0xFDD
  8839                           fsr2h	equ	0xFDA
  8840                           fsr2l	equ	0xFD9
  8841                           status	equ	0xFD8
  8842                           
  8843 ;; *************** function _display_LCD *****************
  8844 ;; Defined at:
  8845 ;;		line 224 in file "tasks.h"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;		None
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;  str            10    0[BANK1 ] unsigned char [10]
  8850 ;; Return value:  Size  Location     Type
  8851 ;;		None               void
  8852 ;; Registers used:
  8853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8860 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8862 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8863 ;;Total ram usage:       14 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:   16
  8866 ;; This function calls:
  8867 ;;		_I2C_LCD_Clear
  8868 ;;		_I2C_LCD_Putc
  8869 ;;		_I2C_LCD_Puts
  8870 ;;		_I2C_LCD_SetCursor
  8871 ;;		___lldiv
  8872 ;;		___llmod
  8873 ;;		___lwdiv
  8874 ;;		___lwmod
  8875 ;;		_display_port
  8876 ;;		_display_time_1602
  8877 ;;		_my_utoa
  8878 ;; This function is called by:
  8879 ;;		_normal_mode_loop
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text21
  8884  0107AE                     __ptext21:
  8885                           	opt stack 0
  8886  0107AE                     _display_LCD:
  8887                           	opt stack 13
  8888                           
  8889                           ;tasks.h: 225: I2C_LCD_Clear();
  8890                           
  8891                           ;incstack = 0
  8892  0107AE  EC2C  F0B5         	call	_I2C_LCD_Clear	;wreg free
  8893                           
  8894                           ;tasks.h: 226: switch (print_content) {
  8895  0107B2  D2F5               	goto	l10908
  8896  0107B4                     l10782:
  8897                           
  8898                           ;tasks.h: 228: I2C_LCD_SetCursor(0, 0);
  8899  0107B4  0E00               	movlw	0
  8900  0107B6  0100               	movlb	0	; () banked
  8901  0107B8  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8902  0107BA  0E00               	movlw	0
  8903  0107BC  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  8904                           
  8905                           ;tasks.h: 229: I2C_LCD_Puts("Charge Station 6");
  8906  0107C0  0E4B               	movlw	low STR_8
  8907  0107C2  0100               	movlb	0	; () banked
  8908  0107C4  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8909  0107C6  0EFE               	movlw	high STR_8
  8910  0107C8  0100               	movlb	0	; () banked
  8911  0107CA  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8912  0107CC  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  8913                           
  8914                           ;tasks.h: 230: I2C_LCD_SetCursor(0, 1);
  8915  0107D0  0E01               	movlw	1
  8916  0107D2  0100               	movlb	0	; () banked
  8917  0107D4  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8918  0107D6  0E00               	movlw	0
  8919  0107D8  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  8920                           
  8921                           ;tasks.h: 231: I2C_LCD_Puts("Made by KERI");
  8922  0107DC  0ECB               	movlw	low STR_9
  8923  0107DE  0100               	movlb	0	; () banked
  8924  0107E0  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8925  0107E2  0EFE               	movlw	high STR_9
  8926  0107E4  0100               	movlb	0	; () banked
  8927  0107E6  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8928  0107E8  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  8929                           
  8930                           ;tasks.h: 232: break;
  8931  0107EC  0012               	return	
  8932  0107EE                     l10788:
  8933                           
  8934                           ;tasks.h: 234: display_time_1602(&caltime_now, &epoch_now);
  8935  0107EE  0EA6               	movlw	low _caltime_now
  8936  0107F0  0100               	movlb	0	; () banked
  8937  0107F2  6FEC               	movwf	display_time_1602@ct& (0+255),b
  8938  0107F4  0E00               	movlw	high _caltime_now
  8939  0107F6  0100               	movlb	0	; () banked
  8940  0107F8  6FED               	movwf	(display_time_1602@ct+1)& (0+255),b
  8941  0107FA  0EB1               	movlw	low _epoch_now
  8942  0107FC  0100               	movlb	0	; () banked
  8943  0107FE  6FEE               	movwf	display_time_1602@ep& (0+255),b
  8944  010800  0E00               	movlw	high _epoch_now
  8945  010802  0100               	movlb	0	; () banked
  8946  010804  6FEF               	movwf	(display_time_1602@ep+1)& (0+255),b
  8947  010806  EC7D  F098         	call	_display_time_1602	;wreg free
  8948                           
  8949                           ;tasks.h: 235: break;
  8950  01080A  0012               	return	
  8951  01080C                     l10790:
  8952                           
  8953                           ;tasks.h: 237: display_port();
  8954  01080C  EC6A  F09F         	call	_display_port	;wreg free
  8955                           
  8956                           ;tasks.h: 238: I2C_LCD_SetCursor(0, 1);
  8957  010810  0E01               	movlw	1
  8958  010812  0100               	movlb	0	; () banked
  8959  010814  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8960  010816  0E00               	movlw	0
  8961  010818  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  8962                           
  8963                           ;tasks.h: 239: I2C_LCD_Puts("Start Charging");
  8964  01081C  0EAE               	movlw	low STR_10
  8965  01081E  0100               	movlb	0	; () banked
  8966  010820  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  8967  010822  0EFE               	movlw	high STR_10
  8968  010824  0100               	movlb	0	; () banked
  8969  010826  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8970  010828  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  8971                           
  8972                           ;tasks.h: 240: break;
  8973  01082C  0012               	return	
  8974  01082E                     l10796:
  8975                           
  8976                           ;tasks.h: 242: display_port();
  8977  01082E  EC6A  F09F         	call	_display_port	;wreg free
  8978                           
  8979                           ;tasks.h: 243: I2C_LCD_SetCursor(0, 1);
  8980  010832  0E01               	movlw	1
  8981  010834  0100               	movlb	0	; () banked
  8982  010836  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8983  010838  0E00               	movlw	0
  8984  01083A  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  8985                           
  8986                           ;tasks.h: 244: I2C_LCD_Putc((port[print_port].current % 10000) / 1000 + '0');
  8987  01083E  0E27               	movlw	39
  8988  010840  0100               	movlb	0	; () banked
  8989  010842  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  8990  010844  0E10               	movlw	16
  8991  010846  6FB7               	movwf	___lwmod@divisor& (0+255),b
  8992  010848  0100               	movlb	0	; () banked
  8993  01084A  519B               	movf	_print_port& (0+255),w,b
  8994  01084C  0D17               	mullw	23
  8995  01084E  0E06               	movlw	6
  8996  010850  26F3               	addwf	prodl,f,c
  8997  010852  0E00               	movlw	0
  8998  010854  22F4               	addwfc	prodh,f,c
  8999  010856  0E00               	movlw	low _port
  9000  010858  24F3               	addwf	prodl,w,c
  9001  01085A  6ED9               	movwf	fsr2l,c
  9002  01085C  0E03               	movlw	high _port
  9003  01085E  20F4               	addwfc	prodh,w,c
  9004  010860  6EDA               	movwf	fsr2h,c
  9005  010862  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  9006  010866  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  9007  01086A  ECB5  F0AF         	call	___lwmod	;wreg free
  9008  01086E  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  9009  010872  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  9010  010876  0E03               	movlw	3
  9011  010878  0100               	movlb	0	; () banked
  9012  01087A  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9013  01087C  0EE8               	movlw	232
  9014  01087E  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  9015  010880  ECF2  F0AD         	call	___lwdiv	;wreg free
  9016  010884  0100               	movlb	0	; () banked
  9017  010886  51D1               	movf	?___lwdiv& (0+255),w,b
  9018  010888  0F30               	addlw	48
  9019  01088A  EC7E  F0B2         	call	_I2C_LCD_Putc
  9020                           
  9021                           ;tasks.h: 245: I2C_LCD_Putc('.');
  9022  01088E  0E2E               	movlw	46
  9023  010890  EC7E  F0B2         	call	_I2C_LCD_Putc
  9024                           
  9025                           ;tasks.h: 246: I2C_LCD_Putc((port[print_port].current % 1000) / 100 + '0');
  9026  010894  0E03               	movlw	3
  9027  010896  0100               	movlb	0	; () banked
  9028  010898  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  9029  01089A  0EE8               	movlw	232
  9030  01089C  6FB7               	movwf	___lwmod@divisor& (0+255),b
  9031  01089E  0100               	movlb	0	; () banked
  9032  0108A0  519B               	movf	_print_port& (0+255),w,b
  9033  0108A2  0D17               	mullw	23
  9034  0108A4  0E06               	movlw	6
  9035  0108A6  26F3               	addwf	prodl,f,c
  9036  0108A8  0E00               	movlw	0
  9037  0108AA  22F4               	addwfc	prodh,f,c
  9038  0108AC  0E00               	movlw	low _port
  9039  0108AE  24F3               	addwf	prodl,w,c
  9040  0108B0  6ED9               	movwf	fsr2l,c
  9041  0108B2  0E03               	movlw	high _port
  9042  0108B4  20F4               	addwfc	prodh,w,c
  9043  0108B6  6EDA               	movwf	fsr2h,c
  9044  0108B8  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  9045  0108BC  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  9046  0108C0  ECB5  F0AF         	call	___lwmod	;wreg free
  9047  0108C4  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  9048  0108C8  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  9049  0108CC  0E00               	movlw	0
  9050  0108CE  0100               	movlb	0	; () banked
  9051  0108D0  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9052  0108D2  0E64               	movlw	100
  9053  0108D4  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  9054  0108D6  ECF2  F0AD         	call	___lwdiv	;wreg free
  9055  0108DA  0100               	movlb	0	; () banked
  9056  0108DC  51D1               	movf	?___lwdiv& (0+255),w,b
  9057  0108DE  0F30               	addlw	48
  9058  0108E0  EC7E  F0B2         	call	_I2C_LCD_Putc
  9059                           
  9060                           ;tasks.h: 247: I2C_LCD_Putc((port[print_port].current % 100) / 10 + '0');
  9061  0108E4  0E00               	movlw	0
  9062  0108E6  0100               	movlb	0	; () banked
  9063  0108E8  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  9064  0108EA  0E64               	movlw	100
  9065  0108EC  6FB7               	movwf	___lwmod@divisor& (0+255),b
  9066  0108EE  0100               	movlb	0	; () banked
  9067  0108F0  519B               	movf	_print_port& (0+255),w,b
  9068  0108F2  0D17               	mullw	23
  9069  0108F4  0E06               	movlw	6
  9070  0108F6  26F3               	addwf	prodl,f,c
  9071  0108F8  0E00               	movlw	0
  9072  0108FA  22F4               	addwfc	prodh,f,c
  9073  0108FC  0E00               	movlw	low _port
  9074  0108FE  24F3               	addwf	prodl,w,c
  9075  010900  6ED9               	movwf	fsr2l,c
  9076  010902  0E03               	movlw	high _port
  9077  010904  20F4               	addwfc	prodh,w,c
  9078  010906  6EDA               	movwf	fsr2h,c
  9079  010908  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  9080  01090C  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  9081  010910  ECB5  F0AF         	call	___lwmod	;wreg free
  9082  010914  C0B5  F0D1         	movff	?___lwmod,___lwdiv@dividend
  9083  010918  C0B6  F0D2         	movff	?___lwmod+1,___lwdiv@dividend+1
  9084  01091C  0E00               	movlw	0
  9085  01091E  0100               	movlb	0	; () banked
  9086  010920  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9087  010922  0E0A               	movlw	10
  9088  010924  6FD3               	movwf	___lwdiv@divisor& (0+255),b
  9089  010926  ECF2  F0AD         	call	___lwdiv	;wreg free
  9090  01092A  0100               	movlb	0	; () banked
  9091  01092C  51D1               	movf	?___lwdiv& (0+255),w,b
  9092  01092E  0F30               	addlw	48
  9093  010930  EC7E  F0B2         	call	_I2C_LCD_Putc
  9094                           
  9095                           ;tasks.h: 248: I2C_LCD_Putc((port[print_port].current % 10) / 1 + '0');
  9096  010934  0100               	movlb	0	; () banked
  9097  010936  519B               	movf	_print_port& (0+255),w,b
  9098  010938  0D17               	mullw	23
  9099  01093A  0E06               	movlw	6
  9100  01093C  26F3               	addwf	prodl,f,c
  9101  01093E  0E00               	movlw	0
  9102  010940  22F4               	addwfc	prodh,f,c
  9103  010942  0E00               	movlw	low _port
  9104  010944  24F3               	addwf	prodl,w,c
  9105  010946  6ED9               	movwf	fsr2l,c
  9106  010948  0E03               	movlw	high _port
  9107  01094A  20F4               	addwfc	prodh,w,c
  9108  01094C  6EDA               	movwf	fsr2h,c
  9109  01094E  CFDE F0B5          	movff	postinc2,___lwmod@dividend
  9110  010952  CFDD F0B6          	movff	postdec2,___lwmod@dividend+1
  9111  010956  0E00               	movlw	0
  9112  010958  0100               	movlb	0	; () banked
  9113  01095A  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
  9114  01095C  0E0A               	movlw	10
  9115  01095E  6FB7               	movwf	___lwmod@divisor& (0+255),b
  9116  010960  ECB5  F0AF         	call	___lwmod	;wreg free
  9117  010964  0100               	movlb	0	; () banked
  9118  010966  51B5               	movf	?___lwmod& (0+255),w,b
  9119  010968  0F30               	addlw	48
  9120  01096A  EC7E  F0B2         	call	_I2C_LCD_Putc
  9121                           
  9122                           ;tasks.h: 249: I2C_LCD_Putc('A');
  9123  01096E  0E41               	movlw	65
  9124  010970  EC7E  F0B2         	call	_I2C_LCD_Putc
  9125                           
  9126                           ;tasks.h: 250: break;
  9127  010974  0012               	return	
  9128  010976                     l10812:
  9129                           
  9130                           ;tasks.h: 252: display_port();
  9131  010976  EC6A  F09F         	call	_display_port	;wreg free
  9132                           
  9133                           ;tasks.h: 253: I2C_LCD_SetCursor(0, 1);
  9134  01097A  0E01               	movlw	1
  9135  01097C  0100               	movlb	0	; () banked
  9136  01097E  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9137  010980  0E00               	movlw	0
  9138  010982  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9139                           
  9140                           ;tasks.h: 254: uint8_t str[10];
  9141                           ;tasks.h: 255: my_utoa(str, port[print_port].integrated_current, 5);
  9142  010986  0E00               	movlw	low display_LCD@str
  9143  010988  0100               	movlb	0	; () banked
  9144  01098A  6FD8               	movwf	my_utoa@str& (0+255),b
  9145  01098C  0E01               	movlw	high display_LCD@str
  9146  01098E  0100               	movlb	0	; () banked
  9147  010990  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  9148  010992  0100               	movlb	0	; () banked
  9149  010994  519B               	movf	_print_port& (0+255),w,b
  9150  010996  0D17               	mullw	23
  9151  010998  0E08               	movlw	8
  9152  01099A  26F3               	addwf	prodl,f,c
  9153  01099C  0E00               	movlw	0
  9154  01099E  22F4               	addwfc	prodh,f,c
  9155  0109A0  0E00               	movlw	low _port
  9156  0109A2  24F3               	addwf	prodl,w,c
  9157  0109A4  6ED9               	movwf	fsr2l,c
  9158  0109A6  0E03               	movlw	high _port
  9159  0109A8  20F4               	addwfc	prodh,w,c
  9160  0109AA  6EDA               	movwf	fsr2h,c
  9161  0109AC  CFDE F0DA          	movff	postinc2,my_utoa@value
  9162  0109B0  CFDD F0DB          	movff	postdec2,my_utoa@value+1
  9163  0109B4  0E05               	movlw	5
  9164  0109B6  0100               	movlb	0	; () banked
  9165  0109B8  6FDC               	movwf	my_utoa@digits& (0+255),b
  9166  0109BA  EC2B  F0AD         	call	_my_utoa	;wreg free
  9167                           
  9168                           ;tasks.h: 256: I2C_LCD_Puts(str);
  9169  0109BE  0E00               	movlw	low display_LCD@str
  9170  0109C0  0100               	movlb	0	; () banked
  9171  0109C2  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9172  0109C4  0E01               	movlw	high display_LCD@str
  9173  0109C6  0100               	movlb	0	; () banked
  9174  0109C8  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9175  0109CA  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9176                           
  9177                           ;tasks.h: 257: I2C_LCD_Puts("mAh");
  9178  0109CE  0ED3               	movlw	low STR_11
  9179  0109D0  0100               	movlb	0	; () banked
  9180  0109D2  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9181  0109D4  0EFF               	movlw	high STR_11
  9182  0109D6  0100               	movlb	0	; () banked
  9183  0109D8  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9184  0109DA  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9185                           
  9186                           ;tasks.h: 258: break;
  9187  0109DE  0012               	return	
  9188  0109E0                     l10822:
  9189                           
  9190                           ;tasks.h: 260: display_port();
  9191  0109E0  EC6A  F09F         	call	_display_port	;wreg free
  9192                           
  9193                           ;tasks.h: 261: uint8_t str[10];
  9194                           ;tasks.h: 262: I2C_LCD_SetCursor(0, 1);
  9195  0109E4  0E01               	movlw	1
  9196  0109E6  0100               	movlb	0	; () banked
  9197  0109E8  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9198  0109EA  0E00               	movlw	0
  9199  0109EC  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9200                           
  9201                           ;tasks.h: 263: my_utoa(str, port[print_port].integrated_time / 3600 / 24, 2);
  9202  0109F0  0E10               	movlw	16
  9203  0109F2  0100               	movlb	0	; () banked
  9204  0109F4  6FB9               	movwf	___lldiv@divisor& (0+255),b
  9205  0109F6  0E0E               	movlw	14
  9206  0109F8  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  9207  0109FA  0E00               	movlw	0
  9208  0109FC  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  9209  0109FE  0E00               	movlw	0
  9210  010A00  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  9211  010A02  0100               	movlb	0	; () banked
  9212  010A04  519B               	movf	_print_port& (0+255),w,b
  9213  010A06  0D17               	mullw	23
  9214  010A08  0E10               	movlw	16
  9215  010A0A  26F3               	addwf	prodl,f,c
  9216  010A0C  0E00               	movlw	0
  9217  010A0E  22F4               	addwfc	prodh,f,c
  9218  010A10  0E00               	movlw	low _port
  9219  010A12  24F3               	addwf	prodl,w,c
  9220  010A14  6ED9               	movwf	fsr2l,c
  9221  010A16  0E03               	movlw	high _port
  9222  010A18  20F4               	addwfc	prodh,w,c
  9223  010A1A  6EDA               	movwf	fsr2h,c
  9224  010A1C  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  9225  010A20  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  9226  010A24  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  9227  010A28  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  9228  010A2C  EC6B  F0A7         	call	___lldiv	;wreg free
  9229  010A30  C0B5  F10A         	movff	?___lldiv,_display_LCD$5266
  9230  010A34  C0B6  F10B         	movff	?___lldiv+1,_display_LCD$5266+1
  9231  010A38  C0B7  F10C         	movff	?___lldiv+2,_display_LCD$5266+2
  9232  010A3C  C0B8  F10D         	movff	?___lldiv+3,_display_LCD$5266+3
  9233                           
  9234                           ;tasks.h: 263: my_utoa(str, port[print_port].integrated_time / 3600 / 24, 2);
  9235  010A40  0E00               	movlw	low display_LCD@str
  9236  010A42  0100               	movlb	0	; () banked
  9237  010A44  6FD8               	movwf	my_utoa@str& (0+255),b
  9238  010A46  0E01               	movlw	high display_LCD@str
  9239  010A48  0100               	movlb	0	; () banked
  9240  010A4A  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  9241  010A4C  C10A  F0B5         	movff	_display_LCD$5266,___lldiv@dividend
  9242  010A50  C10B  F0B6         	movff	_display_LCD$5266+1,___lldiv@dividend+1
  9243  010A54  C10C  F0B7         	movff	_display_LCD$5266+2,___lldiv@dividend+2
  9244  010A58  C10D  F0B8         	movff	_display_LCD$5266+3,___lldiv@dividend+3
  9245  010A5C  0E18               	movlw	24
  9246  010A5E  0100               	movlb	0	; () banked
  9247  010A60  6FB9               	movwf	___lldiv@divisor& (0+255),b
  9248  010A62  0E00               	movlw	0
  9249  010A64  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  9250  010A66  0E00               	movlw	0
  9251  010A68  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  9252  010A6A  0E00               	movlw	0
  9253  010A6C  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  9254  010A6E  EC6B  F0A7         	call	___lldiv	;wreg free
  9255  010A72  C0B5  F0DA         	movff	?___lldiv,my_utoa@value
  9256  010A76  C0B6  F0DB         	movff	?___lldiv+1,my_utoa@value+1
  9257  010A7A  0E02               	movlw	2
  9258  010A7C  0100               	movlb	0	; () banked
  9259  010A7E  6FDC               	movwf	my_utoa@digits& (0+255),b
  9260  010A80  EC2B  F0AD         	call	_my_utoa	;wreg free
  9261                           
  9262                           ;tasks.h: 264: I2C_LCD_Puts(str);
  9263  010A84  0E00               	movlw	low display_LCD@str
  9264  010A86  0100               	movlb	0	; () banked
  9265  010A88  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9266  010A8A  0E01               	movlw	high display_LCD@str
  9267  010A8C  0100               	movlb	0	; () banked
  9268  010A8E  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9269  010A90  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9270                           
  9271                           ;tasks.h: 265: I2C_LCD_Puts("d ");
  9272  010A94  0EE0               	movlw	low STR_12
  9273  010A96  0100               	movlb	0	; () banked
  9274  010A98  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9275  010A9A  0EFF               	movlw	high STR_12
  9276  010A9C  0100               	movlb	0	; () banked
  9277  010A9E  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9278  010AA0  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9279                           
  9280                           ;tasks.h: 266: my_utoa(str, (port[print_port].integrated_time / 3600) % 24, 2);
  9281  010AA4  0E00               	movlw	low display_LCD@str
  9282  010AA6  0100               	movlb	0	; () banked
  9283  010AA8  6FD8               	movwf	my_utoa@str& (0+255),b
  9284  010AAA  0E01               	movlw	high display_LCD@str
  9285  010AAC  0100               	movlb	0	; () banked
  9286  010AAE  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  9287  010AB0  0E10               	movlw	16
  9288  010AB2  0100               	movlb	0	; () banked
  9289  010AB4  6FB9               	movwf	___lldiv@divisor& (0+255),b
  9290  010AB6  0E0E               	movlw	14
  9291  010AB8  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  9292  010ABA  0E00               	movlw	0
  9293  010ABC  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  9294  010ABE  0E00               	movlw	0
  9295  010AC0  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  9296  010AC2  0100               	movlb	0	; () banked
  9297  010AC4  519B               	movf	_print_port& (0+255),w,b
  9298  010AC6  0D17               	mullw	23
  9299  010AC8  0E10               	movlw	16
  9300  010ACA  26F3               	addwf	prodl,f,c
  9301  010ACC  0E00               	movlw	0
  9302  010ACE  22F4               	addwfc	prodh,f,c
  9303  010AD0  0E00               	movlw	low _port
  9304  010AD2  24F3               	addwf	prodl,w,c
  9305  010AD4  6ED9               	movwf	fsr2l,c
  9306  010AD6  0E03               	movlw	high _port
  9307  010AD8  20F4               	addwfc	prodh,w,c
  9308  010ADA  6EDA               	movwf	fsr2h,c
  9309  010ADC  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  9310  010AE0  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  9311  010AE4  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  9312  010AE8  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  9313  010AEC  EC6B  F0A7         	call	___lldiv	;wreg free
  9314  010AF0  C0B5  F0C2         	movff	?___lldiv,___llmod@dividend
  9315  010AF4  C0B6  F0C3         	movff	?___lldiv+1,___llmod@dividend+1
  9316  010AF8  C0B7  F0C4         	movff	?___lldiv+2,___llmod@dividend+2
  9317  010AFC  C0B8  F0C5         	movff	?___lldiv+3,___llmod@dividend+3
  9318  010B00  0E18               	movlw	24
  9319  010B02  0100               	movlb	0	; () banked
  9320  010B04  6FC6               	movwf	___llmod@divisor& (0+255),b
  9321  010B06  0E00               	movlw	0
  9322  010B08  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  9323  010B0A  0E00               	movlw	0
  9324  010B0C  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  9325  010B0E  0E00               	movlw	0
  9326  010B10  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  9327  010B12  EC27  F0AB         	call	___llmod	;wreg free
  9328  010B16  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  9329  010B1A  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  9330  010B1E  0E02               	movlw	2
  9331  010B20  0100               	movlb	0	; () banked
  9332  010B22  6FDC               	movwf	my_utoa@digits& (0+255),b
  9333  010B24  EC2B  F0AD         	call	_my_utoa	;wreg free
  9334                           
  9335                           ;tasks.h: 267: I2C_LCD_Puts(str);
  9336  010B28  0E00               	movlw	low display_LCD@str
  9337  010B2A  0100               	movlb	0	; () banked
  9338  010B2C  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9339  010B2E  0E01               	movlw	high display_LCD@str
  9340  010B30  0100               	movlb	0	; () banked
  9341  010B32  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9342  010B34  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9343                           
  9344                           ;tasks.h: 268: I2C_LCD_Puts("h ");
  9345  010B38  0EE3               	movlw	low STR_13
  9346  010B3A  0100               	movlb	0	; () banked
  9347  010B3C  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9348  010B3E  0EFF               	movlw	high STR_13
  9349  010B40  0100               	movlb	0	; () banked
  9350  010B42  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9351  010B44  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9352                           
  9353                           ;tasks.h: 269: my_utoa(str, (port[print_port].integrated_time / 60) % 60, 2);
  9354  010B48  0E00               	movlw	low display_LCD@str
  9355  010B4A  0100               	movlb	0	; () banked
  9356  010B4C  6FD8               	movwf	my_utoa@str& (0+255),b
  9357  010B4E  0E01               	movlw	high display_LCD@str
  9358  010B50  0100               	movlb	0	; () banked
  9359  010B52  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  9360  010B54  0E3C               	movlw	60
  9361  010B56  0100               	movlb	0	; () banked
  9362  010B58  6FB9               	movwf	___lldiv@divisor& (0+255),b
  9363  010B5A  0E00               	movlw	0
  9364  010B5C  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
  9365  010B5E  0E00               	movlw	0
  9366  010B60  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
  9367  010B62  0E00               	movlw	0
  9368  010B64  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
  9369  010B66  0100               	movlb	0	; () banked
  9370  010B68  519B               	movf	_print_port& (0+255),w,b
  9371  010B6A  0D17               	mullw	23
  9372  010B6C  0E10               	movlw	16
  9373  010B6E  26F3               	addwf	prodl,f,c
  9374  010B70  0E00               	movlw	0
  9375  010B72  22F4               	addwfc	prodh,f,c
  9376  010B74  0E00               	movlw	low _port
  9377  010B76  24F3               	addwf	prodl,w,c
  9378  010B78  6ED9               	movwf	fsr2l,c
  9379  010B7A  0E03               	movlw	high _port
  9380  010B7C  20F4               	addwfc	prodh,w,c
  9381  010B7E  6EDA               	movwf	fsr2h,c
  9382  010B80  CFDE F0B5          	movff	postinc2,___lldiv@dividend
  9383  010B84  CFDE F0B6          	movff	postinc2,___lldiv@dividend+1
  9384  010B88  CFDE F0B7          	movff	postinc2,___lldiv@dividend+2
  9385  010B8C  CFDE F0B8          	movff	postinc2,___lldiv@dividend+3
  9386  010B90  EC6B  F0A7         	call	___lldiv	;wreg free
  9387  010B94  C0B5  F0C2         	movff	?___lldiv,___llmod@dividend
  9388  010B98  C0B6  F0C3         	movff	?___lldiv+1,___llmod@dividend+1
  9389  010B9C  C0B7  F0C4         	movff	?___lldiv+2,___llmod@dividend+2
  9390  010BA0  C0B8  F0C5         	movff	?___lldiv+3,___llmod@dividend+3
  9391  010BA4  0E3C               	movlw	60
  9392  010BA6  0100               	movlb	0	; () banked
  9393  010BA8  6FC6               	movwf	___llmod@divisor& (0+255),b
  9394  010BAA  0E00               	movlw	0
  9395  010BAC  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  9396  010BAE  0E00               	movlw	0
  9397  010BB0  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  9398  010BB2  0E00               	movlw	0
  9399  010BB4  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  9400  010BB6  EC27  F0AB         	call	___llmod	;wreg free
  9401  010BBA  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  9402  010BBE  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  9403  010BC2  0E02               	movlw	2
  9404  010BC4  0100               	movlb	0	; () banked
  9405  010BC6  6FDC               	movwf	my_utoa@digits& (0+255),b
  9406  010BC8  EC2B  F0AD         	call	_my_utoa	;wreg free
  9407                           
  9408                           ;tasks.h: 270: I2C_LCD_Puts(str);
  9409  010BCC  0E00               	movlw	low display_LCD@str
  9410  010BCE  0100               	movlb	0	; () banked
  9411  010BD0  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9412  010BD2  0E01               	movlw	high display_LCD@str
  9413  010BD4  0100               	movlb	0	; () banked
  9414  010BD6  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9415  010BD8  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9416                           
  9417                           ;tasks.h: 271: I2C_LCD_Puts("m ");
  9418  010BDC  0EE6               	movlw	low STR_14
  9419  010BDE  0100               	movlb	0	; () banked
  9420  010BE0  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9421  010BE2  0EFF               	movlw	high STR_14
  9422  010BE4  0100               	movlb	0	; () banked
  9423  010BE6  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9424  010BE8  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9425                           
  9426                           ;tasks.h: 272: my_utoa(str, port[print_port].integrated_time % 60, 2);
  9427  010BEC  0E00               	movlw	low display_LCD@str
  9428  010BEE  0100               	movlb	0	; () banked
  9429  010BF0  6FD8               	movwf	my_utoa@str& (0+255),b
  9430  010BF2  0E01               	movlw	high display_LCD@str
  9431  010BF4  0100               	movlb	0	; () banked
  9432  010BF6  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
  9433  010BF8  0100               	movlb	0	; () banked
  9434  010BFA  519B               	movf	_print_port& (0+255),w,b
  9435  010BFC  0D17               	mullw	23
  9436  010BFE  0E10               	movlw	16
  9437  010C00  26F3               	addwf	prodl,f,c
  9438  010C02  0E00               	movlw	0
  9439  010C04  22F4               	addwfc	prodh,f,c
  9440  010C06  0E00               	movlw	low _port
  9441  010C08  24F3               	addwf	prodl,w,c
  9442  010C0A  6ED9               	movwf	fsr2l,c
  9443  010C0C  0E03               	movlw	high _port
  9444  010C0E  20F4               	addwfc	prodh,w,c
  9445  010C10  6EDA               	movwf	fsr2h,c
  9446  010C12  CFDE F0C2          	movff	postinc2,___llmod@dividend
  9447  010C16  CFDE F0C3          	movff	postinc2,___llmod@dividend+1
  9448  010C1A  CFDE F0C4          	movff	postinc2,___llmod@dividend+2
  9449  010C1E  CFDE F0C5          	movff	postinc2,___llmod@dividend+3
  9450  010C22  0E3C               	movlw	60
  9451  010C24  0100               	movlb	0	; () banked
  9452  010C26  6FC6               	movwf	___llmod@divisor& (0+255),b
  9453  010C28  0E00               	movlw	0
  9454  010C2A  6FC7               	movwf	(___llmod@divisor+1)& (0+255),b
  9455  010C2C  0E00               	movlw	0
  9456  010C2E  6FC8               	movwf	(___llmod@divisor+2)& (0+255),b
  9457  010C30  0E00               	movlw	0
  9458  010C32  6FC9               	movwf	(___llmod@divisor+3)& (0+255),b
  9459  010C34  EC27  F0AB         	call	___llmod	;wreg free
  9460  010C38  C0C2  F0DA         	movff	?___llmod,my_utoa@value
  9461  010C3C  C0C3  F0DB         	movff	?___llmod+1,my_utoa@value+1
  9462  010C40  0E02               	movlw	2
  9463  010C42  0100               	movlb	0	; () banked
  9464  010C44  6FDC               	movwf	my_utoa@digits& (0+255),b
  9465  010C46  EC2B  F0AD         	call	_my_utoa	;wreg free
  9466                           
  9467                           ;tasks.h: 273: I2C_LCD_Puts(str);
  9468  010C4A  0E00               	movlw	low display_LCD@str
  9469  010C4C  0100               	movlb	0	; () banked
  9470  010C4E  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9471  010C50  0E01               	movlw	high display_LCD@str
  9472  010C52  0100               	movlb	0	; () banked
  9473  010C54  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9474  010C56  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9475                           
  9476                           ;tasks.h: 274: I2C_LCD_Puts("s");
  9477  010C5A  0E81               	movlw	low (STR_45+7)
  9478  010C5C  0100               	movlb	0	; () banked
  9479  010C5E  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9480  010C60  0EFF               	movlw	high (STR_45+7)
  9481  010C62  0100               	movlb	0	; () banked
  9482  010C64  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9483  010C66  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9484                           
  9485                           ;tasks.h: 275: break;
  9486  010C6A  0012               	return	
  9487  010C6C                     l10852:
  9488                           
  9489                           ;tasks.h: 277: display_port();
  9490  010C6C  EC6A  F09F         	call	_display_port	;wreg free
  9491                           
  9492                           ;tasks.h: 278: I2C_LCD_SetCursor(0, 1);
  9493  010C70  0E01               	movlw	1
  9494  010C72  0100               	movlb	0	; () banked
  9495  010C74  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9496  010C76  0E00               	movlw	0
  9497  010C78  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9498                           
  9499                           ;tasks.h: 279: I2C_LCD_Puts("Integrat Reset?");
  9500  010C7C  0E7E               	movlw	low STR_16
  9501  010C7E  0100               	movlb	0	; () banked
  9502  010C80  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9503  010C82  0EFE               	movlw	high STR_16
  9504  010C84  0100               	movlb	0	; () banked
  9505  010C86  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9506  010C88  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9507                           
  9508                           ;tasks.h: 280: break;
  9509  010C8C  0012               	return	
  9510  010C8E                     l10858:
  9511                           
  9512                           ;tasks.h: 282: display_port();
  9513  010C8E  EC6A  F09F         	call	_display_port	;wreg free
  9514                           
  9515                           ;tasks.h: 283: I2C_LCD_SetCursor(0, 1);
  9516  010C92  0E01               	movlw	1
  9517  010C94  0100               	movlb	0	; () banked
  9518  010C96  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9519  010C98  0E00               	movlw	0
  9520  010C9A  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9521                           
  9522                           ;tasks.h: 284: I2C_LCD_Puts("Integrat Reseted");
  9523  010C9E  0E6D               	movlw	low STR_17
  9524  010CA0  0100               	movlb	0	; () banked
  9525  010CA2  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9526  010CA4  0EFE               	movlw	high STR_17
  9527  010CA6  0100               	movlb	0	; () banked
  9528  010CA8  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9529  010CAA  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9530                           
  9531                           ;tasks.h: 285: break;
  9532  010CAE  0012               	return	
  9533  010CB0                     l10864:
  9534                           
  9535                           ;tasks.h: 287: display_port();
  9536  010CB0  EC6A  F09F         	call	_display_port	;wreg free
  9537                           
  9538                           ;tasks.h: 288: I2C_LCD_SetCursor(0, 1);
  9539  010CB4  0E01               	movlw	1
  9540  010CB6  0100               	movlb	0	; () banked
  9541  010CB8  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9542  010CBA  0E00               	movlw	0
  9543  010CBC  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9544                           
  9545                           ;tasks.h: 289: I2C_LCD_Puts("Toggle AutoStop?");
  9546  010CC0  0E5C               	movlw	low STR_18
  9547  010CC2  0100               	movlb	0	; () banked
  9548  010CC4  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9549  010CC6  0EFE               	movlw	high STR_18
  9550  010CC8  0100               	movlb	0	; () banked
  9551  010CCA  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9552  010CCC  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9553                           
  9554                           ;tasks.h: 290: break;
  9555  010CD0  0012               	return	
  9556  010CD2                     l10870:
  9557                           
  9558                           ;tasks.h: 292: display_port();
  9559  010CD2  EC6A  F09F         	call	_display_port	;wreg free
  9560                           
  9561                           ;tasks.h: 293: I2C_LCD_SetCursor(0, 1);
  9562  010CD6  0E01               	movlw	1
  9563  010CD8  0100               	movlb	0	; () banked
  9564  010CDA  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9565  010CDC  0E00               	movlw	0
  9566  010CDE  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9567                           
  9568                           ;tasks.h: 294: I2C_LCD_Puts("Always Charging");
  9569  010CE2  0E9E               	movlw	low STR_19
  9570  010CE4  0100               	movlb	0	; () banked
  9571  010CE6  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9572  010CE8  0EFE               	movlw	high STR_19
  9573  010CEA  0100               	movlb	0	; () banked
  9574  010CEC  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9575  010CEE  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9576                           
  9577                           ;tasks.h: 295: break;
  9578  010CF2  0012               	return	
  9579  010CF4                     l10876:
  9580                           
  9581                           ;tasks.h: 297: display_port();
  9582  010CF4  EC6A  F09F         	call	_display_port	;wreg free
  9583                           
  9584                           ;tasks.h: 298: I2C_LCD_SetCursor(0, 1);
  9585  010CF8  0E01               	movlw	1
  9586  010CFA  0100               	movlb	0	; () banked
  9587  010CFC  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9588  010CFE  0E00               	movlw	0
  9589  010D00  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9590                           
  9591                           ;tasks.h: 299: I2C_LCD_Puts("Auto Stop ON");
  9592  010D04  0ED8               	movlw	low STR_20
  9593  010D06  0100               	movlb	0	; () banked
  9594  010D08  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9595  010D0A  0EFE               	movlw	high STR_20
  9596  010D0C  0100               	movlb	0	; () banked
  9597  010D0E  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9598  010D10  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9599                           
  9600                           ;tasks.h: 300: break;
  9601  010D14  0012               	return	
  9602  010D16                     l10882:
  9603                           
  9604                           ;tasks.h: 302: display_port();
  9605  010D16  EC6A  F09F         	call	_display_port	;wreg free
  9606                           
  9607                           ;tasks.h: 303: I2C_LCD_SetCursor(0, 1);
  9608  010D1A  0E01               	movlw	1
  9609  010D1C  0100               	movlb	0	; () banked
  9610  010D1E  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9611  010D20  0E00               	movlw	0
  9612  010D22  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9613                           
  9614                           ;tasks.h: 304: I2C_LCD_Puts("Toggle LED?");
  9615  010D26  0EE5               	movlw	low STR_21
  9616  010D28  0100               	movlb	0	; () banked
  9617  010D2A  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9618  010D2C  0EFE               	movlw	high STR_21
  9619  010D2E  0100               	movlb	0	; () banked
  9620  010D30  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9621  010D32  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9622                           
  9623                           ;tasks.h: 305: break;
  9624  010D36  0012               	return	
  9625  010D38                     l10888:
  9626                           
  9627                           ;tasks.h: 307: display_port();
  9628  010D38  EC6A  F09F         	call	_display_port	;wreg free
  9629                           
  9630                           ;tasks.h: 308: I2C_LCD_SetCursor(0, 1);
  9631  010D3C  0E01               	movlw	1
  9632  010D3E  0100               	movlb	0	; () banked
  9633  010D40  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9634  010D42  0E00               	movlw	0
  9635  010D44  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9636                           
  9637                           ;tasks.h: 309: I2C_LCD_Puts("LED ON");
  9638  010D48  0E9B               	movlw	low STR_22
  9639  010D4A  0100               	movlb	0	; () banked
  9640  010D4C  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9641  010D4E  0EFF               	movlw	high STR_22
  9642  010D50  0100               	movlb	0	; () banked
  9643  010D52  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9644  010D54  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9645                           
  9646                           ;tasks.h: 310: break;
  9647  010D58  0012               	return	
  9648  010D5A                     l10894:
  9649                           
  9650                           ;tasks.h: 312: display_port();
  9651  010D5A  EC6A  F09F         	call	_display_port	;wreg free
  9652                           
  9653                           ;tasks.h: 313: I2C_LCD_SetCursor(0, 1);
  9654  010D5E  0E01               	movlw	1
  9655  010D60  0100               	movlb	0	; () banked
  9656  010D62  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9657  010D64  0E00               	movlw	0
  9658  010D66  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9659                           
  9660                           ;tasks.h: 314: I2C_LCD_Puts("LED OFF");
  9661  010D6A  0E8B               	movlw	low STR_23
  9662  010D6C  0100               	movlb	0	; () banked
  9663  010D6E  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9664  010D70  0EFF               	movlw	high STR_23
  9665  010D72  0100               	movlb	0	; () banked
  9666  010D74  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9667  010D76  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9668                           
  9669                           ;tasks.h: 315: break;
  9670  010D7A  0012               	return	
  9671  010D7C                     l10900:
  9672                           
  9673                           ;tasks.h: 317: display_port();
  9674  010D7C  EC6A  F09F         	call	_display_port	;wreg free
  9675                           
  9676                           ;tasks.h: 318: I2C_LCD_SetCursor(0, 1);
  9677  010D80  0E01               	movlw	1
  9678  010D82  0100               	movlb	0	; () banked
  9679  010D84  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9680  010D86  0E00               	movlw	0
  9681  010D88  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9682                           
  9683                           ;tasks.h: 319: I2C_LCD_Puts("Nothing done.");
  9684  010D8C  0EBD               	movlw	low STR_24
  9685  010D8E  0100               	movlb	0	; () banked
  9686  010D90  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9687  010D92  0EFE               	movlw	high STR_24
  9688  010D94  0100               	movlb	0	; () banked
  9689  010D96  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9690  010D98  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9691                           
  9692                           ;tasks.h: 321: }
  9693                           
  9694                           ;tasks.h: 320: break;
  9695  010D9C  0012               	return	
  9696  010D9E                     l10908:
  9697  010D9E  0100               	movlb	0	; () banked
  9698  010DA0  519A               	movf	_print_content& (0+255),w,b
  9699                           
  9700                           ; Switch size 1, requested type "space"
  9701                           ; Number of cases is 15, Range of values is 0 to 14
  9702                           ; switch strategies available:
  9703                           ; Name         Instructions Cycles
  9704                           ; simple_byte           46    24 (average)
  9705                           ;	Chosen strategy is simple_byte
  9706  010DA2  0A00               	xorlw	0	; case 0
  9707  010DA4  B4D8               	btfsc	status,2,c
  9708  010DA6  D506               	goto	l10782
  9709  010DA8  0A01               	xorlw	1	; case 1
  9710  010DAA  B4D8               	btfsc	status,2,c
  9711  010DAC  D520               	goto	l10788
  9712  010DAE  0A03               	xorlw	3	; case 2
  9713  010DB0  B4D8               	btfsc	status,2,c
  9714  010DB2  D52C               	goto	l10790
  9715  010DB4  0A01               	xorlw	1	; case 3
  9716  010DB6  B4D8               	btfsc	status,2,c
  9717  010DB8  D53A               	goto	l10796
  9718  010DBA  0A07               	xorlw	7	; case 4
  9719  010DBC  B4D8               	btfsc	status,2,c
  9720  010DBE  D5DB               	goto	l10812
  9721  010DC0  0A01               	xorlw	1	; case 5
  9722  010DC2  B4D8               	btfsc	status,2,c
  9723  010DC4  D60D               	goto	l10822
  9724  010DC6  0A03               	xorlw	3	; case 6
  9725  010DC8  B4D8               	btfsc	status,2,c
  9726  010DCA  D750               	goto	l10852
  9727  010DCC  0A01               	xorlw	1	; case 7
  9728  010DCE  B4D8               	btfsc	status,2,c
  9729  010DD0  D75E               	goto	l10858
  9730  010DD2  0A0F               	xorlw	15	; case 8
  9731  010DD4  B4D8               	btfsc	status,2,c
  9732  010DD6  D76C               	goto	l10864
  9733  010DD8  0A01               	xorlw	1	; case 9
  9734  010DDA  B4D8               	btfsc	status,2,c
  9735  010DDC  D77A               	goto	l10870
  9736  010DDE  0A03               	xorlw	3	; case 10
  9737  010DE0  B4D8               	btfsc	status,2,c
  9738  010DE2  D788               	goto	l10876
  9739  010DE4  0A01               	xorlw	1	; case 11
  9740  010DE6  B4D8               	btfsc	status,2,c
  9741  010DE8  D796               	goto	l10882
  9742  010DEA  0A07               	xorlw	7	; case 12
  9743  010DEC  B4D8               	btfsc	status,2,c
  9744  010DEE  D7A4               	goto	l10888
  9745  010DF0  0A01               	xorlw	1	; case 13
  9746  010DF2  B4D8               	btfsc	status,2,c
  9747  010DF4  D7B2               	goto	l10894
  9748  010DF6  0A03               	xorlw	3	; case 14
  9749  010DF8  A4D8               	btfss	status,2,c
  9750  010DFA  0012               	return	
  9751  010DFC  D7BF               	goto	l10900
  9752  010DFE                     __end_of_display_LCD:
  9753                           	opt stack 0
  9754                           tblptru	equ	0xFF8
  9755                           tblptrh	equ	0xFF7
  9756                           tblptrl	equ	0xFF6
  9757                           tablat	equ	0xFF5
  9758                           prodh	equ	0xFF4
  9759                           prodl	equ	0xFF3
  9760                           intcon	equ	0xFF2
  9761                           postinc0	equ	0xFEE
  9762                           wreg	equ	0xFE8
  9763                           indf1	equ	0xFE7
  9764                           postinc1	equ	0xFE6
  9765                           postdec1	equ	0xFE5
  9766                           fsr1h	equ	0xFE2
  9767                           fsr1l	equ	0xFE1
  9768                           indf2	equ	0xFDF
  9769                           postinc2	equ	0xFDE
  9770                           postdec2	equ	0xFDD
  9771                           fsr2h	equ	0xFDA
  9772                           fsr2l	equ	0xFD9
  9773                           status	equ	0xFD8
  9774                           
  9775 ;; *************** function _display_time_1602 *****************
  9776 ;; Defined at:
  9777 ;;		line 278 in file "../My_header\My_RTCC.h"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  ct              2   55[BANK0 ] PTR struct .
  9780 ;;		 -> caltime_now(7), 
  9781 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  9782 ;;		 -> epoch_now(4), 
  9783 ;; Auto vars:     Size  Location     Type
  9784 ;;		None
  9785 ;; Return value:  Size  Location     Type
  9786 ;;		None               void
  9787 ;; Registers used:
  9788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9796 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9797 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9798 ;;Total ram usage:        5 bytes
  9799 ;; Hardware stack levels used:    1
  9800 ;; Hardware stack levels required when called:   15
  9801 ;; This function calls:
  9802 ;;		_I2C_LCD_Putc
  9803 ;;		_I2C_LCD_Puts
  9804 ;;		_I2C_LCD_SetCursor
  9805 ;;		_RTCC_from_RTCC
  9806 ;;		_display_dec
  9807 ;; This function is called by:
  9808 ;;		_display_LCD
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text22
  9813  0130FA                     __ptext22:
  9814                           	opt stack 0
  9815  0130FA                     _display_time_1602:
  9816                           	opt stack 13
  9817                           
  9818                           ;My_header\My_RTCC.h: 279: RTCC_from_RTCC(ct, ep);
  9819                           
  9820                           ;incstack = 0
  9821  0130FA  C0EC  F0DD         	movff	display_time_1602@ct,RTCC_from_RTCC@ct
  9822  0130FE  C0ED  F0DE         	movff	display_time_1602@ct+1,RTCC_from_RTCC@ct+1
  9823  013102  C0EE  F0DF         	movff	display_time_1602@ep,RTCC_from_RTCC@ep
  9824  013106  C0EF  F0E0         	movff	display_time_1602@ep+1,RTCC_from_RTCC@ep+1
  9825  01310A  ECD0  F0B4         	call	_RTCC_from_RTCC	;wreg free
  9826                           
  9827                           ;My_header\My_RTCC.h: 281: I2C_LCD_SetCursor(0, 0);
  9828  01310E  0E00               	movlw	0
  9829  013110  0100               	movlb	0	; () banked
  9830  013112  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9831  013114  0E00               	movlw	0
  9832  013116  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9833                           
  9834                           ;My_header\My_RTCC.h: 282: display_dec(20, edit_flag.flag.YY);
  9835  01311A  0E00               	movlw	0
  9836  01311C  BB98               	btfsc	_edit_flag& (0+255),5,b
  9837  01311E  0E01               	movlw	1
  9838  013120  0100               	movlb	0	; () banked
  9839  013122  6FE0               	movwf	display_dec@edit& (0+255),b
  9840  013124  0E14               	movlw	20
  9841  013126  EC9C  F0B0         	call	_display_dec
  9842                           
  9843                           ;My_header\My_RTCC.h: 283: display_dec(ct->YY, edit_flag.flag.YY);
  9844  01312A  0E00               	movlw	0
  9845  01312C  BB98               	btfsc	_edit_flag& (0+255),5,b
  9846  01312E  0E01               	movlw	1
  9847  013130  0100               	movlb	0	; () banked
  9848  013132  6FE0               	movwf	display_dec@edit& (0+255),b
  9849  013134  0100               	movlb	0	; () banked
  9850  013136  EE20 F006          	lfsr	2,6
  9851  01313A  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9852  01313C  26D9               	addwf	fsr2l,f,c
  9853  01313E  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9854  013140  22DA               	addwfc	fsr2h,f,c
  9855  013142  50DF               	movf	indf2,w,c
  9856  013144  EC9C  F0B0         	call	_display_dec
  9857                           
  9858                           ;My_header\My_RTCC.h: 284: I2C_LCD_Putc('/');
  9859  013148  0E2F               	movlw	47
  9860  01314A  EC7E  F0B2         	call	_I2C_LCD_Putc
  9861                           
  9862                           ;My_header\My_RTCC.h: 285: display_dec(ct->MM, edit_flag.flag.MM);
  9863  01314E  0E00               	movlw	0
  9864  013150  B998               	btfsc	_edit_flag& (0+255),4,b
  9865  013152  0E01               	movlw	1
  9866  013154  0100               	movlb	0	; () banked
  9867  013156  6FE0               	movwf	display_dec@edit& (0+255),b
  9868  013158  0100               	movlb	0	; () banked
  9869  01315A  EE20 F005          	lfsr	2,5
  9870  01315E  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9871  013160  26D9               	addwf	fsr2l,f,c
  9872  013162  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9873  013164  22DA               	addwfc	fsr2h,f,c
  9874  013166  50DF               	movf	indf2,w,c
  9875  013168  EC9C  F0B0         	call	_display_dec
  9876                           
  9877                           ;My_header\My_RTCC.h: 286: I2C_LCD_Putc('/');
  9878  01316C  0E2F               	movlw	47
  9879  01316E  EC7E  F0B2         	call	_I2C_LCD_Putc
  9880                           
  9881                           ;My_header\My_RTCC.h: 287: display_dec(ct->DD, edit_flag.flag.DD);
  9882  013172  0E00               	movlw	0
  9883  013174  B798               	btfsc	_edit_flag& (0+255),3,b
  9884  013176  0E01               	movlw	1
  9885  013178  0100               	movlb	0	; () banked
  9886  01317A  6FE0               	movwf	display_dec@edit& (0+255),b
  9887  01317C  0100               	movlb	0	; () banked
  9888  01317E  EE20 F004          	lfsr	2,4
  9889  013182  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9890  013184  26D9               	addwf	fsr2l,f,c
  9891  013186  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9892  013188  22DA               	addwfc	fsr2h,f,c
  9893  01318A  50DF               	movf	indf2,w,c
  9894  01318C  EC9C  F0B0         	call	_display_dec
  9895                           
  9896                           ;My_header\My_RTCC.h: 288: I2C_LCD_Putc('(');
  9897  013190  0E28               	movlw	40
  9898  013192  EC7E  F0B2         	call	_I2C_LCD_Putc
  9899                           
  9900                           ;My_header\My_RTCC.h: 289: I2C_LCD_Puts(weekday_3char[ct->EE]);
  9901  013196  0100               	movlb	0	; () banked
  9902  013198  EE20 F003          	lfsr	2,3
  9903  01319C  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9904  01319E  26D9               	addwf	fsr2l,f,c
  9905  0131A0  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9906  0131A2  22DA               	addwfc	fsr2h,f,c
  9907  0131A4  50DF               	movf	indf2,w,c
  9908  0131A6  0100               	movlb	0	; () banked
  9909  0131A8  6FF0               	movwf	??_display_time_1602& (0+255),b
  9910  0131AA  0100               	movlb	0	; () banked
  9911  0131AC  51F0               	movf	??_display_time_1602& (0+255),w,b
  9912  0131AE  0D04               	mullw	4
  9913  0131B0  0ECE               	movlw	low _weekday_3char
  9914  0131B2  24F3               	addwf	prodl,w,c
  9915  0131B4  0100               	movlb	0	; () banked
  9916  0131B6  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
  9917  0131B8  0EFB               	movlw	high _weekday_3char
  9918  0131BA  20F4               	addwfc	prodh,w,c
  9919  0131BC  0100               	movlb	0	; () banked
  9920  0131BE  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9921  0131C0  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
  9922                           
  9923                           ;My_header\My_RTCC.h: 290: I2C_LCD_Putc(')');
  9924  0131C4  0E29               	movlw	41
  9925  0131C6  EC7E  F0B2         	call	_I2C_LCD_Putc
  9926                           
  9927                           ;My_header\My_RTCC.h: 291: I2C_LCD_SetCursor(8, 1);
  9928  0131CA  0E01               	movlw	1
  9929  0131CC  0100               	movlb	0	; () banked
  9930  0131CE  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9931  0131D0  0E08               	movlw	8
  9932  0131D2  ECB0  F0B3         	call	_I2C_LCD_SetCursor
  9933                           
  9934                           ;My_header\My_RTCC.h: 292: display_dec(ct->hh, edit_flag.flag.hh);
  9935  0131D6  0E00               	movlw	0
  9936  0131D8  B598               	btfsc	_edit_flag& (0+255),2,b
  9937  0131DA  0E01               	movlw	1
  9938  0131DC  0100               	movlb	0	; () banked
  9939  0131DE  6FE0               	movwf	display_dec@edit& (0+255),b
  9940  0131E0  0100               	movlb	0	; () banked
  9941  0131E2  EE20 F002          	lfsr	2,2
  9942  0131E6  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9943  0131E8  26D9               	addwf	fsr2l,f,c
  9944  0131EA  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9945  0131EC  22DA               	addwfc	fsr2h,f,c
  9946  0131EE  50DF               	movf	indf2,w,c
  9947  0131F0  EC9C  F0B0         	call	_display_dec
  9948                           
  9949                           ;My_header\My_RTCC.h: 293: if (colon) I2C_LCD_Putc(':');
  9950  0131F4  0100               	movlb	0	; () banked
  9951  0131F6  5195               	movf	_colon& (0+255),w,b
  9952  0131F8  B4D8               	btfsc	status,2,c
  9953  0131FA  D004               	goto	l10044
  9954                           
  9955                           ; BSR set to: 0
  9956  0131FC  0E3A               	movlw	58
  9957  0131FE  EC7E  F0B2         	call	_I2C_LCD_Putc
  9958  013202  D003               	goto	l10046
  9959  013204                     l10044:
  9960                           
  9961                           ;My_header\My_RTCC.h: 294: else I2C_LCD_Putc(' ');
  9962  013204  0E20               	movlw	32
  9963  013206  EC7E  F0B2         	call	_I2C_LCD_Putc
  9964  01320A                     l10046:
  9965                           
  9966                           ;My_header\My_RTCC.h: 295: display_dec(ct->mm, edit_flag.flag.mm);
  9967  01320A  0E00               	movlw	0
  9968  01320C  B398               	btfsc	_edit_flag& (0+255),1,b
  9969  01320E  0E01               	movlw	1
  9970  013210  0100               	movlb	0	; () banked
  9971  013212  6FE0               	movwf	display_dec@edit& (0+255),b
  9972  013214  0100               	movlb	0	; () banked
  9973  013216  EE20 F001          	lfsr	2,1
  9974  01321A  51EC               	movf	display_time_1602@ct& (0+255),w,b
  9975  01321C  26D9               	addwf	fsr2l,f,c
  9976  01321E  51ED               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9977  013220  22DA               	addwfc	fsr2h,f,c
  9978  013222  50DF               	movf	indf2,w,c
  9979  013224  EC9C  F0B0         	call	_display_dec
  9980                           
  9981                           ;My_header\My_RTCC.h: 296: I2C_LCD_Putc('-');
  9982  013228  0E2D               	movlw	45
  9983  01322A  EC7E  F0B2         	call	_I2C_LCD_Putc
  9984                           
  9985                           ;My_header\My_RTCC.h: 297: display_dec(ct->ss, edit_flag.flag.ss);
  9986  01322E  0E00               	movlw	0
  9987  013230  B198               	btfsc	_edit_flag& (0+255),0,b
  9988  013232  0E01               	movlw	1
  9989  013234  0100               	movlb	0	; () banked
  9990  013236  6FE0               	movwf	display_dec@edit& (0+255),b
  9991  013238  C0EC  FFD9         	movff	display_time_1602@ct,fsr2l
  9992  01323C  C0ED  FFDA         	movff	display_time_1602@ct+1,fsr2h
  9993  013240  50DF               	movf	indf2,w,c
  9994  013242  EC9C  F0B0         	call	_display_dec
  9995  013246  0012               	return		;funcret
  9996  013248                     __end_of_display_time_1602:
  9997                           	opt stack 0
  9998                           tblptru	equ	0xFF8
  9999                           tblptrh	equ	0xFF7
 10000                           tblptrl	equ	0xFF6
 10001                           tablat	equ	0xFF5
 10002                           prodh	equ	0xFF4
 10003                           prodl	equ	0xFF3
 10004                           intcon	equ	0xFF2
 10005                           postinc0	equ	0xFEE
 10006                           wreg	equ	0xFE8
 10007                           indf1	equ	0xFE7
 10008                           postinc1	equ	0xFE6
 10009                           postdec1	equ	0xFE5
 10010                           fsr1h	equ	0xFE2
 10011                           fsr1l	equ	0xFE1
 10012                           indf2	equ	0xFDF
 10013                           postinc2	equ	0xFDE
 10014                           postdec2	equ	0xFDD
 10015                           fsr2h	equ	0xFDA
 10016                           fsr2l	equ	0xFD9
 10017                           status	equ	0xFD8
 10018                           
 10019 ;; *************** function _display_dec *****************
 10020 ;; Defined at:
 10021 ;;		line 251 in file "../My_header\My_RTCC.h"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  dec             1    wreg     unsigned char 
 10024 ;;  edit            1   43[BANK0 ] unsigned char 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  dec             1   54[BANK0 ] unsigned char 
 10027 ;;  str            10   44[BANK0 ] unsigned char [10]
 10028 ;; Return value:  Size  Location     Type
 10029 ;;		None               void
 10030 ;; Registers used:
 10031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10037 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10038 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10040 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10041 ;;Total ram usage:       12 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:   14
 10044 ;; This function calls:
 10045 ;;		_I2C_LCD_Puts
 10046 ;;		_my_utoa
 10047 ;; This function is called by:
 10048 ;;		_display_time_1602
 10049 ;;		_display_time_0802
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           	psect	text23
 10054  016138                     __ptext23:
 10055                           	opt stack 0
 10056  016138                     _display_dec:
 10057                           	opt stack 13
 10058                           
 10059                           ;incstack = 0
 10060                           ;display_dec@dec stored from wreg
 10061  016138  0100               	movlb	0	; () banked
 10062  01613A  6FEB               	movwf	display_dec@dec& (0+255),b
 10063                           
 10064                           ;My_header\My_RTCC.h: 252: char str[10];
 10065                           ;My_header\My_RTCC.h: 253: my_utoa(str, dec, 2);
 10066  01613C  0EE1               	movlw	low display_dec@str
 10067  01613E  0100               	movlb	0	; () banked
 10068  016140  6FD8               	movwf	my_utoa@str& (0+255),b
 10069  016142  0E00               	movlw	high display_dec@str
 10070  016144  0100               	movlb	0	; () banked
 10071  016146  6FD9               	movwf	(my_utoa@str+1)& (0+255),b
 10072  016148  C0EB  F0DA         	movff	display_dec@dec,my_utoa@value
 10073  01614C  0100               	movlb	0	; () banked
 10074  01614E  6BDB               	clrf	(my_utoa@value+1)& (0+255),b
 10075  016150  0E02               	movlw	2
 10076  016152  0100               	movlb	0	; () banked
 10077  016154  6FDC               	movwf	my_utoa@digits& (0+255),b
 10078  016156  EC2B  F0AD         	call	_my_utoa	;wreg free
 10079                           
 10080                           ;My_header\My_RTCC.h: 254: if (edit && halfsec)I2C_LCD_Puts("  ");
 10081  01615A  0100               	movlb	0	; () banked
 10082  01615C  51E0               	movf	display_dec@edit& (0+255),w,b
 10083  01615E  0100               	movlb	0	; () banked
 10084  016160  B4D8               	btfsc	status,2,c
 10085  016162  D00D               	goto	l9874
 10086                           
 10087                           ; BSR set to: 0
 10088  016164  0100               	movlb	0	; () banked
 10089  016166  5199               	movf	_halfsec& (0+255),w,b
 10090  016168  B4D8               	btfsc	status,2,c
 10091  01616A  D009               	goto	l9874
 10092                           
 10093                           ; BSR set to: 0
 10094  01616C  0EDA               	movlw	low STR_1
 10095  01616E  0100               	movlb	0	; () banked
 10096  016170  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10097  016172  0EFF               	movlw	high STR_1
 10098  016174  0100               	movlb	0	; () banked
 10099  016176  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10100  016178  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
 10101  01617C  0012               	return	
 10102  01617E                     l9874:
 10103                           
 10104                           ;My_header\My_RTCC.h: 255: else I2C_LCD_Puts(str);
 10105  01617E  0EE1               	movlw	low display_dec@str
 10106  016180  0100               	movlb	0	; () banked
 10107  016182  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10108  016184  0E00               	movlw	high display_dec@str
 10109  016186  0100               	movlb	0	; () banked
 10110  016188  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10111  01618A  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
 10112  01618E  0012               	return	
 10113  016190                     __end_of_display_dec:
 10114                           	opt stack 0
 10115                           tblptru	equ	0xFF8
 10116                           tblptrh	equ	0xFF7
 10117                           tblptrl	equ	0xFF6
 10118                           tablat	equ	0xFF5
 10119                           prodh	equ	0xFF4
 10120                           prodl	equ	0xFF3
 10121                           intcon	equ	0xFF2
 10122                           postinc0	equ	0xFEE
 10123                           wreg	equ	0xFE8
 10124                           indf1	equ	0xFE7
 10125                           postinc1	equ	0xFE6
 10126                           postdec1	equ	0xFE5
 10127                           fsr1h	equ	0xFE2
 10128                           fsr1l	equ	0xFE1
 10129                           indf2	equ	0xFDF
 10130                           postinc2	equ	0xFDE
 10131                           postdec2	equ	0xFDD
 10132                           fsr2h	equ	0xFDA
 10133                           fsr2l	equ	0xFD9
 10134                           status	equ	0xFD8
 10135                           
 10136 ;; *************** function _my_utoa *****************
 10137 ;; Defined at:
 10138 ;;		line 11 in file "../My_header\My_stdlib.h"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;  str             2   35[BANK0 ] PTR unsigned char 
 10141 ;;		 -> comm_disp@str(10), tx_send_dec@str(10), display_LCD@str(10), display_dec@str(10), 
 10142 ;;  value           2   37[BANK0 ] unsigned int 
 10143 ;;  digits          1   39[BANK0 ] unsigned char 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  v               2   41[BANK0 ] unsigned int 
 10146 ;;  d               1   40[BANK0 ] unsigned char 
 10147 ;; Return value:  Size  Location     Type
 10148 ;;		None               void
 10149 ;; Registers used:
 10150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10156 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10157 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10159 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10160 ;;Total ram usage:        8 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; Hardware stack levels required when called:   12
 10163 ;; This function calls:
 10164 ;;		___lwdiv
 10165 ;;		___lwmod
 10166 ;; This function is called by:
 10167 ;;		_display_dec
 10168 ;;		_display_LCD
 10169 ;;		_tx_send_dec
 10170 ;;		_comm_disp
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           	psect	text24
 10175  015A56                     __ptext24:
 10176                           	opt stack 0
 10177  015A56                     _my_utoa:
 10178                           	opt stack 14
 10179                           
 10180                           ;My_header\My_stdlib.h: 12: uint16_t v;
 10181                           ;My_header\My_stdlib.h: 13: uint8_t d;
 10182                           ;My_header\My_stdlib.h: 14: while (digits--) {
 10183                           
 10184                           ;incstack = 0
 10185  015A56  D036               	goto	l9628
 10186  015A58                     l482:
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;My_header\My_stdlib.h: 15: v = value;
 10190  015A58  C0DA  F0DE         	movff	my_utoa@value,my_utoa@v
 10191  015A5C  C0DB  F0DF         	movff	my_utoa@value+1,my_utoa@v+1
 10192                           
 10193                           ;My_header\My_stdlib.h: 16: d = digits;
 10194  015A60  C0DC  F0DD         	movff	my_utoa@digits,my_utoa@d
 10195                           
 10196                           ;My_header\My_stdlib.h: 17: while (d--) {
 10197  015A64  D00F               	goto	l9620
 10198  015A66                     l9618:
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;My_header\My_stdlib.h: 18: v /= 10;
 10202  015A66  C0DE  F0D1         	movff	my_utoa@v,___lwdiv@dividend
 10203  015A6A  C0DF  F0D2         	movff	my_utoa@v+1,___lwdiv@dividend+1
 10204  015A6E  0E00               	movlw	0
 10205  015A70  0100               	movlb	0	; () banked
 10206  015A72  6FD4               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10207  015A74  0E0A               	movlw	10
 10208  015A76  6FD3               	movwf	___lwdiv@divisor& (0+255),b
 10209  015A78  ECF2  F0AD         	call	___lwdiv	;wreg free
 10210  015A7C  C0D1  F0DE         	movff	?___lwdiv,my_utoa@v
 10211  015A80  C0D2  F0DF         	movff	?___lwdiv+1,my_utoa@v+1
 10212  015A84                     l9620:
 10213  015A84  0100               	movlb	0	; () banked
 10214  015A86  07DD               	decf	my_utoa@d& (0+255),f,b
 10215  015A88  0100               	movlb	0	; () banked
 10216  015A8A  29DD               	incf	my_utoa@d& (0+255),w,b
 10217  015A8C  A4D8               	btfss	status,2,c
 10218  015A8E  D7EB               	goto	l9618
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;My_header\My_stdlib.h: 19: }
 10222                           ;My_header\My_stdlib.h: 20: v %= 10;
 10223                           
 10224                           ; BSR set to: 0
 10225  015A90  C0DE  F0B5         	movff	my_utoa@v,___lwmod@dividend
 10226  015A94  C0DF  F0B6         	movff	my_utoa@v+1,___lwmod@dividend+1
 10227  015A98  0E00               	movlw	0
 10228  015A9A  0100               	movlb	0	; () banked
 10229  015A9C  6FB8               	movwf	(___lwmod@divisor+1)& (0+255),b
 10230  015A9E  0E0A               	movlw	10
 10231  015AA0  6FB7               	movwf	___lwmod@divisor& (0+255),b
 10232  015AA2  ECB5  F0AF         	call	___lwmod	;wreg free
 10233  015AA6  C0B5  F0DE         	movff	?___lwmod,my_utoa@v
 10234  015AAA  C0B6  F0DF         	movff	?___lwmod+1,my_utoa@v+1
 10235                           
 10236                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
 10237  015AAE  0100               	movlb	0	; () banked
 10238  015AB0  51DE               	movf	my_utoa@v& (0+255),w,b
 10239  015AB2  0F30               	addlw	48
 10240  015AB4  C0D8  FFD9         	movff	my_utoa@str,fsr2l
 10241  015AB8  C0D9  FFDA         	movff	my_utoa@str+1,fsr2h
 10242  015ABC  6EDF               	movwf	indf2,c
 10243                           
 10244                           ; BSR set to: 0
 10245  015ABE  0100               	movlb	0	; () banked
 10246  015AC0  4BD8               	infsnz	my_utoa@str& (0+255),f,b
 10247  015AC2  2BD9               	incf	(my_utoa@str+1)& (0+255),f,b
 10248  015AC4                     l9628:
 10249  015AC4  0100               	movlb	0	; () banked
 10250  015AC6  07DC               	decf	my_utoa@digits& (0+255),f,b
 10251  015AC8  0100               	movlb	0	; () banked
 10252  015ACA  29DC               	incf	my_utoa@digits& (0+255),w,b
 10253  015ACC  A4D8               	btfss	status,2,c
 10254  015ACE  D7C4               	goto	l482
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;My_header\My_stdlib.h: 22: }
 10258                           ;My_header\My_stdlib.h: 23: *str = '\0';
 10259                           
 10260                           ; BSR set to: 0
 10261  015AD0  C0D8  FFD9         	movff	my_utoa@str,fsr2l
 10262  015AD4  C0D9  FFDA         	movff	my_utoa@str+1,fsr2h
 10263  015AD8  0E00               	movlw	0
 10264  015ADA  6EDF               	movwf	indf2,c
 10265                           
 10266                           ; BSR set to: 0
 10267  015ADC  0012               	return		;funcret
 10268  015ADE                     __end_of_my_utoa:
 10269                           	opt stack 0
 10270                           tblptru	equ	0xFF8
 10271                           tblptrh	equ	0xFF7
 10272                           tblptrl	equ	0xFF6
 10273                           tablat	equ	0xFF5
 10274                           prodh	equ	0xFF4
 10275                           prodl	equ	0xFF3
 10276                           intcon	equ	0xFF2
 10277                           postinc0	equ	0xFEE
 10278                           wreg	equ	0xFE8
 10279                           indf1	equ	0xFE7
 10280                           postinc1	equ	0xFE6
 10281                           postdec1	equ	0xFE5
 10282                           fsr1h	equ	0xFE2
 10283                           fsr1l	equ	0xFE1
 10284                           indf2	equ	0xFDF
 10285                           postinc2	equ	0xFDE
 10286                           postdec2	equ	0xFDD
 10287                           fsr2h	equ	0xFDA
 10288                           fsr2l	equ	0xFD9
 10289                           status	equ	0xFD8
 10290                           
 10291 ;; *************** function ___lwmod *****************
 10292 ;; Defined at:
 10293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;  dividend        2    0[BANK0 ] unsigned int 
 10296 ;;  divisor         2    2[BANK0 ] unsigned int 
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;  counter         1    4[BANK0 ] unsigned char 
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  2    0[BANK0 ] unsigned int 
 10301 ;; Registers used:
 10302 ;;		wreg, status,2, status,0
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10308 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10311 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10312 ;;Total ram usage:        5 bytes
 10313 ;; Hardware stack levels used:    1
 10314 ;; Hardware stack levels required when called:   11
 10315 ;; This function calls:
 10316 ;;		Nothing
 10317 ;; This function is called by:
 10318 ;;		_tx_sendn
 10319 ;;		_my_utoa
 10320 ;;		_display_LCD
 10321 ;;		_comm_disp
 10322 ;;		_ringbuf_put_num
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text25
 10327  015F6A                     __ptext25:
 10328                           	opt stack 0
 10329  015F6A                     ___lwmod:
 10330                           	opt stack 17
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;incstack = 0
 10334  015F6A  0100               	movlb	0	; () banked
 10335  015F6C  51B7               	movf	___lwmod@divisor& (0+255),w,b
 10336  015F6E  0100               	movlb	0	; () banked
 10337  015F70  11B8               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 10338  015F72  B4D8               	btfsc	status,2,c
 10339  015F74  D026               	goto	l1941
 10340                           
 10341                           ; BSR set to: 0
 10342  015F76  0E01               	movlw	1
 10343  015F78  0100               	movlb	0	; () banked
 10344  015F7A  6FB9               	movwf	___lwmod@counter& (0+255),b
 10345  015F7C  D006               	goto	l9546
 10346  015F7E                     l9544:
 10347                           
 10348                           ; BSR set to: 0
 10349  015F7E  0100               	movlb	0	; () banked
 10350  015F80  90D8               	bcf	status,0,c
 10351  015F82  37B7               	rlcf	___lwmod@divisor& (0+255),f,b
 10352  015F84  37B8               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 10353  015F86  0100               	movlb	0	; () banked
 10354  015F88  2BB9               	incf	___lwmod@counter& (0+255),f,b
 10355  015F8A                     l9546:
 10356                           
 10357                           ; BSR set to: 0
 10358  015F8A  0100               	movlb	0	; () banked
 10359  015F8C  AFB8               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 10360  015F8E  D7F7               	goto	l9544
 10361  015F90                     l9548:
 10362                           
 10363                           ; BSR set to: 0
 10364  015F90  0100               	movlb	0	; () banked
 10365  015F92  51B7               	movf	___lwmod@divisor& (0+255),w,b
 10366  015F94  0100               	movlb	0	; () banked
 10367  015F96  5DB5               	subwf	___lwmod@dividend& (0+255),w,b
 10368  015F98  0100               	movlb	0	; () banked
 10369  015F9A  51B8               	movf	(___lwmod@divisor+1)& (0+255),w,b
 10370  015F9C  0100               	movlb	0	; () banked
 10371  015F9E  59B6               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 10372  015FA0  A0D8               	btfss	status,0,c
 10373  015FA2  D008               	goto	l9552
 10374                           
 10375                           ; BSR set to: 0
 10376  015FA4  0100               	movlb	0	; () banked
 10377  015FA6  51B7               	movf	___lwmod@divisor& (0+255),w,b
 10378  015FA8  0100               	movlb	0	; () banked
 10379  015FAA  5FB5               	subwf	___lwmod@dividend& (0+255),f,b
 10380  015FAC  0100               	movlb	0	; () banked
 10381  015FAE  51B8               	movf	(___lwmod@divisor+1)& (0+255),w,b
 10382  015FB0  0100               	movlb	0	; () banked
 10383  015FB2  5BB6               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 10384  015FB4                     l9552:
 10385                           
 10386                           ; BSR set to: 0
 10387  015FB4  0100               	movlb	0	; () banked
 10388  015FB6  90D8               	bcf	status,0,c
 10389  015FB8  33B8               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 10390  015FBA  33B7               	rrcf	___lwmod@divisor& (0+255),f,b
 10391                           
 10392                           ; BSR set to: 0
 10393  015FBC  0100               	movlb	0	; () banked
 10394  015FBE  2FB9               	decfsz	___lwmod@counter& (0+255),f,b
 10395  015FC0  D7E7               	goto	l9548
 10396  015FC2                     l1941:
 10397                           
 10398                           ; BSR set to: 0
 10399  015FC2  C0B5  F0B5         	movff	___lwmod@dividend,?___lwmod
 10400  015FC6  C0B6  F0B6         	movff	___lwmod@dividend+1,?___lwmod+1
 10401                           
 10402                           ; BSR set to: 0
 10403  015FCA  0012               	return		;funcret
 10404  015FCC                     __end_of___lwmod:
 10405                           	opt stack 0
 10406                           tblptru	equ	0xFF8
 10407                           tblptrh	equ	0xFF7
 10408                           tblptrl	equ	0xFF6
 10409                           tablat	equ	0xFF5
 10410                           prodh	equ	0xFF4
 10411                           prodl	equ	0xFF3
 10412                           intcon	equ	0xFF2
 10413                           postinc0	equ	0xFEE
 10414                           wreg	equ	0xFE8
 10415                           indf1	equ	0xFE7
 10416                           postinc1	equ	0xFE6
 10417                           postdec1	equ	0xFE5
 10418                           fsr1h	equ	0xFE2
 10419                           fsr1l	equ	0xFE1
 10420                           indf2	equ	0xFDF
 10421                           postinc2	equ	0xFDE
 10422                           postdec2	equ	0xFDD
 10423                           fsr2h	equ	0xFDA
 10424                           fsr2l	equ	0xFD9
 10425                           status	equ	0xFD8
 10426                           
 10427 ;; *************** function _I2C_LCD_Putc *****************
 10428 ;; Defined at:
 10429 ;;		line 118 in file "../My_header\My_I2C.h"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  c               1    wreg     unsigned char 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;  c               1    4[BANK0 ] unsigned char 
 10434 ;;  ans             1    5[BANK0 ] unsigned char 
 10435 ;; Return value:  Size  Location     Type
 10436 ;;		None               void
 10437 ;; Registers used:
 10438 ;;		wreg, status,2, status,0, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10447 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10448 ;;Total ram usage:        2 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:   13
 10451 ;; This function calls:
 10452 ;;		_I2C_Send
 10453 ;;		_I2C_Start
 10454 ;;		_I2C_Stop
 10455 ;; This function is called by:
 10456 ;;		_display_time_1602
 10457 ;;		_display_LCD
 10458 ;;		_display_time_0802
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text26
 10463  0164FC                     __ptext26:
 10464                           	opt stack 0
 10465  0164FC                     _I2C_LCD_Putc:
 10466                           	opt stack 14
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;incstack = 0
 10470                           ;I2C_LCD_Putc@c stored from wreg
 10471  0164FC  0100               	movlb	0	; () banked
 10472  0164FE  6FB9               	movwf	I2C_LCD_Putc@c& (0+255),b
 10473                           
 10474                           ;My_header\My_I2C.h: 119: uint8_t ans;
 10475                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
 10476  016500  0E00               	movlw	0
 10477  016502  0100               	movlb	0	; () banked
 10478  016504  6FB7               	movwf	I2C_Start@rw& (0+255),b
 10479  016506  0E3E               	movlw	62
 10480  016508  EC3B  F0B3         	call	_I2C_Start
 10481  01650C  0100               	movlb	0	; () banked
 10482  01650E  6FBA               	movwf	I2C_LCD_Putc@ans& (0+255),b
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;My_header\My_I2C.h: 122: if (ans == 0) {
 10486  016510  0100               	movlb	0	; () banked
 10487  016512  51BA               	movf	I2C_LCD_Putc@ans& (0+255),w,b
 10488  016514  0100               	movlb	0	; () banked
 10489  016516  A4D8               	btfss	status,2,c
 10490  016518  D007               	goto	l355
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
 10494  01651A  0EC0               	movlw	192
 10495  01651C  EC39  F0B5         	call	_I2C_Send
 10496                           
 10497                           ;My_header\My_I2C.h: 125: I2C_Send(c);
 10498  016520  0100               	movlb	0	; () banked
 10499  016522  51B9               	movf	I2C_LCD_Putc@c& (0+255),w,b
 10500  016524  EC39  F0B5         	call	_I2C_Send
 10501  016528                     l355:
 10502                           
 10503                           ;My_header\My_I2C.h: 126: }
 10504                           ;My_header\My_I2C.h: 127: I2C_Stop();
 10505  016528  EC74  F0B5         	call	_I2C_Stop	;wreg free
 10506                           
 10507                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10508  01652C  0E68               	movlw	104
 10509  01652E                     u13337:
 10510  01652E  2EE8               	decfsz	wreg,f,c
 10511  016530  D7FE               	goto	u13337
 10512  016532  0012               	return		;funcret
 10513  016534                     __end_of_I2C_LCD_Putc:
 10514                           	opt stack 0
 10515                           tblptru	equ	0xFF8
 10516                           tblptrh	equ	0xFF7
 10517                           tblptrl	equ	0xFF6
 10518                           tablat	equ	0xFF5
 10519                           prodh	equ	0xFF4
 10520                           prodl	equ	0xFF3
 10521                           intcon	equ	0xFF2
 10522                           postinc0	equ	0xFEE
 10523                           wreg	equ	0xFE8
 10524                           indf1	equ	0xFE7
 10525                           postinc1	equ	0xFE6
 10526                           postdec1	equ	0xFE5
 10527                           fsr1h	equ	0xFE2
 10528                           fsr1l	equ	0xFE1
 10529                           indf2	equ	0xFDF
 10530                           postinc2	equ	0xFDE
 10531                           postdec2	equ	0xFDD
 10532                           fsr2h	equ	0xFDA
 10533                           fsr2l	equ	0xFD9
 10534                           status	equ	0xFD8
 10535                           
 10536 ;; *************** function _display_port *****************
 10537 ;; Defined at:
 10538 ;;		line 205 in file "tasks.h"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;		None               void
 10545 ;; Registers used:
 10546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10556 ;;Total ram usage:        0 bytes
 10557 ;; Hardware stack levels used:    1
 10558 ;; Hardware stack levels required when called:   15
 10559 ;; This function calls:
 10560 ;;		_I2C_LCD_Puts
 10561 ;;		_I2C_LCD_SetCursor
 10562 ;; This function is called by:
 10563 ;;		_display_LCD
 10564 ;; This function uses a non-reentrant model
 10565 ;;
 10566                           
 10567                           	psect	text27
 10568  013ED4                     __ptext27:
 10569                           	opt stack 0
 10570  013ED4                     _display_port:
 10571                           	opt stack 13
 10572                           
 10573                           ;tasks.h: 206: I2C_LCD_SetCursor(0, 0);
 10574                           
 10575                           ;incstack = 0
 10576  013ED4  0E00               	movlw	0
 10577  013ED6  0100               	movlb	0	; () banked
 10578  013ED8  6FBB               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 10579  013EDA  0E00               	movlw	0
 10580  013EDC  ECB0  F0B3         	call	_I2C_LCD_SetCursor
 10581                           
 10582                           ;tasks.h: 208: switch (print_port) {
 10583  013EE0  D066               	goto	l10230
 10584  013EE2                     l10210:
 10585                           
 10586                           ;tasks.h: 210: if (port[print_port].flag.auto_cut_ON) I2C_LCD_Puts("Left Port");
 10587  013EE2  0100               	movlb	0	; () banked
 10588  013EE4  519B               	movf	_print_port& (0+255),w,b
 10589  013EE6  0D17               	mullw	23
 10590  013EE8  0E16               	movlw	22
 10591  013EEA  26F3               	addwf	prodl,f,c
 10592  013EEC  0E00               	movlw	0
 10593  013EEE  22F4               	addwfc	prodh,f,c
 10594  013EF0  0E00               	movlw	low _port
 10595  013EF2  24F3               	addwf	prodl,w,c
 10596  013EF4  6ED9               	movwf	fsr2l,c
 10597  013EF6  0E03               	movlw	high _port
 10598  013EF8  20F4               	addwfc	prodh,w,c
 10599  013EFA  6EDA               	movwf	fsr2h,c
 10600  013EFC  0103               	movlb	3	; () banked
 10601  013EFE  A0DF               	btfss	indf2,0,c
 10602  013F00  D009               	goto	l10214
 10603                           
 10604                           ; BSR set to: 3
 10605  013F02  0E55               	movlw	low STR_2
 10606  013F04  0100               	movlb	0	; () banked
 10607  013F06  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10608  013F08  0EFF               	movlw	high STR_2
 10609  013F0A  0100               	movlb	0	; () banked
 10610  013F0C  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10611  013F0E  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
 10612  013F12  0012               	return	
 10613  013F14                     l10214:
 10614                           
 10615                           ;tasks.h: 211: else I2C_LCD_Puts("LEFT PORT");
 10616  013F14  0E41               	movlw	low STR_3
 10617  013F16  0100               	movlb	0	; () banked
 10618  013F18  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10619  013F1A  0EFF               	movlw	high STR_3
 10620  013F1C  0100               	movlb	0	; () banked
 10621  013F1E  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10622  013F20  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
 10623                           
 10624                           ;tasks.h: 212: break;
 10625  013F24  0012               	return	
 10626  013F26                     l10216:
 10627                           
 10628                           ;tasks.h: 214: if (port[print_port].flag.auto_cut_ON) I2C_LCD_Puts("Center Port");
 10629  013F26  0100               	movlb	0	; () banked
 10630  013F28  519B               	movf	_print_port& (0+255),w,b
 10631  013F2A  0D17               	mullw	23
 10632  013F2C  0E16               	movlw	22
 10633  013F2E  26F3               	addwf	prodl,f,c
 10634  013F30  0E00               	movlw	0
 10635  013F32  22F4               	addwfc	prodh,f,c
 10636  013F34  0E00               	movlw	low _port
 10637  013F36  24F3               	addwf	prodl,w,c
 10638  013F38  6ED9               	movwf	fsr2l,c
 10639  013F3A  0E03               	movlw	high _port
 10640  013F3C  20F4               	addwfc	prodh,w,c
 10641  013F3E  6EDA               	movwf	fsr2h,c
 10642  013F40  0103               	movlb	3	; () banked
 10643  013F42  A0DF               	btfss	indf2,0,c
 10644  013F44  D009               	goto	l10220
 10645                           
 10646                           ; BSR set to: 3
 10647  013F46  0E09               	movlw	low STR_4
 10648  013F48  0100               	movlb	0	; () banked
 10649  013F4A  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10650  013F4C  0EFF               	movlw	high STR_4
 10651  013F4E  0100               	movlb	0	; () banked
 10652  013F50  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10653  013F52  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
 10654  013F56  0012               	return	
 10655  013F58                     l10220:
 10656                           
 10657                           ;tasks.h: 215: else I2C_LCD_Puts("CENTER PORT");
 10658  013F58  0EF1               	movlw	low STR_5
 10659  013F5A  0100               	movlb	0	; () banked
 10660  013F5C  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10661  013F5E  0EFE               	movlw	high STR_5
 10662  013F60  0100               	movlb	0	; () banked
 10663  013F62  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10664  013F64  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
 10665                           
 10666                           ;tasks.h: 216: break;
 10667  013F68  0012               	return	
 10668  013F6A                     l10222:
 10669                           
 10670                           ;tasks.h: 218: if (port[print_port].flag.auto_cut_ON) I2C_LCD_Puts("Right Port");
 10671  013F6A  0100               	movlb	0	; () banked
 10672  013F6C  519B               	movf	_print_port& (0+255),w,b
 10673  013F6E  0D17               	mullw	23
 10674  013F70  0E16               	movlw	22
 10675  013F72  26F3               	addwf	prodl,f,c
 10676  013F74  0E00               	movlw	0
 10677  013F76  22F4               	addwfc	prodh,f,c
 10678  013F78  0E00               	movlw	low _port
 10679  013F7A  24F3               	addwf	prodl,w,c
 10680  013F7C  6ED9               	movwf	fsr2l,c
 10681  013F7E  0E03               	movlw	high _port
 10682  013F80  20F4               	addwfc	prodh,w,c
 10683  013F82  6EDA               	movwf	fsr2h,c
 10684  013F84  0103               	movlb	3	; () banked
 10685  013F86  A0DF               	btfss	indf2,0,c
 10686  013F88  D009               	goto	l10226
 10687                           
 10688                           ; BSR set to: 3
 10689  013F8A  0E36               	movlw	low STR_6
 10690  013F8C  0100               	movlb	0	; () banked
 10691  013F8E  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10692  013F90  0EFF               	movlw	high STR_6
 10693  013F92  0100               	movlb	0	; () banked
 10694  013F94  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10695  013F96  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
 10696  013F9A  0012               	return	
 10697  013F9C                     l10226:
 10698                           
 10699                           ;tasks.h: 219: else I2C_LCD_Puts("RIGHT PORT");
 10700  013F9C  0E15               	movlw	low STR_7
 10701  013F9E  0100               	movlb	0	; () banked
 10702  013FA0  6FB9               	movwf	I2C_LCD_Puts@s& (0+255),b
 10703  013FA2  0EFF               	movlw	high STR_7
 10704  013FA4  0100               	movlb	0	; () banked
 10705  013FA6  6FBA               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 10706  013FA8  EC9D  F0AC         	call	_I2C_LCD_Puts	;wreg free
 10707                           
 10708                           ;tasks.h: 221: }
 10709                           
 10710                           ;tasks.h: 220: break;
 10711  013FAC  0012               	return	
 10712  013FAE                     l10230:
 10713  013FAE  0100               	movlb	0	; () banked
 10714  013FB0  519B               	movf	_print_port& (0+255),w,b
 10715                           
 10716                           ; Switch size 1, requested type "space"
 10717                           ; Number of cases is 3, Range of values is 0 to 2
 10718                           ; switch strategies available:
 10719                           ; Name         Instructions Cycles
 10720                           ; simple_byte           10     6 (average)
 10721                           ;	Chosen strategy is simple_byte
 10722  013FB2  0A00               	xorlw	0	; case 0
 10723  013FB4  B4D8               	btfsc	status,2,c
 10724  013FB6  D795               	goto	l10210
 10725  013FB8  0A01               	xorlw	1	; case 1
 10726  013FBA  B4D8               	btfsc	status,2,c
 10727  013FBC  D7B4               	goto	l10216
 10728  013FBE  0A03               	xorlw	3	; case 2
 10729  013FC0  A4D8               	btfss	status,2,c
 10730  013FC2  0012               	return	
 10731  013FC4  D7D2               	goto	l10222
 10732  013FC6                     __end_of_display_port:
 10733                           	opt stack 0
 10734                           tblptru	equ	0xFF8
 10735                           tblptrh	equ	0xFF7
 10736                           tblptrl	equ	0xFF6
 10737                           tablat	equ	0xFF5
 10738                           prodh	equ	0xFF4
 10739                           prodl	equ	0xFF3
 10740                           intcon	equ	0xFF2
 10741                           postinc0	equ	0xFEE
 10742                           wreg	equ	0xFE8
 10743                           indf1	equ	0xFE7
 10744                           postinc1	equ	0xFE6
 10745                           postdec1	equ	0xFE5
 10746                           fsr1h	equ	0xFE2
 10747                           fsr1l	equ	0xFE1
 10748                           indf2	equ	0xFDF
 10749                           postinc2	equ	0xFDE
 10750                           postdec2	equ	0xFDD
 10751                           fsr2h	equ	0xFDA
 10752                           fsr2l	equ	0xFD9
 10753                           status	equ	0xFD8
 10754                           
 10755 ;; *************** function _I2C_LCD_SetCursor *****************
 10756 ;; Defined at:
 10757 ;;		line 112 in file "../My_header\My_I2C.h"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;  col             1    wreg     unsigned char 
 10760 ;;  row             1    6[BANK0 ] unsigned char 
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;  col             1    9[BANK0 ] unsigned char 
 10763 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 10764 ;; Return value:  Size  Location     Type
 10765 ;;		None               void
 10766 ;; Registers used:
 10767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10773 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10774 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10776 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10777 ;;Total ram usage:        4 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:   14
 10780 ;; This function calls:
 10781 ;;		_I2C_LCD_Command
 10782 ;; This function is called by:
 10783 ;;		_display_time_1602
 10784 ;;		_display_port
 10785 ;;		_display_LCD
 10786 ;;		_sleep_loop
 10787 ;;		_display_time_0802
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text28
 10792  016760                     __ptext28:
 10793                           	opt stack 0
 10794  016760                     _I2C_LCD_SetCursor:
 10795                           	opt stack 15
 10796                           
 10797                           ;incstack = 0
 10798                           ;I2C_LCD_SetCursor@col stored from wreg
 10799  016760  0100               	movlb	0	; () banked
 10800  016762  6FBE               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 10801                           
 10802                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
 10803  016764  C0FD  F0BC         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
 10804  016768  C0FE  F0BD         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
 10805                           
 10806                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 10807  01676C  0100               	movlb	0	; () banked
 10808  01676E  51BB               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 10809  016770  0D01               	mullw	1
 10810  016772  0EBC               	movlw	low I2C_LCD_SetCursor@row_offsets
 10811  016774  24F3               	addwf	prodl,w,c
 10812  016776  6ED9               	movwf	fsr2l,c
 10813  016778  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 10814  01677A  20F4               	addwfc	prodh,w,c
 10815  01677C  6EDA               	movwf	fsr2h,c
 10816  01677E  50DF               	movf	indf2,w,c
 10817  016780  0100               	movlb	0	; () banked
 10818  016782  25BE               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 10819  016784  0980               	iorlw	128
 10820  016786  ECB6  F0B2         	call	_I2C_LCD_Command
 10821  01678A  0012               	return		;funcret
 10822  01678C                     __end_of_I2C_LCD_SetCursor:
 10823                           	opt stack 0
 10824                           tblptru	equ	0xFF8
 10825                           tblptrh	equ	0xFF7
 10826                           tblptrl	equ	0xFF6
 10827                           tablat	equ	0xFF5
 10828                           prodh	equ	0xFF4
 10829                           prodl	equ	0xFF3
 10830                           intcon	equ	0xFF2
 10831                           postinc0	equ	0xFEE
 10832                           wreg	equ	0xFE8
 10833                           indf1	equ	0xFE7
 10834                           postinc1	equ	0xFE6
 10835                           postdec1	equ	0xFE5
 10836                           fsr1h	equ	0xFE2
 10837                           fsr1l	equ	0xFE1
 10838                           indf2	equ	0xFDF
 10839                           postinc2	equ	0xFDE
 10840                           postdec2	equ	0xFDD
 10841                           fsr2h	equ	0xFDA
 10842                           fsr2l	equ	0xFD9
 10843                           status	equ	0xFD8
 10844                           
 10845 ;; *************** function _I2C_LCD_Puts *****************
 10846 ;; Defined at:
 10847 ;;		line 131 in file "../My_header\My_I2C.h"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 10850 ;;		 -> STR_98(9), STR_97(17), STR_24(14), STR_23(8), 
 10851 ;;		 -> STR_22(7), STR_21(12), STR_20(13), STR_19(16), 
 10852 ;;		 -> STR_18(17), STR_17(17), STR_16(16), STR_15(2), 
 10853 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(4), 
 10854 ;;		 -> display_LCD@str(10), STR_10(15), STR_9(13), STR_8(17), 
 10855 ;;		 -> STR_7(11), STR_6(11), STR_5(12), STR_4(12), 
 10856 ;;		 -> STR_3(10), STR_2(10), weekday_3char(28), STR_1(3), 
 10857 ;;		 -> display_dec@str(10), 
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;  ans             2    7[BANK0 ] int 
 10860 ;; Return value:  Size  Location     Type
 10861 ;;		None               void
 10862 ;; Registers used:
 10863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10871 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10872 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10873 ;;Total ram usage:        5 bytes
 10874 ;; Hardware stack levels used:    1
 10875 ;; Hardware stack levels required when called:   13
 10876 ;; This function calls:
 10877 ;;		_I2C_Send
 10878 ;;		_I2C_Start
 10879 ;;		_I2C_Stop
 10880 ;; This function is called by:
 10881 ;;		_display_dec
 10882 ;;		_display_time_1602
 10883 ;;		_display_port
 10884 ;;		_display_LCD
 10885 ;;		_sleep_loop
 10886 ;;		_display_time_0802
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text29
 10891  01593A                     __ptext29:
 10892                           	opt stack 0
 10893  01593A                     _I2C_LCD_Puts:
 10894                           	opt stack 16
 10895                           
 10896                           ;My_header\My_I2C.h: 132: int ans;
 10897                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
 10898                           
 10899                           ;incstack = 0
 10900  01593A  0E00               	movlw	0
 10901  01593C  0100               	movlb	0	; () banked
 10902  01593E  6FB7               	movwf	I2C_Start@rw& (0+255),b
 10903  015940  0E3E               	movlw	62
 10904  015942  EC3B  F0B3         	call	_I2C_Start
 10905  015946  0100               	movlb	0	; () banked
 10906  015948  6FBB               	movwf	??_I2C_LCD_Puts& (0+255),b
 10907  01594A  0100               	movlb	0	; () banked
 10908  01594C  51BB               	movf	??_I2C_LCD_Puts& (0+255),w,b
 10909  01594E  0100               	movlb	0	; () banked
 10910  015950  6FBC               	movwf	I2C_LCD_Puts@ans& (0+255),b
 10911  015952  6BBD               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;My_header\My_I2C.h: 135: if (ans == 0) {
 10915  015954  0100               	movlb	0	; () banked
 10916  015956  51BC               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 10917  015958  0100               	movlb	0	; () banked
 10918  01595A  11BD               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 10919  01595C  A4D8               	btfss	status,2,c
 10920  01595E  D031               	goto	l9658
 10921                           
 10922                           ; BSR set to: 0
 10923                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
 10924  015960  0E40               	movlw	64
 10925  015962  EC39  F0B5         	call	_I2C_Send
 10926                           
 10927                           ;My_header\My_I2C.h: 137: while (*s) {
 10928  015966  D019               	goto	l9656
 10929  015968                     l9650:
 10930                           
 10931                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
 10932  015968  C0B9  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10933  01596C  C0BA  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10934  015970  0E00               	movlw	low (__mediumconst shr (0+16))
 10935  015972  6EF8               	movwf	tblptru,c
 10936  015974  0E0E               	movlw	(high __ramtop+-1)
 10937  015976  64F7               	cpfsgt	tblptrh,c
 10938  015978  D003               	bra	u10507
 10939  01597A  0008               	tblrd		*
 10940  01597C  50F5               	movf	tablat,w,c
 10941  01597E  D005               	bra	u10500
 10942  015980                     u10507:
 10943  015980  CFF6 FFE1          	movff	tblptrl,fsr1l
 10944  015984  CFF7 FFE2          	movff	tblptrh,fsr1h
 10945  015988  50E7               	movf	indf1,w,c
 10946  01598A                     u10500:
 10947  01598A  EC39  F0B5         	call	_I2C_Send
 10948  01598E  0100               	movlb	0	; () banked
 10949  015990  4BB9               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 10950  015992  2BBA               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10954  015994  0E68               	movlw	104
 10955  015996                     u13347:
 10956  015996  2EE8               	decfsz	wreg,f,c
 10957  015998  D7FE               	goto	u13347
 10958  01599A                     l9656:
 10959  01599A  C0B9  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10960  01599E  C0BA  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10961  0159A2  0E00               	movlw	low (__mediumconst shr (0+16))
 10962  0159A4  6EF8               	movwf	tblptru,c
 10963  0159A6  0E0E               	movlw	(high __ramtop+-1)
 10964  0159A8  64F7               	cpfsgt	tblptrh,c
 10965  0159AA  D003               	bra	u10517
 10966  0159AC  0008               	tblrd		*
 10967  0159AE  50F5               	movf	tablat,w,c
 10968  0159B0  D005               	bra	u10510
 10969  0159B2                     u10517:
 10970  0159B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 10971  0159B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 10972  0159BA  50E7               	movf	indf1,w,c
 10973  0159BC                     u10510:
 10974  0159BC  0900               	iorlw	0
 10975  0159BE  A4D8               	btfss	status,2,c
 10976  0159C0  D7D3               	goto	l9650
 10977  0159C2                     l9658:
 10978                           
 10979                           ;My_header\My_I2C.h: 140: }
 10980                           ;My_header\My_I2C.h: 141: }
 10981                           ;My_header\My_I2C.h: 142: I2C_Stop();
 10982  0159C2  EC74  F0B5         	call	_I2C_Stop	;wreg free
 10983  0159C6  0012               	return		;funcret
 10984  0159C8                     __end_of_I2C_LCD_Puts:
 10985                           	opt stack 0
 10986                           tblptru	equ	0xFF8
 10987                           tblptrh	equ	0xFF7
 10988                           tblptrl	equ	0xFF6
 10989                           tablat	equ	0xFF5
 10990                           prodh	equ	0xFF4
 10991                           prodl	equ	0xFF3
 10992                           intcon	equ	0xFF2
 10993                           postinc0	equ	0xFEE
 10994                           wreg	equ	0xFE8
 10995                           indf1	equ	0xFE7
 10996                           postinc1	equ	0xFE6
 10997                           postdec1	equ	0xFE5
 10998                           fsr1h	equ	0xFE2
 10999                           fsr1l	equ	0xFE1
 11000                           indf2	equ	0xFDF
 11001                           postinc2	equ	0xFDE
 11002                           postdec2	equ	0xFDD
 11003                           fsr2h	equ	0xFDA
 11004                           fsr2l	equ	0xFD9
 11005                           status	equ	0xFD8
 11006                           
 11007 ;; *************** function ___llmod *****************
 11008 ;; Defined at:
 11009 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  dividend        4   13[BANK0 ] unsigned long 
 11012 ;;  divisor         4   17[BANK0 ] unsigned long 
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;  counter         1   21[BANK0 ] unsigned char 
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  4   13[BANK0 ] unsigned long 
 11017 ;; Registers used:
 11018 ;;		wreg, status,2, status,0
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11024 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11027 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11028 ;;Total ram usage:        9 bytes
 11029 ;; Hardware stack levels used:    1
 11030 ;; Hardware stack levels required when called:   11
 11031 ;; This function calls:
 11032 ;;		Nothing
 11033 ;; This function is called by:
 11034 ;;		_display_LCD
 11035 ;;		_comm_disp
 11036 ;;		_my_utoa32
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           	psect	text30
 11041  01564E                     __ptext30:
 11042                           	opt stack 0
 11043  01564E                     ___llmod:
 11044                           	opt stack 16
 11045                           
 11046                           ;incstack = 0
 11047  01564E  0100               	movlb	0	; () banked
 11048  015650  51C6               	movf	___llmod@divisor& (0+255),w,b
 11049  015652  0100               	movlb	0	; () banked
 11050  015654  11C7               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11051  015656  0100               	movlb	0	; () banked
 11052  015658  11C8               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11053  01565A  0100               	movlb	0	; () banked
 11054  01565C  11C9               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11055  01565E  B4D8               	btfsc	status,2,c
 11056  015660  D03A               	goto	l1888
 11057                           
 11058                           ; BSR set to: 0
 11059  015662  0E01               	movlw	1
 11060  015664  0100               	movlb	0	; () banked
 11061  015666  6FCA               	movwf	___llmod@counter& (0+255),b
 11062  015668  D008               	goto	l9952
 11063  01566A                     l9950:
 11064                           
 11065                           ; BSR set to: 0
 11066  01566A  0100               	movlb	0	; () banked
 11067  01566C  90D8               	bcf	status,0,c
 11068  01566E  37C6               	rlcf	___llmod@divisor& (0+255),f,b
 11069  015670  37C7               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11070  015672  37C8               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11071  015674  37C9               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11072  015676  0100               	movlb	0	; () banked
 11073  015678  2BCA               	incf	___llmod@counter& (0+255),f,b
 11074  01567A                     l9952:
 11075                           
 11076                           ; BSR set to: 0
 11077  01567A  0100               	movlb	0	; () banked
 11078  01567C  AFC9               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11079  01567E  D7F5               	goto	l9950
 11080  015680                     l9954:
 11081                           
 11082                           ; BSR set to: 0
 11083  015680  0100               	movlb	0	; () banked
 11084  015682  51C6               	movf	___llmod@divisor& (0+255),w,b
 11085  015684  0100               	movlb	0	; () banked
 11086  015686  5DC2               	subwf	___llmod@dividend& (0+255),w,b
 11087  015688  0100               	movlb	0	; () banked
 11088  01568A  51C7               	movf	(___llmod@divisor+1)& (0+255),w,b
 11089  01568C  0100               	movlb	0	; () banked
 11090  01568E  59C3               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11091  015690  0100               	movlb	0	; () banked
 11092  015692  51C8               	movf	(___llmod@divisor+2)& (0+255),w,b
 11093  015694  0100               	movlb	0	; () banked
 11094  015696  59C4               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11095  015698  0100               	movlb	0	; () banked
 11096  01569A  51C9               	movf	(___llmod@divisor+3)& (0+255),w,b
 11097  01569C  0100               	movlb	0	; () banked
 11098  01569E  59C5               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11099  0156A0  A0D8               	btfss	status,0,c
 11100  0156A2  D010               	goto	l9958
 11101                           
 11102                           ; BSR set to: 0
 11103  0156A4  0100               	movlb	0	; () banked
 11104  0156A6  51C6               	movf	___llmod@divisor& (0+255),w,b
 11105  0156A8  0100               	movlb	0	; () banked
 11106  0156AA  5FC2               	subwf	___llmod@dividend& (0+255),f,b
 11107  0156AC  0100               	movlb	0	; () banked
 11108  0156AE  51C7               	movf	(___llmod@divisor+1)& (0+255),w,b
 11109  0156B0  0100               	movlb	0	; () banked
 11110  0156B2  5BC3               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11111  0156B4  0100               	movlb	0	; () banked
 11112  0156B6  51C8               	movf	(___llmod@divisor+2)& (0+255),w,b
 11113  0156B8  0100               	movlb	0	; () banked
 11114  0156BA  5BC4               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11115  0156BC  0100               	movlb	0	; () banked
 11116  0156BE  51C9               	movf	(___llmod@divisor+3)& (0+255),w,b
 11117  0156C0  0100               	movlb	0	; () banked
 11118  0156C2  5BC5               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11119  0156C4                     l9958:
 11120                           
 11121                           ; BSR set to: 0
 11122  0156C4  0100               	movlb	0	; () banked
 11123  0156C6  90D8               	bcf	status,0,c
 11124  0156C8  33C9               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11125  0156CA  33C8               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11126  0156CC  33C7               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11127  0156CE  33C6               	rrcf	___llmod@divisor& (0+255),f,b
 11128                           
 11129                           ; BSR set to: 0
 11130  0156D0  0100               	movlb	0	; () banked
 11131  0156D2  2FCA               	decfsz	___llmod@counter& (0+255),f,b
 11132  0156D4  D7D5               	goto	l9954
 11133  0156D6                     l1888:
 11134                           
 11135                           ; BSR set to: 0
 11136  0156D6  C0C2  F0C2         	movff	___llmod@dividend,?___llmod
 11137  0156DA  C0C3  F0C3         	movff	___llmod@dividend+1,?___llmod+1
 11138  0156DE  C0C4  F0C4         	movff	___llmod@dividend+2,?___llmod+2
 11139  0156E2  C0C5  F0C5         	movff	___llmod@dividend+3,?___llmod+3
 11140                           
 11141                           ; BSR set to: 0
 11142  0156E6  0012               	return		;funcret
 11143  0156E8                     __end_of___llmod:
 11144                           	opt stack 0
 11145                           tblptru	equ	0xFF8
 11146                           tblptrh	equ	0xFF7
 11147                           tblptrl	equ	0xFF6
 11148                           tablat	equ	0xFF5
 11149                           prodh	equ	0xFF4
 11150                           prodl	equ	0xFF3
 11151                           intcon	equ	0xFF2
 11152                           postinc0	equ	0xFEE
 11153                           wreg	equ	0xFE8
 11154                           indf1	equ	0xFE7
 11155                           postinc1	equ	0xFE6
 11156                           postdec1	equ	0xFE5
 11157                           fsr1h	equ	0xFE2
 11158                           fsr1l	equ	0xFE1
 11159                           indf2	equ	0xFDF
 11160                           postinc2	equ	0xFDE
 11161                           postdec2	equ	0xFDD
 11162                           fsr2h	equ	0xFDA
 11163                           fsr2l	equ	0xFD9
 11164                           status	equ	0xFD8
 11165                           
 11166 ;; *************** function _RTCC_adjust_time_button *****************
 11167 ;; Defined at:
 11168 ;;		line 363 in file "../My_header\My_RTCC.h"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;  mode            2   63[BANK0 ] PTR struct button
 11171 ;;		 -> ctmu_m(4), 
 11172 ;;  cnt_inc         2   65[BANK0 ] PTR struct button
 11173 ;;		 -> port(69), 
 11174 ;;  cnt_dec         2   67[BANK0 ] PTR struct button
 11175 ;;		 -> port(69), 
 11176 ;; Auto vars:     Size  Location     Type
 11177 ;;		None
 11178 ;; Return value:  Size  Location     Type
 11179 ;;		None               void
 11180 ;; Registers used:
 11181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11187 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11190 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11191 ;;Total ram usage:        6 bytes
 11192 ;; Hardware stack levels used:    1
 11193 ;; Hardware stack levels required when called:   16
 11194 ;; This function calls:
 11195 ;;		_RTCC_adjust_time_cursor
 11196 ;;		_RTCC_adjust_time_dec
 11197 ;;		_RTCC_adjust_time_inc
 11198 ;;		_RTCC_adjust_time_toggle
 11199 ;; This function is called by:
 11200 ;;		_normal_mode_loop
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text31
 11205  013754                     __ptext31:
 11206                           	opt stack 0
 11207  013754                     _RTCC_adjust_time_button:
 11208                           	opt stack 13
 11209                           
 11210                           ;My_header\My_RTCC.h: 364: if (mode->flag.long_holding_3) {
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;incstack = 0
 11214  013754  0100               	movlb	0	; () banked
 11215  013756  EE20 F003          	lfsr	2,3
 11216  01375A  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 11217  01375C  26D9               	addwf	fsr2l,f,c
 11218  01375E  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 11219  013760  22DA               	addwfc	fsr2h,f,c
 11220  013762  0100               	movlb	0	; () banked
 11221  013764  A6DF               	btfss	indf2,3,c
 11222  013766  D02C               	goto	l10738
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;My_header\My_RTCC.h: 365: mode->flag.long_holding_3 = 0;
 11226  013768  0100               	movlb	0	; () banked
 11227  01376A  EE20 F003          	lfsr	2,3
 11228  01376E  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 11229  013770  26D9               	addwf	fsr2l,f,c
 11230  013772  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 11231  013774  22DA               	addwfc	fsr2h,f,c
 11232  013776  0100               	movlb	0	; () banked
 11233  013778  96DF               	bcf	indf2,3,c
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;My_header\My_RTCC.h: 366: RTCC_adjust_time_toggle();
 11237  01377A  EC45  F0B5         	call	_RTCC_adjust_time_toggle	;wreg free
 11238                           
 11239                           ;My_header\My_RTCC.h: 367: mode->flags = 0;
 11240  01377E  0100               	movlb	0	; () banked
 11241  013780  EE20 F002          	lfsr	2,2
 11242  013784  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 11243  013786  26D9               	addwf	fsr2l,f,c
 11244  013788  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 11245  01378A  22DA               	addwfc	fsr2h,f,c
 11246  01378C  0E00               	movlw	0
 11247  01378E  6EDE               	movwf	postinc2,c
 11248  013790  0E00               	movlw	0
 11249  013792  6EDD               	movwf	postdec2,c
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;My_header\My_RTCC.h: 368: cnt_inc->flags = 0;
 11253  013794  0100               	movlb	0	; () banked
 11254  013796  EE20 F002          	lfsr	2,2
 11255  01379A  51F6               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
 11256  01379C  26D9               	addwf	fsr2l,f,c
 11257  01379E  51F7               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
 11258  0137A0  22DA               	addwfc	fsr2h,f,c
 11259  0137A2  0E00               	movlw	0
 11260  0137A4  6EDE               	movwf	postinc2,c
 11261  0137A6  0E00               	movlw	0
 11262  0137A8  6EDD               	movwf	postdec2,c
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;My_header\My_RTCC.h: 369: cnt_dec->flags = 0;
 11266  0137AA  0100               	movlb	0	; () banked
 11267  0137AC  EE20 F002          	lfsr	2,2
 11268  0137B0  51F8               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
 11269  0137B2  26D9               	addwf	fsr2l,f,c
 11270  0137B4  51F9               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
 11271  0137B6  22DA               	addwfc	fsr2h,f,c
 11272  0137B8  0E00               	movlw	0
 11273  0137BA  6EDE               	movwf	postinc2,c
 11274  0137BC  0E00               	movlw	0
 11275  0137BE  6EDD               	movwf	postdec2,c
 11276  0137C0                     l10738:
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;My_header\My_RTCC.h: 370: }
 11280                           ;My_header\My_RTCC.h: 371: if (edit_flag.flags) {
 11281  0137C0  0100               	movlb	0	; () banked
 11282  0137C2  5198               	movf	_edit_flag& (0+255),w,b
 11283  0137C4  B4D8               	btfsc	status,2,c
 11284  0137C6  0012               	return	
 11285                           
 11286                           ; BSR set to: 0
 11287                           ;My_header\My_RTCC.h: 372: if (mode->flag.press) {
 11288  0137C8  0100               	movlb	0	; () banked
 11289  0137CA  EE20 F002          	lfsr	2,2
 11290  0137CE  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 11291  0137D0  26D9               	addwf	fsr2l,f,c
 11292  0137D2  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 11293  0137D4  22DA               	addwfc	fsr2h,f,c
 11294  0137D6  0100               	movlb	0	; () banked
 11295  0137D8  A0DF               	btfss	indf2,0,c
 11296  0137DA  D00B               	goto	l10746
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;My_header\My_RTCC.h: 373: mode->flag.press = 0;
 11300  0137DC  0100               	movlb	0	; () banked
 11301  0137DE  EE20 F002          	lfsr	2,2
 11302  0137E2  51F4               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
 11303  0137E4  26D9               	addwf	fsr2l,f,c
 11304  0137E6  51F5               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
 11305  0137E8  22DA               	addwfc	fsr2h,f,c
 11306  0137EA  0100               	movlb	0	; () banked
 11307  0137EC  90DF               	bcf	indf2,0,c
 11308                           
 11309                           ; BSR set to: 0
 11310                           ;My_header\My_RTCC.h: 374: RTCC_adjust_time_cursor();
 11311  0137EE  EC14  F0B0         	call	_RTCC_adjust_time_cursor	;wreg free
 11312  0137F2                     l10746:
 11313                           
 11314                           ;My_header\My_RTCC.h: 375: }
 11315                           ;My_header\My_RTCC.h: 376: if (cnt_inc->flag.press) {
 11316  0137F2  0100               	movlb	0	; () banked
 11317  0137F4  EE20 F002          	lfsr	2,2
 11318  0137F8  51F6               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
 11319  0137FA  26D9               	addwf	fsr2l,f,c
 11320  0137FC  51F7               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
 11321  0137FE  22DA               	addwfc	fsr2h,f,c
 11322  013800  0100               	movlb	0	; () banked
 11323  013802  A0DF               	btfss	indf2,0,c
 11324  013804  D017               	goto	l10752
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;My_header\My_RTCC.h: 377: cnt_inc->flag.press = 0;
 11328  013806  0100               	movlb	0	; () banked
 11329  013808  EE20 F002          	lfsr	2,2
 11330  01380C  51F6               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
 11331  01380E  26D9               	addwf	fsr2l,f,c
 11332  013810  51F7               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
 11333  013812  22DA               	addwfc	fsr2h,f,c
 11334  013814  0100               	movlb	0	; () banked
 11335  013816  90DF               	bcf	indf2,0,c
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;My_header\My_RTCC.h: 378: RTCC_adjust_time_inc(&caltime_now, &epoch_now);
 11339  013818  0EA6               	movlw	low _caltime_now
 11340  01381A  0100               	movlb	0	; () banked
 11341  01381C  6FEA               	movwf	RTCC_adjust_time_inc@ct& (0+255),b
 11342  01381E  0E00               	movlw	high _caltime_now
 11343  013820  0100               	movlb	0	; () banked
 11344  013822  6FEB               	movwf	(RTCC_adjust_time_inc@ct+1)& (0+255),b
 11345  013824  0EB1               	movlw	low _epoch_now
 11346  013826  0100               	movlb	0	; () banked
 11347  013828  6FEC               	movwf	RTCC_adjust_time_inc@ep& (0+255),b
 11348  01382A  0E00               	movlw	high _epoch_now
 11349  01382C  0100               	movlb	0	; () banked
 11350  01382E  6FED               	movwf	(RTCC_adjust_time_inc@ep+1)& (0+255),b
 11351  013830  EC67  F091         	call	_RTCC_adjust_time_inc	;wreg free
 11352  013834                     l10752:
 11353                           
 11354                           ;My_header\My_RTCC.h: 379: }
 11355                           ;My_header\My_RTCC.h: 380: if (cnt_dec->flag.press) {
 11356  013834  0100               	movlb	0	; () banked
 11357  013836  EE20 F002          	lfsr	2,2
 11358  01383A  51F8               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
 11359  01383C  26D9               	addwf	fsr2l,f,c
 11360  01383E  51F9               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
 11361  013840  22DA               	addwfc	fsr2h,f,c
 11362  013842  0100               	movlb	0	; () banked
 11363  013844  A0DF               	btfss	indf2,0,c
 11364  013846  0012               	return	
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;My_header\My_RTCC.h: 381: cnt_dec->flag.press = 0;
 11368  013848  0100               	movlb	0	; () banked
 11369  01384A  EE20 F002          	lfsr	2,2
 11370  01384E  51F8               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
 11371  013850  26D9               	addwf	fsr2l,f,c
 11372  013852  51F9               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
 11373  013854  22DA               	addwfc	fsr2h,f,c
 11374  013856  0100               	movlb	0	; () banked
 11375  013858  90DF               	bcf	indf2,0,c
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;My_header\My_RTCC.h: 382: RTCC_adjust_time_dec(&caltime_now, &epoch_now);
 11379  01385A  0EA6               	movlw	low _caltime_now
 11380  01385C  0100               	movlb	0	; () banked
 11381  01385E  6FEA               	movwf	RTCC_adjust_time_dec@ct& (0+255),b
 11382  013860  0E00               	movlw	high _caltime_now
 11383  013862  0100               	movlb	0	; () banked
 11384  013864  6FEB               	movwf	(RTCC_adjust_time_dec@ct+1)& (0+255),b
 11385  013866  0EB1               	movlw	low _epoch_now
 11386  013868  0100               	movlb	0	; () banked
 11387  01386A  6FEC               	movwf	RTCC_adjust_time_dec@ep& (0+255),b
 11388  01386C  0E00               	movlw	high _epoch_now
 11389  01386E  0100               	movlb	0	; () banked
 11390  013870  6FED               	movwf	(RTCC_adjust_time_dec@ep+1)& (0+255),b
 11391  013872  EC99  F092         	call	_RTCC_adjust_time_dec	;wreg free
 11392  013876  0012               	return	
 11393  013878                     __end_of_RTCC_adjust_time_button:
 11394                           	opt stack 0
 11395                           tblptru	equ	0xFF8
 11396                           tblptrh	equ	0xFF7
 11397                           tblptrl	equ	0xFF6
 11398                           tablat	equ	0xFF5
 11399                           prodh	equ	0xFF4
 11400                           prodl	equ	0xFF3
 11401                           intcon	equ	0xFF2
 11402                           postinc0	equ	0xFEE
 11403                           wreg	equ	0xFE8
 11404                           indf1	equ	0xFE7
 11405                           postinc1	equ	0xFE6
 11406                           postdec1	equ	0xFE5
 11407                           fsr1h	equ	0xFE2
 11408                           fsr1l	equ	0xFE1
 11409                           indf2	equ	0xFDF
 11410                           postinc2	equ	0xFDE
 11411                           postdec2	equ	0xFDD
 11412                           fsr2h	equ	0xFDA
 11413                           fsr2l	equ	0xFD9
 11414                           status	equ	0xFD8
 11415                           
 11416 ;; *************** function _RTCC_adjust_time_toggle *****************
 11417 ;; Defined at:
 11418 ;;		line 303 in file "../My_header\My_RTCC.h"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;		None
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;		None
 11423 ;; Return value:  Size  Location     Type
 11424 ;;		None               void
 11425 ;; Registers used:
 11426 ;;		wreg, status,2
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/0
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11436 ;;Total ram usage:        0 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; Hardware stack levels required when called:   11
 11439 ;; This function calls:
 11440 ;;		Nothing
 11441 ;; This function is called by:
 11442 ;;		_RTCC_adjust_time_button
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           	psect	text32
 11447  016A8A                     __ptext32:
 11448                           	opt stack 0
 11449  016A8A                     _RTCC_adjust_time_toggle:
 11450                           	opt stack 17
 11451                           
 11452                           ;My_header\My_RTCC.h: 304: if (edit_flag.flags) {
 11453                           
 11454                           ;incstack = 0
 11455  016A8A  0100               	movlb	0	; () banked
 11456  016A8C  5198               	movf	_edit_flag& (0+255),w,b
 11457  016A8E  B4D8               	btfsc	status,2,c
 11458  016A90  D004               	goto	l530
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;My_header\My_RTCC.h: 305: edit_flag.flags = 0;
 11462  016A92  0E00               	movlw	0
 11463  016A94  0100               	movlb	0	; () banked
 11464  016A96  6F98               	movwf	_edit_flag& (0+255),b
 11465                           
 11466                           ;My_header\My_RTCC.h: 306: } else {
 11467  016A98  0012               	return	
 11468  016A9A                     l530:
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;My_header\My_RTCC.h: 307: edit_flag.flag.ss = 1;
 11472  016A9A  0100               	movlb	0	; () banked
 11473  016A9C  8198               	bsf	_edit_flag& (0+255),0,b
 11474  016A9E  0012               	return	
 11475  016AA0                     __end_of_RTCC_adjust_time_toggle:
 11476                           	opt stack 0
 11477                           tblptru	equ	0xFF8
 11478                           tblptrh	equ	0xFF7
 11479                           tblptrl	equ	0xFF6
 11480                           tablat	equ	0xFF5
 11481                           prodh	equ	0xFF4
 11482                           prodl	equ	0xFF3
 11483                           intcon	equ	0xFF2
 11484                           postinc0	equ	0xFEE
 11485                           wreg	equ	0xFE8
 11486                           indf1	equ	0xFE7
 11487                           postinc1	equ	0xFE6
 11488                           postdec1	equ	0xFE5
 11489                           fsr1h	equ	0xFE2
 11490                           fsr1l	equ	0xFE1
 11491                           indf2	equ	0xFDF
 11492                           postinc2	equ	0xFDE
 11493                           postdec2	equ	0xFDD
 11494                           fsr2h	equ	0xFDA
 11495                           fsr2l	equ	0xFD9
 11496                           status	equ	0xFD8
 11497                           
 11498 ;; *************** function _RTCC_adjust_time_inc *****************
 11499 ;; Defined at:
 11500 ;;		line 321 in file "../My_header\My_RTCC.h"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;  ct              2   53[BANK0 ] PTR struct .
 11503 ;;		 -> caltime_now(7), 
 11504 ;;  ep              2   55[BANK0 ] PTR unsigned long 
 11505 ;;		 -> epoch_now(4), 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;  i               1   61[BANK0 ] unsigned char 
 11508 ;;  i               1   62[BANK0 ] unsigned char 
 11509 ;; Return value:  Size  Location     Type
 11510 ;;		None               void
 11511 ;; Registers used:
 11512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11513 ;; Tracked objects:
 11514 ;;		On entry : 0/0
 11515 ;;		On exit  : 0/0
 11516 ;;		Unchanged: 0/0
 11517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11520 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11521 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11522 ;;Total ram usage:       10 bytes
 11523 ;; Hardware stack levels used:    1
 11524 ;; Hardware stack levels required when called:   15
 11525 ;; This function calls:
 11526 ;;		_RTCC_from_RTCC
 11527 ;;		_RTCC_from_epoch
 11528 ;;		___lmul
 11529 ;;		_month_length
 11530 ;; This function is called by:
 11531 ;;		_RTCC_adjust_time_button
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           	psect	text33
 11536  0122CE                     __ptext33:
 11537                           	opt stack 0
 11538  0122CE                     _RTCC_adjust_time_inc:
 11539                           	opt stack 13
 11540                           
 11541                           ;My_header\My_RTCC.h: 322: RTCC_from_RTCC(ct, ep);
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;incstack = 0
 11545  0122CE  C0EA  F0DD         	movff	RTCC_adjust_time_inc@ct,RTCC_from_RTCC@ct
 11546  0122D2  C0EB  F0DE         	movff	RTCC_adjust_time_inc@ct+1,RTCC_from_RTCC@ct+1
 11547  0122D6  C0EC  F0DF         	movff	RTCC_adjust_time_inc@ep,RTCC_from_RTCC@ep
 11548  0122DA  C0ED  F0E0         	movff	RTCC_adjust_time_inc@ep+1,RTCC_from_RTCC@ep+1
 11549  0122DE  ECD0  F0B4         	call	_RTCC_from_RTCC	;wreg free
 11550                           
 11551                           ;My_header\My_RTCC.h: 323: if (edit_flag.flag.ss) *ep += 1;
 11552  0122E2  0100               	movlb	0	; () banked
 11553  0122E4  A198               	btfss	_edit_flag& (0+255),0,b
 11554  0122E6  D009               	goto	l10076
 11555                           
 11556                           ; BSR set to: 0
 11557  0122E8  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11558  0122EC  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11559  0122F0  2ADE               	incf	postinc2,f,c
 11560  0122F2  0E00               	movlw	0
 11561  0122F4  22DE               	addwfc	postinc2,f,c
 11562  0122F6  22DE               	addwfc	postinc2,f,c
 11563  0122F8  22DE               	addwfc	postinc2,f,c
 11564  0122FA                     l10076:
 11565                           
 11566                           ; BSR set to: 0
 11567                           ;My_header\My_RTCC.h: 324: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
 11568  0122FA  0100               	movlb	0	; () banked
 11569  0122FC  A398               	btfss	_edit_flag& (0+255),1,b
 11570  0122FE  D00A               	goto	l10080
 11571                           
 11572                           ; BSR set to: 0
 11573  012300  0E3C               	movlw	60
 11574  012302  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11575  012306  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11576  01230A  26DE               	addwf	postinc2,f,c
 11577  01230C  0E00               	movlw	0
 11578  01230E  22DE               	addwfc	postinc2,f,c
 11579  012310  22DE               	addwfc	postinc2,f,c
 11580  012312  22DE               	addwfc	postinc2,f,c
 11581  012314                     l10080:
 11582                           
 11583                           ; BSR set to: 0
 11584                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
 11585  012314  0100               	movlb	0	; () banked
 11586  012316  A598               	btfss	_edit_flag& (0+255),2,b
 11587  012318  D00C               	goto	l10084
 11588                           
 11589                           ; BSR set to: 0
 11590  01231A  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11591  01231E  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11592  012322  0E10               	movlw	16
 11593  012324  26DE               	addwf	postinc2,f,c
 11594  012326  0E0E               	movlw	14
 11595  012328  22DE               	addwfc	postinc2,f,c
 11596  01232A  0E00               	movlw	0
 11597  01232C  22DE               	addwfc	postinc2,f,c
 11598  01232E  0E00               	movlw	0
 11599  012330  22DE               	addwfc	postinc2,f,c
 11600  012332                     l10084:
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
 11604  012332  0100               	movlb	0	; () banked
 11605  012334  A798               	btfss	_edit_flag& (0+255),3,b
 11606  012336  D00C               	goto	l10088
 11607                           
 11608                           ; BSR set to: 0
 11609  012338  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11610  01233C  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11611  012340  0E80               	movlw	128
 11612  012342  26DE               	addwf	postinc2,f,c
 11613  012344  0E51               	movlw	81
 11614  012346  22DE               	addwfc	postinc2,f,c
 11615  012348  0E01               	movlw	1
 11616  01234A  22DE               	addwfc	postinc2,f,c
 11617  01234C  0E00               	movlw	0
 11618  01234E  22DE               	addwfc	postinc2,f,c
 11619  012350                     l10088:
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
 11623  012350  0100               	movlb	0	; () banked
 11624  012352  A998               	btfss	_edit_flag& (0+255),4,b
 11625  012354  D038               	goto	l10092
 11626                           
 11627                           ; BSR set to: 0
 11628  012356  0100               	movlb	0	; () banked
 11629  012358  EE20 F005          	lfsr	2,5
 11630  01235C  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11631  01235E  26D9               	addwf	fsr2l,f,c
 11632  012360  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11633  012362  22DA               	addwfc	fsr2h,f,c
 11634  012364  50DF               	movf	indf2,w,c
 11635  012366  0100               	movlb	0	; () banked
 11636  012368  6FBB               	movwf	month_length@month& (0+255),b
 11637  01236A  0100               	movlb	0	; () banked
 11638  01236C  EE20 F006          	lfsr	2,6
 11639  012370  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11640  012372  26D9               	addwf	fsr2l,f,c
 11641  012374  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11642  012376  22DA               	addwfc	fsr2h,f,c
 11643  012378  50DF               	movf	indf2,w,c
 11644  01237A  EC2C  F0A2         	call	_month_length
 11645  01237E  0100               	movlb	0	; () banked
 11646  012380  6FEE               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 11647  012382  0100               	movlb	0	; () banked
 11648  012384  51EE               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
 11649  012386  0100               	movlb	0	; () banked
 11650  012388  6FC2               	movwf	___lmul@multiplier& (0+255),b
 11651  01238A  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 11652  01238C  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 11653  01238E  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 11654  012390  0E80               	movlw	128
 11655  012392  0100               	movlb	0	; () banked
 11656  012394  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 11657  012396  0E51               	movlw	81
 11658  012398  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11659  01239A  0E01               	movlw	1
 11660  01239C  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11661  01239E  0E00               	movlw	0
 11662  0123A0  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11663  0123A2  EC69  F0AE         	call	___lmul	;wreg free
 11664  0123A6  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11665  0123AA  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11666  0123AE  0100               	movlb	0	; () banked
 11667  0123B0  51C2               	movf	?___lmul& (0+255),w,b
 11668  0123B2  26DE               	addwf	postinc2,f,c
 11669  0123B4  0100               	movlb	0	; () banked
 11670  0123B6  51C3               	movf	(?___lmul+1)& (0+255),w,b
 11671  0123B8  22DE               	addwfc	postinc2,f,c
 11672  0123BA  0100               	movlb	0	; () banked
 11673  0123BC  51C4               	movf	(?___lmul+2)& (0+255),w,b
 11674  0123BE  22DE               	addwfc	postinc2,f,c
 11675  0123C0  0100               	movlb	0	; () banked
 11676  0123C2  51C5               	movf	(?___lmul+3)& (0+255),w,b
 11677  0123C4  22DE               	addwfc	postinc2,f,c
 11678  0123C6                     l10092:
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.YY) {
 11682  0123C6  0100               	movlb	0	; () banked
 11683  0123C8  AB98               	btfss	_edit_flag& (0+255),5,b
 11684  0123CA  D088               	goto	l10114
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;My_header\My_RTCC.h: 329: for (uint8_t i = ct->MM; i <= 12; i++) {
 11688  0123CC  0100               	movlb	0	; () banked
 11689  0123CE  EE20 F005          	lfsr	2,5
 11690  0123D2  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11691  0123D4  26D9               	addwf	fsr2l,f,c
 11692  0123D6  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11693  0123D8  22DA               	addwfc	fsr2h,f,c
 11694  0123DA  50DF               	movf	indf2,w,c
 11695  0123DC  0100               	movlb	0	; () banked
 11696  0123DE  6FF3               	movwf	RTCC_adjust_time_inc@i& (0+255),b
 11697  0123E0                     l10096:
 11698                           
 11699                           ; BSR set to: 0
 11700  0123E0  0E0C               	movlw	12
 11701  0123E2  0100               	movlb	0	; () banked
 11702  0123E4  65F3               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
 11703  0123E6  D001               	goto	l10100
 11704  0123E8  D033               	goto	l10106
 11705  0123EA                     l10100:
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;My_header\My_RTCC.h: 330: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
 11709  0123EA  C0F3  F0BB         	movff	RTCC_adjust_time_inc@i,month_length@month
 11710  0123EE  0100               	movlb	0	; () banked
 11711  0123F0  EE20 F006          	lfsr	2,6
 11712  0123F4  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11713  0123F6  26D9               	addwf	fsr2l,f,c
 11714  0123F8  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11715  0123FA  22DA               	addwfc	fsr2h,f,c
 11716  0123FC  50DF               	movf	indf2,w,c
 11717  0123FE  EC2C  F0A2         	call	_month_length
 11718  012402  0100               	movlb	0	; () banked
 11719  012404  6FEE               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 11720  012406  0100               	movlb	0	; () banked
 11721  012408  51EE               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
 11722  01240A  0100               	movlb	0	; () banked
 11723  01240C  6FC2               	movwf	___lmul@multiplier& (0+255),b
 11724  01240E  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 11725  012410  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 11726  012412  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 11727  012414  0E80               	movlw	128
 11728  012416  0100               	movlb	0	; () banked
 11729  012418  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 11730  01241A  0E51               	movlw	81
 11731  01241C  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11732  01241E  0E01               	movlw	1
 11733  012420  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11734  012422  0E00               	movlw	0
 11735  012424  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11736  012426  EC69  F0AE         	call	___lmul	;wreg free
 11737  01242A  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11738  01242E  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11739  012432  0100               	movlb	0	; () banked
 11740  012434  51C2               	movf	?___lmul& (0+255),w,b
 11741  012436  26DE               	addwf	postinc2,f,c
 11742  012438  0100               	movlb	0	; () banked
 11743  01243A  51C3               	movf	(?___lmul+1)& (0+255),w,b
 11744  01243C  22DE               	addwfc	postinc2,f,c
 11745  01243E  0100               	movlb	0	; () banked
 11746  012440  51C4               	movf	(?___lmul+2)& (0+255),w,b
 11747  012442  22DE               	addwfc	postinc2,f,c
 11748  012444  0100               	movlb	0	; () banked
 11749  012446  51C5               	movf	(?___lmul+3)& (0+255),w,b
 11750  012448  22DE               	addwfc	postinc2,f,c
 11751                           
 11752                           ; BSR set to: 0
 11753  01244A  0100               	movlb	0	; () banked
 11754  01244C  2BF3               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
 11755  01244E  D7C8               	goto	l10096
 11756  012450                     l10106:
 11757                           
 11758                           ; BSR set to: 0
 11759                           ;My_header\My_RTCC.h: 331: }
 11760                           ;My_header\My_RTCC.h: 332: for (uint8_t i = 1; i < ct->MM; i++) {
 11761  012450  0E01               	movlw	1
 11762  012452  0100               	movlb	0	; () banked
 11763  012454  6FF2               	movwf	RTCC_adjust_time_inc@i_2037& (0+255),b
 11764  012456  D036               	goto	l10112
 11765  012458                     l10108:
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;My_header\My_RTCC.h: 333: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
 11769  012458  C0F2  F0BB         	movff	RTCC_adjust_time_inc@i_2037,month_length@month
 11770  01245C  0100               	movlb	0	; () banked
 11771  01245E  EE20 F006          	lfsr	2,6
 11772  012462  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11773  012464  26D9               	addwf	fsr2l,f,c
 11774  012466  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11775  012468  22DA               	addwfc	fsr2h,f,c
 11776  01246A  50DF               	movf	indf2,w,c
 11777  01246C  0100               	movlb	0	; () banked
 11778  01246E  6FEE               	movwf	??_RTCC_adjust_time_inc& (0+255),b
 11779  012470  0100               	movlb	0	; () banked
 11780  012472  29EE               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
 11781  012474  EC2C  F0A2         	call	_month_length
 11782  012478  0100               	movlb	0	; () banked
 11783  01247A  6FEF               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
 11784  01247C  0100               	movlb	0	; () banked
 11785  01247E  51EF               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
 11786  012480  0100               	movlb	0	; () banked
 11787  012482  6FC2               	movwf	___lmul@multiplier& (0+255),b
 11788  012484  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 11789  012486  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 11790  012488  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 11791  01248A  0E80               	movlw	128
 11792  01248C  0100               	movlb	0	; () banked
 11793  01248E  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 11794  012490  0E51               	movlw	81
 11795  012492  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11796  012494  0E01               	movlw	1
 11797  012496  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11798  012498  0E00               	movlw	0
 11799  01249A  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11800  01249C  EC69  F0AE         	call	___lmul	;wreg free
 11801  0124A0  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11802  0124A4  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11803  0124A8  0100               	movlb	0	; () banked
 11804  0124AA  51C2               	movf	?___lmul& (0+255),w,b
 11805  0124AC  26DE               	addwf	postinc2,f,c
 11806  0124AE  0100               	movlb	0	; () banked
 11807  0124B0  51C3               	movf	(?___lmul+1)& (0+255),w,b
 11808  0124B2  22DE               	addwfc	postinc2,f,c
 11809  0124B4  0100               	movlb	0	; () banked
 11810  0124B6  51C4               	movf	(?___lmul+2)& (0+255),w,b
 11811  0124B8  22DE               	addwfc	postinc2,f,c
 11812  0124BA  0100               	movlb	0	; () banked
 11813  0124BC  51C5               	movf	(?___lmul+3)& (0+255),w,b
 11814  0124BE  22DE               	addwfc	postinc2,f,c
 11815                           
 11816                           ; BSR set to: 0
 11817  0124C0  0100               	movlb	0	; () banked
 11818  0124C2  2BF2               	incf	RTCC_adjust_time_inc@i_2037& (0+255),f,b
 11819  0124C4                     l10112:
 11820                           
 11821                           ; BSR set to: 0
 11822  0124C4  0100               	movlb	0	; () banked
 11823  0124C6  EE20 F005          	lfsr	2,5
 11824  0124CA  51EA               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
 11825  0124CC  26D9               	addwf	fsr2l,f,c
 11826  0124CE  51EB               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
 11827  0124D0  22DA               	addwfc	fsr2h,f,c
 11828  0124D2  50DE               	movf	postinc2,w,c
 11829  0124D4  0100               	movlb	0	; () banked
 11830  0124D6  5DF2               	subwf	RTCC_adjust_time_inc@i_2037& (0+255),w,b
 11831  0124D8  A0D8               	btfss	status,0,c
 11832  0124DA  D7BE               	goto	l10108
 11833  0124DC                     l10114:
 11834                           
 11835                           ; BSR set to: 0
 11836                           ;My_header\My_RTCC.h: 334: }
 11837                           ;My_header\My_RTCC.h: 335: }
 11838                           ;My_header\My_RTCC.h: 337: if (*ep >= 3155760000)*ep -= 3155760000;
 11839  0124DC  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11840  0124E0  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11841  0124E4  0E80               	movlw	128
 11842  0124E6  5CDE               	subwf	postinc2,w,c
 11843  0124E8  0E13               	movlw	19
 11844  0124EA  58DE               	subwfb	postinc2,w,c
 11845  0124EC  0E19               	movlw	25
 11846  0124EE  58DE               	subwfb	postinc2,w,c
 11847  0124F0  0EBC               	movlw	188
 11848  0124F2  58DE               	subwfb	postinc2,w,c
 11849  0124F4  A0D8               	btfss	status,0,c
 11850  0124F6  D00C               	goto	l10118
 11851                           
 11852                           ; BSR set to: 0
 11853  0124F8  C0EC  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
 11854  0124FC  C0ED  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
 11855  012500  0E80               	movlw	128
 11856  012502  5EDE               	subwf	postinc2,f,c
 11857  012504  0E13               	movlw	19
 11858  012506  5ADE               	subwfb	postinc2,f,c
 11859  012508  0E19               	movlw	25
 11860  01250A  5ADE               	subwfb	postinc2,f,c
 11861  01250C  0EBC               	movlw	188
 11862  01250E  5ADE               	subwfb	postinc2,f,c
 11863  012510                     l10118:
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;My_header\My_RTCC.h: 338: RTCC_from_epoch(&caltime_now, &epoch_now);
 11867  012510  0EA6               	movlw	low _caltime_now
 11868  012512  0100               	movlb	0	; () banked
 11869  012514  6FE6               	movwf	RTCC_from_epoch@ct& (0+255),b
 11870  012516  0E00               	movlw	high _caltime_now
 11871  012518  0100               	movlb	0	; () banked
 11872  01251A  6FE7               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
 11873  01251C  0EB1               	movlw	low _epoch_now
 11874  01251E  0100               	movlb	0	; () banked
 11875  012520  6FE8               	movwf	RTCC_from_epoch@ep& (0+255),b
 11876  012522  0E00               	movlw	high _epoch_now
 11877  012524  0100               	movlb	0	; () banked
 11878  012526  6FE9               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
 11879  012528  ECBF  F0B4         	call	_RTCC_from_epoch	;wreg free
 11880                           
 11881                           ;My_header\My_RTCC.h: 339: time_change_flag = 1;
 11882  01252C  0E01               	movlw	1
 11883  01252E  6E50               	movwf	_time_change_flag,c
 11884  012530  0012               	return		;funcret
 11885  012532                     __end_of_RTCC_adjust_time_inc:
 11886                           	opt stack 0
 11887                           tblptru	equ	0xFF8
 11888                           tblptrh	equ	0xFF7
 11889                           tblptrl	equ	0xFF6
 11890                           tablat	equ	0xFF5
 11891                           prodh	equ	0xFF4
 11892                           prodl	equ	0xFF3
 11893                           intcon	equ	0xFF2
 11894                           postinc0	equ	0xFEE
 11895                           wreg	equ	0xFE8
 11896                           indf1	equ	0xFE7
 11897                           postinc1	equ	0xFE6
 11898                           postdec1	equ	0xFE5
 11899                           fsr1h	equ	0xFE2
 11900                           fsr1l	equ	0xFE1
 11901                           indf2	equ	0xFDF
 11902                           postinc2	equ	0xFDE
 11903                           postdec2	equ	0xFDD
 11904                           fsr2h	equ	0xFDA
 11905                           fsr2l	equ	0xFD9
 11906                           status	equ	0xFD8
 11907                           
 11908 ;; *************** function _RTCC_adjust_time_dec *****************
 11909 ;; Defined at:
 11910 ;;		line 342 in file "../My_header\My_RTCC.h"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;  ct              2   53[BANK0 ] PTR struct .
 11913 ;;		 -> caltime_now(7), 
 11914 ;;  ep              2   55[BANK0 ] PTR unsigned long 
 11915 ;;		 -> epoch_now(4), 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  i               1   61[BANK0 ] unsigned char 
 11918 ;;  i               1   62[BANK0 ] unsigned char 
 11919 ;; Return value:  Size  Location     Type
 11920 ;;		None               void
 11921 ;; Registers used:
 11922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11931 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11932 ;;Total ram usage:       10 bytes
 11933 ;; Hardware stack levels used:    1
 11934 ;; Hardware stack levels required when called:   15
 11935 ;; This function calls:
 11936 ;;		_RTCC_from_RTCC
 11937 ;;		_RTCC_from_epoch
 11938 ;;		___lmul
 11939 ;;		_month_length
 11940 ;; This function is called by:
 11941 ;;		_RTCC_adjust_time_button
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           	psect	text34
 11946  012532                     __ptext34:
 11947                           	opt stack 0
 11948  012532                     _RTCC_adjust_time_dec:
 11949                           	opt stack 13
 11950                           
 11951                           ;My_header\My_RTCC.h: 343: RTCC_from_RTCC(ct, ep);
 11952                           
 11953                           ;incstack = 0
 11954  012532  C0EA  F0DD         	movff	RTCC_adjust_time_dec@ct,RTCC_from_RTCC@ct
 11955  012536  C0EB  F0DE         	movff	RTCC_adjust_time_dec@ct+1,RTCC_from_RTCC@ct+1
 11956  01253A  C0EC  F0DF         	movff	RTCC_adjust_time_dec@ep,RTCC_from_RTCC@ep
 11957  01253E  C0ED  F0E0         	movff	RTCC_adjust_time_dec@ep+1,RTCC_from_RTCC@ep+1
 11958  012542  ECD0  F0B4         	call	_RTCC_from_RTCC	;wreg free
 11959                           
 11960                           ;My_header\My_RTCC.h: 344: if (edit_flag.flag.ss) *ep -= 1;
 11961  012546  0100               	movlb	0	; () banked
 11962  012548  A198               	btfss	_edit_flag& (0+255),0,b
 11963  01254A  D009               	goto	l10128
 11964                           
 11965                           ; BSR set to: 0
 11966  01254C  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11967  012550  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11968  012554  06DE               	decf	postinc2,f,c
 11969  012556  0E00               	movlw	0
 11970  012558  5ADE               	subwfb	postinc2,f,c
 11971  01255A  5ADE               	subwfb	postinc2,f,c
 11972  01255C  5ADE               	subwfb	postinc2,f,c
 11973  01255E                     l10128:
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;My_header\My_RTCC.h: 345: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
 11977  01255E  0100               	movlb	0	; () banked
 11978  012560  A398               	btfss	_edit_flag& (0+255),1,b
 11979  012562  D00A               	goto	l10132
 11980                           
 11981                           ; BSR set to: 0
 11982  012564  0E3C               	movlw	60
 11983  012566  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 11984  01256A  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 11985  01256E  5EDE               	subwf	postinc2,f,c
 11986  012570  0E00               	movlw	0
 11987  012572  5ADE               	subwfb	postinc2,f,c
 11988  012574  5ADE               	subwfb	postinc2,f,c
 11989  012576  5ADE               	subwfb	postinc2,f,c
 11990  012578                     l10132:
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;My_header\My_RTCC.h: 346: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
 11994  012578  0100               	movlb	0	; () banked
 11995  01257A  A598               	btfss	_edit_flag& (0+255),2,b
 11996  01257C  D00C               	goto	l10136
 11997                           
 11998                           ; BSR set to: 0
 11999  01257E  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 12000  012582  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 12001  012586  0E10               	movlw	16
 12002  012588  5EDE               	subwf	postinc2,f,c
 12003  01258A  0E0E               	movlw	14
 12004  01258C  5ADE               	subwfb	postinc2,f,c
 12005  01258E  0E00               	movlw	0
 12006  012590  5ADE               	subwfb	postinc2,f,c
 12007  012592  0E00               	movlw	0
 12008  012594  5ADE               	subwfb	postinc2,f,c
 12009  012596                     l10136:
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;My_header\My_RTCC.h: 347: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
 12013  012596  0100               	movlb	0	; () banked
 12014  012598  A798               	btfss	_edit_flag& (0+255),3,b
 12015  01259A  D00C               	goto	l10140
 12016                           
 12017                           ; BSR set to: 0
 12018  01259C  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 12019  0125A0  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 12020  0125A4  0E80               	movlw	128
 12021  0125A6  5EDE               	subwf	postinc2,f,c
 12022  0125A8  0E51               	movlw	81
 12023  0125AA  5ADE               	subwfb	postinc2,f,c
 12024  0125AC  0E01               	movlw	1
 12025  0125AE  5ADE               	subwfb	postinc2,f,c
 12026  0125B0  0E00               	movlw	0
 12027  0125B2  5ADE               	subwfb	postinc2,f,c
 12028  0125B4                     l10140:
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;My_header\My_RTCC.h: 348: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
 12032  0125B4  0100               	movlb	0	; () banked
 12033  0125B6  A998               	btfss	_edit_flag& (0+255),4,b
 12034  0125B8  D038               	goto	l10144
 12035                           
 12036                           ; BSR set to: 0
 12037  0125BA  0100               	movlb	0	; () banked
 12038  0125BC  EE20 F005          	lfsr	2,5
 12039  0125C0  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 12040  0125C2  26D9               	addwf	fsr2l,f,c
 12041  0125C4  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 12042  0125C6  22DA               	addwfc	fsr2h,f,c
 12043  0125C8  50DF               	movf	indf2,w,c
 12044  0125CA  0100               	movlb	0	; () banked
 12045  0125CC  6FBB               	movwf	month_length@month& (0+255),b
 12046  0125CE  0100               	movlb	0	; () banked
 12047  0125D0  EE20 F006          	lfsr	2,6
 12048  0125D4  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 12049  0125D6  26D9               	addwf	fsr2l,f,c
 12050  0125D8  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 12051  0125DA  22DA               	addwfc	fsr2h,f,c
 12052  0125DC  50DF               	movf	indf2,w,c
 12053  0125DE  EC2C  F0A2         	call	_month_length
 12054  0125E2  0100               	movlb	0	; () banked
 12055  0125E4  6FEE               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 12056  0125E6  0100               	movlb	0	; () banked
 12057  0125E8  51EE               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
 12058  0125EA  0100               	movlb	0	; () banked
 12059  0125EC  6FC2               	movwf	___lmul@multiplier& (0+255),b
 12060  0125EE  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 12061  0125F0  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 12062  0125F2  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 12063  0125F4  0E80               	movlw	128
 12064  0125F6  0100               	movlb	0	; () banked
 12065  0125F8  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 12066  0125FA  0E51               	movlw	81
 12067  0125FC  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12068  0125FE  0E01               	movlw	1
 12069  012600  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12070  012602  0E00               	movlw	0
 12071  012604  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12072  012606  EC69  F0AE         	call	___lmul	;wreg free
 12073  01260A  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 12074  01260E  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 12075  012612  0100               	movlb	0	; () banked
 12076  012614  51C2               	movf	?___lmul& (0+255),w,b
 12077  012616  5EDE               	subwf	postinc2,f,c
 12078  012618  0100               	movlb	0	; () banked
 12079  01261A  51C3               	movf	(?___lmul+1)& (0+255),w,b
 12080  01261C  5ADE               	subwfb	postinc2,f,c
 12081  01261E  0100               	movlb	0	; () banked
 12082  012620  51C4               	movf	(?___lmul+2)& (0+255),w,b
 12083  012622  5ADE               	subwfb	postinc2,f,c
 12084  012624  0100               	movlb	0	; () banked
 12085  012626  51C5               	movf	(?___lmul+3)& (0+255),w,b
 12086  012628  5ADE               	subwfb	postinc2,f,c
 12087  01262A                     l10144:
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;My_header\My_RTCC.h: 349: if (edit_flag.flag.YY) {
 12091  01262A  0100               	movlb	0	; () banked
 12092  01262C  AB98               	btfss	_edit_flag& (0+255),5,b
 12093  01262E  D088               	goto	l10166
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;My_header\My_RTCC.h: 350: for (uint8_t i = ct->MM; i >= 1; i--) {
 12097  012630  0100               	movlb	0	; () banked
 12098  012632  EE20 F005          	lfsr	2,5
 12099  012636  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 12100  012638  26D9               	addwf	fsr2l,f,c
 12101  01263A  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 12102  01263C  22DA               	addwfc	fsr2h,f,c
 12103  01263E  50DF               	movf	indf2,w,c
 12104  012640  0100               	movlb	0	; () banked
 12105  012642  6FF3               	movwf	RTCC_adjust_time_dec@i& (0+255),b
 12106  012644                     l10148:
 12107                           
 12108                           ; BSR set to: 0
 12109  012644  0100               	movlb	0	; () banked
 12110  012646  51F3               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
 12111  012648  0100               	movlb	0	; () banked
 12112  01264A  B4D8               	btfsc	status,2,c
 12113  01264C  D033               	goto	l10158
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;My_header\My_RTCC.h: 351: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
 12117                           
 12118                           ; BSR set to: 0
 12119                           
 12120                           ; BSR set to: 0
 12121  01264E  C0F3  F0BB         	movff	RTCC_adjust_time_dec@i,month_length@month
 12122  012652  0100               	movlb	0	; () banked
 12123  012654  EE20 F006          	lfsr	2,6
 12124  012658  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 12125  01265A  26D9               	addwf	fsr2l,f,c
 12126  01265C  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 12127  01265E  22DA               	addwfc	fsr2h,f,c
 12128  012660  50DF               	movf	indf2,w,c
 12129  012662  EC2C  F0A2         	call	_month_length
 12130  012666  0100               	movlb	0	; () banked
 12131  012668  6FEE               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 12132  01266A  0100               	movlb	0	; () banked
 12133  01266C  51EE               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
 12134  01266E  0100               	movlb	0	; () banked
 12135  012670  6FC2               	movwf	___lmul@multiplier& (0+255),b
 12136  012672  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 12137  012674  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 12138  012676  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 12139  012678  0E80               	movlw	128
 12140  01267A  0100               	movlb	0	; () banked
 12141  01267C  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 12142  01267E  0E51               	movlw	81
 12143  012680  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12144  012682  0E01               	movlw	1
 12145  012684  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12146  012686  0E00               	movlw	0
 12147  012688  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12148  01268A  EC69  F0AE         	call	___lmul	;wreg free
 12149  01268E  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 12150  012692  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 12151  012696  0100               	movlb	0	; () banked
 12152  012698  51C2               	movf	?___lmul& (0+255),w,b
 12153  01269A  5EDE               	subwf	postinc2,f,c
 12154  01269C  0100               	movlb	0	; () banked
 12155  01269E  51C3               	movf	(?___lmul+1)& (0+255),w,b
 12156  0126A0  5ADE               	subwfb	postinc2,f,c
 12157  0126A2  0100               	movlb	0	; () banked
 12158  0126A4  51C4               	movf	(?___lmul+2)& (0+255),w,b
 12159  0126A6  5ADE               	subwfb	postinc2,f,c
 12160  0126A8  0100               	movlb	0	; () banked
 12161  0126AA  51C5               	movf	(?___lmul+3)& (0+255),w,b
 12162  0126AC  5ADE               	subwfb	postinc2,f,c
 12163                           
 12164                           ; BSR set to: 0
 12165  0126AE  0100               	movlb	0	; () banked
 12166  0126B0  07F3               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
 12167  0126B2  D7C8               	goto	l10148
 12168  0126B4                     l10158:
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;My_header\My_RTCC.h: 352: }
 12172                           ;My_header\My_RTCC.h: 353: for (uint8_t i = 12; i > ct->MM; i--) {
 12173  0126B4  0E0C               	movlw	12
 12174  0126B6  0100               	movlb	0	; () banked
 12175  0126B8  6FF2               	movwf	RTCC_adjust_time_dec@i_2050& (0+255),b
 12176  0126BA  D036               	goto	l10164
 12177  0126BC                     l10160:
 12178                           
 12179                           ; BSR set to: 0
 12180                           ;My_header\My_RTCC.h: 354: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
 12181  0126BC  C0F2  F0BB         	movff	RTCC_adjust_time_dec@i_2050,month_length@month
 12182  0126C0  0100               	movlb	0	; () banked
 12183  0126C2  EE20 F006          	lfsr	2,6
 12184  0126C6  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 12185  0126C8  26D9               	addwf	fsr2l,f,c
 12186  0126CA  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 12187  0126CC  22DA               	addwfc	fsr2h,f,c
 12188  0126CE  50DF               	movf	indf2,w,c
 12189  0126D0  0100               	movlb	0	; () banked
 12190  0126D2  6FEE               	movwf	??_RTCC_adjust_time_dec& (0+255),b
 12191  0126D4  0100               	movlb	0	; () banked
 12192  0126D6  05EE               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
 12193  0126D8  EC2C  F0A2         	call	_month_length
 12194  0126DC  0100               	movlb	0	; () banked
 12195  0126DE  6FEF               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
 12196  0126E0  0100               	movlb	0	; () banked
 12197  0126E2  51EF               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
 12198  0126E4  0100               	movlb	0	; () banked
 12199  0126E6  6FC2               	movwf	___lmul@multiplier& (0+255),b
 12200  0126E8  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 12201  0126EA  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 12202  0126EC  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 12203  0126EE  0E80               	movlw	128
 12204  0126F0  0100               	movlb	0	; () banked
 12205  0126F2  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 12206  0126F4  0E51               	movlw	81
 12207  0126F6  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12208  0126F8  0E01               	movlw	1
 12209  0126FA  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12210  0126FC  0E00               	movlw	0
 12211  0126FE  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12212  012700  EC69  F0AE         	call	___lmul	;wreg free
 12213  012704  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 12214  012708  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 12215  01270C  0100               	movlb	0	; () banked
 12216  01270E  51C2               	movf	?___lmul& (0+255),w,b
 12217  012710  5EDE               	subwf	postinc2,f,c
 12218  012712  0100               	movlb	0	; () banked
 12219  012714  51C3               	movf	(?___lmul+1)& (0+255),w,b
 12220  012716  5ADE               	subwfb	postinc2,f,c
 12221  012718  0100               	movlb	0	; () banked
 12222  01271A  51C4               	movf	(?___lmul+2)& (0+255),w,b
 12223  01271C  5ADE               	subwfb	postinc2,f,c
 12224  01271E  0100               	movlb	0	; () banked
 12225  012720  51C5               	movf	(?___lmul+3)& (0+255),w,b
 12226  012722  5ADE               	subwfb	postinc2,f,c
 12227                           
 12228                           ; BSR set to: 0
 12229  012724  0100               	movlb	0	; () banked
 12230  012726  07F2               	decf	RTCC_adjust_time_dec@i_2050& (0+255),f,b
 12231  012728                     l10164:
 12232                           
 12233                           ; BSR set to: 0
 12234  012728  0100               	movlb	0	; () banked
 12235  01272A  EE20 F005          	lfsr	2,5
 12236  01272E  51EA               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
 12237  012730  26D9               	addwf	fsr2l,f,c
 12238  012732  51EB               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
 12239  012734  22DA               	addwfc	fsr2h,f,c
 12240  012736  0100               	movlb	0	; () banked
 12241  012738  51F2               	movf	RTCC_adjust_time_dec@i_2050& (0+255),w,b
 12242  01273A  5CDE               	subwf	postinc2,w,c
 12243  01273C  A0D8               	btfss	status,0,c
 12244  01273E  D7BE               	goto	l10160
 12245  012740                     l10166:
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;My_header\My_RTCC.h: 355: }
 12249                           ;My_header\My_RTCC.h: 356: }
 12250                           ;My_header\My_RTCC.h: 358: if (*ep >= 3155760000)*ep += 3155760000;
 12251  012740  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 12252  012744  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 12253  012748  0E80               	movlw	128
 12254  01274A  5CDE               	subwf	postinc2,w,c
 12255  01274C  0E13               	movlw	19
 12256  01274E  58DE               	subwfb	postinc2,w,c
 12257  012750  0E19               	movlw	25
 12258  012752  58DE               	subwfb	postinc2,w,c
 12259  012754  0EBC               	movlw	188
 12260  012756  58DE               	subwfb	postinc2,w,c
 12261  012758  A0D8               	btfss	status,0,c
 12262  01275A  D00C               	goto	l10170
 12263                           
 12264                           ; BSR set to: 0
 12265  01275C  C0EC  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
 12266  012760  C0ED  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
 12267  012764  0E80               	movlw	128
 12268  012766  26DE               	addwf	postinc2,f,c
 12269  012768  0E13               	movlw	19
 12270  01276A  22DE               	addwfc	postinc2,f,c
 12271  01276C  0E19               	movlw	25
 12272  01276E  22DE               	addwfc	postinc2,f,c
 12273  012770  0EBC               	movlw	188
 12274  012772  22DE               	addwfc	postinc2,f,c
 12275  012774                     l10170:
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;My_header\My_RTCC.h: 359: RTCC_from_epoch(&caltime_now, &epoch_now);
 12279  012774  0EA6               	movlw	low _caltime_now
 12280  012776  0100               	movlb	0	; () banked
 12281  012778  6FE6               	movwf	RTCC_from_epoch@ct& (0+255),b
 12282  01277A  0E00               	movlw	high _caltime_now
 12283  01277C  0100               	movlb	0	; () banked
 12284  01277E  6FE7               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
 12285  012780  0EB1               	movlw	low _epoch_now
 12286  012782  0100               	movlb	0	; () banked
 12287  012784  6FE8               	movwf	RTCC_from_epoch@ep& (0+255),b
 12288  012786  0E00               	movlw	high _epoch_now
 12289  012788  0100               	movlb	0	; () banked
 12290  01278A  6FE9               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
 12291  01278C  ECBF  F0B4         	call	_RTCC_from_epoch	;wreg free
 12292                           
 12293                           ;My_header\My_RTCC.h: 360: time_change_flag = 1;
 12294  012790  0E01               	movlw	1
 12295  012792  6E50               	movwf	_time_change_flag,c
 12296  012794  0012               	return		;funcret
 12297  012796                     __end_of_RTCC_adjust_time_dec:
 12298                           	opt stack 0
 12299                           tblptru	equ	0xFF8
 12300                           tblptrh	equ	0xFF7
 12301                           tblptrl	equ	0xFF6
 12302                           tablat	equ	0xFF5
 12303                           prodh	equ	0xFF4
 12304                           prodl	equ	0xFF3
 12305                           intcon	equ	0xFF2
 12306                           postinc0	equ	0xFEE
 12307                           wreg	equ	0xFE8
 12308                           indf1	equ	0xFE7
 12309                           postinc1	equ	0xFE6
 12310                           postdec1	equ	0xFE5
 12311                           fsr1h	equ	0xFE2
 12312                           fsr1l	equ	0xFE1
 12313                           indf2	equ	0xFDF
 12314                           postinc2	equ	0xFDE
 12315                           postdec2	equ	0xFDD
 12316                           fsr2h	equ	0xFDA
 12317                           fsr2l	equ	0xFD9
 12318                           status	equ	0xFD8
 12319                           
 12320 ;; *************** function _RTCC_from_epoch *****************
 12321 ;; Defined at:
 12322 ;;		line 242 in file "../My_header\My_RTCC.h"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;  ct              2   49[BANK0 ] PTR struct .
 12325 ;;		 -> caltime_now(7), 
 12326 ;;  ep              2   51[BANK0 ] PTR unsigned long 
 12327 ;;		 -> epoch_now(4), 
 12328 ;; Auto vars:     Size  Location     Type
 12329 ;;		None
 12330 ;; Return value:  Size  Location     Type
 12331 ;;		None               void
 12332 ;; Registers used:
 12333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12334 ;; Tracked objects:
 12335 ;;		On entry : 0/0
 12336 ;;		On exit  : 0/0
 12337 ;;		Unchanged: 0/0
 12338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12342 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12343 ;;Total ram usage:        4 bytes
 12344 ;; Hardware stack levels used:    1
 12345 ;; Hardware stack levels required when called:   14
 12346 ;; This function calls:
 12347 ;;		_caltime_to_RTCC
 12348 ;;		_epoch_to_caltime
 12349 ;; This function is called by:
 12350 ;;		_RTCC_adjust_time_inc
 12351 ;;		_RTCC_adjust_time_dec
 12352 ;;		_main
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text35
 12357  01697E                     __ptext35:
 12358                           	opt stack 0
 12359  01697E                     _RTCC_from_epoch:
 12360                           	opt stack 13
 12361                           
 12362                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
 12363                           
 12364                           ;incstack = 0
 12365  01697E  C0E6  F0D6         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
 12366  016982  C0E7  F0D7         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
 12367  016986  C0E8  F0D8         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
 12368  01698A  C0E9  F0D9         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
 12369  01698E  ECCB  F093         	call	_epoch_to_caltime	;wreg free
 12370                           
 12371                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
 12372  016992  C0E6  F0BE         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
 12373  016996  C0E7  F0BF         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
 12374  01699A  ECB2  F0A4         	call	_caltime_to_RTCC	;wreg free
 12375  01699E  0012               	return		;funcret
 12376  0169A0                     __end_of_RTCC_from_epoch:
 12377                           	opt stack 0
 12378                           tblptru	equ	0xFF8
 12379                           tblptrh	equ	0xFF7
 12380                           tblptrl	equ	0xFF6
 12381                           tablat	equ	0xFF5
 12382                           prodh	equ	0xFF4
 12383                           prodl	equ	0xFF3
 12384                           intcon	equ	0xFF2
 12385                           postinc0	equ	0xFEE
 12386                           wreg	equ	0xFE8
 12387                           indf1	equ	0xFE7
 12388                           postinc1	equ	0xFE6
 12389                           postdec1	equ	0xFE5
 12390                           fsr1h	equ	0xFE2
 12391                           fsr1l	equ	0xFE1
 12392                           indf2	equ	0xFDF
 12393                           postinc2	equ	0xFDE
 12394                           postdec2	equ	0xFDD
 12395                           fsr2h	equ	0xFDA
 12396                           fsr2l	equ	0xFD9
 12397                           status	equ	0xFD8
 12398                           
 12399 ;; *************** function _epoch_to_caltime *****************
 12400 ;; Defined at:
 12401 ;;		line 157 in file "../My_header\My_RTCC.h"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  ct              2   33[BANK0 ] PTR struct .
 12404 ;;		 -> caltime_now(7), 
 12405 ;;  ep              2   35[BANK0 ] PTR unsigned long 
 12406 ;;		 -> epoch_now(4), 
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;  num             4   45[BANK0 ] unsigned long 
 12409 ;;  day             2   41[BANK0 ] unsigned int 
 12410 ;;  day_since_ep    2   39[BANK0 ] unsigned int 
 12411 ;;  month           1   44[BANK0 ] unsigned char 
 12412 ;;  year            1   43[BANK0 ] unsigned char 
 12413 ;; Return value:  Size  Location     Type
 12414 ;;		None               void
 12415 ;; Registers used:
 12416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12417 ;; Tracked objects:
 12418 ;;		On entry : 0/0
 12419 ;;		On exit  : 0/0
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12423 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12425 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12426 ;;Total ram usage:       16 bytes
 12427 ;; Hardware stack levels used:    1
 12428 ;; Hardware stack levels required when called:   13
 12429 ;; This function calls:
 12430 ;;		_get_quot_rem
 12431 ;;		_month_length
 12432 ;; This function is called by:
 12433 ;;		_RTCC_from_caltime
 12434 ;;		_RTCC_from_epoch
 12435 ;; This function uses a non-reentrant model
 12436 ;;
 12437                           
 12438                           	psect	text36
 12439  012796                     __ptext36:
 12440                           	opt stack 0
 12441  012796                     _epoch_to_caltime:
 12442                           	opt stack 13
 12443                           
 12444                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
 12445                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
 12446                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
 12447                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
 12448                           ;My_header\My_RTCC.h: 164: uint16_t day;
 12449                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
 12450                           
 12451                           ;incstack = 0
 12452  012796  0E00               	movlw	0
 12453  012798  0100               	movlb	0	; () banked
 12454  01279A  6FE0               	movwf	epoch_to_caltime@year& (0+255),b
 12455                           
 12456                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
 12457  01279C  0E01               	movlw	1
 12458  01279E  0100               	movlb	0	; () banked
 12459  0127A0  6FE1               	movwf	epoch_to_caltime@month& (0+255),b
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;My_header\My_RTCC.h: 167: epoch_t num;
 12463                           ;My_header\My_RTCC.h: 169: num = *ep;
 12464  0127A2  C0D8  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 12465  0127A6  C0D9  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 12466  0127AA  CFDE F0E2          	movff	postinc2,epoch_to_caltime@num
 12467  0127AE  CFDE F0E3          	movff	postinc2,epoch_to_caltime@num+1
 12468  0127B2  CFDE F0E4          	movff	postinc2,epoch_to_caltime@num+2
 12469  0127B6  CFDE F0E5          	movff	postinc2,epoch_to_caltime@num+3
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
 12473  0127BA  0EE2               	movlw	low epoch_to_caltime@num
 12474  0127BC  0100               	movlb	0	; () banked
 12475  0127BE  6FCE               	movwf	get_quot_rem@quot& (0+255),b
 12476  0127C0  0E00               	movlw	high epoch_to_caltime@num
 12477  0127C2  0100               	movlb	0	; () banked
 12478  0127C4  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12479  0127C6  0E3C               	movlw	60
 12480  0127C8  0100               	movlb	0	; () banked
 12481  0127CA  6FD0               	movwf	get_quot_rem@div& (0+255),b
 12482  0127CC  ECDE  F0A3         	call	_get_quot_rem	;wreg free
 12483  0127D0  0100               	movlb	0	; () banked
 12484  0127D2  51CE               	movf	?_get_quot_rem& (0+255),w,b
 12485  0127D4  C0D6  FFD9         	movff	epoch_to_caltime@ct,fsr2l
 12486  0127D8  C0D7  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
 12487  0127DC  6EDF               	movwf	indf2,c
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
 12491  0127DE  0EE2               	movlw	low epoch_to_caltime@num
 12492  0127E0  0100               	movlb	0	; () banked
 12493  0127E2  6FCE               	movwf	get_quot_rem@quot& (0+255),b
 12494  0127E4  0E00               	movlw	high epoch_to_caltime@num
 12495  0127E6  0100               	movlb	0	; () banked
 12496  0127E8  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12497  0127EA  0E3C               	movlw	60
 12498  0127EC  0100               	movlb	0	; () banked
 12499  0127EE  6FD0               	movwf	get_quot_rem@div& (0+255),b
 12500  0127F0  ECDE  F0A3         	call	_get_quot_rem	;wreg free
 12501  0127F4  0100               	movlb	0	; () banked
 12502  0127F6  EE20 F001          	lfsr	2,1
 12503  0127FA  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12504  0127FC  26D9               	addwf	fsr2l,f,c
 12505  0127FE  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12506  012800  22DA               	addwfc	fsr2h,f,c
 12507  012802  0100               	movlb	0	; () banked
 12508  012804  C0CE  FFDF         	movff	?_get_quot_rem,indf2
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
 12512  012808  0EE2               	movlw	low epoch_to_caltime@num
 12513  01280A  0100               	movlb	0	; () banked
 12514  01280C  6FCE               	movwf	get_quot_rem@quot& (0+255),b
 12515  01280E  0E00               	movlw	high epoch_to_caltime@num
 12516  012810  0100               	movlb	0	; () banked
 12517  012812  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12518  012814  0E18               	movlw	24
 12519  012816  0100               	movlb	0	; () banked
 12520  012818  6FD0               	movwf	get_quot_rem@div& (0+255),b
 12521  01281A  ECDE  F0A3         	call	_get_quot_rem	;wreg free
 12522  01281E  0100               	movlb	0	; () banked
 12523  012820  EE20 F002          	lfsr	2,2
 12524  012824  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12525  012826  26D9               	addwf	fsr2l,f,c
 12526  012828  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12527  01282A  22DA               	addwfc	fsr2h,f,c
 12528  01282C  0100               	movlb	0	; () banked
 12529  01282E  C0CE  FFDF         	movff	?_get_quot_rem,indf2
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;My_header\My_RTCC.h: 173: day = num;
 12533  012832  C0E2  F0DE         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 12534  012836  C0E3  F0DF         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
 12538  01283A  C0DE  F0DC         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 12539  01283E  C0DF  F0DD         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;My_header\My_RTCC.h: 176: num += 6;
 12543  012842  0E06               	movlw	6
 12544  012844  0100               	movlb	0	; () banked
 12545  012846  27E2               	addwf	epoch_to_caltime@num& (0+255),f,b
 12546  012848  0E00               	movlw	0
 12547  01284A  23E3               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 12548  01284C  23E4               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 12549  01284E  23E5               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
 12553  012850  0EE2               	movlw	low epoch_to_caltime@num
 12554  012852  0100               	movlb	0	; () banked
 12555  012854  6FCE               	movwf	get_quot_rem@quot& (0+255),b
 12556  012856  0E00               	movlw	high epoch_to_caltime@num
 12557  012858  0100               	movlb	0	; () banked
 12558  01285A  6FCF               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12559  01285C  0E07               	movlw	7
 12560  01285E  0100               	movlb	0	; () banked
 12561  012860  6FD0               	movwf	get_quot_rem@div& (0+255),b
 12562  012862  ECDE  F0A3         	call	_get_quot_rem	;wreg free
 12563  012866  0100               	movlb	0	; () banked
 12564  012868  EE20 F003          	lfsr	2,3
 12565  01286C  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12566  01286E  26D9               	addwf	fsr2l,f,c
 12567  012870  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12568  012872  22DA               	addwfc	fsr2h,f,c
 12569  012874  0100               	movlb	0	; () banked
 12570  012876  C0CE  FFDF         	movff	?_get_quot_rem,indf2
 12571                           
 12572                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
 12573  01287A  D03F               	goto	l9734
 12574  01287C                     l453:
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
 12578  01287C  848A               	bsf	3978,2,c	;volatile
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
 12582  01287E  C0E1  F0BB         	movff	epoch_to_caltime@month,month_length@month
 12583  012882  0100               	movlb	0	; () banked
 12584  012884  51E0               	movf	epoch_to_caltime@year& (0+255),w,b
 12585  012886  EC2C  F0A2         	call	_month_length
 12586  01288A  0100               	movlb	0	; () banked
 12587  01288C  6FDA               	movwf	??_epoch_to_caltime& (0+255),b
 12588  01288E  6BDB               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 12589  012890  0100               	movlb	0	; () banked
 12590  012892  1FDA               	comf	??_epoch_to_caltime& (0+255),f,b
 12591  012894  1FDB               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 12592  012896  4BDA               	infsnz	??_epoch_to_caltime& (0+255),f,b
 12593  012898  2BDB               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 12594  01289A  0100               	movlb	0	; () banked
 12595  01289C  51DE               	movf	epoch_to_caltime@day& (0+255),w,b
 12596  01289E  0100               	movlb	0	; () banked
 12597  0128A0  25DA               	addwf	??_epoch_to_caltime& (0+255),w,b
 12598  0128A2  0100               	movlb	0	; () banked
 12599  0128A4  6FDE               	movwf	epoch_to_caltime@day& (0+255),b
 12600  0128A6  0100               	movlb	0	; () banked
 12601  0128A8  51DF               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 12602  0128AA  0100               	movlb	0	; () banked
 12603  0128AC  21DB               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 12604  0128AE  0100               	movlb	0	; () banked
 12605  0128B0  6FDF               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;My_header\My_RTCC.h: 189: if (month == 12) {
 12609  0128B2  0E0C               	movlw	12
 12610  0128B4  0100               	movlb	0	; () banked
 12611  0128B6  19E1               	xorwf	epoch_to_caltime@month& (0+255),w,b
 12612  0128B8  A4D8               	btfss	status,2,c
 12613  0128BA  D019               	goto	l9728
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;My_header\My_RTCC.h: 190: month = 1;
 12617  0128BC  0E01               	movlw	1
 12618  0128BE  0100               	movlb	0	; () banked
 12619  0128C0  6FE1               	movwf	epoch_to_caltime@month& (0+255),b
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;My_header\My_RTCC.h: 191: year++;
 12623  0128C2  0100               	movlb	0	; () banked
 12624  0128C4  2BE0               	incf	epoch_to_caltime@year& (0+255),f,b
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
 12628  0128C6  0E63               	movlw	99
 12629  0128C8  0100               	movlb	0	; () banked
 12630  0128CA  65E0               	cpfsgt	epoch_to_caltime@year& (0+255),b
 12631  0128CC  D012               	goto	l9730
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
 12635  0128CE  C0D8  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 12636  0128D2  C0D9  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 12637  0128D6  0E80               	movlw	128
 12638  0128D8  5EDE               	subwf	postinc2,f,c
 12639  0128DA  0E13               	movlw	19
 12640  0128DC  5ADE               	subwfb	postinc2,f,c
 12641  0128DE  0E19               	movlw	25
 12642  0128E0  5ADE               	subwfb	postinc2,f,c
 12643  0128E2  0EBC               	movlw	188
 12644  0128E4  5ADE               	subwfb	postinc2,f,c
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;My_header\My_RTCC.h: 195: year = 0;
 12648  0128E6  0E00               	movlw	0
 12649  0128E8  0100               	movlb	0	; () banked
 12650  0128EA  6FE0               	movwf	epoch_to_caltime@year& (0+255),b
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;My_header\My_RTCC.h: 196: }
 12654                           ;My_header\My_RTCC.h: 197: } else {
 12655  0128EC  D002               	goto	l9730
 12656  0128EE                     l9728:
 12657                           
 12658                           ; BSR set to: 0
 12659                           ;My_header\My_RTCC.h: 198: month++;
 12660  0128EE  0100               	movlb	0	; () banked
 12661  0128F0  2BE1               	incf	epoch_to_caltime@month& (0+255),f,b
 12662  0128F2                     l9730:
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;My_header\My_RTCC.h: 199: }
 12666                           ;My_header\My_RTCC.h: 200: month_cache = month;
 12667  0128F2  C0E1  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;My_header\My_RTCC.h: 201: year_cache = year;
 12671  0128F6  C0E0  F09D         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 12672  0128FA                     l9734:
 12673                           
 12674                           ; BSR set to: 0
 12675  0128FA  C0E1  F0BB         	movff	epoch_to_caltime@month,month_length@month
 12676  0128FE  0100               	movlb	0	; () banked
 12677  012900  51E0               	movf	epoch_to_caltime@year& (0+255),w,b
 12678  012902  EC2C  F0A2         	call	_month_length
 12679  012906  0100               	movlb	0	; () banked
 12680  012908  6FDA               	movwf	??_epoch_to_caltime& (0+255),b
 12681  01290A  0100               	movlb	0	; () banked
 12682  01290C  51DA               	movf	??_epoch_to_caltime& (0+255),w,b
 12683  01290E  0100               	movlb	0	; () banked
 12684  012910  5DDE               	subwf	epoch_to_caltime@day& (0+255),w,b
 12685  012912  0E00               	movlw	0
 12686  012914  59DF               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 12687  012916  B0D8               	btfsc	status,0,c
 12688  012918  D7B1               	goto	l453
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;My_header\My_RTCC.h: 202: }
 12692                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
 12693                           
 12694                           ; BSR set to: 0
 12695  01291A  C0DE  F0DA         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 12696  01291E  C0DF  F0DB         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 12697  012922  0100               	movlb	0	; () banked
 12698  012924  1FDA               	comf	??_epoch_to_caltime& (0+255),f,b
 12699  012926  1FDB               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 12700  012928  4BDA               	infsnz	??_epoch_to_caltime& (0+255),f,b
 12701  01292A  2BDB               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 12702  01292C  0100               	movlb	0	; () banked
 12703  01292E  51DC               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 12704  012930  0100               	movlb	0	; () banked
 12705  012932  25DA               	addwf	??_epoch_to_caltime& (0+255),w,b
 12706  012934  0100               	movlb	0	; () banked
 12707  012936  6F8D               	movwf	epoch_to_caltime@day_cache& (0+255),b
 12708  012938  0100               	movlb	0	; () banked
 12709  01293A  51DD               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 12710  01293C  0100               	movlb	0	; () banked
 12711  01293E  21DB               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 12712  012940  0100               	movlb	0	; () banked
 12713  012942  6F8E               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;My_header\My_RTCC.h: 204: day++;
 12717  012944  0100               	movlb	0	; () banked
 12718  012946  4BDE               	infsnz	epoch_to_caltime@day& (0+255),f,b
 12719  012948  2BDF               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;My_header\My_RTCC.h: 206: ct->YY = year;
 12723  01294A  0100               	movlb	0	; () banked
 12724  01294C  EE20 F006          	lfsr	2,6
 12725  012950  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12726  012952  26D9               	addwf	fsr2l,f,c
 12727  012954  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12728  012956  22DA               	addwfc	fsr2h,f,c
 12729  012958  C0E0  FFDF         	movff	epoch_to_caltime@year,indf2
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;My_header\My_RTCC.h: 207: ct->MM = month;
 12733  01295C  0100               	movlb	0	; () banked
 12734  01295E  EE20 F005          	lfsr	2,5
 12735  012962  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12736  012964  26D9               	addwf	fsr2l,f,c
 12737  012966  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12738  012968  22DA               	addwfc	fsr2h,f,c
 12739  01296A  C0E1  FFDF         	movff	epoch_to_caltime@month,indf2
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;My_header\My_RTCC.h: 208: ct->DD = day;
 12743  01296E  0100               	movlb	0	; () banked
 12744  012970  EE20 F004          	lfsr	2,4
 12745  012974  51D6               	movf	epoch_to_caltime@ct& (0+255),w,b
 12746  012976  26D9               	addwf	fsr2l,f,c
 12747  012978  51D7               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12748  01297A  22DA               	addwfc	fsr2h,f,c
 12749  01297C  C0DE  FFDF         	movff	epoch_to_caltime@day,indf2
 12750                           
 12751                           ; BSR set to: 0
 12752  012980  0012               	return		;funcret
 12753  012982                     __end_of_epoch_to_caltime:
 12754                           	opt stack 0
 12755                           tblptru	equ	0xFF8
 12756                           tblptrh	equ	0xFF7
 12757                           tblptrl	equ	0xFF6
 12758                           tablat	equ	0xFF5
 12759                           prodh	equ	0xFF4
 12760                           prodl	equ	0xFF3
 12761                           intcon	equ	0xFF2
 12762                           postinc0	equ	0xFEE
 12763                           wreg	equ	0xFE8
 12764                           indf1	equ	0xFE7
 12765                           postinc1	equ	0xFE6
 12766                           postdec1	equ	0xFE5
 12767                           fsr1h	equ	0xFE2
 12768                           fsr1l	equ	0xFE1
 12769                           indf2	equ	0xFDF
 12770                           postinc2	equ	0xFDE
 12771                           postdec2	equ	0xFDD
 12772                           fsr2h	equ	0xFDA
 12773                           fsr2l	equ	0xFD9
 12774                           status	equ	0xFD8
 12775                           
 12776 ;; *************** function _get_quot_rem *****************
 12777 ;; Defined at:
 12778 ;;		line 112 in file "../My_header\My_RTCC.h"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 12781 ;;		 -> epoch_to_caltime@num(4), 
 12782 ;;  div             1   27[BANK0 ] unsigned char 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;  num             4   29[BANK0 ] unsigned long 
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  4   25[BANK0 ] unsigned long 
 12787 ;; Registers used:
 12788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12795 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12797 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12798 ;;Total ram usage:        8 bytes
 12799 ;; Hardware stack levels used:    1
 12800 ;; Hardware stack levels required when called:   12
 12801 ;; This function calls:
 12802 ;;		___lldiv
 12803 ;;		___lmul
 12804 ;; This function is called by:
 12805 ;;		_epoch_to_caltime
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           	psect	text37
 12810  0147BC                     __ptext37:
 12811                           	opt stack 0
 12812  0147BC                     _get_quot_rem:
 12813                           	opt stack 13
 12814                           
 12815                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;incstack = 0
 12819  0147BC  C0CE  FFD9         	movff	get_quot_rem@quot,fsr2l
 12820  0147C0  C0CF  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 12821  0147C4  CFDE F0D2          	movff	postinc2,get_quot_rem@num
 12822  0147C8  CFDE F0D3          	movff	postinc2,get_quot_rem@num+1
 12823  0147CC  CFDE F0D4          	movff	postinc2,get_quot_rem@num+2
 12824  0147D0  CFDE F0D5          	movff	postinc2,get_quot_rem@num+3
 12825                           
 12826                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 12827  0147D4  0100               	movlb	0	; () banked
 12828  0147D6  51D0               	movf	get_quot_rem@div& (0+255),w,b
 12829  0147D8  0100               	movlb	0	; () banked
 12830  0147DA  6FB9               	movwf	___lldiv@divisor& (0+255),b
 12831  0147DC  6BBA               	clrf	(___lldiv@divisor+1)& (0+255),b
 12832  0147DE  6BBB               	clrf	(___lldiv@divisor+2)& (0+255),b
 12833  0147E0  6BBC               	clrf	(___lldiv@divisor+3)& (0+255),b
 12834  0147E2  C0D2  F0B5         	movff	get_quot_rem@num,___lldiv@dividend
 12835  0147E6  C0D3  F0B6         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 12836  0147EA  C0D4  F0B7         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 12837  0147EE  C0D5  F0B8         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 12838  0147F2  EC6B  F0A7         	call	___lldiv	;wreg free
 12839  0147F6  C0CE  FFD9         	movff	get_quot_rem@quot,fsr2l
 12840  0147FA  C0CF  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 12841  0147FE  0100               	movlb	0	; () banked
 12842  014800  C0B5  FFDE         	movff	?___lldiv,postinc2
 12843  014804  0100               	movlb	0	; () banked
 12844  014806  C0B6  FFDE         	movff	?___lldiv+1,postinc2
 12845  01480A  0100               	movlb	0	; () banked
 12846  01480C  C0B7  FFDE         	movff	?___lldiv+2,postinc2
 12847  014810  0100               	movlb	0	; () banked
 12848  014812  C0B8  FFDD         	movff	?___lldiv+3,postdec2
 12849  014816  52DD               	movf	postdec2,f,c
 12850  014818  52DD               	movf	postdec2,f,c
 12851  01481A  CFDE F0C2          	movff	postinc2,___lmul@multiplier
 12852  01481E  CFDE F0C3          	movff	postinc2,___lmul@multiplier+1
 12853  014822  CFDE F0C4          	movff	postinc2,___lmul@multiplier+2
 12854  014826  CFDE F0C5          	movff	postinc2,___lmul@multiplier+3
 12855  01482A  0100               	movlb	0	; () banked
 12856  01482C  51D0               	movf	get_quot_rem@div& (0+255),w,b
 12857  01482E  0100               	movlb	0	; () banked
 12858  014830  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 12859  014832  6BC7               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12860  014834  6BC8               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12861  014836  6BC9               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12862  014838  EC69  F0AE         	call	___lmul	;wreg free
 12863  01483C  0100               	movlb	0	; () banked
 12864  01483E  1FC2               	comf	?___lmul& (0+255),f,b
 12865  014840  0100               	movlb	0	; () banked
 12866  014842  1FC3               	comf	(?___lmul+1)& (0+255),f,b
 12867  014844  0100               	movlb	0	; () banked
 12868  014846  1FC4               	comf	(?___lmul+2)& (0+255),f,b
 12869  014848  0100               	movlb	0	; () banked
 12870  01484A  1FC5               	comf	(?___lmul+3)& (0+255),f,b
 12871  01484C  0100               	movlb	0	; () banked
 12872  01484E  2BC2               	incf	?___lmul& (0+255),f,b
 12873  014850  0E00               	movlw	0
 12874  014852  0100               	movlb	0	; () banked
 12875  014854  23C3               	addwfc	(?___lmul+1)& (0+255),f,b
 12876  014856  0100               	movlb	0	; () banked
 12877  014858  23C4               	addwfc	(?___lmul+2)& (0+255),f,b
 12878  01485A  0100               	movlb	0	; () banked
 12879  01485C  23C5               	addwfc	(?___lmul+3)& (0+255),f,b
 12880  01485E  0100               	movlb	0	; () banked
 12881  014860  51D2               	movf	get_quot_rem@num& (0+255),w,b
 12882  014862  0100               	movlb	0	; () banked
 12883  014864  25C2               	addwf	?___lmul& (0+255),w,b
 12884  014866  0100               	movlb	0	; () banked
 12885  014868  6FCE               	movwf	?_get_quot_rem& (0+255),b
 12886  01486A  0100               	movlb	0	; () banked
 12887  01486C  51D3               	movf	(get_quot_rem@num+1)& (0+255),w,b
 12888  01486E  0100               	movlb	0	; () banked
 12889  014870  21C3               	addwfc	(?___lmul+1)& (0+255),w,b
 12890  014872  0100               	movlb	0	; () banked
 12891  014874  6FCF               	movwf	(?_get_quot_rem+1)& (0+255),b
 12892  014876  0100               	movlb	0	; () banked
 12893  014878  51D4               	movf	(get_quot_rem@num+2)& (0+255),w,b
 12894  01487A  0100               	movlb	0	; () banked
 12895  01487C  21C4               	addwfc	(?___lmul+2)& (0+255),w,b
 12896  01487E  0100               	movlb	0	; () banked
 12897  014880  6FD0               	movwf	(?_get_quot_rem+2)& (0+255),b
 12898  014882  0100               	movlb	0	; () banked
 12899  014884  51D5               	movf	(get_quot_rem@num+3)& (0+255),w,b
 12900  014886  0100               	movlb	0	; () banked
 12901  014888  21C5               	addwfc	(?___lmul+3)& (0+255),w,b
 12902  01488A  0100               	movlb	0	; () banked
 12903  01488C  6FD1               	movwf	(?_get_quot_rem+3)& (0+255),b
 12904  01488E  0012               	return	
 12905  014890                     __end_of_get_quot_rem:
 12906                           	opt stack 0
 12907                           tblptru	equ	0xFF8
 12908                           tblptrh	equ	0xFF7
 12909                           tblptrl	equ	0xFF6
 12910                           tablat	equ	0xFF5
 12911                           prodh	equ	0xFF4
 12912                           prodl	equ	0xFF3
 12913                           intcon	equ	0xFF2
 12914                           postinc0	equ	0xFEE
 12915                           wreg	equ	0xFE8
 12916                           indf1	equ	0xFE7
 12917                           postinc1	equ	0xFE6
 12918                           postdec1	equ	0xFE5
 12919                           fsr1h	equ	0xFE2
 12920                           fsr1l	equ	0xFE1
 12921                           indf2	equ	0xFDF
 12922                           postinc2	equ	0xFDE
 12923                           postdec2	equ	0xFDD
 12924                           fsr2h	equ	0xFDA
 12925                           fsr2l	equ	0xFD9
 12926                           status	equ	0xFD8
 12927                           
 12928 ;; *************** function _caltime_to_RTCC *****************
 12929 ;; Defined at:
 12930 ;;		line 137 in file "../My_header\My_RTCC.h"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;  ct              2    9[BANK0 ] PTR struct .
 12933 ;;		 -> caltime_now(7), 
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;		None
 12936 ;; Return value:  Size  Location     Type
 12937 ;;		None               void
 12938 ;; Registers used:
 12939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12940 ;; Tracked objects:
 12941 ;;		On entry : 0/0
 12942 ;;		On exit  : 0/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12949 ;;Total ram usage:        2 bytes
 12950 ;; Hardware stack levels used:    1
 12951 ;; Hardware stack levels required when called:   13
 12952 ;; This function calls:
 12953 ;;		_d_to_x
 12954 ;; This function is called by:
 12955 ;;		_RTCC_from_caltime
 12956 ;;		_RTCC_from_epoch
 12957 ;; This function uses a non-reentrant model
 12958 ;;
 12959                           
 12960                           	psect	text38
 12961  014964                     __ptext38:
 12962                           	opt stack 0
 12963  014964                     _caltime_to_RTCC:
 12964                           	opt stack 13
 12965  014964                     l440:
 12966  014964  010F               	movlb	15	; () banked
 12967  014966  B93F               	btfsc	63,4,b	;volatile
 12968  014968  D7FD               	goto	l440
 12969                           
 12970                           ; BSR set to: 15
 12971                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 12972  01496A  010F               	movlb	15	; () banked
 12973  01496C  813F               	bsf	63,0,b	;volatile
 12974                           
 12975                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 12976  01496E  010F               	movlb	15	; () banked
 12977  014970  833F               	bsf	63,1,b	;volatile
 12978                           
 12979                           ; BSR set to: 15
 12980                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 12981  014972  0100               	movlb	0	; () banked
 12982  014974  EE20 F006          	lfsr	2,6
 12983  014978  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 12984  01497A  26D9               	addwf	fsr2l,f,c
 12985  01497C  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 12986  01497E  22DA               	addwfc	fsr2h,f,c
 12987  014980  50DF               	movf	indf2,w,c
 12988  014982  EC5F  F0B4         	call	_d_to_x
 12989  014986  010F               	movlb	15	; () banked
 12990  014988  6F3A               	movwf	58,b	;volatile
 12991                           
 12992                           ; BSR set to: 15
 12993                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 12994  01498A  0E00               	movlw	0
 12995  01498C  010F               	movlb	15	; () banked
 12996  01498E  6F3B               	movwf	59,b	;volatile
 12997                           
 12998                           ; BSR set to: 15
 12999                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 13000  014990  010F               	movlb	15	; () banked
 13001  014992  913F               	bcf	63,0,b	;volatile
 13002                           
 13003                           ; BSR set to: 15
 13004                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 13005  014994  010F               	movlb	15	; () banked
 13006  014996  833F               	bsf	63,1,b	;volatile
 13007                           
 13008                           ; BSR set to: 15
 13009                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 13010  014998  0100               	movlb	0	; () banked
 13011  01499A  EE20 F004          	lfsr	2,4
 13012  01499E  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13013  0149A0  26D9               	addwf	fsr2l,f,c
 13014  0149A2  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13015  0149A4  22DA               	addwfc	fsr2h,f,c
 13016  0149A6  50DF               	movf	indf2,w,c
 13017  0149A8  EC5F  F0B4         	call	_d_to_x
 13018  0149AC  010F               	movlb	15	; () banked
 13019  0149AE  6F3A               	movwf	58,b	;volatile
 13020                           
 13021                           ; BSR set to: 15
 13022                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 13023  0149B0  0100               	movlb	0	; () banked
 13024  0149B2  EE20 F005          	lfsr	2,5
 13025  0149B6  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13026  0149B8  26D9               	addwf	fsr2l,f,c
 13027  0149BA  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13028  0149BC  22DA               	addwfc	fsr2h,f,c
 13029  0149BE  50DF               	movf	indf2,w,c
 13030  0149C0  EC5F  F0B4         	call	_d_to_x
 13031  0149C4  010F               	movlb	15	; () banked
 13032  0149C6  6F3B               	movwf	59,b	;volatile
 13033                           
 13034                           ; BSR set to: 15
 13035                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 13036  0149C8  010F               	movlb	15	; () banked
 13037  0149CA  813F               	bsf	63,0,b	;volatile
 13038                           
 13039                           ; BSR set to: 15
 13040                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 13041  0149CC  010F               	movlb	15	; () banked
 13042  0149CE  933F               	bcf	63,1,b	;volatile
 13043                           
 13044                           ; BSR set to: 15
 13045                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 13046  0149D0  0100               	movlb	0	; () banked
 13047  0149D2  EE20 F002          	lfsr	2,2
 13048  0149D6  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13049  0149D8  26D9               	addwf	fsr2l,f,c
 13050  0149DA  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13051  0149DC  22DA               	addwfc	fsr2h,f,c
 13052  0149DE  50DF               	movf	indf2,w,c
 13053  0149E0  EC5F  F0B4         	call	_d_to_x
 13054  0149E4  010F               	movlb	15	; () banked
 13055  0149E6  6F3A               	movwf	58,b	;volatile
 13056                           
 13057                           ; BSR set to: 15
 13058                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 13059  0149E8  0100               	movlb	0	; () banked
 13060  0149EA  EE20 F003          	lfsr	2,3
 13061  0149EE  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13062  0149F0  26D9               	addwf	fsr2l,f,c
 13063  0149F2  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13064  0149F4  22DA               	addwfc	fsr2h,f,c
 13065  0149F6  50DF               	movf	indf2,w,c
 13066  0149F8  EC5F  F0B4         	call	_d_to_x
 13067  0149FC  010F               	movlb	15	; () banked
 13068  0149FE  6F3B               	movwf	59,b	;volatile
 13069                           
 13070                           ; BSR set to: 15
 13071                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 13072  014A00  010F               	movlb	15	; () banked
 13073  014A02  913F               	bcf	63,0,b	;volatile
 13074                           
 13075                           ; BSR set to: 15
 13076                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 13077  014A04  010F               	movlb	15	; () banked
 13078  014A06  933F               	bcf	63,1,b	;volatile
 13079                           
 13080                           ; BSR set to: 15
 13081                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 13082  014A08  C0BE  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 13083  014A0C  C0BF  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 13084  014A10  50DF               	movf	indf2,w,c
 13085  014A12  EC5F  F0B4         	call	_d_to_x
 13086  014A16  010F               	movlb	15	; () banked
 13087  014A18  6F3A               	movwf	58,b	;volatile
 13088                           
 13089                           ; BSR set to: 15
 13090                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 13091  014A1A  0100               	movlb	0	; () banked
 13092  014A1C  EE20 F001          	lfsr	2,1
 13093  014A20  51BE               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13094  014A22  26D9               	addwf	fsr2l,f,c
 13095  014A24  51BF               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13096  014A26  22DA               	addwfc	fsr2h,f,c
 13097  014A28  50DF               	movf	indf2,w,c
 13098  014A2A  EC5F  F0B4         	call	_d_to_x
 13099  014A2E  010F               	movlb	15	; () banked
 13100  014A30  6F3B               	movwf	59,b	;volatile
 13101                           
 13102                           ; BSR set to: 15
 13103  014A32  0012               	return		;funcret
 13104  014A34                     __end_of_caltime_to_RTCC:
 13105                           	opt stack 0
 13106                           tblptru	equ	0xFF8
 13107                           tblptrh	equ	0xFF7
 13108                           tblptrl	equ	0xFF6
 13109                           tablat	equ	0xFF5
 13110                           prodh	equ	0xFF4
 13111                           prodl	equ	0xFF3
 13112                           intcon	equ	0xFF2
 13113                           postinc0	equ	0xFEE
 13114                           wreg	equ	0xFE8
 13115                           indf1	equ	0xFE7
 13116                           postinc1	equ	0xFE6
 13117                           postdec1	equ	0xFE5
 13118                           fsr1h	equ	0xFE2
 13119                           fsr1l	equ	0xFE1
 13120                           indf2	equ	0xFDF
 13121                           postinc2	equ	0xFDE
 13122                           postdec2	equ	0xFDD
 13123                           fsr2h	equ	0xFDA
 13124                           fsr2l	equ	0xFD9
 13125                           status	equ	0xFD8
 13126                           
 13127 ;; *************** function _d_to_x *****************
 13128 ;; Defined at:
 13129 ;;		line 73 in file "../My_header\My_RTCC.h"
 13130 ;; Parameters:    Size  Location     Type
 13131 ;;  dec             1    wreg     unsigned char 
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;  dec             1    8[BANK0 ] unsigned char 
 13134 ;; Return value:  Size  Location     Type
 13135 ;;                  1    wreg      unsigned char 
 13136 ;; Registers used:
 13137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13138 ;; Tracked objects:
 13139 ;;		On entry : 0/0
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13146 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13147 ;;Total ram usage:        1 bytes
 13148 ;; Hardware stack levels used:    1
 13149 ;; Hardware stack levels required when called:   12
 13150 ;; This function calls:
 13151 ;;		___awdiv
 13152 ;; This function is called by:
 13153 ;;		_caltime_to_RTCC
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           	psect	text39
 13158  0168BE                     __ptext39:
 13159                           	opt stack 0
 13160  0168BE                     _d_to_x:
 13161                           	opt stack 13
 13162                           
 13163                           ; BSR set to: 15
 13164                           ;incstack = 0
 13165                           ;d_to_x@dec stored from wreg
 13166  0168BE  0100               	movlb	0	; () banked
 13167  0168C0  6FBD               	movwf	d_to_x@dec& (0+255),b
 13168                           
 13169                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 13170  0168C2  C0BD  F0B5         	movff	d_to_x@dec,___awdiv@dividend
 13171  0168C6  0100               	movlb	0	; () banked
 13172  0168C8  6BB6               	clrf	(___awdiv@dividend+1)& (0+255),b
 13173  0168CA  0E00               	movlw	0
 13174  0168CC  0100               	movlb	0	; () banked
 13175  0168CE  6FB8               	movwf	(___awdiv@divisor+1)& (0+255),b
 13176  0168D0  0E0A               	movlw	10
 13177  0168D2  6FB7               	movwf	___awdiv@divisor& (0+255),b
 13178  0168D4  EC0C  F0A7         	call	___awdiv	;wreg free
 13179  0168D8  0100               	movlb	0	; () banked
 13180  0168DA  51B5               	movf	?___awdiv& (0+255),w,b
 13181  0168DC  0D06               	mullw	6
 13182  0168DE  50F3               	movf	prodl,w,c
 13183  0168E0  0100               	movlb	0	; () banked
 13184  0168E2  25BD               	addwf	d_to_x@dec& (0+255),w,b
 13185  0168E4  0012               	return	
 13186  0168E6                     __end_of_d_to_x:
 13187                           	opt stack 0
 13188                           tblptru	equ	0xFF8
 13189                           tblptrh	equ	0xFF7
 13190                           tblptrl	equ	0xFF6
 13191                           tablat	equ	0xFF5
 13192                           prodh	equ	0xFF4
 13193                           prodl	equ	0xFF3
 13194                           intcon	equ	0xFF2
 13195                           postinc0	equ	0xFEE
 13196                           wreg	equ	0xFE8
 13197                           indf1	equ	0xFE7
 13198                           postinc1	equ	0xFE6
 13199                           postdec1	equ	0xFE5
 13200                           fsr1h	equ	0xFE2
 13201                           fsr1l	equ	0xFE1
 13202                           indf2	equ	0xFDF
 13203                           postinc2	equ	0xFDE
 13204                           postdec2	equ	0xFDD
 13205                           fsr2h	equ	0xFDA
 13206                           fsr2l	equ	0xFD9
 13207                           status	equ	0xFD8
 13208                           
 13209 ;; *************** function ___awdiv *****************
 13210 ;; Defined at:
 13211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;  dividend        2    0[BANK0 ] int 
 13214 ;;  divisor         2    2[BANK0 ] int 
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;  quotient        2    6[BANK0 ] int 
 13217 ;;  sign            1    5[BANK0 ] unsigned char 
 13218 ;;  counter         1    4[BANK0 ] unsigned char 
 13219 ;; Return value:  Size  Location     Type
 13220 ;;                  2    0[BANK0 ] int 
 13221 ;; Registers used:
 13222 ;;		wreg, status,2, status,0
 13223 ;; Tracked objects:
 13224 ;;		On entry : 0/0
 13225 ;;		On exit  : 0/0
 13226 ;;		Unchanged: 0/0
 13227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13229 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13231 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13232 ;;Total ram usage:        8 bytes
 13233 ;; Hardware stack levels used:    1
 13234 ;; Hardware stack levels required when called:   11
 13235 ;; This function calls:
 13236 ;;		Nothing
 13237 ;; This function is called by:
 13238 ;;		_d_to_x
 13239 ;; This function uses a non-reentrant model
 13240 ;;
 13241                           
 13242                           	psect	text40
 13243  014E18                     __ptext40:
 13244                           	opt stack 0
 13245  014E18                     ___awdiv:
 13246                           	opt stack 13
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;incstack = 0
 13250  014E18  0E00               	movlw	0
 13251  014E1A  0100               	movlb	0	; () banked
 13252  014E1C  6FBA               	movwf	___awdiv@sign& (0+255),b
 13253                           
 13254                           ; BSR set to: 0
 13255  014E1E  0100               	movlb	0	; () banked
 13256  014E20  AFB8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13257  014E22  D008               	goto	l9424
 13258                           
 13259                           ; BSR set to: 0
 13260  014E24  0100               	movlb	0	; () banked
 13261  014E26  6DB7               	negf	___awdiv@divisor& (0+255),b
 13262  014E28  1FB8               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13263  014E2A  B0D8               	btfsc	status,0,c
 13264  014E2C  2BB8               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13265                           
 13266                           ; BSR set to: 0
 13267  014E2E  0E01               	movlw	1
 13268  014E30  0100               	movlb	0	; () banked
 13269  014E32  6FBA               	movwf	___awdiv@sign& (0+255),b
 13270  014E34                     l9424:
 13271                           
 13272                           ; BSR set to: 0
 13273  014E34  0100               	movlb	0	; () banked
 13274  014E36  AFB6               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13275  014E38  D008               	goto	l9430
 13276                           
 13277                           ; BSR set to: 0
 13278  014E3A  0100               	movlb	0	; () banked
 13279  014E3C  6DB5               	negf	___awdiv@dividend& (0+255),b
 13280  014E3E  1FB6               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13281  014E40  B0D8               	btfsc	status,0,c
 13282  014E42  2BB6               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13283                           
 13284                           ; BSR set to: 0
 13285  014E44  0E01               	movlw	1
 13286  014E46  0100               	movlb	0	; () banked
 13287  014E48  1BBA               	xorwf	___awdiv@sign& (0+255),f,b
 13288  014E4A                     l9430:
 13289                           
 13290                           ; BSR set to: 0
 13291  014E4A  0E00               	movlw	0
 13292  014E4C  0100               	movlb	0	; () banked
 13293  014E4E  6FBC               	movwf	(___awdiv@quotient+1)& (0+255),b
 13294  014E50  0E00               	movlw	0
 13295  014E52  6FBB               	movwf	___awdiv@quotient& (0+255),b
 13296                           
 13297                           ; BSR set to: 0
 13298  014E54  0100               	movlb	0	; () banked
 13299  014E56  51B7               	movf	___awdiv@divisor& (0+255),w,b
 13300  014E58  0100               	movlb	0	; () banked
 13301  014E5A  11B8               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13302  014E5C  B4D8               	btfsc	status,2,c
 13303  014E5E  D02C               	goto	l9452
 13304                           
 13305                           ; BSR set to: 0
 13306  014E60  0E01               	movlw	1
 13307  014E62  0100               	movlb	0	; () banked
 13308  014E64  6FB9               	movwf	___awdiv@counter& (0+255),b
 13309  014E66  D006               	goto	l9438
 13310  014E68                     l9436:
 13311                           
 13312                           ; BSR set to: 0
 13313  014E68  0100               	movlb	0	; () banked
 13314  014E6A  90D8               	bcf	status,0,c
 13315  014E6C  37B7               	rlcf	___awdiv@divisor& (0+255),f,b
 13316  014E6E  37B8               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13317  014E70  0100               	movlb	0	; () banked
 13318  014E72  2BB9               	incf	___awdiv@counter& (0+255),f,b
 13319  014E74                     l9438:
 13320                           
 13321                           ; BSR set to: 0
 13322  014E74  0100               	movlb	0	; () banked
 13323  014E76  AFB8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13324  014E78  D7F7               	goto	l9436
 13325  014E7A                     l9440:
 13326                           
 13327                           ; BSR set to: 0
 13328  014E7A  0100               	movlb	0	; () banked
 13329  014E7C  90D8               	bcf	status,0,c
 13330  014E7E  37BB               	rlcf	___awdiv@quotient& (0+255),f,b
 13331  014E80  37BC               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13332                           
 13333                           ; BSR set to: 0
 13334  014E82  0100               	movlb	0	; () banked
 13335  014E84  51B7               	movf	___awdiv@divisor& (0+255),w,b
 13336  014E86  0100               	movlb	0	; () banked
 13337  014E88  5DB5               	subwf	___awdiv@dividend& (0+255),w,b
 13338  014E8A  0100               	movlb	0	; () banked
 13339  014E8C  51B8               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13340  014E8E  0100               	movlb	0	; () banked
 13341  014E90  59B6               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13342  014E92  A0D8               	btfss	status,0,c
 13343  014E94  D00A               	goto	l9448
 13344                           
 13345                           ; BSR set to: 0
 13346  014E96  0100               	movlb	0	; () banked
 13347  014E98  51B7               	movf	___awdiv@divisor& (0+255),w,b
 13348  014E9A  0100               	movlb	0	; () banked
 13349  014E9C  5FB5               	subwf	___awdiv@dividend& (0+255),f,b
 13350  014E9E  0100               	movlb	0	; () banked
 13351  014EA0  51B8               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13352  014EA2  0100               	movlb	0	; () banked
 13353  014EA4  5BB6               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13354                           
 13355                           ; BSR set to: 0
 13356  014EA6  0100               	movlb	0	; () banked
 13357  014EA8  81BB               	bsf	___awdiv@quotient& (0+255),0,b
 13358  014EAA                     l9448:
 13359                           
 13360                           ; BSR set to: 0
 13361  014EAA  0100               	movlb	0	; () banked
 13362  014EAC  90D8               	bcf	status,0,c
 13363  014EAE  33B8               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13364  014EB0  33B7               	rrcf	___awdiv@divisor& (0+255),f,b
 13365                           
 13366                           ; BSR set to: 0
 13367  014EB2  0100               	movlb	0	; () banked
 13368  014EB4  2FB9               	decfsz	___awdiv@counter& (0+255),f,b
 13369  014EB6  D7E1               	goto	l9440
 13370  014EB8                     l9452:
 13371                           
 13372                           ; BSR set to: 0
 13373  014EB8  0100               	movlb	0	; () banked
 13374  014EBA  51BA               	movf	___awdiv@sign& (0+255),w,b
 13375  014EBC  0100               	movlb	0	; () banked
 13376  014EBE  B4D8               	btfsc	status,2,c
 13377  014EC0  D005               	goto	l9456
 13378                           
 13379                           ; BSR set to: 0
 13380  014EC2  0100               	movlb	0	; () banked
 13381  014EC4  6DBB               	negf	___awdiv@quotient& (0+255),b
 13382  014EC6  1FBC               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13383  014EC8  B0D8               	btfsc	status,0,c
 13384  014ECA  2BBC               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13385  014ECC                     l9456:
 13386                           
 13387                           ; BSR set to: 0
 13388  014ECC  C0BB  F0B5         	movff	___awdiv@quotient,?___awdiv
 13389  014ED0  C0BC  F0B6         	movff	___awdiv@quotient+1,?___awdiv+1
 13390  014ED4  0012               	return	
 13391  014ED6                     __end_of___awdiv:
 13392                           	opt stack 0
 13393                           tblptru	equ	0xFF8
 13394                           tblptrh	equ	0xFF7
 13395                           tblptrl	equ	0xFF6
 13396                           tablat	equ	0xFF5
 13397                           prodh	equ	0xFF4
 13398                           prodl	equ	0xFF3
 13399                           intcon	equ	0xFF2
 13400                           postinc0	equ	0xFEE
 13401                           wreg	equ	0xFE8
 13402                           indf1	equ	0xFE7
 13403                           postinc1	equ	0xFE6
 13404                           postdec1	equ	0xFE5
 13405                           fsr1h	equ	0xFE2
 13406                           fsr1l	equ	0xFE1
 13407                           indf2	equ	0xFDF
 13408                           postinc2	equ	0xFDE
 13409                           postdec2	equ	0xFDD
 13410                           fsr2h	equ	0xFDA
 13411                           fsr2l	equ	0xFD9
 13412                           status	equ	0xFD8
 13413                           
 13414 ;; *************** function _RTCC_adjust_time_cursor *****************
 13415 ;; Defined at:
 13416 ;;		line 311 in file "../My_header\My_RTCC.h"
 13417 ;; Parameters:    Size  Location     Type
 13418 ;;		None
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;		None
 13421 ;; Return value:  Size  Location     Type
 13422 ;;		None               void
 13423 ;; Registers used:
 13424 ;;		wreg, status,2
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13434 ;;Total ram usage:        0 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:   11
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_RTCC_adjust_time_button
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           	psect	text41
 13445  016028                     __ptext41:
 13446                           	opt stack 0
 13447  016028                     _RTCC_adjust_time_cursor:
 13448                           	opt stack 17
 13449                           
 13450                           ;My_header\My_RTCC.h: 312: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;incstack = 0
 13454  016028  0100               	movlb	0	; () banked
 13455  01602A  A198               	btfss	_edit_flag& (0+255),0,b
 13456  01602C  D004               	goto	l535
 13457                           
 13458                           ; BSR set to: 0
 13459  01602E  0E02               	movlw	2
 13460  016030  0100               	movlb	0	; () banked
 13461  016032  6F98               	movwf	_edit_flag& (0+255),b
 13462  016034  0012               	return	
 13463  016036                     l535:
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;My_header\My_RTCC.h: 313: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
 13467  016036  0100               	movlb	0	; () banked
 13468  016038  A398               	btfss	_edit_flag& (0+255),1,b
 13469  01603A  D004               	goto	l537
 13470                           
 13471                           ; BSR set to: 0
 13472  01603C  0E04               	movlw	4
 13473  01603E  0100               	movlb	0	; () banked
 13474  016040  6F98               	movwf	_edit_flag& (0+255),b
 13475  016042  0012               	return	
 13476  016044                     l537:
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;My_header\My_RTCC.h: 314: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
 13480  016044  0100               	movlb	0	; () banked
 13481  016046  A598               	btfss	_edit_flag& (0+255),2,b
 13482  016048  D004               	goto	l539
 13483                           
 13484                           ; BSR set to: 0
 13485  01604A  0E08               	movlw	8
 13486  01604C  0100               	movlb	0	; () banked
 13487  01604E  6F98               	movwf	_edit_flag& (0+255),b
 13488  016050  0012               	return	
 13489  016052                     l539:
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;My_header\My_RTCC.h: 315: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
 13493  016052  0100               	movlb	0	; () banked
 13494  016054  A798               	btfss	_edit_flag& (0+255),3,b
 13495  016056  D004               	goto	l541
 13496                           
 13497                           ; BSR set to: 0
 13498  016058  0E10               	movlw	16
 13499  01605A  0100               	movlb	0	; () banked
 13500  01605C  6F98               	movwf	_edit_flag& (0+255),b
 13501  01605E  0012               	return	
 13502  016060                     l541:
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;My_header\My_RTCC.h: 316: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
 13506  016060  0100               	movlb	0	; () banked
 13507  016062  A998               	btfss	_edit_flag& (0+255),4,b
 13508  016064  D004               	goto	l543
 13509                           
 13510                           ; BSR set to: 0
 13511  016066  0E20               	movlw	32
 13512  016068  0100               	movlb	0	; () banked
 13513  01606A  6F98               	movwf	_edit_flag& (0+255),b
 13514  01606C  0012               	return	
 13515  01606E                     l543:
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;My_header\My_RTCC.h: 317: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
 13519  01606E  0100               	movlb	0	; () banked
 13520  016070  AB98               	btfss	_edit_flag& (0+255),5,b
 13521  016072  D004               	goto	l10068
 13522                           
 13523                           ; BSR set to: 0
 13524  016074  0E01               	movlw	1
 13525  016076  0100               	movlb	0	; () banked
 13526  016078  6F98               	movwf	_edit_flag& (0+255),b
 13527  01607A  0012               	return	
 13528  01607C                     l10068:
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;My_header\My_RTCC.h: 318: else edit_flag.flags = 0x00;
 13532  01607C  0E00               	movlw	0
 13533  01607E  0100               	movlb	0	; () banked
 13534  016080  6F98               	movwf	_edit_flag& (0+255),b
 13535                           
 13536                           ; BSR set to: 0
 13537                           
 13538                           ; BSR set to: 0
 13539                           
 13540                           ; BSR set to: 0
 13541                           
 13542                           ; BSR set to: 0
 13543                           
 13544                           ; BSR set to: 0
 13545  016082  0012               	return	
 13546  016084                     __end_of_RTCC_adjust_time_cursor:
 13547                           	opt stack 0
 13548                           tblptru	equ	0xFF8
 13549                           tblptrh	equ	0xFF7
 13550                           tblptrl	equ	0xFF6
 13551                           tablat	equ	0xFF5
 13552                           prodh	equ	0xFF4
 13553                           prodl	equ	0xFF3
 13554                           intcon	equ	0xFF2
 13555                           postinc0	equ	0xFEE
 13556                           wreg	equ	0xFE8
 13557                           indf1	equ	0xFE7
 13558                           postinc1	equ	0xFE6
 13559                           postdec1	equ	0xFE5
 13560                           fsr1h	equ	0xFE2
 13561                           fsr1l	equ	0xFE1
 13562                           indf2	equ	0xFDF
 13563                           postinc2	equ	0xFDE
 13564                           postdec2	equ	0xFDD
 13565                           fsr2h	equ	0xFDA
 13566                           fsr2l	equ	0xFD9
 13567                           status	equ	0xFD8
 13568                           
 13569 ;; *************** function _Auto_cut *****************
 13570 ;; Defined at:
 13571 ;;		line 165 in file "tasks.h"
 13572 ;; Parameters:    Size  Location     Type
 13573 ;;		None
 13574 ;; Auto vars:     Size  Location     Type
 13575 ;;  i               1   30[BANK0 ] unsigned char 
 13576 ;; Return value:  Size  Location     Type
 13577 ;;		None               void
 13578 ;; Registers used:
 13579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13580 ;; Tracked objects:
 13581 ;;		On entry : 0/0
 13582 ;;		On exit  : 0/0
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13587 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13588 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13589 ;;Total ram usage:        3 bytes
 13590 ;; Hardware stack levels used:    1
 13591 ;; Hardware stack levels required when called:   12
 13592 ;; This function calls:
 13593 ;;		_ADC
 13594 ;;		_IN
 13595 ;;		_OUT
 13596 ;;		___wmul
 13597 ;; This function is called by:
 13598 ;;		_normal_mode_loop
 13599 ;; This function uses a non-reentrant model
 13600 ;;
 13601                           
 13602                           	psect	text42
 13603  013620                     __ptext42:
 13604                           	opt stack 0
 13605  013620                     _Auto_cut:
 13606                           	opt stack 17
 13607                           
 13608                           ;tasks.h: 166: for (uint8_t i = 0; i < 3; i++) {
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;incstack = 0
 13612  013620  0E00               	movlw	0
 13613  013622  0100               	movlb	0	; () banked
 13614  013624  6FD3               	movwf	Auto_cut@i& (0+255),b
 13615  013626                     l10760:
 13616                           
 13617                           ; BSR set to: 0
 13618  013626  0E02               	movlw	2
 13619  013628  0100               	movlb	0	; () banked
 13620  01362A  65D3               	cpfsgt	Auto_cut@i& (0+255),b
 13621  01362C  D001               	goto	l10764
 13622  01362E  0012               	return	
 13623  013630                     l10764:
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;tasks.h: 167: port[i].current = 13 * ADC(IN(i)) / 16;
 13627  013630  0100               	movlb	0	; () banked
 13628  013632  51D3               	movf	Auto_cut@i& (0+255),w,b
 13629  013634  ECC6  F0B3         	call	_IN
 13630  013638  EC6B  F0B3         	call	_ADC
 13631  01363C  C0B5  F0CB         	movff	?_ADC,___wmul@multiplier
 13632  013640  C0B6  F0CC         	movff	?_ADC+1,___wmul@multiplier+1
 13633  013644  0E00               	movlw	0
 13634  013646  0100               	movlb	0	; () banked
 13635  013648  6FCE               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13636  01364A  0E0D               	movlw	13
 13637  01364C  6FCD               	movwf	___wmul@multiplicand& (0+255),b
 13638  01364E  ECED  F0B2         	call	___wmul	;wreg free
 13639  013652  0E04               	movlw	4
 13640  013654  0100               	movlb	0	; () banked
 13641  013656  6FD1               	movwf	??_Auto_cut& (0+255),b
 13642  013658                     u11995:
 13643  013658  0100               	movlb	0	; () banked
 13644  01365A  90D8               	bcf	status,0,c
 13645  01365C  33CC               	rrcf	(?___wmul+1)& (0+255),f,b
 13646  01365E  33CB               	rrcf	?___wmul& (0+255),f,b
 13647  013660  0100               	movlb	0	; () banked
 13648  013662  2FD1               	decfsz	??_Auto_cut& (0+255),f,b
 13649  013664  D7F9               	goto	u11995
 13650  013666  0100               	movlb	0	; () banked
 13651  013668  51D3               	movf	Auto_cut@i& (0+255),w,b
 13652  01366A  0D17               	mullw	23
 13653  01366C  0E06               	movlw	6
 13654  01366E  26F3               	addwf	prodl,f,c
 13655  013670  0E00               	movlw	0
 13656  013672  22F4               	addwfc	prodh,f,c
 13657  013674  0E00               	movlw	low _port
 13658  013676  24F3               	addwf	prodl,w,c
 13659  013678  6ED9               	movwf	fsr2l,c
 13660  01367A  0E03               	movlw	high _port
 13661  01367C  20F4               	addwfc	prodh,w,c
 13662  01367E  6EDA               	movwf	fsr2h,c
 13663  013680  0100               	movlb	0	; () banked
 13664  013682  C0CB  FFDE         	movff	?___wmul,postinc2
 13665  013686  0100               	movlb	0	; () banked
 13666  013688  C0CC  FFDD         	movff	?___wmul+1,postdec2
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;tasks.h: 168: if (port[i].flag.auto_cut_ON) {
 13670  01368C  0100               	movlb	0	; () banked
 13671  01368E  51D3               	movf	Auto_cut@i& (0+255),w,b
 13672  013690  0D17               	mullw	23
 13673  013692  0E16               	movlw	22
 13674  013694  26F3               	addwf	prodl,f,c
 13675  013696  0E00               	movlw	0
 13676  013698  22F4               	addwfc	prodh,f,c
 13677  01369A  0E00               	movlw	low _port
 13678  01369C  24F3               	addwf	prodl,w,c
 13679  01369E  6ED9               	movwf	fsr2l,c
 13680  0136A0  0E03               	movlw	high _port
 13681  0136A2  20F4               	addwfc	prodh,w,c
 13682  0136A4  6EDA               	movwf	fsr2h,c
 13683  0136A6  0103               	movlb	3	; () banked
 13684  0136A8  A0DF               	btfss	indf2,0,c
 13685  0136AA  D051               	goto	l10776
 13686                           
 13687                           ; BSR set to: 3
 13688                           ;tasks.h: 169: if (port[i].current < 100) {
 13689  0136AC  0100               	movlb	0	; () banked
 13690  0136AE  51D3               	movf	Auto_cut@i& (0+255),w,b
 13691  0136B0  0D17               	mullw	23
 13692  0136B2  0E06               	movlw	6
 13693  0136B4  26F3               	addwf	prodl,f,c
 13694  0136B6  0E00               	movlw	0
 13695  0136B8  22F4               	addwfc	prodh,f,c
 13696  0136BA  0E00               	movlw	low _port
 13697  0136BC  24F3               	addwf	prodl,w,c
 13698  0136BE  6ED9               	movwf	fsr2l,c
 13699  0136C0  0E03               	movlw	high _port
 13700  0136C2  20F4               	addwfc	prodh,w,c
 13701  0136C4  6EDA               	movwf	fsr2h,c
 13702  0136C6  0E01               	movlw	1
 13703  0136C8  50DB               	movf	plusw2,w,c
 13704  0136CA  E130               	bnz	l10774
 13705  0136CC  0E64               	movlw	100
 13706  0136CE  5CDE               	subwf	postinc2,w,c
 13707  0136D0  B0D8               	btfsc	status,0,c
 13708  0136D2  D02C               	goto	l10774
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;tasks.h: 170: port[i].cut_cnt++;
 13712  0136D4  0100               	movlb	0	; () banked
 13713  0136D6  51D3               	movf	Auto_cut@i& (0+255),w,b
 13714  0136D8  0D17               	mullw	23
 13715  0136DA  0E14               	movlw	20
 13716  0136DC  26F3               	addwf	prodl,f,c
 13717  0136DE  0E00               	movlw	0
 13718  0136E0  22F4               	addwfc	prodh,f,c
 13719  0136E2  0E00               	movlw	low _port
 13720  0136E4  24F3               	addwf	prodl,w,c
 13721  0136E6  6ED9               	movwf	fsr2l,c
 13722  0136E8  0E03               	movlw	high _port
 13723  0136EA  20F4               	addwfc	prodh,w,c
 13724  0136EC  6EDA               	movwf	fsr2h,c
 13725  0136EE  2ADE               	incf	postinc2,f,c
 13726  0136F0  0E00               	movlw	0
 13727  0136F2  22DD               	addwfc	postdec2,f,c
 13728                           
 13729                           ;tasks.h: 171: if (port[i].cut_cnt > 6) {
 13730  0136F4  0100               	movlb	0	; () banked
 13731  0136F6  51D3               	movf	Auto_cut@i& (0+255),w,b
 13732  0136F8  0D17               	mullw	23
 13733  0136FA  0E14               	movlw	20
 13734  0136FC  26F3               	addwf	prodl,f,c
 13735  0136FE  0E00               	movlw	0
 13736  013700  22F4               	addwfc	prodh,f,c
 13737  013702  0E00               	movlw	low _port
 13738  013704  24F3               	addwf	prodl,w,c
 13739  013706  6ED9               	movwf	fsr2l,c
 13740  013708  0E03               	movlw	high _port
 13741  01370A  20F4               	addwfc	prodh,w,c
 13742  01370C  6EDA               	movwf	fsr2h,c
 13743  01370E  0E01               	movlw	1
 13744  013710  50DB               	movf	plusw2,w,c
 13745  013712  E104               	bnz	u12020
 13746  013714  0E07               	movlw	7
 13747  013716  5CDE               	subwf	postinc2,w,c
 13748  013718  A0D8               	btfss	status,0,c
 13749  01371A  D019               	goto	l10776
 13750  01371C                     u12020:
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;tasks.h: 172: OUT(i, 0);
 13754  01371C  0E00               	movlw	0
 13755  01371E  0100               	movlb	0	; () banked
 13756  013720  6FB5               	movwf	OUT@value& (0+255),b
 13757  013722  0100               	movlb	0	; () banked
 13758  013724  51D3               	movf	Auto_cut@i& (0+255),w,b
 13759  013726  ECDD  F0AE         	call	_OUT
 13760                           
 13761                           ;tasks.h: 173: }
 13762                           ;tasks.h: 174: } else {
 13763  01372A  D011               	goto	l10776
 13764  01372C                     l10774:
 13765                           
 13766                           ;tasks.h: 175: port[i].cut_cnt = 0;
 13767  01372C  0100               	movlb	0	; () banked
 13768  01372E  51D3               	movf	Auto_cut@i& (0+255),w,b
 13769  013730  0D17               	mullw	23
 13770  013732  0E14               	movlw	20
 13771  013734  26F3               	addwf	prodl,f,c
 13772  013736  0E00               	movlw	0
 13773  013738  22F4               	addwfc	prodh,f,c
 13774  01373A  0E00               	movlw	low _port
 13775  01373C  24F3               	addwf	prodl,w,c
 13776  01373E  6ED9               	movwf	fsr2l,c
 13777  013740  0E03               	movlw	high _port
 13778  013742  20F4               	addwfc	prodh,w,c
 13779  013744  6EDA               	movwf	fsr2h,c
 13780  013746  0E00               	movlw	0
 13781  013748  6EDE               	movwf	postinc2,c
 13782  01374A  0E00               	movlw	0
 13783  01374C  6EDD               	movwf	postdec2,c
 13784  01374E                     l10776:
 13785  01374E  0100               	movlb	0	; () banked
 13786  013750  2BD3               	incf	Auto_cut@i& (0+255),f,b
 13787  013752  D769               	goto	l10760
 13788  013754                     __end_of_Auto_cut:
 13789                           	opt stack 0
 13790                           tblptru	equ	0xFF8
 13791                           tblptrh	equ	0xFF7
 13792                           tblptrl	equ	0xFF6
 13793                           tablat	equ	0xFF5
 13794                           prodh	equ	0xFF4
 13795                           prodl	equ	0xFF3
 13796                           intcon	equ	0xFF2
 13797                           postinc0	equ	0xFEE
 13798                           wreg	equ	0xFE8
 13799                           indf1	equ	0xFE7
 13800                           postinc1	equ	0xFE6
 13801                           postdec1	equ	0xFE5
 13802                           fsr1h	equ	0xFE2
 13803                           fsr1l	equ	0xFE1
 13804                           indf2	equ	0xFDF
 13805                           postinc2	equ	0xFDE
 13806                           postdec2	equ	0xFDD
 13807                           plusw2	equ	0xFDB
 13808                           fsr2h	equ	0xFDA
 13809                           fsr2l	equ	0xFD9
 13810                           status	equ	0xFD8
 13811                           
 13812 ;; *************** function ___wmul *****************
 13813 ;; Defined at:
 13814 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 13815 ;; Parameters:    Size  Location     Type
 13816 ;;  multiplier      2   22[BANK0 ] unsigned int 
 13817 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 13818 ;; Auto vars:     Size  Location     Type
 13819 ;;  product         2   26[BANK0 ] unsigned int 
 13820 ;; Return value:  Size  Location     Type
 13821 ;;                  2   22[BANK0 ] unsigned int 
 13822 ;; Registers used:
 13823 ;;		wreg, status,2, status,0, prodl, prodh
 13824 ;; Tracked objects:
 13825 ;;		On entry : 0/0
 13826 ;;		On exit  : 0/0
 13827 ;;		Unchanged: 0/0
 13828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13830 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13832 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13833 ;;Total ram usage:        6 bytes
 13834 ;; Hardware stack levels used:    1
 13835 ;; Hardware stack levels required when called:   11
 13836 ;; This function calls:
 13837 ;;		Nothing
 13838 ;; This function is called by:
 13839 ;;		_my_atoi
 13840 ;;		_Auto_cut
 13841 ;;		_ctmu_set_ratio
 13842 ;; This function uses a non-reentrant model
 13843 ;;
 13844                           
 13845                           	psect	text43
 13846  0165DA                     __ptext43:
 13847                           	opt stack 0
 13848  0165DA                     ___wmul:
 13849                           	opt stack 16
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;incstack = 0
 13853  0165DA  0100               	movlb	0	; () banked
 13854  0165DC  51CB               	movf	___wmul@multiplier& (0+255),w,b
 13855  0165DE  0100               	movlb	0	; () banked
 13856  0165E0  03CD               	mulwf	___wmul@multiplicand& (0+255),b
 13857  0165E2  CFF3 F0CF          	movff	prodl,___wmul@product
 13858  0165E6  CFF4 F0D0          	movff	prodh,___wmul@product+1
 13859  0165EA  0100               	movlb	0	; () banked
 13860  0165EC  51CB               	movf	___wmul@multiplier& (0+255),w,b
 13861  0165EE  0100               	movlb	0	; () banked
 13862  0165F0  03CE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13863  0165F2  50F3               	movf	prodl,w,c
 13864  0165F4  0100               	movlb	0	; () banked
 13865  0165F6  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
 13866  0165F8  0100               	movlb	0	; () banked
 13867  0165FA  51CC               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13868  0165FC  0100               	movlb	0	; () banked
 13869  0165FE  03CD               	mulwf	___wmul@multiplicand& (0+255),b
 13870  016600  50F3               	movf	prodl,w,c
 13871  016602  0100               	movlb	0	; () banked
 13872  016604  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
 13873                           
 13874                           ; BSR set to: 0
 13875  016606  C0CF  F0CB         	movff	___wmul@product,?___wmul
 13876  01660A  C0D0  F0CC         	movff	___wmul@product+1,?___wmul+1
 13877  01660E  0012               	return	
 13878  016610                     __end_of___wmul:
 13879                           	opt stack 0
 13880                           tblptru	equ	0xFF8
 13881                           tblptrh	equ	0xFF7
 13882                           tblptrl	equ	0xFF6
 13883                           tablat	equ	0xFF5
 13884                           prodh	equ	0xFF4
 13885                           prodl	equ	0xFF3
 13886                           intcon	equ	0xFF2
 13887                           postinc0	equ	0xFEE
 13888                           wreg	equ	0xFE8
 13889                           indf1	equ	0xFE7
 13890                           postinc1	equ	0xFE6
 13891                           postdec1	equ	0xFE5
 13892                           fsr1h	equ	0xFE2
 13893                           fsr1l	equ	0xFE1
 13894                           indf2	equ	0xFDF
 13895                           postinc2	equ	0xFDE
 13896                           postdec2	equ	0xFDD
 13897                           plusw2	equ	0xFDB
 13898                           fsr2h	equ	0xFDA
 13899                           fsr2l	equ	0xFD9
 13900                           status	equ	0xFD8
 13901                           
 13902 ;; *************** function _OUT *****************
 13903 ;; Defined at:
 13904 ;;		line 98 in file "tasks.h"
 13905 ;; Parameters:    Size  Location     Type
 13906 ;;  b               1    wreg     unsigned char 
 13907 ;;  value           1    0[BANK0 ] unsigned char 
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;  b               1    1[BANK0 ] unsigned char 
 13910 ;; Return value:  Size  Location     Type
 13911 ;;		None               void
 13912 ;; Registers used:
 13913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13919 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13920 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13923 ;;Total ram usage:        2 bytes
 13924 ;; Hardware stack levels used:    1
 13925 ;; Hardware stack levels required when called:   11
 13926 ;; This function calls:
 13927 ;;		Nothing
 13928 ;; This function is called by:
 13929 ;;		_Auto_cut
 13930 ;;		_port_loop
 13931 ;;		_sleep_loop
 13932 ;;		_main
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           	psect	text44
 13937  015DBA                     __ptext44:
 13938                           	opt stack 0
 13939  015DBA                     _OUT:
 13940                           	opt stack 18
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;incstack = 0
 13944                           ;OUT@b stored from wreg
 13945  015DBA  0100               	movlb	0	; () banked
 13946  015DBC  6FB6               	movwf	OUT@b& (0+255),b
 13947                           
 13948                           ;tasks.h: 99: port[b].flag.out_flag = value;
 13949  015DBE  0100               	movlb	0	; () banked
 13950  015DC0  51B6               	movf	OUT@b& (0+255),w,b
 13951  015DC2  0D17               	mullw	23
 13952  015DC4  0E16               	movlw	22
 13953  015DC6  26F3               	addwf	prodl,f,c
 13954  015DC8  0E00               	movlw	0
 13955  015DCA  22F4               	addwfc	prodh,f,c
 13956  015DCC  0E00               	movlw	low _port
 13957  015DCE  24F3               	addwf	prodl,w,c
 13958  015DD0  6ED9               	movwf	fsr2l,c
 13959  015DD2  0E03               	movlw	high _port
 13960  015DD4  20F4               	addwfc	prodh,w,c
 13961  015DD6  6EDA               	movwf	fsr2h,c
 13962  015DD8  0100               	movlb	0	; () banked
 13963  015DDA  B1B5               	btfsc	OUT@value& (0+255),0,b
 13964  015DDC  D003               	bra	u11175
 13965  015DDE  0103               	movlb	3	; () banked
 13966  015DE0  94DF               	bcf	indf2,2,c
 13967  015DE2  D002               	bra	u11176
 13968  015DE4                     u11175:
 13969  015DE4  0103               	movlb	3	; () banked
 13970  015DE6  84DF               	bsf	indf2,2,c
 13971  015DE8                     u11176:
 13972                           
 13973                           ;tasks.h: 100: switch (b) {
 13974  015DE8  D015               	goto	l10178
 13975  015DEA                     l626:
 13976                           
 13977                           ; BSR set to: 0
 13978                           ;tasks.h: 102: LATA5 = value;
 13979  015DEA  0100               	movlb	0	; () banked
 13980  015DEC  A1B5               	btfss	OUT@value& (0+255),0,b
 13981  015DEE  D002               	goto	u11180
 13982  015DF0  8A89               	bsf	3977,5,c	;volatile
 13983  015DF2  0012               	return	
 13984  015DF4                     u11180:
 13985  015DF4  9A89               	bcf	3977,5,c	;volatile
 13986                           
 13987                           ;tasks.h: 103: break;
 13988  015DF6  0012               	return	
 13989  015DF8                     l628:
 13990                           
 13991                           ; BSR set to: 0
 13992                           ;tasks.h: 105: LATA6 = value;
 13993  015DF8  0100               	movlb	0	; () banked
 13994  015DFA  A1B5               	btfss	OUT@value& (0+255),0,b
 13995  015DFC  D002               	goto	u11200
 13996  015DFE  8C89               	bsf	3977,6,c	;volatile
 13997  015E00  0012               	return	
 13998  015E02                     u11200:
 13999  015E02  9C89               	bcf	3977,6,c	;volatile
 14000                           
 14001                           ;tasks.h: 106: break;
 14002  015E04  0012               	return	
 14003  015E06                     l629:
 14004                           
 14005                           ; BSR set to: 0
 14006                           ;tasks.h: 108: LATA7 = value;
 14007  015E06  0100               	movlb	0	; () banked
 14008  015E08  A1B5               	btfss	OUT@value& (0+255),0,b
 14009  015E0A  D002               	goto	u11220
 14010  015E0C  8E89               	bsf	3977,7,c	;volatile
 14011  015E0E  0012               	return	
 14012  015E10                     u11220:
 14013  015E10  9E89               	bcf	3977,7,c	;volatile
 14014                           
 14015                           ;tasks.h: 110: }
 14016                           
 14017                           ;tasks.h: 109: break;
 14018  015E12  0012               	return	
 14019  015E14                     l10178:
 14020  015E14  0100               	movlb	0	; () banked
 14021  015E16  51B6               	movf	OUT@b& (0+255),w,b
 14022                           
 14023                           ; Switch size 1, requested type "space"
 14024                           ; Number of cases is 3, Range of values is 0 to 2
 14025                           ; switch strategies available:
 14026                           ; Name         Instructions Cycles
 14027                           ; simple_byte           10     6 (average)
 14028                           ;	Chosen strategy is simple_byte
 14029  015E18  0A00               	xorlw	0	; case 0
 14030  015E1A  B4D8               	btfsc	status,2,c
 14031  015E1C  D7E6               	goto	l626
 14032  015E1E  0A01               	xorlw	1	; case 1
 14033  015E20  B4D8               	btfsc	status,2,c
 14034  015E22  D7EA               	goto	l628
 14035  015E24  0A03               	xorlw	3	; case 2
 14036  015E26  A4D8               	btfss	status,2,c
 14037  015E28  0012               	return	
 14038  015E2A  D7ED               	goto	l629
 14039  015E2C                     __end_of_OUT:
 14040                           	opt stack 0
 14041                           tblptru	equ	0xFF8
 14042                           tblptrh	equ	0xFF7
 14043                           tblptrl	equ	0xFF6
 14044                           tablat	equ	0xFF5
 14045                           prodh	equ	0xFF4
 14046                           prodl	equ	0xFF3
 14047                           intcon	equ	0xFF2
 14048                           postinc0	equ	0xFEE
 14049                           wreg	equ	0xFE8
 14050                           indf1	equ	0xFE7
 14051                           postinc1	equ	0xFE6
 14052                           postdec1	equ	0xFE5
 14053                           fsr1h	equ	0xFE2
 14054                           fsr1l	equ	0xFE1
 14055                           indf2	equ	0xFDF
 14056                           postinc2	equ	0xFDE
 14057                           postdec2	equ	0xFDD
 14058                           plusw2	equ	0xFDB
 14059                           fsr2h	equ	0xFDA
 14060                           fsr2l	equ	0xFD9
 14061                           status	equ	0xFD8
 14062                           
 14063 ;; *************** function _IN *****************
 14064 ;; Defined at:
 14065 ;;		line 113 in file "tasks.h"
 14066 ;; Parameters:    Size  Location     Type
 14067 ;;  b               1    wreg     unsigned char 
 14068 ;; Auto vars:     Size  Location     Type
 14069 ;;  b               1    0[BANK0 ] unsigned char 
 14070 ;; Return value:  Size  Location     Type
 14071 ;;                  1    wreg      unsigned char 
 14072 ;; Registers used:
 14073 ;;		wreg, status,2, status,0
 14074 ;; Tracked objects:
 14075 ;;		On entry : 0/0
 14076 ;;		On exit  : 0/0
 14077 ;;		Unchanged: 0/0
 14078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14083 ;;Total ram usage:        1 bytes
 14084 ;; Hardware stack levels used:    1
 14085 ;; Hardware stack levels required when called:   11
 14086 ;; This function calls:
 14087 ;;		Nothing
 14088 ;; This function is called by:
 14089 ;;		_Auto_cut
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           	psect	text45
 14094  01678C                     __ptext45:
 14095                           	opt stack 0
 14096  01678C                     _IN:
 14097                           	opt stack 17
 14098                           
 14099                           ;incstack = 0
 14100                           ;IN@b stored from wreg
 14101  01678C  0100               	movlb	0	; () banked
 14102  01678E  6FB5               	movwf	IN@b& (0+255),b
 14103                           
 14104                           ;tasks.h: 114: switch (b) {
 14105  016790  D006               	goto	l10196
 14106  016792                     l10182:
 14107                           
 14108                           ;tasks.h: 116: return 8;
 14109  016792  0E08               	movlw	8
 14110  016794  0012               	return	
 14111  016796                     l10186:
 14112                           
 14113                           ;tasks.h: 118: return 9;
 14114  016796  0E09               	movlw	9
 14115  016798  0012               	return	
 14116  01679A                     l10190:
 14117                           
 14118                           ;tasks.h: 120: return 10;
 14119  01679A  0E0A               	movlw	10
 14120  01679C  0012               	return	
 14121  01679E                     l10196:
 14122  01679E  0100               	movlb	0	; () banked
 14123  0167A0  51B5               	movf	IN@b& (0+255),w,b
 14124                           
 14125                           ; Switch size 1, requested type "space"
 14126                           ; Number of cases is 3, Range of values is 0 to 2
 14127                           ; switch strategies available:
 14128                           ; Name         Instructions Cycles
 14129                           ; simple_byte           10     6 (average)
 14130                           ;	Chosen strategy is simple_byte
 14131  0167A2  0A00               	xorlw	0	; case 0
 14132  0167A4  B4D8               	btfsc	status,2,c
 14133  0167A6  D7F5               	goto	l10182
 14134  0167A8  0A01               	xorlw	1	; case 1
 14135  0167AA  B4D8               	btfsc	status,2,c
 14136  0167AC  D7F4               	goto	l10186
 14137  0167AE  0A03               	xorlw	3	; case 2
 14138  0167B0  B4D8               	btfsc	status,2,c
 14139  0167B2  D7F3               	goto	l10190
 14140                           
 14141                           ;tasks.h: 122: return 0;
 14142                           
 14143                           ; BSR set to: 0
 14144  0167B4  0E00               	movlw	0
 14145  0167B6  0012               	return	
 14146  0167B8                     __end_of_IN:
 14147                           	opt stack 0
 14148                           tblptru	equ	0xFF8
 14149                           tblptrh	equ	0xFF7
 14150                           tblptrl	equ	0xFF6
 14151                           tablat	equ	0xFF5
 14152                           prodh	equ	0xFF4
 14153                           prodl	equ	0xFF3
 14154                           intcon	equ	0xFF2
 14155                           postinc0	equ	0xFEE
 14156                           wreg	equ	0xFE8
 14157                           indf1	equ	0xFE7
 14158                           postinc1	equ	0xFE6
 14159                           postdec1	equ	0xFE5
 14160                           fsr1h	equ	0xFE2
 14161                           fsr1l	equ	0xFE1
 14162                           indf2	equ	0xFDF
 14163                           postinc2	equ	0xFDE
 14164                           postdec2	equ	0xFDD
 14165                           plusw2	equ	0xFDB
 14166                           fsr2h	equ	0xFDA
 14167                           fsr2l	equ	0xFD9
 14168                           status	equ	0xFD8
 14169                           
 14170 ;; *************** function _ADC *****************
 14171 ;; Defined at:
 14172 ;;		line 172 in file "../My_header\My_header.h"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;  ch              1    wreg     unsigned char 
 14175 ;; Auto vars:     Size  Location     Type
 14176 ;;  ch              1    3[BANK0 ] unsigned char 
 14177 ;; Return value:  Size  Location     Type
 14178 ;;                  2    0[BANK0 ] unsigned int 
 14179 ;; Registers used:
 14180 ;;		wreg, status,2, status,0
 14181 ;; Tracked objects:
 14182 ;;		On entry : 0/0
 14183 ;;		On exit  : 0/0
 14184 ;;		Unchanged: 0/0
 14185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14189 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14190 ;;Total ram usage:        4 bytes
 14191 ;; Hardware stack levels used:    1
 14192 ;; Hardware stack levels required when called:   11
 14193 ;; This function calls:
 14194 ;;		Nothing
 14195 ;; This function is called by:
 14196 ;;		_Auto_cut
 14197 ;;		_sleep_loop
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           	psect	text46
 14202  0166D6                     __ptext46:
 14203                           	opt stack 0
 14204  0166D6                     _ADC:
 14205                           	opt stack 18
 14206                           
 14207                           ;incstack = 0
 14208                           ;ADC@ch stored from wreg
 14209  0166D6  0100               	movlb	0	; () banked
 14210  0166D8  6FB8               	movwf	ADC@ch& (0+255),b
 14211                           
 14212                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 14213  0166DA  C0B8  F0B7         	movff	ADC@ch,??_ADC
 14214  0166DE  0100               	movlb	0	; () banked
 14215  0166E0  47B7               	rlncf	??_ADC& (0+255),f,b
 14216  0166E2  47B7               	rlncf	??_ADC& (0+255),f,b
 14217  0166E4  50C2               	movf	4034,w,c	;volatile
 14218  0166E6  0100               	movlb	0	; () banked
 14219  0166E8  19B7               	xorwf	??_ADC& (0+255),w,b
 14220  0166EA  0BC3               	andlw	-61
 14221  0166EC  19B7               	xorwf	??_ADC& (0+255),w,b
 14222  0166EE  6EC2               	movwf	4034,c	;volatile
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 14226  0166F0  80C2               	bsf	4034,0,c	;volatile
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 14230  0166F2  9C9E               	bcf	3998,6,c	;volatile
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 14234  0166F4  82C2               	bsf	4034,1,c	;volatile
 14235  0166F6                     l159:
 14236  0166F6  AC9E               	btfss	3998,6,c	;volatile
 14237  0166F8  D7FE               	goto	l159
 14238                           
 14239                           ;My_header\My_header.h: 179: return ADRES;
 14240  0166FA  CFC3 F0B5          	movff	4035,?_ADC	;volatile
 14241  0166FE  CFC4 F0B6          	movff	4036,?_ADC+1	;volatile
 14242  016702  0012               	return		;funcret
 14243  016704                     __end_of_ADC:
 14244                           	opt stack 0
 14245                           tblptru	equ	0xFF8
 14246                           tblptrh	equ	0xFF7
 14247                           tblptrl	equ	0xFF6
 14248                           tablat	equ	0xFF5
 14249                           prodh	equ	0xFF4
 14250                           prodl	equ	0xFF3
 14251                           intcon	equ	0xFF2
 14252                           postinc0	equ	0xFEE
 14253                           wreg	equ	0xFE8
 14254                           indf1	equ	0xFE7
 14255                           postinc1	equ	0xFE6
 14256                           postdec1	equ	0xFE5
 14257                           fsr1h	equ	0xFE2
 14258                           fsr1l	equ	0xFE1
 14259                           indf2	equ	0xFDF
 14260                           postinc2	equ	0xFDE
 14261                           postdec2	equ	0xFDD
 14262                           plusw2	equ	0xFDB
 14263                           fsr2h	equ	0xFDA
 14264                           fsr2l	equ	0xFD9
 14265                           status	equ	0xFD8
 14266                           
 14267 ;; *************** function _main_init *****************
 14268 ;; Defined at:
 14269 ;;		line 82 in file "main.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;		None
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;		None               void
 14276 ;; Registers used:
 14277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14287 ;;Total ram usage:        0 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; Hardware stack levels required when called:   16
 14290 ;; This function calls:
 14291 ;;		_ADC_init
 14292 ;;		_CTMU_init
 14293 ;;		_I2C_LCD_init
 14294 ;;		_I2C_init
 14295 ;;		_RTCC_init
 14296 ;;		_USB_init
 14297 ;;		_ringbuf_init
 14298 ;;		_timer0_init
 14299 ;;		_timer1_init
 14300 ;;		_timer3_init
 14301 ;; This function is called by:
 14302 ;;		_main
 14303 ;; This function uses a non-reentrant model
 14304 ;;
 14305                           
 14306                           	psect	text47
 14307  015324                     __ptext47:
 14308                           	opt stack 0
 14309  015324                     _main_init:
 14310                           	opt stack 14
 14311                           
 14312                           ;main.c: 83: OSCCONbits.IRCF = 7;
 14313                           
 14314                           ;incstack = 0
 14315  015324  88D3               	bsf	4051,4,c	;volatile
 14316  015326  8AD3               	bsf	4051,5,c	;volatile
 14317  015328  8CD3               	bsf	4051,6,c	;volatile
 14318                           
 14319                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 14320  01532A  8C9B               	bsf	3995,6,c	;volatile
 14321                           
 14322                           ;main.c: 85: OSCCONbits.SCS = 0;
 14323  01532C  0EFC               	movlw	-4
 14324  01532E  16D3               	andwf	4051,f,c	;volatile
 14325                           
 14326                           ;main.c: 86: TRISA = 0b00011111;
 14327  015330  0E1F               	movlw	31
 14328  015332  6E92               	movwf	3986,c	;volatile
 14329                           
 14330                           ;main.c: 87: TRISB = 0b00111111;
 14331  015334  0E3F               	movlw	63
 14332  015336  6E93               	movwf	3987,c	;volatile
 14333                           
 14334                           ;main.c: 88: TRISC = 0b10110010;
 14335  015338  0EB2               	movlw	178
 14336  01533A  6E94               	movwf	3988,c	;volatile
 14337                           
 14338                           ;main.c: 89: ANCON0 = 0b11110000;
 14339  01533C  0EF0               	movlw	240
 14340  01533E  010F               	movlb	15	; () banked
 14341  015340  6F48               	movwf	72,b	;volatile
 14342                           
 14343                           ;main.c: 90: ANCON1 = 0b00001000;
 14344  015342  0E08               	movlw	8
 14345  015344  010F               	movlb	15	; () banked
 14346  015346  6F49               	movwf	73,b	;volatile
 14347                           
 14348                           ; BSR set to: 15
 14349                           ;main.c: 91: INTCON2bits.RBPU = 0;
 14350  015348  9EF1               	bcf	intcon2,7,c	;volatile
 14351                           
 14352                           ; BSR set to: 15
 14353                           ;main.c: 93: timer0_init(6);
 14354  01534A  0E06               	movlw	6
 14355  01534C  EC61  F0B2         	call	_timer0_init
 14356                           
 14357                           ;main.c: 94: timer1_init(0, 2);
 14358  015350  0E02               	movlw	2
 14359  015352  0100               	movlb	0	; () banked
 14360  015354  6FB5               	movwf	timer1_init@clock_select& (0+255),b
 14361  015356  0E00               	movlw	0
 14362  015358  EC47  F0B1         	call	_timer1_init
 14363                           
 14364                           ;main.c: 95: timer3_init(2);
 14365  01535C  0E02               	movlw	2
 14366  01535E  ECDC  F0B3         	call	_timer3_init
 14367                           
 14368                           ;main.c: 96: I2C_init();
 14369  015362  EC66  F0B5         	call	_I2C_init	;wreg free
 14370                           
 14371                           ;main.c: 97: I2C_LCD_init();
 14372  015366  ECC8  F0B0         	call	_I2C_LCD_init	;wreg free
 14373                           
 14374                           ;main.c: 98: RTCC_init();
 14375  01536A  EC82  F0B3         	call	_RTCC_init	;wreg free
 14376                           
 14377                           ;main.c: 99: ADC_init(0);
 14378  01536E  0E00               	movlw	0
 14379  015370  ECE1  F0B4         	call	_ADC_init
 14380                           
 14381                           ;main.c: 100: CTMU_init();
 14382  015374  EC73  F0B4         	call	_CTMU_init	;wreg free
 14383                           
 14384                           ;main.c: 101: USB_init();
 14385  015378  EC6F  F0B5         	call	_USB_init	;wreg free
 14386                           
 14387                           ;main.c: 104: static uint8_t txbuf[2000];
 14388                           ;main.c: 105: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
 14389  01537C  0E9E               	movlw	low _tx_buf
 14390  01537E  0100               	movlb	0	; () banked
 14391  015380  6FB5               	movwf	ringbuf_init@rb& (0+255),b
 14392  015382  0E00               	movlw	high _tx_buf
 14393  015384  0100               	movlb	0	; () banked
 14394  015386  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
 14395  015388  0EA4               	movlw	low main_init@txbuf
 14396  01538A  0100               	movlb	0	; () banked
 14397  01538C  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
 14398  01538E  0E04               	movlw	high main_init@txbuf
 14399  015390  0100               	movlb	0	; () banked
 14400  015392  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 14401  015394  0E07               	movlw	7
 14402  015396  0100               	movlb	0	; () banked
 14403  015398  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 14404  01539A  0ED0               	movlw	208
 14405  01539C  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
 14406  01539E  ECF4  F0B0         	call	_ringbuf_init	;wreg free
 14407                           
 14408                           ;main.c: 106: static uint8_t rxbuf[100];
 14409                           ;main.c: 107: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
 14410  0153A2  0EE8               	movlw	low _rx_buf
 14411  0153A4  0100               	movlb	0	; () banked
 14412  0153A6  6FB5               	movwf	ringbuf_init@rb& (0+255),b
 14413  0153A8  0E01               	movlw	high _rx_buf
 14414  0153AA  0100               	movlb	0	; () banked
 14415  0153AC  6FB6               	movwf	(ringbuf_init@rb+1)& (0+255),b
 14416  0153AE  0E00               	movlw	low main_init@rxbuf
 14417  0153B0  0100               	movlb	0	; () banked
 14418  0153B2  6FB7               	movwf	ringbuf_init@internal_buf& (0+255),b
 14419  0153B4  0E04               	movlw	high main_init@rxbuf
 14420  0153B6  0100               	movlb	0	; () banked
 14421  0153B8  6FB8               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 14422  0153BA  0E00               	movlw	0
 14423  0153BC  0100               	movlb	0	; () banked
 14424  0153BE  6FBA               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 14425  0153C0  0E64               	movlw	100
 14426  0153C2  6FB9               	movwf	ringbuf_init@bufsize& (0+255),b
 14427  0153C4  ECF4  F0B0         	call	_ringbuf_init	;wreg free
 14428  0153C8  0012               	return		;funcret
 14429  0153CA                     __end_of_main_init:
 14430                           	opt stack 0
 14431                           tblptru	equ	0xFF8
 14432                           tblptrh	equ	0xFF7
 14433                           tblptrl	equ	0xFF6
 14434                           tablat	equ	0xFF5
 14435                           prodh	equ	0xFF4
 14436                           prodl	equ	0xFF3
 14437                           intcon	equ	0xFF2
 14438                           intcon2	equ	0xFF1
 14439                           postinc0	equ	0xFEE
 14440                           wreg	equ	0xFE8
 14441                           indf1	equ	0xFE7
 14442                           postinc1	equ	0xFE6
 14443                           postdec1	equ	0xFE5
 14444                           fsr1h	equ	0xFE2
 14445                           fsr1l	equ	0xFE1
 14446                           indf2	equ	0xFDF
 14447                           postinc2	equ	0xFDE
 14448                           postdec2	equ	0xFDD
 14449                           plusw2	equ	0xFDB
 14450                           fsr2h	equ	0xFDA
 14451                           fsr2l	equ	0xFD9
 14452                           status	equ	0xFD8
 14453                           
 14454 ;; *************** function _timer3_init *****************
 14455 ;; Defined at:
 14456 ;;		line 85 in file "../My_header\My_header.h"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;  prescaler       1    wreg     unsigned char 
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;  prescaler       1    1[BANK0 ] unsigned char 
 14461 ;; Return value:  Size  Location     Type
 14462 ;;		None               void
 14463 ;; Registers used:
 14464 ;;		wreg, status,2, status,0
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14474 ;;Total ram usage:        2 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:   11
 14477 ;; This function calls:
 14478 ;;		Nothing
 14479 ;; This function is called by:
 14480 ;;		_main_init
 14481 ;; This function uses a non-reentrant model
 14482 ;;
 14483                           
 14484                           	psect	text48
 14485  0167B8                     __ptext48:
 14486                           	opt stack 0
 14487  0167B8                     _timer3_init:
 14488                           	opt stack 18
 14489                           
 14490                           ;incstack = 0
 14491                           ;timer3_init@prescaler stored from wreg
 14492  0167B8  0100               	movlb	0	; () banked
 14493  0167BA  6FB6               	movwf	timer3_init@prescaler& (0+255),b
 14494                           
 14495                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
 14496  0167BC  0E3F               	movlw	-193
 14497  0167BE  1679               	andwf	3961,f,c	;volatile
 14498                           
 14499                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
 14500  0167C0  9679               	bcf	3961,3,c	;volatile
 14501                           
 14502                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
 14503  0167C2  C0B6  F0B5         	movff	timer3_init@prescaler,??_timer3_init
 14504  0167C6  0100               	movlb	0	; () banked
 14505  0167C8  3BB5               	swapf	??_timer3_init& (0+255),f,b
 14506  0167CA  5079               	movf	3961,w,c	;volatile
 14507  0167CC  0100               	movlb	0	; () banked
 14508  0167CE  19B5               	xorwf	??_timer3_init& (0+255),w,b
 14509  0167D0  0BCF               	andlw	-49
 14510  0167D2  19B5               	xorwf	??_timer3_init& (0+255),w,b
 14511  0167D4  6E79               	movwf	3961,c	;volatile
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
 14515  0167D6  9E79               	bcf	3961,7,c	;volatile
 14516                           
 14517                           ; BSR set to: 0
 14518                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
 14519  0167D8  8079               	bsf	3961,0,c	;volatile
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
 14523  0167DA  92A2               	bcf	4002,1,c	;volatile
 14524                           
 14525                           ; BSR set to: 0
 14526                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
 14527  0167DC  92A1               	bcf	4001,1,c	;volatile
 14528                           
 14529                           ; BSR set to: 0
 14530                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
 14531  0167DE  82A0               	bsf	4000,1,c	;volatile
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
 14535  0167E0  8CF2               	bsf	intcon,6,c	;volatile
 14536                           
 14537                           ; BSR set to: 0
 14538  0167E2  0012               	return		;funcret
 14539  0167E4                     __end_of_timer3_init:
 14540                           	opt stack 0
 14541                           tblptru	equ	0xFF8
 14542                           tblptrh	equ	0xFF7
 14543                           tblptrl	equ	0xFF6
 14544                           tablat	equ	0xFF5
 14545                           prodh	equ	0xFF4
 14546                           prodl	equ	0xFF3
 14547                           intcon	equ	0xFF2
 14548                           intcon2	equ	0xFF1
 14549                           postinc0	equ	0xFEE
 14550                           wreg	equ	0xFE8
 14551                           indf1	equ	0xFE7
 14552                           postinc1	equ	0xFE6
 14553                           postdec1	equ	0xFE5
 14554                           fsr1h	equ	0xFE2
 14555                           fsr1l	equ	0xFE1
 14556                           indf2	equ	0xFDF
 14557                           postinc2	equ	0xFDE
 14558                           postdec2	equ	0xFDD
 14559                           plusw2	equ	0xFDB
 14560                           fsr2h	equ	0xFDA
 14561                           fsr2l	equ	0xFD9
 14562                           status	equ	0xFD8
 14563                           
 14564 ;; *************** function _timer1_init *****************
 14565 ;; Defined at:
 14566 ;;		line 54 in file "../My_header\My_header.h"
 14567 ;; Parameters:    Size  Location     Type
 14568 ;;  prescaler       1    wreg     unsigned char 
 14569 ;;  clock_select    1    0[BANK0 ] unsigned char 
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;  prescaler       1    2[BANK0 ] unsigned char 
 14572 ;; Return value:  Size  Location     Type
 14573 ;;		None               void
 14574 ;; Registers used:
 14575 ;;		wreg, status,2, status,0
 14576 ;; Tracked objects:
 14577 ;;		On entry : 0/0
 14578 ;;		On exit  : 0/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14581 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14584 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14585 ;;Total ram usage:        3 bytes
 14586 ;; Hardware stack levels used:    1
 14587 ;; Hardware stack levels required when called:   11
 14588 ;; This function calls:
 14589 ;;		Nothing
 14590 ;; This function is called by:
 14591 ;;		_main_init
 14592 ;; This function uses a non-reentrant model
 14593 ;;
 14594                           
 14595                           	psect	text49
 14596  01628E                     __ptext49:
 14597                           	opt stack 0
 14598  01628E                     _timer1_init:
 14599                           	opt stack 18
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;incstack = 0
 14603                           ;timer1_init@prescaler stored from wreg
 14604  01628E  0100               	movlb	0	; () banked
 14605  016290  6FB7               	movwf	timer1_init@prescaler& (0+255),b
 14606                           
 14607                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
 14608  016292  C0B5  F0B6         	movff	timer1_init@clock_select,??_timer1_init
 14609  016296  0100               	movlb	0	; () banked
 14610  016298  3BB6               	swapf	??_timer1_init& (0+255),f,b
 14611  01629A  47B6               	rlncf	??_timer1_init& (0+255),f,b
 14612  01629C  47B6               	rlncf	??_timer1_init& (0+255),f,b
 14613  01629E  50CD               	movf	4045,w,c	;volatile
 14614  0162A0  0100               	movlb	0	; () banked
 14615  0162A2  19B6               	xorwf	??_timer1_init& (0+255),w,b
 14616  0162A4  0B3F               	andlw	-193
 14617  0162A6  19B6               	xorwf	??_timer1_init& (0+255),w,b
 14618  0162A8  6ECD               	movwf	4045,c	;volatile
 14619                           
 14620                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 14621  0162AA  0E02               	movlw	2
 14622  0162AC  0100               	movlb	0	; () banked
 14623  0162AE  19B5               	xorwf	timer1_init@clock_select& (0+255),w,b
 14624  0162B0  A4D8               	btfss	status,2,c
 14625  0162B2  D002               	goto	l142
 14626                           
 14627                           ; BSR set to: 0
 14628  0162B4  86CD               	bsf	4045,3,c	;volatile
 14629  0162B6  D001               	goto	l10526
 14630  0162B8                     l142:
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
 14634  0162B8  96CD               	bcf	4045,3,c	;volatile
 14635  0162BA                     l10526:
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
 14639  0162BA  C0B7  F0B6         	movff	timer1_init@prescaler,??_timer1_init
 14640  0162BE  0100               	movlb	0	; () banked
 14641  0162C0  3BB6               	swapf	??_timer1_init& (0+255),f,b
 14642  0162C2  50CD               	movf	4045,w,c	;volatile
 14643  0162C4  0100               	movlb	0	; () banked
 14644  0162C6  19B6               	xorwf	??_timer1_init& (0+255),w,b
 14645  0162C8  0BCF               	andlw	-49
 14646  0162CA  19B6               	xorwf	??_timer1_init& (0+255),w,b
 14647  0162CC  6ECD               	movwf	4045,c	;volatile
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
 14651  0162CE  84CD               	bsf	4045,2,c	;volatile
 14652                           
 14653                           ; BSR set to: 0
 14654                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
 14655  0162D0  92CD               	bcf	4045,1,c	;volatile
 14656                           
 14657                           ; BSR set to: 0
 14658                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
 14659  0162D2  80CD               	bsf	4045,0,c	;volatile
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
 14663  0162D4  909F               	bcf	3999,0,c	;volatile
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
 14667  0162D6  909E               	bcf	3998,0,c	;volatile
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
 14671  0162D8  809D               	bsf	3997,0,c	;volatile
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
 14675  0162DA  8CF2               	bsf	intcon,6,c	;volatile
 14676                           
 14677                           ; BSR set to: 0
 14678  0162DC  0012               	return		;funcret
 14679  0162DE                     __end_of_timer1_init:
 14680                           	opt stack 0
 14681                           tblptru	equ	0xFF8
 14682                           tblptrh	equ	0xFF7
 14683                           tblptrl	equ	0xFF6
 14684                           tablat	equ	0xFF5
 14685                           prodh	equ	0xFF4
 14686                           prodl	equ	0xFF3
 14687                           intcon	equ	0xFF2
 14688                           intcon2	equ	0xFF1
 14689                           postinc0	equ	0xFEE
 14690                           wreg	equ	0xFE8
 14691                           indf1	equ	0xFE7
 14692                           postinc1	equ	0xFE6
 14693                           postdec1	equ	0xFE5
 14694                           fsr1h	equ	0xFE2
 14695                           fsr1l	equ	0xFE1
 14696                           indf2	equ	0xFDF
 14697                           postinc2	equ	0xFDE
 14698                           postdec2	equ	0xFDD
 14699                           plusw2	equ	0xFDB
 14700                           fsr2h	equ	0xFDA
 14701                           fsr2l	equ	0xFD9
 14702                           status	equ	0xFD8
 14703                           
 14704 ;; *************** function _timer0_init *****************
 14705 ;; Defined at:
 14706 ;;		line 15 in file "../My_header\My_header.h"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;  prescaler       1    wreg     unsigned char 
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;  prescaler       1    1[BANK0 ] unsigned char 
 14711 ;; Return value:  Size  Location     Type
 14712 ;;		None               void
 14713 ;; Registers used:
 14714 ;;		wreg, status,2, status,0
 14715 ;; Tracked objects:
 14716 ;;		On entry : 0/0
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14724 ;;Total ram usage:        2 bytes
 14725 ;; Hardware stack levels used:    1
 14726 ;; Hardware stack levels required when called:   11
 14727 ;; This function calls:
 14728 ;;		Nothing
 14729 ;; This function is called by:
 14730 ;;		_main_init
 14731 ;; This function uses a non-reentrant model
 14732 ;;
 14733                           
 14734                           	psect	text50
 14735  0164C2                     __ptext50:
 14736                           	opt stack 0
 14737  0164C2                     _timer0_init:
 14738                           	opt stack 18
 14739                           
 14740                           ; BSR set to: 0
 14741                           ;incstack = 0
 14742                           ;timer0_init@prescaler stored from wreg
 14743  0164C2  0100               	movlb	0	; () banked
 14744  0164C4  6FB6               	movwf	timer0_init@prescaler& (0+255),b
 14745                           
 14746                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
 14747  0164C6  8ED5               	bsf	4053,7,c	;volatile
 14748                           
 14749                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
 14750  0164C8  8CD5               	bsf	4053,6,c	;volatile
 14751                           
 14752                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
 14753  0164CA  9AD5               	bcf	4053,5,c	;volatile
 14754                           
 14755                           ;My_header\My_header.h: 19: if (prescaler == 0) {
 14756  0164CC  0100               	movlb	0	; () banked
 14757  0164CE  51B6               	movf	timer0_init@prescaler& (0+255),w,b
 14758  0164D0  0100               	movlb	0	; () banked
 14759  0164D2  A4D8               	btfss	status,2,c
 14760  0164D4  D002               	goto	l137
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
 14764  0164D6  86D5               	bsf	4053,3,c	;volatile
 14765                           
 14766                           ;My_header\My_header.h: 21: } else {
 14767  0164D8  D00C               	goto	l10514
 14768  0164DA                     l137:
 14769                           
 14770                           ; BSR set to: 0
 14771                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
 14772  0164DA  96D5               	bcf	4053,3,c	;volatile
 14773                           
 14774                           ; BSR set to: 0
 14775                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
 14776  0164DC  C0B6  F0B5         	movff	timer0_init@prescaler,??_timer0_init
 14777  0164E0  0EFF               	movlw	255
 14778  0164E2  0100               	movlb	0	; () banked
 14779  0164E4  27B5               	addwf	??_timer0_init& (0+255),f,b
 14780  0164E6  50D5               	movf	4053,w,c	;volatile
 14781  0164E8  0100               	movlb	0	; () banked
 14782  0164EA  19B5               	xorwf	??_timer0_init& (0+255),w,b
 14783  0164EC  0BF8               	andlw	-8
 14784  0164EE  19B5               	xorwf	??_timer0_init& (0+255),w,b
 14785  0164F0  6ED5               	movwf	4053,c	;volatile
 14786  0164F2                     l10514:
 14787                           
 14788                           ; BSR set to: 0
 14789                           ;My_header\My_header.h: 24: }
 14790                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
 14791  0164F2  8AF2               	bsf	intcon,5,c	;volatile
 14792                           
 14793                           ; BSR set to: 0
 14794                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
 14795  0164F4  94F2               	bcf	intcon,2,c	;volatile
 14796                           
 14797                           ; BSR set to: 0
 14798                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
 14799  0164F6  94F1               	bcf	intcon2,2,c	;volatile
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
 14803  0164F8  8CF2               	bsf	intcon,6,c	;volatile
 14804                           
 14805                           ; BSR set to: 0
 14806  0164FA  0012               	return		;funcret
 14807  0164FC                     __end_of_timer0_init:
 14808                           	opt stack 0
 14809                           tblptru	equ	0xFF8
 14810                           tblptrh	equ	0xFF7
 14811                           tblptrl	equ	0xFF6
 14812                           tablat	equ	0xFF5
 14813                           prodh	equ	0xFF4
 14814                           prodl	equ	0xFF3
 14815                           intcon	equ	0xFF2
 14816                           intcon2	equ	0xFF1
 14817                           postinc0	equ	0xFEE
 14818                           wreg	equ	0xFE8
 14819                           indf1	equ	0xFE7
 14820                           postinc1	equ	0xFE6
 14821                           postdec1	equ	0xFE5
 14822                           fsr1h	equ	0xFE2
 14823                           fsr1l	equ	0xFE1
 14824                           indf2	equ	0xFDF
 14825                           postinc2	equ	0xFDE
 14826                           postdec2	equ	0xFDD
 14827                           plusw2	equ	0xFDB
 14828                           fsr2h	equ	0xFDA
 14829                           fsr2l	equ	0xFD9
 14830                           status	equ	0xFD8
 14831                           
 14832 ;; *************** function _ringbuf_init *****************
 14833 ;; Defined at:
 14834 ;;		line 24 in file "../My_header\My_ringbuf.h"
 14835 ;; Parameters:    Size  Location     Type
 14836 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 14837 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 14838 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 14839 ;;		 -> main_init@rxbuf(100), main_init@txbuf(2000), rx_loop@buf(100), 
 14840 ;;  bufsize         2    4[BANK0 ] unsigned int 
 14841 ;; Auto vars:     Size  Location     Type
 14842 ;;		None
 14843 ;; Return value:  Size  Location     Type
 14844 ;;		None               void
 14845 ;; Registers used:
 14846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14847 ;; Tracked objects:
 14848 ;;		On entry : 0/0
 14849 ;;		On exit  : 0/0
 14850 ;;		Unchanged: 0/0
 14851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14852 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14855 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14856 ;;Total ram usage:        6 bytes
 14857 ;; Hardware stack levels used:    1
 14858 ;; Hardware stack levels required when called:   11
 14859 ;; This function calls:
 14860 ;;		Nothing
 14861 ;; This function is called by:
 14862 ;;		_rx_loop
 14863 ;;		_main_init
 14864 ;; This function uses a non-reentrant model
 14865 ;;
 14866                           
 14867                           	psect	text51
 14868  0161E8                     __ptext51:
 14869                           	opt stack 0
 14870  0161E8                     _ringbuf_init:
 14871                           	opt stack 18
 14872                           
 14873                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 14874                           
 14875                           ; BSR set to: 0
 14876                           ;incstack = 0
 14877  0161E8  C0B5  FFD9         	movff	ringbuf_init@rb,fsr2l
 14878  0161EC  C0B6  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 14879  0161F0  C0B7  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 14880  0161F4  C0B8  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 14881                           
 14882                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 14883  0161F8  0100               	movlb	0	; () banked
 14884  0161FA  EE20 F002          	lfsr	2,2
 14885  0161FE  51B5               	movf	ringbuf_init@rb& (0+255),w,b
 14886  016200  26D9               	addwf	fsr2l,f,c
 14887  016202  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 14888  016204  22DA               	addwfc	fsr2h,f,c
 14889  016206  C0B9  FFDE         	movff	ringbuf_init@bufsize,postinc2
 14890  01620A  C0BA  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 14891                           
 14892                           ; BSR set to: 0
 14893                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 14894  01620E  0100               	movlb	0	; () banked
 14895  016210  EE20 F004          	lfsr	2,4
 14896  016214  51B5               	movf	ringbuf_init@rb& (0+255),w,b
 14897  016216  26D9               	addwf	fsr2l,f,c
 14898  016218  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 14899  01621A  22DA               	addwfc	fsr2h,f,c
 14900  01621C  0E00               	movlw	0
 14901  01621E  6EDE               	movwf	postinc2,c
 14902  016220  0E00               	movlw	0
 14903  016222  6EDD               	movwf	postdec2,c
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 14907  016224  0100               	movlb	0	; () banked
 14908  016226  EE20 F006          	lfsr	2,6
 14909  01622A  51B5               	movf	ringbuf_init@rb& (0+255),w,b
 14910  01622C  26D9               	addwf	fsr2l,f,c
 14911  01622E  51B6               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 14912  016230  22DA               	addwfc	fsr2h,f,c
 14913  016232  0E00               	movlw	0
 14914  016234  6EDE               	movwf	postinc2,c
 14915  016236  0E00               	movlw	0
 14916  016238  6EDD               	movwf	postdec2,c
 14917                           
 14918                           ; BSR set to: 0
 14919  01623A  0012               	return		;funcret
 14920  01623C                     __end_of_ringbuf_init:
 14921                           	opt stack 0
 14922                           tblptru	equ	0xFF8
 14923                           tblptrh	equ	0xFF7
 14924                           tblptrl	equ	0xFF6
 14925                           tablat	equ	0xFF5
 14926                           prodh	equ	0xFF4
 14927                           prodl	equ	0xFF3
 14928                           intcon	equ	0xFF2
 14929                           intcon2	equ	0xFF1
 14930                           postinc0	equ	0xFEE
 14931                           wreg	equ	0xFE8
 14932                           indf1	equ	0xFE7
 14933                           postinc1	equ	0xFE6
 14934                           postdec1	equ	0xFE5
 14935                           fsr1h	equ	0xFE2
 14936                           fsr1l	equ	0xFE1
 14937                           indf2	equ	0xFDF
 14938                           postinc2	equ	0xFDE
 14939                           postdec2	equ	0xFDD
 14940                           plusw2	equ	0xFDB
 14941                           fsr2h	equ	0xFDA
 14942                           fsr2l	equ	0xFD9
 14943                           status	equ	0xFD8
 14944                           
 14945 ;; *************** function _USB_init *****************
 14946 ;; Defined at:
 14947 ;;		line 7 in file "../My_header/usb_cdc/My_usb_cdc.c"
 14948 ;; Parameters:    Size  Location     Type
 14949 ;;		None
 14950 ;; Auto vars:     Size  Location     Type
 14951 ;;		None
 14952 ;; Return value:  Size  Location     Type
 14953 ;;		None               void
 14954 ;; Registers used:
 14955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14956 ;; Tracked objects:
 14957 ;;		On entry : 0/0
 14958 ;;		On exit  : 0/0
 14959 ;;		Unchanged: 0/0
 14960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14965 ;;Total ram usage:        0 bytes
 14966 ;; Hardware stack levels used:    1
 14967 ;; Hardware stack levels required when called:   13
 14968 ;; This function calls:
 14969 ;;		_USBDeviceAttach
 14970 ;;		_USBDeviceInit
 14971 ;; This function is called by:
 14972 ;;		_main_init
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976                           	psect	text52
 14977  016ADE                     __ptext52:
 14978                           	opt stack 0
 14979  016ADE                     _USB_init:
 14980                           	opt stack 16
 14981                           
 14982                           ;My_usb_cdc.c: 8: USBDeviceInit();
 14983                           
 14984                           ; BSR set to: 0
 14985                           ;incstack = 0
 14986  016ADE  EC1B  F097         	call	_USBDeviceInit	;wreg free
 14987                           
 14988                           ;My_usb_cdc.c: 9: USBDeviceAttach();
 14989  016AE2  EC9A  F0B2         	call	_USBDeviceAttach	;wreg free
 14990  016AE6  0012               	return		;funcret
 14991  016AE8                     __end_of_USB_init:
 14992                           	opt stack 0
 14993                           tblptru	equ	0xFF8
 14994                           tblptrh	equ	0xFF7
 14995                           tblptrl	equ	0xFF6
 14996                           tablat	equ	0xFF5
 14997                           prodh	equ	0xFF4
 14998                           prodl	equ	0xFF3
 14999                           intcon	equ	0xFF2
 15000                           intcon2	equ	0xFF1
 15001                           postinc0	equ	0xFEE
 15002                           wreg	equ	0xFE8
 15003                           indf1	equ	0xFE7
 15004                           postinc1	equ	0xFE6
 15005                           postdec1	equ	0xFE5
 15006                           fsr1h	equ	0xFE2
 15007                           fsr1l	equ	0xFE1
 15008                           indf2	equ	0xFDF
 15009                           postinc2	equ	0xFDE
 15010                           postdec2	equ	0xFDD
 15011                           plusw2	equ	0xFDB
 15012                           fsr2h	equ	0xFDA
 15013                           fsr2l	equ	0xFD9
 15014                           status	equ	0xFD8
 15015                           
 15016 ;; *************** function _USBDeviceInit *****************
 15017 ;; Defined at:
 15018 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;  i               1    8[BANK0 ] unsigned char 
 15023 ;; Return value:  Size  Location     Type
 15024 ;;		None               void
 15025 ;; Registers used:
 15026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15035 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15036 ;;Total ram usage:        1 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; Hardware stack levels required when called:   12
 15039 ;; This function calls:
 15040 ;;		_memset
 15041 ;; This function is called by:
 15042 ;;		_USB_init
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text53
 15047  012E36                     __ptext53:
 15048                           	opt stack 0
 15049  012E36                     _USBDeviceInit:
 15050                           	opt stack 16
 15051                           
 15052                           ;usb_device.c: 300: uint8_t i;
 15053                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 15054                           
 15055                           ;incstack = 0
 15056  012E36  98A0               	bcf	4000,4,c	;volatile
 15057                           
 15058                           ;usb_device.c: 305: {UEIR = 0;};
 15059  012E38  0E00               	movlw	0
 15060  012E3A  6E63               	movwf	3939,c	;volatile
 15061                           
 15062                           ;usb_device.c: 308: {UIR = 0;};
 15063  012E3C  0E00               	movlw	0
 15064  012E3E  6E62               	movwf	3938,c	;volatile
 15065                           
 15066                           ;usb_device.c: 311: UEP0 = 0;
 15067  012E40  0E00               	movlw	0
 15068  012E42  010F               	movlb	15	; () banked
 15069  012E44  6F26               	movwf	38,b	;volatile
 15070                           
 15071                           ; BSR set to: 15
 15072                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 15073  012E46  0E27               	movlw	39
 15074  012E48  0100               	movlb	0	; () banked
 15075  012E4A  6FB5               	movwf	memset@p1& (0+255),b
 15076  012E4C  0E0F               	movlw	15
 15077  012E4E  0100               	movlb	0	; () banked
 15078  012E50  6FB6               	movwf	(memset@p1+1)& (0+255),b
 15079  012E52  0E00               	movlw	0
 15080  012E54  0100               	movlb	0	; () banked
 15081  012E56  6FB8               	movwf	(memset@c+1)& (0+255),b
 15082  012E58  0E00               	movlw	0
 15083  012E5A  6FB7               	movwf	memset@c& (0+255),b
 15084  012E5C  0E00               	movlw	0
 15085  012E5E  0100               	movlb	0	; () banked
 15086  012E60  6FBA               	movwf	(memset@n+1)& (0+255),b
 15087  012E62  0E02               	movlw	2
 15088  012E64  6FB9               	movwf	memset@n& (0+255),b
 15089  012E66  EC08  F0B3         	call	_memset	;wreg free
 15090                           
 15091                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15092  012E6A  0E16               	movlw	22
 15093  012E6C  010F               	movlb	15	; () banked
 15094  012E6E  6F39               	movwf	57,b	;volatile
 15095                           
 15096                           ; BSR set to: 15
 15097  012E70  0E9F               	movlw	159
 15098  012E72  010F               	movlb	15	; () banked
 15099  012E74  6F37               	movwf	55,b	;volatile
 15100                           
 15101                           ; BSR set to: 15
 15102  012E76  0E7B               	movlw	123
 15103  012E78  010F               	movlb	15	; () banked
 15104  012E7A  6F36               	movwf	54,b	;volatile
 15105                           
 15106                           ; BSR set to: 15
 15107                           ;usb_device.c: 318: ;
 15108                           ;usb_device.c: 321: ;
 15109                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15110  012E7C  0E00               	movlw	0
 15111  012E7E  0100               	movlb	0	; () banked
 15112  012E80  6FBD               	movwf	USBDeviceInit@i& (0+255),b
 15113  012E82                     l10316:
 15114                           
 15115                           ; BSR set to: 0
 15116  012E82  0E0B               	movlw	11
 15117  012E84  0100               	movlb	0	; () banked
 15118  012E86  65BD               	cpfsgt	USBDeviceInit@i& (0+255),b
 15119  012E88  D001               	goto	l10320
 15120  012E8A  D010               	goto	l1139
 15121  012E8C                     l10320:
 15122                           
 15123                           ; BSR set to: 0
 15124                           ;usb_device.c: 325: {
 15125                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 15126  012E8C  0100               	movlb	0	; () banked
 15127  012E8E  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 15128  012E90  0D04               	mullw	4
 15129  012E92  0E00               	movlw	0
 15130  012E94  24F3               	addwf	prodl,w,c
 15131  012E96  6ED9               	movwf	fsr2l,c
 15132  012E98  0E0D               	movlw	13
 15133  012E9A  20F4               	addwfc	prodh,w,c
 15134  012E9C  6EDA               	movwf	fsr2h,c
 15135  012E9E  6ADE               	clrf	postinc2,c
 15136  012EA0  6ADE               	clrf	postinc2,c
 15137  012EA2  6ADE               	clrf	postinc2,c
 15138  012EA4  6ADD               	clrf	postdec2,c
 15139                           
 15140                           ; BSR set to: 0
 15141  012EA6  0100               	movlb	0	; () banked
 15142  012EA8  2BBD               	incf	USBDeviceInit@i& (0+255),f,b
 15143  012EAA  D7EB               	goto	l10316
 15144  012EAC                     l1139:
 15145                           
 15146                           ; BSR set to: 0
 15147                           ;usb_device.c: 327: }
 15148                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 15149  012EAC  8C65               	bsf	3941,6,c	;volatile
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;usb_device.c: 333: UADDR = 0x00;
 15153  012EAE  0E00               	movlw	0
 15154  012EB0  010F               	movlb	15	; () banked
 15155  012EB2  6F38               	movwf	56,b	;volatile
 15156                           
 15157                           ; BSR set to: 15
 15158                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 15159  012EB4  9865               	bcf	3941,4,c	;volatile
 15160                           
 15161                           ; BSR set to: 15
 15162                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 15163  012EB6  9C65               	bcf	3941,6,c	;volatile
 15164                           
 15165                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 15166  012EB8  D00C               	goto	l10340
 15167  012EBA                     l10332:
 15168                           
 15169                           ;usb_device.c: 343: {
 15170                           ;usb_device.c: 344: (UIR &= 0xF7);
 15171  012EBA  9662               	bcf	3938,3,c	;volatile
 15172                           
 15173                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 15174  012EBC  0E00               	movlw	0
 15175  012EBE  0100               	movlb	0	; () banked
 15176  012EC0  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15177                           
 15178                           ; BSR set to: 0
 15179                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 15180  012EC2  0E00               	movlw	0
 15181  012EC4  0100               	movlb	0	; () banked
 15182  012EC6  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 15183                           
 15184                           ; BSR set to: 0
 15185                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 15186  012EC8  0E00               	movlw	0
 15187  012ECA  0100               	movlb	0	; () banked
 15188  012ECC  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 15189  012ECE  0E00               	movlw	0
 15190  012ED0  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 15191  012ED2                     l10340:
 15192  012ED2  B662               	btfsc	3938,3,c	;volatile
 15193  012ED4  D7F2               	goto	l10332
 15194                           
 15195                           ;usb_device.c: 349: }
 15196                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 15197  012ED6  0E01               	movlw	1
 15198  012ED8  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15199                           
 15200                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 15201  012EDA  0E01               	movlw	1
 15202  012EDC  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15203                           
 15204                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 15205  012EDE  0E00               	movlw	0
 15206  012EE0  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15207                           
 15208                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 15209  012EE2  0E00               	movlw	0
 15210  012EE4  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15211                           
 15212                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 15213  012EE6  0E00               	movlw	0
 15214  012EE8  0100               	movlb	0	; () banked
 15215  012EEA  6F90               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15216                           
 15217                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 15218  012EEC  0E00               	movlw	0
 15219  012EEE  0100               	movlb	0	; () banked
 15220  012EF0  6FBD               	movwf	USBDeviceInit@i& (0+255),b
 15221  012EF2                     l10344:
 15222                           
 15223                           ; BSR set to: 0
 15224  012EF2  0E02               	movlw	2
 15225  012EF4  0100               	movlb	0	; () banked
 15226  012EF6  65BD               	cpfsgt	USBDeviceInit@i& (0+255),b
 15227  012EF8  D001               	goto	l10348
 15228  012EFA  D033               	goto	l10354
 15229  012EFC                     l10348:
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;usb_device.c: 363: {
 15233                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 15234  012EFC  0100               	movlb	0	; () banked
 15235  012EFE  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 15236  012F00  0D02               	mullw	2
 15237  012F02  0E6F               	movlw	low _pBDTEntryIn
 15238  012F04  24F3               	addwf	prodl,w,c
 15239  012F06  6ED9               	movwf	fsr2l,c
 15240  012F08  0E00               	movlw	high _pBDTEntryIn
 15241  012F0A  20F4               	addwfc	prodh,w,c
 15242  012F0C  6EDA               	movwf	fsr2h,c
 15243  012F0E  0E00               	movlw	0
 15244  012F10  6EDE               	movwf	postinc2,c
 15245  012F12  0E00               	movlw	0
 15246  012F14  6EDD               	movwf	postdec2,c
 15247                           
 15248                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 15249  012F16  0100               	movlb	0	; () banked
 15250  012F18  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 15251  012F1A  0D02               	mullw	2
 15252  012F1C  0E75               	movlw	low _pBDTEntryOut
 15253  012F1E  24F3               	addwf	prodl,w,c
 15254  012F20  6ED9               	movwf	fsr2l,c
 15255  012F22  0E00               	movlw	high _pBDTEntryOut
 15256  012F24  20F4               	addwfc	prodh,w,c
 15257  012F26  6EDA               	movwf	fsr2h,c
 15258  012F28  0E00               	movlw	0
 15259  012F2A  6EDE               	movwf	postinc2,c
 15260  012F2C  0E00               	movlw	0
 15261  012F2E  6EDD               	movwf	postdec2,c
 15262                           
 15263                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 15264  012F30  0100               	movlb	0	; () banked
 15265  012F32  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 15266  012F34  0D01               	mullw	1
 15267  012F36  0E7B               	movlw	low _ep_data_in
 15268  012F38  24F3               	addwf	prodl,w,c
 15269  012F3A  6ED9               	movwf	fsr2l,c
 15270  012F3C  0E00               	movlw	high _ep_data_in
 15271  012F3E  20F4               	addwfc	prodh,w,c
 15272  012F40  6EDA               	movwf	fsr2h,c
 15273  012F42  0E00               	movlw	0
 15274  012F44  6EDF               	movwf	indf2,c
 15275                           
 15276                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 15277  012F46  0100               	movlb	0	; () banked
 15278  012F48  51BD               	movf	USBDeviceInit@i& (0+255),w,b
 15279  012F4A  0D01               	mullw	1
 15280  012F4C  0E7E               	movlw	low _ep_data_out
 15281  012F4E  24F3               	addwf	prodl,w,c
 15282  012F50  6ED9               	movwf	fsr2l,c
 15283  012F52  0E00               	movlw	high _ep_data_out
 15284  012F54  20F4               	addwfc	prodh,w,c
 15285  012F56  6EDA               	movwf	fsr2h,c
 15286  012F58  0E00               	movlw	0
 15287  012F5A  6EDF               	movwf	indf2,c
 15288                           
 15289                           ; BSR set to: 0
 15290  012F5C  0100               	movlb	0	; () banked
 15291  012F5E  2BBD               	incf	USBDeviceInit@i& (0+255),f,b
 15292  012F60  D7C8               	goto	l10344
 15293  012F62                     l10354:
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;usb_device.c: 368: }
 15297                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15298  012F62  0E08               	movlw	8
 15299  012F64  0100               	movlb	0	; () banked
 15300  012F66  6F6F               	movwf	_pBDTEntryIn& (0+255),b
 15301  012F68  0E0D               	movlw	13
 15302  012F6A  0100               	movlb	0	; () banked
 15303  012F6C  6F70               	movwf	(_pBDTEntryIn+1)& (0+255),b
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 15307  012F6E  0E16               	movlw	22
 15308  012F70  010F               	movlb	15	; () banked
 15309  012F72  6F26               	movwf	38,b	;volatile
 15310                           
 15311                           ; BSR set to: 15
 15312                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15313  012F74  0E0D               	movlw	13
 15314  012F76  010D               	movlb	13	; () banked
 15315  012F78  6F03               	movwf	3,b	;volatile
 15316  012F7A  0E30               	movlw	48
 15317  012F7C  6F02               	movwf	2,b	;volatile
 15318                           
 15319                           ; BSR set to: 13
 15320                           ;usb_device.c: 376: BDT[0].CNT = 8;
 15321  012F7E  0E08               	movlw	8
 15322  012F80  010D               	movlb	13	; () banked
 15323  012F82  6F01               	movwf	1,b	;volatile
 15324                           
 15325                           ; BSR set to: 13
 15326                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 15327  012F84  0E04               	movlw	4
 15328  012F86  010D               	movlb	13	; () banked
 15329  012F88  6F00               	movwf	0,b	;volatile
 15330                           
 15331                           ; BSR set to: 13
 15332                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 15333  012F8A  010D               	movlb	13	; () banked
 15334  012F8C  8F00               	bsf	0,7,b	;volatile
 15335                           
 15336                           ; BSR set to: 13
 15337                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 15338  012F8E  0E00               	movlw	0
 15339  012F90  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 15340                           
 15341                           ; BSR set to: 13
 15342                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 15343  012F92  0E00               	movlw	0
 15344  012F94  6E45               	movwf	_USBDeviceState,c	;volatile
 15345                           
 15346                           ; BSR set to: 13
 15347  012F96  0012               	return		;funcret
 15348  012F98                     __end_of_USBDeviceInit:
 15349                           	opt stack 0
 15350                           tblptru	equ	0xFF8
 15351                           tblptrh	equ	0xFF7
 15352                           tblptrl	equ	0xFF6
 15353                           tablat	equ	0xFF5
 15354                           prodh	equ	0xFF4
 15355                           prodl	equ	0xFF3
 15356                           intcon	equ	0xFF2
 15357                           intcon2	equ	0xFF1
 15358                           postinc0	equ	0xFEE
 15359                           wreg	equ	0xFE8
 15360                           indf1	equ	0xFE7
 15361                           postinc1	equ	0xFE6
 15362                           postdec1	equ	0xFE5
 15363                           fsr1h	equ	0xFE2
 15364                           fsr1l	equ	0xFE1
 15365                           indf2	equ	0xFDF
 15366                           postinc2	equ	0xFDE
 15367                           postdec2	equ	0xFDD
 15368                           plusw2	equ	0xFDB
 15369                           fsr2h	equ	0xFDA
 15370                           fsr2l	equ	0xFD9
 15371                           status	equ	0xFD8
 15372                           
 15373 ;; *************** function _memset *****************
 15374 ;; Defined at:
 15375 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 15376 ;; Parameters:    Size  Location     Type
 15377 ;;  p1              2    0[BANK0 ] PTR void 
 15378 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15379 ;;  c               2    2[BANK0 ] int 
 15380 ;;  n               2    4[BANK0 ] unsigned int 
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;  p               2    6[BANK0 ] PTR unsigned char 
 15383 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15384 ;; Return value:  Size  Location     Type
 15385 ;;                  2    0[BANK0 ] PTR void 
 15386 ;; Registers used:
 15387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15388 ;; Tracked objects:
 15389 ;;		On entry : 0/0
 15390 ;;		On exit  : 0/0
 15391 ;;		Unchanged: 0/0
 15392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15393 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15394 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15396 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15397 ;;Total ram usage:        8 bytes
 15398 ;; Hardware stack levels used:    1
 15399 ;; Hardware stack levels required when called:   11
 15400 ;; This function calls:
 15401 ;;		Nothing
 15402 ;; This function is called by:
 15403 ;;		_USBDeviceInit
 15404 ;; This function uses a non-reentrant model
 15405 ;;
 15406                           
 15407                           	psect	text54
 15408  016610                     __ptext54:
 15409                           	opt stack 0
 15410  016610                     _memset:
 15411                           	opt stack 16
 15412                           
 15413                           ; BSR set to: 13
 15414                           ;incstack = 0
 15415  016610  C0B5  F0BB         	movff	memset@p1,memset@p
 15416  016614  C0B6  F0BC         	movff	memset@p1+1,memset@p+1
 15417  016618  D009               	goto	l9908
 15418  01661A                     l9904:
 15419  01661A  C0BB  FFD9         	movff	memset@p,fsr2l
 15420  01661E  C0BC  FFDA         	movff	memset@p+1,fsr2h
 15421  016622  C0B7  FFDF         	movff	memset@c,indf2
 15422  016626  0100               	movlb	0	; () banked
 15423  016628  4BBB               	infsnz	memset@p& (0+255),f,b
 15424  01662A  2BBC               	incf	(memset@p+1)& (0+255),f,b
 15425  01662C                     l9908:
 15426  01662C  0100               	movlb	0	; () banked
 15427  01662E  07B9               	decf	memset@n& (0+255),f,b
 15428  016630  A0D8               	btfss	status,0,c
 15429  016632  07BA               	decf	(memset@n+1)& (0+255),f,b
 15430  016634  0100               	movlb	0	; () banked
 15431  016636  29B9               	incf	memset@n& (0+255),w,b
 15432  016638  E1F0               	bnz	l9904
 15433  01663A  0100               	movlb	0	; () banked
 15434  01663C  29BA               	incf	(memset@n+1)& (0+255),w,b
 15435  01663E  B4D8               	btfsc	status,2,c
 15436  016640  0012               	return	
 15437  016642  D7EB               	goto	l9904
 15438  016644                     __end_of_memset:
 15439                           	opt stack 0
 15440                           tblptru	equ	0xFF8
 15441                           tblptrh	equ	0xFF7
 15442                           tblptrl	equ	0xFF6
 15443                           tablat	equ	0xFF5
 15444                           prodh	equ	0xFF4
 15445                           prodl	equ	0xFF3
 15446                           intcon	equ	0xFF2
 15447                           intcon2	equ	0xFF1
 15448                           postinc0	equ	0xFEE
 15449                           wreg	equ	0xFE8
 15450                           indf1	equ	0xFE7
 15451                           postinc1	equ	0xFE6
 15452                           postdec1	equ	0xFE5
 15453                           fsr1h	equ	0xFE2
 15454                           fsr1l	equ	0xFE1
 15455                           indf2	equ	0xFDF
 15456                           postinc2	equ	0xFDE
 15457                           postdec2	equ	0xFDD
 15458                           plusw2	equ	0xFDB
 15459                           fsr2h	equ	0xFDA
 15460                           fsr2l	equ	0xFD9
 15461                           status	equ	0xFD8
 15462                           
 15463 ;; *************** function _USBDeviceAttach *****************
 15464 ;; Defined at:
 15465 ;;		line 1352 in file "../My_header/usb_cdc/usb/usb_device.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;		None
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;		None
 15470 ;; Return value:  Size  Location     Type
 15471 ;;		None               void
 15472 ;; Registers used:
 15473 ;;		wreg, status,2
 15474 ;; Tracked objects:
 15475 ;;		On entry : 0/0
 15476 ;;		On exit  : 0/0
 15477 ;;		Unchanged: 0/0
 15478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;Total ram usage:        0 bytes
 15484 ;; Hardware stack levels used:    1
 15485 ;; Hardware stack levels required when called:   11
 15486 ;; This function calls:
 15487 ;;		Nothing
 15488 ;; This function is called by:
 15489 ;;		_USB_init
 15490 ;; This function uses a non-reentrant model
 15491 ;;
 15492                           
 15493                           	psect	text55
 15494  016534                     __ptext55:
 15495                           	opt stack 0
 15496  016534                     _USBDeviceAttach:
 15497                           	opt stack 17
 15498                           
 15499                           ;usb_device.c: 1356: {
 15500                           ;usb_device.c: 1357: if(1 == 1)
 15501                           
 15502                           ; BSR set to: 0
 15503                           ;incstack = 0
 15504  016534  5045               	movf	_USBDeviceState,w,c	;volatile
 15505  016536  A4D8               	btfss	status,2,c
 15506  016538  0012               	return	
 15507                           
 15508                           ;usb_device.c: 1358: {
 15509                           ;usb_device.c: 1360: UCON = 0;
 15510  01653A  0E00               	movlw	0
 15511  01653C  6E65               	movwf	3941,c	;volatile
 15512                           
 15513                           ;usb_device.c: 1363: UIE = 0;
 15514  01653E  0E00               	movlw	0
 15515  016540  010F               	movlb	15	; () banked
 15516  016542  6F36               	movwf	54,b	;volatile
 15517                           
 15518                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 15519  016544  0E16               	movlw	22
 15520  016546  010F               	movlb	15	; () banked
 15521  016548  6F39               	movwf	57,b	;volatile
 15522  01654A  0E9F               	movlw	159
 15523  01654C  010F               	movlb	15	; () banked
 15524  01654E  6F37               	movwf	55,b	;volatile
 15525  016550  0E7B               	movlw	123
 15526  016552  010F               	movlb	15	; () banked
 15527  016554  6F36               	movwf	54,b	;volatile
 15528                           
 15529                           ; BSR set to: 15
 15530                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 15531  016556  8ED0               	bsf	4048,7,c	;volatile
 15532                           
 15533                           ; BSR set to: 15
 15534  016558  88A2               	bsf	4002,4,c	;volatile
 15535                           
 15536                           ; BSR set to: 15
 15537  01655A  88A0               	bsf	4000,4,c	;volatile
 15538                           
 15539                           ; BSR set to: 15
 15540  01655C  8EF2               	bsf	intcon,7,c	;volatile
 15541                           
 15542                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 15543  01655E  D001               	goto	l1200
 15544  016560                     l1201:
 15545  016560  8665               	bsf	3941,3,c	;volatile
 15546  016562                     l1200:
 15547  016562  A665               	btfss	3941,3,c	;volatile
 15548  016564  D7FD               	goto	l1201
 15549                           
 15550                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 15551  016566  0E01               	movlw	1
 15552  016568  6E45               	movwf	_USBDeviceState,c	;volatile
 15553  01656A  0012               	return	
 15554  01656C                     __end_of_USBDeviceAttach:
 15555                           	opt stack 0
 15556                           tblptru	equ	0xFF8
 15557                           tblptrh	equ	0xFF7
 15558                           tblptrl	equ	0xFF6
 15559                           tablat	equ	0xFF5
 15560                           prodh	equ	0xFF4
 15561                           prodl	equ	0xFF3
 15562                           intcon	equ	0xFF2
 15563                           intcon2	equ	0xFF1
 15564                           postinc0	equ	0xFEE
 15565                           wreg	equ	0xFE8
 15566                           indf1	equ	0xFE7
 15567                           postinc1	equ	0xFE6
 15568                           postdec1	equ	0xFE5
 15569                           fsr1h	equ	0xFE2
 15570                           fsr1l	equ	0xFE1
 15571                           indf2	equ	0xFDF
 15572                           postinc2	equ	0xFDE
 15573                           postdec2	equ	0xFDD
 15574                           plusw2	equ	0xFDB
 15575                           fsr2h	equ	0xFDA
 15576                           fsr2l	equ	0xFD9
 15577                           status	equ	0xFD8
 15578                           
 15579 ;; *************** function _RTCC_init *****************
 15580 ;; Defined at:
 15581 ;;		line 56 in file "../My_header\My_RTCC.h"
 15582 ;; Parameters:    Size  Location     Type
 15583 ;;		None
 15584 ;; Auto vars:     Size  Location     Type
 15585 ;;		None
 15586 ;; Return value:  Size  Location     Type
 15587 ;;		None               void
 15588 ;; Registers used:
 15589 ;;		wreg, status,2
 15590 ;; Tracked objects:
 15591 ;;		On entry : 0/0
 15592 ;;		On exit  : 0/0
 15593 ;;		Unchanged: 0/0
 15594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15599 ;;Total ram usage:        0 bytes
 15600 ;; Hardware stack levels used:    1
 15601 ;; Hardware stack levels required when called:   11
 15602 ;; This function calls:
 15603 ;;		Nothing
 15604 ;; This function is called by:
 15605 ;;		_main_init
 15606 ;; This function uses a non-reentrant model
 15607 ;;
 15608                           
 15609                           	psect	text56
 15610  016704                     __ptext56:
 15611                           	opt stack 0
 15612  016704                     _RTCC_init:
 15613                           	opt stack 18
 15614                           
 15615                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
 15616                           
 15617                           ;incstack = 0
 15618  016704  010F               	movlb	15	; () banked
 15619  016706  8B3F               	bsf	63,5,b	;volatile
 15620                           
 15621                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
 15622  016708  010F               	movlb	15	; () banked
 15623  01670A  BB3F               	btfsc	63,5,b	;volatile
 15624  01670C  D006               	goto	l10718
 15625                           
 15626                           ; BSR set to: 15
 15627                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
 15628  01670E  0E55               	movlw	85
 15629  016710  6EA7               	movwf	4007,c	;volatile
 15630                           
 15631                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
 15632  016712  0EAA               	movlw	170
 15633  016714  6EA7               	movwf	4007,c	;volatile
 15634                           
 15635                           ; BSR set to: 15
 15636                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
 15637  016716  010F               	movlb	15	; () banked
 15638  016718  8B3F               	bsf	63,5,b	;volatile
 15639  01671A                     l10718:
 15640                           
 15641                           ; BSR set to: 15
 15642                           ;My_header\My_RTCC.h: 62: }
 15643                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
 15644  01671A  010F               	movlb	15	; () banked
 15645  01671C  8F3F               	bsf	63,7,b	;volatile
 15646                           
 15647                           ; BSR set to: 15
 15648                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
 15649  01671E  010F               	movlb	15	; () banked
 15650  016720  953F               	bcf	63,2,b	;volatile
 15651                           
 15652                           ; BSR set to: 15
 15653                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
 15654  016722  010F               	movlb	15	; () banked
 15655  016724  833C               	bsf	60,1,b	;volatile
 15656                           
 15657                           ; BSR set to: 15
 15658                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
 15659  016726  010F               	movlb	15	; () banked
 15660  016728  853C               	bsf	60,2,b	;volatile
 15661                           
 15662                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
 15663  01672A  0E00               	movlw	0
 15664  01672C  010F               	movlb	15	; () banked
 15665  01672E  6F3E               	movwf	62,b	;volatile
 15666                           
 15667                           ; BSR set to: 15
 15668  016730  0012               	return		;funcret
 15669  016732                     __end_of_RTCC_init:
 15670                           	opt stack 0
 15671                           tblptru	equ	0xFF8
 15672                           tblptrh	equ	0xFF7
 15673                           tblptrl	equ	0xFF6
 15674                           tablat	equ	0xFF5
 15675                           prodh	equ	0xFF4
 15676                           prodl	equ	0xFF3
 15677                           intcon	equ	0xFF2
 15678                           intcon2	equ	0xFF1
 15679                           postinc0	equ	0xFEE
 15680                           wreg	equ	0xFE8
 15681                           indf1	equ	0xFE7
 15682                           postinc1	equ	0xFE6
 15683                           postdec1	equ	0xFE5
 15684                           fsr1h	equ	0xFE2
 15685                           fsr1l	equ	0xFE1
 15686                           indf2	equ	0xFDF
 15687                           postinc2	equ	0xFDE
 15688                           postdec2	equ	0xFDD
 15689                           plusw2	equ	0xFDB
 15690                           fsr2h	equ	0xFDA
 15691                           fsr2l	equ	0xFD9
 15692                           status	equ	0xFD8
 15693                           
 15694 ;; *************** function _I2C_init *****************
 15695 ;; Defined at:
 15696 ;;		line 25 in file "../My_header\My_I2C.h"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;		None
 15699 ;; Auto vars:     Size  Location     Type
 15700 ;;		None
 15701 ;; Return value:  Size  Location     Type
 15702 ;;		None               void
 15703 ;; Registers used:
 15704 ;;		wreg, status,2
 15705 ;; Tracked objects:
 15706 ;;		On entry : 0/0
 15707 ;;		On exit  : 0/0
 15708 ;;		Unchanged: 0/0
 15709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15714 ;;Total ram usage:        0 bytes
 15715 ;; Hardware stack levels used:    1
 15716 ;; Hardware stack levels required when called:   11
 15717 ;; This function calls:
 15718 ;;		Nothing
 15719 ;; This function is called by:
 15720 ;;		_main_init
 15721 ;; This function uses a non-reentrant model
 15722 ;;
 15723                           
 15724                           	psect	text57
 15725  016ACC                     __ptext57:
 15726                           	opt stack 0
 15727  016ACC                     _I2C_init:
 15728                           	opt stack 18
 15729                           
 15730                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
 15731                           
 15732                           ; BSR set to: 15
 15733                           ;incstack = 0
 15734  016ACC  0E80               	movlw	128
 15735  016ACE  6EC7               	movwf	4039,c	;volatile
 15736                           
 15737                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
 15738  016AD0  0E28               	movlw	40
 15739  016AD2  6EC6               	movwf	4038,c	;volatile
 15740                           
 15741                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
 15742  016AD4  0E13               	movlw	19
 15743  016AD6  6EC8               	movwf	4040,c	;volatile
 15744                           
 15745                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
 15746  016AD8  969E               	bcf	3998,3,c	;volatile
 15747                           
 15748                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
 15749  016ADA  96A1               	bcf	4001,3,c	;volatile
 15750  016ADC  0012               	return		;funcret
 15751  016ADE                     __end_of_I2C_init:
 15752                           	opt stack 0
 15753                           tblptru	equ	0xFF8
 15754                           tblptrh	equ	0xFF7
 15755                           tblptrl	equ	0xFF6
 15756                           tablat	equ	0xFF5
 15757                           prodh	equ	0xFF4
 15758                           prodl	equ	0xFF3
 15759                           intcon	equ	0xFF2
 15760                           intcon2	equ	0xFF1
 15761                           postinc0	equ	0xFEE
 15762                           wreg	equ	0xFE8
 15763                           indf1	equ	0xFE7
 15764                           postinc1	equ	0xFE6
 15765                           postdec1	equ	0xFE5
 15766                           fsr1h	equ	0xFE2
 15767                           fsr1l	equ	0xFE1
 15768                           indf2	equ	0xFDF
 15769                           postinc2	equ	0xFDE
 15770                           postdec2	equ	0xFDD
 15771                           plusw2	equ	0xFDB
 15772                           fsr2h	equ	0xFDA
 15773                           fsr2l	equ	0xFD9
 15774                           status	equ	0xFD8
 15775                           
 15776 ;; *************** function _I2C_LCD_init *****************
 15777 ;; Defined at:
 15778 ;;		line 164 in file "../My_header\My_I2C.h"
 15779 ;; Parameters:    Size  Location     Type
 15780 ;;		None
 15781 ;; Auto vars:     Size  Location     Type
 15782 ;;		None
 15783 ;; Return value:  Size  Location     Type
 15784 ;;		None               void
 15785 ;; Registers used:
 15786 ;;		wreg, status,2, status,0, cstack
 15787 ;; Tracked objects:
 15788 ;;		On entry : 0/0
 15789 ;;		On exit  : 0/0
 15790 ;;		Unchanged: 0/0
 15791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15796 ;;Total ram usage:        0 bytes
 15797 ;; Hardware stack levels used:    1
 15798 ;; Hardware stack levels required when called:   15
 15799 ;; This function calls:
 15800 ;;		_Delay_ms
 15801 ;;		_I2C_LCD_Clear
 15802 ;;		_I2C_LCD_Command
 15803 ;; This function is called by:
 15804 ;;		_main_init
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808                           	psect	text58
 15809  016190                     __ptext58:
 15810                           	opt stack 0
 15811  016190                     _I2C_LCD_init:
 15812                           	opt stack 14
 15813                           
 15814                           ;My_header\My_I2C.h: 165: Delay_ms(40);
 15815                           
 15816                           ;incstack = 0
 15817  016190  0E00               	movlw	0
 15818  016192  0100               	movlb	0	; () banked
 15819  016194  6FB6               	movwf	(Delay_ms@ms+1)& (0+255),b
 15820  016196  0E28               	movlw	40
 15821  016198  6FB5               	movwf	Delay_ms@ms& (0+255),b
 15822  01619A  ECF2  F0B3         	call	_Delay_ms	;wreg free
 15823                           
 15824                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
 15825  01619E  0E38               	movlw	56
 15826  0161A0  ECB6  F0B2         	call	_I2C_LCD_Command
 15827                           
 15828                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
 15829  0161A4  0E39               	movlw	57
 15830  0161A6  ECB6  F0B2         	call	_I2C_LCD_Command
 15831                           
 15832                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
 15833  0161AA  0E14               	movlw	20
 15834  0161AC  ECB6  F0B2         	call	_I2C_LCD_Command
 15835                           
 15836                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
 15837  0161B0  0E70               	movlw	112
 15838  0161B2  ECB6  F0B2         	call	_I2C_LCD_Command
 15839                           
 15840                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
 15841  0161B6  0E56               	movlw	86
 15842  0161B8  ECB6  F0B2         	call	_I2C_LCD_Command
 15843                           
 15844                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
 15845  0161BC  0E6C               	movlw	108
 15846  0161BE  ECB6  F0B2         	call	_I2C_LCD_Command
 15847                           
 15848                           ;My_header\My_I2C.h: 172: Delay_ms(200);
 15849  0161C2  0E00               	movlw	0
 15850  0161C4  0100               	movlb	0	; () banked
 15851  0161C6  6FB6               	movwf	(Delay_ms@ms+1)& (0+255),b
 15852  0161C8  0EC8               	movlw	200
 15853  0161CA  6FB5               	movwf	Delay_ms@ms& (0+255),b
 15854  0161CC  ECF2  F0B3         	call	_Delay_ms	;wreg free
 15855                           
 15856                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
 15857  0161D0  0E38               	movlw	56
 15858  0161D2  ECB6  F0B2         	call	_I2C_LCD_Command
 15859                           
 15860                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
 15861  0161D6  0E0C               	movlw	12
 15862  0161D8  ECB6  F0B2         	call	_I2C_LCD_Command
 15863                           
 15864                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
 15865  0161DC  0E06               	movlw	6
 15866  0161DE  ECB6  F0B2         	call	_I2C_LCD_Command
 15867                           
 15868                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
 15869  0161E2  EC2C  F0B5         	call	_I2C_LCD_Clear	;wreg free
 15870  0161E6  0012               	return		;funcret
 15871  0161E8                     __end_of_I2C_LCD_init:
 15872                           	opt stack 0
 15873                           tblptru	equ	0xFF8
 15874                           tblptrh	equ	0xFF7
 15875                           tblptrl	equ	0xFF6
 15876                           tablat	equ	0xFF5
 15877                           prodh	equ	0xFF4
 15878                           prodl	equ	0xFF3
 15879                           intcon	equ	0xFF2
 15880                           intcon2	equ	0xFF1
 15881                           postinc0	equ	0xFEE
 15882                           wreg	equ	0xFE8
 15883                           indf1	equ	0xFE7
 15884                           postinc1	equ	0xFE6
 15885                           postdec1	equ	0xFE5
 15886                           fsr1h	equ	0xFE2
 15887                           fsr1l	equ	0xFE1
 15888                           indf2	equ	0xFDF
 15889                           postinc2	equ	0xFDE
 15890                           postdec2	equ	0xFDD
 15891                           plusw2	equ	0xFDB
 15892                           fsr2h	equ	0xFDA
 15893                           fsr2l	equ	0xFD9
 15894                           status	equ	0xFD8
 15895                           
 15896 ;; *************** function _I2C_LCD_Clear *****************
 15897 ;; Defined at:
 15898 ;;		line 107 in file "../My_header\My_I2C.h"
 15899 ;; Parameters:    Size  Location     Type
 15900 ;;		None
 15901 ;; Auto vars:     Size  Location     Type
 15902 ;;		None
 15903 ;; Return value:  Size  Location     Type
 15904 ;;		None               void
 15905 ;; Registers used:
 15906 ;;		wreg, status,2, status,0, cstack
 15907 ;; Tracked objects:
 15908 ;;		On entry : 0/0
 15909 ;;		On exit  : 0/0
 15910 ;;		Unchanged: 0/0
 15911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15916 ;;Total ram usage:        1 bytes
 15917 ;; Hardware stack levels used:    1
 15918 ;; Hardware stack levels required when called:   14
 15919 ;; This function calls:
 15920 ;;		_I2C_LCD_Command
 15921 ;; This function is called by:
 15922 ;;		_I2C_LCD_init
 15923 ;;		_display_LCD
 15924 ;;		_sleep_loop
 15925 ;; This function uses a non-reentrant model
 15926 ;;
 15927                           
 15928                           	psect	text59
 15929  016A58                     __ptext59:
 15930                           	opt stack 0
 15931  016A58                     _I2C_LCD_Clear:
 15932                           	opt stack 15
 15933                           
 15934                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
 15935                           
 15936                           ;incstack = 0
 15937  016A58  0E01               	movlw	1
 15938  016A5A  ECB6  F0B2         	call	_I2C_LCD_Command
 15939                           
 15940                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 15941  016A5E  0E12               	movlw	18
 15942  016A60  0100               	movlb	0	; () banked
 15943  016A62  6FBB               	movwf	??_I2C_LCD_Clear& (0+255),b
 15944  016A64  0E23               	movlw	35
 15945  016A66                     u13357:
 15946  016A66  2EE8               	decfsz	wreg,f,c
 15947  016A68  D7FE               	goto	u13357
 15948  016A6A  2FBB               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 15949  016A6C  D7FC               	goto	u13357
 15950  016A6E  F000               	nop	
 15951  016A70  0012               	return		;funcret
 15952  016A72                     __end_of_I2C_LCD_Clear:
 15953                           	opt stack 0
 15954                           tblptru	equ	0xFF8
 15955                           tblptrh	equ	0xFF7
 15956                           tblptrl	equ	0xFF6
 15957                           tablat	equ	0xFF5
 15958                           prodh	equ	0xFF4
 15959                           prodl	equ	0xFF3
 15960                           intcon	equ	0xFF2
 15961                           intcon2	equ	0xFF1
 15962                           postinc0	equ	0xFEE
 15963                           wreg	equ	0xFE8
 15964                           indf1	equ	0xFE7
 15965                           postinc1	equ	0xFE6
 15966                           postdec1	equ	0xFE5
 15967                           fsr1h	equ	0xFE2
 15968                           fsr1l	equ	0xFE1
 15969                           indf2	equ	0xFDF
 15970                           postinc2	equ	0xFDE
 15971                           postdec2	equ	0xFDD
 15972                           plusw2	equ	0xFDB
 15973                           fsr2h	equ	0xFDA
 15974                           fsr2l	equ	0xFD9
 15975                           status	equ	0xFD8
 15976                           
 15977 ;; *************** function _I2C_LCD_Command *****************
 15978 ;; Defined at:
 15979 ;;		line 94 in file "../My_header\My_I2C.h"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;  c               1    wreg     unsigned char 
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;  c               1    4[BANK0 ] unsigned char 
 15984 ;;  ans             1    5[BANK0 ] unsigned char 
 15985 ;; Return value:  Size  Location     Type
 15986 ;;		None               void
 15987 ;; Registers used:
 15988 ;;		wreg, status,2, status,0, cstack
 15989 ;; Tracked objects:
 15990 ;;		On entry : 0/0
 15991 ;;		On exit  : 0/0
 15992 ;;		Unchanged: 0/0
 15993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15995 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15997 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15998 ;;Total ram usage:        2 bytes
 15999 ;; Hardware stack levels used:    1
 16000 ;; Hardware stack levels required when called:   13
 16001 ;; This function calls:
 16002 ;;		_I2C_Send
 16003 ;;		_I2C_Start
 16004 ;;		_I2C_Stop
 16005 ;; This function is called by:
 16006 ;;		_I2C_LCD_Clear
 16007 ;;		_I2C_LCD_SetCursor
 16008 ;;		_I2C_LCD_init
 16009 ;; This function uses a non-reentrant model
 16010 ;;
 16011                           
 16012                           	psect	text60
 16013  01656C                     __ptext60:
 16014                           	opt stack 0
 16015  01656C                     _I2C_LCD_Command:
 16016                           	opt stack 15
 16017                           
 16018                           ;incstack = 0
 16019                           ;I2C_LCD_Command@c stored from wreg
 16020  01656C  0100               	movlb	0	; () banked
 16021  01656E  6FB9               	movwf	I2C_LCD_Command@c& (0+255),b
 16022                           
 16023                           ;My_header\My_I2C.h: 95: uint8_t ans;
 16024                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
 16025  016570  0E00               	movlw	0
 16026  016572  0100               	movlb	0	; () banked
 16027  016574  6FB7               	movwf	I2C_Start@rw& (0+255),b
 16028  016576  0E3E               	movlw	62
 16029  016578  EC3B  F0B3         	call	_I2C_Start
 16030  01657C  0100               	movlb	0	; () banked
 16031  01657E  6FBA               	movwf	I2C_LCD_Command@ans& (0+255),b
 16032                           
 16033                           ; BSR set to: 0
 16034                           ;My_header\My_I2C.h: 98: if (ans == 0) {
 16035  016580  0100               	movlb	0	; () banked
 16036  016582  51BA               	movf	I2C_LCD_Command@ans& (0+255),w,b
 16037  016584  0100               	movlb	0	; () banked
 16038  016586  A4D8               	btfss	status,2,c
 16039  016588  D007               	goto	l343
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
 16043  01658A  0E80               	movlw	128
 16044  01658C  EC39  F0B5         	call	_I2C_Send
 16045                           
 16046                           ;My_header\My_I2C.h: 101: I2C_Send(c);
 16047  016590  0100               	movlb	0	; () banked
 16048  016592  51B9               	movf	I2C_LCD_Command@c& (0+255),w,b
 16049  016594  EC39  F0B5         	call	_I2C_Send
 16050  016598                     l343:
 16051                           
 16052                           ;My_header\My_I2C.h: 102: }
 16053                           ;My_header\My_I2C.h: 103: I2C_Stop();
 16054  016598  EC74  F0B5         	call	_I2C_Stop	;wreg free
 16055                           
 16056                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
 16057  01659C  0E68               	movlw	104
 16058  01659E                     u13367:
 16059  01659E  2EE8               	decfsz	wreg,f,c
 16060  0165A0  D7FE               	goto	u13367
 16061  0165A2  0012               	return		;funcret
 16062  0165A4                     __end_of_I2C_LCD_Command:
 16063                           	opt stack 0
 16064                           tblptru	equ	0xFF8
 16065                           tblptrh	equ	0xFF7
 16066                           tblptrl	equ	0xFF6
 16067                           tablat	equ	0xFF5
 16068                           prodh	equ	0xFF4
 16069                           prodl	equ	0xFF3
 16070                           intcon	equ	0xFF2
 16071                           intcon2	equ	0xFF1
 16072                           postinc0	equ	0xFEE
 16073                           wreg	equ	0xFE8
 16074                           indf1	equ	0xFE7
 16075                           postinc1	equ	0xFE6
 16076                           postdec1	equ	0xFE5
 16077                           fsr1h	equ	0xFE2
 16078                           fsr1l	equ	0xFE1
 16079                           indf2	equ	0xFDF
 16080                           postinc2	equ	0xFDE
 16081                           postdec2	equ	0xFDD
 16082                           plusw2	equ	0xFDB
 16083                           fsr2h	equ	0xFDA
 16084                           fsr2l	equ	0xFD9
 16085                           status	equ	0xFD8
 16086                           
 16087 ;; *************** function _Delay_ms *****************
 16088 ;; Defined at:
 16089 ;;		line 333 in file "../My_header\My_header.h"
 16090 ;; Parameters:    Size  Location     Type
 16091 ;;  ms              2    0[BANK0 ] unsigned int 
 16092 ;; Auto vars:     Size  Location     Type
 16093 ;;		None
 16094 ;; Return value:  Size  Location     Type
 16095 ;;		None               void
 16096 ;; Registers used:
 16097 ;;		wreg, status,2, status,0
 16098 ;; Tracked objects:
 16099 ;;		On entry : 0/0
 16100 ;;		On exit  : 0/0
 16101 ;;		Unchanged: 0/0
 16102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16106 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16107 ;;Total ram usage:        3 bytes
 16108 ;; Hardware stack levels used:    1
 16109 ;; Hardware stack levels required when called:   11
 16110 ;; This function calls:
 16111 ;;		Nothing
 16112 ;; This function is called by:
 16113 ;;		_I2C_LCD_init
 16114 ;; This function uses a non-reentrant model
 16115 ;;
 16116                           
 16117                           	psect	text61
 16118  0167E4                     __ptext61:
 16119                           	opt stack 0
 16120  0167E4                     _Delay_ms:
 16121                           	opt stack 17
 16122                           
 16123                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 16124                           
 16125                           ;incstack = 0
 16126  0167E4  D009               	goto	l9974
 16127  0167E6                     l9972:
 16128  0167E6  0E10               	movlw	16
 16129  0167E8  0100               	movlb	0	; () banked
 16130  0167EA  6FB7               	movwf	??_Delay_ms& (0+255),b
 16131  0167EC  0E94               	movlw	148
 16132  0167EE                     u13377:
 16133  0167EE  2EE8               	decfsz	wreg,f,c
 16134  0167F0  D7FE               	goto	u13377
 16135  0167F2  2FB7               	decfsz	??_Delay_ms& (0+255),f,b
 16136  0167F4  D7FC               	goto	u13377
 16137  0167F6  D000               	nop2	
 16138  0167F8                     l9974:
 16139  0167F8  0100               	movlb	0	; () banked
 16140  0167FA  07B5               	decf	Delay_ms@ms& (0+255),f,b
 16141  0167FC  A0D8               	btfss	status,0,c
 16142  0167FE  07B6               	decf	(Delay_ms@ms+1)& (0+255),f,b
 16143  016800  0100               	movlb	0	; () banked
 16144  016802  29B5               	incf	Delay_ms@ms& (0+255),w,b
 16145  016804  E1F0               	bnz	l9972
 16146  016806  0100               	movlb	0	; () banked
 16147  016808  29B6               	incf	(Delay_ms@ms+1)& (0+255),w,b
 16148  01680A  B4D8               	btfsc	status,2,c
 16149  01680C  0012               	return	
 16150  01680E  D7EB               	goto	l9972
 16151  016810                     __end_of_Delay_ms:
 16152                           	opt stack 0
 16153                           tblptru	equ	0xFF8
 16154                           tblptrh	equ	0xFF7
 16155                           tblptrl	equ	0xFF6
 16156                           tablat	equ	0xFF5
 16157                           prodh	equ	0xFF4
 16158                           prodl	equ	0xFF3
 16159                           intcon	equ	0xFF2
 16160                           intcon2	equ	0xFF1
 16161                           postinc0	equ	0xFEE
 16162                           wreg	equ	0xFE8
 16163                           indf1	equ	0xFE7
 16164                           postinc1	equ	0xFE6
 16165                           postdec1	equ	0xFE5
 16166                           fsr1h	equ	0xFE2
 16167                           fsr1l	equ	0xFE1
 16168                           indf2	equ	0xFDF
 16169                           postinc2	equ	0xFDE
 16170                           postdec2	equ	0xFDD
 16171                           plusw2	equ	0xFDB
 16172                           fsr2h	equ	0xFDA
 16173                           fsr2l	equ	0xFD9
 16174                           status	equ	0xFD8
 16175                           
 16176 ;; *************** function _CTMU_init *****************
 16177 ;; Defined at:
 16178 ;;		line 289 in file "../My_header\My_header.h"
 16179 ;; Parameters:    Size  Location     Type
 16180 ;;		None
 16181 ;; Auto vars:     Size  Location     Type
 16182 ;;		None
 16183 ;; Return value:  Size  Location     Type
 16184 ;;		None               void
 16185 ;; Registers used:
 16186 ;;		wreg, status,2
 16187 ;; Tracked objects:
 16188 ;;		On entry : 0/0
 16189 ;;		On exit  : 0/0
 16190 ;;		Unchanged: 0/0
 16191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16196 ;;Total ram usage:        0 bytes
 16197 ;; Hardware stack levels used:    1
 16198 ;; Hardware stack levels required when called:   11
 16199 ;; This function calls:
 16200 ;;		Nothing
 16201 ;; This function is called by:
 16202 ;;		_main_init
 16203 ;; This function uses a non-reentrant model
 16204 ;;
 16205                           
 16206                           	psect	text62
 16207  0168E6                     __ptext62:
 16208                           	opt stack 0
 16209  0168E6                     _CTMU_init:
 16210                           	opt stack 18
 16211                           
 16212                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
 16213                           
 16214                           ; BSR set to: 0
 16215                           ;incstack = 0
 16216  0168E6  0E00               	movlw	0
 16217  0168E8  6EB3               	movwf	4019,c	;volatile
 16218                           
 16219                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
 16220  0168EA  0E90               	movlw	144
 16221  0168EC  6EB2               	movwf	4018,c	;volatile
 16222                           
 16223                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
 16224  0168EE  0E01               	movlw	1
 16225  0168F0  6EB1               	movwf	4017,c	;volatile
 16226                           
 16227                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
 16228  0168F2  8EC1               	bsf	4033,7,c	;volatile
 16229                           
 16230                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
 16231  0168F4  9CC1               	bcf	4033,6,c	;volatile
 16232                           
 16233                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
 16234  0168F6  50C1               	movf	4033,w,c	;volatile
 16235  0168F8  0BC7               	andlw	-57
 16236  0168FA  0908               	iorlw	8
 16237  0168FC  6EC1               	movwf	4033,c	;volatile
 16238                           
 16239                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
 16240  0168FE  50C1               	movf	4033,w,c	;volatile
 16241  016900  0BF8               	andlw	-8
 16242  016902  0906               	iorlw	6
 16243  016904  6EC1               	movwf	4033,c	;volatile
 16244                           
 16245                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
 16246  016906  9CC2               	bcf	4034,6,c	;volatile
 16247                           
 16248                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
 16249  016908  9EC2               	bcf	4034,7,c	;volatile
 16250                           
 16251                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
 16252  01690A  80C2               	bsf	4034,0,c	;volatile
 16253  01690C  0012               	return		;funcret
 16254  01690E                     __end_of_CTMU_init:
 16255                           	opt stack 0
 16256                           tblptru	equ	0xFF8
 16257                           tblptrh	equ	0xFF7
 16258                           tblptrl	equ	0xFF6
 16259                           tablat	equ	0xFF5
 16260                           prodh	equ	0xFF4
 16261                           prodl	equ	0xFF3
 16262                           intcon	equ	0xFF2
 16263                           intcon2	equ	0xFF1
 16264                           postinc0	equ	0xFEE
 16265                           wreg	equ	0xFE8
 16266                           indf1	equ	0xFE7
 16267                           postinc1	equ	0xFE6
 16268                           postdec1	equ	0xFE5
 16269                           fsr1h	equ	0xFE2
 16270                           fsr1l	equ	0xFE1
 16271                           indf2	equ	0xFDF
 16272                           postinc2	equ	0xFDE
 16273                           postdec2	equ	0xFDD
 16274                           plusw2	equ	0xFDB
 16275                           fsr2h	equ	0xFDA
 16276                           fsr2l	equ	0xFD9
 16277                           status	equ	0xFD8
 16278                           
 16279 ;; *************** function _ADC_init *****************
 16280 ;; Defined at:
 16281 ;;		line 149 in file "../My_header\My_header.h"
 16282 ;; Parameters:    Size  Location     Type
 16283 ;;  p_ref           1    wreg     unsigned char 
 16284 ;; Auto vars:     Size  Location     Type
 16285 ;;  p_ref           1    0[BANK0 ] unsigned char 
 16286 ;; Return value:  Size  Location     Type
 16287 ;;		None               void
 16288 ;; Registers used:
 16289 ;;		wreg, status,2
 16290 ;; Tracked objects:
 16291 ;;		On entry : 0/0
 16292 ;;		On exit  : 0/0
 16293 ;;		Unchanged: 0/0
 16294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16298 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16299 ;;Total ram usage:        1 bytes
 16300 ;; Hardware stack levels used:    1
 16301 ;; Hardware stack levels required when called:   11
 16302 ;; This function calls:
 16303 ;;		Nothing
 16304 ;; This function is called by:
 16305 ;;		_main_init
 16306 ;; This function uses a non-reentrant model
 16307 ;;
 16308                           
 16309                           	psect	text63
 16310  0169C2                     __ptext63:
 16311                           	opt stack 0
 16312  0169C2                     _ADC_init:
 16313                           	opt stack 18
 16314                           
 16315                           ;incstack = 0
 16316                           ;ADC_init@p_ref stored from wreg
 16317  0169C2  0100               	movlb	0	; () banked
 16318  0169C4  6FB5               	movwf	ADC_init@p_ref& (0+255),b
 16319                           
 16320                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
 16321  0169C6  9EC2               	bcf	4034,7,c	;volatile
 16322                           
 16323                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
 16324  0169C8  0100               	movlb	0	; () banked
 16325  0169CA  B1B5               	btfsc	ADC_init@p_ref& (0+255),0,b
 16326  0169CC  D002               	bra	u11665
 16327  0169CE  9CC2               	bcf	4034,6,c	;volatile
 16328  0169D0  D001               	bra	u11666
 16329  0169D2                     u11665:
 16330  0169D2  8CC2               	bsf	4034,6,c	;volatile
 16331  0169D4                     u11666:
 16332                           
 16333                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
 16334  0169D4  8EC1               	bsf	4033,7,c	;volatile
 16335                           
 16336                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
 16337  0169D6  9CC1               	bcf	4033,6,c	;volatile
 16338                           
 16339                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
 16340  0169D8  50C1               	movf	4033,w,c	;volatile
 16341  0169DA  0BF8               	andlw	-8
 16342  0169DC  0906               	iorlw	6
 16343  0169DE  6EC1               	movwf	4033,c	;volatile
 16344  0169E0  0012               	return		;funcret
 16345  0169E2                     __end_of_ADC_init:
 16346                           	opt stack 0
 16347                           tblptru	equ	0xFF8
 16348                           tblptrh	equ	0xFF7
 16349                           tblptrl	equ	0xFF6
 16350                           tablat	equ	0xFF5
 16351                           prodh	equ	0xFF4
 16352                           prodl	equ	0xFF3
 16353                           intcon	equ	0xFF2
 16354                           intcon2	equ	0xFF1
 16355                           postinc0	equ	0xFEE
 16356                           wreg	equ	0xFE8
 16357                           indf1	equ	0xFE7
 16358                           postinc1	equ	0xFE6
 16359                           postdec1	equ	0xFE5
 16360                           fsr1h	equ	0xFE2
 16361                           fsr1l	equ	0xFE1
 16362                           indf2	equ	0xFDF
 16363                           postinc2	equ	0xFDE
 16364                           postdec2	equ	0xFDD
 16365                           plusw2	equ	0xFDB
 16366                           fsr2h	equ	0xFDA
 16367                           fsr2l	equ	0xFD9
 16368                           status	equ	0xFD8
 16369                           
 16370 ;; *************** function _ctmu_loop *****************
 16371 ;; Defined at:
 16372 ;;		line 683 in file "tasks.h"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;		None
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;		None
 16377 ;; Return value:  Size  Location     Type
 16378 ;;		None               void
 16379 ;; Registers used:
 16380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16390 ;;Total ram usage:        0 bytes
 16391 ;; Hardware stack levels used:    1
 16392 ;; Hardware stack levels required when called:   13
 16393 ;; This function calls:
 16394 ;;		_CTMU_read
 16395 ;;		___lwdiv
 16396 ;;		_button_timer_interrupt
 16397 ;; This function is called by:
 16398 ;;		_main
 16399 ;; This function uses a non-reentrant model
 16400 ;;
 16401                           
 16402                           	psect	text64
 16403  013BCC                     __ptext64:
 16404                           	opt stack 0
 16405  013BCC                     _ctmu_loop:
 16406                           	opt stack 17
 16407                           
 16408                           ;tasks.h: 684: if (ctmu_flag) {
 16409                           
 16410                           ;incstack = 0
 16411  013BCC  0100               	movlb	0	; () banked
 16412  013BCE  5196               	movf	_ctmu_flag& (0+255),w,b
 16413  013BD0  B4D8               	btfsc	status,2,c
 16414  013BD2  0012               	return	
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;tasks.h: 685: ctmu_flag = 0;
 16418  013BD4  0E00               	movlw	0
 16419  013BD6  0100               	movlb	0	; () banked
 16420  013BD8  6F96               	movwf	_ctmu_flag& (0+255),b
 16421                           
 16422                           ; BSR set to: 0
 16423                           ;tasks.h: 686: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value
      +                          ));
 16424  013BDA  0E00               	movlw	low _port
 16425  013BDC  0100               	movlb	0	; () banked
 16426  013BDE  6FD8               	movwf	button_timer_interrupt@bt& (0+255),b
 16427  013BE0  0E03               	movlw	high _port
 16428  013BE2  0100               	movlb	0	; () banked
 16429  013BE4  6FD9               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16430  013BE6  0E00               	movlw	0
 16431  013BE8  ECAB  F0A6         	call	_CTMU_read
 16432  013BEC  C0C2  F0D1         	movff	?_CTMU_read,___lwdiv@dividend
 16433  013BF0  C0C3  F0D2         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16434  013BF4  C304  F0D3         	movff	_port+4,___lwdiv@divisor
 16435  013BF8  C305  F0D4         	movff	_port+5,___lwdiv@divisor+1
 16436  013BFC  ECF2  F0AD         	call	___lwdiv	;wreg free
 16437  013C00  0100               	movlb	0	; () banked
 16438  013C02  51D1               	movf	?___lwdiv& (0+255),w,b
 16439  013C04  0100               	movlb	0	; () banked
 16440  013C06  11D2               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16441  013C08  A4D8               	btfss	status,2,c
 16442  013C0A  D002               	goto	u12850
 16443  013C0C  0E01               	movlw	1
 16444  013C0E  D001               	goto	u12860
 16445  013C10                     u12850:
 16446  013C10  0E00               	movlw	0
 16447  013C12                     u12860:
 16448  013C12  0100               	movlb	0	; () banked
 16449  013C14  6FDA               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16450  013C16  EC7D  F08D         	call	_button_timer_interrupt	;wreg free
 16451                           
 16452                           ;tasks.h: 687: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value
      +                          ));
 16453  013C1A  0E17               	movlw	low (_port+23)
 16454  013C1C  0100               	movlb	0	; () banked
 16455  013C1E  6FD8               	movwf	button_timer_interrupt@bt& (0+255),b
 16456  013C20  0E03               	movlw	high (_port+23)
 16457  013C22  0100               	movlb	0	; () banked
 16458  013C24  6FD9               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16459  013C26  0E01               	movlw	1
 16460  013C28  ECAB  F0A6         	call	_CTMU_read
 16461  013C2C  C0C2  F0D1         	movff	?_CTMU_read,___lwdiv@dividend
 16462  013C30  C0C3  F0D2         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16463  013C34  C31B  F0D3         	movff	_port+27,___lwdiv@divisor
 16464  013C38  C31C  F0D4         	movff	_port+28,___lwdiv@divisor+1
 16465  013C3C  ECF2  F0AD         	call	___lwdiv	;wreg free
 16466  013C40  0100               	movlb	0	; () banked
 16467  013C42  51D1               	movf	?___lwdiv& (0+255),w,b
 16468  013C44  0100               	movlb	0	; () banked
 16469  013C46  11D2               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16470  013C48  A4D8               	btfss	status,2,c
 16471  013C4A  D002               	goto	u12870
 16472  013C4C  0E01               	movlw	1
 16473  013C4E  D001               	goto	u12880
 16474  013C50                     u12870:
 16475  013C50  0E00               	movlw	0
 16476  013C52                     u12880:
 16477  013C52  0100               	movlb	0	; () banked
 16478  013C54  6FDA               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16479  013C56  EC7D  F08D         	call	_button_timer_interrupt	;wreg free
 16480                           
 16481                           ;tasks.h: 688: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value
      +                          ));
 16482  013C5A  0E2E               	movlw	low (_port+46)
 16483  013C5C  0100               	movlb	0	; () banked
 16484  013C5E  6FD8               	movwf	button_timer_interrupt@bt& (0+255),b
 16485  013C60  0E03               	movlw	high (_port+46)
 16486  013C62  0100               	movlb	0	; () banked
 16487  013C64  6FD9               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16488  013C66  0E02               	movlw	2
 16489  013C68  ECAB  F0A6         	call	_CTMU_read
 16490  013C6C  C0C2  F0D1         	movff	?_CTMU_read,___lwdiv@dividend
 16491  013C70  C0C3  F0D2         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16492  013C74  C332  F0D3         	movff	_port+50,___lwdiv@divisor
 16493  013C78  C333  F0D4         	movff	_port+51,___lwdiv@divisor+1
 16494  013C7C  ECF2  F0AD         	call	___lwdiv	;wreg free
 16495  013C80  0100               	movlb	0	; () banked
 16496  013C82  51D1               	movf	?___lwdiv& (0+255),w,b
 16497  013C84  0100               	movlb	0	; () banked
 16498  013C86  11D2               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16499  013C88  A4D8               	btfss	status,2,c
 16500  013C8A  D002               	goto	u12890
 16501  013C8C  0E01               	movlw	1
 16502  013C8E  D001               	goto	u12900
 16503  013C90                     u12890:
 16504  013C90  0E00               	movlw	0
 16505  013C92                     u12900:
 16506  013C92  0100               	movlb	0	; () banked
 16507  013C94  6FDA               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16508  013C96  EC7D  F08D         	call	_button_timer_interrupt	;wreg free
 16509                           
 16510                           ;tasks.h: 689: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 16511  013C9A  0EAD               	movlw	low _ctmu_m
 16512  013C9C  0100               	movlb	0	; () banked
 16513  013C9E  6FD8               	movwf	button_timer_interrupt@bt& (0+255),b
 16514  013CA0  0E00               	movlw	high _ctmu_m
 16515  013CA2  0100               	movlb	0	; () banked
 16516  013CA4  6FD9               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16517  013CA6  0E03               	movlw	3
 16518  013CA8  ECAB  F0A6         	call	_CTMU_read
 16519  013CAC  C0C2  F0D1         	movff	?_CTMU_read,___lwdiv@dividend
 16520  013CB0  C0C3  F0D2         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16521  013CB4  C08B  F0D3         	movff	_ctmu_value_m,___lwdiv@divisor
 16522  013CB8  C08C  F0D4         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 16523  013CBC  ECF2  F0AD         	call	___lwdiv	;wreg free
 16524  013CC0  0100               	movlb	0	; () banked
 16525  013CC2  51D1               	movf	?___lwdiv& (0+255),w,b
 16526  013CC4  0100               	movlb	0	; () banked
 16527  013CC6  11D2               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16528  013CC8  A4D8               	btfss	status,2,c
 16529  013CCA  D002               	goto	u12910
 16530  013CCC  0E01               	movlw	1
 16531  013CCE  D001               	goto	u12920
 16532  013CD0                     u12910:
 16533  013CD0  0E00               	movlw	0
 16534  013CD2                     u12920:
 16535  013CD2  0100               	movlb	0	; () banked
 16536  013CD4  6FDA               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16537  013CD6  EC7D  F08D         	call	_button_timer_interrupt	;wreg free
 16538  013CDA  0012               	return	
 16539  013CDC                     __end_of_ctmu_loop:
 16540                           	opt stack 0
 16541                           tblptru	equ	0xFF8
 16542                           tblptrh	equ	0xFF7
 16543                           tblptrl	equ	0xFF6
 16544                           tablat	equ	0xFF5
 16545                           prodh	equ	0xFF4
 16546                           prodl	equ	0xFF3
 16547                           intcon	equ	0xFF2
 16548                           intcon2	equ	0xFF1
 16549                           postinc0	equ	0xFEE
 16550                           wreg	equ	0xFE8
 16551                           indf1	equ	0xFE7
 16552                           postinc1	equ	0xFE6
 16553                           postdec1	equ	0xFE5
 16554                           fsr1h	equ	0xFE2
 16555                           fsr1l	equ	0xFE1
 16556                           indf2	equ	0xFDF
 16557                           postinc2	equ	0xFDE
 16558                           postdec2	equ	0xFDD
 16559                           plusw2	equ	0xFDB
 16560                           fsr2h	equ	0xFDA
 16561                           fsr2l	equ	0xFD9
 16562                           status	equ	0xFD8
 16563                           
 16564 ;; *************** function _button_timer_interrupt *****************
 16565 ;; Defined at:
 16566 ;;		line 51 in file "../My_header\My_button.h"
 16567 ;; Parameters:    Size  Location     Type
 16568 ;;  bt              2   35[BANK0 ] PTR struct button
 16569 ;;		 -> ctmu_m(4), port(69), 
 16570 ;;  sw_value        1   37[BANK0 ] unsigned char 
 16571 ;; Auto vars:     Size  Location     Type
 16572 ;;		None
 16573 ;; Return value:  Size  Location     Type
 16574 ;;		None               void
 16575 ;; Registers used:
 16576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16577 ;; Tracked objects:
 16578 ;;		On entry : 0/0
 16579 ;;		On exit  : 0/0
 16580 ;;		Unchanged: 0/0
 16581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16582 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16585 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16586 ;;Total ram usage:        5 bytes
 16587 ;; Hardware stack levels used:    1
 16588 ;; Hardware stack levels required when called:   11
 16589 ;; This function calls:
 16590 ;;		Nothing
 16591 ;; This function is called by:
 16592 ;;		_ctmu_loop
 16593 ;; This function uses a non-reentrant model
 16594 ;;
 16595                           
 16596                           	psect	text65
 16597  011AFA                     __ptext65:
 16598                           	opt stack 0
 16599  011AFA                     _button_timer_interrupt:
 16600                           	opt stack 18
 16601                           
 16602                           ;My_header\My_button.h: 52: if (sw_value) {
 16603                           
 16604                           ;incstack = 0
 16605  011AFA  0100               	movlb	0	; () banked
 16606  011AFC  51DA               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 16607  011AFE  0100               	movlb	0	; () banked
 16608  011B00  B4D8               	btfsc	status,2,c
 16609  011B02  D0A8               	goto	l10642
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 16613  011B04  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16614  011B08  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16615  011B0C  0E84               	movlw	132
 16616  011B0E  18DE               	xorwf	postinc2,w,c
 16617  011B10  E10D               	bnz	l282
 16618  011B12  0E03               	movlw	3
 16619  011B14  18DE               	xorwf	postinc2,w,c
 16620  011B16  A4D8               	btfss	status,2,c
 16621  011B18  D009               	goto	l282
 16622                           
 16623                           ; BSR set to: 0
 16624  011B1A  0100               	movlb	0	; () banked
 16625  011B1C  EE20 F003          	lfsr	2,3
 16626  011B20  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16627  011B22  26D9               	addwf	fsr2l,f,c
 16628  011B24  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16629  011B26  22DA               	addwfc	fsr2h,f,c
 16630  011B28  0100               	movlb	0	; () banked
 16631  011B2A  8EDF               	bsf	indf2,7,c
 16632  011B2C                     l282:
 16633                           
 16634                           ; BSR set to: 0
 16635                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 16636  011B2C  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16637  011B30  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16638  011B34  0EBC               	movlw	188
 16639  011B36  18DE               	xorwf	postinc2,w,c
 16640  011B38  E10D               	bnz	l283
 16641  011B3A  0E02               	movlw	2
 16642  011B3C  18DE               	xorwf	postinc2,w,c
 16643  011B3E  A4D8               	btfss	status,2,c
 16644  011B40  D009               	goto	l283
 16645                           
 16646                           ; BSR set to: 0
 16647  011B42  0100               	movlb	0	; () banked
 16648  011B44  EE20 F003          	lfsr	2,3
 16649  011B48  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16650  011B4A  26D9               	addwf	fsr2l,f,c
 16651  011B4C  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16652  011B4E  22DA               	addwfc	fsr2h,f,c
 16653  011B50  0100               	movlb	0	; () banked
 16654  011B52  8CDF               	bsf	indf2,6,c
 16655  011B54                     l283:
 16656                           
 16657                           ; BSR set to: 0
 16658                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 16659  011B54  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16660  011B58  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16661  011B5C  0EF4               	movlw	244
 16662  011B5E  18DE               	xorwf	postinc2,w,c
 16663  011B60  E10C               	bnz	l284
 16664  011B62  04DE               	decf	postinc2,w,c
 16665  011B64  A4D8               	btfss	status,2,c
 16666  011B66  D009               	goto	l284
 16667                           
 16668                           ; BSR set to: 0
 16669  011B68  0100               	movlb	0	; () banked
 16670  011B6A  EE20 F003          	lfsr	2,3
 16671  011B6E  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16672  011B70  26D9               	addwf	fsr2l,f,c
 16673  011B72  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16674  011B74  22DA               	addwfc	fsr2h,f,c
 16675  011B76  0100               	movlb	0	; () banked
 16676  011B78  8ADF               	bsf	indf2,5,c
 16677  011B7A                     l284:
 16678                           
 16679                           ; BSR set to: 0
 16680                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 16681  011B7A  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16682  011B7E  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16683  011B82  0E2C               	movlw	44
 16684  011B84  18DE               	xorwf	postinc2,w,c
 16685  011B86  E10C               	bnz	l285
 16686  011B88  04DE               	decf	postinc2,w,c
 16687  011B8A  A4D8               	btfss	status,2,c
 16688  011B8C  D009               	goto	l285
 16689                           
 16690                           ; BSR set to: 0
 16691  011B8E  0100               	movlb	0	; () banked
 16692  011B90  EE20 F003          	lfsr	2,3
 16693  011B94  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16694  011B96  26D9               	addwf	fsr2l,f,c
 16695  011B98  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16696  011B9A  22DA               	addwfc	fsr2h,f,c
 16697  011B9C  0100               	movlb	0	; () banked
 16698  011B9E  88DF               	bsf	indf2,4,c
 16699  011BA0                     l285:
 16700                           
 16701                           ; BSR set to: 0
 16702                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 16703  011BA0  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16704  011BA4  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16705  011BA8  0E96               	movlw	150
 16706  011BAA  18DE               	xorwf	postinc2,w,c
 16707  011BAC  10DE               	iorwf	postinc2,w,c
 16708  011BAE  A4D8               	btfss	status,2,c
 16709  011BB0  D009               	goto	l286
 16710                           
 16711                           ; BSR set to: 0
 16712  011BB2  0100               	movlb	0	; () banked
 16713  011BB4  EE20 F003          	lfsr	2,3
 16714  011BB8  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16715  011BBA  26D9               	addwf	fsr2l,f,c
 16716  011BBC  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16717  011BBE  22DA               	addwfc	fsr2h,f,c
 16718  011BC0  0100               	movlb	0	; () banked
 16719  011BC2  86DF               	bsf	indf2,3,c
 16720  011BC4                     l286:
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 16724  011BC4  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16725  011BC8  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16726  011BCC  0E3C               	movlw	60
 16727  011BCE  18DE               	xorwf	postinc2,w,c
 16728  011BD0  10DE               	iorwf	postinc2,w,c
 16729  011BD2  A4D8               	btfss	status,2,c
 16730  011BD4  D009               	goto	l287
 16731                           
 16732                           ; BSR set to: 0
 16733  011BD6  0100               	movlb	0	; () banked
 16734  011BD8  EE20 F003          	lfsr	2,3
 16735  011BDC  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16736  011BDE  26D9               	addwf	fsr2l,f,c
 16737  011BE0  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16738  011BE2  22DA               	addwfc	fsr2h,f,c
 16739  011BE4  0100               	movlb	0	; () banked
 16740  011BE6  84DF               	bsf	indf2,2,c
 16741  011BE8                     l287:
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 16745  011BE8  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16746  011BEC  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16747  011BF0  0E10               	movlw	16
 16748  011BF2  18DE               	xorwf	postinc2,w,c
 16749  011BF4  10DE               	iorwf	postinc2,w,c
 16750  011BF6  A4D8               	btfss	status,2,c
 16751  011BF8  D009               	goto	l288
 16752                           
 16753                           ; BSR set to: 0
 16754  011BFA  0100               	movlb	0	; () banked
 16755  011BFC  EE20 F003          	lfsr	2,3
 16756  011C00  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16757  011C02  26D9               	addwf	fsr2l,f,c
 16758  011C04  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16759  011C06  22DA               	addwfc	fsr2h,f,c
 16760  011C08  0100               	movlb	0	; () banked
 16761  011C0A  82DF               	bsf	indf2,1,c
 16762  011C0C                     l288:
 16763                           
 16764                           ; BSR set to: 0
 16765                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 16766  011C0C  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16767  011C10  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16768  011C14  0E02               	movlw	2
 16769  011C16  18DE               	xorwf	postinc2,w,c
 16770  011C18  10DE               	iorwf	postinc2,w,c
 16771  011C1A  A4D8               	btfss	status,2,c
 16772  011C1C  D009               	goto	l289
 16773                           
 16774                           ; BSR set to: 0
 16775  011C1E  0100               	movlb	0	; () banked
 16776  011C20  EE20 F003          	lfsr	2,3
 16777  011C24  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16778  011C26  26D9               	addwf	fsr2l,f,c
 16779  011C28  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16780  011C2A  22DA               	addwfc	fsr2h,f,c
 16781  011C2C  0100               	movlb	0	; () banked
 16782  011C2E  80DF               	bsf	indf2,0,c
 16783  011C30                     l289:
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 16787  011C30  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16788  011C34  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16789  011C38  0E85               	movlw	133
 16790  011C3A  5CDE               	subwf	postinc2,w,c
 16791  011C3C  0E03               	movlw	3
 16792  011C3E  58DE               	subwfb	postinc2,w,c
 16793  011C40  B0D8               	btfsc	status,0,c
 16794  011C42  0012               	return	
 16795                           
 16796                           ; BSR set to: 0
 16797  011C44  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16798  011C48  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16799  011C4C  2ADE               	incf	postinc2,f,c
 16800  011C4E  0E00               	movlw	0
 16801  011C50  22DD               	addwfc	postdec2,f,c
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;My_header\My_button.h: 62: } else {
 16805  011C52  0012               	return	
 16806  011C54                     l10642:
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 16810  011C54  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16811  011C58  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16812  011C5C  0E84               	movlw	132
 16813  011C5E  5CDE               	subwf	postinc2,w,c
 16814  011C60  0E03               	movlw	3
 16815  011C62  58DE               	subwfb	postinc2,w,c
 16816  011C64  A0D8               	btfss	status,0,c
 16817  011C66  D00A               	goto	l10646
 16818                           
 16819                           ; BSR set to: 0
 16820  011C68  0100               	movlb	0	; () banked
 16821  011C6A  EE20 F002          	lfsr	2,2
 16822  011C6E  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16823  011C70  26D9               	addwf	fsr2l,f,c
 16824  011C72  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16825  011C74  22DA               	addwfc	fsr2h,f,c
 16826  011C76  0100               	movlb	0	; () banked
 16827  011C78  8EDF               	bsf	indf2,7,c
 16828  011C7A  D08F               	goto	l10674
 16829  011C7C                     l10646:
 16830                           
 16831                           ; BSR set to: 0
 16832                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 16833  011C7C  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16834  011C80  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16835  011C84  0EBC               	movlw	188
 16836  011C86  5CDE               	subwf	postinc2,w,c
 16837  011C88  0E02               	movlw	2
 16838  011C8A  58DE               	subwfb	postinc2,w,c
 16839  011C8C  A0D8               	btfss	status,0,c
 16840  011C8E  D00A               	goto	l10650
 16841                           
 16842                           ; BSR set to: 0
 16843  011C90  0100               	movlb	0	; () banked
 16844  011C92  EE20 F002          	lfsr	2,2
 16845  011C96  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16846  011C98  26D9               	addwf	fsr2l,f,c
 16847  011C9A  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16848  011C9C  22DA               	addwfc	fsr2h,f,c
 16849  011C9E  0100               	movlb	0	; () banked
 16850  011CA0  8CDF               	bsf	indf2,6,c
 16851  011CA2  D07B               	goto	l10674
 16852  011CA4                     l10650:
 16853                           
 16854                           ; BSR set to: 0
 16855                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 16856  011CA4  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16857  011CA8  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16858  011CAC  0EF4               	movlw	244
 16859  011CAE  5CDE               	subwf	postinc2,w,c
 16860  011CB0  0E01               	movlw	1
 16861  011CB2  58DE               	subwfb	postinc2,w,c
 16862  011CB4  A0D8               	btfss	status,0,c
 16863  011CB6  D00A               	goto	l10654
 16864                           
 16865                           ; BSR set to: 0
 16866  011CB8  0100               	movlb	0	; () banked
 16867  011CBA  EE20 F002          	lfsr	2,2
 16868  011CBE  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16869  011CC0  26D9               	addwf	fsr2l,f,c
 16870  011CC2  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16871  011CC4  22DA               	addwfc	fsr2h,f,c
 16872  011CC6  0100               	movlb	0	; () banked
 16873  011CC8  8ADF               	bsf	indf2,5,c
 16874  011CCA  D067               	goto	l10674
 16875  011CCC                     l10654:
 16876                           
 16877                           ; BSR set to: 0
 16878                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 16879  011CCC  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16880  011CD0  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16881  011CD4  0E2C               	movlw	44
 16882  011CD6  5CDE               	subwf	postinc2,w,c
 16883  011CD8  0E01               	movlw	1
 16884  011CDA  58DE               	subwfb	postinc2,w,c
 16885  011CDC  A0D8               	btfss	status,0,c
 16886  011CDE  D00A               	goto	l10658
 16887                           
 16888                           ; BSR set to: 0
 16889  011CE0  0100               	movlb	0	; () banked
 16890  011CE2  EE20 F002          	lfsr	2,2
 16891  011CE6  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16892  011CE8  26D9               	addwf	fsr2l,f,c
 16893  011CEA  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16894  011CEC  22DA               	addwfc	fsr2h,f,c
 16895  011CEE  0100               	movlb	0	; () banked
 16896  011CF0  88DF               	bsf	indf2,4,c
 16897  011CF2  D053               	goto	l10674
 16898  011CF4                     l10658:
 16899                           
 16900                           ; BSR set to: 0
 16901                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 16902  011CF4  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16903  011CF8  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16904  011CFC  0E01               	movlw	1
 16905  011CFE  50DB               	movf	plusw2,w,c
 16906  011D00  E104               	bnz	u11850
 16907  011D02  0E96               	movlw	150
 16908  011D04  5CDE               	subwf	postinc2,w,c
 16909  011D06  A0D8               	btfss	status,0,c
 16910  011D08  D00A               	goto	l10662
 16911  011D0A                     u11850:
 16912                           
 16913                           ; BSR set to: 0
 16914  011D0A  0100               	movlb	0	; () banked
 16915  011D0C  EE20 F002          	lfsr	2,2
 16916  011D10  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16917  011D12  26D9               	addwf	fsr2l,f,c
 16918  011D14  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16919  011D16  22DA               	addwfc	fsr2h,f,c
 16920  011D18  0100               	movlb	0	; () banked
 16921  011D1A  86DF               	bsf	indf2,3,c
 16922  011D1C  D03E               	goto	l10674
 16923  011D1E                     l10662:
 16924                           
 16925                           ; BSR set to: 0
 16926                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 16927  011D1E  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16928  011D22  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16929  011D26  0E01               	movlw	1
 16930  011D28  50DB               	movf	plusw2,w,c
 16931  011D2A  E104               	bnz	u11860
 16932  011D2C  0E3C               	movlw	60
 16933  011D2E  5CDE               	subwf	postinc2,w,c
 16934  011D30  A0D8               	btfss	status,0,c
 16935  011D32  D00A               	goto	l10666
 16936  011D34                     u11860:
 16937                           
 16938                           ; BSR set to: 0
 16939  011D34  0100               	movlb	0	; () banked
 16940  011D36  EE20 F002          	lfsr	2,2
 16941  011D3A  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16942  011D3C  26D9               	addwf	fsr2l,f,c
 16943  011D3E  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16944  011D40  22DA               	addwfc	fsr2h,f,c
 16945  011D42  0100               	movlb	0	; () banked
 16946  011D44  84DF               	bsf	indf2,2,c
 16947  011D46  D029               	goto	l10674
 16948  011D48                     l10666:
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 16952  011D48  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16953  011D4C  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16954  011D50  0E01               	movlw	1
 16955  011D52  50DB               	movf	plusw2,w,c
 16956  011D54  E104               	bnz	u11870
 16957  011D56  0E10               	movlw	16
 16958  011D58  5CDE               	subwf	postinc2,w,c
 16959  011D5A  A0D8               	btfss	status,0,c
 16960  011D5C  D00A               	goto	l10670
 16961  011D5E                     u11870:
 16962                           
 16963                           ; BSR set to: 0
 16964  011D5E  0100               	movlb	0	; () banked
 16965  011D60  EE20 F002          	lfsr	2,2
 16966  011D64  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16967  011D66  26D9               	addwf	fsr2l,f,c
 16968  011D68  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16969  011D6A  22DA               	addwfc	fsr2h,f,c
 16970  011D6C  0100               	movlb	0	; () banked
 16971  011D6E  82DF               	bsf	indf2,1,c
 16972  011D70  D014               	goto	l10674
 16973  011D72                     l10670:
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 16977  011D72  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16978  011D76  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16979  011D7A  0E01               	movlw	1
 16980  011D7C  50DB               	movf	plusw2,w,c
 16981  011D7E  E104               	bnz	u11880
 16982  011D80  0E02               	movlw	2
 16983  011D82  5CDE               	subwf	postinc2,w,c
 16984  011D84  A0D8               	btfss	status,0,c
 16985  011D86  D009               	goto	l10674
 16986  011D88                     u11880:
 16987                           
 16988                           ; BSR set to: 0
 16989  011D88  0100               	movlb	0	; () banked
 16990  011D8A  EE20 F002          	lfsr	2,2
 16991  011D8E  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 16992  011D90  26D9               	addwf	fsr2l,f,c
 16993  011D92  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16994  011D94  22DA               	addwfc	fsr2h,f,c
 16995  011D96  0100               	movlb	0	; () banked
 16996  011D98  80DF               	bsf	indf2,0,c
 16997  011D9A                     l10674:
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 17001  011D9A  C0D8  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 17002  011D9E  C0D9  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 17003  011DA2  0E00               	movlw	0
 17004  011DA4  6EDE               	movwf	postinc2,c
 17005  011DA6  0E00               	movlw	0
 17006  011DA8  6EDD               	movwf	postdec2,c
 17007                           
 17008                           ; BSR set to: 0
 17009                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 17010  011DAA  0100               	movlb	0	; () banked
 17011  011DAC  EE20 F002          	lfsr	2,2
 17012  011DB0  51D8               	movf	button_timer_interrupt@bt& (0+255),w,b
 17013  011DB2  26D9               	addwf	fsr2l,f,c
 17014  011DB4  51D9               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 17015  011DB6  22DA               	addwfc	fsr2h,f,c
 17016  011DB8  0EFF               	movlw	255
 17017  011DBA  16DE               	andwf	postinc2,f,c
 17018  011DBC  0E00               	movlw	0
 17019  011DBE  16DD               	andwf	postdec2,f,c
 17020  011DC0  0012               	return	
 17021  011DC2                     __end_of_button_timer_interrupt:
 17022                           	opt stack 0
 17023                           tblptru	equ	0xFF8
 17024                           tblptrh	equ	0xFF7
 17025                           tblptrl	equ	0xFF6
 17026                           tablat	equ	0xFF5
 17027                           prodh	equ	0xFF4
 17028                           prodl	equ	0xFF3
 17029                           intcon	equ	0xFF2
 17030                           intcon2	equ	0xFF1
 17031                           postinc0	equ	0xFEE
 17032                           wreg	equ	0xFE8
 17033                           indf1	equ	0xFE7
 17034                           postinc1	equ	0xFE6
 17035                           postdec1	equ	0xFE5
 17036                           fsr1h	equ	0xFE2
 17037                           fsr1l	equ	0xFE1
 17038                           indf2	equ	0xFDF
 17039                           postinc2	equ	0xFDE
 17040                           postdec2	equ	0xFDD
 17041                           plusw2	equ	0xFDB
 17042                           fsr2h	equ	0xFDA
 17043                           fsr2l	equ	0xFD9
 17044                           status	equ	0xFD8
 17045                           
 17046 ;; *************** function ___lwdiv *****************
 17047 ;; Defined at:
 17048 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  dividend        2   28[BANK0 ] unsigned int 
 17051 ;;  divisor         2   30[BANK0 ] unsigned int 
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;  quotient        2   33[BANK0 ] unsigned int 
 17054 ;;  counter         1   32[BANK0 ] unsigned char 
 17055 ;; Return value:  Size  Location     Type
 17056 ;;                  2   28[BANK0 ] unsigned int 
 17057 ;; Registers used:
 17058 ;;		wreg, status,2, status,0
 17059 ;; Tracked objects:
 17060 ;;		On entry : 0/0
 17061 ;;		On exit  : 0/0
 17062 ;;		Unchanged: 0/0
 17063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17065 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17067 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17068 ;;Total ram usage:        7 bytes
 17069 ;; Hardware stack levels used:    1
 17070 ;; Hardware stack levels required when called:   11
 17071 ;; This function calls:
 17072 ;;		Nothing
 17073 ;; This function is called by:
 17074 ;;		_tx_sendn
 17075 ;;		_my_utoa
 17076 ;;		_display_LCD
 17077 ;;		_ctmu_set_ratio
 17078 ;;		_comm_disp
 17079 ;;		_ctmu_loop
 17080 ;;		_ringbuf_put_num
 17081 ;; This function uses a non-reentrant model
 17082 ;;
 17083                           
 17084                           	psect	text66
 17085  015BE4                     __ptext66:
 17086                           	opt stack 0
 17087  015BE4                     ___lwdiv:
 17088                           	opt stack 17
 17089                           
 17090                           ; BSR set to: 0
 17091                           ;incstack = 0
 17092  015BE4  0E00               	movlw	0
 17093  015BE6  0100               	movlb	0	; () banked
 17094  015BE8  6FD7               	movwf	(___lwdiv@quotient+1)& (0+255),b
 17095  015BEA  0E00               	movlw	0
 17096  015BEC  6FD6               	movwf	___lwdiv@quotient& (0+255),b
 17097                           
 17098                           ; BSR set to: 0
 17099  015BEE  0100               	movlb	0	; () banked
 17100  015BF0  51D3               	movf	___lwdiv@divisor& (0+255),w,b
 17101  015BF2  0100               	movlb	0	; () banked
 17102  015BF4  11D4               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 17103  015BF6  B4D8               	btfsc	status,2,c
 17104  015BF8  D02C               	goto	l1931
 17105                           
 17106                           ; BSR set to: 0
 17107  015BFA  0E01               	movlw	1
 17108  015BFC  0100               	movlb	0	; () banked
 17109  015BFE  6FD5               	movwf	___lwdiv@counter& (0+255),b
 17110  015C00  D006               	goto	l9526
 17111  015C02                     l9524:
 17112                           
 17113                           ; BSR set to: 0
 17114  015C02  0100               	movlb	0	; () banked
 17115  015C04  90D8               	bcf	status,0,c
 17116  015C06  37D3               	rlcf	___lwdiv@divisor& (0+255),f,b
 17117  015C08  37D4               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 17118  015C0A  0100               	movlb	0	; () banked
 17119  015C0C  2BD5               	incf	___lwdiv@counter& (0+255),f,b
 17120  015C0E                     l9526:
 17121                           
 17122                           ; BSR set to: 0
 17123  015C0E  0100               	movlb	0	; () banked
 17124  015C10  AFD4               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 17125  015C12  D7F7               	goto	l9524
 17126  015C14                     l9528:
 17127                           
 17128                           ; BSR set to: 0
 17129  015C14  0100               	movlb	0	; () banked
 17130  015C16  90D8               	bcf	status,0,c
 17131  015C18  37D6               	rlcf	___lwdiv@quotient& (0+255),f,b
 17132  015C1A  37D7               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 17133                           
 17134                           ; BSR set to: 0
 17135  015C1C  0100               	movlb	0	; () banked
 17136  015C1E  51D3               	movf	___lwdiv@divisor& (0+255),w,b
 17137  015C20  0100               	movlb	0	; () banked
 17138  015C22  5DD1               	subwf	___lwdiv@dividend& (0+255),w,b
 17139  015C24  0100               	movlb	0	; () banked
 17140  015C26  51D4               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17141  015C28  0100               	movlb	0	; () banked
 17142  015C2A  59D2               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 17143  015C2C  A0D8               	btfss	status,0,c
 17144  015C2E  D00A               	goto	l9536
 17145                           
 17146                           ; BSR set to: 0
 17147  015C30  0100               	movlb	0	; () banked
 17148  015C32  51D3               	movf	___lwdiv@divisor& (0+255),w,b
 17149  015C34  0100               	movlb	0	; () banked
 17150  015C36  5FD1               	subwf	___lwdiv@dividend& (0+255),f,b
 17151  015C38  0100               	movlb	0	; () banked
 17152  015C3A  51D4               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17153  015C3C  0100               	movlb	0	; () banked
 17154  015C3E  5BD2               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 17155                           
 17156                           ; BSR set to: 0
 17157  015C40  0100               	movlb	0	; () banked
 17158  015C42  81D6               	bsf	___lwdiv@quotient& (0+255),0,b
 17159  015C44                     l9536:
 17160                           
 17161                           ; BSR set to: 0
 17162  015C44  0100               	movlb	0	; () banked
 17163  015C46  90D8               	bcf	status,0,c
 17164  015C48  33D4               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 17165  015C4A  33D3               	rrcf	___lwdiv@divisor& (0+255),f,b
 17166                           
 17167                           ; BSR set to: 0
 17168  015C4C  0100               	movlb	0	; () banked
 17169  015C4E  2FD5               	decfsz	___lwdiv@counter& (0+255),f,b
 17170  015C50  D7E1               	goto	l9528
 17171  015C52                     l1931:
 17172                           
 17173                           ; BSR set to: 0
 17174  015C52  C0D6  F0D1         	movff	___lwdiv@quotient,?___lwdiv
 17175  015C56  C0D7  F0D2         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17176                           
 17177                           ; BSR set to: 0
 17178  015C5A  0012               	return		;funcret
 17179  015C5C                     __end_of___lwdiv:
 17180                           	opt stack 0
 17181                           tblptru	equ	0xFF8
 17182                           tblptrh	equ	0xFF7
 17183                           tblptrl	equ	0xFF6
 17184                           tablat	equ	0xFF5
 17185                           prodh	equ	0xFF4
 17186                           prodl	equ	0xFF3
 17187                           intcon	equ	0xFF2
 17188                           intcon2	equ	0xFF1
 17189                           postinc0	equ	0xFEE
 17190                           wreg	equ	0xFE8
 17191                           indf1	equ	0xFE7
 17192                           postinc1	equ	0xFE6
 17193                           postdec1	equ	0xFE5
 17194                           fsr1h	equ	0xFE2
 17195                           fsr1l	equ	0xFE1
 17196                           indf2	equ	0xFDF
 17197                           postinc2	equ	0xFDE
 17198                           postdec2	equ	0xFDD
 17199                           plusw2	equ	0xFDB
 17200                           fsr2h	equ	0xFDA
 17201                           fsr2l	equ	0xFD9
 17202                           status	equ	0xFD8
 17203                           
 17204 ;; *************** function _CTMU_read *****************
 17205 ;; Defined at:
 17206 ;;		line 304 in file "../My_header\My_header.h"
 17207 ;; Parameters:    Size  Location     Type
 17208 ;;  ch              1    wreg     unsigned char 
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;  ch              1   16[BANK0 ] unsigned char 
 17211 ;;  i               1   21[BANK0 ] unsigned char 
 17212 ;;  sum             4   17[BANK0 ] unsigned long 
 17213 ;; Return value:  Size  Location     Type
 17214 ;;                  2   13[BANK0 ] unsigned int 
 17215 ;; Registers used:
 17216 ;;		wreg, status,2, status,0, cstack
 17217 ;; Tracked objects:
 17218 ;;		On entry : 0/0
 17219 ;;		On exit  : 0/0
 17220 ;;		Unchanged: 0/0
 17221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17222 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17223 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17224 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17225 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17226 ;;Total ram usage:        9 bytes
 17227 ;; Hardware stack levels used:    1
 17228 ;; Hardware stack levels required when called:   12
 17229 ;; This function calls:
 17230 ;;		___lldiv
 17231 ;; This function is called by:
 17232 ;;		_ctmu_set_ratio
 17233 ;;		_ctmu_loop
 17234 ;; This function uses a non-reentrant model
 17235 ;;
 17236                           
 17237                           	psect	text67
 17238  014D56                     __ptext67:
 17239                           	opt stack 0
 17240  014D56                     _CTMU_read:
 17241                           	opt stack 15
 17242                           
 17243                           ; BSR set to: 0
 17244                           ;incstack = 0
 17245                           ;CTMU_read@ch stored from wreg
 17246  014D56  0100               	movlb	0	; () banked
 17247  014D58  6FC5               	movwf	CTMU_read@ch& (0+255),b
 17248                           
 17249                           ;My_header\My_header.h: 305: uint32_t sum = 0;
 17250  014D5A  0E00               	movlw	0
 17251  014D5C  0100               	movlb	0	; () banked
 17252  014D5E  6FC6               	movwf	CTMU_read@sum& (0+255),b
 17253  014D60  0E00               	movlw	0
 17254  014D62  6FC7               	movwf	(CTMU_read@sum+1)& (0+255),b
 17255  014D64  0E00               	movlw	0
 17256  014D66  6FC8               	movwf	(CTMU_read@sum+2)& (0+255),b
 17257  014D68  0E00               	movlw	0
 17258  014D6A  6FC9               	movwf	(CTMU_read@sum+3)& (0+255),b
 17259                           
 17260                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
 17261  014D6C  0E00               	movlw	0
 17262  014D6E  0100               	movlb	0	; () banked
 17263  014D70  6FCA               	movwf	CTMU_read@i& (0+255),b
 17264  014D72                     l9806:
 17265                           
 17266                           ; BSR set to: 0
 17267  014D72  0E09               	movlw	9
 17268  014D74  0100               	movlb	0	; () banked
 17269  014D76  65CA               	cpfsgt	CTMU_read@i& (0+255),b
 17270  014D78  D001               	goto	l9810
 17271  014D7A  D02B               	goto	l9838
 17272  014D7C                     l9810:
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
 17276  014D7C  C0C5  F0C4         	movff	CTMU_read@ch,??_CTMU_read
 17277  014D80  0100               	movlb	0	; () banked
 17278  014D82  47C4               	rlncf	??_CTMU_read& (0+255),f,b
 17279  014D84  47C4               	rlncf	??_CTMU_read& (0+255),f,b
 17280  014D86  50C2               	movf	4034,w,c	;volatile
 17281  014D88  0100               	movlb	0	; () banked
 17282  014D8A  19C4               	xorwf	??_CTMU_read& (0+255),w,b
 17283  014D8C  0BC3               	andlw	-61
 17284  014D8E  19C4               	xorwf	??_CTMU_read& (0+255),w,b
 17285  014D90  6EC2               	movwf	4034,c	;volatile
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
 17289  014D92  8EB3               	bsf	4019,7,c	;volatile
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
 17293  014D94  90B2               	bcf	4018,0,c	;volatile
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
 17297  014D96  92B2               	bcf	4018,1,c	;volatile
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
 17301  014D98  82B3               	bsf	4019,1,c	;volatile
 17302                           
 17303                           ; BSR set to: 0
 17304                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
 17305  014D9A  0E50               	movlw	80
 17306  014D9C                     u13387:
 17307  014D9C  2EE8               	decfsz	wreg,f,c
 17308  014D9E  D7FE               	goto	u13387
 17309                           
 17310                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
 17311  014DA0  92B3               	bcf	4019,1,c	;volatile
 17312                           
 17313                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
 17314  014DA2  80B2               	bsf	4018,0,c	;volatile
 17315                           
 17316                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
 17317  014DA4  0E14               	movlw	20
 17318  014DA6                     u13397:
 17319  014DA6  2EE8               	decfsz	wreg,f,c
 17320  014DA8  D7FE               	goto	u13397
 17321                           
 17322                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
 17323  014DAA  90B2               	bcf	4018,0,c	;volatile
 17324                           
 17325                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
 17326  014DAC  9C9E               	bcf	3998,6,c	;volatile
 17327                           
 17328                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
 17329  014DAE  82C2               	bsf	4034,1,c	;volatile
 17330  014DB0                     l247:
 17331  014DB0  AC9E               	btfss	3998,6,c	;volatile
 17332  014DB2  D7FE               	goto	l247
 17333                           
 17334                           ;My_header\My_header.h: 324: sum += ADRES;
 17335  014DB4  50C3               	movf	4035,w,c	;volatile
 17336  014DB6  0100               	movlb	0	; () banked
 17337  014DB8  27C6               	addwf	CTMU_read@sum& (0+255),f,b
 17338  014DBA  50C4               	movf	4036,w,c	;volatile
 17339  014DBC  0100               	movlb	0	; () banked
 17340  014DBE  23C7               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 17341  014DC0  0E00               	movlw	0
 17342  014DC2  0100               	movlb	0	; () banked
 17343  014DC4  23C8               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 17344  014DC6  0E00               	movlw	0
 17345  014DC8  0100               	movlb	0	; () banked
 17346  014DCA  23C9               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 17347  014DCC  0100               	movlb	0	; () banked
 17348  014DCE  2BCA               	incf	CTMU_read@i& (0+255),f,b
 17349  014DD0  D7D0               	goto	l9806
 17350  014DD2                     l9838:
 17351                           
 17352                           ; BSR set to: 0
 17353                           ;My_header\My_header.h: 325: }
 17354                           ;My_header\My_header.h: 326: return sum / 10 / 4;
 17355  014DD2  C0C6  F0B5         	movff	CTMU_read@sum,___lldiv@dividend
 17356  014DD6  C0C7  F0B6         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 17357  014DDA  C0C8  F0B7         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 17358  014DDE  C0C9  F0B8         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 17359  014DE2  0E0A               	movlw	10
 17360  014DE4  0100               	movlb	0	; () banked
 17361  014DE6  6FB9               	movwf	___lldiv@divisor& (0+255),b
 17362  014DE8  0E00               	movlw	0
 17363  014DEA  6FBA               	movwf	(___lldiv@divisor+1)& (0+255),b
 17364  014DEC  0E00               	movlw	0
 17365  014DEE  6FBB               	movwf	(___lldiv@divisor+2)& (0+255),b
 17366  014DF0  0E00               	movlw	0
 17367  014DF2  6FBC               	movwf	(___lldiv@divisor+3)& (0+255),b
 17368  014DF4  EC6B  F0A7         	call	___lldiv	;wreg free
 17369  014DF8  0E03               	movlw	3
 17370  014DFA  D007               	goto	u10690
 17371  014DFC                     u10695:
 17372  014DFC  0100               	movlb	0	; () banked
 17373  014DFE  90D8               	bcf	status,0,c
 17374  014E00  33B8               	rrcf	(?___lldiv+3)& (0+255),f,b
 17375  014E02  33B7               	rrcf	(?___lldiv+2)& (0+255),f,b
 17376  014E04  0100               	movlb	0	; () banked
 17377  014E06  33B6               	rrcf	(?___lldiv+1)& (0+255),f,b
 17378  014E08  33B5               	rrcf	?___lldiv& (0+255),f,b
 17379  014E0A                     u10690:
 17380  014E0A  2EE8               	decfsz	wreg,f,c
 17381  014E0C  D7F7               	goto	u10695
 17382  014E0E  C0B5  F0C2         	movff	?___lldiv,?_CTMU_read
 17383  014E12  C0B6  F0C3         	movff	?___lldiv+1,?_CTMU_read+1
 17384  014E16  0012               	return	
 17385  014E18                     __end_of_CTMU_read:
 17386                           	opt stack 0
 17387                           tblptru	equ	0xFF8
 17388                           tblptrh	equ	0xFF7
 17389                           tblptrl	equ	0xFF6
 17390                           tablat	equ	0xFF5
 17391                           prodh	equ	0xFF4
 17392                           prodl	equ	0xFF3
 17393                           intcon	equ	0xFF2
 17394                           intcon2	equ	0xFF1
 17395                           postinc0	equ	0xFEE
 17396                           wreg	equ	0xFE8
 17397                           indf1	equ	0xFE7
 17398                           postinc1	equ	0xFE6
 17399                           postdec1	equ	0xFE5
 17400                           fsr1h	equ	0xFE2
 17401                           fsr1l	equ	0xFE1
 17402                           indf2	equ	0xFDF
 17403                           postinc2	equ	0xFDE
 17404                           postdec2	equ	0xFDD
 17405                           plusw2	equ	0xFDB
 17406                           fsr2h	equ	0xFDA
 17407                           fsr2l	equ	0xFD9
 17408                           status	equ	0xFD8
 17409                           
 17410 ;; *************** function ___lldiv *****************
 17411 ;; Defined at:
 17412 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 17413 ;; Parameters:    Size  Location     Type
 17414 ;;  dividend        4    0[BANK0 ] unsigned long 
 17415 ;;  divisor         4    4[BANK0 ] unsigned long 
 17416 ;; Auto vars:     Size  Location     Type
 17417 ;;  quotient        4    8[BANK0 ] unsigned long 
 17418 ;;  counter         1   12[BANK0 ] unsigned char 
 17419 ;; Return value:  Size  Location     Type
 17420 ;;                  4    0[BANK0 ] unsigned long 
 17421 ;; Registers used:
 17422 ;;		wreg, status,2, status,0
 17423 ;; Tracked objects:
 17424 ;;		On entry : 0/0
 17425 ;;		On exit  : 0/0
 17426 ;;		Unchanged: 0/0
 17427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17428 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17429 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17431 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17432 ;;Total ram usage:       13 bytes
 17433 ;; Hardware stack levels used:    1
 17434 ;; Hardware stack levels required when called:   11
 17435 ;; This function calls:
 17436 ;;		Nothing
 17437 ;; This function is called by:
 17438 ;;		_CTMU_read
 17439 ;;		_get_quot_rem
 17440 ;;		_display_LCD
 17441 ;;		_comm_disp
 17442 ;;		_my_utoa32
 17443 ;; This function uses a non-reentrant model
 17444 ;;
 17445                           
 17446                           	psect	text68
 17447  014ED6                     __ptext68:
 17448                           	opt stack 0
 17449  014ED6                     ___lldiv:
 17450                           	opt stack 15
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;incstack = 0
 17454  014ED6  0E00               	movlw	0
 17455  014ED8  0100               	movlb	0	; () banked
 17456  014EDA  6FBD               	movwf	___lldiv@quotient& (0+255),b
 17457  014EDC  0E00               	movlw	0
 17458  014EDE  6FBE               	movwf	(___lldiv@quotient+1)& (0+255),b
 17459  014EE0  0E00               	movlw	0
 17460  014EE2  6FBF               	movwf	(___lldiv@quotient+2)& (0+255),b
 17461  014EE4  0E00               	movlw	0
 17462  014EE6  6FC0               	movwf	(___lldiv@quotient+3)& (0+255),b
 17463                           
 17464                           ; BSR set to: 0
 17465  014EE8  0100               	movlb	0	; () banked
 17466  014EEA  51B9               	movf	___lldiv@divisor& (0+255),w,b
 17467  014EEC  0100               	movlb	0	; () banked
 17468  014EEE  11BA               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 17469  014EF0  0100               	movlb	0	; () banked
 17470  014EF2  11BB               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 17471  014EF4  0100               	movlb	0	; () banked
 17472  014EF6  11BC               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 17473  014EF8  B4D8               	btfsc	status,2,c
 17474  014EFA  D042               	goto	l1878
 17475                           
 17476                           ; BSR set to: 0
 17477  014EFC  0E01               	movlw	1
 17478  014EFE  0100               	movlb	0	; () banked
 17479  014F00  6FC1               	movwf	___lldiv@counter& (0+255),b
 17480  014F02  D008               	goto	l9504
 17481  014F04                     l9502:
 17482                           
 17483                           ; BSR set to: 0
 17484  014F04  0100               	movlb	0	; () banked
 17485  014F06  90D8               	bcf	status,0,c
 17486  014F08  37B9               	rlcf	___lldiv@divisor& (0+255),f,b
 17487  014F0A  37BA               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 17488  014F0C  37BB               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 17489  014F0E  37BC               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 17490  014F10  0100               	movlb	0	; () banked
 17491  014F12  2BC1               	incf	___lldiv@counter& (0+255),f,b
 17492  014F14                     l9504:
 17493                           
 17494                           ; BSR set to: 0
 17495  014F14  0100               	movlb	0	; () banked
 17496  014F16  AFBC               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 17497  014F18  D7F5               	goto	l9502
 17498  014F1A                     l9506:
 17499                           
 17500                           ; BSR set to: 0
 17501  014F1A  0100               	movlb	0	; () banked
 17502  014F1C  90D8               	bcf	status,0,c
 17503  014F1E  37BD               	rlcf	___lldiv@quotient& (0+255),f,b
 17504  014F20  37BE               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 17505  014F22  37BF               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 17506  014F24  37C0               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 17507                           
 17508                           ; BSR set to: 0
 17509  014F26  0100               	movlb	0	; () banked
 17510  014F28  51B9               	movf	___lldiv@divisor& (0+255),w,b
 17511  014F2A  0100               	movlb	0	; () banked
 17512  014F2C  5DB5               	subwf	___lldiv@dividend& (0+255),w,b
 17513  014F2E  0100               	movlb	0	; () banked
 17514  014F30  51BA               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17515  014F32  0100               	movlb	0	; () banked
 17516  014F34  59B6               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 17517  014F36  0100               	movlb	0	; () banked
 17518  014F38  51BB               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17519  014F3A  0100               	movlb	0	; () banked
 17520  014F3C  59B7               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 17521  014F3E  0100               	movlb	0	; () banked
 17522  014F40  51BC               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17523  014F42  0100               	movlb	0	; () banked
 17524  014F44  59B8               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 17525  014F46  A0D8               	btfss	status,0,c
 17526  014F48  D012               	goto	l9514
 17527                           
 17528                           ; BSR set to: 0
 17529  014F4A  0100               	movlb	0	; () banked
 17530  014F4C  51B9               	movf	___lldiv@divisor& (0+255),w,b
 17531  014F4E  0100               	movlb	0	; () banked
 17532  014F50  5FB5               	subwf	___lldiv@dividend& (0+255),f,b
 17533  014F52  0100               	movlb	0	; () banked
 17534  014F54  51BA               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17535  014F56  0100               	movlb	0	; () banked
 17536  014F58  5BB6               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 17537  014F5A  0100               	movlb	0	; () banked
 17538  014F5C  51BB               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17539  014F5E  0100               	movlb	0	; () banked
 17540  014F60  5BB7               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 17541  014F62  0100               	movlb	0	; () banked
 17542  014F64  51BC               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17543  014F66  0100               	movlb	0	; () banked
 17544  014F68  5BB8               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 17545                           
 17546                           ; BSR set to: 0
 17547  014F6A  0100               	movlb	0	; () banked
 17548  014F6C  81BD               	bsf	___lldiv@quotient& (0+255),0,b
 17549  014F6E                     l9514:
 17550                           
 17551                           ; BSR set to: 0
 17552  014F6E  0100               	movlb	0	; () banked
 17553  014F70  90D8               	bcf	status,0,c
 17554  014F72  33BC               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 17555  014F74  33BB               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 17556  014F76  33BA               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 17557  014F78  33B9               	rrcf	___lldiv@divisor& (0+255),f,b
 17558                           
 17559                           ; BSR set to: 0
 17560  014F7A  0100               	movlb	0	; () banked
 17561  014F7C  2FC1               	decfsz	___lldiv@counter& (0+255),f,b
 17562  014F7E  D7CD               	goto	l9506
 17563  014F80                     l1878:
 17564                           
 17565                           ; BSR set to: 0
 17566  014F80  C0BD  F0B5         	movff	___lldiv@quotient,?___lldiv
 17567  014F84  C0BE  F0B6         	movff	___lldiv@quotient+1,?___lldiv+1
 17568  014F88  C0BF  F0B7         	movff	___lldiv@quotient+2,?___lldiv+2
 17569  014F8C  C0C0  F0B8         	movff	___lldiv@quotient+3,?___lldiv+3
 17570                           
 17571                           ; BSR set to: 0
 17572  014F90  0012               	return		;funcret
 17573  014F92                     __end_of___lldiv:
 17574                           	opt stack 0
 17575                           tblptru	equ	0xFF8
 17576                           tblptrh	equ	0xFF7
 17577                           tblptrl	equ	0xFF6
 17578                           tablat	equ	0xFF5
 17579                           prodh	equ	0xFF4
 17580                           prodl	equ	0xFF3
 17581                           intcon	equ	0xFF2
 17582                           intcon2	equ	0xFF1
 17583                           postinc0	equ	0xFEE
 17584                           wreg	equ	0xFE8
 17585                           indf1	equ	0xFE7
 17586                           postinc1	equ	0xFE6
 17587                           postdec1	equ	0xFE5
 17588                           fsr1h	equ	0xFE2
 17589                           fsr1l	equ	0xFE1
 17590                           indf2	equ	0xFDF
 17591                           postinc2	equ	0xFDE
 17592                           postdec2	equ	0xFDD
 17593                           plusw2	equ	0xFDB
 17594                           fsr2h	equ	0xFDA
 17595                           fsr2l	equ	0xFD9
 17596                           status	equ	0xFD8
 17597                           
 17598 ;; *************** function _USB_loop *****************
 17599 ;; Defined at:
 17600 ;;		line 736 in file "tasks.h"
 17601 ;; Parameters:    Size  Location     Type
 17602 ;;		None
 17603 ;; Auto vars:     Size  Location     Type
 17604 ;;  rx_len          2   20[BANK0 ] int 
 17605 ;;  data            1   22[BANK0 ] unsigned char 
 17606 ;; Return value:  Size  Location     Type
 17607 ;;		None               void
 17608 ;; Registers used:
 17609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17610 ;; Tracked objects:
 17611 ;;		On entry : 0/0
 17612 ;;		On exit  : 0/0
 17613 ;;		Unchanged: 0/0
 17614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17616 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17618 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17619 ;;Total ram usage:        3 bytes
 17620 ;; Hardware stack levels used:    1
 17621 ;; Hardware stack levels required when called:   14
 17622 ;; This function calls:
 17623 ;;		_get_string_usb
 17624 ;;		_put_string_usb
 17625 ;;		_ringbuf_num
 17626 ;;		_ringbuf_pop
 17627 ;;		_ringbuf_put
 17628 ;; This function is called by:
 17629 ;;		_main
 17630 ;; This function uses a non-reentrant model
 17631 ;;
 17632                           
 17633                           	psect	text69
 17634  0156E8                     __ptext69:
 17635                           	opt stack 0
 17636  0156E8                     _USB_loop:
 17637                           	opt stack 16
 17638                           
 17639                           ;tasks.h: 737: char data;
 17640                           ;tasks.h: 738: int rx_len;
 17641                           ;tasks.h: 739: rx_len = get_string_usb(&data, 1);
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;incstack = 0
 17645  0156E8  0ECB               	movlw	low USB_loop@data
 17646  0156EA  0100               	movlb	0	; () banked
 17647  0156EC  6FC2               	movwf	get_string_usb@s& (0+255),b
 17648  0156EE  0E00               	movlw	high USB_loop@data
 17649  0156F0  0100               	movlb	0	; () banked
 17650  0156F2  6FC3               	movwf	(get_string_usb@s+1)& (0+255),b
 17651  0156F4  0E00               	movlw	0
 17652  0156F6  0100               	movlb	0	; () banked
 17653  0156F8  6FC5               	movwf	(get_string_usb@len+1)& (0+255),b
 17654  0156FA  0E01               	movlw	1
 17655  0156FC  6FC4               	movwf	get_string_usb@len& (0+255),b
 17656  0156FE  EC6F  F0B1         	call	_get_string_usb	;wreg free
 17657  015702  C0C2  F0C9         	movff	?_get_string_usb,USB_loop@rx_len
 17658  015706  C0C3  F0CA         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 17659                           
 17660                           ;tasks.h: 740: if (rx_len) {
 17661  01570A  0100               	movlb	0	; () banked
 17662  01570C  51C9               	movf	USB_loop@rx_len& (0+255),w,b
 17663  01570E  0100               	movlb	0	; () banked
 17664  015710  11CA               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 17665  015712  B4D8               	btfsc	status,2,c
 17666  015714  D00A               	goto	l901
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;tasks.h: 741: ringbuf_put(&rx_buf, data);
 17670  015716  0EE8               	movlw	low _rx_buf
 17671  015718  0100               	movlb	0	; () banked
 17672  01571A  6FBD               	movwf	ringbuf_put@rb& (0+255),b
 17673  01571C  0E01               	movlw	high _rx_buf
 17674  01571E  0100               	movlb	0	; () banked
 17675  015720  6FBE               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17676  015722  C0CB  F0BF         	movff	USB_loop@data,ringbuf_put@asciicode
 17677  015726  EC48  F0A4         	call	_ringbuf_put	;wreg free
 17678  01572A                     l901:
 17679                           
 17680                           ;tasks.h: 742: }
 17681                           ;tasks.h: 743: if (ringbuf_num(&tx_buf)) {
 17682  01572A  0E9E               	movlw	low _tx_buf
 17683  01572C  0100               	movlb	0	; () banked
 17684  01572E  6FB5               	movwf	ringbuf_num@rb& (0+255),b
 17685  015730  0E00               	movlw	high _tx_buf
 17686  015732  0100               	movlb	0	; () banked
 17687  015734  6FB6               	movwf	(ringbuf_num@rb+1)& (0+255),b
 17688  015736  EC5C  F0A0         	call	_ringbuf_num	;wreg free
 17689  01573A  0100               	movlb	0	; () banked
 17690  01573C  51B5               	movf	?_ringbuf_num& (0+255),w,b
 17691  01573E  0100               	movlb	0	; () banked
 17692  015740  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 17693  015742  B4D8               	btfsc	status,2,c
 17694  015744  0012               	return	
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;tasks.h: 744: data = ringbuf_pop(&tx_buf);
 17698  015746  0E9E               	movlw	low _tx_buf
 17699  015748  0100               	movlb	0	; () banked
 17700  01574A  6FBD               	movwf	ringbuf_pop@rb& (0+255),b
 17701  01574C  0E00               	movlw	high _tx_buf
 17702  01574E  0100               	movlb	0	; () banked
 17703  015750  6FBE               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 17704  015752  EC81  F0A5         	call	_ringbuf_pop	;wreg free
 17705  015756  0100               	movlb	0	; () banked
 17706  015758  6FCB               	movwf	USB_loop@data& (0+255),b
 17707  01575A                     l11426:
 17708                           
 17709                           ; BSR set to: 0
 17710  01575A  0ECB               	movlw	low USB_loop@data
 17711  01575C  0100               	movlb	0	; () banked
 17712  01575E  6FC1               	movwf	put_string_usb@s& (0+255),b
 17713  015760  0E00               	movlw	high USB_loop@data
 17714  015762  0100               	movlb	0	; () banked
 17715  015764  6FC2               	movwf	(put_string_usb@s+1)& (0+255),b
 17716  015766  0E00               	movlw	0
 17717  015768  0100               	movlb	0	; () banked
 17718  01576A  6FC4               	movwf	(put_string_usb@len+1)& (0+255),b
 17719  01576C  0E01               	movlw	1
 17720  01576E  6FC3               	movwf	put_string_usb@len& (0+255),b
 17721  015770  EC22  F0B2         	call	_put_string_usb	;wreg free
 17722  015774  0100               	movlb	0	; () banked
 17723  015776  51C1               	movf	?_put_string_usb& (0+255),w,b
 17724  015778  0100               	movlb	0	; () banked
 17725  01577A  11C2               	iorwf	(?_put_string_usb+1)& (0+255),w,b
 17726  01577C  B4D8               	btfsc	status,2,c
 17727  01577E  0012               	return	
 17728  015780  D7EC               	goto	l11426
 17729  015782                     __end_of_USB_loop:
 17730                           	opt stack 0
 17731                           tblptru	equ	0xFF8
 17732                           tblptrh	equ	0xFF7
 17733                           tblptrl	equ	0xFF6
 17734                           tablat	equ	0xFF5
 17735                           prodh	equ	0xFF4
 17736                           prodl	equ	0xFF3
 17737                           intcon	equ	0xFF2
 17738                           intcon2	equ	0xFF1
 17739                           postinc0	equ	0xFEE
 17740                           wreg	equ	0xFE8
 17741                           indf1	equ	0xFE7
 17742                           postinc1	equ	0xFE6
 17743                           postdec1	equ	0xFE5
 17744                           fsr1h	equ	0xFE2
 17745                           fsr1l	equ	0xFE1
 17746                           indf2	equ	0xFDF
 17747                           postinc2	equ	0xFDE
 17748                           postdec2	equ	0xFDD
 17749                           plusw2	equ	0xFDB
 17750                           fsr2h	equ	0xFDA
 17751                           fsr2l	equ	0xFD9
 17752                           status	equ	0xFD8
 17753                           
 17754 ;; *************** function _ringbuf_put *****************
 17755 ;; Defined at:
 17756 ;;		line 39 in file "../My_header\My_ringbuf.h"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 17759 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 17760 ;;  asciicode       1   10[BANK0 ] unsigned char 
 17761 ;; Auto vars:     Size  Location     Type
 17762 ;;		None
 17763 ;; Return value:  Size  Location     Type
 17764 ;;		None               void
 17765 ;; Registers used:
 17766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17767 ;; Tracked objects:
 17768 ;;		On entry : 0/0
 17769 ;;		On exit  : 0/0
 17770 ;;		Unchanged: 0/0
 17771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17772 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17774 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17775 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17776 ;;Total ram usage:        7 bytes
 17777 ;; Hardware stack levels used:    1
 17778 ;; Hardware stack levels required when called:   12
 17779 ;; This function calls:
 17780 ;;		_ringbuf_num
 17781 ;; This function is called by:
 17782 ;;		_tx_send
 17783 ;;		_tx_sends
 17784 ;;		_rx_loop
 17785 ;;		_USB_loop
 17786 ;;		_ringbuf_put_num
 17787 ;;		_ringbuf_put_str
 17788 ;;		_UART_ISR
 17789 ;; This function uses a non-reentrant model
 17790 ;;
 17791                           
 17792                           	psect	text70
 17793  014890                     __ptext70:
 17794                           	opt stack 0
 17795  014890                     _ringbuf_put:
 17796                           	opt stack 16
 17797                           
 17798                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;incstack = 0
 17802  014890  C0BD  F0B5         	movff	ringbuf_put@rb,ringbuf_num@rb
 17803  014894  C0BE  F0B6         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 17804  014898  EC5C  F0A0         	call	_ringbuf_num	;wreg free
 17805  01489C  0100               	movlb	0	; () banked
 17806  01489E  EE20 F002          	lfsr	2,2
 17807  0148A2  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17808  0148A4  26D9               	addwf	fsr2l,f,c
 17809  0148A6  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17810  0148A8  22DA               	addwfc	fsr2h,f,c
 17811  0148AA  50DE               	movf	postinc2,w,c
 17812  0148AC  0100               	movlb	0	; () banked
 17813  0148AE  5DB5               	subwf	?_ringbuf_num& (0+255),w,b
 17814  0148B0  50DE               	movf	postinc2,w,c
 17815  0148B2  0100               	movlb	0	; () banked
 17816  0148B4  59B6               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 17817  0148B6  B0D8               	btfsc	status,0,c
 17818  0148B8  0012               	return	
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 17822  0148BA  0100               	movlb	0	; () banked
 17823  0148BC  EE20 F004          	lfsr	2,4
 17824  0148C0  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17825  0148C2  26D9               	addwf	fsr2l,f,c
 17826  0148C4  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17827  0148C6  22DA               	addwfc	fsr2h,f,c
 17828  0148C8  CFDE F0C0          	movff	postinc2,??_ringbuf_put
 17829  0148CC  CFDD F0C1          	movff	postdec2,??_ringbuf_put+1
 17830  0148D0  C0BD  FFD9         	movff	ringbuf_put@rb,fsr2l
 17831  0148D4  C0BE  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 17832  0148D8  CFDE F0C2          	movff	postinc2,??_ringbuf_put+2
 17833  0148DC  CFDD F0C3          	movff	postdec2,??_ringbuf_put+3
 17834  0148E0  0100               	movlb	0	; () banked
 17835  0148E2  51C0               	movf	??_ringbuf_put& (0+255),w,b
 17836  0148E4  0100               	movlb	0	; () banked
 17837  0148E6  25C2               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 17838  0148E8  6ED9               	movwf	fsr2l,c
 17839  0148EA  0100               	movlb	0	; () banked
 17840  0148EC  51C1               	movf	(??_ringbuf_put+1)& (0+255),w,b
 17841  0148EE  0100               	movlb	0	; () banked
 17842  0148F0  21C3               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 17843  0148F2  6EDA               	movwf	fsr2h,c
 17844  0148F4  C0BF  FFDF         	movff	ringbuf_put@asciicode,indf2
 17845                           
 17846                           ; BSR set to: 0
 17847                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 17848  0148F8  0100               	movlb	0	; () banked
 17849  0148FA  EE20 F002          	lfsr	2,2
 17850  0148FE  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17851  014900  26D9               	addwf	fsr2l,f,c
 17852  014902  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17853  014904  22DA               	addwfc	fsr2h,f,c
 17854  014906  0100               	movlb	0	; () banked
 17855  014908  EE10 F004          	lfsr	1,4
 17856  01490C  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17857  01490E  26E1               	addwf	fsr1l,f,c
 17858  014910  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17859  014912  22E2               	addwfc	fsr1h,f,c
 17860  014914  CFE6 F0C2          	movff	postinc1,??_ringbuf_put+2
 17861  014918  CFE5 F0C3          	movff	postdec1,??_ringbuf_put+3
 17862  01491C  0E01               	movlw	1
 17863  01491E  0100               	movlb	0	; () banked
 17864  014920  27C2               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 17865  014922  0E00               	movlw	0
 17866  014924  23C3               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 17867  014926  50DE               	movf	postinc2,w,c
 17868  014928  0100               	movlb	0	; () banked
 17869  01492A  5DC2               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 17870  01492C  50DE               	movf	postinc2,w,c
 17871  01492E  0100               	movlb	0	; () banked
 17872  014930  59C3               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 17873  014932  B0D8               	btfsc	status,0,c
 17874  014934  D00B               	goto	l9400
 17875                           
 17876                           ; BSR set to: 0
 17877  014936  0100               	movlb	0	; () banked
 17878  014938  EE20 F004          	lfsr	2,4
 17879  01493C  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17880  01493E  26D9               	addwf	fsr2l,f,c
 17881  014940  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17882  014942  22DA               	addwfc	fsr2h,f,c
 17883  014944  2ADE               	incf	postinc2,f,c
 17884  014946  0E00               	movlw	0
 17885  014948  22DD               	addwfc	postdec2,f,c
 17886  01494A  0012               	return	
 17887  01494C                     l9400:
 17888                           
 17889                           ; BSR set to: 0
 17890                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 17891  01494C  0100               	movlb	0	; () banked
 17892  01494E  EE20 F004          	lfsr	2,4
 17893  014952  51BD               	movf	ringbuf_put@rb& (0+255),w,b
 17894  014954  26D9               	addwf	fsr2l,f,c
 17895  014956  51BE               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17896  014958  22DA               	addwfc	fsr2h,f,c
 17897  01495A  0E00               	movlw	0
 17898  01495C  6EDE               	movwf	postinc2,c
 17899  01495E  0E00               	movlw	0
 17900  014960  6EDD               	movwf	postdec2,c
 17901                           
 17902                           ; BSR set to: 0
 17903  014962  0012               	return	
 17904  014964                     __end_of_ringbuf_put:
 17905                           	opt stack 0
 17906                           tblptru	equ	0xFF8
 17907                           tblptrh	equ	0xFF7
 17908                           tblptrl	equ	0xFF6
 17909                           tablat	equ	0xFF5
 17910                           prodh	equ	0xFF4
 17911                           prodl	equ	0xFF3
 17912                           intcon	equ	0xFF2
 17913                           intcon2	equ	0xFF1
 17914                           postinc0	equ	0xFEE
 17915                           wreg	equ	0xFE8
 17916                           indf1	equ	0xFE7
 17917                           postinc1	equ	0xFE6
 17918                           postdec1	equ	0xFE5
 17919                           fsr1h	equ	0xFE2
 17920                           fsr1l	equ	0xFE1
 17921                           indf2	equ	0xFDF
 17922                           postinc2	equ	0xFDE
 17923                           postdec2	equ	0xFDD
 17924                           plusw2	equ	0xFDB
 17925                           fsr2h	equ	0xFDA
 17926                           fsr2l	equ	0xFD9
 17927                           status	equ	0xFD8
 17928                           
 17929 ;; *************** function _ringbuf_pop *****************
 17930 ;; Defined at:
 17931 ;;		line 64 in file "../My_header\My_ringbuf.h"
 17932 ;; Parameters:    Size  Location     Type
 17933 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 17934 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 17935 ;; Auto vars:     Size  Location     Type
 17936 ;;  ret             1   14[BANK0 ] unsigned char 
 17937 ;; Return value:  Size  Location     Type
 17938 ;;                  1    wreg      unsigned char 
 17939 ;; Registers used:
 17940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17941 ;; Tracked objects:
 17942 ;;		On entry : 0/0
 17943 ;;		On exit  : 0/0
 17944 ;;		Unchanged: 0/0
 17945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17948 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17949 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17950 ;;Total ram usage:        7 bytes
 17951 ;; Hardware stack levels used:    1
 17952 ;; Hardware stack levels required when called:   12
 17953 ;; This function calls:
 17954 ;;		_ringbuf_num
 17955 ;; This function is called by:
 17956 ;;		_rx_loop
 17957 ;;		_USB_loop
 17958 ;;		_UART_ISR
 17959 ;; This function uses a non-reentrant model
 17960 ;;
 17961                           
 17962                           	psect	text71
 17963  014B02                     __ptext71:
 17964                           	opt stack 0
 17965  014B02                     _ringbuf_pop:
 17966                           	opt stack 17
 17967                           
 17968                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;incstack = 0
 17972  014B02  C0BD  F0B5         	movff	ringbuf_pop@rb,ringbuf_num@rb
 17973  014B06  C0BE  F0B6         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 17974  014B0A  EC5C  F0A0         	call	_ringbuf_num	;wreg free
 17975  014B0E  0100               	movlb	0	; () banked
 17976  014B10  51B5               	movf	?_ringbuf_num& (0+255),w,b
 17977  014B12  0100               	movlb	0	; () banked
 17978  014B14  11B6               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 17979  014B16  B4D8               	btfsc	status,2,c
 17980  014B18  D058               	goto	l10594
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 17984  014B1A  0100               	movlb	0	; () banked
 17985  014B1C  EE20 F006          	lfsr	2,6
 17986  014B20  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 17987  014B22  26D9               	addwf	fsr2l,f,c
 17988  014B24  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 17989  014B26  22DA               	addwfc	fsr2h,f,c
 17990  014B28  CFDE F0BF          	movff	postinc2,??_ringbuf_pop
 17991  014B2C  CFDD F0C0          	movff	postdec2,??_ringbuf_pop+1
 17992  014B30  C0BD  FFD9         	movff	ringbuf_pop@rb,fsr2l
 17993  014B34  C0BE  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 17994  014B38  CFDE F0C1          	movff	postinc2,??_ringbuf_pop+2
 17995  014B3C  CFDD F0C2          	movff	postdec2,??_ringbuf_pop+3
 17996  014B40  0100               	movlb	0	; () banked
 17997  014B42  51BF               	movf	??_ringbuf_pop& (0+255),w,b
 17998  014B44  0100               	movlb	0	; () banked
 17999  014B46  25C1               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 18000  014B48  6ED9               	movwf	fsr2l,c
 18001  014B4A  0100               	movlb	0	; () banked
 18002  014B4C  51C0               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 18003  014B4E  0100               	movlb	0	; () banked
 18004  014B50  21C2               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 18005  014B52  6EDA               	movwf	fsr2h,c
 18006  014B54  50DF               	movf	indf2,w,c
 18007  014B56  0100               	movlb	0	; () banked
 18008  014B58  6FC3               	movwf	ringbuf_pop@ret& (0+255),b
 18009                           
 18010                           ; BSR set to: 0
 18011                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 18012  014B5A  0100               	movlb	0	; () banked
 18013  014B5C  EE20 F002          	lfsr	2,2
 18014  014B60  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 18015  014B62  26D9               	addwf	fsr2l,f,c
 18016  014B64  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 18017  014B66  22DA               	addwfc	fsr2h,f,c
 18018  014B68  0100               	movlb	0	; () banked
 18019  014B6A  EE10 F006          	lfsr	1,6
 18020  014B6E  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 18021  014B70  26E1               	addwf	fsr1l,f,c
 18022  014B72  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 18023  014B74  22E2               	addwfc	fsr1h,f,c
 18024  014B76  CFE6 F0C1          	movff	postinc1,??_ringbuf_pop+2
 18025  014B7A  CFE5 F0C2          	movff	postdec1,??_ringbuf_pop+3
 18026  014B7E  0E01               	movlw	1
 18027  014B80  0100               	movlb	0	; () banked
 18028  014B82  27C1               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 18029  014B84  0E00               	movlw	0
 18030  014B86  23C2               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 18031  014B88  50DE               	movf	postinc2,w,c
 18032  014B8A  0100               	movlb	0	; () banked
 18033  014B8C  5DC1               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 18034  014B8E  50DE               	movf	postinc2,w,c
 18035  014B90  0100               	movlb	0	; () banked
 18036  014B92  59C2               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 18037  014B94  B0D8               	btfsc	status,0,c
 18038  014B96  D00B               	goto	l10586
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 18042  014B98  0100               	movlb	0	; () banked
 18043  014B9A  EE20 F006          	lfsr	2,6
 18044  014B9E  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 18045  014BA0  26D9               	addwf	fsr2l,f,c
 18046  014BA2  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 18047  014BA4  22DA               	addwfc	fsr2h,f,c
 18048  014BA6  2ADE               	incf	postinc2,f,c
 18049  014BA8  0E00               	movlw	0
 18050  014BAA  22DD               	addwfc	postdec2,f,c
 18051                           
 18052                           ;My_header\My_ringbuf.h: 69: } else {
 18053  014BAC  D00B               	goto	l10588
 18054  014BAE                     l10586:
 18055                           
 18056                           ; BSR set to: 0
 18057                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 18058  014BAE  0100               	movlb	0	; () banked
 18059  014BB0  EE20 F006          	lfsr	2,6
 18060  014BB4  51BD               	movf	ringbuf_pop@rb& (0+255),w,b
 18061  014BB6  26D9               	addwf	fsr2l,f,c
 18062  014BB8  51BE               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 18063  014BBA  22DA               	addwfc	fsr2h,f,c
 18064  014BBC  0E00               	movlw	0
 18065  014BBE  6EDE               	movwf	postinc2,c
 18066  014BC0  0E00               	movlw	0
 18067  014BC2  6EDD               	movwf	postdec2,c
 18068  014BC4                     l10588:
 18069                           
 18070                           ; BSR set to: 0
 18071                           ;My_header\My_ringbuf.h: 71: }
 18072                           ;My_header\My_ringbuf.h: 72: return ret;
 18073  014BC4  0100               	movlb	0	; () banked
 18074  014BC6  51C3               	movf	ringbuf_pop@ret& (0+255),w,b
 18075                           
 18076                           ; BSR set to: 0
 18077                           ;My_header\My_ringbuf.h: 73: } else {
 18078                           
 18079                           ; BSR set to: 0
 18080  014BC8  0012               	return	
 18081  014BCA                     l10594:
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;My_header\My_ringbuf.h: 74: return 0;
 18085  014BCA  0E00               	movlw	0
 18086                           
 18087                           ; BSR set to: 0
 18088  014BCC  0012               	return	
 18089  014BCE                     __end_of_ringbuf_pop:
 18090                           	opt stack 0
 18091                           tblptru	equ	0xFF8
 18092                           tblptrh	equ	0xFF7
 18093                           tblptrl	equ	0xFF6
 18094                           tablat	equ	0xFF5
 18095                           prodh	equ	0xFF4
 18096                           prodl	equ	0xFF3
 18097                           intcon	equ	0xFF2
 18098                           intcon2	equ	0xFF1
 18099                           postinc0	equ	0xFEE
 18100                           wreg	equ	0xFE8
 18101                           indf1	equ	0xFE7
 18102                           postinc1	equ	0xFE6
 18103                           postdec1	equ	0xFE5
 18104                           fsr1h	equ	0xFE2
 18105                           fsr1l	equ	0xFE1
 18106                           indf2	equ	0xFDF
 18107                           postinc2	equ	0xFDE
 18108                           postdec2	equ	0xFDD
 18109                           plusw2	equ	0xFDB
 18110                           fsr2h	equ	0xFDA
 18111                           fsr2l	equ	0xFD9
 18112                           status	equ	0xFD8
 18113                           
 18114 ;; *************** function _ringbuf_num *****************
 18115 ;; Defined at:
 18116 ;;		line 31 in file "../My_header\My_ringbuf.h"
 18117 ;; Parameters:    Size  Location     Type
 18118 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 18119 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 18120 ;; Auto vars:     Size  Location     Type
 18121 ;;		None
 18122 ;; Return value:  Size  Location     Type
 18123 ;;                  2    0[BANK0 ] unsigned int 
 18124 ;; Registers used:
 18125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18126 ;; Tracked objects:
 18127 ;;		On entry : 0/0
 18128 ;;		On exit  : 0/0
 18129 ;;		Unchanged: 0/0
 18130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18133 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18134 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18135 ;;Total ram usage:        8 bytes
 18136 ;; Hardware stack levels used:    1
 18137 ;; Hardware stack levels required when called:   11
 18138 ;; This function calls:
 18139 ;;		Nothing
 18140 ;; This function is called by:
 18141 ;;		_ringbuf_put
 18142 ;;		_ringbuf_pop
 18143 ;;		_ringbuf_backspace
 18144 ;;		_rx_loop
 18145 ;;		_USB_loop
 18146 ;;		_UART_ISR
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           	psect	text72
 18151  0140B8                     __ptext72:
 18152                           	opt stack 0
 18153  0140B8                     _ringbuf_num:
 18154                           	opt stack 16
 18155                           
 18156                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;incstack = 0
 18160  0140B8  0100               	movlb	0	; () banked
 18161  0140BA  EE20 F006          	lfsr	2,6
 18162  0140BE  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 18163  0140C0  26D9               	addwf	fsr2l,f,c
 18164  0140C2  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 18165  0140C4  22DA               	addwfc	fsr2h,f,c
 18166  0140C6  0100               	movlb	0	; () banked
 18167  0140C8  EE10 F004          	lfsr	1,4
 18168  0140CC  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 18169  0140CE  26E1               	addwf	fsr1l,f,c
 18170  0140D0  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 18171  0140D2  22E2               	addwfc	fsr1h,f,c
 18172  0140D4  50DE               	movf	postinc2,w,c
 18173  0140D6  5CE6               	subwf	postinc1,w,c
 18174  0140D8  50DE               	movf	postinc2,w,c
 18175  0140DA  58E6               	subwfb	postinc1,w,c
 18176  0140DC  A0D8               	btfss	status,0,c
 18177  0140DE  D028               	goto	l9388
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 18181  0140E0  0100               	movlb	0	; () banked
 18182  0140E2  EE20 F004          	lfsr	2,4
 18183  0140E6  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 18184  0140E8  26D9               	addwf	fsr2l,f,c
 18185  0140EA  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 18186  0140EC  22DA               	addwfc	fsr2h,f,c
 18187  0140EE  CFDE F0B7          	movff	postinc2,??_ringbuf_num
 18188  0140F2  CFDD F0B8          	movff	postdec2,??_ringbuf_num+1
 18189  0140F6  0100               	movlb	0	; () banked
 18190  0140F8  EE20 F006          	lfsr	2,6
 18191  0140FC  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 18192  0140FE  26D9               	addwf	fsr2l,f,c
 18193  014100  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 18194  014102  22DA               	addwfc	fsr2h,f,c
 18195  014104  CFDE F0B9          	movff	postinc2,??_ringbuf_num+2
 18196  014108  CFDD F0BA          	movff	postdec2,??_ringbuf_num+3
 18197  01410C  0100               	movlb	0	; () banked
 18198  01410E  1FB9               	comf	(??_ringbuf_num+2)& (0+255),f,b
 18199  014110  1FBA               	comf	(??_ringbuf_num+3)& (0+255),f,b
 18200  014112  4BB9               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 18201  014114  2BBA               	incf	(??_ringbuf_num+3)& (0+255),f,b
 18202  014116  0100               	movlb	0	; () banked
 18203  014118  51B7               	movf	??_ringbuf_num& (0+255),w,b
 18204  01411A  0100               	movlb	0	; () banked
 18205  01411C  25B9               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 18206  01411E  0100               	movlb	0	; () banked
 18207  014120  6FB5               	movwf	?_ringbuf_num& (0+255),b
 18208  014122  0100               	movlb	0	; () banked
 18209  014124  51B8               	movf	(??_ringbuf_num+1)& (0+255),w,b
 18210  014126  0100               	movlb	0	; () banked
 18211  014128  21BA               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 18212  01412A  0100               	movlb	0	; () banked
 18213  01412C  6FB6               	movwf	(?_ringbuf_num+1)& (0+255),b
 18214                           
 18215                           ; BSR set to: 0
 18216                           ;My_header\My_ringbuf.h: 34: } else {
 18217                           
 18218                           ; BSR set to: 0
 18219  01412E  0012               	return	
 18220  014130                     l9388:
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 18224  014130  0100               	movlb	0	; () banked
 18225  014132  EE20 F004          	lfsr	2,4
 18226  014136  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 18227  014138  26D9               	addwf	fsr2l,f,c
 18228  01413A  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 18229  01413C  22DA               	addwfc	fsr2h,f,c
 18230  01413E  CFDE F0B7          	movff	postinc2,??_ringbuf_num
 18231  014142  CFDD F0B8          	movff	postdec2,??_ringbuf_num+1
 18232  014146  0100               	movlb	0	; () banked
 18233  014148  EE20 F002          	lfsr	2,2
 18234  01414C  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 18235  01414E  26D9               	addwf	fsr2l,f,c
 18236  014150  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 18237  014152  22DA               	addwfc	fsr2h,f,c
 18238  014154  CFDE F0B9          	movff	postinc2,??_ringbuf_num+2
 18239  014158  CFDD F0BA          	movff	postdec2,??_ringbuf_num+3
 18240  01415C  0100               	movlb	0	; () banked
 18241  01415E  EE20 F006          	lfsr	2,6
 18242  014162  51B5               	movf	ringbuf_num@rb& (0+255),w,b
 18243  014164  26D9               	addwf	fsr2l,f,c
 18244  014166  51B6               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 18245  014168  22DA               	addwfc	fsr2h,f,c
 18246  01416A  CFDE F0BB          	movff	postinc2,??_ringbuf_num+4
 18247  01416E  CFDD F0BC          	movff	postdec2,??_ringbuf_num+5
 18248  014172  0100               	movlb	0	; () banked
 18249  014174  1FBB               	comf	(??_ringbuf_num+4)& (0+255),f,b
 18250  014176  1FBC               	comf	(??_ringbuf_num+5)& (0+255),f,b
 18251  014178  4BBB               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 18252  01417A  2BBC               	incf	(??_ringbuf_num+5)& (0+255),f,b
 18253  01417C  0100               	movlb	0	; () banked
 18254  01417E  51B9               	movf	(??_ringbuf_num+2)& (0+255),w,b
 18255  014180  0100               	movlb	0	; () banked
 18256  014182  27BB               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 18257  014184  0100               	movlb	0	; () banked
 18258  014186  51BA               	movf	(??_ringbuf_num+3)& (0+255),w,b
 18259  014188  0100               	movlb	0	; () banked
 18260  01418A  23BC               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 18261  01418C  0100               	movlb	0	; () banked
 18262  01418E  51B7               	movf	??_ringbuf_num& (0+255),w,b
 18263  014190  0100               	movlb	0	; () banked
 18264  014192  25BB               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 18265  014194  0100               	movlb	0	; () banked
 18266  014196  6FB5               	movwf	?_ringbuf_num& (0+255),b
 18267  014198  0100               	movlb	0	; () banked
 18268  01419A  51B8               	movf	(??_ringbuf_num+1)& (0+255),w,b
 18269  01419C  0100               	movlb	0	; () banked
 18270  01419E  21BC               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 18271  0141A0  0100               	movlb	0	; () banked
 18272  0141A2  6FB6               	movwf	(?_ringbuf_num+1)& (0+255),b
 18273                           
 18274                           ; BSR set to: 0
 18275  0141A4  0012               	return	
 18276  0141A6                     __end_of_ringbuf_num:
 18277                           	opt stack 0
 18278                           tblptru	equ	0xFF8
 18279                           tblptrh	equ	0xFF7
 18280                           tblptrl	equ	0xFF6
 18281                           tablat	equ	0xFF5
 18282                           prodh	equ	0xFF4
 18283                           prodl	equ	0xFF3
 18284                           intcon	equ	0xFF2
 18285                           intcon2	equ	0xFF1
 18286                           postinc0	equ	0xFEE
 18287                           wreg	equ	0xFE8
 18288                           indf1	equ	0xFE7
 18289                           postinc1	equ	0xFE6
 18290                           postdec1	equ	0xFE5
 18291                           fsr1h	equ	0xFE2
 18292                           fsr1l	equ	0xFE1
 18293                           indf2	equ	0xFDF
 18294                           postinc2	equ	0xFDE
 18295                           postdec2	equ	0xFDD
 18296                           plusw2	equ	0xFDB
 18297                           fsr2h	equ	0xFDA
 18298                           fsr2l	equ	0xFD9
 18299                           status	equ	0xFD8
 18300                           
 18301 ;; *************** function _put_string_usb *****************
 18302 ;; Defined at:
 18303 ;;		line 16 in file "../My_header/usb_cdc/My_usb_cdc.c"
 18304 ;; Parameters:    Size  Location     Type
 18305 ;;  s               2   12[BANK0 ] PTR unsigned char 
 18306 ;;		 -> USB_loop@data(1), 
 18307 ;;  len             2   14[BANK0 ] int 
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;		None
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  2   12[BANK0 ] int 
 18312 ;; Registers used:
 18313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18314 ;; Tracked objects:
 18315 ;;		On entry : 0/0
 18316 ;;		On exit  : 0/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;Total ram usage:        4 bytes
 18324 ;; Hardware stack levels used:    1
 18325 ;; Hardware stack levels required when called:   13
 18326 ;; This function calls:
 18327 ;;		_CDCTxService
 18328 ;;		_is_usb_available
 18329 ;;		_putUSBUSART
 18330 ;; This function is called by:
 18331 ;;		_USB_loop
 18332 ;; This function uses a non-reentrant model
 18333 ;;
 18334                           
 18335                           	psect	text73
 18336  016444                     __ptext73:
 18337                           	opt stack 0
 18338  016444                     _put_string_usb:
 18339                           	opt stack 16
 18340                           
 18341                           ;My_usb_cdc.c: 17: if (!is_usb_available()) {
 18342                           
 18343                           ; BSR set to: 0
 18344                           ;incstack = 0
 18345  016444  EC1E  F0B5         	call	_is_usb_available	;wreg free
 18346  016448  0900               	iorlw	0
 18347  01644A  A4D8               	btfss	status,2,c
 18348  01644C  D008               	goto	l11246
 18349                           
 18350                           ;My_usb_cdc.c: 19: return 1;
 18351  01644E  0E00               	movlw	0
 18352  016450  0100               	movlb	0	; () banked
 18353  016452  6FC2               	movwf	(?_put_string_usb+1)& (0+255),b
 18354  016454  0E01               	movlw	1
 18355  016456  6FC1               	movwf	?_put_string_usb& (0+255),b
 18356                           
 18357                           ; BSR set to: 0
 18358  016458  0012               	return	
 18359  01645A                     l11244:
 18360                           
 18361                           ; BSR set to: 0
 18362  01645A  ECA2  F095         	call	_CDCTxService	;wreg free
 18363  01645E                     l11246:
 18364  01645E  0100               	movlb	0	; () banked
 18365  016460  5193               	movf	_cdc_trf_state& (0+255),w,b
 18366  016462  A4D8               	btfss	status,2,c
 18367  016464  D7FA               	goto	l11244
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;My_usb_cdc.c: 22: putUSBUSART(s, len);
 18371                           
 18372                           ; BSR set to: 0
 18373  016466  C0C1  F0B5         	movff	put_string_usb@s,putUSBUSART@data
 18374  01646A  C0C2  F0B6         	movff	put_string_usb@s+1,putUSBUSART@data+1
 18375  01646E  C0C3  F0B7         	movff	put_string_usb@len,putUSBUSART@length
 18376  016472  EC9A  F0B4         	call	_putUSBUSART	;wreg free
 18377                           
 18378                           ;My_usb_cdc.c: 23: CDCTxService();
 18379  016476  ECA2  F095         	call	_CDCTxService	;wreg free
 18380                           
 18381                           ;My_usb_cdc.c: 24: return 0;
 18382  01647A  0E00               	movlw	0
 18383  01647C  0100               	movlb	0	; () banked
 18384  01647E  6FC2               	movwf	(?_put_string_usb+1)& (0+255),b
 18385  016480  0E00               	movlw	0
 18386  016482  6FC1               	movwf	?_put_string_usb& (0+255),b
 18387  016484  0012               	return	
 18388  016486                     __end_of_put_string_usb:
 18389                           	opt stack 0
 18390                           tblptru	equ	0xFF8
 18391                           tblptrh	equ	0xFF7
 18392                           tblptrl	equ	0xFF6
 18393                           tablat	equ	0xFF5
 18394                           prodh	equ	0xFF4
 18395                           prodl	equ	0xFF3
 18396                           intcon	equ	0xFF2
 18397                           intcon2	equ	0xFF1
 18398                           postinc0	equ	0xFEE
 18399                           wreg	equ	0xFE8
 18400                           indf1	equ	0xFE7
 18401                           postinc1	equ	0xFE6
 18402                           postdec1	equ	0xFE5
 18403                           fsr1h	equ	0xFE2
 18404                           fsr1l	equ	0xFE1
 18405                           indf2	equ	0xFDF
 18406                           postinc2	equ	0xFDE
 18407                           postdec2	equ	0xFDD
 18408                           plusw2	equ	0xFDB
 18409                           fsr2h	equ	0xFDA
 18410                           fsr2l	equ	0xFD9
 18411                           status	equ	0xFD8
 18412                           
 18413 ;; *************** function _putUSBUSART *****************
 18414 ;; Defined at:
 18415 ;;		line 613 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 18416 ;; Parameters:    Size  Location     Type
 18417 ;;  data            2    0[BANK0 ] PTR unsigned char 
 18418 ;;		 -> USB_loop@data(1), 
 18419 ;;  length          1    2[BANK0 ] unsigned char 
 18420 ;; Auto vars:     Size  Location     Type
 18421 ;;		None
 18422 ;; Return value:  Size  Location     Type
 18423 ;;		None               void
 18424 ;; Registers used:
 18425 ;;		wreg, status,2, status,0
 18426 ;; Tracked objects:
 18427 ;;		On entry : 0/0
 18428 ;;		On exit  : 0/0
 18429 ;;		Unchanged: 0/0
 18430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18431 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18434 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18435 ;;Total ram usage:        3 bytes
 18436 ;; Hardware stack levels used:    1
 18437 ;; Hardware stack levels required when called:   11
 18438 ;; This function calls:
 18439 ;;		Nothing
 18440 ;; This function is called by:
 18441 ;;		_put_string_usb
 18442 ;; This function uses a non-reentrant model
 18443 ;;
 18444                           
 18445                           	psect	text74
 18446  016934                     __ptext74:
 18447                           	opt stack 0
 18448  016934                     _putUSBUSART:
 18449                           	opt stack 17
 18450                           
 18451                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 18452                           
 18453                           ; BSR set to: 0
 18454                           ;incstack = 0
 18455  016934  98A0               	bcf	4000,4,c	;volatile
 18456                           
 18457                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 18458  016936  0100               	movlb	0	; () banked
 18459  016938  5193               	movf	_cdc_trf_state& (0+255),w,b
 18460  01693A  A4D8               	btfss	status,2,c
 18461  01693C  D00C               	goto	l10476
 18462                           
 18463                           ; BSR set to: 0
 18464                           ;usb_device_cdc.c: 640: {
 18465                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 18466  01693E  C0B5  F084         	movff	putUSBUSART@data,_pCDCSrc
 18467  016942  C0B6  F085         	movff	putUSBUSART@data+1,_pCDCSrc+1
 18468                           
 18469                           ; BSR set to: 0
 18470  016946  C0B7  F094         	movff	putUSBUSART@length,_cdc_tx_len
 18471                           
 18472                           ; BSR set to: 0
 18473  01694A  0E01               	movlw	1
 18474  01694C  0100               	movlb	0	; () banked
 18475  01694E  6F91               	movwf	_cdc_mem_type& (0+255),b
 18476                           
 18477                           ; BSR set to: 0
 18478  016950  0E01               	movlw	1
 18479  016952  0100               	movlb	0	; () banked
 18480  016954  6F93               	movwf	_cdc_trf_state& (0+255),b
 18481  016956                     l10476:
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;usb_device_cdc.c: 642: }
 18485                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 18486  016956  88A0               	bsf	4000,4,c	;volatile
 18487                           
 18488                           ; BSR set to: 0
 18489  016958  0012               	return		;funcret
 18490  01695A                     __end_of_putUSBUSART:
 18491                           	opt stack 0
 18492                           tblptru	equ	0xFF8
 18493                           tblptrh	equ	0xFF7
 18494                           tblptrl	equ	0xFF6
 18495                           tablat	equ	0xFF5
 18496                           prodh	equ	0xFF4
 18497                           prodl	equ	0xFF3
 18498                           intcon	equ	0xFF2
 18499                           intcon2	equ	0xFF1
 18500                           postinc0	equ	0xFEE
 18501                           wreg	equ	0xFE8
 18502                           indf1	equ	0xFE7
 18503                           postinc1	equ	0xFE6
 18504                           postdec1	equ	0xFE5
 18505                           fsr1h	equ	0xFE2
 18506                           fsr1l	equ	0xFE1
 18507                           indf2	equ	0xFDF
 18508                           postinc2	equ	0xFDE
 18509                           postdec2	equ	0xFDD
 18510                           plusw2	equ	0xFDB
 18511                           fsr2h	equ	0xFDA
 18512                           fsr2l	equ	0xFD9
 18513                           status	equ	0xFD8
 18514                           
 18515 ;; *************** function _get_string_usb *****************
 18516 ;; Defined at:
 18517 ;;		line 27 in file "../My_header/usb_cdc/My_usb_cdc.c"
 18518 ;; Parameters:    Size  Location     Type
 18519 ;;  s               2   13[BANK0 ] PTR unsigned char 
 18520 ;;		 -> USB_loop@data(1), 
 18521 ;;  len             2   15[BANK0 ] int 
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;  rx_len          2   18[BANK0 ] int 
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  2   13[BANK0 ] int 
 18526 ;; Registers used:
 18527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18528 ;; Tracked objects:
 18529 ;;		On entry : 0/0
 18530 ;;		On exit  : 0/0
 18531 ;;		Unchanged: 0/0
 18532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18533 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18534 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18535 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18536 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18537 ;;Total ram usage:        7 bytes
 18538 ;; Hardware stack levels used:    1
 18539 ;; Hardware stack levels required when called:   13
 18540 ;; This function calls:
 18541 ;;		_CDCTxService
 18542 ;;		_getsUSBUSART
 18543 ;;		_is_usb_available
 18544 ;; This function is called by:
 18545 ;;		_USB_loop
 18546 ;; This function uses a non-reentrant model
 18547 ;;
 18548                           
 18549                           	psect	text75
 18550  0162DE                     __ptext75:
 18551                           	opt stack 0
 18552  0162DE                     _get_string_usb:
 18553                           	opt stack 16
 18554                           
 18555                           ;My_usb_cdc.c: 28: int rx_len;
 18556                           ;My_usb_cdc.c: 29: if (!is_usb_available()) {
 18557                           
 18558                           ; BSR set to: 0
 18559                           ;incstack = 0
 18560  0162DE  EC1E  F0B5         	call	_is_usb_available	;wreg free
 18561  0162E2  0900               	iorlw	0
 18562  0162E4  A4D8               	btfss	status,2,c
 18563  0162E6  D008               	goto	l11230
 18564                           
 18565                           ;My_usb_cdc.c: 31: return 0;
 18566  0162E8  0E00               	movlw	0
 18567  0162EA  0100               	movlb	0	; () banked
 18568  0162EC  6FC3               	movwf	(?_get_string_usb+1)& (0+255),b
 18569  0162EE  0E00               	movlw	0
 18570  0162F0  6FC2               	movwf	?_get_string_usb& (0+255),b
 18571                           
 18572                           ; BSR set to: 0
 18573  0162F2  0012               	return	
 18574  0162F4                     l11228:
 18575                           
 18576                           ; BSR set to: 0
 18577  0162F4  ECA2  F095         	call	_CDCTxService	;wreg free
 18578  0162F8                     l11230:
 18579  0162F8  0100               	movlb	0	; () banked
 18580  0162FA  5193               	movf	_cdc_trf_state& (0+255),w,b
 18581  0162FC  A4D8               	btfss	status,2,c
 18582  0162FE  D7FA               	goto	l11228
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;My_usb_cdc.c: 34: rx_len = getsUSBUSART(s, len);
 18586                           
 18587                           ; BSR set to: 0
 18588  016300  C0C2  F0BC         	movff	get_string_usb@s,getsUSBUSART@buffer
 18589  016304  C0C3  F0BD         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 18590  016308  C0C4  F0BE         	movff	get_string_usb@len,getsUSBUSART@len
 18591  01630C  ECD3  F0A0         	call	_getsUSBUSART	;wreg free
 18592  016310  0100               	movlb	0	; () banked
 18593  016312  6FC6               	movwf	??_get_string_usb& (0+255),b
 18594  016314  0100               	movlb	0	; () banked
 18595  016316  51C6               	movf	??_get_string_usb& (0+255),w,b
 18596  016318  0100               	movlb	0	; () banked
 18597  01631A  6FC7               	movwf	get_string_usb@rx_len& (0+255),b
 18598  01631C  6BC8               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 18599                           
 18600                           ;My_usb_cdc.c: 35: CDCTxService();
 18601  01631E  ECA2  F095         	call	_CDCTxService	;wreg free
 18602                           
 18603                           ;My_usb_cdc.c: 36: return rx_len;
 18604  016322  C0C7  F0C2         	movff	get_string_usb@rx_len,?_get_string_usb
 18605  016326  C0C8  F0C3         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 18606  01632A  0012               	return	
 18607  01632C                     __end_of_get_string_usb:
 18608                           	opt stack 0
 18609                           tblptru	equ	0xFF8
 18610                           tblptrh	equ	0xFF7
 18611                           tblptrl	equ	0xFF6
 18612                           tablat	equ	0xFF5
 18613                           prodh	equ	0xFF4
 18614                           prodl	equ	0xFF3
 18615                           intcon	equ	0xFF2
 18616                           intcon2	equ	0xFF1
 18617                           postinc0	equ	0xFEE
 18618                           wreg	equ	0xFE8
 18619                           indf1	equ	0xFE7
 18620                           postinc1	equ	0xFE6
 18621                           postdec1	equ	0xFE5
 18622                           fsr1h	equ	0xFE2
 18623                           fsr1l	equ	0xFE1
 18624                           indf2	equ	0xFDF
 18625                           postinc2	equ	0xFDE
 18626                           postdec2	equ	0xFDD
 18627                           plusw2	equ	0xFDB
 18628                           fsr2h	equ	0xFDA
 18629                           fsr2l	equ	0xFD9
 18630                           status	equ	0xFD8
 18631                           
 18632 ;; *************** function _is_usb_available *****************
 18633 ;; Defined at:
 18634 ;;		line 12 in file "../My_header/usb_cdc/My_usb_cdc.c"
 18635 ;; Parameters:    Size  Location     Type
 18636 ;;		None
 18637 ;; Auto vars:     Size  Location     Type
 18638 ;;		None
 18639 ;; Return value:  Size  Location     Type
 18640 ;;                  1    wreg      unsigned char 
 18641 ;; Registers used:
 18642 ;;		wreg, status,2, status,0
 18643 ;; Tracked objects:
 18644 ;;		On entry : 0/0
 18645 ;;		On exit  : 0/0
 18646 ;;		Unchanged: 0/0
 18647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18652 ;;Total ram usage:        1 bytes
 18653 ;; Hardware stack levels used:    1
 18654 ;; Hardware stack levels required when called:   11
 18655 ;; This function calls:
 18656 ;;		Nothing
 18657 ;; This function is called by:
 18658 ;;		_put_string_usb
 18659 ;;		_get_string_usb
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text76
 18664  016A3C                     __ptext76:
 18665                           	opt stack 0
 18666  016A3C                     _is_usb_available:
 18667                           	opt stack 17
 18668                           
 18669                           ;My_usb_cdc.c: 13: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 18670                           
 18671                           ;incstack = 0
 18672  016A3C  0E00               	movlw	0
 18673  016A3E  0100               	movlb	0	; () banked
 18674  016A40  6FB5               	movwf	_is_usb_available$2619& (0+255),b
 18675                           
 18676                           ; BSR set to: 0
 18677  016A42  0E1F               	movlw	31
 18678  016A44  6445               	cpfsgt	_USBDeviceState,c	;volatile
 18679  016A46  D005               	goto	l978
 18680                           
 18681                           ; BSR set to: 0
 18682  016A48  B265               	btfsc	3941,1,c	;volatile
 18683  016A4A  D003               	goto	l978
 18684                           
 18685                           ; BSR set to: 0
 18686  016A4C  0E01               	movlw	1
 18687  016A4E  0100               	movlb	0	; () banked
 18688  016A50  6FB5               	movwf	_is_usb_available$2619& (0+255),b
 18689  016A52                     l978:
 18690                           
 18691                           ; BSR set to: 0
 18692  016A52  0100               	movlb	0	; () banked
 18693  016A54  51B5               	movf	_is_usb_available$2619& (0+255),w,b
 18694  016A56  0012               	return	
 18695  016A58                     __end_of_is_usb_available:
 18696                           	opt stack 0
 18697                           tblptru	equ	0xFF8
 18698                           tblptrh	equ	0xFF7
 18699                           tblptrl	equ	0xFF6
 18700                           tablat	equ	0xFF5
 18701                           prodh	equ	0xFF4
 18702                           prodl	equ	0xFF3
 18703                           intcon	equ	0xFF2
 18704                           intcon2	equ	0xFF1
 18705                           postinc0	equ	0xFEE
 18706                           wreg	equ	0xFE8
 18707                           indf1	equ	0xFE7
 18708                           postinc1	equ	0xFE6
 18709                           postdec1	equ	0xFE5
 18710                           fsr1h	equ	0xFE2
 18711                           fsr1l	equ	0xFE1
 18712                           indf2	equ	0xFDF
 18713                           postinc2	equ	0xFDE
 18714                           postdec2	equ	0xFDD
 18715                           plusw2	equ	0xFDB
 18716                           fsr2h	equ	0xFDA
 18717                           fsr2l	equ	0xFD9
 18718                           status	equ	0xFD8
 18719                           
 18720 ;; *************** function _getsUSBUSART *****************
 18721 ;; Defined at:
 18722 ;;		line 542 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 18725 ;;		 -> USB_loop@data(1), 
 18726 ;;  len             1    9[BANK0 ] unsigned char 
 18727 ;; Auto vars:     Size  Location     Type
 18728 ;;		None
 18729 ;; Return value:  Size  Location     Type
 18730 ;;                  1    wreg      unsigned char 
 18731 ;; Registers used:
 18732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18733 ;; Tracked objects:
 18734 ;;		On entry : 0/0
 18735 ;;		On exit  : 0/0
 18736 ;;		Unchanged: 0/0
 18737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18738 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18741 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18742 ;;Total ram usage:        6 bytes
 18743 ;; Hardware stack levels used:    1
 18744 ;; Hardware stack levels required when called:   12
 18745 ;; This function calls:
 18746 ;;		_USBTransferOnePacket
 18747 ;; This function is called by:
 18748 ;;		_get_string_usb
 18749 ;; This function uses a non-reentrant model
 18750 ;;
 18751                           
 18752                           	psect	text77
 18753  0141A6                     __ptext77:
 18754                           	opt stack 0
 18755  0141A6                     _getsUSBUSART:
 18756                           	opt stack 16
 18757                           
 18758                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;incstack = 0
 18762  0141A6  0E00               	movlw	0
 18763  0141A8  0100               	movlb	0	; () banked
 18764  0141AA  6F92               	movwf	_cdc_rx_len& (0+255),b
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 18768  0141AC  0100               	movlb	0	; () banked
 18769  0141AE  5189               	movf	_CDCDataOutHandle& (0+255),w,b
 18770  0141B0  0100               	movlb	0	; () banked
 18771  0141B2  118A               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18772  0141B4  B4D8               	btfsc	status,2,c
 18773  0141B6  D013               	goto	l10484
 18774                           
 18775                           ; BSR set to: 0
 18776  0141B8  C089  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18777  0141BC  C08A  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18778  0141C0  0100               	movlb	0	; () banked
 18779  0141C2  AEDF               	btfss	indf2,7,c
 18780  0141C4  D004               	goto	u11600
 18781  0141C6  0100               	movlb	0	; () banked
 18782  0141C8  6BBF               	clrf	??_getsUSBUSART& (0+255),b
 18783  0141CA  2BBF               	incf	??_getsUSBUSART& (0+255),f,b
 18784  0141CC  D002               	goto	u11608
 18785  0141CE                     u11600:
 18786  0141CE  0100               	movlb	0	; () banked
 18787  0141D0  6BBF               	clrf	??_getsUSBUSART& (0+255),b
 18788  0141D2                     u11608:
 18789  0141D2  0100               	movlb	0	; () banked
 18790  0141D4  51BF               	movf	??_getsUSBUSART& (0+255),w,b
 18791  0141D6  0100               	movlb	0	; () banked
 18792  0141D8  6FC0               	movwf	_getsUSBUSART$4371& (0+255),b
 18793  0141DA  6BC1               	clrf	(_getsUSBUSART$4371+1)& (0+255),b
 18794  0141DC  D005               	goto	l10486
 18795  0141DE                     l10484:
 18796                           
 18797                           ; BSR set to: 0
 18798  0141DE  0E00               	movlw	0
 18799  0141E0  0100               	movlb	0	; () banked
 18800  0141E2  6FC1               	movwf	(_getsUSBUSART$4371+1)& (0+255),b
 18801  0141E4  0E00               	movlw	0
 18802  0141E6  6FC0               	movwf	_getsUSBUSART$4371& (0+255),b
 18803  0141E8                     l10486:
 18804                           
 18805                           ; BSR set to: 0
 18806  0141E8  0100               	movlb	0	; () banked
 18807  0141EA  51C0               	movf	_getsUSBUSART$4371& (0+255),w,b
 18808  0141EC  0100               	movlb	0	; () banked
 18809  0141EE  11C1               	iorwf	(_getsUSBUSART$4371+1)& (0+255),w,b
 18810  0141F0  A4D8               	btfss	status,2,c
 18811  0141F2  D04B               	goto	l10502
 18812                           
 18813                           ; BSR set to: 0
 18814                           ;usb_device_cdc.c: 547: {
 18815                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18816  0141F4  0100               	movlb	0	; () banked
 18817  0141F6  EE20 F001          	lfsr	2,1
 18818  0141FA  5189               	movf	_CDCDataOutHandle& (0+255),w,b
 18819  0141FC  26D9               	addwf	fsr2l,f,c
 18820  0141FE  518A               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18821  014200  22DA               	addwfc	fsr2h,f,c
 18822  014202  0100               	movlb	0	; () banked
 18823  014204  51BE               	movf	getsUSBUSART@len& (0+255),w,b
 18824  014206  5CDE               	subwf	postinc2,w,c
 18825  014208  B0D8               	btfsc	status,0,c
 18826  01420A  D00A               	goto	l10492
 18827                           
 18828                           ; BSR set to: 0
 18829                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18830  01420C  0100               	movlb	0	; () banked
 18831  01420E  EE20 F001          	lfsr	2,1
 18832  014212  5189               	movf	_CDCDataOutHandle& (0+255),w,b
 18833  014214  26D9               	addwf	fsr2l,f,c
 18834  014216  518A               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18835  014218  22DA               	addwfc	fsr2h,f,c
 18836  01421A  50DF               	movf	indf2,w,c
 18837  01421C  0100               	movlb	0	; () banked
 18838  01421E  6FBE               	movwf	getsUSBUSART@len& (0+255),b
 18839  014220                     l10492:
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18843  014220  0E00               	movlw	0
 18844  014222  0100               	movlb	0	; () banked
 18845  014224  6F92               	movwf	_cdc_rx_len& (0+255),b
 18846  014226  D018               	goto	l10498
 18847  014228                     l10494:
 18848                           
 18849                           ; BSR set to: 0
 18850                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18851  014228  0100               	movlb	0	; () banked
 18852  01422A  5192               	movf	_cdc_rx_len& (0+255),w,b
 18853  01422C  0D01               	mullw	1
 18854  01422E  0E45               	movlw	low _cdc_data_rx
 18855  014230  24F3               	addwf	prodl,w,c
 18856  014232  6ED9               	movwf	fsr2l,c
 18857  014234  0E03               	movlw	high _cdc_data_rx
 18858  014236  20F4               	addwfc	prodh,w,c
 18859  014238  6EDA               	movwf	fsr2h,c
 18860  01423A  0100               	movlb	0	; () banked
 18861  01423C  5192               	movf	_cdc_rx_len& (0+255),w,b
 18862  01423E  0D01               	mullw	1
 18863  014240  50F3               	movf	prodl,w,c
 18864  014242  0100               	movlb	0	; () banked
 18865  014244  25BC               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18866  014246  6EE1               	movwf	fsr1l,c
 18867  014248  50F4               	movf	prodh,w,c
 18868  01424A  0100               	movlb	0	; () banked
 18869  01424C  21BD               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18870  01424E  6EE2               	movwf	fsr1h,c
 18871  014250  CFDF FFE7          	movff	indf2,indf1
 18872                           
 18873                           ; BSR set to: 0
 18874  014254  0100               	movlb	0	; () banked
 18875  014256  2B92               	incf	_cdc_rx_len& (0+255),f,b
 18876  014258                     l10498:
 18877                           
 18878                           ; BSR set to: 0
 18879  014258  0100               	movlb	0	; () banked
 18880  01425A  51BE               	movf	getsUSBUSART@len& (0+255),w,b
 18881  01425C  0100               	movlb	0	; () banked
 18882  01425E  5D92               	subwf	_cdc_rx_len& (0+255),w,b
 18883  014260  A0D8               	btfss	status,0,c
 18884  014262  D7E2               	goto	l10494
 18885                           
 18886                           ; BSR set to: 0
 18887                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18888                           
 18889                           ; BSR set to: 0
 18890  014264  0E00               	movlw	0
 18891  014266  0100               	movlb	0	; () banked
 18892  014268  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
 18893  01426A  0E45               	movlw	low _cdc_data_rx
 18894  01426C  0100               	movlb	0	; () banked
 18895  01426E  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
 18896  014270  0E03               	movlw	high _cdc_data_rx
 18897  014272  0100               	movlb	0	; () banked
 18898  014274  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18899  014276  0E40               	movlw	64
 18900  014278  0100               	movlb	0	; () banked
 18901  01427A  6FB8               	movwf	USBTransferOnePacket@len& (0+255),b
 18902  01427C  0E02               	movlw	2
 18903  01427E  EC9B  F0A2         	call	_USBTransferOnePacket
 18904  014282  C0B5  F089         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18905  014286  C0B6  F08A         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18906  01428A                     l10502:
 18907                           
 18908                           ;usb_device_cdc.c: 567: }
 18909                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 18910  01428A  0100               	movlb	0	; () banked
 18911  01428C  5192               	movf	_cdc_rx_len& (0+255),w,b
 18912  01428E  0012               	return	
 18913  014290                     __end_of_getsUSBUSART:
 18914                           	opt stack 0
 18915                           tblptru	equ	0xFF8
 18916                           tblptrh	equ	0xFF7
 18917                           tblptrl	equ	0xFF6
 18918                           tablat	equ	0xFF5
 18919                           prodh	equ	0xFF4
 18920                           prodl	equ	0xFF3
 18921                           intcon	equ	0xFF2
 18922                           intcon2	equ	0xFF1
 18923                           postinc0	equ	0xFEE
 18924                           wreg	equ	0xFE8
 18925                           indf1	equ	0xFE7
 18926                           postinc1	equ	0xFE6
 18927                           postdec1	equ	0xFE5
 18928                           fsr1h	equ	0xFE2
 18929                           fsr1l	equ	0xFE1
 18930                           indf2	equ	0xFDF
 18931                           postinc2	equ	0xFDE
 18932                           postdec2	equ	0xFDD
 18933                           plusw2	equ	0xFDB
 18934                           fsr2h	equ	0xFDA
 18935                           fsr2l	equ	0xFD9
 18936                           status	equ	0xFD8
 18937                           
 18938 ;; *************** function _CDCTxService *****************
 18939 ;; Defined at:
 18940 ;;		line 893 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 18941 ;; Parameters:    Size  Location     Type
 18942 ;;		None
 18943 ;; Auto vars:     Size  Location     Type
 18944 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 18945 ;;  i               1   10[BANK0 ] unsigned char 
 18946 ;; Return value:  Size  Location     Type
 18947 ;;		None               void
 18948 ;; Registers used:
 18949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18950 ;; Tracked objects:
 18951 ;;		On entry : 0/0
 18952 ;;		On exit  : 0/0
 18953 ;;		Unchanged: 0/0
 18954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18956 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18958 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18959 ;;Total ram usage:        5 bytes
 18960 ;; Hardware stack levels used:    1
 18961 ;; Hardware stack levels required when called:   12
 18962 ;; This function calls:
 18963 ;;		_USBTransferOnePacket
 18964 ;; This function is called by:
 18965 ;;		_put_string_usb
 18966 ;;		_get_string_usb
 18967 ;; This function uses a non-reentrant model
 18968 ;;
 18969                           
 18970                           	psect	text78
 18971  012B44                     __ptext78:
 18972                           	opt stack 0
 18973  012B44                     _CDCTxService:
 18974                           	opt stack 16
 18975                           
 18976                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 18977                           ;usb_device_cdc.c: 896: uint8_t i;
 18978                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 18979                           
 18980                           ; BSR set to: 0
 18981                           ;incstack = 0
 18982  012B44  98A0               	bcf	4000,4,c	;volatile
 18983                           
 18984                           ;usb_device_cdc.c: 900: {};
 18985                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 18986  012B46  0100               	movlb	0	; () banked
 18987  012B48  5187               	movf	_CDCDataInHandle& (0+255),w,b
 18988  012B4A  0100               	movlb	0	; () banked
 18989  012B4C  1188               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 18990  012B4E  B4D8               	btfsc	status,2,c
 18991  012B50  D013               	goto	l10400
 18992                           
 18993                           ; BSR set to: 0
 18994  012B52  C087  FFD9         	movff	_CDCDataInHandle,fsr2l
 18995  012B56  C088  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 18996  012B5A  0100               	movlb	0	; () banked
 18997  012B5C  AEDF               	btfss	indf2,7,c
 18998  012B5E  D004               	goto	u11460
 18999  012B60  0100               	movlb	0	; () banked
 19000  012B62  6BBC               	clrf	??_CDCTxService& (0+255),b
 19001  012B64  2BBC               	incf	??_CDCTxService& (0+255),f,b
 19002  012B66  D002               	goto	u11468
 19003  012B68                     u11460:
 19004  012B68  0100               	movlb	0	; () banked
 19005  012B6A  6BBC               	clrf	??_CDCTxService& (0+255),b
 19006  012B6C                     u11468:
 19007  012B6C  0100               	movlb	0	; () banked
 19008  012B6E  51BC               	movf	??_CDCTxService& (0+255),w,b
 19009  012B70  0100               	movlb	0	; () banked
 19010  012B72  6FBD               	movwf	_CDCTxService$4419& (0+255),b
 19011  012B74  6BBE               	clrf	(_CDCTxService$4419+1)& (0+255),b
 19012  012B76  D005               	goto	l10402
 19013  012B78                     l10400:
 19014                           
 19015                           ; BSR set to: 0
 19016  012B78  0E00               	movlw	0
 19017  012B7A  0100               	movlb	0	; () banked
 19018  012B7C  6FBE               	movwf	(_CDCTxService$4419+1)& (0+255),b
 19019  012B7E  0E00               	movlw	0
 19020  012B80  6FBD               	movwf	_CDCTxService$4419& (0+255),b
 19021  012B82                     l10402:
 19022                           
 19023                           ; BSR set to: 0
 19024  012B82  0100               	movlb	0	; () banked
 19025  012B84  51BD               	movf	_CDCTxService$4419& (0+255),w,b
 19026  012B86  0100               	movlb	0	; () banked
 19027  012B88  11BE               	iorwf	(_CDCTxService$4419+1)& (0+255),w,b
 19028  012B8A  B4D8               	btfsc	status,2,c
 19029  012B8C  D002               	goto	l10406
 19030                           
 19031                           ; BSR set to: 0
 19032                           ;usb_device_cdc.c: 903: {
 19033                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 19034  012B8E  88A0               	bsf	4000,4,c	;volatile
 19035                           
 19036                           ;usb_device_cdc.c: 905: return;
 19037  012B90  0012               	return	
 19038  012B92                     l10406:
 19039                           
 19040                           ; BSR set to: 0
 19041                           ;usb_device_cdc.c: 906: }
 19042                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 19043  012B92  0E03               	movlw	3
 19044  012B94  0100               	movlb	0	; () banked
 19045  012B96  1993               	xorwf	_cdc_trf_state& (0+255),w,b
 19046  012B98  A4D8               	btfss	status,2,c
 19047  012B9A  D003               	goto	l1497
 19048                           
 19049                           ; BSR set to: 0
 19050                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 19051  012B9C  0E00               	movlw	0
 19052  012B9E  0100               	movlb	0	; () banked
 19053  012BA0  6F93               	movwf	_cdc_trf_state& (0+255),b
 19054  012BA2                     l1497:
 19055                           
 19056                           ; BSR set to: 0
 19057                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 19058  012BA2  0100               	movlb	0	; () banked
 19059  012BA4  5193               	movf	_cdc_trf_state& (0+255),w,b
 19060  012BA6  A4D8               	btfss	status,2,c
 19061  012BA8  D002               	goto	l10412
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;usb_device_cdc.c: 920: {
 19065                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 19066  012BAA  88A0               	bsf	4000,4,c	;volatile
 19067                           
 19068                           ;usb_device_cdc.c: 922: return;
 19069  012BAC  0012               	return	
 19070  012BAE                     l10412:
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;usb_device_cdc.c: 923: }
 19074                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 19075  012BAE  0E02               	movlw	2
 19076  012BB0  0100               	movlb	0	; () banked
 19077  012BB2  1993               	xorwf	_cdc_trf_state& (0+255),w,b
 19078  012BB4  A4D8               	btfss	status,2,c
 19079  012BB6  D017               	goto	l10418
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;usb_device_cdc.c: 929: {
 19083                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 19084  012BB8  0E01               	movlw	1
 19085  012BBA  0100               	movlb	0	; () banked
 19086  012BBC  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
 19087  012BBE  0E00               	movlw	0
 19088  012BC0  0100               	movlb	0	; () banked
 19089  012BC2  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
 19090  012BC4  0E00               	movlw	0
 19091  012BC6  0100               	movlb	0	; () banked
 19092  012BC8  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 19093  012BCA  0E00               	movlw	0
 19094  012BCC  0100               	movlb	0	; () banked
 19095  012BCE  6FB8               	movwf	USBTransferOnePacket@len& (0+255),b
 19096  012BD0  0E02               	movlw	2
 19097  012BD2  EC9B  F0A2         	call	_USBTransferOnePacket
 19098  012BD6  C0B5  F087         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 19099  012BDA  C0B6  F088         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 19100                           
 19101                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 19102  012BDE  0E03               	movlw	3
 19103  012BE0  0100               	movlb	0	; () banked
 19104  012BE2  6F93               	movwf	_cdc_trf_state& (0+255),b
 19105                           
 19106                           ;usb_device_cdc.c: 933: }
 19107  012BE4  D073               	goto	l10462
 19108  012BE6                     l10418:
 19109                           
 19110                           ; BSR set to: 0
 19111                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 19112  012BE6  0100               	movlb	0	; () banked
 19113  012BE8  0593               	decf	_cdc_trf_state& (0+255),w,b
 19114  012BEA  A4D8               	btfss	status,2,c
 19115  012BEC  D06F               	goto	l10462
 19116                           
 19117                           ; BSR set to: 0
 19118                           ;usb_device_cdc.c: 935: {
 19119                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 19120  012BEE  0E40               	movlw	64
 19121  012BF0  0100               	movlb	0	; () banked
 19122  012BF2  6594               	cpfsgt	_cdc_tx_len& (0+255),b
 19123  012BF4  D004               	goto	l1502
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 19127  012BF6  0E40               	movlw	64
 19128  012BF8  0100               	movlb	0	; () banked
 19129  012BFA  6FC0               	movwf	CDCTxService@byte_to_send& (0+255),b
 19130  012BFC  D002               	goto	l10424
 19131  012BFE                     l1502:
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;usb_device_cdc.c: 941: else
 19135                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 19136  012BFE  C094  F0C0         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 19137  012C02                     l10424:
 19138                           
 19139                           ; BSR set to: 0
 19140                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 19141  012C02  0100               	movlb	0	; () banked
 19142  012C04  51C0               	movf	CDCTxService@byte_to_send& (0+255),w,b
 19143  012C06  0800               	sublw	0
 19144  012C08  0100               	movlb	0	; () banked
 19145  012C0A  2594               	addwf	_cdc_tx_len& (0+255),w,b
 19146  012C0C  0100               	movlb	0	; () banked
 19147  012C0E  6F94               	movwf	_cdc_tx_len& (0+255),b
 19148                           
 19149                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 19150  012C10  0E64               	movlw	low _cdc_data_tx
 19151  012C12  0100               	movlb	0	; () banked
 19152  012C14  6F81               	movwf	_pCDCDst& (0+255),b
 19153  012C16  0E04               	movlw	high _cdc_data_tx
 19154  012C18  0100               	movlb	0	; () banked
 19155  012C1A  6F82               	movwf	(_pCDCDst+1)& (0+255),b
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;usb_device_cdc.c: 951: i = byte_to_send;
 19159  012C1C  C0C0  F0BF         	movff	CDCTxService@byte_to_send,CDCTxService@i
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 19163  012C20  0100               	movlb	0	; () banked
 19164  012C22  5191               	movf	_cdc_mem_type& (0+255),w,b
 19165  012C24  0100               	movlb	0	; () banked
 19166  012C26  B4D8               	btfsc	status,2,c
 19167  012C28  D013               	goto	l10440
 19168  012C2A  D02A               	goto	l10450
 19169  012C2C                     l10432:
 19170                           
 19171                           ; BSR set to: 0
 19172                           ;usb_device_cdc.c: 955: {
 19173                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 19174  012C2C  C084  FFD9         	movff	_pCDCSrc,fsr2l
 19175  012C30  C085  FFDA         	movff	_pCDCSrc+1,fsr2h
 19176  012C34  C081  FFE1         	movff	_pCDCDst,fsr1l
 19177  012C38  C082  FFE2         	movff	_pCDCDst+1,fsr1h
 19178  012C3C  CFDF FFE7          	movff	indf2,indf1
 19179                           
 19180                           ; BSR set to: 0
 19181                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 19182  012C40  0100               	movlb	0	; () banked
 19183  012C42  4B81               	infsnz	_pCDCDst& (0+255),f,b
 19184  012C44  2B82               	incf	(_pCDCDst+1)& (0+255),f,b
 19185                           
 19186                           ; BSR set to: 0
 19187                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 19188  012C46  0100               	movlb	0	; () banked
 19189  012C48  4B84               	infsnz	_pCDCSrc& (0+255),f,b
 19190  012C4A  2B85               	incf	(_pCDCSrc+1)& (0+255),f,b
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;usb_device_cdc.c: 959: i--;
 19194  012C4C  0100               	movlb	0	; () banked
 19195  012C4E  07BF               	decf	CDCTxService@i& (0+255),f,b
 19196  012C50                     l10440:
 19197                           
 19198                           ; BSR set to: 0
 19199  012C50  0100               	movlb	0	; () banked
 19200  012C52  51BF               	movf	CDCTxService@i& (0+255),w,b
 19201  012C54  0100               	movlb	0	; () banked
 19202  012C56  B4D8               	btfsc	status,2,c
 19203  012C58  D018               	goto	l10452
 19204  012C5A  D7E8               	goto	l10432
 19205  012C5C                     l10442:
 19206                           
 19207                           ; BSR set to: 0
 19208                           ;usb_device_cdc.c: 965: {
 19209                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 19210  012C5C  C084  FFD9         	movff	_pCDCSrc,fsr2l
 19211  012C60  C085  FFDA         	movff	_pCDCSrc+1,fsr2h
 19212  012C64  C081  FFE1         	movff	_pCDCDst,fsr1l
 19213  012C68  C082  FFE2         	movff	_pCDCDst+1,fsr1h
 19214  012C6C  CFDF FFE7          	movff	indf2,indf1
 19215                           
 19216                           ; BSR set to: 0
 19217                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 19218  012C70  0100               	movlb	0	; () banked
 19219  012C72  4B81               	infsnz	_pCDCDst& (0+255),f,b
 19220  012C74  2B82               	incf	(_pCDCDst+1)& (0+255),f,b
 19221                           
 19222                           ; BSR set to: 0
 19223                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 19224  012C76  0100               	movlb	0	; () banked
 19225  012C78  4B84               	infsnz	_pCDCSrc& (0+255),f,b
 19226  012C7A  2B85               	incf	(_pCDCSrc+1)& (0+255),f,b
 19227                           
 19228                           ; BSR set to: 0
 19229                           ;usb_device_cdc.c: 969: i--;
 19230  012C7C  0100               	movlb	0	; () banked
 19231  012C7E  07BF               	decf	CDCTxService@i& (0+255),f,b
 19232  012C80                     l10450:
 19233                           
 19234                           ; BSR set to: 0
 19235  012C80  0100               	movlb	0	; () banked
 19236  012C82  51BF               	movf	CDCTxService@i& (0+255),w,b
 19237  012C84  0100               	movlb	0	; () banked
 19238  012C86  A4D8               	btfss	status,2,c
 19239  012C88  D7E9               	goto	l10442
 19240  012C8A                     l10452:
 19241                           
 19242                           ; BSR set to: 0
 19243                           ;usb_device_cdc.c: 970: }
 19244                           ;usb_device_cdc.c: 971: }
 19245                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 19246  012C8A  0100               	movlb	0	; () banked
 19247  012C8C  5194               	movf	_cdc_tx_len& (0+255),w,b
 19248  012C8E  0100               	movlb	0	; () banked
 19249  012C90  A4D8               	btfss	status,2,c
 19250  012C92  D00A               	goto	l10460
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;usb_device_cdc.c: 978: {
 19254                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 19255  012C94  0E40               	movlw	64
 19256  012C96  0100               	movlb	0	; () banked
 19257  012C98  19C0               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 19258  012C9A  A4D8               	btfss	status,2,c
 19259  012C9C  D002               	goto	l10458
 19260                           
 19261                           ; BSR set to: 0
 19262                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 19263  012C9E  0E02               	movlw	2
 19264  012CA0  D001               	goto	L5
 19265  012CA2                     l10458:
 19266                           
 19267                           ; BSR set to: 0
 19268                           ;usb_device_cdc.c: 981: else
 19269                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 19270  012CA2  0E03               	movlw	3
 19271  012CA4                     L5:
 19272  012CA4  0100               	movlb	0	; () banked
 19273  012CA6  6F93               	movwf	_cdc_trf_state& (0+255),b
 19274  012CA8                     l10460:
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;usb_device_cdc.c: 983: }
 19278                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 19279  012CA8  0E01               	movlw	1
 19280  012CAA  0100               	movlb	0	; () banked
 19281  012CAC  6FB5               	movwf	USBTransferOnePacket@dir& (0+255),b
 19282  012CAE  0E64               	movlw	low _cdc_data_tx
 19283  012CB0  0100               	movlb	0	; () banked
 19284  012CB2  6FB6               	movwf	USBTransferOnePacket@data& (0+255),b
 19285  012CB4  0E04               	movlw	high _cdc_data_tx
 19286  012CB6  0100               	movlb	0	; () banked
 19287  012CB8  6FB7               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 19288  012CBA  C0C0  F0B8         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 19289  012CBE  0E02               	movlw	2
 19290  012CC0  EC9B  F0A2         	call	_USBTransferOnePacket
 19291  012CC4  C0B5  F087         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 19292  012CC8  C0B6  F088         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 19293  012CCC                     l10462:
 19294                           
 19295                           ;usb_device_cdc.c: 986: }
 19296                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 19297  012CCC  88A0               	bsf	4000,4,c	;volatile
 19298  012CCE  0012               	return		;funcret
 19299  012CD0                     __end_of_CDCTxService:
 19300                           	opt stack 0
 19301                           tblptru	equ	0xFF8
 19302                           tblptrh	equ	0xFF7
 19303                           tblptrl	equ	0xFF6
 19304                           tablat	equ	0xFF5
 19305                           prodh	equ	0xFF4
 19306                           prodl	equ	0xFF3
 19307                           intcon	equ	0xFF2
 19308                           intcon2	equ	0xFF1
 19309                           postinc0	equ	0xFEE
 19310                           wreg	equ	0xFE8
 19311                           indf1	equ	0xFE7
 19312                           postinc1	equ	0xFE6
 19313                           postdec1	equ	0xFE5
 19314                           fsr1h	equ	0xFE2
 19315                           fsr1l	equ	0xFE1
 19316                           indf2	equ	0xFDF
 19317                           postinc2	equ	0xFDE
 19318                           postdec2	equ	0xFDD
 19319                           plusw2	equ	0xFDB
 19320                           fsr2h	equ	0xFDA
 19321                           fsr2l	equ	0xFD9
 19322                           status	equ	0xFD8
 19323                           
 19324 ;; *************** function _USBTransferOnePacket *****************
 19325 ;; Defined at:
 19326 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 19327 ;; Parameters:    Size  Location     Type
 19328 ;;  ep              1    wreg     unsigned char 
 19329 ;;  dir             1    0[BANK0 ] unsigned char 
 19330 ;;  data            2    1[BANK0 ] PTR unsigned char 
 19331 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 19332 ;;  len             1    3[BANK0 ] unsigned char 
 19333 ;; Auto vars:     Size  Location     Type
 19334 ;;  ep              1    4[BANK0 ] unsigned char 
 19335 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 19336 ;;		 -> NULL(0), BDT(48), 
 19337 ;; Return value:  Size  Location     Type
 19338 ;;                  2    0[BANK0 ] PTR void 
 19339 ;; Registers used:
 19340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19341 ;; Tracked objects:
 19342 ;;		On entry : 0/0
 19343 ;;		On exit  : 0/0
 19344 ;;		Unchanged: 0/0
 19345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19347 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19349 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19350 ;;Total ram usage:        7 bytes
 19351 ;; Hardware stack levels used:    1
 19352 ;; Hardware stack levels required when called:   11
 19353 ;; This function calls:
 19354 ;;		Nothing
 19355 ;; This function is called by:
 19356 ;;		_getsUSBUSART
 19357 ;;		_CDCTxService
 19358 ;;		_USBCDCEventHandler
 19359 ;; This function uses a non-reentrant model
 19360 ;;
 19361                           
 19362                           	psect	text79
 19363  014536                     __ptext79:
 19364                           	opt stack 0
 19365  014536                     _USBTransferOnePacket:
 19366                           	opt stack 16
 19367                           
 19368                           ;incstack = 0
 19369                           ;USBTransferOnePacket@ep stored from wreg
 19370  014536  0100               	movlb	0	; () banked
 19371  014538  6FB9               	movwf	USBTransferOnePacket@ep& (0+255),b
 19372                           
 19373                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 19374                           ;usb_device.c: 1000: if(dir != 0)
 19375  01453A  0100               	movlb	0	; () banked
 19376  01453C  51B5               	movf	USBTransferOnePacket@dir& (0+255),w,b
 19377  01453E  0100               	movlb	0	; () banked
 19378  014540  B4D8               	btfsc	status,2,c
 19379  014542  D008               	goto	l9914
 19380                           
 19381                           ; BSR set to: 0
 19382                           ;usb_device.c: 1001: {
 19383                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 19384  014544  0100               	movlb	0	; () banked
 19385  014546  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19386  014548  0D02               	mullw	2
 19387  01454A  0E6F               	movlw	low _pBDTEntryIn
 19388  01454C  24F3               	addwf	prodl,w,c
 19389  01454E  6ED9               	movwf	fsr2l,c
 19390  014550  0E00               	movlw	high _pBDTEntryIn
 19391  014552  D007               	goto	L6
 19392  014554                     l9914:
 19393                           
 19394                           ; BSR set to: 0
 19395                           ;usb_device.c: 1005: else
 19396                           ;usb_device.c: 1006: {
 19397                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 19398  014554  0100               	movlb	0	; () banked
 19399  014556  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19400  014558  0D02               	mullw	2
 19401  01455A  0E75               	movlw	low _pBDTEntryOut
 19402  01455C  24F3               	addwf	prodl,w,c
 19403  01455E  6ED9               	movwf	fsr2l,c
 19404  014560  0E00               	movlw	high _pBDTEntryOut
 19405  014562                     L6:
 19406  014562  20F4               	addwfc	prodh,w,c
 19407  014564  6EDA               	movwf	fsr2h,c
 19408  014566  CFDE F0BA          	movff	postinc2,USBTransferOnePacket@handle
 19409  01456A  CFDD F0BB          	movff	postdec2,USBTransferOnePacket@handle+1
 19410                           
 19411                           ; BSR set to: 0
 19412                           ;usb_device.c: 1009: }
 19413                           ;usb_device.c: 1013: if(handle == 0)
 19414                           
 19415                           ; BSR set to: 0
 19416  01456E  0100               	movlb	0	; () banked
 19417  014570  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19418  014572  0100               	movlb	0	; () banked
 19419  014574  11BB               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19420  014576  A4D8               	btfss	status,2,c
 19421  014578  D007               	goto	l9922
 19422                           
 19423                           ; BSR set to: 0
 19424                           ;usb_device.c: 1014: {
 19425                           ;usb_device.c: 1015: return 0;
 19426  01457A  0E00               	movlw	0
 19427  01457C  0100               	movlb	0	; () banked
 19428  01457E  6FB5               	movwf	?_USBTransferOnePacket& (0+255),b
 19429  014580  0E00               	movlw	0
 19430  014582  0100               	movlb	0	; () banked
 19431  014584  6FB6               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 19432                           
 19433                           ; BSR set to: 0
 19434  014586  0012               	return	
 19435  014588                     l9922:
 19436                           
 19437                           ; BSR set to: 0
 19438                           ;usb_device.c: 1016: }
 19439                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 19440  014588  0100               	movlb	0	; () banked
 19441  01458A  EE20 F002          	lfsr	2,2
 19442  01458E  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19443  014590  26D9               	addwf	fsr2l,f,c
 19444  014592  51BB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19445  014594  22DA               	addwfc	fsr2h,f,c
 19446  014596  C0B6  FFDE         	movff	USBTransferOnePacket@data,postinc2
 19447  01459A  C0B7  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 19448                           
 19449                           ;usb_device.c: 1030: handle->CNT = len;
 19450  01459E  0100               	movlb	0	; () banked
 19451  0145A0  EE20 F001          	lfsr	2,1
 19452  0145A4  51BA               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19453  0145A6  26D9               	addwf	fsr2l,f,c
 19454  0145A8  51BB               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19455  0145AA  22DA               	addwfc	fsr2h,f,c
 19456  0145AC  C0B8  FFDF         	movff	USBTransferOnePacket@len,indf2
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 19460  0145B0  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19461  0145B4  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19462  0145B8  0E40               	movlw	64
 19463  0145BA  16DF               	andwf	indf2,f,c
 19464                           
 19465                           ; BSR set to: 0
 19466                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 19467  0145BC  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19468  0145C0  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19469  0145C4  0E00               	movlw	0
 19470  0145C6  86DB               	bsf	plusw2,3,c
 19471                           
 19472                           ; BSR set to: 0
 19473                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 19474  0145C8  C0BA  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19475  0145CC  C0BB  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19476  0145D0  0E00               	movlw	0
 19477  0145D2  8EDB               	bsf	plusw2,7,c
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;usb_device.c: 1036: if(dir != 0)
 19481  0145D4  0100               	movlb	0	; () banked
 19482  0145D6  51B5               	movf	USBTransferOnePacket@dir& (0+255),w,b
 19483  0145D8  0100               	movlb	0	; () banked
 19484  0145DA  B4D8               	btfsc	status,2,c
 19485  0145DC  D008               	goto	l9934
 19486                           
 19487                           ; BSR set to: 0
 19488                           ;usb_device.c: 1037: {
 19489                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 19490  0145DE  0100               	movlb	0	; () banked
 19491  0145E0  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19492  0145E2  0D02               	mullw	2
 19493  0145E4  0E6F               	movlw	low _pBDTEntryIn
 19494  0145E6  24F3               	addwf	prodl,w,c
 19495  0145E8  6ED9               	movwf	fsr2l,c
 19496  0145EA  0E00               	movlw	high _pBDTEntryIn
 19497  0145EC  D007               	goto	L7
 19498  0145EE                     l9934:
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;usb_device.c: 1041: else
 19502                           ;usb_device.c: 1042: {
 19503                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 19504  0145EE  0100               	movlb	0	; () banked
 19505  0145F0  51B9               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19506  0145F2  0D02               	mullw	2
 19507  0145F4  0E75               	movlw	low _pBDTEntryOut
 19508  0145F6  24F3               	addwf	prodl,w,c
 19509  0145F8  6ED9               	movwf	fsr2l,c
 19510  0145FA  0E00               	movlw	high _pBDTEntryOut
 19511  0145FC                     L7:
 19512  0145FC  20F4               	addwfc	prodh,w,c
 19513  0145FE  6EDA               	movwf	fsr2h,c
 19514  014600  0E04               	movlw	4
 19515  014602  1ADF               	xorwf	indf2,f,c
 19516                           
 19517                           ; BSR set to: 0
 19518                           ;usb_device.c: 1045: }
 19519                           ;usb_device.c: 1046: return (void*)handle;
 19520                           
 19521                           ; BSR set to: 0
 19522  014604  C0BA  F0B5         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 19523  014608  C0BB  F0B6         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 19524  01460C  0012               	return	
 19525  01460E                     __end_of_USBTransferOnePacket:
 19526                           	opt stack 0
 19527                           tblptru	equ	0xFF8
 19528                           tblptrh	equ	0xFF7
 19529                           tblptrl	equ	0xFF6
 19530                           tablat	equ	0xFF5
 19531                           prodh	equ	0xFF4
 19532                           prodl	equ	0xFF3
 19533                           intcon	equ	0xFF2
 19534                           intcon2	equ	0xFF1
 19535                           postinc0	equ	0xFEE
 19536                           wreg	equ	0xFE8
 19537                           indf1	equ	0xFE7
 19538                           postinc1	equ	0xFE6
 19539                           postdec1	equ	0xFE5
 19540                           fsr1h	equ	0xFE2
 19541                           fsr1l	equ	0xFE1
 19542                           indf2	equ	0xFDF
 19543                           postinc2	equ	0xFDE
 19544                           postdec2	equ	0xFDD
 19545                           plusw2	equ	0xFDB
 19546                           fsr2h	equ	0xFDA
 19547                           fsr2l	equ	0xFD9
 19548                           status	equ	0xFD8
 19549                           
 19550 ;; *************** function _RTCC_loop *****************
 19551 ;; Defined at:
 19552 ;;		line 387 in file "../My_header\My_RTCC.h"
 19553 ;; Parameters:    Size  Location     Type
 19554 ;;		None
 19555 ;; Auto vars:     Size  Location     Type
 19556 ;;		None
 19557 ;; Return value:  Size  Location     Type
 19558 ;;		None               void
 19559 ;; Registers used:
 19560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19561 ;; Tracked objects:
 19562 ;;		On entry : 0/0
 19563 ;;		On exit  : 0/0
 19564 ;;		Unchanged: 0/0
 19565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19570 ;;Total ram usage:        0 bytes
 19571 ;; Hardware stack levels used:    1
 19572 ;; Hardware stack levels required when called:   15
 19573 ;; This function calls:
 19574 ;;		_RTCC_from_RTCC
 19575 ;; This function is called by:
 19576 ;;		_main
 19577 ;; This function uses a non-reentrant model
 19578 ;;
 19579                           
 19580                           	psect	text80
 19581  016374                     __ptext80:
 19582                           	opt stack 0
 19583  016374                     _RTCC_loop:
 19584                           	opt stack 15
 19585  016374                     l590:
 19586  016374  010F               	movlb	15	; () banked
 19587  016376  B93F               	btfsc	63,4,b	;volatile
 19588  016378  D7FD               	goto	l590
 19589                           
 19590                           ; BSR set to: 15
 19591                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
 19592                           
 19593                           ; BSR set to: 15
 19594  01637A  0E00               	movlw	0
 19595  01637C  B73F               	btfsc	63,3,b	;volatile
 19596  01637E  0E01               	movlw	1
 19597  016380  0100               	movlb	0	; () banked
 19598  016382  6F99               	movwf	_halfsec& (0+255),b
 19599                           
 19600                           ; BSR set to: 0
 19601                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
 19602  016384  0100               	movlb	0	; () banked
 19603  016386  5199               	movf	_halfsec& (0+255),w,b
 19604  016388  0100               	movlb	0	; () banked
 19605  01638A  198F               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
 19606  01638C  B4D8               	btfsc	status,2,c
 19607  01638E  0012               	return	
 19608                           
 19609                           ; BSR set to: 0
 19610                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
 19611  016390  C099  F08F         	movff	_halfsec,RTCC_loop@prev_halfsec
 19612                           
 19613                           ;My_header\My_RTCC.h: 393: colon = halfsec;
 19614  016394  C099  F095         	movff	_halfsec,_colon
 19615                           
 19616                           ; BSR set to: 0
 19617                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
 19618  016398  0E01               	movlw	1
 19619  01639A  6E50               	movwf	_time_change_flag,c
 19620                           
 19621                           ; BSR set to: 0
 19622                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
 19623  01639C  0EA6               	movlw	low _caltime_now
 19624  01639E  0100               	movlb	0	; () banked
 19625  0163A0  6FDD               	movwf	RTCC_from_RTCC@ct& (0+255),b
 19626  0163A2  0E00               	movlw	high _caltime_now
 19627  0163A4  0100               	movlb	0	; () banked
 19628  0163A6  6FDE               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 19629  0163A8  0EB1               	movlw	low _epoch_now
 19630  0163AA  0100               	movlb	0	; () banked
 19631  0163AC  6FDF               	movwf	RTCC_from_RTCC@ep& (0+255),b
 19632  0163AE  0E00               	movlw	high _epoch_now
 19633  0163B0  0100               	movlb	0	; () banked
 19634  0163B2  6FE0               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 19635  0163B4  ECD0  F0B4         	call	_RTCC_from_RTCC	;wreg free
 19636  0163B8  0012               	return	
 19637  0163BA                     __end_of_RTCC_loop:
 19638                           	opt stack 0
 19639                           tblptru	equ	0xFF8
 19640                           tblptrh	equ	0xFF7
 19641                           tblptrl	equ	0xFF6
 19642                           tablat	equ	0xFF5
 19643                           prodh	equ	0xFF4
 19644                           prodl	equ	0xFF3
 19645                           intcon	equ	0xFF2
 19646                           intcon2	equ	0xFF1
 19647                           postinc0	equ	0xFEE
 19648                           wreg	equ	0xFE8
 19649                           indf1	equ	0xFE7
 19650                           postinc1	equ	0xFE6
 19651                           postdec1	equ	0xFE5
 19652                           fsr1h	equ	0xFE2
 19653                           fsr1l	equ	0xFE1
 19654                           indf2	equ	0xFDF
 19655                           postinc2	equ	0xFDE
 19656                           postdec2	equ	0xFDD
 19657                           plusw2	equ	0xFDB
 19658                           fsr2h	equ	0xFDA
 19659                           fsr2l	equ	0xFD9
 19660                           status	equ	0xFD8
 19661                           
 19662 ;; *************** function _RTCC_from_RTCC *****************
 19663 ;; Defined at:
 19664 ;;		line 231 in file "../My_header\My_RTCC.h"
 19665 ;; Parameters:    Size  Location     Type
 19666 ;;  ct              2   40[BANK0 ] PTR struct .
 19667 ;;		 -> caltime_now(7), 
 19668 ;;  ep              2   42[BANK0 ] PTR unsigned long 
 19669 ;;		 -> epoch_now(4), 
 19670 ;; Auto vars:     Size  Location     Type
 19671 ;;		None
 19672 ;; Return value:  Size  Location     Type
 19673 ;;		None               void
 19674 ;; Registers used:
 19675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19676 ;; Tracked objects:
 19677 ;;		On entry : 0/0
 19678 ;;		On exit  : 0/0
 19679 ;;		Unchanged: 0/0
 19680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19684 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19685 ;;Total ram usage:        4 bytes
 19686 ;; Hardware stack levels used:    1
 19687 ;; Hardware stack levels required when called:   14
 19688 ;; This function calls:
 19689 ;;		_RTCC_to_caltime
 19690 ;;		_caltime_to_epoch
 19691 ;; This function is called by:
 19692 ;;		_display_time_1602
 19693 ;;		_RTCC_adjust_time_inc
 19694 ;;		_RTCC_adjust_time_dec
 19695 ;;		_RTCC_loop
 19696 ;;		_main
 19697 ;;		_display_time_0802
 19698 ;; This function uses a non-reentrant model
 19699 ;;
 19700                           
 19701                           	psect	text81
 19702  0169A0                     __ptext81:
 19703                           	opt stack 0
 19704  0169A0                     _RTCC_from_RTCC:
 19705                           	opt stack 13
 19706                           
 19707                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
 19708                           
 19709                           ;incstack = 0
 19710  0169A0  C0DD  F0B7         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
 19711  0169A4  C0DE  F0B8         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
 19712  0169A8  ECE0  F0A8         	call	_RTCC_to_caltime	;wreg free
 19713                           
 19714                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
 19715  0169AC  C0DD  F0CE         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
 19716  0169B0  C0DE  F0CF         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
 19717  0169B4  C0DF  F0D0         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
 19718  0169B8  C0E0  F0D1         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
 19719  0169BC  ECE1  F08E         	call	_caltime_to_epoch	;wreg free
 19720  0169C0  0012               	return		;funcret
 19721  0169C2                     __end_of_RTCC_from_RTCC:
 19722                           	opt stack 0
 19723                           tblptru	equ	0xFF8
 19724                           tblptrh	equ	0xFF7
 19725                           tblptrl	equ	0xFF6
 19726                           tablat	equ	0xFF5
 19727                           prodh	equ	0xFF4
 19728                           prodl	equ	0xFF3
 19729                           intcon	equ	0xFF2
 19730                           intcon2	equ	0xFF1
 19731                           postinc0	equ	0xFEE
 19732                           wreg	equ	0xFE8
 19733                           indf1	equ	0xFE7
 19734                           postinc1	equ	0xFE6
 19735                           postdec1	equ	0xFE5
 19736                           fsr1h	equ	0xFE2
 19737                           fsr1l	equ	0xFE1
 19738                           indf2	equ	0xFDF
 19739                           postinc2	equ	0xFDE
 19740                           postdec2	equ	0xFDD
 19741                           plusw2	equ	0xFDB
 19742                           fsr2h	equ	0xFDA
 19743                           fsr2l	equ	0xFD9
 19744                           status	equ	0xFD8
 19745                           
 19746 ;; *************** function _caltime_to_epoch *****************
 19747 ;; Defined at:
 19748 ;;		line 211 in file "../My_header\My_RTCC.h"
 19749 ;; Parameters:    Size  Location     Type
 19750 ;;  ct              2   25[BANK0 ] PTR struct .
 19751 ;;		 -> caltime_now(7), 
 19752 ;;  ep              2   27[BANK0 ] PTR unsigned long 
 19753 ;;		 -> epoch_now(4), 
 19754 ;; Auto vars:     Size  Location     Type
 19755 ;;  month           1   39[BANK0 ] unsigned char 
 19756 ;;  month           1   34[BANK0 ] unsigned char 
 19757 ;;  year            1   33[BANK0 ] unsigned char 
 19758 ;;  epoch           4   35[BANK0 ] unsigned long 
 19759 ;; Return value:  Size  Location     Type
 19760 ;;		None               void
 19761 ;; Registers used:
 19762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19763 ;; Tracked objects:
 19764 ;;		On entry : 0/0
 19765 ;;		On exit  : 0/0
 19766 ;;		Unchanged: 0/0
 19767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19769 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19770 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19771 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19772 ;;Total ram usage:       15 bytes
 19773 ;; Hardware stack levels used:    1
 19774 ;; Hardware stack levels required when called:   13
 19775 ;; This function calls:
 19776 ;;		___lmul
 19777 ;;		_month_length
 19778 ;; This function is called by:
 19779 ;;		_RTCC_from_RTCC
 19780 ;;		_RTCC_from_caltime
 19781 ;; This function uses a non-reentrant model
 19782 ;;
 19783                           
 19784                           	psect	text82
 19785  011DC2                     __ptext82:
 19786                           	opt stack 0
 19787  011DC2                     _caltime_to_epoch:
 19788                           	opt stack 13
 19789                           
 19790                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
 19791                           
 19792                           ;incstack = 0
 19793  011DC2  0E00               	movlw	0
 19794  011DC4  0100               	movlb	0	; () banked
 19795  011DC6  6FD8               	movwf	caltime_to_epoch@epoch& (0+255),b
 19796  011DC8  0E00               	movlw	0
 19797  011DCA  6FD9               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 19798  011DCC  0E00               	movlw	0
 19799  011DCE  6FDA               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 19800  011DD0  0E00               	movlw	0
 19801  011DD2  6FDB               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 19802                           
 19803                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
 19804  011DD4  0E00               	movlw	0
 19805  011DD6  0100               	movlb	0	; () banked
 19806  011DD8  6FD6               	movwf	caltime_to_epoch@year& (0+255),b
 19807  011DDA  D037               	goto	l9762
 19808  011DDC                     l9748:
 19809                           
 19810                           ; BSR set to: 0
 19811                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
 19812  011DDC  0E01               	movlw	1
 19813  011DDE  0100               	movlb	0	; () banked
 19814  011DE0  6FDC               	movwf	caltime_to_epoch@month& (0+255),b
 19815  011DE2                     l9750:
 19816                           
 19817                           ; BSR set to: 0
 19818  011DE2  0E0C               	movlw	12
 19819  011DE4  0100               	movlb	0	; () banked
 19820  011DE6  65DC               	cpfsgt	caltime_to_epoch@month& (0+255),b
 19821  011DE8  D001               	goto	l9754
 19822  011DEA  D02D               	goto	l9760
 19823  011DEC                     l9754:
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 19827  011DEC  C0DC  F0BB         	movff	caltime_to_epoch@month,month_length@month
 19828  011DF0  0100               	movlb	0	; () banked
 19829  011DF2  51D6               	movf	caltime_to_epoch@year& (0+255),w,b
 19830  011DF4  EC2C  F0A2         	call	_month_length
 19831  011DF8  0100               	movlb	0	; () banked
 19832  011DFA  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19833  011DFC  0100               	movlb	0	; () banked
 19834  011DFE  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19835  011E00  0100               	movlb	0	; () banked
 19836  011E02  6FC2               	movwf	___lmul@multiplier& (0+255),b
 19837  011E04  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 19838  011E06  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 19839  011E08  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 19840  011E0A  0E80               	movlw	128
 19841  011E0C  0100               	movlb	0	; () banked
 19842  011E0E  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 19843  011E10  0E51               	movlw	81
 19844  011E12  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19845  011E14  0E01               	movlw	1
 19846  011E16  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19847  011E18  0E00               	movlw	0
 19848  011E1A  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19849  011E1C  EC69  F0AE         	call	___lmul	;wreg free
 19850  011E20  0100               	movlb	0	; () banked
 19851  011E22  51C2               	movf	?___lmul& (0+255),w,b
 19852  011E24  0100               	movlb	0	; () banked
 19853  011E26  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19854  011E28  0100               	movlb	0	; () banked
 19855  011E2A  51C3               	movf	(?___lmul+1)& (0+255),w,b
 19856  011E2C  0100               	movlb	0	; () banked
 19857  011E2E  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19858  011E30  0100               	movlb	0	; () banked
 19859  011E32  51C4               	movf	(?___lmul+2)& (0+255),w,b
 19860  011E34  0100               	movlb	0	; () banked
 19861  011E36  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19862  011E38  0100               	movlb	0	; () banked
 19863  011E3A  51C5               	movf	(?___lmul+3)& (0+255),w,b
 19864  011E3C  0100               	movlb	0	; () banked
 19865  011E3E  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19866                           
 19867                           ; BSR set to: 0
 19868  011E40  0100               	movlb	0	; () banked
 19869  011E42  2BDC               	incf	caltime_to_epoch@month& (0+255),f,b
 19870  011E44  D7CE               	goto	l9750
 19871  011E46                     l9760:
 19872                           
 19873                           ; BSR set to: 0
 19874  011E46  0100               	movlb	0	; () banked
 19875  011E48  2BD6               	incf	caltime_to_epoch@year& (0+255),f,b
 19876  011E4A                     l9762:
 19877                           
 19878                           ; BSR set to: 0
 19879  011E4A  0100               	movlb	0	; () banked
 19880  011E4C  EE20 F006          	lfsr	2,6
 19881  011E50  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19882  011E52  26D9               	addwf	fsr2l,f,c
 19883  011E54  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19884  011E56  22DA               	addwfc	fsr2h,f,c
 19885  011E58  50DE               	movf	postinc2,w,c
 19886  011E5A  0100               	movlb	0	; () banked
 19887  011E5C  5DD6               	subwf	caltime_to_epoch@year& (0+255),w,b
 19888  011E5E  A0D8               	btfss	status,0,c
 19889  011E60  D7BD               	goto	l9748
 19890                           
 19891                           ; BSR set to: 0
 19892                           ;My_header\My_RTCC.h: 216: }
 19893                           ;My_header\My_RTCC.h: 217: }
 19894                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
 19895                           
 19896                           ; BSR set to: 0
 19897  011E62  0E01               	movlw	1
 19898  011E64  0100               	movlb	0	; () banked
 19899  011E66  6FD7               	movwf	caltime_to_epoch@month_1955& (0+255),b
 19900  011E68  D032               	goto	l9770
 19901  011E6A                     l9766:
 19902                           
 19903                           ; BSR set to: 0
 19904                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
 19905  011E6A  C0D7  F0BB         	movff	caltime_to_epoch@month_1955,month_length@month
 19906  011E6E  0100               	movlb	0	; () banked
 19907  011E70  EE20 F006          	lfsr	2,6
 19908  011E74  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19909  011E76  26D9               	addwf	fsr2l,f,c
 19910  011E78  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19911  011E7A  22DA               	addwfc	fsr2h,f,c
 19912  011E7C  50DF               	movf	indf2,w,c
 19913  011E7E  EC2C  F0A2         	call	_month_length
 19914  011E82  0100               	movlb	0	; () banked
 19915  011E84  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19916  011E86  0100               	movlb	0	; () banked
 19917  011E88  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19918  011E8A  0100               	movlb	0	; () banked
 19919  011E8C  6FC2               	movwf	___lmul@multiplier& (0+255),b
 19920  011E8E  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 19921  011E90  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 19922  011E92  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 19923  011E94  0E80               	movlw	128
 19924  011E96  0100               	movlb	0	; () banked
 19925  011E98  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 19926  011E9A  0E51               	movlw	81
 19927  011E9C  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19928  011E9E  0E01               	movlw	1
 19929  011EA0  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19930  011EA2  0E00               	movlw	0
 19931  011EA4  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19932  011EA6  EC69  F0AE         	call	___lmul	;wreg free
 19933  011EAA  0100               	movlb	0	; () banked
 19934  011EAC  51C2               	movf	?___lmul& (0+255),w,b
 19935  011EAE  0100               	movlb	0	; () banked
 19936  011EB0  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19937  011EB2  0100               	movlb	0	; () banked
 19938  011EB4  51C3               	movf	(?___lmul+1)& (0+255),w,b
 19939  011EB6  0100               	movlb	0	; () banked
 19940  011EB8  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19941  011EBA  0100               	movlb	0	; () banked
 19942  011EBC  51C4               	movf	(?___lmul+2)& (0+255),w,b
 19943  011EBE  0100               	movlb	0	; () banked
 19944  011EC0  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19945  011EC2  0100               	movlb	0	; () banked
 19946  011EC4  51C5               	movf	(?___lmul+3)& (0+255),w,b
 19947  011EC6  0100               	movlb	0	; () banked
 19948  011EC8  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19949                           
 19950                           ; BSR set to: 0
 19951  011ECA  0100               	movlb	0	; () banked
 19952  011ECC  2BD7               	incf	caltime_to_epoch@month_1955& (0+255),f,b
 19953  011ECE                     l9770:
 19954                           
 19955                           ; BSR set to: 0
 19956  011ECE  0100               	movlb	0	; () banked
 19957  011ED0  EE20 F005          	lfsr	2,5
 19958  011ED4  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19959  011ED6  26D9               	addwf	fsr2l,f,c
 19960  011ED8  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19961  011EDA  22DA               	addwfc	fsr2h,f,c
 19962  011EDC  50DE               	movf	postinc2,w,c
 19963  011EDE  0100               	movlb	0	; () banked
 19964  011EE0  5DD7               	subwf	caltime_to_epoch@month_1955& (0+255),w,b
 19965  011EE2  A0D8               	btfss	status,0,c
 19966  011EE4  D7C2               	goto	l9766
 19967                           
 19968                           ; BSR set to: 0
 19969                           ;My_header\My_RTCC.h: 220: }
 19970                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
 19971                           
 19972                           ; BSR set to: 0
 19973  011EE6  0EFF               	movlw	255
 19974  011EE8  0100               	movlb	0	; () banked
 19975  011EEA  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 19976  011EEC  0EFF               	movlw	255
 19977  011EEE  0100               	movlb	0	; () banked
 19978  011EF0  6FD3               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 19979  011EF2  0100               	movlb	0	; () banked
 19980  011EF4  EE20 F004          	lfsr	2,4
 19981  011EF8  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 19982  011EFA  26D9               	addwf	fsr2l,f,c
 19983  011EFC  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 19984  011EFE  22DA               	addwfc	fsr2h,f,c
 19985  011F00  50DF               	movf	indf2,w,c
 19986  011F02  0100               	movlb	0	; () banked
 19987  011F04  6FD4               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 19988  011F06  6BD5               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 19989  011F08  0100               	movlb	0	; () banked
 19990  011F0A  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 19991  011F0C  0100               	movlb	0	; () banked
 19992  011F0E  27D4               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 19993  011F10  0100               	movlb	0	; () banked
 19994  011F12  51D3               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 19995  011F14  0100               	movlb	0	; () banked
 19996  011F16  23D5               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 19997  011F18  C0D4  F0C2         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 19998  011F1C  C0D5  F0C3         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 19999  011F20  0100               	movlb	0	; () banked
 20000  011F22  0E00               	movlw	0
 20001  011F24  BFC3               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 20002  011F26  0EFF               	movlw	-1
 20003  011F28  6FC4               	movwf	(___lmul@multiplier+2)& (0+255),b
 20004  011F2A  6FC5               	movwf	(___lmul@multiplier+3)& (0+255),b
 20005  011F2C  0E80               	movlw	128
 20006  011F2E  0100               	movlb	0	; () banked
 20007  011F30  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 20008  011F32  0E51               	movlw	81
 20009  011F34  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 20010  011F36  0E01               	movlw	1
 20011  011F38  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 20012  011F3A  0E00               	movlw	0
 20013  011F3C  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 20014  011F3E  EC69  F0AE         	call	___lmul	;wreg free
 20015  011F42  0100               	movlb	0	; () banked
 20016  011F44  51C2               	movf	?___lmul& (0+255),w,b
 20017  011F46  0100               	movlb	0	; () banked
 20018  011F48  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 20019  011F4A  0100               	movlb	0	; () banked
 20020  011F4C  51C3               	movf	(?___lmul+1)& (0+255),w,b
 20021  011F4E  0100               	movlb	0	; () banked
 20022  011F50  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 20023  011F52  0100               	movlb	0	; () banked
 20024  011F54  51C4               	movf	(?___lmul+2)& (0+255),w,b
 20025  011F56  0100               	movlb	0	; () banked
 20026  011F58  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 20027  011F5A  0100               	movlb	0	; () banked
 20028  011F5C  51C5               	movf	(?___lmul+3)& (0+255),w,b
 20029  011F5E  0100               	movlb	0	; () banked
 20030  011F60  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 20031                           
 20032                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
 20033  011F62  0100               	movlb	0	; () banked
 20034  011F64  EE20 F002          	lfsr	2,2
 20035  011F68  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 20036  011F6A  26D9               	addwf	fsr2l,f,c
 20037  011F6C  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 20038  011F6E  22DA               	addwfc	fsr2h,f,c
 20039  011F70  50DF               	movf	indf2,w,c
 20040  011F72  0100               	movlb	0	; () banked
 20041  011F74  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 20042  011F76  0100               	movlb	0	; () banked
 20043  011F78  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 20044  011F7A  0100               	movlb	0	; () banked
 20045  011F7C  6FC2               	movwf	___lmul@multiplier& (0+255),b
 20046  011F7E  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 20047  011F80  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 20048  011F82  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 20049  011F84  0E10               	movlw	16
 20050  011F86  0100               	movlb	0	; () banked
 20051  011F88  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 20052  011F8A  0E0E               	movlw	14
 20053  011F8C  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 20054  011F8E  0E00               	movlw	0
 20055  011F90  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 20056  011F92  0E00               	movlw	0
 20057  011F94  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 20058  011F96  EC69  F0AE         	call	___lmul	;wreg free
 20059  011F9A  0100               	movlb	0	; () banked
 20060  011F9C  51C2               	movf	?___lmul& (0+255),w,b
 20061  011F9E  0100               	movlb	0	; () banked
 20062  011FA0  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 20063  011FA2  0100               	movlb	0	; () banked
 20064  011FA4  51C3               	movf	(?___lmul+1)& (0+255),w,b
 20065  011FA6  0100               	movlb	0	; () banked
 20066  011FA8  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 20067  011FAA  0100               	movlb	0	; () banked
 20068  011FAC  51C4               	movf	(?___lmul+2)& (0+255),w,b
 20069  011FAE  0100               	movlb	0	; () banked
 20070  011FB0  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 20071  011FB2  0100               	movlb	0	; () banked
 20072  011FB4  51C5               	movf	(?___lmul+3)& (0+255),w,b
 20073  011FB6  0100               	movlb	0	; () banked
 20074  011FB8  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 20075                           
 20076                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
 20077  011FBA  0100               	movlb	0	; () banked
 20078  011FBC  EE20 F001          	lfsr	2,1
 20079  011FC0  51CE               	movf	caltime_to_epoch@ct& (0+255),w,b
 20080  011FC2  26D9               	addwf	fsr2l,f,c
 20081  011FC4  51CF               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 20082  011FC6  22DA               	addwfc	fsr2h,f,c
 20083  011FC8  50DF               	movf	indf2,w,c
 20084  011FCA  0100               	movlb	0	; () banked
 20085  011FCC  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 20086  011FCE  0100               	movlb	0	; () banked
 20087  011FD0  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 20088  011FD2  0100               	movlb	0	; () banked
 20089  011FD4  6FC2               	movwf	___lmul@multiplier& (0+255),b
 20090  011FD6  6BC3               	clrf	(___lmul@multiplier+1)& (0+255),b
 20091  011FD8  6BC4               	clrf	(___lmul@multiplier+2)& (0+255),b
 20092  011FDA  6BC5               	clrf	(___lmul@multiplier+3)& (0+255),b
 20093  011FDC  0E3C               	movlw	60
 20094  011FDE  0100               	movlb	0	; () banked
 20095  011FE0  6FC6               	movwf	___lmul@multiplicand& (0+255),b
 20096  011FE2  0E00               	movlw	0
 20097  011FE4  6FC7               	movwf	(___lmul@multiplicand+1)& (0+255),b
 20098  011FE6  0E00               	movlw	0
 20099  011FE8  6FC8               	movwf	(___lmul@multiplicand+2)& (0+255),b
 20100  011FEA  0E00               	movlw	0
 20101  011FEC  6FC9               	movwf	(___lmul@multiplicand+3)& (0+255),b
 20102  011FEE  EC69  F0AE         	call	___lmul	;wreg free
 20103  011FF2  0100               	movlb	0	; () banked
 20104  011FF4  51C2               	movf	?___lmul& (0+255),w,b
 20105  011FF6  0100               	movlb	0	; () banked
 20106  011FF8  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 20107  011FFA  0100               	movlb	0	; () banked
 20108  011FFC  51C3               	movf	(?___lmul+1)& (0+255),w,b
 20109  011FFE  0100               	movlb	0	; () banked
 20110  012000  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 20111  012002  0100               	movlb	0	; () banked
 20112  012004  51C4               	movf	(?___lmul+2)& (0+255),w,b
 20113  012006  0100               	movlb	0	; () banked
 20114  012008  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 20115  01200A  0100               	movlb	0	; () banked
 20116  01200C  51C5               	movf	(?___lmul+3)& (0+255),w,b
 20117  01200E  0100               	movlb	0	; () banked
 20118  012010  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 20119                           
 20120                           ; BSR set to: 0
 20121                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
 20122  012012  C0CE  FFD9         	movff	caltime_to_epoch@ct,fsr2l
 20123  012016  C0CF  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
 20124  01201A  50DF               	movf	indf2,w,c
 20125  01201C  0100               	movlb	0	; () banked
 20126  01201E  6FD2               	movwf	??_caltime_to_epoch& (0+255),b
 20127  012020  0100               	movlb	0	; () banked
 20128  012022  51D2               	movf	??_caltime_to_epoch& (0+255),w,b
 20129  012024  0100               	movlb	0	; () banked
 20130  012026  27D8               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 20131  012028  0E00               	movlw	0
 20132  01202A  23D9               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 20133  01202C  23DA               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 20134  01202E  23DB               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;My_header\My_RTCC.h: 226: *ep = epoch;
 20138  012030  C0D0  FFD9         	movff	caltime_to_epoch@ep,fsr2l
 20139  012034  C0D1  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
 20140  012038  C0D8  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 20141  01203C  C0D9  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 20142  012040  C0DA  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 20143  012044  C0DB  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 20144                           
 20145                           ; BSR set to: 0
 20146  012048  0012               	return		;funcret
 20147  01204A                     __end_of_caltime_to_epoch:
 20148                           	opt stack 0
 20149                           tblptru	equ	0xFF8
 20150                           tblptrh	equ	0xFF7
 20151                           tblptrl	equ	0xFF6
 20152                           tablat	equ	0xFF5
 20153                           prodh	equ	0xFF4
 20154                           prodl	equ	0xFF3
 20155                           intcon	equ	0xFF2
 20156                           intcon2	equ	0xFF1
 20157                           postinc0	equ	0xFEE
 20158                           wreg	equ	0xFE8
 20159                           indf1	equ	0xFE7
 20160                           postinc1	equ	0xFE6
 20161                           postdec1	equ	0xFE5
 20162                           fsr1h	equ	0xFE2
 20163                           fsr1l	equ	0xFE1
 20164                           indf2	equ	0xFDF
 20165                           postinc2	equ	0xFDE
 20166                           postdec2	equ	0xFDD
 20167                           plusw2	equ	0xFDB
 20168                           fsr2h	equ	0xFDA
 20169                           fsr2l	equ	0xFD9
 20170                           status	equ	0xFD8
 20171                           
 20172 ;; *************** function _month_length *****************
 20173 ;; Defined at:
 20174 ;;		line 87 in file "../My_header\My_RTCC.h"
 20175 ;; Parameters:    Size  Location     Type
 20176 ;;  year            1    wreg     unsigned char 
 20177 ;;  month           1    6[BANK0 ] unsigned char 
 20178 ;; Auto vars:     Size  Location     Type
 20179 ;;  year            1   11[BANK0 ] unsigned char 
 20180 ;; Return value:  Size  Location     Type
 20181 ;;                  1    wreg      unsigned char 
 20182 ;; Registers used:
 20183 ;;		wreg, status,2, status,0, cstack
 20184 ;; Tracked objects:
 20185 ;;		On entry : 0/0
 20186 ;;		On exit  : 0/0
 20187 ;;		Unchanged: 0/0
 20188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20189 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20191 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20192 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20193 ;;Total ram usage:        6 bytes
 20194 ;; Hardware stack levels used:    1
 20195 ;; Hardware stack levels required when called:   12
 20196 ;; This function calls:
 20197 ;;		___awmod
 20198 ;; This function is called by:
 20199 ;;		_epoch_to_caltime
 20200 ;;		_caltime_to_epoch
 20201 ;;		_RTCC_adjust_time_inc
 20202 ;;		_RTCC_adjust_time_dec
 20203 ;;		_command_operation
 20204 ;; This function uses a non-reentrant model
 20205 ;;
 20206                           
 20207                           	psect	text83
 20208  014458                     __ptext83:
 20209                           	opt stack 0
 20210  014458                     _month_length:
 20211                           	opt stack 16
 20212                           
 20213                           ; BSR set to: 0
 20214                           ;incstack = 0
 20215                           ;month_length@year stored from wreg
 20216  014458  0100               	movlb	0	; () banked
 20217  01445A  6FC0               	movwf	month_length@year& (0+255),b
 20218                           
 20219                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
 20220  01445C  0E02               	movlw	2
 20221  01445E  0100               	movlb	0	; () banked
 20222  014460  19BB               	xorwf	month_length@month& (0+255),w,b
 20223  014462  A4D8               	btfss	status,2,c
 20224  014464  D03E               	goto	l9606
 20225                           
 20226                           ; BSR set to: 0
 20227  014466  C0C0  F0B5         	movff	month_length@year,___awmod@dividend
 20228  01446A  0100               	movlb	0	; () banked
 20229  01446C  6BB6               	clrf	(___awmod@dividend+1)& (0+255),b
 20230  01446E  0E00               	movlw	0
 20231  014470  0100               	movlb	0	; () banked
 20232  014472  6FB8               	movwf	(___awmod@divisor+1)& (0+255),b
 20233  014474  0E64               	movlw	100
 20234  014476  6FB7               	movwf	___awmod@divisor& (0+255),b
 20235  014478  EC37  F0AA         	call	___awmod	;wreg free
 20236  01447C  0100               	movlb	0	; () banked
 20237  01447E  51B5               	movf	?___awmod& (0+255),w,b
 20238  014480  0100               	movlb	0	; () banked
 20239  014482  11B6               	iorwf	(?___awmod+1)& (0+255),w,b
 20240  014484  A4D8               	btfss	status,2,c
 20241  014486  D002               	goto	u10380
 20242  014488  0E01               	movlw	1
 20243  01448A  D001               	goto	u10390
 20244  01448C                     u10380:
 20245  01448C  0E00               	movlw	0
 20246  01448E                     u10390:
 20247  01448E  0800               	sublw	0
 20248  014490  0100               	movlb	0	; () banked
 20249  014492  6FBC               	movwf	??_month_length& (0+255),b
 20250  014494  C0C0  F0B5         	movff	month_length@year,___awmod@dividend
 20251  014498  0100               	movlb	0	; () banked
 20252  01449A  6BB6               	clrf	(___awmod@dividend+1)& (0+255),b
 20253  01449C  0E01               	movlw	1
 20254  01449E  0100               	movlb	0	; () banked
 20255  0144A0  6FB8               	movwf	(___awmod@divisor+1)& (0+255),b
 20256  0144A2  0E90               	movlw	144
 20257  0144A4  6FB7               	movwf	___awmod@divisor& (0+255),b
 20258  0144A6  EC37  F0AA         	call	___awmod	;wreg free
 20259  0144AA  0100               	movlb	0	; () banked
 20260  0144AC  51B5               	movf	?___awmod& (0+255),w,b
 20261  0144AE  0100               	movlb	0	; () banked
 20262  0144B0  11B6               	iorwf	(?___awmod+1)& (0+255),w,b
 20263  0144B2  A4D8               	btfss	status,2,c
 20264  0144B4  D004               	goto	u10400
 20265  0144B6  0100               	movlb	0	; () banked
 20266  0144B8  6BBD               	clrf	(??_month_length+1)& (0+255),b
 20267  0144BA  2BBD               	incf	(??_month_length+1)& (0+255),f,b
 20268  0144BC  D002               	goto	u10418
 20269  0144BE                     u10400:
 20270  0144BE  0100               	movlb	0	; () banked
 20271  0144C0  6BBD               	clrf	(??_month_length+1)& (0+255),b
 20272  0144C2                     u10418:
 20273  0144C2  C0C0  F0BE         	movff	month_length@year,??_month_length+2
 20274  0144C6  0E03               	movlw	3
 20275  0144C8  0100               	movlb	0	; () banked
 20276  0144CA  17BE               	andwf	(??_month_length+2)& (0+255),f,b
 20277  0144CC  A4D8               	btfss	status,2,c
 20278  0144CE  D002               	goto	u10420
 20279  0144D0  0E01               	movlw	1
 20280  0144D2  D001               	goto	u10430
 20281  0144D4                     u10420:
 20282  0144D4  0E00               	movlw	0
 20283  0144D6                     u10430:
 20284  0144D6  0100               	movlb	0	; () banked
 20285  0144D8  25BD               	addwf	(??_month_length+1)& (0+255),w,b
 20286  0144DA  0100               	movlb	0	; () banked
 20287  0144DC  25BC               	addwf	??_month_length& (0+255),w,b
 20288  0144DE  0F1C               	addlw	28
 20289                           
 20290                           ; BSR set to: 0
 20291                           
 20292                           ; BSR set to: 0
 20293  0144E0  0012               	return	
 20294  0144E2                     l9606:
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
 20298  0144E2  0100               	movlb	0	; () banked
 20299  0144E4  51BB               	movf	month_length@month& (0+255),w,b
 20300  0144E6  0B01               	andlw	1
 20301  0144E8  0100               	movlb	0	; () banked
 20302  0144EA  6FBC               	movwf	??_month_length& (0+255),b
 20303  0144EC  6BBD               	clrf	(??_month_length+1)& (0+255),b
 20304  0144EE  0100               	movlb	0	; () banked
 20305  0144F0  1FBC               	comf	??_month_length& (0+255),f,b
 20306  0144F2  1FBD               	comf	(??_month_length+1)& (0+255),f,b
 20307  0144F4  4BBC               	infsnz	??_month_length& (0+255),f,b
 20308  0144F6  2BBD               	incf	(??_month_length+1)& (0+255),f,b
 20309  0144F8  0100               	movlb	0	; () banked
 20310  0144FA  51BB               	movf	month_length@month& (0+255),w,b
 20311  0144FC  0100               	movlb	0	; () banked
 20312  0144FE  6FBE               	movwf	(??_month_length+2)& (0+255),b
 20313  014500  6BBF               	clrf	(??_month_length+3)& (0+255),b
 20314  014502  0100               	movlb	0	; () banked
 20315  014504  51BC               	movf	??_month_length& (0+255),w,b
 20316  014506  0100               	movlb	0	; () banked
 20317  014508  1BBE               	xorwf	(??_month_length+2)& (0+255),f,b
 20318  01450A  0100               	movlb	0	; () banked
 20319  01450C  51BD               	movf	(??_month_length+1)& (0+255),w,b
 20320  01450E  0100               	movlb	0	; () banked
 20321  014510  1BBF               	xorwf	(??_month_length+3)& (0+255),f,b
 20322  014512  0E0D               	movlw	13
 20323  014514  0100               	movlb	0	; () banked
 20324  014516  17BE               	andwf	(??_month_length+2)& (0+255),f,b
 20325  014518  0E00               	movlw	0
 20326  01451A  17BF               	andwf	(??_month_length+3)& (0+255),f,b
 20327  01451C  0E04               	movlw	4
 20328  01451E  0100               	movlb	0	; () banked
 20329  014520  19BE               	xorwf	(??_month_length+2)& (0+255),w,b
 20330  014522  0100               	movlb	0	; () banked
 20331  014524  11BF               	iorwf	(??_month_length+3)& (0+255),w,b
 20332  014526  A4D8               	btfss	status,2,c
 20333  014528  D002               	goto	u10440
 20334  01452A  0E01               	movlw	1
 20335  01452C  D001               	goto	u10450
 20336  01452E                     u10440:
 20337  01452E  0E00               	movlw	0
 20338  014530                     u10450:
 20339  014530  0800               	sublw	0
 20340  014532  0F1F               	addlw	31
 20341                           
 20342                           ; BSR set to: 0
 20343  014534  0012               	return	
 20344  014536                     __end_of_month_length:
 20345                           	opt stack 0
 20346                           tblptru	equ	0xFF8
 20347                           tblptrh	equ	0xFF7
 20348                           tblptrl	equ	0xFF6
 20349                           tablat	equ	0xFF5
 20350                           prodh	equ	0xFF4
 20351                           prodl	equ	0xFF3
 20352                           intcon	equ	0xFF2
 20353                           intcon2	equ	0xFF1
 20354                           postinc0	equ	0xFEE
 20355                           wreg	equ	0xFE8
 20356                           indf1	equ	0xFE7
 20357                           postinc1	equ	0xFE6
 20358                           postdec1	equ	0xFE5
 20359                           fsr1h	equ	0xFE2
 20360                           fsr1l	equ	0xFE1
 20361                           indf2	equ	0xFDF
 20362                           postinc2	equ	0xFDE
 20363                           postdec2	equ	0xFDD
 20364                           plusw2	equ	0xFDB
 20365                           fsr2h	equ	0xFDA
 20366                           fsr2l	equ	0xFD9
 20367                           status	equ	0xFD8
 20368                           
 20369 ;; *************** function ___awmod *****************
 20370 ;; Defined at:
 20371 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 20372 ;; Parameters:    Size  Location     Type
 20373 ;;  dividend        2    0[BANK0 ] int 
 20374 ;;  divisor         2    2[BANK0 ] int 
 20375 ;; Auto vars:     Size  Location     Type
 20376 ;;  sign            1    5[BANK0 ] unsigned char 
 20377 ;;  counter         1    4[BANK0 ] unsigned char 
 20378 ;; Return value:  Size  Location     Type
 20379 ;;                  2    0[BANK0 ] int 
 20380 ;; Registers used:
 20381 ;;		wreg, status,2, status,0
 20382 ;; Tracked objects:
 20383 ;;		On entry : 0/0
 20384 ;;		On exit  : 0/0
 20385 ;;		Unchanged: 0/0
 20386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20390 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20391 ;;Total ram usage:        6 bytes
 20392 ;; Hardware stack levels used:    1
 20393 ;; Hardware stack levels required when called:   11
 20394 ;; This function calls:
 20395 ;;		Nothing
 20396 ;; This function is called by:
 20397 ;;		_month_length
 20398 ;; This function uses a non-reentrant model
 20399 ;;
 20400                           
 20401                           	psect	text84
 20402  01546E                     __ptext84:
 20403                           	opt stack 0
 20404  01546E                     ___awmod:
 20405                           	opt stack 16
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;incstack = 0
 20409  01546E  0E00               	movlw	0
 20410  015470  0100               	movlb	0	; () banked
 20411  015472  6FBA               	movwf	___awmod@sign& (0+255),b
 20412                           
 20413                           ; BSR set to: 0
 20414  015474  0100               	movlb	0	; () banked
 20415  015476  AFB6               	btfss	(___awmod@dividend+1)& (0+255),7,b
 20416  015478  D008               	goto	l9468
 20417                           
 20418                           ; BSR set to: 0
 20419  01547A  0100               	movlb	0	; () banked
 20420  01547C  6DB5               	negf	___awmod@dividend& (0+255),b
 20421  01547E  1FB6               	comf	(___awmod@dividend+1)& (0+255),f,b
 20422  015480  B0D8               	btfsc	status,0,c
 20423  015482  2BB6               	incf	(___awmod@dividend+1)& (0+255),f,b
 20424                           
 20425                           ; BSR set to: 0
 20426  015484  0E01               	movlw	1
 20427  015486  0100               	movlb	0	; () banked
 20428  015488  6FBA               	movwf	___awmod@sign& (0+255),b
 20429  01548A                     l9468:
 20430                           
 20431                           ; BSR set to: 0
 20432  01548A  0100               	movlb	0	; () banked
 20433  01548C  AFB8               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20434  01548E  D005               	goto	l9472
 20435                           
 20436                           ; BSR set to: 0
 20437  015490  0100               	movlb	0	; () banked
 20438  015492  6DB7               	negf	___awmod@divisor& (0+255),b
 20439  015494  1FB8               	comf	(___awmod@divisor+1)& (0+255),f,b
 20440  015496  B0D8               	btfsc	status,0,c
 20441  015498  2BB8               	incf	(___awmod@divisor+1)& (0+255),f,b
 20442  01549A                     l9472:
 20443                           
 20444                           ; BSR set to: 0
 20445  01549A  0100               	movlb	0	; () banked
 20446  01549C  51B7               	movf	___awmod@divisor& (0+255),w,b
 20447  01549E  0100               	movlb	0	; () banked
 20448  0154A0  11B8               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 20449  0154A2  B4D8               	btfsc	status,2,c
 20450  0154A4  D026               	goto	l9488
 20451                           
 20452                           ; BSR set to: 0
 20453  0154A6  0E01               	movlw	1
 20454  0154A8  0100               	movlb	0	; () banked
 20455  0154AA  6FB9               	movwf	___awmod@counter& (0+255),b
 20456  0154AC  D006               	goto	l9478
 20457  0154AE                     l9476:
 20458                           
 20459                           ; BSR set to: 0
 20460  0154AE  0100               	movlb	0	; () banked
 20461  0154B0  90D8               	bcf	status,0,c
 20462  0154B2  37B7               	rlcf	___awmod@divisor& (0+255),f,b
 20463  0154B4  37B8               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 20464  0154B6  0100               	movlb	0	; () banked
 20465  0154B8  2BB9               	incf	___awmod@counter& (0+255),f,b
 20466  0154BA                     l9478:
 20467                           
 20468                           ; BSR set to: 0
 20469  0154BA  0100               	movlb	0	; () banked
 20470  0154BC  AFB8               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20471  0154BE  D7F7               	goto	l9476
 20472  0154C0                     l9480:
 20473                           
 20474                           ; BSR set to: 0
 20475  0154C0  0100               	movlb	0	; () banked
 20476  0154C2  51B7               	movf	___awmod@divisor& (0+255),w,b
 20477  0154C4  0100               	movlb	0	; () banked
 20478  0154C6  5DB5               	subwf	___awmod@dividend& (0+255),w,b
 20479  0154C8  0100               	movlb	0	; () banked
 20480  0154CA  51B8               	movf	(___awmod@divisor+1)& (0+255),w,b
 20481  0154CC  0100               	movlb	0	; () banked
 20482  0154CE  59B6               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 20483  0154D0  A0D8               	btfss	status,0,c
 20484  0154D2  D008               	goto	l9484
 20485                           
 20486                           ; BSR set to: 0
 20487  0154D4  0100               	movlb	0	; () banked
 20488  0154D6  51B7               	movf	___awmod@divisor& (0+255),w,b
 20489  0154D8  0100               	movlb	0	; () banked
 20490  0154DA  5FB5               	subwf	___awmod@dividend& (0+255),f,b
 20491  0154DC  0100               	movlb	0	; () banked
 20492  0154DE  51B8               	movf	(___awmod@divisor+1)& (0+255),w,b
 20493  0154E0  0100               	movlb	0	; () banked
 20494  0154E2  5BB6               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 20495  0154E4                     l9484:
 20496                           
 20497                           ; BSR set to: 0
 20498  0154E4  0100               	movlb	0	; () banked
 20499  0154E6  90D8               	bcf	status,0,c
 20500  0154E8  33B8               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 20501  0154EA  33B7               	rrcf	___awmod@divisor& (0+255),f,b
 20502                           
 20503                           ; BSR set to: 0
 20504  0154EC  0100               	movlb	0	; () banked
 20505  0154EE  2FB9               	decfsz	___awmod@counter& (0+255),f,b
 20506  0154F0  D7E7               	goto	l9480
 20507  0154F2                     l9488:
 20508                           
 20509                           ; BSR set to: 0
 20510  0154F2  0100               	movlb	0	; () banked
 20511  0154F4  51BA               	movf	___awmod@sign& (0+255),w,b
 20512  0154F6  0100               	movlb	0	; () banked
 20513  0154F8  B4D8               	btfsc	status,2,c
 20514  0154FA  D005               	goto	l9492
 20515                           
 20516                           ; BSR set to: 0
 20517  0154FC  0100               	movlb	0	; () banked
 20518  0154FE  6DB5               	negf	___awmod@dividend& (0+255),b
 20519  015500  1FB6               	comf	(___awmod@dividend+1)& (0+255),f,b
 20520  015502  B0D8               	btfsc	status,0,c
 20521  015504  2BB6               	incf	(___awmod@dividend+1)& (0+255),f,b
 20522  015506                     l9492:
 20523                           
 20524                           ; BSR set to: 0
 20525  015506  C0B5  F0B5         	movff	___awmod@dividend,?___awmod
 20526  01550A  C0B6  F0B6         	movff	___awmod@dividend+1,?___awmod+1
 20527  01550E  0012               	return	
 20528  015510                     __end_of___awmod:
 20529                           	opt stack 0
 20530                           tblptru	equ	0xFF8
 20531                           tblptrh	equ	0xFF7
 20532                           tblptrl	equ	0xFF6
 20533                           tablat	equ	0xFF5
 20534                           prodh	equ	0xFF4
 20535                           prodl	equ	0xFF3
 20536                           intcon	equ	0xFF2
 20537                           intcon2	equ	0xFF1
 20538                           postinc0	equ	0xFEE
 20539                           wreg	equ	0xFE8
 20540                           indf1	equ	0xFE7
 20541                           postinc1	equ	0xFE6
 20542                           postdec1	equ	0xFE5
 20543                           fsr1h	equ	0xFE2
 20544                           fsr1l	equ	0xFE1
 20545                           indf2	equ	0xFDF
 20546                           postinc2	equ	0xFDE
 20547                           postdec2	equ	0xFDD
 20548                           plusw2	equ	0xFDB
 20549                           fsr2h	equ	0xFDA
 20550                           fsr2l	equ	0xFD9
 20551                           status	equ	0xFD8
 20552                           
 20553 ;; *************** function ___lmul *****************
 20554 ;; Defined at:
 20555 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 20556 ;; Parameters:    Size  Location     Type
 20557 ;;  multiplier      4   13[BANK0 ] unsigned long 
 20558 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 20559 ;; Auto vars:     Size  Location     Type
 20560 ;;  product         4   21[BANK0 ] unsigned long 
 20561 ;; Return value:  Size  Location     Type
 20562 ;;                  4   13[BANK0 ] unsigned long 
 20563 ;; Registers used:
 20564 ;;		wreg, status,2, status,0
 20565 ;; Tracked objects:
 20566 ;;		On entry : 0/0
 20567 ;;		On exit  : 0/0
 20568 ;;		Unchanged: 0/0
 20569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20570 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20571 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20573 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20574 ;;Total ram usage:       12 bytes
 20575 ;; Hardware stack levels used:    1
 20576 ;; Hardware stack levels required when called:   11
 20577 ;; This function calls:
 20578 ;;		Nothing
 20579 ;; This function is called by:
 20580 ;;		_get_quot_rem
 20581 ;;		_caltime_to_epoch
 20582 ;;		_RTCC_adjust_time_inc
 20583 ;;		_RTCC_adjust_time_dec
 20584 ;; This function uses a non-reentrant model
 20585 ;;
 20586                           
 20587                           	psect	text85
 20588  015CD2                     __ptext85:
 20589                           	opt stack 0
 20590  015CD2                     ___lmul:
 20591                           	opt stack 13
 20592                           
 20593                           ; BSR set to: 0
 20594                           ;incstack = 0
 20595  015CD2  0E00               	movlw	0
 20596  015CD4  0100               	movlb	0	; () banked
 20597  015CD6  6FCA               	movwf	___lmul@product& (0+255),b
 20598  015CD8  0E00               	movlw	0
 20599  015CDA  6FCB               	movwf	(___lmul@product+1)& (0+255),b
 20600  015CDC  0E00               	movlw	0
 20601  015CDE  6FCC               	movwf	(___lmul@product+2)& (0+255),b
 20602  015CE0  0E00               	movlw	0
 20603  015CE2  6FCD               	movwf	(___lmul@product+3)& (0+255),b
 20604  015CE4                     l9408:
 20605                           
 20606                           ; BSR set to: 0
 20607  015CE4  0100               	movlb	0	; () banked
 20608  015CE6  A1C2               	btfss	___lmul@multiplier& (0+255),0,b
 20609  015CE8  D010               	goto	l9412
 20610                           
 20611                           ; BSR set to: 0
 20612  015CEA  0100               	movlb	0	; () banked
 20613  015CEC  51C6               	movf	___lmul@multiplicand& (0+255),w,b
 20614  015CEE  0100               	movlb	0	; () banked
 20615  015CF0  27CA               	addwf	___lmul@product& (0+255),f,b
 20616  015CF2  0100               	movlb	0	; () banked
 20617  015CF4  51C7               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 20618  015CF6  0100               	movlb	0	; () banked
 20619  015CF8  23CB               	addwfc	(___lmul@product+1)& (0+255),f,b
 20620  015CFA  0100               	movlb	0	; () banked
 20621  015CFC  51C8               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 20622  015CFE  0100               	movlb	0	; () banked
 20623  015D00  23CC               	addwfc	(___lmul@product+2)& (0+255),f,b
 20624  015D02  0100               	movlb	0	; () banked
 20625  015D04  51C9               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 20626  015D06  0100               	movlb	0	; () banked
 20627  015D08  23CD               	addwfc	(___lmul@product+3)& (0+255),f,b
 20628  015D0A                     l9412:
 20629                           
 20630                           ; BSR set to: 0
 20631  015D0A  0100               	movlb	0	; () banked
 20632  015D0C  90D8               	bcf	status,0,c
 20633  015D0E  37C6               	rlcf	___lmul@multiplicand& (0+255),f,b
 20634  015D10  37C7               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 20635  015D12  37C8               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 20636  015D14  37C9               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 20637                           
 20638                           ; BSR set to: 0
 20639  015D16  0100               	movlb	0	; () banked
 20640  015D18  90D8               	bcf	status,0,c
 20641  015D1A  33C5               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 20642  015D1C  33C4               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 20643  015D1E  33C3               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 20644  015D20  33C2               	rrcf	___lmul@multiplier& (0+255),f,b
 20645  015D22  0100               	movlb	0	; () banked
 20646  015D24  51C2               	movf	___lmul@multiplier& (0+255),w,b
 20647  015D26  0100               	movlb	0	; () banked
 20648  015D28  11C3               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 20649  015D2A  0100               	movlb	0	; () banked
 20650  015D2C  11C4               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 20651  015D2E  0100               	movlb	0	; () banked
 20652  015D30  11C5               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 20653  015D32  A4D8               	btfss	status,2,c
 20654  015D34  D7D7               	goto	l9408
 20655                           
 20656                           ; BSR set to: 0
 20657  015D36  C0CA  F0C2         	movff	___lmul@product,?___lmul
 20658  015D3A  C0CB  F0C3         	movff	___lmul@product+1,?___lmul+1
 20659  015D3E  C0CC  F0C4         	movff	___lmul@product+2,?___lmul+2
 20660  015D42  C0CD  F0C5         	movff	___lmul@product+3,?___lmul+3
 20661                           
 20662                           ; BSR set to: 0
 20663  015D46  0012               	return		;funcret
 20664  015D48                     __end_of___lmul:
 20665                           	opt stack 0
 20666                           tblptru	equ	0xFF8
 20667                           tblptrh	equ	0xFF7
 20668                           tblptrl	equ	0xFF6
 20669                           tablat	equ	0xFF5
 20670                           prodh	equ	0xFF4
 20671                           prodl	equ	0xFF3
 20672                           intcon	equ	0xFF2
 20673                           intcon2	equ	0xFF1
 20674                           postinc0	equ	0xFEE
 20675                           wreg	equ	0xFE8
 20676                           indf1	equ	0xFE7
 20677                           postinc1	equ	0xFE6
 20678                           postdec1	equ	0xFE5
 20679                           fsr1h	equ	0xFE2
 20680                           fsr1l	equ	0xFE1
 20681                           indf2	equ	0xFDF
 20682                           postinc2	equ	0xFDE
 20683                           postdec2	equ	0xFDD
 20684                           plusw2	equ	0xFDB
 20685                           fsr2h	equ	0xFDA
 20686                           fsr2l	equ	0xFD9
 20687                           status	equ	0xFD8
 20688                           
 20689 ;; *************** function _RTCC_to_caltime *****************
 20690 ;; Defined at:
 20691 ;;		line 121 in file "../My_header\My_RTCC.h"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;  ct              2    2[BANK0 ] PTR struct .
 20694 ;;		 -> caltime_now(7), 
 20695 ;; Auto vars:     Size  Location     Type
 20696 ;;  dumy            1    4[BANK0 ] unsigned char 
 20697 ;; Return value:  Size  Location     Type
 20698 ;;		None               void
 20699 ;; Registers used:
 20700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20701 ;; Tracked objects:
 20702 ;;		On entry : 0/0
 20703 ;;		On exit  : 0/0
 20704 ;;		Unchanged: 0/0
 20705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20706 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20709 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20710 ;;Total ram usage:        3 bytes
 20711 ;; Hardware stack levels used:    1
 20712 ;; Hardware stack levels required when called:   12
 20713 ;; This function calls:
 20714 ;;		_x_to_d
 20715 ;; This function is called by:
 20716 ;;		_RTCC_from_RTCC
 20717 ;; This function uses a non-reentrant model
 20718 ;;
 20719                           
 20720                           	psect	text86
 20721  0151C0                     __ptext86:
 20722                           	opt stack 0
 20723  0151C0                     _RTCC_to_caltime:
 20724                           	opt stack 14
 20725  0151C0                     l434:
 20726  0151C0  010F               	movlb	15	; () banked
 20727  0151C2  B93F               	btfsc	63,4,b	;volatile
 20728  0151C4  D7FD               	goto	l434
 20729                           
 20730                           ; BSR set to: 15
 20731                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
 20732  0151C6  010F               	movlb	15	; () banked
 20733  0151C8  813F               	bsf	63,0,b	;volatile
 20734                           
 20735                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
 20736  0151CA  010F               	movlb	15	; () banked
 20737  0151CC  833F               	bsf	63,1,b	;volatile
 20738                           
 20739                           ; BSR set to: 15
 20740                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
 20741  0151CE  0100               	movlb	0	; () banked
 20742  0151D0  EE20 F006          	lfsr	2,6
 20743  0151D4  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20744  0151D6  26D9               	addwf	fsr2l,f,c
 20745  0151D8  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20746  0151DA  22DA               	addwfc	fsr2h,f,c
 20747  0151DC  010F               	movlb	15	; () banked
 20748  0151DE  513A               	movf	58,w,b	;volatile
 20749  0151E0  ECF1  F0B4         	call	_x_to_d
 20750  0151E4  6EDF               	movwf	indf2,c
 20751                           
 20752                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
 20753  0151E6  CF3B F0B9          	movff	3899,RTCC_to_caltime@dumy	;volatile
 20754                           
 20755                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
 20756  0151EA  0100               	movlb	0	; () banked
 20757  0151EC  EE20 F004          	lfsr	2,4
 20758  0151F0  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20759  0151F2  26D9               	addwf	fsr2l,f,c
 20760  0151F4  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20761  0151F6  22DA               	addwfc	fsr2h,f,c
 20762  0151F8  010F               	movlb	15	; () banked
 20763  0151FA  513A               	movf	58,w,b	;volatile
 20764  0151FC  ECF1  F0B4         	call	_x_to_d
 20765  015200  6EDF               	movwf	indf2,c
 20766                           
 20767                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
 20768  015202  0100               	movlb	0	; () banked
 20769  015204  EE20 F005          	lfsr	2,5
 20770  015208  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20771  01520A  26D9               	addwf	fsr2l,f,c
 20772  01520C  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20773  01520E  22DA               	addwfc	fsr2h,f,c
 20774  015210  010F               	movlb	15	; () banked
 20775  015212  513B               	movf	59,w,b	;volatile
 20776  015214  ECF1  F0B4         	call	_x_to_d
 20777  015218  6EDF               	movwf	indf2,c
 20778                           
 20779                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
 20780  01521A  0100               	movlb	0	; () banked
 20781  01521C  EE20 F002          	lfsr	2,2
 20782  015220  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20783  015222  26D9               	addwf	fsr2l,f,c
 20784  015224  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20785  015226  22DA               	addwfc	fsr2h,f,c
 20786  015228  010F               	movlb	15	; () banked
 20787  01522A  513A               	movf	58,w,b	;volatile
 20788  01522C  ECF1  F0B4         	call	_x_to_d
 20789  015230  6EDF               	movwf	indf2,c
 20790                           
 20791                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
 20792  015232  0100               	movlb	0	; () banked
 20793  015234  EE20 F003          	lfsr	2,3
 20794  015238  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20795  01523A  26D9               	addwf	fsr2l,f,c
 20796  01523C  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20797  01523E  22DA               	addwfc	fsr2h,f,c
 20798  015240  010F               	movlb	15	; () banked
 20799  015242  513B               	movf	59,w,b	;volatile
 20800  015244  ECF1  F0B4         	call	_x_to_d
 20801  015248  6EDF               	movwf	indf2,c
 20802                           
 20803                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
 20804  01524A  010F               	movlb	15	; () banked
 20805  01524C  513A               	movf	58,w,b	;volatile
 20806  01524E  ECF1  F0B4         	call	_x_to_d
 20807  015252  C0B7  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 20808  015256  C0B8  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 20809  01525A  6EDF               	movwf	indf2,c
 20810                           
 20811                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
 20812  01525C  0100               	movlb	0	; () banked
 20813  01525E  EE20 F001          	lfsr	2,1
 20814  015262  51B7               	movf	RTCC_to_caltime@ct& (0+255),w,b
 20815  015264  26D9               	addwf	fsr2l,f,c
 20816  015266  51B8               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 20817  015268  22DA               	addwfc	fsr2h,f,c
 20818  01526A  010F               	movlb	15	; () banked
 20819  01526C  513B               	movf	59,w,b	;volatile
 20820  01526E  ECF1  F0B4         	call	_x_to_d
 20821  015272  6EDF               	movwf	indf2,c
 20822  015274  0012               	return		;funcret
 20823  015276                     __end_of_RTCC_to_caltime:
 20824                           	opt stack 0
 20825                           tblptru	equ	0xFF8
 20826                           tblptrh	equ	0xFF7
 20827                           tblptrl	equ	0xFF6
 20828                           tablat	equ	0xFF5
 20829                           prodh	equ	0xFF4
 20830                           prodl	equ	0xFF3
 20831                           intcon	equ	0xFF2
 20832                           intcon2	equ	0xFF1
 20833                           postinc0	equ	0xFEE
 20834                           wreg	equ	0xFE8
 20835                           indf1	equ	0xFE7
 20836                           postinc1	equ	0xFE6
 20837                           postdec1	equ	0xFE5
 20838                           fsr1h	equ	0xFE2
 20839                           fsr1l	equ	0xFE1
 20840                           indf2	equ	0xFDF
 20841                           postinc2	equ	0xFDE
 20842                           postdec2	equ	0xFDD
 20843                           plusw2	equ	0xFDB
 20844                           fsr2h	equ	0xFDA
 20845                           fsr2l	equ	0xFD9
 20846                           status	equ	0xFD8
 20847                           
 20848 ;; *************** function _x_to_d *****************
 20849 ;; Defined at:
 20850 ;;		line 81 in file "../My_header\My_RTCC.h"
 20851 ;; Parameters:    Size  Location     Type
 20852 ;;  hex             1    wreg     unsigned char 
 20853 ;; Auto vars:     Size  Location     Type
 20854 ;;  hex             1    1[BANK0 ] unsigned char 
 20855 ;; Return value:  Size  Location     Type
 20856 ;;                  1    wreg      unsigned char 
 20857 ;; Registers used:
 20858 ;;		wreg, status,2, status,0, prodl, prodh
 20859 ;; Tracked objects:
 20860 ;;		On entry : 0/0
 20861 ;;		On exit  : 0/0
 20862 ;;		Unchanged: 0/0
 20863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20867 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20868 ;;Total ram usage:        2 bytes
 20869 ;; Hardware stack levels used:    1
 20870 ;; Hardware stack levels required when called:   11
 20871 ;; This function calls:
 20872 ;;		Nothing
 20873 ;; This function is called by:
 20874 ;;		_RTCC_to_caltime
 20875 ;; This function uses a non-reentrant model
 20876 ;;
 20877                           
 20878                           	psect	text87
 20879  0169E2                     __ptext87:
 20880                           	opt stack 0
 20881  0169E2                     _x_to_d:
 20882                           	opt stack 14
 20883                           
 20884                           ;incstack = 0
 20885                           ;x_to_d@hex stored from wreg
 20886  0169E2  0100               	movlb	0	; () banked
 20887  0169E4  6FB6               	movwf	x_to_d@hex& (0+255),b
 20888                           
 20889                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 20890  0169E6  C0B6  F0B5         	movff	x_to_d@hex,??_x_to_d
 20891  0169EA  0E0F               	movlw	15
 20892  0169EC  0100               	movlb	0	; () banked
 20893  0169EE  17B5               	andwf	??_x_to_d& (0+255),f,b
 20894  0169F0  0100               	movlb	0	; () banked
 20895  0169F2  39B6               	swapf	x_to_d@hex& (0+255),w,b
 20896  0169F4  0B0F               	andlw	15
 20897  0169F6  0B0F               	andlw	15
 20898  0169F8  0D0A               	mullw	10
 20899  0169FA  50F3               	movf	prodl,w,c
 20900  0169FC  0100               	movlb	0	; () banked
 20901  0169FE  25B5               	addwf	??_x_to_d& (0+255),w,b
 20902  016A00  0012               	return	
 20903  016A02                     __end_of_x_to_d:
 20904                           	opt stack 0
 20905                           tblptru	equ	0xFF8
 20906                           tblptrh	equ	0xFF7
 20907                           tblptrl	equ	0xFF6
 20908                           tablat	equ	0xFF5
 20909                           prodh	equ	0xFF4
 20910                           prodl	equ	0xFF3
 20911                           intcon	equ	0xFF2
 20912                           intcon2	equ	0xFF1
 20913                           postinc0	equ	0xFEE
 20914                           wreg	equ	0xFE8
 20915                           indf1	equ	0xFE7
 20916                           postinc1	equ	0xFE6
 20917                           postdec1	equ	0xFE5
 20918                           fsr1h	equ	0xFE2
 20919                           fsr1l	equ	0xFE1
 20920                           indf2	equ	0xFDF
 20921                           postinc2	equ	0xFDE
 20922                           postdec2	equ	0xFDD
 20923                           plusw2	equ	0xFDB
 20924                           fsr2h	equ	0xFDA
 20925                           fsr2l	equ	0xFD9
 20926                           status	equ	0xFD8
 20927                           
 20928 ;; *************** function _EEP_read32 *****************
 20929 ;; Defined at:
 20930 ;;		line 311 in file "../My_header\My_I2C.h"
 20931 ;; Parameters:    Size  Location     Type
 20932 ;;  Reg_h           1    wreg     unsigned char 
 20933 ;;  Reg_l           1    6[BANK0 ] unsigned char 
 20934 ;; Auto vars:     Size  Location     Type
 20935 ;;  Reg_h           1   32[BANK0 ] unsigned char 
 20936 ;;  d               4   33[BANK0 ] unsigned char [4]
 20937 ;;  data            4    0        unsigned long 
 20938 ;;  ans             1   37[BANK0 ] unsigned char 
 20939 ;; Return value:  Size  Location     Type
 20940 ;;                  4    6[BANK0 ] unsigned long 
 20941 ;; Registers used:
 20942 ;;		wreg, status,2, status,0, cstack
 20943 ;; Tracked objects:
 20944 ;;		On entry : 0/0
 20945 ;;		On exit  : 0/0
 20946 ;;		Unchanged: 0/0
 20947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20949 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20950 ;;      Temps:          0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20951 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20952 ;;Total ram usage:       32 bytes
 20953 ;; Hardware stack levels used:    1
 20954 ;; Hardware stack levels required when called:   13
 20955 ;; This function calls:
 20956 ;;		_I2C_Receive
 20957 ;;		_I2C_Send
 20958 ;;		_I2C_Start
 20959 ;;		_I2C_Stop
 20960 ;;		_I2C_rStart
 20961 ;; This function is called by:
 20962 ;;		_main
 20963 ;; This function uses a non-reentrant model
 20964 ;;
 20965                           
 20966                           	psect	text88
 20967  012F98                     __ptext88:
 20968                           	opt stack 0
 20969  012F98                     _EEP_read32:
 20970                           	opt stack 17
 20971                           
 20972                           ; BSR set to: 0
 20973                           ;incstack = 0
 20974                           ;EEP_read32@Reg_h stored from wreg
 20975  012F98  0100               	movlb	0	; () banked
 20976  012F9A  6FD5               	movwf	EEP_read32@Reg_h& (0+255),b
 20977                           
 20978                           ;My_header\My_I2C.h: 312: uint8_t ans;
 20979                           ;My_header\My_I2C.h: 313: uint8_t d[4];
 20980                           ;My_header\My_I2C.h: 314: uint32_t data;
 20981                           ;My_header\My_I2C.h: 316: ans = I2C_Start(0x50, 0);
 20982  012F9C  0E00               	movlw	0
 20983  012F9E  0100               	movlb	0	; () banked
 20984  012FA0  6FB7               	movwf	I2C_Start@rw& (0+255),b
 20985  012FA2  0E50               	movlw	80
 20986  012FA4  EC3B  F0B3         	call	_I2C_Start
 20987  012FA8  0100               	movlb	0	; () banked
 20988  012FAA  6FDA               	movwf	EEP_read32@ans& (0+255),b
 20989                           
 20990                           ; BSR set to: 0
 20991                           ;My_header\My_I2C.h: 317: if (ans == 0) {
 20992  012FAC  0100               	movlb	0	; () banked
 20993  012FAE  51DA               	movf	EEP_read32@ans& (0+255),w,b
 20994  012FB0  0100               	movlb	0	; () banked
 20995  012FB2  A4D8               	btfss	status,2,c
 20996  012FB4  D008               	goto	l389
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;My_header\My_I2C.h: 318: I2C_Send(Reg_h);
 21000  012FB6  0100               	movlb	0	; () banked
 21001  012FB8  51D5               	movf	EEP_read32@Reg_h& (0+255),w,b
 21002  012FBA  EC39  F0B5         	call	_I2C_Send
 21003                           
 21004                           ;My_header\My_I2C.h: 319: I2C_Send(Reg_l);
 21005  012FBE  0100               	movlb	0	; () banked
 21006  012FC0  51BB               	movf	EEP_read32@Reg_l& (0+255),w,b
 21007  012FC2  EC39  F0B5         	call	_I2C_Send
 21008  012FC6                     l389:
 21009                           
 21010                           ;My_header\My_I2C.h: 320: }
 21011                           ;My_header\My_I2C.h: 321: ans = I2C_rStart(0x50, 1);
 21012  012FC6  0E00               	movlw	0
 21013  012FC8  0100               	movlb	0	; () banked
 21014  012FCA  6FB8               	movwf	(I2C_rStart@adrs+1)& (0+255),b
 21015  012FCC  0E50               	movlw	80
 21016  012FCE  6FB7               	movwf	I2C_rStart@adrs& (0+255),b
 21017  012FD0  0E00               	movlw	0
 21018  012FD2  0100               	movlb	0	; () banked
 21019  012FD4  6FBA               	movwf	(I2C_rStart@rw+1)& (0+255),b
 21020  012FD6  0E01               	movlw	1
 21021  012FD8  6FB9               	movwf	I2C_rStart@rw& (0+255),b
 21022  012FDA  EC08  F0B4         	call	_I2C_rStart	;wreg free
 21023  012FDE  0100               	movlb	0	; () banked
 21024  012FE0  6FDA               	movwf	EEP_read32@ans& (0+255),b
 21025                           
 21026                           ; BSR set to: 0
 21027                           ;My_header\My_I2C.h: 322: if (ans == 0) {
 21028  012FE2  0100               	movlb	0	; () banked
 21029  012FE4  51DA               	movf	EEP_read32@ans& (0+255),w,b
 21030  012FE6  0100               	movlb	0	; () banked
 21031  012FE8  A4D8               	btfss	status,2,c
 21032  012FEA  D014               	goto	l390
 21033                           
 21034                           ; BSR set to: 0
 21035                           ;My_header\My_I2C.h: 323: d[3] = I2C_Receive(0);
 21036  012FEC  0E00               	movlw	0
 21037  012FEE  EC53  F0B3         	call	_I2C_Receive
 21038  012FF2  0100               	movlb	0	; () banked
 21039  012FF4  6FD9               	movwf	(EEP_read32@d+3)& (0+255),b
 21040                           
 21041                           ;My_header\My_I2C.h: 324: d[2] = I2C_Receive(0);
 21042  012FF6  0E00               	movlw	0
 21043  012FF8  EC53  F0B3         	call	_I2C_Receive
 21044  012FFC  0100               	movlb	0	; () banked
 21045  012FFE  6FD8               	movwf	(EEP_read32@d+2)& (0+255),b
 21046                           
 21047                           ;My_header\My_I2C.h: 325: d[1] = I2C_Receive(0);
 21048  013000  0E00               	movlw	0
 21049  013002  EC53  F0B3         	call	_I2C_Receive
 21050  013006  0100               	movlb	0	; () banked
 21051  013008  6FD7               	movwf	(EEP_read32@d+1)& (0+255),b
 21052                           
 21053                           ;My_header\My_I2C.h: 326: d[0] = I2C_Receive(1);
 21054  01300A  0E01               	movlw	1
 21055  01300C  EC53  F0B3         	call	_I2C_Receive
 21056  013010  0100               	movlb	0	; () banked
 21057  013012  6FD6               	movwf	EEP_read32@d& (0+255),b
 21058  013014                     l390:
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;My_header\My_I2C.h: 327: }
 21062                           ;My_header\My_I2C.h: 328: I2C_Stop();
 21063  013014  EC74  F0B5         	call	_I2C_Stop	;wreg free
 21064                           
 21065                           ;My_header\My_I2C.h: 329: _delay((unsigned long)((26)*(48000000/4000000.0)));
 21066  013018  0E68               	movlw	104
 21067  01301A                     u13407:
 21068  01301A  2EE8               	decfsz	wreg,f,c
 21069  01301C  D7FE               	goto	u13407
 21070                           
 21071                           ;My_header\My_I2C.h: 330: return ((uint32_t) d[3] << 24) + ((uint32_t) d[2] << 16) + (d[
      +                          1] << 8) + d[0];
 21072  01301E  0100               	movlb	0	; () banked
 21073  013020  51D7               	movf	(EEP_read32@d+1)& (0+255),w,b
 21074  013022  0100               	movlb	0	; () banked
 21075  013024  6FC0               	movwf	(??_EEP_read32+1)& (0+255),b
 21076  013026  6BBF               	clrf	??_EEP_read32& (0+255),b
 21077  013028  C0BF  F0C1         	movff	??_EEP_read32,??_EEP_read32+2
 21078  01302C  C0C0  F0C2         	movff	??_EEP_read32+1,??_EEP_read32+3
 21079  013030  0E00               	movlw	0
 21080  013032  0100               	movlb	0	; () banked
 21081  013034  BFC2               	btfsc	(??_EEP_read32+3)& (0+255),7,b
 21082  013036  0EFF               	movlw	255
 21083  013038  6FC3               	movwf	(??_EEP_read32+4)& (0+255),b
 21084  01303A  6FC4               	movwf	(??_EEP_read32+5)& (0+255),b
 21085  01303C  C0D8  F0C5         	movff	EEP_read32@d+2,??_EEP_read32+6
 21086  013040  0100               	movlb	0	; () banked
 21087  013042  6BC6               	clrf	(??_EEP_read32+7)& (0+255),b
 21088  013044  6BC7               	clrf	(??_EEP_read32+8)& (0+255),b
 21089  013046  6BC8               	clrf	(??_EEP_read32+9)& (0+255),b
 21090  013048  C0C6  F0C8         	movff	??_EEP_read32+7,??_EEP_read32+9
 21091  01304C  C0C5  F0C7         	movff	??_EEP_read32+6,??_EEP_read32+8
 21092  013050  0100               	movlb	0	; () banked
 21093  013052  6BC6               	clrf	(??_EEP_read32+7)& (0+255),b
 21094  013054  6BC5               	clrf	(??_EEP_read32+6)& (0+255),b
 21095  013056  C0D9  F0C9         	movff	EEP_read32@d+3,??_EEP_read32+10
 21096  01305A  0100               	movlb	0	; () banked
 21097  01305C  6BCA               	clrf	(??_EEP_read32+11)& (0+255),b
 21098  01305E  6BCB               	clrf	(??_EEP_read32+12)& (0+255),b
 21099  013060  6BCC               	clrf	(??_EEP_read32+13)& (0+255),b
 21100  013062  C0C9  F0CC         	movff	??_EEP_read32+10,??_EEP_read32+13
 21101  013066  0100               	movlb	0	; () banked
 21102  013068  6BCB               	clrf	(??_EEP_read32+12)& (0+255),b
 21103  01306A  6BCA               	clrf	(??_EEP_read32+11)& (0+255),b
 21104  01306C  6BC9               	clrf	(??_EEP_read32+10)& (0+255),b
 21105  01306E  0100               	movlb	0	; () banked
 21106  013070  51C5               	movf	(??_EEP_read32+6)& (0+255),w,b
 21107  013072  0100               	movlb	0	; () banked
 21108  013074  25C9               	addwf	(??_EEP_read32+10)& (0+255),w,b
 21109  013076  0100               	movlb	0	; () banked
 21110  013078  6FCD               	movwf	(??_EEP_read32+14)& (0+255),b
 21111  01307A  0100               	movlb	0	; () banked
 21112  01307C  51C6               	movf	(??_EEP_read32+7)& (0+255),w,b
 21113  01307E  0100               	movlb	0	; () banked
 21114  013080  21CA               	addwfc	(??_EEP_read32+11)& (0+255),w,b
 21115  013082  0100               	movlb	0	; () banked
 21116  013084  6FCE               	movwf	(??_EEP_read32+15)& (0+255),b
 21117  013086  0100               	movlb	0	; () banked
 21118  013088  51C7               	movf	(??_EEP_read32+8)& (0+255),w,b
 21119  01308A  0100               	movlb	0	; () banked
 21120  01308C  21CB               	addwfc	(??_EEP_read32+12)& (0+255),w,b
 21121  01308E  0100               	movlb	0	; () banked
 21122  013090  6FCF               	movwf	(??_EEP_read32+16)& (0+255),b
 21123  013092  0100               	movlb	0	; () banked
 21124  013094  51C8               	movf	(??_EEP_read32+9)& (0+255),w,b
 21125  013096  0100               	movlb	0	; () banked
 21126  013098  21CC               	addwfc	(??_EEP_read32+13)& (0+255),w,b
 21127  01309A  0100               	movlb	0	; () banked
 21128  01309C  6FD0               	movwf	(??_EEP_read32+17)& (0+255),b
 21129  01309E  0100               	movlb	0	; () banked
 21130  0130A0  51C1               	movf	(??_EEP_read32+2)& (0+255),w,b
 21131  0130A2  0100               	movlb	0	; () banked
 21132  0130A4  25CD               	addwf	(??_EEP_read32+14)& (0+255),w,b
 21133  0130A6  0100               	movlb	0	; () banked
 21134  0130A8  6FD1               	movwf	(??_EEP_read32+18)& (0+255),b
 21135  0130AA  0100               	movlb	0	; () banked
 21136  0130AC  51C2               	movf	(??_EEP_read32+3)& (0+255),w,b
 21137  0130AE  0100               	movlb	0	; () banked
 21138  0130B0  21CE               	addwfc	(??_EEP_read32+15)& (0+255),w,b
 21139  0130B2  0100               	movlb	0	; () banked
 21140  0130B4  6FD2               	movwf	(??_EEP_read32+19)& (0+255),b
 21141  0130B6  0100               	movlb	0	; () banked
 21142  0130B8  51C3               	movf	(??_EEP_read32+4)& (0+255),w,b
 21143  0130BA  0100               	movlb	0	; () banked
 21144  0130BC  21CF               	addwfc	(??_EEP_read32+16)& (0+255),w,b
 21145  0130BE  0100               	movlb	0	; () banked
 21146  0130C0  6FD3               	movwf	(??_EEP_read32+20)& (0+255),b
 21147  0130C2  0100               	movlb	0	; () banked
 21148  0130C4  51C4               	movf	(??_EEP_read32+5)& (0+255),w,b
 21149  0130C6  0100               	movlb	0	; () banked
 21150  0130C8  21D0               	addwfc	(??_EEP_read32+17)& (0+255),w,b
 21151  0130CA  0100               	movlb	0	; () banked
 21152  0130CC  6FD4               	movwf	(??_EEP_read32+21)& (0+255),b
 21153  0130CE  0100               	movlb	0	; () banked
 21154  0130D0  51D6               	movf	EEP_read32@d& (0+255),w,b
 21155  0130D2  0100               	movlb	0	; () banked
 21156  0130D4  25D1               	addwf	(??_EEP_read32+18)& (0+255),w,b
 21157  0130D6  0100               	movlb	0	; () banked
 21158  0130D8  6FBB               	movwf	?_EEP_read32& (0+255),b
 21159  0130DA  0E00               	movlw	0
 21160  0130DC  0100               	movlb	0	; () banked
 21161  0130DE  21D2               	addwfc	(??_EEP_read32+19)& (0+255),w,b
 21162  0130E0  0100               	movlb	0	; () banked
 21163  0130E2  6FBC               	movwf	(?_EEP_read32+1)& (0+255),b
 21164  0130E4  0E00               	movlw	0
 21165  0130E6  0100               	movlb	0	; () banked
 21166  0130E8  21D3               	addwfc	(??_EEP_read32+20)& (0+255),w,b
 21167  0130EA  0100               	movlb	0	; () banked
 21168  0130EC  6FBD               	movwf	(?_EEP_read32+2)& (0+255),b
 21169  0130EE  0E00               	movlw	0
 21170  0130F0  0100               	movlb	0	; () banked
 21171  0130F2  21D4               	addwfc	(??_EEP_read32+21)& (0+255),w,b
 21172  0130F4  0100               	movlb	0	; () banked
 21173  0130F6  6FBE               	movwf	(?_EEP_read32+3)& (0+255),b
 21174  0130F8  0012               	return	
 21175  0130FA                     __end_of_EEP_read32:
 21176                           	opt stack 0
 21177                           tblptru	equ	0xFF8
 21178                           tblptrh	equ	0xFF7
 21179                           tblptrl	equ	0xFF6
 21180                           tablat	equ	0xFF5
 21181                           prodh	equ	0xFF4
 21182                           prodl	equ	0xFF3
 21183                           intcon	equ	0xFF2
 21184                           intcon2	equ	0xFF1
 21185                           postinc0	equ	0xFEE
 21186                           wreg	equ	0xFE8
 21187                           indf1	equ	0xFE7
 21188                           postinc1	equ	0xFE6
 21189                           postdec1	equ	0xFE5
 21190                           fsr1h	equ	0xFE2
 21191                           fsr1l	equ	0xFE1
 21192                           indf2	equ	0xFDF
 21193                           postinc2	equ	0xFDE
 21194                           postdec2	equ	0xFDD
 21195                           plusw2	equ	0xFDB
 21196                           fsr2h	equ	0xFDA
 21197                           fsr2l	equ	0xFD9
 21198                           status	equ	0xFD8
 21199                           
 21200 ;; *************** function _I2C_rStart *****************
 21201 ;; Defined at:
 21202 ;;		line 47 in file "../My_header\My_I2C.h"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;  adrs            2    2[BANK0 ] int 
 21205 ;;  rw              2    4[BANK0 ] int 
 21206 ;; Auto vars:     Size  Location     Type
 21207 ;;		None
 21208 ;; Return value:  Size  Location     Type
 21209 ;;                  1    wreg      unsigned char 
 21210 ;; Registers used:
 21211 ;;		wreg, status,2, status,0, cstack
 21212 ;; Tracked objects:
 21213 ;;		On entry : 0/0
 21214 ;;		On exit  : 0/0
 21215 ;;		Unchanged: 0/0
 21216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21217 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21221 ;;Total ram usage:        4 bytes
 21222 ;; Hardware stack levels used:    1
 21223 ;; Hardware stack levels required when called:   12
 21224 ;; This function calls:
 21225 ;;		_I2C_IdleCheck
 21226 ;; This function is called by:
 21227 ;;		_EEP_read32
 21228 ;;		_EEP_read
 21229 ;;		_EEP_read16
 21230 ;; This function uses a non-reentrant model
 21231 ;;
 21232                           
 21233                           	psect	text89
 21234  016810                     __ptext89:
 21235                           	opt stack 0
 21236  016810                     _I2C_rStart:
 21237                           	opt stack 17
 21238                           
 21239                           ;My_header\My_I2C.h: 49: I2C_IdleCheck(0x5);
 21240                           
 21241                           ; BSR set to: 0
 21242                           ;incstack = 0
 21243  016810  0E05               	movlw	5
 21244  016812  EC01  F0B5         	call	_I2C_IdleCheck
 21245                           
 21246                           ;My_header\My_I2C.h: 50: SSP1CON2bits.RSEN = 1;
 21247  016816  82C5               	bsf	4037,1,c	;volatile
 21248                           
 21249                           ;My_header\My_I2C.h: 52: I2C_IdleCheck(0x5);
 21250  016818  0E05               	movlw	5
 21251  01681A  EC01  F0B5         	call	_I2C_IdleCheck
 21252                           
 21253                           ;My_header\My_I2C.h: 53: SSP1IF = 0;
 21254  01681E  969E               	bcf	3998,3,c	;volatile
 21255                           
 21256                           ;My_header\My_I2C.h: 54: SSP1BUF = (char) ((adrs << 1) + rw);
 21257  016820  0100               	movlb	0	; () banked
 21258  016822  51B7               	movf	I2C_rStart@adrs& (0+255),w,b
 21259  016824  25B7               	addwf	I2C_rStart@adrs& (0+255),w,b
 21260  016826  0100               	movlb	0	; () banked
 21261  016828  25B9               	addwf	I2C_rStart@rw& (0+255),w,b
 21262  01682A  6EC9               	movwf	4041,c	;volatile
 21263  01682C                     l325:
 21264  01682C  A69E               	btfss	3998,3,c	;volatile
 21265  01682E  D7FE               	goto	l325
 21266                           
 21267                           ;My_header\My_I2C.h: 56: return SSP1CON2bits.ACKSTAT;
 21268  016830  ACC5               	btfss	4037,6,c	;volatile
 21269  016832  D002               	goto	u11900
 21270  016834  0E01               	movlw	1
 21271  016836  0012               	return	
 21272  016838                     u11900:
 21273  016838  0E00               	movlw	0
 21274  01683A  0012               	return	
 21275  01683C                     __end_of_I2C_rStart:
 21276                           	opt stack 0
 21277                           tblptru	equ	0xFF8
 21278                           tblptrh	equ	0xFF7
 21279                           tblptrl	equ	0xFF6
 21280                           tablat	equ	0xFF5
 21281                           prodh	equ	0xFF4
 21282                           prodl	equ	0xFF3
 21283                           intcon	equ	0xFF2
 21284                           intcon2	equ	0xFF1
 21285                           postinc0	equ	0xFEE
 21286                           wreg	equ	0xFE8
 21287                           indf1	equ	0xFE7
 21288                           postinc1	equ	0xFE6
 21289                           postdec1	equ	0xFE5
 21290                           fsr1h	equ	0xFE2
 21291                           fsr1l	equ	0xFE1
 21292                           indf2	equ	0xFDF
 21293                           postinc2	equ	0xFDE
 21294                           postdec2	equ	0xFDD
 21295                           plusw2	equ	0xFDB
 21296                           fsr2h	equ	0xFDA
 21297                           fsr2l	equ	0xFD9
 21298                           status	equ	0xFD8
 21299                           
 21300 ;; *************** function _I2C_Stop *****************
 21301 ;; Defined at:
 21302 ;;		line 59 in file "../My_header\My_I2C.h"
 21303 ;; Parameters:    Size  Location     Type
 21304 ;;		None
 21305 ;; Auto vars:     Size  Location     Type
 21306 ;;		None
 21307 ;; Return value:  Size  Location     Type
 21308 ;;		None               void
 21309 ;; Registers used:
 21310 ;;		wreg, status,2, status,0, cstack
 21311 ;; Tracked objects:
 21312 ;;		On entry : 0/0
 21313 ;;		On exit  : 0/0
 21314 ;;		Unchanged: 0/0
 21315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21320 ;;Total ram usage:        0 bytes
 21321 ;; Hardware stack levels used:    1
 21322 ;; Hardware stack levels required when called:   12
 21323 ;; This function calls:
 21324 ;;		_I2C_IdleCheck
 21325 ;; This function is called by:
 21326 ;;		_I2C_LCD_Command
 21327 ;;		_I2C_LCD_Putc
 21328 ;;		_I2C_LCD_Puts
 21329 ;;		_EEP_read32
 21330 ;;		_I2C_LCD_CreateChar
 21331 ;;		_EEP_write
 21332 ;;		_EEP_read
 21333 ;;		_EEP_read16
 21334 ;;		_EEP_write16
 21335 ;; This function uses a non-reentrant model
 21336 ;;
 21337                           
 21338                           	psect	text90
 21339  016AE8                     __ptext90:
 21340                           	opt stack 0
 21341  016AE8                     _I2C_Stop:
 21342                           	opt stack 15
 21343                           
 21344                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 21345                           
 21346                           ;incstack = 0
 21347  016AE8  0E05               	movlw	5
 21348  016AEA  EC01  F0B5         	call	_I2C_IdleCheck
 21349                           
 21350                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 21351  016AEE  84C5               	bsf	4037,2,c	;volatile
 21352  016AF0  0012               	return		;funcret
 21353  016AF2                     __end_of_I2C_Stop:
 21354                           	opt stack 0
 21355                           tblptru	equ	0xFF8
 21356                           tblptrh	equ	0xFF7
 21357                           tblptrl	equ	0xFF6
 21358                           tablat	equ	0xFF5
 21359                           prodh	equ	0xFF4
 21360                           prodl	equ	0xFF3
 21361                           intcon	equ	0xFF2
 21362                           intcon2	equ	0xFF1
 21363                           postinc0	equ	0xFEE
 21364                           wreg	equ	0xFE8
 21365                           indf1	equ	0xFE7
 21366                           postinc1	equ	0xFE6
 21367                           postdec1	equ	0xFE5
 21368                           fsr1h	equ	0xFE2
 21369                           fsr1l	equ	0xFE1
 21370                           indf2	equ	0xFDF
 21371                           postinc2	equ	0xFDE
 21372                           postdec2	equ	0xFDD
 21373                           plusw2	equ	0xFDB
 21374                           fsr2h	equ	0xFDA
 21375                           fsr2l	equ	0xFD9
 21376                           status	equ	0xFD8
 21377                           
 21378 ;; *************** function _I2C_Start *****************
 21379 ;; Defined at:
 21380 ;;		line 35 in file "../My_header\My_I2C.h"
 21381 ;; Parameters:    Size  Location     Type
 21382 ;;  adrs            1    wreg     unsigned char 
 21383 ;;  rw              1    2[BANK0 ] unsigned char 
 21384 ;; Auto vars:     Size  Location     Type
 21385 ;;  adrs            1    3[BANK0 ] unsigned char 
 21386 ;; Return value:  Size  Location     Type
 21387 ;;                  1    wreg      unsigned char 
 21388 ;; Registers used:
 21389 ;;		wreg, status,2, status,0, cstack
 21390 ;; Tracked objects:
 21391 ;;		On entry : 0/0
 21392 ;;		On exit  : 0/0
 21393 ;;		Unchanged: 0/0
 21394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21395 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21399 ;;Total ram usage:        2 bytes
 21400 ;; Hardware stack levels used:    1
 21401 ;; Hardware stack levels required when called:   12
 21402 ;; This function calls:
 21403 ;;		_I2C_IdleCheck
 21404 ;; This function is called by:
 21405 ;;		_I2C_LCD_Command
 21406 ;;		_I2C_LCD_Putc
 21407 ;;		_I2C_LCD_Puts
 21408 ;;		_EEP_read32
 21409 ;;		_I2C_LCD_CreateChar
 21410 ;;		_EEP_write
 21411 ;;		_EEP_read
 21412 ;;		_EEP_read16
 21413 ;;		_EEP_write16
 21414 ;; This function uses a non-reentrant model
 21415 ;;
 21416                           
 21417                           	psect	text91
 21418  016676                     __ptext91:
 21419                           	opt stack 0
 21420  016676                     _I2C_Start:
 21421                           	opt stack 15
 21422                           
 21423                           ;incstack = 0
 21424                           ;I2C_Start@adrs stored from wreg
 21425  016676  0100               	movlb	0	; () banked
 21426  016678  6FB8               	movwf	I2C_Start@adrs& (0+255),b
 21427                           
 21428                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 21429  01667A  0E05               	movlw	5
 21430  01667C  EC01  F0B5         	call	_I2C_IdleCheck
 21431                           
 21432                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 21433  016680  80C5               	bsf	4037,0,c	;volatile
 21434                           
 21435                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 21436  016682  0E05               	movlw	5
 21437  016684  EC01  F0B5         	call	_I2C_IdleCheck
 21438                           
 21439                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 21440  016688  969E               	bcf	3998,3,c	;volatile
 21441                           
 21442                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 21443  01668A  0100               	movlb	0	; () banked
 21444  01668C  51B8               	movf	I2C_Start@adrs& (0+255),w,b
 21445  01668E  25B8               	addwf	I2C_Start@adrs& (0+255),w,b
 21446  016690  0100               	movlb	0	; () banked
 21447  016692  25B7               	addwf	I2C_Start@rw& (0+255),w,b
 21448  016694  6EC9               	movwf	4041,c	;volatile
 21449  016696                     l319:
 21450  016696  A69E               	btfss	3998,3,c	;volatile
 21451  016698  D7FE               	goto	l319
 21452                           
 21453                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 21454  01669A  ACC5               	btfss	4037,6,c	;volatile
 21455  01669C  D002               	goto	u10350
 21456  01669E  0E01               	movlw	1
 21457  0166A0  0012               	return	
 21458  0166A2                     u10350:
 21459  0166A2  0E00               	movlw	0
 21460  0166A4  0012               	return	
 21461  0166A6                     __end_of_I2C_Start:
 21462                           	opt stack 0
 21463                           tblptru	equ	0xFF8
 21464                           tblptrh	equ	0xFF7
 21465                           tblptrl	equ	0xFF6
 21466                           tablat	equ	0xFF5
 21467                           prodh	equ	0xFF4
 21468                           prodl	equ	0xFF3
 21469                           intcon	equ	0xFF2
 21470                           intcon2	equ	0xFF1
 21471                           postinc0	equ	0xFEE
 21472                           wreg	equ	0xFE8
 21473                           indf1	equ	0xFE7
 21474                           postinc1	equ	0xFE6
 21475                           postdec1	equ	0xFE5
 21476                           fsr1h	equ	0xFE2
 21477                           fsr1l	equ	0xFE1
 21478                           indf2	equ	0xFDF
 21479                           postinc2	equ	0xFDE
 21480                           postdec2	equ	0xFDD
 21481                           plusw2	equ	0xFDB
 21482                           fsr2h	equ	0xFDA
 21483                           fsr2l	equ	0xFD9
 21484                           status	equ	0xFD8
 21485                           
 21486 ;; *************** function _I2C_Send *****************
 21487 ;; Defined at:
 21488 ;;		line 65 in file "../My_header\My_I2C.h"
 21489 ;; Parameters:    Size  Location     Type
 21490 ;;  data            1    wreg     unsigned char 
 21491 ;; Auto vars:     Size  Location     Type
 21492 ;;  data            1    2[BANK0 ] unsigned char 
 21493 ;; Return value:  Size  Location     Type
 21494 ;;                  1    wreg      unsigned char 
 21495 ;; Registers used:
 21496 ;;		wreg, status,2, status,0, cstack
 21497 ;; Tracked objects:
 21498 ;;		On entry : 0/0
 21499 ;;		On exit  : 0/0
 21500 ;;		Unchanged: 0/0
 21501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21505 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21506 ;;Total ram usage:        1 bytes
 21507 ;; Hardware stack levels used:    1
 21508 ;; Hardware stack levels required when called:   12
 21509 ;; This function calls:
 21510 ;;		_I2C_IdleCheck
 21511 ;; This function is called by:
 21512 ;;		_I2C_LCD_Command
 21513 ;;		_I2C_LCD_Putc
 21514 ;;		_I2C_LCD_Puts
 21515 ;;		_EEP_read32
 21516 ;;		_I2C_LCD_CreateChar
 21517 ;;		_EEP_write
 21518 ;;		_EEP_read
 21519 ;;		_EEP_read16
 21520 ;;		_EEP_write16
 21521 ;; This function uses a non-reentrant model
 21522 ;;
 21523                           
 21524                           	psect	text92
 21525  016A72                     __ptext92:
 21526                           	opt stack 0
 21527  016A72                     _I2C_Send:
 21528                           	opt stack 15
 21529                           
 21530                           ;incstack = 0
 21531                           ;I2C_Send@data stored from wreg
 21532  016A72  0100               	movlb	0	; () banked
 21533  016A74  6FB7               	movwf	I2C_Send@data& (0+255),b
 21534                           
 21535                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 21536  016A76  0E05               	movlw	5
 21537  016A78  EC01  F0B5         	call	_I2C_IdleCheck
 21538                           
 21539                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 21540  016A7C  969E               	bcf	3998,3,c	;volatile
 21541                           
 21542                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 21543  016A7E  C0B7  FFC9         	movff	I2C_Send@data,4041	;volatile
 21544  016A82                     l334:
 21545  016A82  A69E               	btfss	3998,3,c	;volatile
 21546  016A84  D7FE               	goto	l334
 21547                           
 21548                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 21549                           ;	Return value of _I2C_Send is never used
 21550  016A86  50C5               	movf	4037,w,c	;volatile
 21551  016A88  0012               	return	
 21552  016A8A                     __end_of_I2C_Send:
 21553                           	opt stack 0
 21554                           tblptru	equ	0xFF8
 21555                           tblptrh	equ	0xFF7
 21556                           tblptrl	equ	0xFF6
 21557                           tablat	equ	0xFF5
 21558                           prodh	equ	0xFF4
 21559                           prodl	equ	0xFF3
 21560                           intcon	equ	0xFF2
 21561                           intcon2	equ	0xFF1
 21562                           postinc0	equ	0xFEE
 21563                           wreg	equ	0xFE8
 21564                           indf1	equ	0xFE7
 21565                           postinc1	equ	0xFE6
 21566                           postdec1	equ	0xFE5
 21567                           fsr1h	equ	0xFE2
 21568                           fsr1l	equ	0xFE1
 21569                           indf2	equ	0xFDF
 21570                           postinc2	equ	0xFDE
 21571                           postdec2	equ	0xFDD
 21572                           plusw2	equ	0xFDB
 21573                           fsr2h	equ	0xFDA
 21574                           fsr2l	equ	0xFD9
 21575                           status	equ	0xFD8
 21576                           
 21577 ;; *************** function _I2C_Receive *****************
 21578 ;; Defined at:
 21579 ;;		line 73 in file "../My_header\My_I2C.h"
 21580 ;; Parameters:    Size  Location     Type
 21581 ;;  ack             1    wreg     unsigned char 
 21582 ;; Auto vars:     Size  Location     Type
 21583 ;;  ack             1    2[BANK0 ] unsigned char 
 21584 ;;  data            1    3[BANK0 ] unsigned char 
 21585 ;; Return value:  Size  Location     Type
 21586 ;;                  1    wreg      unsigned char 
 21587 ;; Registers used:
 21588 ;;		wreg, status,2, status,0, cstack
 21589 ;; Tracked objects:
 21590 ;;		On entry : 0/0
 21591 ;;		On exit  : 0/0
 21592 ;;		Unchanged: 0/0
 21593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21597 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21598 ;;Total ram usage:        2 bytes
 21599 ;; Hardware stack levels used:    1
 21600 ;; Hardware stack levels required when called:   12
 21601 ;; This function calls:
 21602 ;;		_I2C_IdleCheck
 21603 ;; This function is called by:
 21604 ;;		_EEP_read32
 21605 ;;		_EEP_read
 21606 ;;		_EEP_read16
 21607 ;; This function uses a non-reentrant model
 21608 ;;
 21609                           
 21610                           	psect	text93
 21611  0166A6                     __ptext93:
 21612                           	opt stack 0
 21613  0166A6                     _I2C_Receive:
 21614                           	opt stack 17
 21615                           
 21616                           ;incstack = 0
 21617                           ;I2C_Receive@ack stored from wreg
 21618  0166A6  0100               	movlb	0	; () banked
 21619  0166A8  6FB7               	movwf	I2C_Receive@ack& (0+255),b
 21620                           
 21621                           ;My_header\My_I2C.h: 74: uint8_t data;
 21622                           ;My_header\My_I2C.h: 76: I2C_IdleCheck(0x5);
 21623  0166AA  0E05               	movlw	5
 21624  0166AC  EC01  F0B5         	call	_I2C_IdleCheck
 21625                           
 21626                           ;My_header\My_I2C.h: 77: SSP1CON2bits.RCEN = 1;
 21627  0166B0  86C5               	bsf	4037,3,c	;volatile
 21628                           
 21629                           ;My_header\My_I2C.h: 78: I2C_IdleCheck(0x4);
 21630  0166B2  0E04               	movlw	4
 21631  0166B4  EC01  F0B5         	call	_I2C_IdleCheck
 21632                           
 21633                           ;My_header\My_I2C.h: 79: data = SSP1BUF;
 21634  0166B8  CFC9 F0B8          	movff	4041,I2C_Receive@data	;volatile
 21635                           
 21636                           ;My_header\My_I2C.h: 80: I2C_IdleCheck(0x5);
 21637  0166BC  0E05               	movlw	5
 21638  0166BE  EC01  F0B5         	call	_I2C_IdleCheck
 21639                           
 21640                           ;My_header\My_I2C.h: 81: SSP1CON2bits.ACKDT = ack;
 21641  0166C2  0100               	movlb	0	; () banked
 21642  0166C4  B1B7               	btfsc	I2C_Receive@ack& (0+255),0,b
 21643  0166C6  D002               	bra	u11915
 21644  0166C8  9AC5               	bcf	4037,5,c	;volatile
 21645  0166CA  D001               	bra	u11916
 21646  0166CC                     u11915:
 21647  0166CC  8AC5               	bsf	4037,5,c	;volatile
 21648  0166CE                     u11916:
 21649                           
 21650                           ;My_header\My_I2C.h: 82: SSP1CON2bits.ACKEN = 1;
 21651  0166CE  88C5               	bsf	4037,4,c	;volatile
 21652                           
 21653                           ;My_header\My_I2C.h: 83: return data;
 21654  0166D0  0100               	movlb	0	; () banked
 21655  0166D2  51B8               	movf	I2C_Receive@data& (0+255),w,b
 21656  0166D4  0012               	return	
 21657  0166D6                     __end_of_I2C_Receive:
 21658                           	opt stack 0
 21659                           tblptru	equ	0xFF8
 21660                           tblptrh	equ	0xFF7
 21661                           tblptrl	equ	0xFF6
 21662                           tablat	equ	0xFF5
 21663                           prodh	equ	0xFF4
 21664                           prodl	equ	0xFF3
 21665                           intcon	equ	0xFF2
 21666                           intcon2	equ	0xFF1
 21667                           postinc0	equ	0xFEE
 21668                           wreg	equ	0xFE8
 21669                           indf1	equ	0xFE7
 21670                           postinc1	equ	0xFE6
 21671                           postdec1	equ	0xFE5
 21672                           fsr1h	equ	0xFE2
 21673                           fsr1l	equ	0xFE1
 21674                           indf2	equ	0xFDF
 21675                           postinc2	equ	0xFDE
 21676                           postdec2	equ	0xFDD
 21677                           plusw2	equ	0xFDB
 21678                           fsr2h	equ	0xFDA
 21679                           fsr2l	equ	0xFD9
 21680                           status	equ	0xFD8
 21681                           
 21682 ;; *************** function _I2C_IdleCheck *****************
 21683 ;; Defined at:
 21684 ;;		line 21 in file "../My_header\My_I2C.h"
 21685 ;; Parameters:    Size  Location     Type
 21686 ;;  mask            1    wreg     unsigned char 
 21687 ;; Auto vars:     Size  Location     Type
 21688 ;;  mask            1    1[BANK0 ] unsigned char 
 21689 ;; Return value:  Size  Location     Type
 21690 ;;		None               void
 21691 ;; Registers used:
 21692 ;;		wreg, status,2, status,0
 21693 ;; Tracked objects:
 21694 ;;		On entry : 0/0
 21695 ;;		On exit  : 0/0
 21696 ;;		Unchanged: 0/0
 21697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21702 ;;Total ram usage:        2 bytes
 21703 ;; Hardware stack levels used:    1
 21704 ;; Hardware stack levels required when called:   11
 21705 ;; This function calls:
 21706 ;;		Nothing
 21707 ;; This function is called by:
 21708 ;;		_I2C_Start
 21709 ;;		_I2C_rStart
 21710 ;;		_I2C_Stop
 21711 ;;		_I2C_Send
 21712 ;;		_I2C_Receive
 21713 ;; This function uses a non-reentrant model
 21714 ;;
 21715                           
 21716                           	psect	text94
 21717  016A02                     __ptext94:
 21718                           	opt stack 0
 21719  016A02                     _I2C_IdleCheck:
 21720                           	opt stack 15
 21721                           
 21722                           ; BSR set to: 0
 21723                           ;incstack = 0
 21724                           ;I2C_IdleCheck@mask stored from wreg
 21725  016A02  0100               	movlb	0	; () banked
 21726  016A04  6FB6               	movwf	I2C_IdleCheck@mask& (0+255),b
 21727  016A06                     l9404:
 21728  016A06  50C7               	movf	4039,w,c	;volatile
 21729  016A08  0100               	movlb	0	; () banked
 21730  016A0A  15B6               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 21731  016A0C  0100               	movlb	0	; () banked
 21732  016A0E  6FB5               	movwf	??_I2C_IdleCheck& (0+255),b
 21733  016A10  50C5               	movf	4037,w,c	;volatile
 21734  016A12  0B1F               	andlw	31
 21735  016A14  0100               	movlb	0	; () banked
 21736  016A16  11B5               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 21737  016A18  0900               	iorlw	0
 21738  016A1A  B4D8               	btfsc	status,2,c
 21739  016A1C  0012               	return	
 21740  016A1E  D7F3               	goto	l9404
 21741  016A20                     __end_of_I2C_IdleCheck:
 21742                           	opt stack 0
 21743                           tblptru	equ	0xFF8
 21744                           tblptrh	equ	0xFF7
 21745                           tblptrl	equ	0xFF6
 21746                           tablat	equ	0xFF5
 21747                           prodh	equ	0xFF4
 21748                           prodl	equ	0xFF3
 21749                           intcon	equ	0xFF2
 21750                           intcon2	equ	0xFF1
 21751                           postinc0	equ	0xFEE
 21752                           wreg	equ	0xFE8
 21753                           indf1	equ	0xFE7
 21754                           postinc1	equ	0xFE6
 21755                           postdec1	equ	0xFE5
 21756                           fsr1h	equ	0xFE2
 21757                           fsr1l	equ	0xFE1
 21758                           indf2	equ	0xFDF
 21759                           postinc2	equ	0xFDE
 21760                           postdec2	equ	0xFDD
 21761                           plusw2	equ	0xFDB
 21762                           fsr2h	equ	0xFDA
 21763                           fsr2l	equ	0xFD9
 21764                           status	equ	0xFD8
 21765                           
 21766 ;; *************** function _ISR *****************
 21767 ;; Defined at:
 21768 ;;		line 48 in file "main.c"
 21769 ;; Parameters:    Size  Location     Type
 21770 ;;		None
 21771 ;; Auto vars:     Size  Location     Type
 21772 ;;		None
 21773 ;; Return value:  Size  Location     Type
 21774 ;;		None               void
 21775 ;; Registers used:
 21776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21777 ;; Tracked objects:
 21778 ;;		On entry : 0/0
 21779 ;;		On exit  : 0/0
 21780 ;;		Unchanged: 0/0
 21781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21784 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21785 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21786 ;;Total ram usage:       14 bytes
 21787 ;; Hardware stack levels used:    1
 21788 ;; Hardware stack levels required when called:   10
 21789 ;; This function calls:
 21790 ;;		_LED_indicator
 21791 ;;		_USB_ISR
 21792 ;;		_charge_time_count
 21793 ;;		_delay_timer_interrupt
 21794 ;;		_integrating
 21795 ;; This function is called by:
 21796 ;;		Interrupt level 2
 21797 ;; This function uses a non-reentrant model
 21798 ;;
 21799                           
 21800                           	psect	intcode
 21801  000008                     __pintcode:
 21802                           	opt stack 0
 21803  000008                     _ISR:
 21804                           	opt stack 12
 21805                           
 21806                           ; BSR set to: 0
 21807                           ;incstack = 0
 21808  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21809  00000A  CFFA F01F          	movff	pclath,??_ISR
 21810  00000E  CFFB F020          	movff	pclatu,??_ISR+1
 21811  000012  CFE9 F021          	movff	fsr0l,??_ISR+2
 21812  000016  CFEA F022          	movff	fsr0h,??_ISR+3
 21813  00001A  CFE1 F023          	movff	fsr1l,??_ISR+4
 21814  00001E  CFE2 F024          	movff	fsr1h,??_ISR+5
 21815  000022  CFD9 F025          	movff	fsr2l,??_ISR+6
 21816  000026  CFDA F026          	movff	fsr2h,??_ISR+7
 21817  00002A  CFF3 F027          	movff	prodl,??_ISR+8
 21818  00002E  CFF4 F028          	movff	prodh,??_ISR+9
 21819  000032  CFF6 F029          	movff	tblptrl,??_ISR+10
 21820  000036  CFF7 F02A          	movff	tblptrh,??_ISR+11
 21821  00003A  CFF8 F02B          	movff	tblptru,??_ISR+12
 21822  00003E  CFF5 F02C          	movff	tablat,??_ISR+13
 21823                           
 21824                           ;main.c: 50: USB_ISR();
 21825  000042  EC7E  F0B5         	call	_USB_ISR	;wreg free
 21826                           
 21827                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 21828  000046  B4F2               	btfsc	intcon,2,c	;volatile
 21829  000048  AAF2               	btfss	intcon,5,c	;volatile
 21830  00004A  D00F               	goto	i2l9162
 21831                           
 21832                           ;main.c: 52: INTCONbits.T0IF = 0;
 21833  00004C  94F2               	bcf	intcon,2,c	;volatile
 21834                           
 21835                           ;main.c: 53: static uint16_t cnt_t0;
 21836                           ;main.c: 54: if (cnt_t0) {
 21837  00004E  5033               	movf	ISR@cnt_t0,w,c
 21838  000050  1034               	iorwf	ISR@cnt_t0+1,w,c
 21839  000052  B4D8               	btfsc	status,2,c
 21840  000054  D004               	goto	i2l9158
 21841                           
 21842                           ;main.c: 55: cnt_t0--;
 21843  000056  0633               	decf	ISR@cnt_t0,f,c
 21844  000058  A0D8               	btfss	status,0,c
 21845  00005A  0634               	decf	ISR@cnt_t0+1,f,c
 21846                           
 21847                           ;main.c: 56: } else {
 21848  00005C  D006               	goto	i2l9162
 21849  00005E                     i2l9158:
 21850                           
 21851                           ;main.c: 57: cnt_t0 = 120;
 21852  00005E  0E00               	movlw	0
 21853  000060  6E34               	movwf	ISR@cnt_t0+1,c
 21854  000062  0E78               	movlw	120
 21855  000064  6E33               	movwf	ISR@cnt_t0,c
 21856                           
 21857                           ;main.c: 58: LED_indicator();
 21858  000066  EC3C  F09C         	call	_LED_indicator	;wreg free
 21859  00006A                     i2l9162:
 21860                           
 21861                           ;main.c: 59: }
 21862                           ;main.c: 60: }
 21863                           ;main.c: 61: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 21864  00006A  B09E               	btfsc	3998,0,c	;volatile
 21865  00006C  A09D               	btfss	3997,0,c	;volatile
 21866  00006E  D013               	goto	i2l9178
 21867                           
 21868                           ;main.c: 62: PIR1bits.TMR1IF = 0;
 21869  000070  909E               	bcf	3998,0,c	;volatile
 21870                           
 21871                           ;main.c: 63: TMR1H = 0xC0;
 21872  000072  0EC0               	movlw	192
 21873  000074  6ECF               	movwf	4047,c	;volatile
 21874                           
 21875                           ;main.c: 64: cut_time_flag = 1;
 21876  000076  0E01               	movlw	1
 21877  000078  6E4B               	movwf	_cut_time_flag,c
 21878                           
 21879                           ;main.c: 65: static uint8_t cnt_t1 = 0;
 21880                           ;main.c: 66: if (cnt_t1) {
 21881  00007A  503F               	movf	ISR@cnt_t1,w,c
 21882  00007C  B4D8               	btfsc	status,2,c
 21883  00007E  D003               	goto	i2l9172
 21884                           
 21885                           ;main.c: 67: cnt_t1 = 0;
 21886  000080  0E00               	movlw	0
 21887  000082  6E3F               	movwf	ISR@cnt_t1,c
 21888                           
 21889                           ;main.c: 68: } else {
 21890  000084  D008               	goto	i2l9178
 21891  000086                     i2l9172:
 21892                           
 21893                           ;main.c: 69: cnt_t1 = 1;
 21894  000086  0E01               	movlw	1
 21895  000088  6E3F               	movwf	ISR@cnt_t1,c
 21896                           
 21897                           ;main.c: 70: integrating();
 21898  00008A  EC68  F096         	call	_integrating	;wreg free
 21899                           
 21900                           ;main.c: 71: charge_time_count();
 21901  00008E  EC6E  F09E         	call	_charge_time_count	;wreg free
 21902                           
 21903                           ;main.c: 72: display_flag = 1;
 21904  000092  0E01               	movlw	1
 21905  000094  6E4C               	movwf	_display_flag,c
 21906  000096                     i2l9178:
 21907                           
 21908                           ;main.c: 73: }
 21909                           ;main.c: 74: }
 21910                           ;main.c: 75: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 21911  000096  B2A1               	btfsc	4001,1,c	;volatile
 21912  000098  A2A0               	btfss	4000,1,c	;volatile
 21913  00009A  D00A               	goto	i2l930
 21914                           
 21915                           ;main.c: 76: PIR2bits.TMR3IF = 0;
 21916  00009C  92A1               	bcf	4001,1,c	;volatile
 21917                           
 21918                           ;main.c: 77: ctmu_flag = 1;
 21919  00009E  0E01               	movlw	1
 21920  0000A0  0100               	movlb	0	; () banked
 21921  0000A2  6F96               	movwf	_ctmu_flag& (0+255),b
 21922                           
 21923                           ; BSR set to: 0
 21924                           ;main.c: 78: delay_timer_interrupt(&delay_display);
 21925  0000A4  0E51               	movlw	low _delay_display
 21926  0000A6  6E01               	movwf	delay_timer_interrupt@d,c
 21927  0000A8  0E00               	movlw	high _delay_display
 21928  0000AA  6E02               	movwf	delay_timer_interrupt@d+1,c
 21929  0000AC  EC96  F0B1         	call	_delay_timer_interrupt	;wreg free
 21930  0000B0                     i2l930:
 21931  0000B0  C02C  FFF5         	movff	??_ISR+13,tablat
 21932  0000B4  C02B  FFF8         	movff	??_ISR+12,tblptru
 21933  0000B8  C02A  FFF7         	movff	??_ISR+11,tblptrh
 21934  0000BC  C029  FFF6         	movff	??_ISR+10,tblptrl
 21935  0000C0  C028  FFF4         	movff	??_ISR+9,prodh
 21936  0000C4  C027  FFF3         	movff	??_ISR+8,prodl
 21937  0000C8  C026  FFDA         	movff	??_ISR+7,fsr2h
 21938  0000CC  C025  FFD9         	movff	??_ISR+6,fsr2l
 21939  0000D0  C024  FFE2         	movff	??_ISR+5,fsr1h
 21940  0000D4  C023  FFE1         	movff	??_ISR+4,fsr1l
 21941  0000D8  C022  FFEA         	movff	??_ISR+3,fsr0h
 21942  0000DC  C021  FFE9         	movff	??_ISR+2,fsr0l
 21943  0000E0  C020  FFFB         	movff	??_ISR+1,pclatu
 21944  0000E4  C01F  FFFA         	movff	??_ISR,pclath
 21945  0000E8  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 21946  0000EA  0011               	retfie		f
 21947  0000EC                     __end_of_ISR:
 21948                           	opt stack 0
 21949                           pclatu	equ	0xFFB
 21950                           pclath	equ	0xFFA
 21951                           tblptru	equ	0xFF8
 21952                           tblptrh	equ	0xFF7
 21953                           tblptrl	equ	0xFF6
 21954                           tablat	equ	0xFF5
 21955                           prodh	equ	0xFF4
 21956                           prodl	equ	0xFF3
 21957                           intcon	equ	0xFF2
 21958                           intcon2	equ	0xFF1
 21959                           postinc0	equ	0xFEE
 21960                           fsr0h	equ	0xFEA
 21961                           fsr0l	equ	0xFE9
 21962                           wreg	equ	0xFE8
 21963                           indf1	equ	0xFE7
 21964                           postinc1	equ	0xFE6
 21965                           postdec1	equ	0xFE5
 21966                           fsr1h	equ	0xFE2
 21967                           fsr1l	equ	0xFE1
 21968                           indf2	equ	0xFDF
 21969                           postinc2	equ	0xFDE
 21970                           postdec2	equ	0xFDD
 21971                           plusw2	equ	0xFDB
 21972                           fsr2h	equ	0xFDA
 21973                           fsr2l	equ	0xFD9
 21974                           status	equ	0xFD8
 21975                           
 21976 ;; *************** function _integrating *****************
 21977 ;; Defined at:
 21978 ;;		line 181 in file "tasks.h"
 21979 ;; Parameters:    Size  Location     Type
 21980 ;;		None
 21981 ;; Auto vars:     Size  Location     Type
 21982 ;;  i               1   21[COMRAM] unsigned char 
 21983 ;; Return value:  Size  Location     Type
 21984 ;;		None               void
 21985 ;; Registers used:
 21986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21987 ;; Tracked objects:
 21988 ;;		On entry : 0/0
 21989 ;;		On exit  : 0/0
 21990 ;;		Unchanged: 0/0
 21991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21994 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21995 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21996 ;;Total ram usage:        9 bytes
 21997 ;; Hardware stack levels used:    1
 21998 ;; Hardware stack levels required when called:    3
 21999 ;; This function calls:
 22000 ;;		_EEP_write32
 22001 ;;		i2___lldiv
 22002 ;; This function is called by:
 22003 ;;		_ISR
 22004 ;; This function uses a non-reentrant model
 22005 ;;
 22006                           
 22007                           	psect	text96
 22008  012CD0                     __ptext96:
 22009                           	opt stack 0
 22010  012CD0                     _integrating:
 22011                           	opt stack 18
 22012                           
 22013                           ;tasks.h: 182: static uint32_t ic_cache[3];
 22014                           ;tasks.h: 183: for (uint8_t i = 0; i < 3; i++) {
 22015                           
 22016                           ;incstack = 0
 22017  012CD0  0E00               	movlw	0
 22018  012CD2  6E16               	movwf	integrating@i,c
 22019  012CD4                     i2l8744:
 22020  012CD4  0E02               	movlw	2
 22021  012CD6  6416               	cpfsgt	integrating@i,c
 22022  012CD8  D001               	goto	i2l8748
 22023  012CDA  0012               	return	
 22024  012CDC                     i2l8748:
 22025                           
 22026                           ;tasks.h: 184: port[i].integrated_current_sec += port[i].current;
 22027  012CDC  5016               	movf	integrating@i,w,c
 22028  012CDE  0D17               	mullw	23
 22029  012CE0  0E06               	movlw	6
 22030  012CE2  26F3               	addwf	prodl,f,c
 22031  012CE4  0E00               	movlw	0
 22032  012CE6  22F4               	addwfc	prodh,f,c
 22033  012CE8  0E00               	movlw	low _port
 22034  012CEA  24F3               	addwf	prodl,w,c
 22035  012CEC  6ED9               	movwf	fsr2l,c
 22036  012CEE  0E03               	movlw	high _port
 22037  012CF0  20F4               	addwfc	prodh,w,c
 22038  012CF2  6EDA               	movwf	fsr2h,c
 22039  012CF4  CFDE F00E          	movff	postinc2,??_integrating
 22040  012CF8  CFDD F00F          	movff	postdec2,??_integrating+1
 22041  012CFC  5016               	movf	integrating@i,w,c
 22042  012CFE  0D17               	mullw	23
 22043  012D00  0E0C               	movlw	12
 22044  012D02  26F3               	addwf	prodl,f,c
 22045  012D04  0E00               	movlw	0
 22046  012D06  22F4               	addwfc	prodh,f,c
 22047  012D08  0E00               	movlw	low _port
 22048  012D0A  24F3               	addwf	prodl,w,c
 22049  012D0C  6ED9               	movwf	fsr2l,c
 22050  012D0E  0E03               	movlw	high _port
 22051  012D10  20F4               	addwfc	prodh,w,c
 22052  012D12  6EDA               	movwf	fsr2h,c
 22053  012D14  500E               	movf	??_integrating,w,c
 22054  012D16  26DE               	addwf	postinc2,f,c
 22055  012D18  500F               	movf	??_integrating+1,w,c
 22056  012D1A  22DE               	addwfc	postinc2,f,c
 22057  012D1C  0E00               	movlw	0
 22058  012D1E  22DE               	addwfc	postinc2,f,c
 22059  012D20  22DE               	addwfc	postinc2,f,c
 22060                           
 22061                           ;tasks.h: 185: port[i].integrated_current = port[i].integrated_current_sec / 3600;
 22062  012D22  5016               	movf	integrating@i,w,c
 22063  012D24  0D17               	mullw	23
 22064  012D26  0E0C               	movlw	12
 22065  012D28  26F3               	addwf	prodl,f,c
 22066  012D2A  0E00               	movlw	0
 22067  012D2C  22F4               	addwfc	prodh,f,c
 22068  012D2E  0E00               	movlw	low _port
 22069  012D30  24F3               	addwf	prodl,w,c
 22070  012D32  6ED9               	movwf	fsr2l,c
 22071  012D34  0E03               	movlw	high _port
 22072  012D36  20F4               	addwfc	prodh,w,c
 22073  012D38  6EDA               	movwf	fsr2h,c
 22074  012D3A  CFDE F001          	movff	postinc2,i2___lldiv@dividend
 22075  012D3E  CFDE F002          	movff	postinc2,i2___lldiv@dividend+1
 22076  012D42  CFDE F003          	movff	postinc2,i2___lldiv@dividend+2
 22077  012D46  CFDE F004          	movff	postinc2,i2___lldiv@dividend+3
 22078  012D4A  0E10               	movlw	16
 22079  012D4C  6E05               	movwf	i2___lldiv@divisor,c
 22080  012D4E  0E0E               	movlw	14
 22081  012D50  6E06               	movwf	i2___lldiv@divisor+1,c
 22082  012D52  0E00               	movlw	0
 22083  012D54  6E07               	movwf	i2___lldiv@divisor+2,c
 22084  012D56  0E00               	movlw	0
 22085  012D58  6E08               	movwf	i2___lldiv@divisor+3,c
 22086  012D5A  ECB1  F0AD         	call	i2___lldiv	;wreg free
 22087  012D5E  5016               	movf	integrating@i,w,c
 22088  012D60  0D17               	mullw	23
 22089  012D62  0E08               	movlw	8
 22090  012D64  26F3               	addwf	prodl,f,c
 22091  012D66  0E00               	movlw	0
 22092  012D68  22F4               	addwfc	prodh,f,c
 22093  012D6A  0E00               	movlw	low _port
 22094  012D6C  24F3               	addwf	prodl,w,c
 22095  012D6E  6ED9               	movwf	fsr2l,c
 22096  012D70  0E03               	movlw	high _port
 22097  012D72  20F4               	addwfc	prodh,w,c
 22098  012D74  6EDA               	movwf	fsr2h,c
 22099  012D76  C001  FFDE         	movff	?i2___lldiv,postinc2
 22100  012D7A  C002  FFDE         	movff	?i2___lldiv+1,postinc2
 22101  012D7E  C003  FFDE         	movff	?i2___lldiv+2,postinc2
 22102  012D82  C004  FFDE         	movff	?i2___lldiv+3,postinc2
 22103                           
 22104                           ;tasks.h: 186: if (port[i].integrated_current_sec != ic_cache[i]) {
 22105  012D86  5016               	movf	integrating@i,w,c
 22106  012D88  0D04               	mullw	4
 22107  012D8A  0EC9               	movlw	low integrating@ic_cache
 22108  012D8C  24F3               	addwf	prodl,w,c
 22109  012D8E  6ED9               	movwf	fsr2l,c
 22110  012D90  0E01               	movlw	high integrating@ic_cache
 22111  012D92  20F4               	addwfc	prodh,w,c
 22112  012D94  6EDA               	movwf	fsr2h,c
 22113  012D96  5016               	movf	integrating@i,w,c
 22114  012D98  0D17               	mullw	23
 22115  012D9A  0E0C               	movlw	12
 22116  012D9C  26F3               	addwf	prodl,f,c
 22117  012D9E  0E00               	movlw	0
 22118  012DA0  22F4               	addwfc	prodh,f,c
 22119  012DA2  0E00               	movlw	low _port
 22120  012DA4  24F3               	addwf	prodl,w,c
 22121  012DA6  6EE1               	movwf	fsr1l,c
 22122  012DA8  0E03               	movlw	high _port
 22123  012DAA  20F4               	addwfc	prodh,w,c
 22124  012DAC  6EE2               	movwf	fsr1h,c
 22125  012DAE  50DE               	movf	postinc2,w,c
 22126  012DB0  18E6               	xorwf	postinc1,w,c
 22127  012DB2  E10A               	bnz	i2u923_40
 22128  012DB4  50DE               	movf	postinc2,w,c
 22129  012DB6  18E6               	xorwf	postinc1,w,c
 22130  012DB8  E107               	bnz	i2u923_40
 22131  012DBA  50DE               	movf	postinc2,w,c
 22132  012DBC  18E6               	xorwf	postinc1,w,c
 22133  012DBE  E104               	bnz	i2u923_40
 22134  012DC0  50DE               	movf	postinc2,w,c
 22135  012DC2  18E6               	xorwf	postinc1,w,c
 22136  012DC4  B4D8               	btfsc	status,2,c
 22137  012DC6  D035               	goto	i2l8758
 22138  012DC8                     i2u923_40:
 22139                           
 22140                           ;tasks.h: 187: ic_cache[i] = port[i].integrated_current_sec;
 22141  012DC8  5016               	movf	integrating@i,w,c
 22142  012DCA  0D17               	mullw	23
 22143  012DCC  0E0C               	movlw	12
 22144  012DCE  26F3               	addwf	prodl,f,c
 22145  012DD0  0E00               	movlw	0
 22146  012DD2  22F4               	addwfc	prodh,f,c
 22147  012DD4  0E00               	movlw	low _port
 22148  012DD6  24F3               	addwf	prodl,w,c
 22149  012DD8  6ED9               	movwf	fsr2l,c
 22150  012DDA  0E03               	movlw	high _port
 22151  012DDC  20F4               	addwfc	prodh,w,c
 22152  012DDE  6EDA               	movwf	fsr2h,c
 22153  012DE0  5016               	movf	integrating@i,w,c
 22154  012DE2  0D04               	mullw	4
 22155  012DE4  0EC9               	movlw	low integrating@ic_cache
 22156  012DE6  24F3               	addwf	prodl,w,c
 22157  012DE8  6EE1               	movwf	fsr1l,c
 22158  012DEA  0E01               	movlw	high integrating@ic_cache
 22159  012DEC  20F4               	addwfc	prodh,w,c
 22160  012DEE  6EE2               	movwf	fsr1h,c
 22161  012DF0  CFDE FFE6          	movff	postinc2,postinc1
 22162  012DF4  CFDE FFE6          	movff	postinc2,postinc1
 22163  012DF8  CFDE FFE6          	movff	postinc2,postinc1
 22164  012DFC  CFDE FFE6          	movff	postinc2,postinc1
 22165                           
 22166                           ;tasks.h: 188: EEP_write32(0, i, port[i].integrated_current_sec);
 22167  012E00  C016  F005         	movff	integrating@i,EEP_write32@Reg_l
 22168  012E04  5016               	movf	integrating@i,w,c
 22169  012E06  0D17               	mullw	23
 22170  012E08  0E0C               	movlw	12
 22171  012E0A  26F3               	addwf	prodl,f,c
 22172  012E0C  0E00               	movlw	0
 22173  012E0E  22F4               	addwfc	prodh,f,c
 22174  012E10  0E00               	movlw	low _port
 22175  012E12  24F3               	addwf	prodl,w,c
 22176  012E14  6ED9               	movwf	fsr2l,c
 22177  012E16  0E03               	movlw	high _port
 22178  012E18  20F4               	addwfc	prodh,w,c
 22179  012E1A  6EDA               	movwf	fsr2h,c
 22180  012E1C  CFDE F006          	movff	postinc2,EEP_write32@data
 22181  012E20  CFDE F007          	movff	postinc2,EEP_write32@data+1
 22182  012E24  CFDE F008          	movff	postinc2,EEP_write32@data+2
 22183  012E28  CFDE F009          	movff	postinc2,EEP_write32@data+3
 22184  012E2C  0E00               	movlw	0
 22185  012E2E  EC00  F0B2         	call	_EEP_write32
 22186  012E32                     i2l8758:
 22187  012E32  2A16               	incf	integrating@i,f,c
 22188  012E34  D74F               	goto	i2l8744
 22189  012E36                     __end_of_integrating:
 22190                           	opt stack 0
 22191                           pclatu	equ	0xFFB
 22192                           pclath	equ	0xFFA
 22193                           tblptru	equ	0xFF8
 22194                           tblptrh	equ	0xFF7
 22195                           tblptrl	equ	0xFF6
 22196                           tablat	equ	0xFF5
 22197                           prodh	equ	0xFF4
 22198                           prodl	equ	0xFF3
 22199                           intcon	equ	0xFF2
 22200                           intcon2	equ	0xFF1
 22201                           postinc0	equ	0xFEE
 22202                           fsr0h	equ	0xFEA
 22203                           fsr0l	equ	0xFE9
 22204                           wreg	equ	0xFE8
 22205                           indf1	equ	0xFE7
 22206                           postinc1	equ	0xFE6
 22207                           postdec1	equ	0xFE5
 22208                           fsr1h	equ	0xFE2
 22209                           fsr1l	equ	0xFE1
 22210                           indf2	equ	0xFDF
 22211                           postinc2	equ	0xFDE
 22212                           postdec2	equ	0xFDD
 22213                           plusw2	equ	0xFDB
 22214                           fsr2h	equ	0xFDA
 22215                           fsr2l	equ	0xFD9
 22216                           status	equ	0xFD8
 22217                           
 22218 ;; *************** function i2___lldiv *****************
 22219 ;; Defined at:
 22220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 22221 ;; Parameters:    Size  Location     Type
 22222 ;;  dividend        4    0[COMRAM] unsigned long 
 22223 ;;  divisor         4    4[COMRAM] unsigned long 
 22224 ;; Auto vars:     Size  Location     Type
 22225 ;;  __lldiv         4    8[COMRAM] unsigned long 
 22226 ;;  __lldiv         1   12[COMRAM] unsigned char 
 22227 ;; Return value:  Size  Location     Type
 22228 ;;                  4    0[COMRAM] unsigned long 
 22229 ;; Registers used:
 22230 ;;		wreg, status,2, status,0
 22231 ;; Tracked objects:
 22232 ;;		On entry : 0/0
 22233 ;;		On exit  : 0/0
 22234 ;;		Unchanged: 0/0
 22235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22236 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22237 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22239 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22240 ;;Total ram usage:       13 bytes
 22241 ;; Hardware stack levels used:    1
 22242 ;; This function calls:
 22243 ;;		Nothing
 22244 ;; This function is called by:
 22245 ;;		_integrating
 22246 ;; This function uses a non-reentrant model
 22247 ;;
 22248                           
 22249                           	psect	text97
 22250  015B62                     __ptext97:
 22251                           	opt stack 0
 22252  015B62                     i2___lldiv:
 22253                           	opt stack 20
 22254                           
 22255                           ;incstack = 0
 22256  015B62  0E00               	movlw	0
 22257  015B64  6E09               	movwf	i2___lldiv@quotient,c
 22258  015B66  0E00               	movlw	0
 22259  015B68  6E0A               	movwf	i2___lldiv@quotient+1,c
 22260  015B6A  0E00               	movlw	0
 22261  015B6C  6E0B               	movwf	i2___lldiv@quotient+2,c
 22262  015B6E  0E00               	movlw	0
 22263  015B70  6E0C               	movwf	i2___lldiv@quotient+3,c
 22264  015B72  5005               	movf	i2___lldiv@divisor,w,c
 22265  015B74  1006               	iorwf	i2___lldiv@divisor+1,w,c
 22266  015B76  1007               	iorwf	i2___lldiv@divisor+2,w,c
 22267  015B78  1008               	iorwf	i2___lldiv@divisor+3,w,c
 22268  015B7A  B4D8               	btfsc	status,2,c
 22269  015B7C  D02A               	goto	i2l1878
 22270  015B7E  0E01               	movlw	1
 22271  015B80  6E0D               	movwf	i2___lldiv@counter,c
 22272  015B82  D006               	goto	i2l8640
 22273  015B84                     i2l8638:
 22274  015B84  90D8               	bcf	status,0,c
 22275  015B86  3605               	rlcf	i2___lldiv@divisor,f,c
 22276  015B88  3606               	rlcf	i2___lldiv@divisor+1,f,c
 22277  015B8A  3607               	rlcf	i2___lldiv@divisor+2,f,c
 22278  015B8C  3608               	rlcf	i2___lldiv@divisor+3,f,c
 22279  015B8E  2A0D               	incf	i2___lldiv@counter,f,c
 22280  015B90                     i2l8640:
 22281  015B90  AE08               	btfss	i2___lldiv@divisor+3,7,c
 22282  015B92  D7F8               	goto	i2l8638
 22283  015B94                     i2l8642:
 22284  015B94  90D8               	bcf	status,0,c
 22285  015B96  3609               	rlcf	i2___lldiv@quotient,f,c
 22286  015B98  360A               	rlcf	i2___lldiv@quotient+1,f,c
 22287  015B9A  360B               	rlcf	i2___lldiv@quotient+2,f,c
 22288  015B9C  360C               	rlcf	i2___lldiv@quotient+3,f,c
 22289  015B9E  5005               	movf	i2___lldiv@divisor,w,c
 22290  015BA0  5C01               	subwf	i2___lldiv@dividend,w,c
 22291  015BA2  5006               	movf	i2___lldiv@divisor+1,w,c
 22292  015BA4  5802               	subwfb	i2___lldiv@dividend+1,w,c
 22293  015BA6  5007               	movf	i2___lldiv@divisor+2,w,c
 22294  015BA8  5803               	subwfb	i2___lldiv@dividend+2,w,c
 22295  015BAA  5008               	movf	i2___lldiv@divisor+3,w,c
 22296  015BAC  5804               	subwfb	i2___lldiv@dividend+3,w,c
 22297  015BAE  A0D8               	btfss	status,0,c
 22298  015BB0  D009               	goto	i2l8650
 22299  015BB2  5005               	movf	i2___lldiv@divisor,w,c
 22300  015BB4  5E01               	subwf	i2___lldiv@dividend,f,c
 22301  015BB6  5006               	movf	i2___lldiv@divisor+1,w,c
 22302  015BB8  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 22303  015BBA  5007               	movf	i2___lldiv@divisor+2,w,c
 22304  015BBC  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 22305  015BBE  5008               	movf	i2___lldiv@divisor+3,w,c
 22306  015BC0  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 22307  015BC2  8009               	bsf	i2___lldiv@quotient,0,c
 22308  015BC4                     i2l8650:
 22309  015BC4  90D8               	bcf	status,0,c
 22310  015BC6  3208               	rrcf	i2___lldiv@divisor+3,f,c
 22311  015BC8  3207               	rrcf	i2___lldiv@divisor+2,f,c
 22312  015BCA  3206               	rrcf	i2___lldiv@divisor+1,f,c
 22313  015BCC  3205               	rrcf	i2___lldiv@divisor,f,c
 22314  015BCE  2E0D               	decfsz	i2___lldiv@counter,f,c
 22315  015BD0  D7E1               	goto	i2l8642
 22316  015BD2                     i2l1878:
 22317  015BD2  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 22318  015BD6  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 22319  015BDA  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 22320  015BDE  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 22321  015BE2  0012               	return		;funcret
 22322  015BE4                     __end_ofi2___lldiv:
 22323                           	opt stack 0
 22324                           pclatu	equ	0xFFB
 22325                           pclath	equ	0xFFA
 22326                           tblptru	equ	0xFF8
 22327                           tblptrh	equ	0xFF7
 22328                           tblptrl	equ	0xFF6
 22329                           tablat	equ	0xFF5
 22330                           prodh	equ	0xFF4
 22331                           prodl	equ	0xFF3
 22332                           intcon	equ	0xFF2
 22333                           intcon2	equ	0xFF1
 22334                           postinc0	equ	0xFEE
 22335                           fsr0h	equ	0xFEA
 22336                           fsr0l	equ	0xFE9
 22337                           wreg	equ	0xFE8
 22338                           indf1	equ	0xFE7
 22339                           postinc1	equ	0xFE6
 22340                           postdec1	equ	0xFE5
 22341                           fsr1h	equ	0xFE2
 22342                           fsr1l	equ	0xFE1
 22343                           indf2	equ	0xFDF
 22344                           postinc2	equ	0xFDE
 22345                           postdec2	equ	0xFDD
 22346                           plusw2	equ	0xFDB
 22347                           fsr2h	equ	0xFDA
 22348                           fsr2l	equ	0xFD9
 22349                           status	equ	0xFD8
 22350                           
 22351 ;; *************** function _delay_timer_interrupt *****************
 22352 ;; Defined at:
 22353 ;;		line 344 in file "../My_header\My_header.h"
 22354 ;; Parameters:    Size  Location     Type
 22355 ;;  d               2    0[COMRAM] PTR struct Delay
 22356 ;;		 -> delay_display(3), 
 22357 ;; Auto vars:     Size  Location     Type
 22358 ;;		None
 22359 ;; Return value:  Size  Location     Type
 22360 ;;		None               void
 22361 ;; Registers used:
 22362 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22363 ;; Tracked objects:
 22364 ;;		On entry : 0/0
 22365 ;;		On exit  : 0/0
 22366 ;;		Unchanged: 0/0
 22367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22370 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22371 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22372 ;;Total ram usage:        4 bytes
 22373 ;; Hardware stack levels used:    1
 22374 ;; This function calls:
 22375 ;;		Nothing
 22376 ;; This function is called by:
 22377 ;;		_ISR
 22378 ;; This function uses a non-reentrant model
 22379 ;;
 22380                           
 22381                           	psect	text98
 22382  01632C                     __ptext98:
 22383                           	opt stack 0
 22384  01632C                     _delay_timer_interrupt:
 22385                           	opt stack 21
 22386                           
 22387                           ;My_header\My_header.h: 345: if (d->cnt == 1)d->flag = 1;
 22388                           
 22389                           ;incstack = 0
 22390  01632C  EE20 F001          	lfsr	2,1
 22391  016330  5001               	movf	delay_timer_interrupt@d,w,c
 22392  016332  26D9               	addwf	fsr2l,f,c
 22393  016334  5002               	movf	delay_timer_interrupt@d+1,w,c
 22394  016336  22DA               	addwfc	fsr2h,f,c
 22395  016338  04DE               	decf	postinc2,w,c
 22396  01633A  10DE               	iorwf	postinc2,w,c
 22397  01633C  A4D8               	btfss	status,2,c
 22398  01633E  D006               	goto	i2l8680
 22399  016340  C001  FFD9         	movff	delay_timer_interrupt@d,fsr2l
 22400  016344  C002  FFDA         	movff	delay_timer_interrupt@d+1,fsr2h
 22401  016348  0E01               	movlw	1
 22402  01634A  6EDF               	movwf	indf2,c
 22403  01634C                     i2l8680:
 22404                           
 22405                           ;My_header\My_header.h: 346: if (d->cnt)d->cnt--;
 22406  01634C  EE20 F001          	lfsr	2,1
 22407  016350  5001               	movf	delay_timer_interrupt@d,w,c
 22408  016352  26D9               	addwf	fsr2l,f,c
 22409  016354  5002               	movf	delay_timer_interrupt@d+1,w,c
 22410  016356  22DA               	addwfc	fsr2h,f,c
 22411  016358  50DE               	movf	postinc2,w,c
 22412  01635A  10DE               	iorwf	postinc2,w,c
 22413  01635C  B4D8               	btfsc	status,2,c
 22414  01635E  0012               	return	
 22415  016360  EE20 F001          	lfsr	2,1
 22416  016364  5001               	movf	delay_timer_interrupt@d,w,c
 22417  016366  26D9               	addwf	fsr2l,f,c
 22418  016368  5002               	movf	delay_timer_interrupt@d+1,w,c
 22419  01636A  22DA               	addwfc	fsr2h,f,c
 22420  01636C  06DE               	decf	postinc2,f,c
 22421  01636E  0E00               	movlw	0
 22422  016370  5ADD               	subwfb	postdec2,f,c
 22423  016372  0012               	return	
 22424  016374                     __end_of_delay_timer_interrupt:
 22425                           	opt stack 0
 22426                           pclatu	equ	0xFFB
 22427                           pclath	equ	0xFFA
 22428                           tblptru	equ	0xFF8
 22429                           tblptrh	equ	0xFF7
 22430                           tblptrl	equ	0xFF6
 22431                           tablat	equ	0xFF5
 22432                           prodh	equ	0xFF4
 22433                           prodl	equ	0xFF3
 22434                           intcon	equ	0xFF2
 22435                           intcon2	equ	0xFF1
 22436                           postinc0	equ	0xFEE
 22437                           fsr0h	equ	0xFEA
 22438                           fsr0l	equ	0xFE9
 22439                           wreg	equ	0xFE8
 22440                           indf1	equ	0xFE7
 22441                           postinc1	equ	0xFE6
 22442                           postdec1	equ	0xFE5
 22443                           fsr1h	equ	0xFE2
 22444                           fsr1l	equ	0xFE1
 22445                           indf2	equ	0xFDF
 22446                           postinc2	equ	0xFDE
 22447                           postdec2	equ	0xFDD
 22448                           plusw2	equ	0xFDB
 22449                           fsr2h	equ	0xFDA
 22450                           fsr2l	equ	0xFD9
 22451                           status	equ	0xFD8
 22452                           
 22453 ;; *************** function _charge_time_count *****************
 22454 ;; Defined at:
 22455 ;;		line 193 in file "tasks.h"
 22456 ;; Parameters:    Size  Location     Type
 22457 ;;		None
 22458 ;; Auto vars:     Size  Location     Type
 22459 ;;  i               1   19[COMRAM] unsigned char 
 22460 ;; Return value:  Size  Location     Type
 22461 ;;		None               void
 22462 ;; Registers used:
 22463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22464 ;; Tracked objects:
 22465 ;;		On entry : 0/0
 22466 ;;		On exit  : 0/0
 22467 ;;		Unchanged: 0/0
 22468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22471 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22472 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22473 ;;Total ram usage:        9 bytes
 22474 ;; Hardware stack levels used:    1
 22475 ;; Hardware stack levels required when called:    3
 22476 ;; This function calls:
 22477 ;;		_EEP_write32
 22478 ;; This function is called by:
 22479 ;;		_ISR
 22480 ;; This function uses a non-reentrant model
 22481 ;;
 22482                           
 22483                           	psect	text99
 22484  013CDC                     __ptext99:
 22485                           	opt stack 0
 22486  013CDC                     _charge_time_count:
 22487                           	opt stack 18
 22488                           
 22489                           ;tasks.h: 194: uint8_t i;
 22490                           ;tasks.h: 195: static uint32_t it_cache[3];
 22491                           ;tasks.h: 196: for (i = 0; i < 3; i++) {
 22492                           
 22493                           ;incstack = 0
 22494  013CDC  0E00               	movlw	0
 22495  013CDE  6E14               	movwf	charge_time_count@i,c
 22496  013CE0                     i2l8764:
 22497  013CE0  0E02               	movlw	2
 22498  013CE2  6414               	cpfsgt	charge_time_count@i,c
 22499  013CE4  D001               	goto	i2l8768
 22500  013CE6  0012               	return	
 22501  013CE8                     i2l8768:
 22502                           
 22503                           ;tasks.h: 197: if (port[i].current > 100)port[i].integrated_time++;
 22504  013CE8  5014               	movf	charge_time_count@i,w,c
 22505  013CEA  0D17               	mullw	23
 22506  013CEC  0E06               	movlw	6
 22507  013CEE  26F3               	addwf	prodl,f,c
 22508  013CF0  0E00               	movlw	0
 22509  013CF2  22F4               	addwfc	prodh,f,c
 22510  013CF4  0E00               	movlw	low _port
 22511  013CF6  24F3               	addwf	prodl,w,c
 22512  013CF8  6ED9               	movwf	fsr2l,c
 22513  013CFA  0E03               	movlw	high _port
 22514  013CFC  20F4               	addwfc	prodh,w,c
 22515  013CFE  6EDA               	movwf	fsr2h,c
 22516  013D00  0E01               	movlw	1
 22517  013D02  50DB               	movf	plusw2,w,c
 22518  013D04  E104               	bnz	i2u926_40
 22519  013D06  0E65               	movlw	101
 22520  013D08  5CDE               	subwf	postinc2,w,c
 22521  013D0A  A0D8               	btfss	status,0,c
 22522  013D0C  D011               	goto	i2l8772
 22523  013D0E                     i2u926_40:
 22524  013D0E  5014               	movf	charge_time_count@i,w,c
 22525  013D10  0D17               	mullw	23
 22526  013D12  0E10               	movlw	16
 22527  013D14  26F3               	addwf	prodl,f,c
 22528  013D16  0E00               	movlw	0
 22529  013D18  22F4               	addwfc	prodh,f,c
 22530  013D1A  0E00               	movlw	low _port
 22531  013D1C  24F3               	addwf	prodl,w,c
 22532  013D1E  6ED9               	movwf	fsr2l,c
 22533  013D20  0E03               	movlw	high _port
 22534  013D22  20F4               	addwfc	prodh,w,c
 22535  013D24  6EDA               	movwf	fsr2h,c
 22536  013D26  2ADE               	incf	postinc2,f,c
 22537  013D28  0E00               	movlw	0
 22538  013D2A  22DE               	addwfc	postinc2,f,c
 22539  013D2C  22DE               	addwfc	postinc2,f,c
 22540  013D2E  22DE               	addwfc	postinc2,f,c
 22541  013D30                     i2l8772:
 22542                           
 22543                           ;tasks.h: 198: if (port[i].integrated_time != it_cache[i]) {
 22544  013D30  5014               	movf	charge_time_count@i,w,c
 22545  013D32  0D04               	mullw	4
 22546  013D34  0ECD               	movlw	low charge_time_count@it_cache
 22547  013D36  24F3               	addwf	prodl,w,c
 22548  013D38  6ED9               	movwf	fsr2l,c
 22549  013D3A  0E02               	movlw	high charge_time_count@it_cache
 22550  013D3C  20F4               	addwfc	prodh,w,c
 22551  013D3E  6EDA               	movwf	fsr2h,c
 22552  013D40  5014               	movf	charge_time_count@i,w,c
 22553  013D42  0D17               	mullw	23
 22554  013D44  0E10               	movlw	16
 22555  013D46  26F3               	addwf	prodl,f,c
 22556  013D48  0E00               	movlw	0
 22557  013D4A  22F4               	addwfc	prodh,f,c
 22558  013D4C  0E00               	movlw	low _port
 22559  013D4E  24F3               	addwf	prodl,w,c
 22560  013D50  6EE1               	movwf	fsr1l,c
 22561  013D52  0E03               	movlw	high _port
 22562  013D54  20F4               	addwfc	prodh,w,c
 22563  013D56  6EE2               	movwf	fsr1h,c
 22564  013D58  50DE               	movf	postinc2,w,c
 22565  013D5A  18E6               	xorwf	postinc1,w,c
 22566  013D5C  E10A               	bnz	i2u927_40
 22567  013D5E  50DE               	movf	postinc2,w,c
 22568  013D60  18E6               	xorwf	postinc1,w,c
 22569  013D62  E107               	bnz	i2u927_40
 22570  013D64  50DE               	movf	postinc2,w,c
 22571  013D66  18E6               	xorwf	postinc1,w,c
 22572  013D68  E104               	bnz	i2u927_40
 22573  013D6A  50DE               	movf	postinc2,w,c
 22574  013D6C  18E6               	xorwf	postinc1,w,c
 22575  013D6E  B4D8               	btfsc	status,2,c
 22576  013D70  D035               	goto	i2l8778
 22577  013D72                     i2u927_40:
 22578                           
 22579                           ;tasks.h: 199: it_cache[i] = port[i].integrated_time;
 22580  013D72  5014               	movf	charge_time_count@i,w,c
 22581  013D74  0D17               	mullw	23
 22582  013D76  0E10               	movlw	16
 22583  013D78  26F3               	addwf	prodl,f,c
 22584  013D7A  0E00               	movlw	0
 22585  013D7C  22F4               	addwfc	prodh,f,c
 22586  013D7E  0E00               	movlw	low _port
 22587  013D80  24F3               	addwf	prodl,w,c
 22588  013D82  6ED9               	movwf	fsr2l,c
 22589  013D84  0E03               	movlw	high _port
 22590  013D86  20F4               	addwfc	prodh,w,c
 22591  013D88  6EDA               	movwf	fsr2h,c
 22592  013D8A  5014               	movf	charge_time_count@i,w,c
 22593  013D8C  0D04               	mullw	4
 22594  013D8E  0ECD               	movlw	low charge_time_count@it_cache
 22595  013D90  24F3               	addwf	prodl,w,c
 22596  013D92  6EE1               	movwf	fsr1l,c
 22597  013D94  0E02               	movlw	high charge_time_count@it_cache
 22598  013D96  20F4               	addwfc	prodh,w,c
 22599  013D98  6EE2               	movwf	fsr1h,c
 22600  013D9A  CFDE FFE6          	movff	postinc2,postinc1
 22601  013D9E  CFDE FFE6          	movff	postinc2,postinc1
 22602  013DA2  CFDE FFE6          	movff	postinc2,postinc1
 22603  013DA6  CFDE FFE6          	movff	postinc2,postinc1
 22604                           
 22605                           ;tasks.h: 200: EEP_write32(0, i, port[i].integrated_time);
 22606  013DAA  C014  F005         	movff	charge_time_count@i,EEP_write32@Reg_l
 22607  013DAE  5014               	movf	charge_time_count@i,w,c
 22608  013DB0  0D17               	mullw	23
 22609  013DB2  0E10               	movlw	16
 22610  013DB4  26F3               	addwf	prodl,f,c
 22611  013DB6  0E00               	movlw	0
 22612  013DB8  22F4               	addwfc	prodh,f,c
 22613  013DBA  0E00               	movlw	low _port
 22614  013DBC  24F3               	addwf	prodl,w,c
 22615  013DBE  6ED9               	movwf	fsr2l,c
 22616  013DC0  0E03               	movlw	high _port
 22617  013DC2  20F4               	addwfc	prodh,w,c
 22618  013DC4  6EDA               	movwf	fsr2h,c
 22619  013DC6  CFDE F006          	movff	postinc2,EEP_write32@data
 22620  013DCA  CFDE F007          	movff	postinc2,EEP_write32@data+1
 22621  013DCE  CFDE F008          	movff	postinc2,EEP_write32@data+2
 22622  013DD2  CFDE F009          	movff	postinc2,EEP_write32@data+3
 22623  013DD6  0E00               	movlw	0
 22624  013DD8  EC00  F0B2         	call	_EEP_write32
 22625  013DDC                     i2l8778:
 22626  013DDC  2A14               	incf	charge_time_count@i,f,c
 22627  013DDE  D780               	goto	i2l8764
 22628  013DE0                     __end_of_charge_time_count:
 22629                           	opt stack 0
 22630                           pclatu	equ	0xFFB
 22631                           pclath	equ	0xFFA
 22632                           tblptru	equ	0xFF8
 22633                           tblptrh	equ	0xFF7
 22634                           tblptrl	equ	0xFF6
 22635                           tablat	equ	0xFF5
 22636                           prodh	equ	0xFF4
 22637                           prodl	equ	0xFF3
 22638                           intcon	equ	0xFF2
 22639                           intcon2	equ	0xFF1
 22640                           postinc0	equ	0xFEE
 22641                           fsr0h	equ	0xFEA
 22642                           fsr0l	equ	0xFE9
 22643                           wreg	equ	0xFE8
 22644                           indf1	equ	0xFE7
 22645                           postinc1	equ	0xFE6
 22646                           postdec1	equ	0xFE5
 22647                           fsr1h	equ	0xFE2
 22648                           fsr1l	equ	0xFE1
 22649                           indf2	equ	0xFDF
 22650                           postinc2	equ	0xFDE
 22651                           postdec2	equ	0xFDD
 22652                           plusw2	equ	0xFDB
 22653                           fsr2h	equ	0xFDA
 22654                           fsr2l	equ	0xFD9
 22655                           status	equ	0xFD8
 22656                           
 22657 ;; *************** function _EEP_write32 *****************
 22658 ;; Defined at:
 22659 ;;		line 347 in file "../My_header\My_I2C.h"
 22660 ;; Parameters:    Size  Location     Type
 22661 ;;  Reg_h           1    wreg     unsigned char 
 22662 ;;  Reg_l           1    4[COMRAM] unsigned char 
 22663 ;;  data            4    5[COMRAM] unsigned long 
 22664 ;; Auto vars:     Size  Location     Type
 22665 ;;  Reg_h           1    9[COMRAM] unsigned char 
 22666 ;;  ans             1   10[COMRAM] unsigned char 
 22667 ;; Return value:  Size  Location     Type
 22668 ;;		None               void
 22669 ;; Registers used:
 22670 ;;		wreg, status,2, status,0, cstack
 22671 ;; Tracked objects:
 22672 ;;		On entry : 0/0
 22673 ;;		On exit  : 0/0
 22674 ;;		Unchanged: 0/0
 22675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22676 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22679 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22680 ;;Total ram usage:        7 bytes
 22681 ;; Hardware stack levels used:    1
 22682 ;; Hardware stack levels required when called:    2
 22683 ;; This function calls:
 22684 ;;		i2_I2C_Send
 22685 ;;		i2_I2C_Start
 22686 ;;		i2_I2C_Stop
 22687 ;; This function is called by:
 22688 ;;		_integrating
 22689 ;;		_charge_time_count
 22690 ;; This function uses a non-reentrant model
 22691 ;;
 22692                           
 22693                           	psect	text100
 22694  016400                     __ptext100:
 22695                           	opt stack 0
 22696  016400                     _EEP_write32:
 22697                           	opt stack 18
 22698                           
 22699                           ;incstack = 0
 22700                           ;EEP_write32@Reg_h stored from wreg
 22701  016400  6E0A               	movwf	EEP_write32@Reg_h,c
 22702                           
 22703                           ;My_header\My_I2C.h: 348: uint8_t ans;
 22704                           ;My_header\My_I2C.h: 349: ans = I2C_Start(0x50, 0);
 22705  016402  0E00               	movlw	0
 22706  016404  6E03               	movwf	i2I2C_Start@rw,c
 22707  016406  0E50               	movlw	80
 22708  016408  EC4A  F0B4         	call	i2_I2C_Start
 22709  01640C  6E0B               	movwf	EEP_write32@ans,c
 22710                           
 22711                           ;My_header\My_I2C.h: 350: if (ans == 0) {
 22712  01640E  500B               	movf	EEP_write32@ans,w,c
 22713  016410  A4D8               	btfss	status,2,c
 22714  016412  D012               	goto	i2l398
 22715                           
 22716                           ;My_header\My_I2C.h: 352: I2C_Send(Reg_h);
 22717  016414  500A               	movf	EEP_write32@Reg_h,w,c
 22718  016416  EC50  F0B5         	call	i2_I2C_Send
 22719                           
 22720                           ;My_header\My_I2C.h: 353: I2C_Send(Reg_l);
 22721  01641A  5005               	movf	EEP_write32@Reg_l,w,c
 22722  01641C  EC50  F0B5         	call	i2_I2C_Send
 22723                           
 22724                           ;My_header\My_I2C.h: 354: I2C_Send(data >> 24);
 22725  016420  5009               	movf	EEP_write32@data+3,w,c
 22726  016422  EC50  F0B5         	call	i2_I2C_Send
 22727                           
 22728                           ;My_header\My_I2C.h: 355: I2C_Send(data >> 16);
 22729  016426  5008               	movf	EEP_write32@data+2,w,c
 22730  016428  EC50  F0B5         	call	i2_I2C_Send
 22731                           
 22732                           ;My_header\My_I2C.h: 356: I2C_Send(data >> 8);
 22733  01642C  5007               	movf	EEP_write32@data+1,w,c
 22734  01642E  EC50  F0B5         	call	i2_I2C_Send
 22735                           
 22736                           ;My_header\My_I2C.h: 357: I2C_Send(data >> 0);
 22737  016432  5006               	movf	EEP_write32@data,w,c
 22738  016434  EC50  F0B5         	call	i2_I2C_Send
 22739  016438                     i2l398:
 22740                           
 22741                           ;My_header\My_I2C.h: 358: }
 22742                           ;My_header\My_I2C.h: 359: I2C_Stop();
 22743  016438  EC79  F0B5         	call	i2_I2C_Stop	;wreg free
 22744                           
 22745                           ;My_header\My_I2C.h: 360: _delay((unsigned long)((26)*(48000000/4000000.0)));
 22746  01643C  0E68               	movlw	104
 22747  01643E                     i2u1341_47:
 22748  01643E  2EE8               	decfsz	wreg,f,c
 22749  016440  D7FE               	goto	i2u1341_47
 22750  016442  0012               	return		;funcret
 22751  016444                     __end_of_EEP_write32:
 22752                           	opt stack 0
 22753                           pclatu	equ	0xFFB
 22754                           pclath	equ	0xFFA
 22755                           tblptru	equ	0xFF8
 22756                           tblptrh	equ	0xFF7
 22757                           tblptrl	equ	0xFF6
 22758                           tablat	equ	0xFF5
 22759                           prodh	equ	0xFF4
 22760                           prodl	equ	0xFF3
 22761                           intcon	equ	0xFF2
 22762                           intcon2	equ	0xFF1
 22763                           postinc0	equ	0xFEE
 22764                           fsr0h	equ	0xFEA
 22765                           fsr0l	equ	0xFE9
 22766                           wreg	equ	0xFE8
 22767                           indf1	equ	0xFE7
 22768                           postinc1	equ	0xFE6
 22769                           postdec1	equ	0xFE5
 22770                           fsr1h	equ	0xFE2
 22771                           fsr1l	equ	0xFE1
 22772                           indf2	equ	0xFDF
 22773                           postinc2	equ	0xFDE
 22774                           postdec2	equ	0xFDD
 22775                           plusw2	equ	0xFDB
 22776                           fsr2h	equ	0xFDA
 22777                           fsr2l	equ	0xFD9
 22778                           status	equ	0xFD8
 22779                           
 22780 ;; *************** function i2_I2C_Stop *****************
 22781 ;; Defined at:
 22782 ;;		line 59 in file "../My_header\My_I2C.h"
 22783 ;; Parameters:    Size  Location     Type
 22784 ;;		None
 22785 ;; Auto vars:     Size  Location     Type
 22786 ;;		None
 22787 ;; Return value:  Size  Location     Type
 22788 ;;		None               void
 22789 ;; Registers used:
 22790 ;;		wreg, status,2, status,0, cstack
 22791 ;; Tracked objects:
 22792 ;;		On entry : 0/0
 22793 ;;		On exit  : 0/0
 22794 ;;		Unchanged: 0/0
 22795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22800 ;;Total ram usage:        0 bytes
 22801 ;; Hardware stack levels used:    1
 22802 ;; Hardware stack levels required when called:    1
 22803 ;; This function calls:
 22804 ;;		i2_I2C_IdleCheck
 22805 ;; This function is called by:
 22806 ;;		_EEP_write32
 22807 ;; This function uses a non-reentrant model
 22808 ;;
 22809                           
 22810                           	psect	text101
 22811  016AF2                     __ptext101:
 22812                           	opt stack 0
 22813  016AF2                     i2_I2C_Stop:
 22814                           	opt stack 18
 22815                           
 22816                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 22817                           
 22818                           ;incstack = 0
 22819  016AF2  0E05               	movlw	5
 22820  016AF4  EC5B  F0B5         	call	i2_I2C_IdleCheck
 22821                           
 22822                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 22823  016AF8  84C5               	bsf	4037,2,c	;volatile
 22824  016AFA  0012               	return		;funcret
 22825  016AFC                     __end_ofi2_I2C_Stop:
 22826                           	opt stack 0
 22827                           pclatu	equ	0xFFB
 22828                           pclath	equ	0xFFA
 22829                           tblptru	equ	0xFF8
 22830                           tblptrh	equ	0xFF7
 22831                           tblptrl	equ	0xFF6
 22832                           tablat	equ	0xFF5
 22833                           prodh	equ	0xFF4
 22834                           prodl	equ	0xFF3
 22835                           intcon	equ	0xFF2
 22836                           intcon2	equ	0xFF1
 22837                           postinc0	equ	0xFEE
 22838                           fsr0h	equ	0xFEA
 22839                           fsr0l	equ	0xFE9
 22840                           wreg	equ	0xFE8
 22841                           indf1	equ	0xFE7
 22842                           postinc1	equ	0xFE6
 22843                           postdec1	equ	0xFE5
 22844                           fsr1h	equ	0xFE2
 22845                           fsr1l	equ	0xFE1
 22846                           indf2	equ	0xFDF
 22847                           postinc2	equ	0xFDE
 22848                           postdec2	equ	0xFDD
 22849                           plusw2	equ	0xFDB
 22850                           fsr2h	equ	0xFDA
 22851                           fsr2l	equ	0xFD9
 22852                           status	equ	0xFD8
 22853                           
 22854 ;; *************** function i2_I2C_Start *****************
 22855 ;; Defined at:
 22856 ;;		line 35 in file "../My_header\My_I2C.h"
 22857 ;; Parameters:    Size  Location     Type
 22858 ;;  adrs            1    wreg     unsigned char 
 22859 ;;  rw              1    2[COMRAM] unsigned char 
 22860 ;; Auto vars:     Size  Location     Type
 22861 ;;  adrs            1    3[COMRAM] unsigned char 
 22862 ;; Return value:  Size  Location     Type
 22863 ;;                  1    wreg      unsigned char 
 22864 ;; Registers used:
 22865 ;;		wreg, status,2, status,0, cstack
 22866 ;; Tracked objects:
 22867 ;;		On entry : 0/0
 22868 ;;		On exit  : 0/0
 22869 ;;		Unchanged: 0/0
 22870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22871 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22875 ;;Total ram usage:        2 bytes
 22876 ;; Hardware stack levels used:    1
 22877 ;; Hardware stack levels required when called:    1
 22878 ;; This function calls:
 22879 ;;		i2_I2C_IdleCheck
 22880 ;; This function is called by:
 22881 ;;		_EEP_write32
 22882 ;; This function uses a non-reentrant model
 22883 ;;
 22884                           
 22885                           	psect	text102
 22886  016894                     __ptext102:
 22887                           	opt stack 0
 22888  016894                     i2_I2C_Start:
 22889                           	opt stack 18
 22890                           
 22891                           ;incstack = 0
 22892                           ;i2I2C_Start@adrs stored from wreg
 22893  016894  6E04               	movwf	i2I2C_Start@adrs,c
 22894                           
 22895                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 22896  016896  0E05               	movlw	5
 22897  016898  EC5B  F0B5         	call	i2_I2C_IdleCheck
 22898                           
 22899                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 22900  01689C  80C5               	bsf	4037,0,c	;volatile
 22901                           
 22902                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 22903  01689E  0E05               	movlw	5
 22904  0168A0  EC5B  F0B5         	call	i2_I2C_IdleCheck
 22905                           
 22906                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 22907  0168A4  969E               	bcf	3998,3,c	;volatile
 22908                           
 22909                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 22910  0168A6  5004               	movf	i2I2C_Start@adrs,w,c
 22911  0168A8  2404               	addwf	i2I2C_Start@adrs,w,c
 22912  0168AA  2403               	addwf	i2I2C_Start@rw,w,c
 22913  0168AC  6EC9               	movwf	4041,c	;volatile
 22914  0168AE                     i2l319:
 22915  0168AE  A69E               	btfss	3998,3,c	;volatile
 22916  0168B0  D7FE               	goto	i2l319
 22917                           
 22918                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 22919  0168B2  ACC5               	btfss	4037,6,c	;volatile
 22920  0168B4  D002               	goto	i2u752_40
 22921  0168B6  0E01               	movlw	1
 22922  0168B8  0012               	return	
 22923  0168BA                     i2u752_40:
 22924  0168BA  0E00               	movlw	0
 22925  0168BC  0012               	return	
 22926  0168BE                     __end_ofi2_I2C_Start:
 22927                           	opt stack 0
 22928                           pclatu	equ	0xFFB
 22929                           pclath	equ	0xFFA
 22930                           tblptru	equ	0xFF8
 22931                           tblptrh	equ	0xFF7
 22932                           tblptrl	equ	0xFF6
 22933                           tablat	equ	0xFF5
 22934                           prodh	equ	0xFF4
 22935                           prodl	equ	0xFF3
 22936                           intcon	equ	0xFF2
 22937                           intcon2	equ	0xFF1
 22938                           postinc0	equ	0xFEE
 22939                           fsr0h	equ	0xFEA
 22940                           fsr0l	equ	0xFE9
 22941                           wreg	equ	0xFE8
 22942                           indf1	equ	0xFE7
 22943                           postinc1	equ	0xFE6
 22944                           postdec1	equ	0xFE5
 22945                           fsr1h	equ	0xFE2
 22946                           fsr1l	equ	0xFE1
 22947                           indf2	equ	0xFDF
 22948                           postinc2	equ	0xFDE
 22949                           postdec2	equ	0xFDD
 22950                           plusw2	equ	0xFDB
 22951                           fsr2h	equ	0xFDA
 22952                           fsr2l	equ	0xFD9
 22953                           status	equ	0xFD8
 22954                           
 22955 ;; *************** function i2_I2C_Send *****************
 22956 ;; Defined at:
 22957 ;;		line 65 in file "../My_header\My_I2C.h"
 22958 ;; Parameters:    Size  Location     Type
 22959 ;;  data            1    wreg     unsigned char 
 22960 ;; Auto vars:     Size  Location     Type
 22961 ;;  data            1    2[COMRAM] unsigned char 
 22962 ;; Return value:  Size  Location     Type
 22963 ;;                  1    wreg      unsigned char 
 22964 ;; Registers used:
 22965 ;;		wreg, status,2, status,0, cstack
 22966 ;; Tracked objects:
 22967 ;;		On entry : 0/0
 22968 ;;		On exit  : 0/0
 22969 ;;		Unchanged: 0/0
 22970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22975 ;;Total ram usage:        1 bytes
 22976 ;; Hardware stack levels used:    1
 22977 ;; Hardware stack levels required when called:    1
 22978 ;; This function calls:
 22979 ;;		i2_I2C_IdleCheck
 22980 ;; This function is called by:
 22981 ;;		_EEP_write32
 22982 ;; This function uses a non-reentrant model
 22983 ;;
 22984                           
 22985                           	psect	text103
 22986  016AA0                     __ptext103:
 22987                           	opt stack 0
 22988  016AA0                     i2_I2C_Send:
 22989                           	opt stack 18
 22990                           
 22991                           ;incstack = 0
 22992                           ;i2I2C_Send@data stored from wreg
 22993  016AA0  6E03               	movwf	i2I2C_Send@data,c
 22994                           
 22995                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 22996  016AA2  0E05               	movlw	5
 22997  016AA4  EC5B  F0B5         	call	i2_I2C_IdleCheck
 22998                           
 22999                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 23000  016AA8  969E               	bcf	3998,3,c	;volatile
 23001                           
 23002                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 23003  016AAA  C003  FFC9         	movff	i2I2C_Send@data,4041	;volatile
 23004  016AAE                     i2l334:
 23005  016AAE  A69E               	btfss	3998,3,c	;volatile
 23006  016AB0  D7FE               	goto	i2l334
 23007                           
 23008                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 23009                           ;	Return value of i2_I2C_Send is never used
 23010  016AB2  50C5               	movf	4037,w,c	;volatile
 23011  016AB4  0012               	return	
 23012  016AB6                     __end_ofi2_I2C_Send:
 23013                           	opt stack 0
 23014                           pclatu	equ	0xFFB
 23015                           pclath	equ	0xFFA
 23016                           tblptru	equ	0xFF8
 23017                           tblptrh	equ	0xFF7
 23018                           tblptrl	equ	0xFF6
 23019                           tablat	equ	0xFF5
 23020                           prodh	equ	0xFF4
 23021                           prodl	equ	0xFF3
 23022                           intcon	equ	0xFF2
 23023                           intcon2	equ	0xFF1
 23024                           postinc0	equ	0xFEE
 23025                           fsr0h	equ	0xFEA
 23026                           fsr0l	equ	0xFE9
 23027                           wreg	equ	0xFE8
 23028                           indf1	equ	0xFE7
 23029                           postinc1	equ	0xFE6
 23030                           postdec1	equ	0xFE5
 23031                           fsr1h	equ	0xFE2
 23032                           fsr1l	equ	0xFE1
 23033                           indf2	equ	0xFDF
 23034                           postinc2	equ	0xFDE
 23035                           postdec2	equ	0xFDD
 23036                           plusw2	equ	0xFDB
 23037                           fsr2h	equ	0xFDA
 23038                           fsr2l	equ	0xFD9
 23039                           status	equ	0xFD8
 23040                           
 23041 ;; *************** function i2_I2C_IdleCheck *****************
 23042 ;; Defined at:
 23043 ;;		line 21 in file "../My_header\My_I2C.h"
 23044 ;; Parameters:    Size  Location     Type
 23045 ;;  mask            1    wreg     unsigned char 
 23046 ;; Auto vars:     Size  Location     Type
 23047 ;;  mask            1    1[COMRAM] unsigned char 
 23048 ;; Return value:  Size  Location     Type
 23049 ;;		None               void
 23050 ;; Registers used:
 23051 ;;		wreg, status,2, status,0
 23052 ;; Tracked objects:
 23053 ;;		On entry : 0/0
 23054 ;;		On exit  : 0/0
 23055 ;;		Unchanged: 0/0
 23056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23061 ;;Total ram usage:        2 bytes
 23062 ;; Hardware stack levels used:    1
 23063 ;; This function calls:
 23064 ;;		Nothing
 23065 ;; This function is called by:
 23066 ;;		i2_I2C_Start
 23067 ;;		i2_I2C_Stop
 23068 ;;		i2_I2C_Send
 23069 ;; This function uses a non-reentrant model
 23070 ;;
 23071                           
 23072                           	psect	text104
 23073  016AB6                     __ptext104:
 23074                           	opt stack 0
 23075  016AB6                     i2_I2C_IdleCheck:
 23076                           	opt stack 18
 23077                           
 23078                           ;incstack = 0
 23079                           ;i2I2C_IdleCheck@mask stored from wreg
 23080  016AB6  6E02               	movwf	i2I2C_IdleCheck@mask,c
 23081  016AB8                     i2l7008:
 23082  016AB8  50C7               	movf	4039,w,c	;volatile
 23083  016ABA  1402               	andwf	i2I2C_IdleCheck@mask,w,c
 23084  016ABC  6E01               	movwf	??i2_I2C_IdleCheck& (0+255),c
 23085  016ABE  50C5               	movf	4037,w,c	;volatile
 23086  016AC0  0B1F               	andlw	31
 23087  016AC2  1001               	iorwf	??i2_I2C_IdleCheck,w,c
 23088  016AC4  0900               	iorlw	0
 23089  016AC6  B4D8               	btfsc	status,2,c
 23090  016AC8  0012               	return	
 23091  016ACA  D7F6               	goto	i2l7008
 23092  016ACC                     __end_ofi2_I2C_IdleCheck:
 23093                           	opt stack 0
 23094                           pclatu	equ	0xFFB
 23095                           pclath	equ	0xFFA
 23096                           tblptru	equ	0xFF8
 23097                           tblptrh	equ	0xFF7
 23098                           tblptrl	equ	0xFF6
 23099                           tablat	equ	0xFF5
 23100                           prodh	equ	0xFF4
 23101                           prodl	equ	0xFF3
 23102                           intcon	equ	0xFF2
 23103                           intcon2	equ	0xFF1
 23104                           postinc0	equ	0xFEE
 23105                           fsr0h	equ	0xFEA
 23106                           fsr0l	equ	0xFE9
 23107                           wreg	equ	0xFE8
 23108                           indf1	equ	0xFE7
 23109                           postinc1	equ	0xFE6
 23110                           postdec1	equ	0xFE5
 23111                           fsr1h	equ	0xFE2
 23112                           fsr1l	equ	0xFE1
 23113                           indf2	equ	0xFDF
 23114                           postinc2	equ	0xFDE
 23115                           postdec2	equ	0xFDD
 23116                           plusw2	equ	0xFDB
 23117                           fsr2h	equ	0xFDA
 23118                           fsr2l	equ	0xFD9
 23119                           status	equ	0xFD8
 23120                           
 23121 ;; *************** function _USB_ISR *****************
 23122 ;; Defined at:
 23123 ;;		line 3 in file "../My_header/usb_cdc/My_usb_cdc.c"
 23124 ;; Parameters:    Size  Location     Type
 23125 ;;		None
 23126 ;; Auto vars:     Size  Location     Type
 23127 ;;		None
 23128 ;; Return value:  Size  Location     Type
 23129 ;;		None               void
 23130 ;; Registers used:
 23131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23132 ;; Tracked objects:
 23133 ;;		On entry : 0/0
 23134 ;;		On exit  : 0/0
 23135 ;;		Unchanged: 0/0
 23136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23141 ;;Total ram usage:        0 bytes
 23142 ;; Hardware stack levels used:    1
 23143 ;; Hardware stack levels required when called:    9
 23144 ;; This function calls:
 23145 ;;		_USBDeviceTasks
 23146 ;; This function is called by:
 23147 ;;		_ISR
 23148 ;; This function uses a non-reentrant model
 23149 ;;
 23150                           
 23151                           	psect	text105
 23152  016AFC                     __ptext105:
 23153                           	opt stack 0
 23154  016AFC                     _USB_ISR:
 23155                           	opt stack 12
 23156                           
 23157                           ;My_usb_cdc.c: 4: USBDeviceTasks();
 23158                           
 23159                           ;incstack = 0
 23160  016AFC  ECCB  F099         	call	_USBDeviceTasks	;wreg free
 23161  016B00  0012               	return		;funcret
 23162  016B02                     __end_of_USB_ISR:
 23163                           	opt stack 0
 23164                           pclatu	equ	0xFFB
 23165                           pclath	equ	0xFFA
 23166                           tblptru	equ	0xFF8
 23167                           tblptrh	equ	0xFF7
 23168                           tblptrl	equ	0xFF6
 23169                           tablat	equ	0xFF5
 23170                           prodh	equ	0xFF4
 23171                           prodl	equ	0xFF3
 23172                           intcon	equ	0xFF2
 23173                           intcon2	equ	0xFF1
 23174                           postinc0	equ	0xFEE
 23175                           fsr0h	equ	0xFEA
 23176                           fsr0l	equ	0xFE9
 23177                           wreg	equ	0xFE8
 23178                           indf1	equ	0xFE7
 23179                           postinc1	equ	0xFE6
 23180                           postdec1	equ	0xFE5
 23181                           fsr1h	equ	0xFE2
 23182                           fsr1l	equ	0xFE1
 23183                           indf2	equ	0xFDF
 23184                           postinc2	equ	0xFDE
 23185                           postdec2	equ	0xFDD
 23186                           plusw2	equ	0xFDB
 23187                           fsr2h	equ	0xFDA
 23188                           fsr2l	equ	0xFD9
 23189                           status	equ	0xFD8
 23190                           
 23191 ;; *************** function _USBDeviceTasks *****************
 23192 ;; Defined at:
 23193 ;;		line 489 in file "../My_header/usb_cdc/usb/usb_device.c"
 23194 ;; Parameters:    Size  Location     Type
 23195 ;;		None
 23196 ;; Auto vars:     Size  Location     Type
 23197 ;;  i               1   29[COMRAM] unsigned char 
 23198 ;; Return value:  Size  Location     Type
 23199 ;;		None               void
 23200 ;; Registers used:
 23201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23202 ;; Tracked objects:
 23203 ;;		On entry : 0/0
 23204 ;;		On exit  : 0/0
 23205 ;;		Unchanged: 0/0
 23206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23210 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23211 ;;Total ram usage:        1 bytes
 23212 ;; Hardware stack levels used:    1
 23213 ;; Hardware stack levels required when called:    8
 23214 ;; This function calls:
 23215 ;;		_USBCtrlEPAllowStatusStage
 23216 ;;		_USBCtrlEPService
 23217 ;;		_USBStallHandler
 23218 ;;		_USBSuspend
 23219 ;;		_USBWakeFromSuspend
 23220 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23221 ;;		i2_USBDeviceInit
 23222 ;; This function is called by:
 23223 ;;		_USB_ISR
 23224 ;; This function uses a non-reentrant model
 23225 ;;
 23226                           
 23227                           	psect	text106
 23228  013396                     __ptext106:
 23229                           	opt stack 0
 23230  013396                     _USBDeviceTasks:
 23231                           	opt stack 12
 23232                           
 23233                           ;usb_device.c: 491: uint8_t i;
 23234                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 23235                           
 23236                           ;incstack = 0
 23237  013396  0445               	decf	_USBDeviceState,w,c	;volatile
 23238  013398  B4D8               	btfsc	status,2,c
 23239                           
 23240                           ;usb_device.c: 603: {
 23241                           ;usb_device.c: 613: if(!UCONbits.SE0)
 23242  01339A  BA65               	btfsc	3941,5,c	;volatile
 23243  01339C  D008               	goto	i2l8490
 23244                           
 23245                           ;usb_device.c: 614: {
 23246                           ;usb_device.c: 615: {UIR = 0;};
 23247  01339E  0E00               	movlw	0
 23248  0133A0  6E62               	movwf	3938,c	;volatile
 23249                           
 23250                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 23251  0133A2  010F               	movlb	15	; () banked
 23252  0133A4  8136               	bsf	54,0,b	;volatile
 23253                           
 23254                           ; BSR set to: 15
 23255                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 23256  0133A6  010F               	movlb	15	; () banked
 23257  0133A8  8936               	bsf	54,4,b	;volatile
 23258                           
 23259                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 23260  0133AA  0E02               	movlw	2
 23261  0133AC  6E45               	movwf	_USBDeviceState,c	;volatile
 23262  0133AE                     i2l8490:
 23263                           
 23264                           ;usb_device.c: 622: }
 23265                           ;usb_device.c: 623: }
 23266                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 23267  0133AE  A462               	btfss	3938,2,c	;volatile
 23268  0133B0  D006               	goto	i2l8498
 23269  0133B2  010F               	movlb	15	; () banked
 23270  0133B4  A536               	btfss	54,2,b	;volatile
 23271  0133B6  D003               	goto	i2l8498
 23272                           
 23273                           ; BSR set to: 15
 23274                           ;usb_device.c: 640: {
 23275                           ;usb_device.c: 641: (UIR &= 0xFB);
 23276  0133B8  9462               	bcf	3938,2,c	;volatile
 23277                           
 23278                           ; BSR set to: 15
 23279                           ;usb_device.c: 645: USBWakeFromSuspend();
 23280  0133BA  EC22  F0B3         	call	_USBWakeFromSuspend	;wreg free
 23281  0133BE                     i2l8498:
 23282                           
 23283                           ;usb_device.c: 647: }
 23284                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 23285  0133BE  A265               	btfss	3941,1,c	;volatile
 23286  0133C0  D002               	goto	i2l1151
 23287                           
 23288                           ;usb_device.c: 653: {
 23289                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 23290  0133C2  98A1               	bcf	4001,4,c	;volatile
 23291                           
 23292                           ;usb_device.c: 655: return;
 23293  0133C4  0012               	return	
 23294  0133C6                     i2l1151:
 23295                           
 23296                           ;usb_device.c: 656: }
 23297                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 23298  0133C6  A062               	btfss	3938,0,c	;volatile
 23299  0133C8  D009               	goto	i2l8512
 23300  0133CA  010F               	movlb	15	; () banked
 23301  0133CC  A136               	btfss	54,0,b	;volatile
 23302  0133CE  D006               	goto	i2l8512
 23303                           
 23304                           ; BSR set to: 15
 23305                           ;usb_device.c: 669: {
 23306                           ;usb_device.c: 670: USBDeviceInit();
 23307  0133D0  EC6E  F09A         	call	i2_USBDeviceInit	;wreg free
 23308                           
 23309                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 23310  0133D4  88A0               	bsf	4000,4,c	;volatile
 23311                           
 23312                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 23313  0133D6  0E04               	movlw	4
 23314  0133D8  6E45               	movwf	_USBDeviceState,c	;volatile
 23315                           
 23316                           ;usb_device.c: 686: (UIR &= 0xFE);
 23317  0133DA  9062               	bcf	3938,0,c	;volatile
 23318  0133DC                     i2l8512:
 23319                           
 23320                           ;usb_device.c: 687: }
 23321                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 23322  0133DC  A862               	btfss	3938,4,c	;volatile
 23323  0133DE  D006               	goto	i2l8520
 23324  0133E0  010F               	movlb	15	; () banked
 23325  0133E2  A936               	btfss	54,4,b	;volatile
 23326  0133E4  D003               	goto	i2l8520
 23327                           
 23328                           ; BSR set to: 15
 23329                           ;usb_device.c: 693: {
 23330                           ;usb_device.c: 698: USBSuspend();
 23331  0133E6  EC1E  F0B4         	call	_USBSuspend	;wreg free
 23332                           
 23333                           ;usb_device.c: 701: (UIR &= 0xEF);
 23334  0133EA  9862               	bcf	3938,4,c	;volatile
 23335  0133EC                     i2l8520:
 23336                           
 23337                           ;usb_device.c: 702: }
 23338                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 23339  0133EC  AC62               	btfss	3938,6,c	;volatile
 23340  0133EE  D019               	goto	i2l8536
 23341                           
 23342                           ;usb_device.c: 705: {
 23343                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 23344  0133F0  010F               	movlb	15	; () banked
 23345  0133F2  AD36               	btfss	54,6,b	;volatile
 23346  0133F4  D00E               	goto	i2l8526
 23347                           
 23348                           ; BSR set to: 15
 23349                           ;usb_device.c: 707: {
 23350                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 23351  0133F6  0E00               	movlw	0
 23352  0133F8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23353  0133FA  0E73               	movlw	115
 23354  0133FC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23355  0133FE  0E00               	movlw	0
 23356  013400  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23357  013402  0E00               	movlw	0
 23358  013404  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23359  013406  0E00               	movlw	0
 23360  013408  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23361  01340A  0E01               	movlw	1
 23362  01340C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23363  01340E  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23364  013412                     i2l8526:
 23365                           
 23366                           ;usb_device.c: 709: }
 23367                           ;usb_device.c: 710: (UIR &= 0xBF);
 23368  013412  9C62               	bcf	3938,6,c	;volatile
 23369                           
 23370                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 23371  013414  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23372  013416  A4D8               	btfss	status,2,c
 23373                           
 23374                           ;usb_device.c: 736: {
 23375                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 23376  013418  0648               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 23377                           
 23378                           ;usb_device.c: 738: }
 23379                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 23380  01341A  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23381  01341C  B4D8               	btfsc	status,2,c
 23382                           
 23383                           ;usb_device.c: 745: {
 23384                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 23385  01341E  ECE7  F0A5         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23386  013422                     i2l8536:
 23387                           
 23388                           ;usb_device.c: 747: }
 23389                           ;usb_device.c: 749: }
 23390                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 23391  013422  AA62               	btfss	3938,5,c	;volatile
 23392  013424  D004               	goto	i2l8542
 23393  013426  010F               	movlb	15	; () banked
 23394  013428  BB36               	btfsc	54,5,b	;volatile
 23395                           
 23396                           ; BSR set to: 15
 23397                           ;usb_device.c: 752: {
 23398                           ;usb_device.c: 753: USBStallHandler();
 23399  01342A  ECDD  F0B1         	call	_USBStallHandler	;wreg free
 23400  01342E                     i2l8542:
 23401                           
 23402                           ;usb_device.c: 754: }
 23403                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 23404  01342E  A262               	btfss	3938,1,c	;volatile
 23405  013430  D012               	goto	i2l8550
 23406  013432  010F               	movlb	15	; () banked
 23407  013434  A336               	btfss	54,1,b	;volatile
 23408  013436  D00F               	goto	i2l8550
 23409                           
 23410                           ; BSR set to: 15
 23411                           ;usb_device.c: 757: {
 23412                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 23413  013438  0E7F               	movlw	127
 23414  01343A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23415  01343C  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23416  01343E  0E00               	movlw	0
 23417  013440  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23418  013442  0E00               	movlw	0
 23419  013444  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23420  013446  0E00               	movlw	0
 23421  013448  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23422  01344A  0E01               	movlw	1
 23423  01344C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23424  01344E  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23425                           
 23426                           ;usb_device.c: 759: {UEIR = 0;};
 23427  013452  0E00               	movlw	0
 23428  013454  6E63               	movwf	3939,c	;volatile
 23429  013456                     i2l8550:
 23430                           
 23431                           ;usb_device.c: 767: }
 23432                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 23433  013456  0E04               	movlw	4
 23434  013458  6045               	cpfslt	_USBDeviceState,c	;volatile
 23435  01345A  D002               	goto	i2l1161
 23436                           
 23437                           ;usb_device.c: 775: {
 23438                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 23439  01345C  98A1               	bcf	4001,4,c	;volatile
 23440                           
 23441                           ;usb_device.c: 777: return;
 23442  01345E  0012               	return	
 23443  013460                     i2l1161:
 23444                           
 23445                           ;usb_device.c: 778: }
 23446                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 23447  013460  010F               	movlb	15	; () banked
 23448  013462  A736               	btfss	54,3,b	;volatile
 23449  013464  D039               	goto	i2l1162
 23450                           
 23451                           ; BSR set to: 15
 23452                           ;usb_device.c: 784: {
 23453                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 23454  013466  0E00               	movlw	0
 23455  013468  6E1E               	movwf	USBDeviceTasks@i,c
 23456  01346A                     i2l8556:
 23457                           
 23458                           ; BSR set to: 15
 23459  01346A  0E03               	movlw	3
 23460  01346C  641E               	cpfsgt	USBDeviceTasks@i,c
 23461  01346E  D001               	goto	i2l1163
 23462  013470  D033               	goto	i2l1162
 23463  013472                     i2l1163:
 23464                           
 23465                           ;usb_device.c: 786: {
 23466                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 23467  013472  A662               	btfss	3938,3,c	;volatile
 23468  013474  D031               	goto	i2l1162
 23469                           
 23470                           ;usb_device.c: 788: {
 23471                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 23472  013476  CF64 F057          	movff	3940,_USTATcopy	;volatile
 23473                           
 23474                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 23475  01347A  3057               	rrcf	_USTATcopy,w,c	;volatile
 23476  01347C  32E8               	rrcf	wreg,f,c
 23477  01347E  32E8               	rrcf	wreg,f,c
 23478  013480  0B0F               	andlw	15
 23479  013482  6E4D               	movwf	_endpoint_number,c	;volatile
 23480                           
 23481                           ;usb_device.c: 793: (UIR &= 0xF7);
 23482  013484  9662               	bcf	3938,3,c	;volatile
 23483                           
 23484                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 23485  013486  B457               	btfsc	_USTATcopy,2,c	;volatile
 23486  013488  D007               	goto	i2l8570
 23487                           
 23488                           ;usb_device.c: 799: {
 23489                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 23490  01348A  504D               	movf	_endpoint_number,w,c	;volatile
 23491  01348C  0D01               	mullw	1
 23492  01348E  0E7E               	movlw	low _ep_data_out
 23493  013490  24F3               	addwf	prodl,w,c
 23494  013492  6ED9               	movwf	fsr2l,c
 23495  013494  0E00               	movlw	high _ep_data_out
 23496  013496  D006               	goto	L8
 23497  013498                     i2l8570:
 23498                           
 23499                           ;usb_device.c: 802: else
 23500                           ;usb_device.c: 803: {
 23501                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 23502  013498  504D               	movf	_endpoint_number,w,c	;volatile
 23503  01349A  0D01               	mullw	1
 23504  01349C  0E7B               	movlw	low _ep_data_in
 23505  01349E  24F3               	addwf	prodl,w,c
 23506  0134A0  6ED9               	movwf	fsr2l,c
 23507  0134A2  0E00               	movlw	high _ep_data_in
 23508  0134A4                     L8:
 23509  0134A4  20F4               	addwfc	prodh,w,c
 23510  0134A6  6EDA               	movwf	fsr2h,c
 23511  0134A8  0100               	movlb	0	; () banked
 23512  0134AA  70DF               	btg	indf2,0,c
 23513                           
 23514                           ; BSR set to: 0
 23515                           ;usb_device.c: 805: }
 23516                           ;usb_device.c: 810: if(endpoint_number == 0)
 23517                           
 23518                           ; BSR set to: 0
 23519  0134AC  504D               	movf	_endpoint_number,w,c	;volatile
 23520  0134AE  A4D8               	btfss	status,2,c
 23521  0134B0  D003               	goto	i2l8576
 23522                           
 23523                           ; BSR set to: 0
 23524                           ;usb_device.c: 811: {
 23525                           ;usb_device.c: 812: USBCtrlEPService();
 23526  0134B2  EC1A  F0A5         	call	_USBCtrlEPService	;wreg free
 23527                           
 23528                           ;usb_device.c: 813: }
 23529  0134B6  D00E               	goto	i2l8578
 23530  0134B8                     i2l8576:
 23531                           
 23532                           ;usb_device.c: 814: else
 23533                           ;usb_device.c: 815: {
 23534                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 23535  0134B8  0E00               	movlw	0
 23536  0134BA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23537  0134BC  0E72               	movlw	114
 23538  0134BE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23539  0134C0  0E57               	movlw	low _USTATcopy
 23540  0134C2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23541  0134C4  0E00               	movlw	high _USTATcopy
 23542  0134C6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23543  0134C8  0E00               	movlw	0
 23544  0134CA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23545  0134CC  0E00               	movlw	0
 23546  0134CE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23547  0134D0  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23548  0134D4                     i2l8578:
 23549  0134D4  2A1E               	incf	USBDeviceTasks@i,f,c
 23550  0134D6  D7C9               	goto	i2l8556
 23551  0134D8                     i2l1162:
 23552                           
 23553                           ;usb_device.c: 822: }
 23554                           ;usb_device.c: 823: }
 23555                           ;usb_device.c: 824: }
 23556                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 23557  0134D8  98A1               	bcf	4001,4,c	;volatile
 23558  0134DA  0012               	return		;funcret
 23559  0134DC                     __end_of_USBDeviceTasks:
 23560                           	opt stack 0
 23561                           pclatu	equ	0xFFB
 23562                           pclath	equ	0xFFA
 23563                           tblptru	equ	0xFF8
 23564                           tblptrh	equ	0xFF7
 23565                           tblptrl	equ	0xFF6
 23566                           tablat	equ	0xFF5
 23567                           prodh	equ	0xFF4
 23568                           prodl	equ	0xFF3
 23569                           intcon	equ	0xFF2
 23570                           intcon2	equ	0xFF1
 23571                           postinc0	equ	0xFEE
 23572                           fsr0h	equ	0xFEA
 23573                           fsr0l	equ	0xFE9
 23574                           wreg	equ	0xFE8
 23575                           indf1	equ	0xFE7
 23576                           postinc1	equ	0xFE6
 23577                           postdec1	equ	0xFE5
 23578                           fsr1h	equ	0xFE2
 23579                           fsr1l	equ	0xFE1
 23580                           indf2	equ	0xFDF
 23581                           postinc2	equ	0xFDE
 23582                           postdec2	equ	0xFDD
 23583                           plusw2	equ	0xFDB
 23584                           fsr2h	equ	0xFDA
 23585                           fsr2l	equ	0xFD9
 23586                           status	equ	0xFD8
 23587                           
 23588 ;; *************** function i2_USBDeviceInit *****************
 23589 ;; Defined at:
 23590 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 23591 ;; Parameters:    Size  Location     Type
 23592 ;;		None
 23593 ;; Auto vars:     Size  Location     Type
 23594 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 23595 ;; Return value:  Size  Location     Type
 23596 ;;		None               void
 23597 ;; Registers used:
 23598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23599 ;; Tracked objects:
 23600 ;;		On entry : 0/0
 23601 ;;		On exit  : 0/0
 23602 ;;		Unchanged: 0/0
 23603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23608 ;;Total ram usage:        1 bytes
 23609 ;; Hardware stack levels used:    1
 23610 ;; Hardware stack levels required when called:    1
 23611 ;; This function calls:
 23612 ;;		i2_memset
 23613 ;; This function is called by:
 23614 ;;		_USBDeviceTasks
 23615 ;; This function uses a non-reentrant model
 23616 ;;
 23617                           
 23618                           	psect	text107
 23619  0134DC                     __ptext107:
 23620                           	opt stack 0
 23621  0134DC                     i2_USBDeviceInit:
 23622                           	opt stack 18
 23623                           
 23624                           ;usb_device.c: 300: uint8_t i;
 23625                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 23626                           
 23627                           ;incstack = 0
 23628  0134DC  98A0               	bcf	4000,4,c	;volatile
 23629                           
 23630                           ;usb_device.c: 305: {UEIR = 0;};
 23631  0134DE  0E00               	movlw	0
 23632  0134E0  6E63               	movwf	3939,c	;volatile
 23633                           
 23634                           ;usb_device.c: 308: {UIR = 0;};
 23635  0134E2  0E00               	movlw	0
 23636  0134E4  6E62               	movwf	3938,c	;volatile
 23637                           
 23638                           ;usb_device.c: 311: UEP0 = 0;
 23639  0134E6  0E00               	movlw	0
 23640  0134E8  010F               	movlb	15	; () banked
 23641  0134EA  6F26               	movwf	38,b	;volatile
 23642                           
 23643                           ; BSR set to: 15
 23644                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 23645  0134EC  0E27               	movlw	39
 23646  0134EE  6E01               	movwf	i2memset@p1,c
 23647  0134F0  0E0F               	movlw	15
 23648  0134F2  6E02               	movwf	i2memset@p1+1,c
 23649  0134F4  0E00               	movlw	0
 23650  0134F6  6E04               	movwf	i2memset@c+1,c
 23651  0134F8  0E00               	movlw	0
 23652  0134FA  6E03               	movwf	i2memset@c,c
 23653  0134FC  0E00               	movlw	0
 23654  0134FE  6E06               	movwf	i2memset@n+1,c
 23655  013500  0E02               	movlw	2
 23656  013502  6E05               	movwf	i2memset@n,c
 23657  013504  EC34  F0B4         	call	i2_memset	;wreg free
 23658                           
 23659                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 23660  013508  0E16               	movlw	22
 23661  01350A  010F               	movlb	15	; () banked
 23662  01350C  6F39               	movwf	57,b	;volatile
 23663                           
 23664                           ; BSR set to: 15
 23665  01350E  0E9F               	movlw	159
 23666  013510  010F               	movlb	15	; () banked
 23667  013512  6F37               	movwf	55,b	;volatile
 23668                           
 23669                           ; BSR set to: 15
 23670  013514  0E7B               	movlw	123
 23671  013516  010F               	movlb	15	; () banked
 23672  013518  6F36               	movwf	54,b	;volatile
 23673                           
 23674                           ; BSR set to: 15
 23675                           ;usb_device.c: 318: ;
 23676                           ;usb_device.c: 321: ;
 23677                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 23678  01351A  0E00               	movlw	0
 23679  01351C  6E09               	movwf	i2USBDeviceInit@i,c
 23680  01351E                     i2l7664:
 23681                           
 23682                           ; BSR set to: 15
 23683  01351E  0E0B               	movlw	11
 23684  013520  6409               	cpfsgt	i2USBDeviceInit@i,c
 23685  013522  D001               	goto	i2l7668
 23686  013524  D00E               	goto	i2l1139
 23687  013526                     i2l7668:
 23688                           
 23689                           ;usb_device.c: 325: {
 23690                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 23691  013526  5009               	movf	i2USBDeviceInit@i,w,c
 23692  013528  0D04               	mullw	4
 23693  01352A  0E00               	movlw	0
 23694  01352C  24F3               	addwf	prodl,w,c
 23695  01352E  6ED9               	movwf	fsr2l,c
 23696  013530  0E0D               	movlw	13
 23697  013532  20F4               	addwfc	prodh,w,c
 23698  013534  6EDA               	movwf	fsr2h,c
 23699  013536  6ADE               	clrf	postinc2,c
 23700  013538  6ADE               	clrf	postinc2,c
 23701  01353A  6ADE               	clrf	postinc2,c
 23702  01353C  6ADD               	clrf	postdec2,c
 23703  01353E  2A09               	incf	i2USBDeviceInit@i,f,c
 23704  013540  D7EE               	goto	i2l7664
 23705  013542                     i2l1139:
 23706                           
 23707                           ;usb_device.c: 327: }
 23708                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 23709  013542  8C65               	bsf	3941,6,c	;volatile
 23710                           
 23711                           ;usb_device.c: 333: UADDR = 0x00;
 23712  013544  0E00               	movlw	0
 23713  013546  010F               	movlb	15	; () banked
 23714  013548  6F38               	movwf	56,b	;volatile
 23715                           
 23716                           ; BSR set to: 15
 23717                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 23718  01354A  9865               	bcf	3941,4,c	;volatile
 23719                           
 23720                           ; BSR set to: 15
 23721                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 23722  01354C  9C65               	bcf	3941,6,c	;volatile
 23723                           
 23724                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 23725  01354E  D00C               	goto	i2l7688
 23726  013550                     i2l7680:
 23727                           
 23728                           ;usb_device.c: 343: {
 23729                           ;usb_device.c: 344: (UIR &= 0xF7);
 23730  013550  9662               	bcf	3938,3,c	;volatile
 23731                           
 23732                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 23733  013552  0E00               	movlw	0
 23734  013554  0100               	movlb	0	; () banked
 23735  013556  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23736                           
 23737                           ; BSR set to: 0
 23738                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 23739  013558  0E00               	movlw	0
 23740  01355A  0100               	movlb	0	; () banked
 23741  01355C  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 23742                           
 23743                           ; BSR set to: 0
 23744                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 23745  01355E  0E00               	movlw	0
 23746  013560  0100               	movlb	0	; () banked
 23747  013562  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 23748  013564  0E00               	movlw	0
 23749  013566  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 23750  013568                     i2l7688:
 23751  013568  B662               	btfsc	3938,3,c	;volatile
 23752  01356A  D7F2               	goto	i2l7680
 23753                           
 23754                           ;usb_device.c: 349: }
 23755                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 23756  01356C  0E01               	movlw	1
 23757  01356E  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 23758                           
 23759                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 23760  013570  0E01               	movlw	1
 23761  013572  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 23762                           
 23763                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 23764  013574  0E00               	movlw	0
 23765  013576  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 23766                           
 23767                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 23768  013578  0E00               	movlw	0
 23769  01357A  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 23770                           
 23771                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 23772  01357C  0E00               	movlw	0
 23773  01357E  0100               	movlb	0	; () banked
 23774  013580  6F90               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 23775                           
 23776                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 23777  013582  0E00               	movlw	0
 23778  013584  6E09               	movwf	i2USBDeviceInit@i,c
 23779  013586                     i2l7692:
 23780                           
 23781                           ; BSR set to: 0
 23782  013586  0E02               	movlw	2
 23783  013588  6409               	cpfsgt	i2USBDeviceInit@i,c
 23784  01358A  D001               	goto	i2l7696
 23785  01358C  D02E               	goto	i2l7702
 23786  01358E                     i2l7696:
 23787                           
 23788                           ;usb_device.c: 363: {
 23789                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 23790  01358E  5009               	movf	i2USBDeviceInit@i,w,c
 23791  013590  0D02               	mullw	2
 23792  013592  0E6F               	movlw	low _pBDTEntryIn
 23793  013594  24F3               	addwf	prodl,w,c
 23794  013596  6ED9               	movwf	fsr2l,c
 23795  013598  0E00               	movlw	high _pBDTEntryIn
 23796  01359A  20F4               	addwfc	prodh,w,c
 23797  01359C  6EDA               	movwf	fsr2h,c
 23798  01359E  0E00               	movlw	0
 23799  0135A0  6EDE               	movwf	postinc2,c
 23800  0135A2  0E00               	movlw	0
 23801  0135A4  6EDD               	movwf	postdec2,c
 23802                           
 23803                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 23804  0135A6  5009               	movf	i2USBDeviceInit@i,w,c
 23805  0135A8  0D02               	mullw	2
 23806  0135AA  0E75               	movlw	low _pBDTEntryOut
 23807  0135AC  24F3               	addwf	prodl,w,c
 23808  0135AE  6ED9               	movwf	fsr2l,c
 23809  0135B0  0E00               	movlw	high _pBDTEntryOut
 23810  0135B2  20F4               	addwfc	prodh,w,c
 23811  0135B4  6EDA               	movwf	fsr2h,c
 23812  0135B6  0E00               	movlw	0
 23813  0135B8  6EDE               	movwf	postinc2,c
 23814  0135BA  0E00               	movlw	0
 23815  0135BC  6EDD               	movwf	postdec2,c
 23816                           
 23817                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 23818  0135BE  5009               	movf	i2USBDeviceInit@i,w,c
 23819  0135C0  0D01               	mullw	1
 23820  0135C2  0E7B               	movlw	low _ep_data_in
 23821  0135C4  24F3               	addwf	prodl,w,c
 23822  0135C6  6ED9               	movwf	fsr2l,c
 23823  0135C8  0E00               	movlw	high _ep_data_in
 23824  0135CA  20F4               	addwfc	prodh,w,c
 23825  0135CC  6EDA               	movwf	fsr2h,c
 23826  0135CE  0E00               	movlw	0
 23827  0135D0  6EDF               	movwf	indf2,c
 23828                           
 23829                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 23830  0135D2  5009               	movf	i2USBDeviceInit@i,w,c
 23831  0135D4  0D01               	mullw	1
 23832  0135D6  0E7E               	movlw	low _ep_data_out
 23833  0135D8  24F3               	addwf	prodl,w,c
 23834  0135DA  6ED9               	movwf	fsr2l,c
 23835  0135DC  0E00               	movlw	high _ep_data_out
 23836  0135DE  20F4               	addwfc	prodh,w,c
 23837  0135E0  6EDA               	movwf	fsr2h,c
 23838  0135E2  0E00               	movlw	0
 23839  0135E4  6EDF               	movwf	indf2,c
 23840  0135E6  2A09               	incf	i2USBDeviceInit@i,f,c
 23841  0135E8  D7CE               	goto	i2l7692
 23842  0135EA                     i2l7702:
 23843                           
 23844                           ;usb_device.c: 368: }
 23845                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 23846  0135EA  0E08               	movlw	8
 23847  0135EC  0100               	movlb	0	; () banked
 23848  0135EE  6F6F               	movwf	_pBDTEntryIn& (0+255),b
 23849  0135F0  0E0D               	movlw	13
 23850  0135F2  0100               	movlb	0	; () banked
 23851  0135F4  6F70               	movwf	(_pBDTEntryIn+1)& (0+255),b
 23852                           
 23853                           ; BSR set to: 0
 23854                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 23855  0135F6  0E16               	movlw	22
 23856  0135F8  010F               	movlb	15	; () banked
 23857  0135FA  6F26               	movwf	38,b	;volatile
 23858                           
 23859                           ; BSR set to: 15
 23860                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 23861  0135FC  0E0D               	movlw	13
 23862  0135FE  010D               	movlb	13	; () banked
 23863  013600  6F03               	movwf	3,b	;volatile
 23864  013602  0E30               	movlw	48
 23865  013604  6F02               	movwf	2,b	;volatile
 23866                           
 23867                           ; BSR set to: 13
 23868                           ;usb_device.c: 376: BDT[0].CNT = 8;
 23869  013606  0E08               	movlw	8
 23870  013608  010D               	movlb	13	; () banked
 23871  01360A  6F01               	movwf	1,b	;volatile
 23872                           
 23873                           ; BSR set to: 13
 23874                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 23875  01360C  0E04               	movlw	4
 23876  01360E  010D               	movlb	13	; () banked
 23877  013610  6F00               	movwf	0,b	;volatile
 23878                           
 23879                           ; BSR set to: 13
 23880                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 23881  013612  010D               	movlb	13	; () banked
 23882  013614  8F00               	bsf	0,7,b	;volatile
 23883                           
 23884                           ; BSR set to: 13
 23885                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 23886  013616  0E00               	movlw	0
 23887  013618  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 23888                           
 23889                           ; BSR set to: 13
 23890                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 23891  01361A  0E00               	movlw	0
 23892  01361C  6E45               	movwf	_USBDeviceState,c	;volatile
 23893                           
 23894                           ; BSR set to: 13
 23895  01361E  0012               	return		;funcret
 23896  013620                     __end_ofi2_USBDeviceInit:
 23897                           	opt stack 0
 23898                           pclatu	equ	0xFFB
 23899                           pclath	equ	0xFFA
 23900                           tblptru	equ	0xFF8
 23901                           tblptrh	equ	0xFF7
 23902                           tblptrl	equ	0xFF6
 23903                           tablat	equ	0xFF5
 23904                           prodh	equ	0xFF4
 23905                           prodl	equ	0xFF3
 23906                           intcon	equ	0xFF2
 23907                           intcon2	equ	0xFF1
 23908                           postinc0	equ	0xFEE
 23909                           fsr0h	equ	0xFEA
 23910                           fsr0l	equ	0xFE9
 23911                           wreg	equ	0xFE8
 23912                           indf1	equ	0xFE7
 23913                           postinc1	equ	0xFE6
 23914                           postdec1	equ	0xFE5
 23915                           fsr1h	equ	0xFE2
 23916                           fsr1l	equ	0xFE1
 23917                           indf2	equ	0xFDF
 23918                           postinc2	equ	0xFDE
 23919                           postdec2	equ	0xFDD
 23920                           plusw2	equ	0xFDB
 23921                           fsr2h	equ	0xFDA
 23922                           fsr2l	equ	0xFD9
 23923                           status	equ	0xFD8
 23924                           
 23925 ;; *************** function _USBWakeFromSuspend *****************
 23926 ;; Defined at:
 23927 ;;		line 2302 in file "../My_header/usb_cdc/usb/usb_device.c"
 23928 ;; Parameters:    Size  Location     Type
 23929 ;;		None
 23930 ;; Auto vars:     Size  Location     Type
 23931 ;;		None
 23932 ;; Return value:  Size  Location     Type
 23933 ;;		None               void
 23934 ;; Registers used:
 23935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23936 ;; Tracked objects:
 23937 ;;		On entry : 0/0
 23938 ;;		On exit  : 0/0
 23939 ;;		Unchanged: 0/0
 23940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23945 ;;Total ram usage:        0 bytes
 23946 ;; Hardware stack levels used:    1
 23947 ;; Hardware stack levels required when called:    4
 23948 ;; This function calls:
 23949 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23950 ;; This function is called by:
 23951 ;;		_USBDeviceTasks
 23952 ;; This function uses a non-reentrant model
 23953 ;;
 23954                           
 23955                           	psect	text108
 23956  016644                     __ptext108:
 23957                           	opt stack 0
 23958  016644                     _USBWakeFromSuspend:
 23959                           	opt stack 15
 23960                           
 23961                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 23962                           
 23963                           ; BSR set to: 13
 23964                           ;incstack = 0
 23965  016644  0E00               	movlw	0
 23966  016646  0100               	movlb	0	; () banked
 23967  016648  6F90               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 23968                           
 23969                           ; BSR set to: 0
 23970                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 23971  01664A  0E00               	movlw	0
 23972  01664C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23973  01664E  0E74               	movlw	116
 23974  016650  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23975  016652  0E00               	movlw	0
 23976  016654  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23977  016656  0E00               	movlw	0
 23978  016658  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23979  01665A  0E00               	movlw	0
 23980  01665C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23981  01665E  0E00               	movlw	0
 23982  016660  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23983  016662  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23984                           
 23985                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 23986  016666  9265               	bcf	3941,1,c	;volatile
 23987                           
 23988                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 23989  016668  010F               	movlb	15	; () banked
 23990  01666A  9536               	bcf	54,2,b	;volatile
 23991                           
 23992                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 23993  01666C  D001               	goto	i2l7564
 23994  01666E                     i2l7562:
 23995                           
 23996                           ;usb_device.c: 2342: {
 23997                           ;usb_device.c: 2343: (UIR &= 0xFB);
 23998  01666E  9462               	bcf	3938,2,c	;volatile
 23999  016670                     i2l7564:
 24000  016670  A462               	btfss	3938,2,c	;volatile
 24001  016672  0012               	return	
 24002  016674  D7FC               	goto	i2l7562
 24003  016676                     __end_of_USBWakeFromSuspend:
 24004                           	opt stack 0
 24005                           pclatu	equ	0xFFB
 24006                           pclath	equ	0xFFA
 24007                           tblptru	equ	0xFF8
 24008                           tblptrh	equ	0xFF7
 24009                           tblptrl	equ	0xFF6
 24010                           tablat	equ	0xFF5
 24011                           prodh	equ	0xFF4
 24012                           prodl	equ	0xFF3
 24013                           intcon	equ	0xFF2
 24014                           intcon2	equ	0xFF1
 24015                           postinc0	equ	0xFEE
 24016                           fsr0h	equ	0xFEA
 24017                           fsr0l	equ	0xFE9
 24018                           wreg	equ	0xFE8
 24019                           indf1	equ	0xFE7
 24020                           postinc1	equ	0xFE6
 24021                           postdec1	equ	0xFE5
 24022                           fsr1h	equ	0xFE2
 24023                           fsr1l	equ	0xFE1
 24024                           indf2	equ	0xFDF
 24025                           postinc2	equ	0xFDE
 24026                           postdec2	equ	0xFDD
 24027                           plusw2	equ	0xFDB
 24028                           fsr2h	equ	0xFDA
 24029                           fsr2l	equ	0xFD9
 24030                           status	equ	0xFD8
 24031                           
 24032 ;; *************** function _USBSuspend *****************
 24033 ;; Defined at:
 24034 ;;		line 2245 in file "../My_header/usb_cdc/usb/usb_device.c"
 24035 ;; Parameters:    Size  Location     Type
 24036 ;;		None
 24037 ;; Auto vars:     Size  Location     Type
 24038 ;;		None
 24039 ;; Return value:  Size  Location     Type
 24040 ;;		None               void
 24041 ;; Registers used:
 24042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24043 ;; Tracked objects:
 24044 ;;		On entry : 0/0
 24045 ;;		On exit  : 0/0
 24046 ;;		Unchanged: 0/0
 24047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24052 ;;Total ram usage:        0 bytes
 24053 ;; Hardware stack levels used:    1
 24054 ;; Hardware stack levels required when called:    4
 24055 ;; This function calls:
 24056 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24057 ;; This function is called by:
 24058 ;;		_USBDeviceTasks
 24059 ;; This function uses a non-reentrant model
 24060 ;;
 24061                           
 24062                           	psect	text109
 24063  01683C                     __ptext109:
 24064                           	opt stack 0
 24065  01683C                     _USBSuspend:
 24066                           	opt stack 15
 24067                           
 24068                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 24069                           
 24070                           ;incstack = 0
 24071  01683C  010F               	movlb	15	; () banked
 24072  01683E  8536               	bsf	54,2,b	;volatile
 24073                           
 24074                           ; BSR set to: 15
 24075                           ;usb_device.c: 2271: (UIR &= 0xEF);
 24076  016840  9862               	bcf	3938,4,c	;volatile
 24077                           
 24078                           ; BSR set to: 15
 24079                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 24080  016842  8265               	bsf	3941,1,c	;volatile
 24081                           
 24082                           ; BSR set to: 15
 24083                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 24084  016844  0E01               	movlw	1
 24085  016846  0100               	movlb	0	; () banked
 24086  016848  6F90               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24087                           
 24088                           ; BSR set to: 0
 24089                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 24090  01684A  0E00               	movlw	0
 24091  01684C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24092  01684E  0E75               	movlw	117
 24093  016850  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24094  016852  0E00               	movlw	0
 24095  016854  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24096  016856  0E00               	movlw	0
 24097  016858  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24098  01685A  0E00               	movlw	0
 24099  01685C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24100  01685E  0E00               	movlw	0
 24101  016860  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24102  016862  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24103  016866  0012               	return		;funcret
 24104  016868                     __end_of_USBSuspend:
 24105                           	opt stack 0
 24106                           pclatu	equ	0xFFB
 24107                           pclath	equ	0xFFA
 24108                           tblptru	equ	0xFF8
 24109                           tblptrh	equ	0xFF7
 24110                           tblptrl	equ	0xFF6
 24111                           tablat	equ	0xFF5
 24112                           prodh	equ	0xFF4
 24113                           prodl	equ	0xFF3
 24114                           intcon	equ	0xFF2
 24115                           intcon2	equ	0xFF1
 24116                           postinc0	equ	0xFEE
 24117                           fsr0h	equ	0xFEA
 24118                           fsr0l	equ	0xFE9
 24119                           wreg	equ	0xFE8
 24120                           indf1	equ	0xFE7
 24121                           postinc1	equ	0xFE6
 24122                           postdec1	equ	0xFE5
 24123                           fsr1h	equ	0xFE2
 24124                           fsr1l	equ	0xFE1
 24125                           indf2	equ	0xFDF
 24126                           postinc2	equ	0xFDE
 24127                           postdec2	equ	0xFDD
 24128                           plusw2	equ	0xFDB
 24129                           fsr2h	equ	0xFDA
 24130                           fsr2l	equ	0xFD9
 24131                           status	equ	0xFD8
 24132                           
 24133 ;; *************** function _USBStallHandler *****************
 24134 ;; Defined at:
 24135 ;;		line 2202 in file "../My_header/usb_cdc/usb/usb_device.c"
 24136 ;; Parameters:    Size  Location     Type
 24137 ;;		None
 24138 ;; Auto vars:     Size  Location     Type
 24139 ;;		None
 24140 ;; Return value:  Size  Location     Type
 24141 ;;		None               void
 24142 ;; Registers used:
 24143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24144 ;; Tracked objects:
 24145 ;;		On entry : 0/0
 24146 ;;		On exit  : 0/0
 24147 ;;		Unchanged: 0/0
 24148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24152 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24153 ;;Total ram usage:        1 bytes
 24154 ;; Hardware stack levels used:    1
 24155 ;; This function calls:
 24156 ;;		Nothing
 24157 ;; This function is called by:
 24158 ;;		_USBDeviceTasks
 24159 ;; This function uses a non-reentrant model
 24160 ;;
 24161                           
 24162                           	psect	text110
 24163  0163BA                     __ptext110:
 24164                           	opt stack 0
 24165  0163BA                     _USBStallHandler:
 24166                           	opt stack 19
 24167                           
 24168                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 24169                           
 24170                           ;incstack = 0
 24171  0163BA  010F               	movlb	15	; () banked
 24172  0163BC  A126               	btfss	38,0,b	;volatile
 24173  0163BE  D01E               	goto	i2l1301
 24174                           
 24175                           ; BSR set to: 15
 24176                           ;usb_device.c: 2215: {
 24177                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 24178  0163C0  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24179  0163C4  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24180  0163C8  0E80               	movlw	128
 24181  0163CA  18DE               	xorwf	postinc2,w,c
 24182  0163CC  A4D8               	btfss	status,2,c
 24183  0163CE  D014               	goto	i2l7586
 24184                           
 24185                           ; BSR set to: 15
 24186  0163D0  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 24187  0163D4  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24188  0163D8  0E84               	movlw	132
 24189  0163DA  18DE               	xorwf	postinc2,w,c
 24190  0163DC  A4D8               	btfss	status,2,c
 24191  0163DE  D00C               	goto	i2l7586
 24192                           
 24193                           ; BSR set to: 15
 24194                           ;usb_device.c: 2218: {
 24195                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24196  0163E0  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24197  0163E4  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24198  0163E8  0E0C               	movlw	12
 24199  0163EA  6EDF               	movwf	indf2,c
 24200                           
 24201                           ; BSR set to: 15
 24202                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24203  0163EC  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24204  0163F0  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24205  0163F4  0E00               	movlw	0
 24206  0163F6  8EDB               	bsf	plusw2,7,c
 24207  0163F8                     i2l7586:
 24208                           
 24209                           ; BSR set to: 15
 24210                           ;usb_device.c: 2222: }
 24211                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 24212  0163F8  010F               	movlb	15	; () banked
 24213  0163FA  9126               	bcf	38,0,b	;volatile
 24214  0163FC                     i2l1301:
 24215                           
 24216                           ; BSR set to: 15
 24217                           ;usb_device.c: 2224: }
 24218                           ;usb_device.c: 2226: (UIR &= 0xDF);
 24219  0163FC  9A62               	bcf	3938,5,c	;volatile
 24220                           
 24221                           ; BSR set to: 15
 24222  0163FE  0012               	return		;funcret
 24223  016400                     __end_of_USBStallHandler:
 24224                           	opt stack 0
 24225                           pclatu	equ	0xFFB
 24226                           pclath	equ	0xFFA
 24227                           tblptru	equ	0xFF8
 24228                           tblptrh	equ	0xFF7
 24229                           tblptrl	equ	0xFF6
 24230                           tablat	equ	0xFF5
 24231                           prodh	equ	0xFF4
 24232                           prodl	equ	0xFF3
 24233                           intcon	equ	0xFF2
 24234                           intcon2	equ	0xFF1
 24235                           postinc0	equ	0xFEE
 24236                           fsr0h	equ	0xFEA
 24237                           fsr0l	equ	0xFE9
 24238                           wreg	equ	0xFE8
 24239                           indf1	equ	0xFE7
 24240                           postinc1	equ	0xFE6
 24241                           postdec1	equ	0xFE5
 24242                           fsr1h	equ	0xFE2
 24243                           fsr1l	equ	0xFE1
 24244                           indf2	equ	0xFDF
 24245                           postinc2	equ	0xFDE
 24246                           postdec2	equ	0xFDD
 24247                           plusw2	equ	0xFDB
 24248                           fsr2h	equ	0xFDA
 24249                           fsr2l	equ	0xFD9
 24250                           status	equ	0xFD8
 24251                           
 24252 ;; *************** function _USBCtrlEPService *****************
 24253 ;; Defined at:
 24254 ;;		line 2369 in file "../My_header/usb_cdc/usb/usb_device.c"
 24255 ;; Parameters:    Size  Location     Type
 24256 ;;		None
 24257 ;; Auto vars:     Size  Location     Type
 24258 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 24259 ;; Return value:  Size  Location     Type
 24260 ;;		None               void
 24261 ;; Registers used:
 24262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24263 ;; Tracked objects:
 24264 ;;		On entry : 0/0
 24265 ;;		On exit  : 0/0
 24266 ;;		Unchanged: 0/0
 24267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24270 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24272 ;;Total ram usage:        3 bytes
 24273 ;; Hardware stack levels used:    1
 24274 ;; Hardware stack levels required when called:    7
 24275 ;; This function calls:
 24276 ;;		_USBCtrlTrfInHandler
 24277 ;;		_USBCtrlTrfOutHandler
 24278 ;;		_USBCtrlTrfSetupHandler
 24279 ;; This function is called by:
 24280 ;;		_USBDeviceTasks
 24281 ;; This function uses a non-reentrant model
 24282 ;;
 24283                           
 24284                           	psect	text111
 24285  014A34                     __ptext111:
 24286                           	opt stack 0
 24287  014A34                     _USBCtrlEPService:
 24288                           	opt stack 12
 24289                           
 24290                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 24291                           
 24292                           ; BSR set to: 15
 24293                           ;incstack = 0
 24294  014A34  0E2D               	movlw	45
 24295  014A36  6E48               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 24296                           
 24297                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 24298  014A38  C057  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24299  014A3C  0EFD               	movlw	253
 24300  014A3E  161B               	andwf	??_USBCtrlEPService,f,c
 24301  014A40  A4D8               	btfss	status,2,c
 24302  014A42  D057               	goto	i2l7620
 24303                           
 24304                           ;usb_device.c: 2380: {
 24305                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 24306  014A44  C057  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24307  014A48  90D8               	bcf	status,0,c
 24308  014A4A  321B               	rrcf	??_USBCtrlEPService,f,c
 24309  014A4C  0E3F               	movlw	63
 24310  014A4E  161B               	andwf	??_USBCtrlEPService,f,c
 24311  014A50  501B               	movf	??_USBCtrlEPService,w,c
 24312  014A52  0D04               	mullw	4
 24313  014A54  0E00               	movlw	0
 24314  014A56  24F3               	addwf	prodl,w,c
 24315  014A58  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 24316  014A5A  0E0D               	movlw	13
 24317  014A5C  20F4               	addwfc	prodh,w,c
 24318  014A5E  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 24319                           
 24320                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 24321  014A60  C037  F039         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 24322  014A64  C038  F03A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 24323                           
 24324                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 24325  014A68  0E04               	movlw	4
 24326  014A6A  1A39               	xorwf	_pBDTEntryEP0OutNext,f,c
 24327                           
 24328                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 24329  014A6C  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24330  014A70  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24331  014A74  30DF               	rrcf	indf2,w,c
 24332  014A76  32E8               	rrcf	wreg,f,c
 24333  014A78  0B0F               	andlw	15
 24334  014A7A  0A0D               	xorlw	13
 24335  014A7C  A4D8               	btfss	status,2,c
 24336  014A7E  D036               	goto	i2l7618
 24337                           
 24338                           ;usb_device.c: 2397: {
 24339                           ;usb_device.c: 2398: unsigned char setup_cnt;
 24340                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 24341  014A80  0E00               	movlw	0
 24342  014A82  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 24343  014A84                     i2l7602:
 24344  014A84  0E07               	movlw	7
 24345  014A86  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 24346  014A88  D001               	goto	i2l7606
 24347  014A8A  D023               	goto	i2l7614
 24348  014A8C                     i2l7606:
 24349                           
 24350                           ;usb_device.c: 2405: {
 24351                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 24352  014A8C  EE20 F002          	lfsr	2,2
 24353  014A90  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 24354  014A92  26D9               	addwf	fsr2l,f,c
 24355  014A94  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24356  014A96  22DA               	addwfc	fsr2h,f,c
 24357  014A98  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 24358  014A9C  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 24359  014AA0  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 24360  014AA4  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 24361  014AA8  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 24362  014AAA  0D01               	mullw	1
 24363  014AAC  0E30               	movlw	48
 24364  014AAE  24F3               	addwf	prodl,w,c
 24365  014AB0  6EE1               	movwf	fsr1l,c
 24366  014AB2  0E0D               	movlw	13
 24367  014AB4  20F4               	addwfc	prodh,w,c
 24368  014AB6  6EE2               	movwf	fsr1h,c
 24369  014AB8  CFDF FFE7          	movff	indf2,indf1
 24370                           
 24371                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 24372  014ABC  EE20 F002          	lfsr	2,2
 24373  014AC0  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 24374  014AC2  26D9               	addwf	fsr2l,f,c
 24375  014AC4  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24376  014AC6  22DA               	addwfc	fsr2h,f,c
 24377  014AC8  2ADE               	incf	postinc2,f,c
 24378  014ACA  0E00               	movlw	0
 24379  014ACC  22DD               	addwfc	postdec2,f,c
 24380  014ACE  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 24381  014AD0  D7D9               	goto	i2l7602
 24382  014AD2                     i2l7614:
 24383                           
 24384                           ;usb_device.c: 2408: }
 24385                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 24386  014AD2  EE20 F002          	lfsr	2,2
 24387  014AD6  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 24388  014AD8  26D9               	addwf	fsr2l,f,c
 24389  014ADA  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24390  014ADC  22DA               	addwfc	fsr2h,f,c
 24391  014ADE  0E30               	movlw	48
 24392  014AE0  6EDE               	movwf	postinc2,c
 24393  014AE2  0E0D               	movlw	13
 24394  014AE4  6EDD               	movwf	postdec2,c
 24395                           
 24396                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 24397  014AE6  ECE4  F0AC         	call	_USBCtrlTrfSetupHandler	;wreg free
 24398                           
 24399                           ;usb_device.c: 2413: }
 24400  014AEA  0012               	return	
 24401  014AEC                     i2l7618:
 24402                           
 24403                           ;usb_device.c: 2414: else
 24404                           ;usb_device.c: 2415: {
 24405                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 24406  014AEC  EC42  F0B0         	call	_USBCtrlTrfOutHandler	;wreg free
 24407                           
 24408                           ;usb_device.c: 2418: }
 24409                           ;usb_device.c: 2419: }
 24410  014AF0  0012               	return	
 24411  014AF2                     i2l7620:
 24412                           
 24413                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 24414  014AF2  5057               	movf	_USTATcopy,w,c	;volatile
 24415  014AF4  0BFD               	andlw	253
 24416  014AF6  0A04               	xorlw	4
 24417  014AF8  A4D8               	btfss	status,2,c
 24418  014AFA  0012               	return	
 24419                           
 24420                           ;usb_device.c: 2421: {
 24421                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 24422  014AFC  EC49  F0A6         	call	_USBCtrlTrfInHandler	;wreg free
 24423  014B00  0012               	return	
 24424  014B02                     __end_of_USBCtrlEPService:
 24425                           	opt stack 0
 24426                           pclatu	equ	0xFFB
 24427                           pclath	equ	0xFFA
 24428                           tblptru	equ	0xFF8
 24429                           tblptrh	equ	0xFF7
 24430                           tblptrl	equ	0xFF6
 24431                           tablat	equ	0xFF5
 24432                           prodh	equ	0xFF4
 24433                           prodl	equ	0xFF3
 24434                           intcon	equ	0xFF2
 24435                           intcon2	equ	0xFF1
 24436                           postinc0	equ	0xFEE
 24437                           fsr0h	equ	0xFEA
 24438                           fsr0l	equ	0xFE9
 24439                           wreg	equ	0xFE8
 24440                           indf1	equ	0xFE7
 24441                           postinc1	equ	0xFE6
 24442                           postdec1	equ	0xFE5
 24443                           fsr1h	equ	0xFE2
 24444                           fsr1l	equ	0xFE1
 24445                           indf2	equ	0xFDF
 24446                           postinc2	equ	0xFDE
 24447                           postdec2	equ	0xFDD
 24448                           plusw2	equ	0xFDB
 24449                           fsr2h	equ	0xFDA
 24450                           fsr2l	equ	0xFD9
 24451                           status	equ	0xFD8
 24452                           
 24453 ;; *************** function _USBCtrlTrfSetupHandler *****************
 24454 ;; Defined at:
 24455 ;;		line 2469 in file "../My_header/usb_cdc/usb/usb_device.c"
 24456 ;; Parameters:    Size  Location     Type
 24457 ;;		None
 24458 ;; Auto vars:     Size  Location     Type
 24459 ;;		None
 24460 ;; Return value:  Size  Location     Type
 24461 ;;		None               void
 24462 ;; Registers used:
 24463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24464 ;; Tracked objects:
 24465 ;;		On entry : 0/0
 24466 ;;		On exit  : 0/0
 24467 ;;		Unchanged: 0/0
 24468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24473 ;;Total ram usage:        0 bytes
 24474 ;; Hardware stack levels used:    1
 24475 ;; Hardware stack levels required when called:    6
 24476 ;; This function calls:
 24477 ;;		_USBCheckStdRequest
 24478 ;;		_USBCtrlEPServiceComplete
 24479 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24480 ;; This function is called by:
 24481 ;;		_USBCtrlEPService
 24482 ;; This function uses a non-reentrant model
 24483 ;;
 24484                           
 24485                           	psect	text112
 24486  0159C8                     __ptext112:
 24487                           	opt stack 0
 24488  0159C8                     _USBCtrlTrfSetupHandler:
 24489                           	opt stack 12
 24490                           
 24491                           ;usb_device.c: 2474: shortPacketStatus = 0;
 24492                           
 24493                           ;incstack = 0
 24494  0159C8  0E00               	movlw	0
 24495  0159CA  6E4F               	movwf	_shortPacketStatus,c	;volatile
 24496                           
 24497                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 24498  0159CC  0E00               	movlw	0
 24499  0159CE  6E44               	movwf	_USBDeferStatusStagePacket,c	;volatile
 24500                           
 24501                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 24502  0159D0  0E00               	movlw	0
 24503  0159D2  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24504                           
 24505                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 24506  0159D4  0E00               	movlw	0
 24507  0159D6  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24508                           
 24509                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 24510  0159D8  0E00               	movlw	0
 24511  0159DA  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 24512                           
 24513                           ;usb_device.c: 2479: controlTransferState = 0;
 24514  0159DC  0E00               	movlw	0
 24515  0159DE  6E49               	movwf	_controlTransferState,c	;volatile
 24516                           
 24517                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 24518  0159E0  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 24519  0159E4  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24520  0159E8  0E7F               	movlw	127
 24521  0159EA  16DF               	andwf	indf2,f,c
 24522                           
 24523                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 24524  0159EC  0E04               	movlw	4
 24525  0159EE  0100               	movlb	0	; () banked
 24526  0159F0  1B6F               	xorwf	_pBDTEntryIn& (0+255),f,b
 24527                           
 24528                           ; BSR set to: 0
 24529                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 24530  0159F2  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 24531  0159F6  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24532  0159FA  0E7F               	movlw	127
 24533  0159FC  16DF               	andwf	indf2,f,c
 24534                           
 24535                           ; BSR set to: 0
 24536                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 24537  0159FE  0E04               	movlw	4
 24538  015A00  0100               	movlb	0	; () banked
 24539  015A02  1B6F               	xorwf	_pBDTEntryIn& (0+255),f,b
 24540                           
 24541                           ; BSR set to: 0
 24542                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 24543  015A04  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24544  015A08  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24545  015A0C  0E7F               	movlw	127
 24546  015A0E  16DF               	andwf	indf2,f,c
 24547                           
 24548                           ; BSR set to: 0
 24549                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 24550  015A10  0E00               	movlw	0
 24551  015A12  0100               	movlb	0	; () banked
 24552  015A14  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24553                           
 24554                           ; BSR set to: 0
 24555                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 24556  015A16  0E00               	movlw	0
 24557  015A18  0100               	movlb	0	; () banked
 24558  015A1A  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24559  015A1C  0E00               	movlw	0
 24560  015A1E  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24561                           
 24562                           ; BSR set to: 0
 24563                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 24564  015A20  0E00               	movlw	0
 24565  015A22  0100               	movlb	0	; () banked
 24566  015A24  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24567                           
 24568                           ; BSR set to: 0
 24569                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 24570  015A26  0E00               	movlw	0
 24571  015A28  0100               	movlb	0	; () banked
 24572  015A2A  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24573  015A2C  0E00               	movlw	0
 24574  015A2E  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;usb_device.c: 2503: USBCheckStdRequest();
 24578  015A30  ECE3  F09F         	call	_USBCheckStdRequest	;wreg free
 24579                           
 24580                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 24581  015A34  0E00               	movlw	0
 24582  015A36  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24583  015A38  0E03               	movlw	3
 24584  015A3A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24585  015A3C  0E00               	movlw	0
 24586  015A3E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24587  015A40  0E00               	movlw	0
 24588  015A42  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24589  015A44  0E00               	movlw	0
 24590  015A46  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24591  015A48  0E00               	movlw	0
 24592  015A4A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24593  015A4C  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24594                           
 24595                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 24596  015A50  ECF0  F09E         	call	_USBCtrlEPServiceComplete	;wreg free
 24597  015A54  0012               	return		;funcret
 24598  015A56                     __end_of_USBCtrlTrfSetupHandler:
 24599                           	opt stack 0
 24600                           pclatu	equ	0xFFB
 24601                           pclath	equ	0xFFA
 24602                           tblptru	equ	0xFF8
 24603                           tblptrh	equ	0xFF7
 24604                           tblptrl	equ	0xFF6
 24605                           tablat	equ	0xFF5
 24606                           prodh	equ	0xFF4
 24607                           prodl	equ	0xFF3
 24608                           intcon	equ	0xFF2
 24609                           intcon2	equ	0xFF1
 24610                           postinc0	equ	0xFEE
 24611                           fsr0h	equ	0xFEA
 24612                           fsr0l	equ	0xFE9
 24613                           wreg	equ	0xFE8
 24614                           indf1	equ	0xFE7
 24615                           postinc1	equ	0xFE6
 24616                           postdec1	equ	0xFE5
 24617                           fsr1h	equ	0xFE2
 24618                           fsr1l	equ	0xFE1
 24619                           indf2	equ	0xFDF
 24620                           postinc2	equ	0xFDE
 24621                           postdec2	equ	0xFDD
 24622                           plusw2	equ	0xFDB
 24623                           fsr2h	equ	0xFDA
 24624                           fsr2l	equ	0xFD9
 24625                           status	equ	0xFD8
 24626                           
 24627 ;; *************** function _USBCtrlEPServiceComplete *****************
 24628 ;; Defined at:
 24629 ;;		line 1616 in file "../My_header/usb_cdc/usb/usb_device.c"
 24630 ;; Parameters:    Size  Location     Type
 24631 ;;		None
 24632 ;; Auto vars:     Size  Location     Type
 24633 ;;		None
 24634 ;; Return value:  Size  Location     Type
 24635 ;;		None               void
 24636 ;; Registers used:
 24637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24638 ;; Tracked objects:
 24639 ;;		On entry : 0/0
 24640 ;;		On exit  : 0/0
 24641 ;;		Unchanged: 0/0
 24642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24647 ;;Total ram usage:        0 bytes
 24648 ;; Hardware stack levels used:    1
 24649 ;; Hardware stack levels required when called:    2
 24650 ;; This function calls:
 24651 ;;		_USBCtrlEPAllowDataStage
 24652 ;;		_USBCtrlEPAllowStatusStage
 24653 ;; This function is called by:
 24654 ;;		_USBCtrlTrfSetupHandler
 24655 ;; This function uses a non-reentrant model
 24656 ;;
 24657                           
 24658                           	psect	text113
 24659  013DE0                     __ptext113:
 24660                           	opt stack 0
 24661  013DE0                     _USBCtrlEPServiceComplete:
 24662                           	opt stack 15
 24663                           
 24664                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 24665                           
 24666                           ;incstack = 0
 24667  013DE0  9865               	bcf	3941,4,c	;volatile
 24668                           
 24669                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 24670  013DE2  0100               	movlb	0	; () banked
 24671  013DE4  BF6C               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 24672  013DE6  D039               	goto	i2l1225
 24673                           
 24674                           ; BSR set to: 0
 24675                           ;usb_device.c: 1629: {
 24676                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 24677  013DE8  0100               	movlb	0	; () banked
 24678  013DEA  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 24679  013DEC  D00B               	goto	i2l6632
 24680                           
 24681                           ; BSR set to: 0
 24682                           ;usb_device.c: 1631: {
 24683                           ;usb_device.c: 1632: controlTransferState = 2;
 24684  013DEE  0E02               	movlw	2
 24685  013DF0  6E49               	movwf	_controlTransferState,c	;volatile
 24686                           
 24687                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 24688  013DF2  5043               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 24689  013DF4  B4D8               	btfsc	status,2,c
 24690                           
 24691                           ; BSR set to: 0
 24692                           ;usb_device.c: 1644: {
 24693                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 24694  013DF6  ECD8  F0AA         	call	_USBCtrlEPAllowDataStage	;wreg free
 24695                           
 24696                           ;usb_device.c: 1646: }
 24697                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 24698  013DFA  0E00               	movlw	0
 24699  013DFC  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24700                           
 24701                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 24702  013DFE  0E00               	movlw	0
 24703  013E00  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24704                           
 24705                           ;usb_device.c: 1652: }
 24706  013E02  0012               	return	
 24707  013E04                     i2l6632:
 24708                           
 24709                           ;usb_device.c: 1653: else
 24710                           ;usb_device.c: 1654: {
 24711                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 24712  013E04  EE20 F001          	lfsr	2,1
 24713  013E08  5039               	movf	_pBDTEntryEP0OutNext,w,c
 24714  013E0A  26D9               	addwf	fsr2l,f,c
 24715  013E0C  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 24716  013E0E  22DA               	addwfc	fsr2h,f,c
 24717  013E10  0E08               	movlw	8
 24718  013E12  6EDF               	movwf	indf2,c
 24719                           
 24720                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24721  013E14  EE20 F002          	lfsr	2,2
 24722  013E18  5039               	movf	_pBDTEntryEP0OutNext,w,c
 24723  013E1A  26D9               	addwf	fsr2l,f,c
 24724  013E1C  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 24725  013E1E  22DA               	addwfc	fsr2h,f,c
 24726  013E20  0E30               	movlw	48
 24727  013E22  6EDE               	movwf	postinc2,c
 24728  013E24  0E0D               	movlw	13
 24729  013E26  6EDD               	movwf	postdec2,c
 24730                           
 24731                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24732  013E28  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24733  013E2C  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24734  013E30  0E0C               	movlw	12
 24735  013E32  6EDF               	movwf	indf2,c
 24736                           
 24737                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24738  013E34  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24739  013E38  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24740  013E3C  0E00               	movlw	0
 24741  013E3E  8EDB               	bsf	plusw2,7,c
 24742                           
 24743                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 24744  013E40  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 24745  013E44  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24746  013E48  0E04               	movlw	4
 24747  013E4A  6EDF               	movwf	indf2,c
 24748                           
 24749                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24750  013E4C  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 24751  013E50  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24752  013E54  0E00               	movlw	0
 24753  013E56  8EDB               	bsf	plusw2,7,c
 24754                           
 24755                           ;usb_device.c: 1665: }
 24756                           ;usb_device.c: 1666: }
 24757  013E58  0012               	return	
 24758  013E5A                     i2l1225:
 24759                           
 24760                           ; BSR set to: 0
 24761                           ;usb_device.c: 1667: else
 24762                           ;usb_device.c: 1668: {
 24763                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 24764  013E5A  010D               	movlb	13	; () banked
 24765  013E5C  AF30               	btfss	48,7,b	;volatile
 24766  013E5E  D010               	goto	i2l6652
 24767                           
 24768                           ; BSR set to: 13
 24769                           ;usb_device.c: 1670: {
 24770                           ;usb_device.c: 1671: controlTransferState = 1;
 24771  013E60  0E01               	movlw	1
 24772  013E62  6E49               	movwf	_controlTransferState,c	;volatile
 24773                           
 24774                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 24775  013E64  5042               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 24776  013E66  B4D8               	btfsc	status,2,c
 24777                           
 24778                           ; BSR set to: 13
 24779                           ;usb_device.c: 1686: {
 24780                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 24781  013E68  ECD8  F0AA         	call	_USBCtrlEPAllowDataStage	;wreg free
 24782                           
 24783                           ;usb_device.c: 1688: }
 24784                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 24785  013E6C  0E00               	movlw	0
 24786  013E6E  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24787                           
 24788                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 24789  013E70  0E00               	movlw	0
 24790  013E72  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24791                           
 24792                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 24793  013E74  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 24794  013E76  A4D8               	btfss	status,2,c
 24795  013E78  0012               	return	
 24796                           
 24797                           ;usb_device.c: 1713: {
 24798                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 24799  013E7A  ECE7  F0A5         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24800                           
 24801                           ;usb_device.c: 1715: }
 24802                           ;usb_device.c: 1716: }
 24803  013E7E  0012               	return	
 24804  013E80                     i2l6652:
 24805                           
 24806                           ;usb_device.c: 1717: else
 24807                           ;usb_device.c: 1718: {
 24808                           ;usb_device.c: 1729: controlTransferState = 2;
 24809  013E80  0E02               	movlw	2
 24810  013E82  6E49               	movwf	_controlTransferState,c	;volatile
 24811                           
 24812                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 24813  013E84  EE20 F001          	lfsr	2,1
 24814  013E88  5039               	movf	_pBDTEntryEP0OutNext,w,c
 24815  013E8A  26D9               	addwf	fsr2l,f,c
 24816  013E8C  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 24817  013E8E  22DA               	addwfc	fsr2h,f,c
 24818  013E90  0E08               	movlw	8
 24819  013E92  6EDF               	movwf	indf2,c
 24820                           
 24821                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24822  013E94  EE20 F002          	lfsr	2,2
 24823  013E98  5039               	movf	_pBDTEntryEP0OutNext,w,c
 24824  013E9A  26D9               	addwf	fsr2l,f,c
 24825  013E9C  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 24826  013E9E  22DA               	addwfc	fsr2h,f,c
 24827  013EA0  0E30               	movlw	48
 24828  013EA2  6EDE               	movwf	postinc2,c
 24829  013EA4  0E0D               	movlw	13
 24830  013EA6  6EDD               	movwf	postdec2,c
 24831                           
 24832                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 24833  013EA8  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24834  013EAC  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24835  013EB0  0E04               	movlw	4
 24836  013EB2  6EDF               	movwf	indf2,c
 24837                           
 24838                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24839  013EB4  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24840  013EB8  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24841  013EBC  0E00               	movlw	0
 24842  013EBE  8EDB               	bsf	plusw2,7,c
 24843                           
 24844                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 24845  013EC0  0E00               	movlw	0
 24846  013EC2  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24847                           
 24848                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 24849  013EC4  0E00               	movlw	0
 24850  013EC6  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24851                           
 24852                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 24853  013EC8  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 24854  013ECA  A4D8               	btfss	status,2,c
 24855  013ECC  0012               	return	
 24856                           
 24857                           ;usb_device.c: 1741: {
 24858                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 24859  013ECE  ECE7  F0A5         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24860  013ED2  0012               	return	
 24861  013ED4                     __end_of_USBCtrlEPServiceComplete:
 24862                           	opt stack 0
 24863                           pclatu	equ	0xFFB
 24864                           pclath	equ	0xFFA
 24865                           tblptru	equ	0xFF8
 24866                           tblptrh	equ	0xFF7
 24867                           tblptrl	equ	0xFF6
 24868                           tablat	equ	0xFF5
 24869                           prodh	equ	0xFF4
 24870                           prodl	equ	0xFF3
 24871                           intcon	equ	0xFF2
 24872                           intcon2	equ	0xFF1
 24873                           postinc0	equ	0xFEE
 24874                           fsr0h	equ	0xFEA
 24875                           fsr0l	equ	0xFE9
 24876                           wreg	equ	0xFE8
 24877                           indf1	equ	0xFE7
 24878                           postinc1	equ	0xFE6
 24879                           postdec1	equ	0xFE5
 24880                           fsr1h	equ	0xFE2
 24881                           fsr1l	equ	0xFE1
 24882                           indf2	equ	0xFDF
 24883                           postinc2	equ	0xFDE
 24884                           postdec2	equ	0xFDD
 24885                           plusw2	equ	0xFDB
 24886                           fsr2h	equ	0xFDA
 24887                           fsr2l	equ	0xFD9
 24888                           status	equ	0xFD8
 24889                           
 24890 ;; *************** function _USBCtrlEPAllowDataStage *****************
 24891 ;; Defined at:
 24892 ;;		line 1488 in file "../My_header/usb_cdc/usb/usb_device.c"
 24893 ;; Parameters:    Size  Location     Type
 24894 ;;		None
 24895 ;; Auto vars:     Size  Location     Type
 24896 ;;		None
 24897 ;; Return value:  Size  Location     Type
 24898 ;;		None               void
 24899 ;; Registers used:
 24900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24901 ;; Tracked objects:
 24902 ;;		On entry : 0/0
 24903 ;;		On exit  : 0/0
 24904 ;;		Unchanged: 0/0
 24905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24910 ;;Total ram usage:        0 bytes
 24911 ;; Hardware stack levels used:    1
 24912 ;; Hardware stack levels required when called:    1
 24913 ;; This function calls:
 24914 ;;		_USBCtrlTrfTxService
 24915 ;; This function is called by:
 24916 ;;		_USBCtrlEPServiceComplete
 24917 ;; This function uses a non-reentrant model
 24918 ;;
 24919                           
 24920                           	psect	text114
 24921  0155B0                     __ptext114:
 24922                           	opt stack 0
 24923  0155B0                     _USBCtrlEPAllowDataStage:
 24924                           	opt stack 15
 24925                           
 24926                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 24927                           
 24928                           ;incstack = 0
 24929  0155B0  0E00               	movlw	0
 24930  0155B2  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24931                           
 24932                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 24933  0155B4  0E00               	movlw	0
 24934  0155B6  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24935                           
 24936                           ;usb_device.c: 1493: if(controlTransferState == 2)
 24937  0155B8  0E02               	movlw	2
 24938  0155BA  1849               	xorwf	_controlTransferState,w,c	;volatile
 24939  0155BC  A4D8               	btfss	status,2,c
 24940  0155BE  D01F               	goto	i2l6270
 24941                           
 24942                           ;usb_device.c: 1494: {
 24943                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 24944  0155C0  EE20 F001          	lfsr	2,1
 24945  0155C4  5039               	movf	_pBDTEntryEP0OutNext,w,c
 24946  0155C6  26D9               	addwf	fsr2l,f,c
 24947  0155C8  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 24948  0155CA  22DA               	addwfc	fsr2h,f,c
 24949  0155CC  0E08               	movlw	8
 24950  0155CE  6EDF               	movwf	indf2,c
 24951                           
 24952                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 24953  0155D0  EE20 F002          	lfsr	2,2
 24954  0155D4  5039               	movf	_pBDTEntryEP0OutNext,w,c
 24955  0155D6  26D9               	addwf	fsr2l,f,c
 24956  0155D8  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 24957  0155DA  22DA               	addwfc	fsr2h,f,c
 24958  0155DC  0E38               	movlw	56
 24959  0155DE  6EDE               	movwf	postinc2,c
 24960  0155E0  0E0D               	movlw	13
 24961  0155E2  6EDD               	movwf	postdec2,c
 24962                           
 24963                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 24964  0155E4  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24965  0155E8  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24966  0155EC  0E48               	movlw	72
 24967  0155EE  6EDF               	movwf	indf2,c
 24968                           
 24969                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24970  0155F0  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24971  0155F4  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24972  0155F8  0E00               	movlw	0
 24973  0155FA  8EDB               	bsf	plusw2,7,c
 24974                           
 24975                           ;usb_device.c: 1500: }
 24976  0155FC  0012               	return	
 24977  0155FE                     i2l6270:
 24978                           
 24979                           ;usb_device.c: 1501: else
 24980                           ;usb_device.c: 1502: {
 24981                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 24982  0155FE  0100               	movlb	0	; () banked
 24983  015600  516D               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 24984  015602  010D               	movlb	13	; () banked
 24985  015604  5D36               	subwf	54,w,b	;volatile
 24986  015606  0100               	movlb	0	; () banked
 24987  015608  516E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 24988  01560A  010D               	movlb	13	; () banked
 24989  01560C  5937               	subwfb	55,w,b	;volatile
 24990  01560E  B0D8               	btfsc	status,0,c
 24991  015610  D004               	goto	i2l6274
 24992                           
 24993                           ; BSR set to: 13
 24994                           ;usb_device.c: 1506: {
 24995                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 24996  015612  CD36 F06D          	movff	3382,_inPipes+4	;volatile
 24997  015616  CD37 F06E          	movff	3383,_inPipes+5	;volatile
 24998  01561A                     i2l6274:
 24999                           
 25000                           ; BSR set to: 13
 25001                           ;usb_device.c: 1508: }
 25002                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 25003  01561A  EC07  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 25004                           
 25005                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25006  01561E  0100               	movlb	0	; () banked
 25007  015620  EE20 F002          	lfsr	2,2
 25008  015624  516F               	movf	_pBDTEntryIn& (0+255),w,b
 25009  015626  26D9               	addwf	fsr2l,f,c
 25010  015628  5170               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25011  01562A  22DA               	addwfc	fsr2h,f,c
 25012  01562C  0E38               	movlw	56
 25013  01562E  6EDE               	movwf	postinc2,c
 25014  015630  0E0D               	movlw	13
 25015  015632  6EDD               	movwf	postdec2,c
 25016                           
 25017                           ; BSR set to: 0
 25018                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25019  015634  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 25020  015638  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25021  01563C  0E48               	movlw	72
 25022  01563E  6EDF               	movwf	indf2,c
 25023                           
 25024                           ; BSR set to: 0
 25025                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25026  015640  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 25027  015644  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25028  015648  0E00               	movlw	0
 25029  01564A  8EDB               	bsf	plusw2,7,c
 25030  01564C  0012               	return	
 25031  01564E                     __end_of_USBCtrlEPAllowDataStage:
 25032                           	opt stack 0
 25033                           pclatu	equ	0xFFB
 25034                           pclath	equ	0xFFA
 25035                           tblptru	equ	0xFF8
 25036                           tblptrh	equ	0xFF7
 25037                           tblptrl	equ	0xFF6
 25038                           tablat	equ	0xFF5
 25039                           prodh	equ	0xFF4
 25040                           prodl	equ	0xFF3
 25041                           intcon	equ	0xFF2
 25042                           intcon2	equ	0xFF1
 25043                           postinc0	equ	0xFEE
 25044                           fsr0h	equ	0xFEA
 25045                           fsr0l	equ	0xFE9
 25046                           wreg	equ	0xFE8
 25047                           indf1	equ	0xFE7
 25048                           postinc1	equ	0xFE6
 25049                           postdec1	equ	0xFE5
 25050                           fsr1h	equ	0xFE2
 25051                           fsr1l	equ	0xFE1
 25052                           indf2	equ	0xFDF
 25053                           postinc2	equ	0xFDE
 25054                           postdec2	equ	0xFDD
 25055                           plusw2	equ	0xFDB
 25056                           fsr2h	equ	0xFDA
 25057                           fsr2l	equ	0xFD9
 25058                           status	equ	0xFD8
 25059                           
 25060 ;; *************** function _USBCheckStdRequest *****************
 25061 ;; Defined at:
 25062 ;;		line 2689 in file "../My_header/usb_cdc/usb/usb_device.c"
 25063 ;; Parameters:    Size  Location     Type
 25064 ;;		None
 25065 ;; Auto vars:     Size  Location     Type
 25066 ;;		None
 25067 ;; Return value:  Size  Location     Type
 25068 ;;		None               void
 25069 ;; Registers used:
 25070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25071 ;; Tracked objects:
 25072 ;;		On entry : 0/0
 25073 ;;		On exit  : 0/0
 25074 ;;		Unchanged: 0/0
 25075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25080 ;;Total ram usage:        0 bytes
 25081 ;; Hardware stack levels used:    1
 25082 ;; Hardware stack levels required when called:    5
 25083 ;; This function calls:
 25084 ;;		_USBStdFeatureReqHandler
 25085 ;;		_USBStdGetDscHandler
 25086 ;;		_USBStdGetStatusHandler
 25087 ;;		_USBStdSetCfgHandler
 25088 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25089 ;; This function is called by:
 25090 ;;		_USBCtrlTrfSetupHandler
 25091 ;; This function uses a non-reentrant model
 25092 ;;
 25093                           
 25094                           	psect	text115
 25095  013FC6                     __ptext115:
 25096                           	opt stack 0
 25097  013FC6                     _USBCheckStdRequest:
 25098                           	opt stack 12
 25099                           
 25100                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 25101                           
 25102                           ;incstack = 0
 25103  013FC6  010D               	movlb	13	; () banked
 25104  013FC8  3930               	swapf	48,w,b	;volatile
 25105  013FCA  32E8               	rrcf	wreg,f,c
 25106  013FCC  0B03               	andlw	3
 25107  013FCE  0900               	iorlw	0
 25108  013FD0  A4D8               	btfss	status,2,c
 25109  013FD2  0012               	return	
 25110  013FD4  D04F               	goto	i2l6750
 25111  013FD6                     i2l1352:
 25112                           
 25113                           ; BSR set to: 13
 25114                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 25115  013FD6  0100               	movlb	0	; () banked
 25116  013FD8  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25117                           
 25118                           ; BSR set to: 0
 25119                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 25120  013FDA  0E08               	movlw	8
 25121  013FDC  6E45               	movwf	_USBDeviceState,c	;volatile
 25122                           
 25123                           ;usb_device.c: 2699: break;
 25124  013FDE  0012               	return	
 25125  013FE0                     i2l6720:
 25126                           
 25127                           ;usb_device.c: 2701: USBStdGetDscHandler();
 25128  013FE0  EC24  F099         	call	_USBStdGetDscHandler	;wreg free
 25129                           
 25130                           ;usb_device.c: 2702: break;
 25131  013FE4  0012               	return	
 25132  013FE6                     i2l6722:
 25133                           
 25134                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 25135  013FE6  ECBB  F0A1         	call	_USBStdSetCfgHandler	;wreg free
 25136                           
 25137                           ;usb_device.c: 2705: break;
 25138  013FEA  0012               	return	
 25139  013FEC                     i2l6724:
 25140                           
 25141                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 25142  013FEC  0E56               	movlw	low _USBActiveConfiguration
 25143  013FEE  0100               	movlb	0	; () banked
 25144  013FF0  6F69               	movwf	_inPipes& (0+255),b	;volatile
 25145  013FF2  0E00               	movlw	high _USBActiveConfiguration
 25146  013FF4  0100               	movlb	0	; () banked
 25147  013FF6  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25148                           
 25149                           ; BSR set to: 0
 25150                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25151  013FF8  0100               	movlb	0	; () banked
 25152  013FFA  816C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25153                           
 25154                           ; BSR set to: 0
 25155                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 25156  013FFC  0E01               	movlw	1
 25157  013FFE  0100               	movlb	0	; () banked
 25158  014000  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25159                           
 25160                           ; BSR set to: 0
 25161                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 25162  014002  0100               	movlb	0	; () banked
 25163  014004  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25164                           
 25165                           ;usb_device.c: 2711: break;
 25166  014006  0012               	return	
 25167  014008                     i2l6732:
 25168                           
 25169                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 25170  014008  EC26  F0A8         	call	_USBStdGetStatusHandler	;wreg free
 25171                           
 25172                           ;usb_device.c: 2714: break;
 25173  01400C  0012               	return	
 25174  01400E                     i2l6734:
 25175                           
 25176                           ;usb_device.c: 2716: case 3:
 25177                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 25178  01400E  EC25  F090         	call	_USBStdFeatureReqHandler	;wreg free
 25179                           
 25180                           ;usb_device.c: 2718: break;
 25181  014012  0012               	return	
 25182  014014                     i2l6736:
 25183                           
 25184                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 25185  014014  010D               	movlb	13	; () banked
 25186  014016  5134               	movf	52,w,b	;volatile
 25187  014018  0D01               	mullw	1
 25188  01401A  0E54               	movlw	low _USBAlternateInterface
 25189  01401C  24F3               	addwf	prodl,w,c
 25190  01401E  0100               	movlb	0	; () banked
 25191  014020  6F69               	movwf	_inPipes& (0+255),b	;volatile
 25192  014022  0E00               	movlw	high _USBAlternateInterface
 25193  014024  20F4               	addwfc	prodh,w,c
 25194  014026  0100               	movlb	0	; () banked
 25195  014028  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25196                           
 25197                           ; BSR set to: 0
 25198                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25199  01402A  0100               	movlb	0	; () banked
 25200  01402C  816C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25201                           
 25202                           ; BSR set to: 0
 25203                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 25204  01402E  0E01               	movlw	1
 25205  014030  0100               	movlb	0	; () banked
 25206  014032  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25207                           
 25208                           ; BSR set to: 0
 25209                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 25210  014034  0100               	movlb	0	; () banked
 25211  014036  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25212                           
 25213                           ;usb_device.c: 2724: break;
 25214  014038  0012               	return	
 25215  01403A                     i2l1361:
 25216                           
 25217                           ; BSR set to: 13
 25218                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 25219  01403A  0100               	movlb	0	; () banked
 25220  01403C  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25221                           
 25222                           ; BSR set to: 0
 25223                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 25224  01403E  010D               	movlb	13	; () banked
 25225  014040  5134               	movf	52,w,b	;volatile
 25226  014042  0D01               	mullw	1
 25227  014044  0E54               	movlw	low _USBAlternateInterface
 25228  014046  24F3               	addwf	prodl,w,c
 25229  014048  6ED9               	movwf	fsr2l,c
 25230  01404A  0E00               	movlw	high _USBAlternateInterface
 25231  01404C  20F4               	addwfc	prodh,w,c
 25232  01404E  6EDA               	movwf	fsr2h,c
 25233  014050  CD32 FFDF          	movff	3378,indf2	;volatile
 25234                           
 25235                           ;usb_device.c: 2728: break;
 25236  014054  0012               	return	
 25237  014056                     i2l6746:
 25238                           
 25239                           ; BSR set to: 13
 25240                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 25241  014056  0E00               	movlw	0
 25242  014058  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25243  01405A  0E02               	movlw	2
 25244  01405C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25245  01405E  0E00               	movlw	0
 25246  014060  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25247  014062  0E00               	movlw	0
 25248  014064  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25249  014066  0E00               	movlw	0
 25250  014068  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25251  01406A  0E00               	movlw	0
 25252  01406C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25253  01406E  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25254                           
 25255                           ;usb_device.c: 2735: }
 25256                           
 25257                           ;usb_device.c: 2734: break;
 25258                           
 25259                           ;usb_device.c: 2733: default:
 25260                           
 25261                           ;usb_device.c: 2732: case 12:
 25262                           
 25263                           ;usb_device.c: 2731: break;
 25264  014072  0012               	return	
 25265  014074                     i2l6750:
 25266  014074  010D               	movlb	13	; () banked
 25267  014076  5131               	movf	49,w,b	;volatile
 25268                           
 25269                           ; Switch size 1, requested type "space"
 25270                           ; Number of cases is 11, Range of values is 0 to 12
 25271                           ; switch strategies available:
 25272                           ; Name         Instructions Cycles
 25273                           ; simple_byte           34    18 (average)
 25274                           ;	Chosen strategy is simple_byte
 25275  014078  0A00               	xorlw	0	; case 0
 25276  01407A  B4D8               	btfsc	status,2,c
 25277  01407C  D7C5               	goto	i2l6732
 25278  01407E  0A01               	xorlw	1	; case 1
 25279  014080  B4D8               	btfsc	status,2,c
 25280  014082  D7C5               	goto	i2l6734
 25281  014084  0A02               	xorlw	2	; case 3
 25282  014086  B4D8               	btfsc	status,2,c
 25283  014088  D7C2               	goto	i2l6734
 25284  01408A  0A06               	xorlw	6	; case 5
 25285  01408C  B4D8               	btfsc	status,2,c
 25286  01408E  D7A3               	goto	i2l1352
 25287  014090  0A03               	xorlw	3	; case 6
 25288  014092  B4D8               	btfsc	status,2,c
 25289  014094  D7A5               	goto	i2l6720
 25290  014096  0A01               	xorlw	1	; case 7
 25291  014098  B4D8               	btfsc	status,2,c
 25292  01409A  D7DD               	goto	i2l6746
 25293  01409C  0A0F               	xorlw	15	; case 8
 25294  01409E  B4D8               	btfsc	status,2,c
 25295  0140A0  D7A5               	goto	i2l6724
 25296  0140A2  0A01               	xorlw	1	; case 9
 25297  0140A4  B4D8               	btfsc	status,2,c
 25298  0140A6  D79F               	goto	i2l6722
 25299  0140A8  0A03               	xorlw	3	; case 10
 25300  0140AA  B4D8               	btfsc	status,2,c
 25301  0140AC  D7B3               	goto	i2l6736
 25302  0140AE  0A01               	xorlw	1	; case 11
 25303  0140B0  B4D8               	btfsc	status,2,c
 25304  0140B2  D7C3               	goto	i2l1361
 25305  0140B4  0A07               	xorlw	7	; case 12
 25306  0140B6  0012               	return	
 25307  0140B8                     __end_of_USBCheckStdRequest:
 25308                           	opt stack 0
 25309                           pclatu	equ	0xFFB
 25310                           pclath	equ	0xFFA
 25311                           tblptru	equ	0xFF8
 25312                           tblptrh	equ	0xFF7
 25313                           tblptrl	equ	0xFF6
 25314                           tablat	equ	0xFF5
 25315                           prodh	equ	0xFF4
 25316                           prodl	equ	0xFF3
 25317                           intcon	equ	0xFF2
 25318                           intcon2	equ	0xFF1
 25319                           postinc0	equ	0xFEE
 25320                           fsr0h	equ	0xFEA
 25321                           fsr0l	equ	0xFE9
 25322                           wreg	equ	0xFE8
 25323                           indf1	equ	0xFE7
 25324                           postinc1	equ	0xFE6
 25325                           postdec1	equ	0xFE5
 25326                           fsr1h	equ	0xFE2
 25327                           fsr1l	equ	0xFE1
 25328                           indf2	equ	0xFDF
 25329                           postinc2	equ	0xFDE
 25330                           postdec2	equ	0xFDD
 25331                           plusw2	equ	0xFDB
 25332                           fsr2h	equ	0xFDA
 25333                           fsr2l	equ	0xFD9
 25334                           status	equ	0xFD8
 25335                           
 25336 ;; *************** function _USBStdSetCfgHandler *****************
 25337 ;; Defined at:
 25338 ;;		line 1968 in file "../My_header/usb_cdc/usb/usb_device.c"
 25339 ;; Parameters:    Size  Location     Type
 25340 ;;		None
 25341 ;; Auto vars:     Size  Location     Type
 25342 ;;  i               1   20[COMRAM] unsigned char 
 25343 ;; Return value:  Size  Location     Type
 25344 ;;		None               void
 25345 ;; Registers used:
 25346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25347 ;; Tracked objects:
 25348 ;;		On entry : 0/0
 25349 ;;		On exit  : 0/0
 25350 ;;		Unchanged: 0/0
 25351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25356 ;;Total ram usage:        1 bytes
 25357 ;; Hardware stack levels used:    1
 25358 ;; Hardware stack levels required when called:    4
 25359 ;; This function calls:
 25360 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25361 ;;		i2_memset
 25362 ;; This function is called by:
 25363 ;;		_USBCheckStdRequest
 25364 ;; This function uses a non-reentrant model
 25365 ;;
 25366                           
 25367                           	psect	text116
 25368  014376                     __ptext116:
 25369                           	opt stack 0
 25370  014376                     _USBStdSetCfgHandler:
 25371                           	opt stack 12
 25372                           
 25373                           ;usb_device.c: 1970: uint8_t i;
 25374                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 25375                           
 25376                           ;incstack = 0
 25377  014376  0100               	movlb	0	; () banked
 25378  014378  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25379                           
 25380                           ; BSR set to: 0
 25381                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 25382  01437A  0E27               	movlw	39
 25383  01437C  6E01               	movwf	i2memset@p1,c
 25384  01437E  0E0F               	movlw	15
 25385  014380  6E02               	movwf	i2memset@p1+1,c
 25386  014382  0E00               	movlw	0
 25387  014384  6E04               	movwf	i2memset@c+1,c
 25388  014386  0E00               	movlw	0
 25389  014388  6E03               	movwf	i2memset@c,c
 25390  01438A  0E00               	movlw	0
 25391  01438C  6E06               	movwf	i2memset@n+1,c
 25392  01438E  0E02               	movlw	2
 25393  014390  6E05               	movwf	i2memset@n,c
 25394  014392  EC34  F0B4         	call	i2_memset	;wreg free
 25395                           
 25396                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 25397  014396  0E00               	movlw	0
 25398  014398  6E01               	movwf	i2memset@p1,c
 25399  01439A  0E0D               	movlw	13
 25400  01439C  6E02               	movwf	i2memset@p1+1,c
 25401  01439E  0E00               	movlw	0
 25402  0143A0  6E04               	movwf	i2memset@c+1,c
 25403  0143A2  0E00               	movlw	0
 25404  0143A4  6E03               	movwf	i2memset@c,c
 25405  0143A6  0E00               	movlw	0
 25406  0143A8  6E06               	movwf	i2memset@n+1,c
 25407  0143AA  0E30               	movlw	48
 25408  0143AC  6E05               	movwf	i2memset@n,c
 25409  0143AE  EC34  F0B4         	call	i2_memset	;wreg free
 25410                           
 25411                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 25412  0143B2  8C65               	bsf	3941,6,c	;volatile
 25413                           
 25414                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 25415  0143B4  0E00               	movlw	0
 25416  0143B6  6E15               	movwf	USBStdSetCfgHandler@i,c
 25417  0143B8                     i2l6290:
 25418  0143B8  0E02               	movlw	2
 25419  0143BA  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 25420  0143BC  D001               	goto	i2l6294
 25421  0143BE  D016               	goto	i2l6300
 25422  0143C0                     i2l6294:
 25423                           
 25424                           ;usb_device.c: 1988: {
 25425                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 25426  0143C0  5015               	movf	USBStdSetCfgHandler@i,w,c
 25427  0143C2  0D01               	mullw	1
 25428  0143C4  0E7B               	movlw	low _ep_data_in
 25429  0143C6  24F3               	addwf	prodl,w,c
 25430  0143C8  6ED9               	movwf	fsr2l,c
 25431  0143CA  0E00               	movlw	high _ep_data_in
 25432  0143CC  20F4               	addwfc	prodh,w,c
 25433  0143CE  6EDA               	movwf	fsr2h,c
 25434  0143D0  0E00               	movlw	0
 25435  0143D2  6EDF               	movwf	indf2,c
 25436                           
 25437                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 25438  0143D4  5015               	movf	USBStdSetCfgHandler@i,w,c
 25439  0143D6  0D01               	mullw	1
 25440  0143D8  0E7E               	movlw	low _ep_data_out
 25441  0143DA  24F3               	addwf	prodl,w,c
 25442  0143DC  6ED9               	movwf	fsr2l,c
 25443  0143DE  0E00               	movlw	high _ep_data_out
 25444  0143E0  20F4               	addwfc	prodh,w,c
 25445  0143E2  6EDA               	movwf	fsr2h,c
 25446  0143E4  0E00               	movlw	0
 25447  0143E6  6EDF               	movwf	indf2,c
 25448  0143E8  2A15               	incf	USBStdSetCfgHandler@i,f,c
 25449  0143EA  D7E6               	goto	i2l6290
 25450  0143EC                     i2l6300:
 25451                           
 25452                           ;usb_device.c: 1991: }
 25453                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 25454  0143EC  0E54               	movlw	low _USBAlternateInterface
 25455  0143EE  6E01               	movwf	i2memset@p1,c
 25456  0143F0  0E00               	movlw	high _USBAlternateInterface
 25457  0143F2  6E02               	movwf	i2memset@p1+1,c
 25458  0143F4  0E00               	movlw	0
 25459  0143F6  6E04               	movwf	i2memset@c+1,c
 25460  0143F8  0E00               	movlw	0
 25461  0143FA  6E03               	movwf	i2memset@c,c
 25462  0143FC  0E00               	movlw	0
 25463  0143FE  6E06               	movwf	i2memset@n+1,c
 25464  014400  0E02               	movlw	2
 25465  014402  6E05               	movwf	i2memset@n,c
 25466  014404  EC34  F0B4         	call	i2_memset	;wreg free
 25467                           
 25468                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 25469  014408  9C65               	bcf	3941,6,c	;volatile
 25470                           
 25471                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25472  01440A  0E08               	movlw	8
 25473  01440C  0100               	movlb	0	; () banked
 25474  01440E  6F6F               	movwf	_pBDTEntryIn& (0+255),b
 25475  014410  0E0D               	movlw	13
 25476  014412  0100               	movlb	0	; () banked
 25477  014414  6F70               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25478                           
 25479                           ; BSR set to: 0
 25480                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 25481  014416  0E00               	movlw	0
 25482  014418  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 25483  01441A  0E0D               	movlw	13
 25484  01441C  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25485                           
 25486                           ; BSR set to: 0
 25487                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25488  01441E  C037  F039         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25489  014422  C038  F03A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25490                           
 25491                           ; BSR set to: 0
 25492                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 25493  014426  CD32 F056          	movff	3378,_USBActiveConfiguration	;volatile
 25494                           
 25495                           ; BSR set to: 0
 25496                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 25497  01442A  5056               	movf	_USBActiveConfiguration,w,c	;volatile
 25498  01442C  A4D8               	btfss	status,2,c
 25499  01442E  D003               	goto	i2l6316
 25500                           
 25501                           ; BSR set to: 0
 25502                           ;usb_device.c: 2010: {
 25503                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 25504  014430  0E10               	movlw	16
 25505  014432  6E45               	movwf	_USBDeviceState,c	;volatile
 25506                           
 25507                           ;usb_device.c: 2013: }
 25508  014434  0012               	return	
 25509  014436                     i2l6316:
 25510                           
 25511                           ; BSR set to: 0
 25512                           ;usb_device.c: 2014: else
 25513                           ;usb_device.c: 2015: {
 25514                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 25515  014436  0E00               	movlw	0
 25516  014438  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25517  01443A  0E01               	movlw	1
 25518  01443C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25519  01443E  0E56               	movlw	low _USBActiveConfiguration
 25520  014440  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25521  014442  0E00               	movlw	high _USBActiveConfiguration
 25522  014444  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25523  014446  0E00               	movlw	0
 25524  014448  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25525  01444A  0E01               	movlw	1
 25526  01444C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25527  01444E  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25528                           
 25529                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 25530  014452  0E20               	movlw	32
 25531  014454  6E45               	movwf	_USBDeviceState,c	;volatile
 25532  014456  0012               	return	
 25533  014458                     __end_of_USBStdSetCfgHandler:
 25534                           	opt stack 0
 25535                           pclatu	equ	0xFFB
 25536                           pclath	equ	0xFFA
 25537                           tblptru	equ	0xFF8
 25538                           tblptrh	equ	0xFF7
 25539                           tblptrl	equ	0xFF6
 25540                           tablat	equ	0xFF5
 25541                           prodh	equ	0xFF4
 25542                           prodl	equ	0xFF3
 25543                           intcon	equ	0xFF2
 25544                           intcon2	equ	0xFF1
 25545                           postinc0	equ	0xFEE
 25546                           fsr0h	equ	0xFEA
 25547                           fsr0l	equ	0xFE9
 25548                           wreg	equ	0xFE8
 25549                           indf1	equ	0xFE7
 25550                           postinc1	equ	0xFE6
 25551                           postdec1	equ	0xFE5
 25552                           fsr1h	equ	0xFE2
 25553                           fsr1l	equ	0xFE1
 25554                           indf2	equ	0xFDF
 25555                           postinc2	equ	0xFDE
 25556                           postdec2	equ	0xFDD
 25557                           plusw2	equ	0xFDB
 25558                           fsr2h	equ	0xFDA
 25559                           fsr2l	equ	0xFD9
 25560                           status	equ	0xFD8
 25561                           
 25562 ;; *************** function i2_memset *****************
 25563 ;; Defined at:
 25564 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 25565 ;; Parameters:    Size  Location     Type
 25566 ;;  p1              2    0[COMRAM] PTR void 
 25567 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25568 ;;  c               2    2[COMRAM] int 
 25569 ;;  n               2    4[COMRAM] unsigned int 
 25570 ;; Auto vars:     Size  Location     Type
 25571 ;;  memset          2    6[COMRAM] PTR unsigned char 
 25572 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25573 ;; Return value:  Size  Location     Type
 25574 ;;                  2    0[COMRAM] PTR void 
 25575 ;; Registers used:
 25576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25577 ;; Tracked objects:
 25578 ;;		On entry : 0/0
 25579 ;;		On exit  : 0/0
 25580 ;;		Unchanged: 0/0
 25581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25582 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25585 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25586 ;;Total ram usage:        8 bytes
 25587 ;; Hardware stack levels used:    1
 25588 ;; This function calls:
 25589 ;;		Nothing
 25590 ;; This function is called by:
 25591 ;;		_USBStdSetCfgHandler
 25592 ;;		i2_USBDeviceInit
 25593 ;; This function uses a non-reentrant model
 25594 ;;
 25595                           
 25596                           	psect	text117
 25597  016868                     __ptext117:
 25598                           	opt stack 0
 25599  016868                     i2_memset:
 25600                           	opt stack 18
 25601                           
 25602                           ;incstack = 0
 25603  016868  C001  F007         	movff	i2memset@p1,i2memset@p
 25604  01686C  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 25605  016870  D008               	goto	i2l6148
 25606  016872                     i2l6144:
 25607  016872  C007  FFD9         	movff	i2memset@p,fsr2l
 25608  016876  C008  FFDA         	movff	i2memset@p+1,fsr2h
 25609  01687A  C003  FFDF         	movff	i2memset@c,indf2
 25610  01687E  4A07               	infsnz	i2memset@p,f,c
 25611  016880  2A08               	incf	i2memset@p+1,f,c
 25612  016882                     i2l6148:
 25613  016882  0605               	decf	i2memset@n,f,c
 25614  016884  A0D8               	btfss	status,0,c
 25615  016886  0606               	decf	i2memset@n+1,f,c
 25616  016888  2805               	incf	i2memset@n,w,c
 25617  01688A  E1F3               	bnz	i2l6144
 25618  01688C  2806               	incf	i2memset@n+1,w,c
 25619  01688E  B4D8               	btfsc	status,2,c
 25620  016890  0012               	return	
 25621  016892  D7EF               	goto	i2l6144
 25622  016894                     __end_ofi2_memset:
 25623                           	opt stack 0
 25624                           pclatu	equ	0xFFB
 25625                           pclath	equ	0xFFA
 25626                           tblptru	equ	0xFF8
 25627                           tblptrh	equ	0xFF7
 25628                           tblptrl	equ	0xFF6
 25629                           tablat	equ	0xFF5
 25630                           prodh	equ	0xFF4
 25631                           prodl	equ	0xFF3
 25632                           intcon	equ	0xFF2
 25633                           intcon2	equ	0xFF1
 25634                           postinc0	equ	0xFEE
 25635                           fsr0h	equ	0xFEA
 25636                           fsr0l	equ	0xFE9
 25637                           wreg	equ	0xFE8
 25638                           indf1	equ	0xFE7
 25639                           postinc1	equ	0xFE6
 25640                           postdec1	equ	0xFE5
 25641                           fsr1h	equ	0xFE2
 25642                           fsr1l	equ	0xFE1
 25643                           indf2	equ	0xFDF
 25644                           postinc2	equ	0xFDE
 25645                           postdec2	equ	0xFDD
 25646                           plusw2	equ	0xFDB
 25647                           fsr2h	equ	0xFDA
 25648                           fsr2l	equ	0xFD9
 25649                           status	equ	0xFD8
 25650                           
 25651 ;; *************** function _USBStdGetStatusHandler *****************
 25652 ;; Defined at:
 25653 ;;		line 2129 in file "../My_header/usb_cdc/usb/usb_device.c"
 25654 ;; Parameters:    Size  Location     Type
 25655 ;;		None
 25656 ;; Auto vars:     Size  Location     Type
 25657 ;;  p               2    1[COMRAM] PTR struct __BDT
 25658 ;;		 -> NULL(0), BDT(48), 
 25659 ;; Return value:  Size  Location     Type
 25660 ;;		None               void
 25661 ;; Registers used:
 25662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25663 ;; Tracked objects:
 25664 ;;		On entry : 0/0
 25665 ;;		On exit  : 0/0
 25666 ;;		Unchanged: 0/0
 25667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25671 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25672 ;;Total ram usage:        3 bytes
 25673 ;; Hardware stack levels used:    1
 25674 ;; This function calls:
 25675 ;;		Nothing
 25676 ;; This function is called by:
 25677 ;;		_USBCheckStdRequest
 25678 ;; This function uses a non-reentrant model
 25679 ;;
 25680                           
 25681                           	psect	text118
 25682  01504C                     __ptext118:
 25683                           	opt stack 0
 25684  01504C                     _USBStdGetStatusHandler:
 25685                           	opt stack 16
 25686                           
 25687                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 25688                           
 25689                           ;incstack = 0
 25690  01504C  0E00               	movlw	0
 25691  01504E  010D               	movlb	13	; () banked
 25692  015050  6F38               	movwf	56,b	;volatile
 25693                           
 25694                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 25695  015052  0E00               	movlw	0
 25696  015054  010D               	movlb	13	; () banked
 25697  015056  6F39               	movwf	57,b	;volatile
 25698                           
 25699                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 25700  015058  D03B               	goto	i2l6372
 25701  01505A                     i2l1288:
 25702                           
 25703                           ; BSR set to: 13
 25704                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 25705  01505A  0100               	movlb	0	; () banked
 25706  01505C  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25707                           
 25708                           ;usb_device.c: 2145: }
 25709                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 25710                           
 25711                           ; BSR set to: 13
 25712                           
 25713                           ; BSR set to: 0
 25714                           ;usb_device.c: 2143: {
 25715                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 25716                           
 25717                           ;usb_device.c: 2142: if(0 == 1)
 25718  01505E  0441               	decf	_RemoteWakeup,w,c	;volatile
 25719  015060  A4D8               	btfss	status,2,c
 25720  015062  D042               	goto	i2l1291
 25721                           
 25722                           ;usb_device.c: 2148: {
 25723                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 25724  015064  010D               	movlb	13	; () banked
 25725  015066  8338               	bsf	56,1,b	;volatile
 25726                           
 25727                           ; BSR set to: 13
 25728                           ;usb_device.c: 2150: }
 25729                           ;usb_device.c: 2151: break;
 25730  015068  D03F               	goto	i2l1291
 25731  01506A                     i2l1292:
 25732                           
 25733                           ; BSR set to: 13
 25734                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 25735  01506A  0100               	movlb	0	; () banked
 25736  01506C  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25737                           
 25738                           ;usb_device.c: 2154: break;
 25739  01506E  D03C               	goto	i2l1291
 25740  015070                     i2l1293:
 25741                           
 25742                           ; BSR set to: 13
 25743                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 25744  015070  0100               	movlb	0	; () banked
 25745  015072  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25746                           
 25747                           ;usb_device.c: 2160: {
 25748                           ;usb_device.c: 2161: BDT_ENTRY *p;
 25749                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 25750  015074  010D               	movlb	13	; () banked
 25751  015076  BF34               	btfsc	52,7,b	;volatile
 25752  015078  D00B               	goto	i2l6362
 25753                           
 25754                           ; BSR set to: 13
 25755                           ;usb_device.c: 2164: {
 25756                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 25757  01507A  010D               	movlb	13	; () banked
 25758  01507C  5134               	movf	52,w,b	;volatile
 25759  01507E  0B0F               	andlw	15
 25760  015080  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 25761  015082  5001               	movf	??_USBStdGetStatusHandler,w,c
 25762  015084  0D02               	mullw	2
 25763  015086  0E75               	movlw	low _pBDTEntryOut
 25764  015088  24F3               	addwf	prodl,w,c
 25765  01508A  6ED9               	movwf	fsr2l,c
 25766  01508C  0E00               	movlw	high _pBDTEntryOut
 25767  01508E  D00A               	goto	L9
 25768  015090                     i2l6362:
 25769                           
 25770                           ; BSR set to: 13
 25771                           ;usb_device.c: 2167: else
 25772                           ;usb_device.c: 2168: {
 25773                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 25774  015090  010D               	movlb	13	; () banked
 25775  015092  5134               	movf	52,w,b	;volatile
 25776  015094  0B0F               	andlw	15
 25777  015096  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 25778  015098  5001               	movf	??_USBStdGetStatusHandler,w,c
 25779  01509A  0D02               	mullw	2
 25780  01509C  0E6F               	movlw	low _pBDTEntryIn
 25781  01509E  24F3               	addwf	prodl,w,c
 25782  0150A0  6ED9               	movwf	fsr2l,c
 25783  0150A2  0E00               	movlw	high _pBDTEntryIn
 25784  0150A4                     L9:
 25785  0150A4  20F4               	addwfc	prodh,w,c
 25786  0150A6  6EDA               	movwf	fsr2h,c
 25787  0150A8  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 25788  0150AC  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 25789                           
 25790                           ; BSR set to: 13
 25791                           ;usb_device.c: 2170: }
 25792                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 25793                           
 25794                           ; BSR set to: 13
 25795  0150B0  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 25796  0150B4  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 25797  0150B8  AEDF               	btfss	indf2,7,c
 25798  0150BA  D016               	goto	i2l1291
 25799                           
 25800                           ; BSR set to: 13
 25801  0150BC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 25802  0150C0  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 25803  0150C4  A4DF               	btfss	indf2,2,c
 25804  0150C6  D010               	goto	i2l1291
 25805                           
 25806                           ; BSR set to: 13
 25807                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 25808  0150C8  0E01               	movlw	1
 25809  0150CA  010D               	movlb	13	; () banked
 25810  0150CC  6F38               	movwf	56,b	;volatile
 25811                           
 25812                           ; BSR set to: 13
 25813                           ;usb_device.c: 2175: }
 25814                           ;usb_device.c: 2176: }
 25815                           
 25816                           ; BSR set to: 13
 25817                           ;usb_device.c: 2174: break;
 25818  0150CE  D00C               	goto	i2l1291
 25819  0150D0                     i2l6372:
 25820                           
 25821                           ; BSR set to: 13
 25822  0150D0  010D               	movlb	13	; () banked
 25823  0150D2  5130               	movf	48,w,b	;volatile
 25824  0150D4  0B1F               	andlw	31
 25825                           
 25826                           ; Switch size 1, requested type "space"
 25827                           ; Number of cases is 3, Range of values is 0 to 2
 25828                           ; switch strategies available:
 25829                           ; Name         Instructions Cycles
 25830                           ; simple_byte           10     6 (average)
 25831                           ;	Chosen strategy is simple_byte
 25832  0150D6  0A00               	xorlw	0	; case 0
 25833  0150D8  B4D8               	btfsc	status,2,c
 25834  0150DA  D7BF               	goto	i2l1288
 25835  0150DC  0A01               	xorlw	1	; case 1
 25836  0150DE  B4D8               	btfsc	status,2,c
 25837  0150E0  D7C4               	goto	i2l1292
 25838  0150E2  0A03               	xorlw	3	; case 2
 25839  0150E4  B4D8               	btfsc	status,2,c
 25840  0150E6  D7C4               	goto	i2l1293
 25841  0150E8                     i2l1291:
 25842                           
 25843                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 25844  0150E8  0100               	movlb	0	; () banked
 25845  0150EA  AF6C               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 25846  0150EC  0012               	return	
 25847                           
 25848                           ; BSR set to: 0
 25849                           ;usb_device.c: 2179: {
 25850                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 25851  0150EE  0E38               	movlw	56
 25852  0150F0  0100               	movlb	0	; () banked
 25853  0150F2  6F69               	movwf	_inPipes& (0+255),b	;volatile
 25854  0150F4  0E0D               	movlw	13
 25855  0150F6  0100               	movlb	0	; () banked
 25856  0150F8  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25857                           
 25858                           ; BSR set to: 0
 25859                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25860  0150FA  0100               	movlb	0	; () banked
 25861  0150FC  816C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25862                           
 25863                           ; BSR set to: 0
 25864                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 25865  0150FE  0E02               	movlw	2
 25866  015100  0100               	movlb	0	; () banked
 25867  015102  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25868  015104  0012               	return	
 25869  015106                     __end_of_USBStdGetStatusHandler:
 25870                           	opt stack 0
 25871                           pclatu	equ	0xFFB
 25872                           pclath	equ	0xFFA
 25873                           tblptru	equ	0xFF8
 25874                           tblptrh	equ	0xFF7
 25875                           tblptrl	equ	0xFF6
 25876                           tablat	equ	0xFF5
 25877                           prodh	equ	0xFF4
 25878                           prodl	equ	0xFF3
 25879                           intcon	equ	0xFF2
 25880                           intcon2	equ	0xFF1
 25881                           postinc0	equ	0xFEE
 25882                           fsr0h	equ	0xFEA
 25883                           fsr0l	equ	0xFE9
 25884                           wreg	equ	0xFE8
 25885                           indf1	equ	0xFE7
 25886                           postinc1	equ	0xFE6
 25887                           postdec1	equ	0xFE5
 25888                           fsr1h	equ	0xFE2
 25889                           fsr1l	equ	0xFE1
 25890                           indf2	equ	0xFDF
 25891                           postinc2	equ	0xFDE
 25892                           postdec2	equ	0xFDD
 25893                           plusw2	equ	0xFDB
 25894                           fsr2h	equ	0xFDA
 25895                           fsr2l	equ	0xFD9
 25896                           status	equ	0xFD8
 25897                           
 25898 ;; *************** function _USBStdGetDscHandler *****************
 25899 ;; Defined at:
 25900 ;;		line 2043 in file "../My_header/usb_cdc/usb/usb_device.c"
 25901 ;; Parameters:    Size  Location     Type
 25902 ;;		None
 25903 ;; Auto vars:     Size  Location     Type
 25904 ;;		None
 25905 ;; Return value:  Size  Location     Type
 25906 ;;		None               void
 25907 ;; Registers used:
 25908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 25909 ;; Tracked objects:
 25910 ;;		On entry : 0/0
 25911 ;;		On exit  : 0/0
 25912 ;;		Unchanged: 0/0
 25913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25918 ;;Total ram usage:        2 bytes
 25919 ;; Hardware stack levels used:    1
 25920 ;; This function calls:
 25921 ;;		Nothing
 25922 ;; This function is called by:
 25923 ;;		_USBCheckStdRequest
 25924 ;; This function uses a non-reentrant model
 25925 ;;
 25926                           
 25927                           	psect	text119
 25928  013248                     __ptext119:
 25929                           	opt stack 0
 25930  013248                     _USBStdGetDscHandler:
 25931                           	opt stack 16
 25932                           
 25933                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 25934                           
 25935                           ; BSR set to: 0
 25936                           ;incstack = 0
 25937  013248  0E80               	movlw	128
 25938  01324A  010D               	movlb	13	; () banked
 25939  01324C  1930               	xorwf	48,w,b	;volatile
 25940  01324E  A4D8               	btfss	status,2,c
 25941  013250  0012               	return	
 25942                           
 25943                           ; BSR set to: 13
 25944                           ;usb_device.c: 2046: {
 25945                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 25946  013252  0EC0               	movlw	192
 25947  013254  0100               	movlb	0	; () banked
 25948  013256  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25949                           
 25950                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 25951  013258  D092               	goto	i2l6350
 25952  01325A                     i2l6324:
 25953                           
 25954                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 25955  01325A  0EEA               	movlw	low _device_dsc
 25956  01325C  0100               	movlb	0	; () banked
 25957  01325E  6F69               	movwf	_inPipes& (0+255),b	;volatile
 25958  013260  0EFB               	movlw	high _device_dsc
 25959  013262  0100               	movlb	0	; () banked
 25960  013264  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25961                           
 25962                           ; BSR set to: 0
 25963                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 25964  013266  0E00               	movlw	0
 25965  013268  0100               	movlb	0	; () banked
 25966  01326A  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25967  01326C  0E12               	movlw	18
 25968  01326E  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25969                           
 25970                           ;usb_device.c: 2058: break;
 25971  013270  0012               	return	
 25972  013272                     i2l6328:
 25973                           
 25974                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 25975  013272  010D               	movlb	13	; () banked
 25976  013274  5132               	movf	50,w,b	;volatile
 25977  013276  A4D8               	btfss	status,2,c
 25978  013278  D049               	goto	i2l6336
 25979                           
 25980                           ; BSR set to: 13
 25981                           ;usb_device.c: 2064: {
 25982                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 25983  01327A  010D               	movlb	13	; () banked
 25984  01327C  5132               	movf	50,w,b	;volatile
 25985  01327E  0D02               	mullw	2
 25986  013280  0E21               	movlw	low _USB_CD_Ptr
 25987  013282  24F3               	addwf	prodl,w,c
 25988  013284  6EF6               	movwf	tblptrl,c
 25989  013286  0EFB               	movlw	high _USB_CD_Ptr
 25990  013288  20F4               	addwfc	prodh,w,c
 25991  01328A  6EF7               	movwf	tblptrh,c
 25992  01328C                     	if	1	;There are 3 active tblptr bytes
 25993  01328C  6AF8               	clrf	tblptru,c
 25994  01328E  0E00               	movlw	low (__mediumconst shr (0+16))
 25995  013290  22F8               	addwfc	tblptru,f,c
 25996  013292                     	endif
 25997  013292  0009               	tblrd		*+
 25998  013294  CFF5 F069          	movff	tablat,_inPipes	;volatile
 25999  013298  000A               	tblrd		*-
 26000  01329A  CFF5 F06A          	movff	tablat,_inPipes+1	;volatile
 26001                           
 26002                           ; BSR set to: 13
 26003                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26004  01329E  0E02               	movlw	2
 26005  0132A0  0100               	movlb	0	; () banked
 26006  0132A2  2569               	addwf	_inPipes& (0+255),w,b	;volatile
 26007  0132A4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 26008  0132A6  0E00               	movlw	0
 26009  0132A8  0100               	movlb	0	; () banked
 26010  0132AA  216A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26011  0132AC  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26012  0132AE  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26013  0132B2  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26014  0132B6  0E00               	movlw	low (__mediumconst shr (0+16))
 26015  0132B8  6EF8               	movwf	tblptru,c
 26016  0132BA  0E0E               	movlw	(high __ramtop+-1)
 26017  0132BC  64F7               	cpfsgt	tblptrh,c
 26018  0132BE  D003               	bra	i2u577_47
 26019  0132C0  0008               	tblrd		*
 26020  0132C2  50F5               	movf	tablat,w,c
 26021  0132C4  D005               	bra	i2u577_40
 26022  0132C6                     i2u577_47:
 26023  0132C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 26024  0132CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 26025  0132CE  50E7               	movf	indf1,w,c
 26026  0132D0                     i2u577_40:
 26027  0132D0  0100               	movlb	0	; () banked
 26028  0132D2  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26029                           
 26030                           ; BSR set to: 0
 26031                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26032  0132D4  0E03               	movlw	3
 26033  0132D6  0100               	movlb	0	; () banked
 26034  0132D8  2569               	addwf	_inPipes& (0+255),w,b	;volatile
 26035  0132DA  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 26036  0132DC  0E00               	movlw	0
 26037  0132DE  0100               	movlb	0	; () banked
 26038  0132E0  216A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26039  0132E2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26040  0132E4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26041  0132E8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26042  0132EC  0E00               	movlw	low (__mediumconst shr (0+16))
 26043  0132EE  6EF8               	movwf	tblptru,c
 26044  0132F0  0E0E               	movlw	(high __ramtop+-1)
 26045  0132F2  64F7               	cpfsgt	tblptrh,c
 26046  0132F4  D003               	bra	i2u578_47
 26047  0132F6  0008               	tblrd		*
 26048  0132F8  50F5               	movf	tablat,w,c
 26049  0132FA  D005               	bra	i2u578_40
 26050  0132FC                     i2u578_47:
 26051  0132FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 26052  013300  CFF7 FFE2          	movff	tblptrh,fsr1h
 26053  013304  50E7               	movf	indf1,w,c
 26054  013306                     i2u578_40:
 26055  013306  0100               	movlb	0	; () banked
 26056  013308  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26057                           
 26058                           ;usb_device.c: 2076: }
 26059  01330A  0012               	return	
 26060  01330C                     i2l6336:
 26061                           
 26062                           ;usb_device.c: 2077: else
 26063                           ;usb_device.c: 2078: {
 26064                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 26065  01330C  0E00               	movlw	0
 26066  01330E  0100               	movlb	0	; () banked
 26067  013310  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26068                           
 26069                           ; BSR set to: 0
 26070                           ;usb_device.c: 2080: }
 26071                           ;usb_device.c: 2081: break;
 26072  013312  0012               	return	
 26073  013314                     i2l6338:
 26074                           
 26075                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 26076  013314  0E03               	movlw	3
 26077  013316  010D               	movlb	13	; () banked
 26078  013318  6132               	cpfslt	50,b	;volatile
 26079  01331A  D029               	goto	i2l6344
 26080                           
 26081                           ; BSR set to: 13
 26082                           ;usb_device.c: 2087: {
 26083                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26084  01331C  010D               	movlb	13	; () banked
 26085  01331E  5132               	movf	50,w,b	;volatile
 26086  013320  0D02               	mullw	2
 26087  013322  0E1B               	movlw	low _USB_SD_Ptr
 26088  013324  24F3               	addwf	prodl,w,c
 26089  013326  6EF6               	movwf	tblptrl,c
 26090  013328  0EFB               	movlw	high _USB_SD_Ptr
 26091  01332A  20F4               	addwfc	prodh,w,c
 26092  01332C  6EF7               	movwf	tblptrh,c
 26093  01332E                     	if	1	;There are 3 active tblptr bytes
 26094  01332E  6AF8               	clrf	tblptru,c
 26095  013330  0E00               	movlw	low (__mediumconst shr (0+16))
 26096  013332  22F8               	addwfc	tblptru,f,c
 26097  013334                     	endif
 26098  013334  0009               	tblrd		*+
 26099  013336  CFF5 F069          	movff	tablat,_inPipes	;volatile
 26100  01333A  000A               	tblrd		*-
 26101  01333C  CFF5 F06A          	movff	tablat,_inPipes+1	;volatile
 26102                           
 26103                           ; BSR set to: 13
 26104                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26105  013340  C069  FFF6         	movff	_inPipes,tblptrl	;volatile
 26106  013344  C06A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26107  013348  0E00               	movlw	low (__mediumconst shr (0+16))
 26108  01334A  6EF8               	movwf	tblptru,c
 26109  01334C  0E0E               	movlw	(high __ramtop+-1)
 26110  01334E  64F7               	cpfsgt	tblptrh,c
 26111  013350  D003               	bra	i2u580_47
 26112  013352  0008               	tblrd		*
 26113  013354  50F5               	movf	tablat,w,c
 26114  013356  D005               	bra	i2u580_40
 26115  013358                     i2u580_47:
 26116  013358  CFF6 FFE1          	movff	tblptrl,fsr1l
 26117  01335C  CFF7 FFE2          	movff	tblptrh,fsr1h
 26118  013360  50E7               	movf	indf1,w,c
 26119  013362                     i2u580_40:
 26120  013362  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 26121  013364  5001               	movf	??_USBStdGetDscHandler,w,c
 26122  013366  0100               	movlb	0	; () banked
 26123  013368  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26124  01336A  6B6E               	clrf	(_inPipes+5)& (0+255),b	;volatile
 26125                           
 26126                           ;usb_device.c: 2092: }
 26127  01336C  0012               	return	
 26128  01336E                     i2l6344:
 26129                           
 26130                           ;usb_device.c: 2102: else
 26131                           ;usb_device.c: 2103: {
 26132                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 26133  01336E  0E00               	movlw	0
 26134  013370  0100               	movlb	0	; () banked
 26135  013372  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26136                           
 26137                           ; BSR set to: 0
 26138                           ;usb_device.c: 2105: }
 26139                           ;usb_device.c: 2106: break;
 26140  013374  0012               	return	
 26141  013376                     i2l6346:
 26142                           
 26143                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 26144  013376  0E00               	movlw	0
 26145  013378  0100               	movlb	0	; () banked
 26146  01337A  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26147                           
 26148                           ; BSR set to: 0
 26149                           ;usb_device.c: 2110: }
 26150                           
 26151                           ;usb_device.c: 2109: break;
 26152  01337C  0012               	return	
 26153  01337E                     i2l6350:
 26154                           
 26155                           ; BSR set to: 0
 26156  01337E  010D               	movlb	13	; () banked
 26157  013380  5133               	movf	51,w,b	;volatile
 26158                           
 26159                           ; Switch size 1, requested type "space"
 26160                           ; Number of cases is 3, Range of values is 1 to 3
 26161                           ; switch strategies available:
 26162                           ; Name         Instructions Cycles
 26163                           ; simple_byte           10     6 (average)
 26164                           ;	Chosen strategy is simple_byte
 26165  013382  0A01               	xorlw	1	; case 1
 26166  013384  B4D8               	btfsc	status,2,c
 26167  013386  D769               	goto	i2l6324
 26168  013388  0A03               	xorlw	3	; case 2
 26169  01338A  B4D8               	btfsc	status,2,c
 26170  01338C  D772               	goto	i2l6328
 26171  01338E  0A01               	xorlw	1	; case 3
 26172  013390  B4D8               	btfsc	status,2,c
 26173  013392  D7C0               	goto	i2l6338
 26174  013394  D7F0               	goto	i2l6346
 26175  013396                     __end_of_USBStdGetDscHandler:
 26176                           	opt stack 0
 26177                           pclatu	equ	0xFFB
 26178                           pclath	equ	0xFFA
 26179                           tblptru	equ	0xFF8
 26180                           tblptrh	equ	0xFF7
 26181                           tblptrl	equ	0xFF6
 26182                           tablat	equ	0xFF5
 26183                           prodh	equ	0xFF4
 26184                           prodl	equ	0xFF3
 26185                           intcon	equ	0xFF2
 26186                           intcon2	equ	0xFF1
 26187                           postinc0	equ	0xFEE
 26188                           fsr0h	equ	0xFEA
 26189                           fsr0l	equ	0xFE9
 26190                           wreg	equ	0xFE8
 26191                           indf1	equ	0xFE7
 26192                           postinc1	equ	0xFE6
 26193                           postdec1	equ	0xFE5
 26194                           fsr1h	equ	0xFE2
 26195                           fsr1l	equ	0xFE1
 26196                           indf2	equ	0xFDF
 26197                           postinc2	equ	0xFDE
 26198                           postdec2	equ	0xFDD
 26199                           plusw2	equ	0xFDB
 26200                           fsr2h	equ	0xFDA
 26201                           fsr2l	equ	0xFD9
 26202                           status	equ	0xFD8
 26203                           
 26204 ;; *************** function _USBStdFeatureReqHandler *****************
 26205 ;; Defined at:
 26206 ;;		line 2757 in file "../My_header/usb_cdc/usb/usb_device.c"
 26207 ;; Parameters:    Size  Location     Type
 26208 ;;		None
 26209 ;; Auto vars:     Size  Location     Type
 26210 ;;  p               2   24[COMRAM] PTR struct __BDT
 26211 ;;		 -> NULL(0), BDT(48), 
 26212 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 26213 ;;		 -> UEP0(1), 
 26214 ;;  current_ep_d    1   23[COMRAM] struct .
 26215 ;; Return value:  Size  Location     Type
 26216 ;;		None               void
 26217 ;; Registers used:
 26218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26219 ;; Tracked objects:
 26220 ;;		On entry : 0/0
 26221 ;;		On exit  : 0/0
 26222 ;;		Unchanged: 0/0
 26223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26225 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26227 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26228 ;;Total ram usage:        6 bytes
 26229 ;; Hardware stack levels used:    1
 26230 ;; Hardware stack levels required when called:    4
 26231 ;; This function calls:
 26232 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26233 ;; This function is called by:
 26234 ;;		_USBCheckStdRequest
 26235 ;; This function uses a non-reentrant model
 26236 ;;
 26237                           
 26238                           	psect	text120
 26239  01204A                     __ptext120:
 26240                           	opt stack 0
 26241  01204A                     _USBStdFeatureReqHandler:
 26242                           	opt stack 12
 26243                           
 26244                           ;usb_device.c: 2759: BDT_ENTRY *p;
 26245                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 26246                           ;usb_device.c: 2764: unsigned char* pUEP;
 26247                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 26248                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 26249                           
 26250                           ;incstack = 0
 26251  01204A  010D               	movlb	13	; () banked
 26252  01204C  0532               	decf	50,w,b	;volatile
 26253  01204E  A4D8               	btfss	status,2,c
 26254  012050  D011               	goto	i2l1367
 26255                           
 26256                           ; BSR set to: 13
 26257  012052  010D               	movlb	13	; () banked
 26258  012054  5130               	movf	48,w,b	;volatile
 26259  012056  0B1F               	andlw	31
 26260  012058  0900               	iorlw	0
 26261  01205A  A4D8               	btfss	status,2,c
 26262  01205C  D00B               	goto	i2l1367
 26263                           
 26264                           ; BSR set to: 13
 26265                           ;usb_device.c: 2804: {
 26266                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 26267  01205E  0100               	movlb	0	; () banked
 26268  012060  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26269                           
 26270                           ; BSR set to: 0
 26271                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 26272  012062  0E03               	movlw	3
 26273  012064  010D               	movlb	13	; () banked
 26274  012066  1931               	xorwf	49,w,b	;volatile
 26275  012068  A4D8               	btfss	status,2,c
 26276  01206A  D002               	goto	i2l6390
 26277                           
 26278                           ; BSR set to: 13
 26279                           ;usb_device.c: 2807: RemoteWakeup = 1;
 26280  01206C  0E01               	movlw	1
 26281  01206E  D001               	goto	L10
 26282  012070                     i2l6390:
 26283                           
 26284                           ; BSR set to: 13
 26285                           ;usb_device.c: 2808: else
 26286                           ;usb_device.c: 2809: RemoteWakeup = 0;
 26287  012070  0E00               	movlw	0
 26288  012072                     L10:
 26289  012072  6E41               	movwf	_RemoteWakeup,c	;volatile
 26290  012074                     i2l1367:
 26291                           
 26292                           ; BSR set to: 13
 26293                           ;usb_device.c: 2810: }
 26294                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 26295                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 26296                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 26297                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 26298  012074  010D               	movlb	13	; () banked
 26299  012076  5132               	movf	50,w,b	;volatile
 26300  012078  A4D8               	btfss	status,2,c
 26301  01207A  0012               	return	
 26302                           
 26303                           ; BSR set to: 13
 26304  01207C  010D               	movlb	13	; () banked
 26305  01207E  5130               	movf	48,w,b	;volatile
 26306  012080  0B1F               	andlw	31
 26307  012082  0A02               	xorlw	2
 26308  012084  A4D8               	btfss	status,2,c
 26309  012086  0012               	return	
 26310                           
 26311                           ; BSR set to: 13
 26312  012088  010D               	movlb	13	; () banked
 26313  01208A  5134               	movf	52,w,b	;volatile
 26314  01208C  0B0F               	andlw	15
 26315  01208E  0900               	iorlw	0
 26316  012090  B4D8               	btfsc	status,2,c
 26317  012092  0012               	return	
 26318                           
 26319                           ; BSR set to: 13
 26320  012094  010D               	movlb	13	; () banked
 26321  012096  5134               	movf	52,w,b	;volatile
 26322  012098  0B0F               	andlw	15
 26323  01209A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26324  01209C  0E03               	movlw	3
 26325  01209E  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 26326  0120A0  0012               	return	
 26327                           
 26328                           ; BSR set to: 13
 26329  0120A2  0E20               	movlw	32
 26330  0120A4  1845               	xorwf	_USBDeviceState,w,c	;volatile
 26331  0120A6  A4D8               	btfss	status,2,c
 26332  0120A8  0012               	return	
 26333                           
 26334                           ; BSR set to: 13
 26335                           ;usb_device.c: 2817: {
 26336                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 26337  0120AA  0100               	movlb	0	; () banked
 26338  0120AC  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26339                           
 26340                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 26341  0120AE  010D               	movlb	13	; () banked
 26342  0120B0  BF34               	btfsc	52,7,b	;volatile
 26343  0120B2  D01B               	goto	i2l6404
 26344                           
 26345                           ; BSR set to: 13
 26346                           ;usb_device.c: 2824: {
 26347                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26348  0120B4  010D               	movlb	13	; () banked
 26349  0120B6  5134               	movf	52,w,b	;volatile
 26350  0120B8  0B0F               	andlw	15
 26351  0120BA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26352  0120BC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26353  0120BE  0D02               	mullw	2
 26354  0120C0  0E75               	movlw	low _pBDTEntryOut
 26355  0120C2  24F3               	addwf	prodl,w,c
 26356  0120C4  6ED9               	movwf	fsr2l,c
 26357  0120C6  0E00               	movlw	high _pBDTEntryOut
 26358  0120C8  20F4               	addwfc	prodh,w,c
 26359  0120CA  6EDA               	movwf	fsr2h,c
 26360  0120CC  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 26361  0120D0  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26362                           
 26363                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 26364  0120D4  010D               	movlb	13	; () banked
 26365  0120D6  5134               	movf	52,w,b	;volatile
 26366  0120D8  0B0F               	andlw	15
 26367  0120DA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26368  0120DC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26369  0120DE  0D01               	mullw	1
 26370  0120E0  0E7E               	movlw	low _ep_data_out
 26371  0120E2  24F3               	addwf	prodl,w,c
 26372  0120E4  6ED9               	movwf	fsr2l,c
 26373  0120E6  0E00               	movlw	high _ep_data_out
 26374  0120E8  D01A               	goto	L11
 26375  0120EA                     i2l6404:
 26376                           
 26377                           ; BSR set to: 13
 26378                           ;usb_device.c: 2828: else
 26379                           ;usb_device.c: 2829: {
 26380                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26381  0120EA  010D               	movlb	13	; () banked
 26382  0120EC  5134               	movf	52,w,b	;volatile
 26383  0120EE  0B0F               	andlw	15
 26384  0120F0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26385  0120F2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26386  0120F4  0D02               	mullw	2
 26387  0120F6  0E6F               	movlw	low _pBDTEntryIn
 26388  0120F8  24F3               	addwf	prodl,w,c
 26389  0120FA  6ED9               	movwf	fsr2l,c
 26390  0120FC  0E00               	movlw	high _pBDTEntryIn
 26391  0120FE  20F4               	addwfc	prodh,w,c
 26392  012100  6EDA               	movwf	fsr2h,c
 26393  012102  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 26394  012106  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26395                           
 26396                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 26397  01210A  010D               	movlb	13	; () banked
 26398  01210C  5134               	movf	52,w,b	;volatile
 26399  01210E  0B0F               	andlw	15
 26400  012110  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26401  012112  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26402  012114  0D01               	mullw	1
 26403  012116  0E7B               	movlw	low _ep_data_in
 26404  012118  24F3               	addwf	prodl,w,c
 26405  01211A  6ED9               	movwf	fsr2l,c
 26406  01211C  0E00               	movlw	high _ep_data_in
 26407  01211E                     L11:
 26408  01211E  20F4               	addwfc	prodh,w,c
 26409  012120  6EDA               	movwf	fsr2h,c
 26410  012122  50DF               	movf	indf2,w,c
 26411  012124  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 26412                           
 26413                           ; BSR set to: 13
 26414                           ;usb_device.c: 2832: }
 26415                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 26416                           
 26417                           ; BSR set to: 13
 26418  012126  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 26419  012128  D002               	goto	i2l6410
 26420                           
 26421                           ; BSR set to: 13
 26422                           ;usb_device.c: 2839: {
 26423                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 26424  01212A  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 26425                           
 26426                           ;usb_device.c: 2841: }
 26427  01212C  D001               	goto	i2l6412
 26428  01212E                     i2l6410:
 26429                           
 26430                           ; BSR set to: 13
 26431                           ;usb_device.c: 2842: else
 26432                           ;usb_device.c: 2843: {
 26433                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 26434  01212E  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 26435  012130                     i2l6412:
 26436                           
 26437                           ; BSR set to: 13
 26438                           ;usb_device.c: 2845: }
 26439                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 26440  012130  010D               	movlb	13	; () banked
 26441  012132  BF34               	btfsc	52,7,b	;volatile
 26442  012134  D00B               	goto	i2l6416
 26443                           
 26444                           ; BSR set to: 13
 26445                           ;usb_device.c: 2851: {
 26446                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 26447  012136  010D               	movlb	13	; () banked
 26448  012138  5134               	movf	52,w,b	;volatile
 26449  01213A  0B0F               	andlw	15
 26450  01213C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26451  01213E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26452  012140  0D02               	mullw	2
 26453  012142  0E75               	movlw	low _pBDTEntryOut
 26454  012144  24F3               	addwf	prodl,w,c
 26455  012146  6ED9               	movwf	fsr2l,c
 26456  012148  0E00               	movlw	high _pBDTEntryOut
 26457  01214A  D00A               	goto	L12
 26458  01214C                     i2l6416:
 26459                           
 26460                           ; BSR set to: 13
 26461                           ;usb_device.c: 2854: else
 26462                           ;usb_device.c: 2855: {
 26463                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 26464  01214C  010D               	movlb	13	; () banked
 26465  01214E  5134               	movf	52,w,b	;volatile
 26466  012150  0B0F               	andlw	15
 26467  012152  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26468  012154  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26469  012156  0D02               	mullw	2
 26470  012158  0E6F               	movlw	low _pBDTEntryIn
 26471  01215A  24F3               	addwf	prodl,w,c
 26472  01215C  6ED9               	movwf	fsr2l,c
 26473  01215E  0E00               	movlw	high _pBDTEntryIn
 26474  012160                     L12:
 26475  012160  20F4               	addwfc	prodh,w,c
 26476  012162  6EDA               	movwf	fsr2h,c
 26477  012164  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 26478  012168  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 26479                           
 26480                           ; BSR set to: 13
 26481                           ;usb_device.c: 2857: }
 26482                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 26483                           
 26484                           ; BSR set to: 13
 26485  01216C  0E03               	movlw	3
 26486  01216E  010D               	movlb	13	; () banked
 26487  012170  1931               	xorwf	49,w,b	;volatile
 26488  012172  A4D8               	btfss	status,2,c
 26489  012174  D02F               	goto	i2l6432
 26490                           
 26491                           ; BSR set to: 13
 26492                           ;usb_device.c: 2861: {
 26493                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 26494  012176  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26495  01217A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26496  01217E  AEDF               	btfss	indf2,7,c
 26497  012180  D01C               	goto	i2l6428
 26498                           
 26499                           ; BSR set to: 13
 26500                           ;usb_device.c: 2863: {
 26501                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 26502  012182  010D               	movlb	13	; () banked
 26503  012184  BF34               	btfsc	52,7,b	;volatile
 26504  012186  D00B               	goto	i2l6426
 26505                           
 26506                           ; BSR set to: 13
 26507                           ;usb_device.c: 2867: {
 26508                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 26509  012188  010D               	movlb	13	; () banked
 26510  01218A  5134               	movf	52,w,b	;volatile
 26511  01218C  0B0F               	andlw	15
 26512  01218E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26513  012190  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26514  012192  0D01               	mullw	1
 26515  012194  0E7E               	movlw	low _ep_data_out
 26516  012196  24F3               	addwf	prodl,w,c
 26517  012198  6ED9               	movwf	fsr2l,c
 26518  01219A  0E00               	movlw	high _ep_data_out
 26519  01219C  D00A               	goto	L13
 26520  01219E                     i2l6426:
 26521                           
 26522                           ;usb_device.c: 2870: else
 26523                           ;usb_device.c: 2871: {
 26524                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 26525  01219E  010D               	movlb	13	; () banked
 26526  0121A0  5134               	movf	52,w,b	;volatile
 26527  0121A2  0B0F               	andlw	15
 26528  0121A4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26529  0121A6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26530  0121A8  0D01               	mullw	1
 26531  0121AA  0E7B               	movlw	low _ep_data_in
 26532  0121AC  24F3               	addwf	prodl,w,c
 26533  0121AE  6ED9               	movwf	fsr2l,c
 26534  0121B0  0E00               	movlw	high _ep_data_in
 26535  0121B2                     L13:
 26536  0121B2  20F4               	addwfc	prodh,w,c
 26537  0121B4  6EDA               	movwf	fsr2h,c
 26538  0121B6  0100               	movlb	0	; () banked
 26539  0121B8  82DF               	bsf	indf2,1,c
 26540  0121BA                     i2l6428:
 26541                           
 26542                           ;usb_device.c: 2873: }
 26543                           ;usb_device.c: 2874: }
 26544                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 26545  0121BA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26546  0121BE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26547  0121C2  0E00               	movlw	0
 26548  0121C4  84DB               	bsf	plusw2,2,c
 26549                           
 26550                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 26551  0121C6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26552  0121CA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26553  0121CE  0E00               	movlw	0
 26554  0121D0  8EDB               	bsf	plusw2,7,c
 26555                           
 26556                           ;usb_device.c: 2879: }
 26557  0121D2  0012               	return	
 26558  0121D4                     i2l6432:
 26559                           
 26560                           ;usb_device.c: 2880: else
 26561                           ;usb_device.c: 2881: {
 26562                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 26563  0121D4  0E04               	movlw	4
 26564  0121D6  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 26565                           
 26566                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 26567  0121D8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26568  0121DC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26569  0121E0  AEDF               	btfss	indf2,7,c
 26570  0121E2  D01B               	goto	i2l6442
 26571                           
 26572                           ;usb_device.c: 2888: {
 26573                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 26574  0121E4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26575  0121E8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26576  0121EC  0E7F               	movlw	127
 26577  0121EE  16DF               	andwf	indf2,f,c
 26578                           
 26579                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 26580  0121F0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26581  0121F4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26582  0121F8  0E00               	movlw	0
 26583  0121FA  8CDB               	bsf	plusw2,6,c
 26584                           
 26585                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 26586  0121FC  0E00               	movlw	0
 26587  0121FE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26588  012200  0E05               	movlw	5
 26589  012202  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26590  012204  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 26591  012208  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 26592  01220C  0E00               	movlw	0
 26593  01220E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26594  012210  0E02               	movlw	2
 26595  012212  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26596  012214  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26597                           
 26598                           ;usb_device.c: 2894: }
 26599  012218  D006               	goto	i2l6444
 26600  01221A                     i2l6442:
 26601                           
 26602                           ;usb_device.c: 2895: else
 26603                           ;usb_device.c: 2896: {
 26604                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 26605  01221A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26606  01221E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26607  012222  0E00               	movlw	0
 26608  012224  8CDB               	bsf	plusw2,6,c
 26609  012226                     i2l6444:
 26610                           
 26611                           ;usb_device.c: 2899: }
 26612                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 26613  012226  0E04               	movlw	4
 26614  012228  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 26615                           
 26616                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 26617  01222A  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 26618  01222C  D006               	goto	i2l1386
 26619  01222E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26620  012232  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26621  012236  AEDF               	btfss	indf2,7,c
 26622  012238  D031               	goto	i2l6458
 26623  01223A                     i2l1386:
 26624                           
 26625                           ;usb_device.c: 2910: {
 26626                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 26627  01223A  010D               	movlb	13	; () banked
 26628  01223C  BF34               	btfsc	52,7,b	;volatile
 26629  01223E  D00B               	goto	i2l6452
 26630                           
 26631                           ; BSR set to: 13
 26632                           ;usb_device.c: 2912: {
 26633                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 26634  012240  010D               	movlb	13	; () banked
 26635  012242  5134               	movf	52,w,b	;volatile
 26636  012244  0B0F               	andlw	15
 26637  012246  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26638  012248  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26639  01224A  0D01               	mullw	1
 26640  01224C  0E7E               	movlw	low _ep_data_out
 26641  01224E  24F3               	addwf	prodl,w,c
 26642  012250  6ED9               	movwf	fsr2l,c
 26643  012252  0E00               	movlw	high _ep_data_out
 26644  012254  D00A               	goto	L14
 26645  012256                     i2l6452:
 26646                           
 26647                           ;usb_device.c: 2915: else
 26648                           ;usb_device.c: 2916: {
 26649                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 26650  012256  010D               	movlb	13	; () banked
 26651  012258  5134               	movf	52,w,b	;volatile
 26652  01225A  0B0F               	andlw	15
 26653  01225C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26654  01225E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26655  012260  0D01               	mullw	1
 26656  012262  0E7B               	movlw	low _ep_data_in
 26657  012264  24F3               	addwf	prodl,w,c
 26658  012266  6ED9               	movwf	fsr2l,c
 26659  012268  0E00               	movlw	high _ep_data_in
 26660  01226A                     L14:
 26661  01226A  20F4               	addwfc	prodh,w,c
 26662  01226C  6EDA               	movwf	fsr2h,c
 26663  01226E  0100               	movlb	0	; () banked
 26664  012270  92DF               	bcf	indf2,1,c
 26665                           
 26666                           ; BSR set to: 0
 26667                           ;usb_device.c: 2918: }
 26668                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 26669                           
 26670                           ; BSR set to: 0
 26671  012272  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26672  012276  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26673  01227A  0E3B               	movlw	59
 26674  01227C  16DF               	andwf	indf2,f,c
 26675                           
 26676                           ; BSR set to: 0
 26677                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 26678  01227E  0E00               	movlw	0
 26679  012280  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26680  012282  0E05               	movlw	5
 26681  012284  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26682  012286  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 26683  01228A  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 26684  01228E  0E00               	movlw	0
 26685  012290  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26686  012292  0E02               	movlw	2
 26687  012294  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26688  012296  EC99  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26689                           
 26690                           ;usb_device.c: 2924: }
 26691  01229A  D006               	goto	i2l6460
 26692  01229C                     i2l6458:
 26693                           
 26694                           ;usb_device.c: 2925: else
 26695                           ;usb_device.c: 2926: {
 26696                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 26697  01229C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26698  0122A0  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26699  0122A4  0E3B               	movlw	59
 26700  0122A6  16DF               	andwf	indf2,f,c
 26701  0122A8                     i2l6460:
 26702                           
 26703                           ;usb_device.c: 2929: }
 26704                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 26705  0122A8  010D               	movlb	13	; () banked
 26706  0122AA  5134               	movf	52,w,b	;volatile
 26707  0122AC  0B0F               	andlw	15
 26708  0122AE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26709  0122B0  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26710  0122B2  0D01               	mullw	1
 26711  0122B4  0E26               	movlw	38
 26712  0122B6  24F3               	addwf	prodl,w,c
 26713  0122B8  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 26714  0122BA  0E0F               	movlw	15
 26715  0122BC  20F4               	addwfc	prodh,w,c
 26716  0122BE  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 26717                           
 26718                           ; BSR set to: 13
 26719                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 26720  0122C0  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 26721  0122C4  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 26722  0122C8  0EFE               	movlw	254
 26723  0122CA  16DF               	andwf	indf2,f,c
 26724                           
 26725                           ; BSR set to: 13
 26726  0122CC  0012               	return	
 26727  0122CE                     __end_of_USBStdFeatureReqHandler:
 26728                           	opt stack 0
 26729                           pclatu	equ	0xFFB
 26730                           pclath	equ	0xFFA
 26731                           tblptru	equ	0xFF8
 26732                           tblptrh	equ	0xFF7
 26733                           tblptrl	equ	0xFF6
 26734                           tablat	equ	0xFF5
 26735                           prodh	equ	0xFF4
 26736                           prodl	equ	0xFF3
 26737                           intcon	equ	0xFF2
 26738                           intcon2	equ	0xFF1
 26739                           postinc0	equ	0xFEE
 26740                           fsr0h	equ	0xFEA
 26741                           fsr0l	equ	0xFE9
 26742                           wreg	equ	0xFE8
 26743                           indf1	equ	0xFE7
 26744                           postinc1	equ	0xFE6
 26745                           postdec1	equ	0xFE5
 26746                           fsr1h	equ	0xFE2
 26747                           fsr1l	equ	0xFE1
 26748                           indf2	equ	0xFDF
 26749                           postinc2	equ	0xFDE
 26750                           postdec2	equ	0xFDD
 26751                           plusw2	equ	0xFDB
 26752                           fsr2h	equ	0xFDA
 26753                           fsr2l	equ	0xFD9
 26754                           status	equ	0xFD8
 26755                           
 26756 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 26757 ;; Defined at:
 26758 ;;		line 39 in file "../My_header/usb_cdc/My_usb_cdc.c"
 26759 ;; Parameters:    Size  Location     Type
 26760 ;;  event           2   12[COMRAM] enum E8545
 26761 ;;  pdata           2   14[COMRAM] PTR void 
 26762 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 26763 ;;  size            2   16[COMRAM] unsigned int 
 26764 ;; Auto vars:     Size  Location     Type
 26765 ;;		None
 26766 ;; Return value:  Size  Location     Type
 26767 ;;                  1    wreg      unsigned char 
 26768 ;; Registers used:
 26769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26770 ;; Tracked objects:
 26771 ;;		On entry : 0/0
 26772 ;;		On exit  : 0/0
 26773 ;;		Unchanged: 0/0
 26774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26775 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26778 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26779 ;;Total ram usage:        8 bytes
 26780 ;; Hardware stack levels used:    1
 26781 ;; Hardware stack levels required when called:    3
 26782 ;; This function calls:
 26783 ;;		_CDCInitEP
 26784 ;;		_USBCheckCDCRequest
 26785 ;; This function is called by:
 26786 ;;		_USBDeviceTasks
 26787 ;;		_USBStdSetCfgHandler
 26788 ;;		_USBSuspend
 26789 ;;		_USBWakeFromSuspend
 26790 ;;		_USBCtrlTrfSetupHandler
 26791 ;;		_USBCheckStdRequest
 26792 ;;		_USBStdFeatureReqHandler
 26793 ;; This function uses a non-reentrant model
 26794 ;;
 26795                           
 26796                           	psect	text121
 26797  016732                     __ptext121:
 26798                           	opt stack 0
 26799  016732                     _USER_USB_CALLBACK_EVENT_HANDLER:
 26800                           	opt stack 16
 26801                           
 26802                           ;My_usb_cdc.c: 40: switch ((int) event) {
 26803                           
 26804                           ;incstack = 0
 26805  016732  D006               	goto	i2l5942
 26806  016734                     i2l5936:
 26807                           
 26808                           ;My_usb_cdc.c: 42: CDCInitEP();
 26809  016734  EC16  F0AF         	call	_CDCInitEP	;wreg free
 26810                           
 26811                           ;My_usb_cdc.c: 43: break;
 26812  016738  0012               	return	
 26813  01673A                     i2l5938:
 26814                           
 26815                           ;My_usb_cdc.c: 45: USBCheckCDCRequest();
 26816  01673A  EC73  F0A3         	call	_USBCheckCDCRequest	;wreg free
 26817                           
 26818                           ;My_usb_cdc.c: 47: }
 26819                           
 26820                           ;My_usb_cdc.c: 46: break;
 26821  01673E  0012               	return	
 26822  016740                     i2l5942:
 26823  016740  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 26824  016744  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 26825                           
 26826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26827                           ; Switch size 1, requested type "space"
 26828                           ; Number of cases is 1, Range of values is 0 to 0
 26829                           ; switch strategies available:
 26830                           ; Name         Instructions Cycles
 26831                           ; simple_byte            4     3 (average)
 26832                           ;	Chosen strategy is simple_byte
 26833  016748  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 26834  01674A  0A00               	xorlw	0	; case 0
 26835  01674C  A4D8               	btfss	status,2,c
 26836  01674E  0012               	return	
 26837                           
 26838                           ; Switch size 1, requested type "space"
 26839                           ; Number of cases is 2, Range of values is 1 to 3
 26840                           ; switch strategies available:
 26841                           ; Name         Instructions Cycles
 26842                           ; simple_byte            7     4 (average)
 26843                           ;	Chosen strategy is simple_byte
 26844  016750  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 26845  016752  0A01               	xorlw	1	; case 1
 26846  016754  B4D8               	btfsc	status,2,c
 26847  016756  D7EE               	goto	i2l5936
 26848  016758  0A02               	xorlw	2	; case 3
 26849  01675A  A4D8               	btfss	status,2,c
 26850  01675C  0012               	return	
 26851  01675E  D7ED               	goto	i2l5938
 26852  016760                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 26853                           	opt stack 0
 26854                           pclatu	equ	0xFFB
 26855                           pclath	equ	0xFFA
 26856                           tblptru	equ	0xFF8
 26857                           tblptrh	equ	0xFF7
 26858                           tblptrl	equ	0xFF6
 26859                           tablat	equ	0xFF5
 26860                           prodh	equ	0xFF4
 26861                           prodl	equ	0xFF3
 26862                           intcon	equ	0xFF2
 26863                           intcon2	equ	0xFF1
 26864                           postinc0	equ	0xFEE
 26865                           fsr0h	equ	0xFEA
 26866                           fsr0l	equ	0xFE9
 26867                           wreg	equ	0xFE8
 26868                           indf1	equ	0xFE7
 26869                           postinc1	equ	0xFE6
 26870                           postdec1	equ	0xFE5
 26871                           fsr1h	equ	0xFE2
 26872                           fsr1l	equ	0xFE1
 26873                           indf2	equ	0xFDF
 26874                           postinc2	equ	0xFDE
 26875                           postdec2	equ	0xFDD
 26876                           plusw2	equ	0xFDB
 26877                           fsr2h	equ	0xFDA
 26878                           fsr2l	equ	0xFD9
 26879                           status	equ	0xFD8
 26880                           
 26881 ;; *************** function _USBCheckCDCRequest *****************
 26882 ;; Defined at:
 26883 ;;		line 204 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 26884 ;; Parameters:    Size  Location     Type
 26885 ;;		None
 26886 ;; Auto vars:     Size  Location     Type
 26887 ;;		None
 26888 ;; Return value:  Size  Location     Type
 26889 ;;		None               void
 26890 ;; Registers used:
 26891 ;;		wreg, status,2, status,0
 26892 ;; Tracked objects:
 26893 ;;		On entry : 0/0
 26894 ;;		On exit  : 0/0
 26895 ;;		Unchanged: 0/0
 26896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26901 ;;Total ram usage:        0 bytes
 26902 ;; Hardware stack levels used:    1
 26903 ;; This function calls:
 26904 ;;		Nothing
 26905 ;; This function is called by:
 26906 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26907 ;; This function uses a non-reentrant model
 26908 ;;
 26909                           
 26910                           	psect	text122
 26911  0146E6                     __ptext122:
 26912                           	opt stack 0
 26913  0146E6                     _USBCheckCDCRequest:
 26914                           	opt stack 18
 26915                           
 26916                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 26917                           
 26918                           ;incstack = 0
 26919  0146E6  010D               	movlb	13	; () banked
 26920  0146E8  5130               	movf	48,w,b	;volatile
 26921  0146EA  0B1F               	andlw	31
 26922  0146EC  06E8               	decf	wreg,f,c
 26923  0146EE  A4D8               	btfss	status,2,c
 26924  0146F0  0012               	return	
 26925                           
 26926                           ; BSR set to: 13
 26927                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 26928                           
 26929                           ; BSR set to: 13
 26930                           
 26931                           ; BSR set to: 13
 26932  0146F2  010D               	movlb	13	; () banked
 26933  0146F4  3930               	swapf	48,w,b	;volatile
 26934  0146F6  32E8               	rrcf	wreg,f,c
 26935  0146F8  0B03               	andlw	3
 26936  0146FA  06E8               	decf	wreg,f,c
 26937  0146FC  A4D8               	btfss	status,2,c
 26938  0146FE  0012               	return	
 26939                           
 26940                           ; BSR set to: 13
 26941                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 26942                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 26943                           
 26944                           ; BSR set to: 13
 26945                           
 26946                           ; BSR set to: 13
 26947  014700  010D               	movlb	13	; () banked
 26948  014702  5134               	movf	52,w,b	;volatile
 26949  014704  B4D8               	btfsc	status,2,c
 26950  014706  D048               	goto	i2l5918
 26951                           
 26952                           ; BSR set to: 13
 26953  014708  010D               	movlb	13	; () banked
 26954  01470A  0534               	decf	52,w,b	;volatile
 26955  01470C  A4D8               	btfss	status,2,c
 26956  01470E  0012               	return	
 26957  014710  D043               	goto	i2l5918
 26958  014712                     i2l5894:
 26959                           
 26960                           ; BSR set to: 13
 26961                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 26962  014712  0EE0               	movlw	low _dummy_encapsulated_cmd_response
 26963  014714  0100               	movlb	0	; () banked
 26964  014716  6F69               	movwf	_inPipes& (0+255),b	;volatile
 26965  014718  0E01               	movlw	high _dummy_encapsulated_cmd_response
 26966  01471A  0100               	movlb	0	; () banked
 26967  01471C  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26968                           
 26969                           ; BSR set to: 0
 26970                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 26971  01471E  0E00               	movlw	0
 26972  014720  0100               	movlb	0	; () banked
 26973  014722  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26974  014724  0E08               	movlw	8
 26975  014726  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26976                           
 26977                           ; BSR set to: 0
 26978                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26979  014728  0100               	movlb	0	; () banked
 26980  01472A  816C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26981                           
 26982                           ; BSR set to: 0
 26983                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 26984  01472C  0100               	movlb	0	; () banked
 26985  01472E  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26986                           
 26987                           ;usb_device_cdc.c: 232: break;
 26988  014730  0012               	return	
 26989  014732                     i2l5902:
 26990                           
 26991                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 26992  014732  0EE0               	movlw	low _dummy_encapsulated_cmd_response
 26993  014734  0100               	movlb	0	; () banked
 26994  014736  6F69               	movwf	_inPipes& (0+255),b	;volatile
 26995  014738  0E01               	movlw	high _dummy_encapsulated_cmd_response
 26996  01473A  0100               	movlb	0	; () banked
 26997  01473C  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26998                           
 26999                           ; BSR set to: 0
 27000                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 27001  01473E  0100               	movlb	0	; () banked
 27002  014740  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27003                           
 27004                           ;usb_device_cdc.c: 237: break;
 27005  014742  0012               	return	
 27006  014744                     i2l1443:
 27007                           
 27008                           ; BSR set to: 13
 27009                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 27010  014744  CD36 F064          	movff	3382,_outPipes+4	;volatile
 27011  014748  CD37 F065          	movff	3383,_outPipes+5	;volatile
 27012                           
 27013                           ; BSR set to: 13
 27014                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27015  01474C  0EF8               	movlw	low _line_coding
 27016  01474E  0100               	movlb	0	; () banked
 27017  014750  6F60               	movwf	_outPipes& (0+255),b	;volatile
 27018  014752  0E01               	movlw	high _line_coding
 27019  014754  0100               	movlb	0	; () banked
 27020  014756  6F61               	movwf	(_outPipes+1)& (0+255),b	;volatile
 27021                           
 27022                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 27023  014758  0E00               	movlw	0
 27024  01475A  0100               	movlb	0	; () banked
 27025  01475C  6F66               	movwf	(_outPipes+6)& (0+255),b	;volatile
 27026  01475E  0E00               	movlw	0
 27027  014760  0100               	movlb	0	; () banked
 27028  014762  6F67               	movwf	(_outPipes+7)& (0+255),b	;volatile
 27029  014764  0E00               	movlw	0
 27030  014766  0100               	movlb	0	; () banked
 27031  014768  6F68               	movwf	(_outPipes+8)& (0+255),b	;volatile
 27032                           
 27033                           ; BSR set to: 0
 27034                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 27035  01476A  0100               	movlb	0	; () banked
 27036  01476C  8F63               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 27037                           
 27038                           ;usb_device_cdc.c: 246: break;
 27039  01476E  0012               	return	
 27040  014770                     i2l5910:
 27041                           
 27042                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27043  014770  0EF8               	movlw	low _line_coding
 27044  014772  0100               	movlb	0	; () banked
 27045  014774  6F69               	movwf	_inPipes& (0+255),b	;volatile
 27046  014776  0E01               	movlw	high _line_coding
 27047  014778  0100               	movlb	0	; () banked
 27048  01477A  6F6A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27049                           
 27050                           ; BSR set to: 0
 27051  01477C  0E00               	movlw	0
 27052  01477E  0100               	movlb	0	; () banked
 27053  014780  6F6E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27054  014782  0E07               	movlw	7
 27055  014784  6F6D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27056                           
 27057                           ; BSR set to: 0
 27058  014786  0EC1               	movlw	193
 27059  014788  0100               	movlb	0	; () banked
 27060  01478A  6F6C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27061                           
 27062                           ;usb_device_cdc.c: 253: break;
 27063  01478C  0012               	return	
 27064  01478E                     i2l1445:
 27065                           
 27066                           ; BSR set to: 13
 27067                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27068  01478E  CD32 F04A          	movff	3378,_control_signal_bitmap	;volatile
 27069                           
 27070                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 27071  014792  0100               	movlb	0	; () banked
 27072  014794  8F6C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27073                           
 27074                           ; BSR set to: 0
 27075                           ;usb_device_cdc.c: 315: }
 27076                           
 27077                           ; BSR set to: 0
 27078                           ;usb_device_cdc.c: 314: break;
 27079                           
 27080                           ;usb_device_cdc.c: 313: default:
 27081                           
 27082                           ;usb_device_cdc.c: 289: break;
 27083  014796  0012               	return	
 27084  014798                     i2l5918:
 27085  014798  010D               	movlb	13	; () banked
 27086  01479A  5131               	movf	49,w,b	;volatile
 27087                           
 27088                           ; Switch size 1, requested type "space"
 27089                           ; Number of cases is 5, Range of values is 0 to 34
 27090                           ; switch strategies available:
 27091                           ; Name         Instructions Cycles
 27092                           ; simple_byte           16     9 (average)
 27093                           ;	Chosen strategy is simple_byte
 27094  01479C  0A00               	xorlw	0	; case 0
 27095  01479E  B4D8               	btfsc	status,2,c
 27096  0147A0  D7B8               	goto	i2l5894
 27097  0147A2  0A01               	xorlw	1	; case 1
 27098  0147A4  B4D8               	btfsc	status,2,c
 27099  0147A6  D7C5               	goto	i2l5902
 27100  0147A8  0A21               	xorlw	33	; case 32
 27101  0147AA  B4D8               	btfsc	status,2,c
 27102  0147AC  D7CB               	goto	i2l1443
 27103  0147AE  0A01               	xorlw	1	; case 33
 27104  0147B0  B4D8               	btfsc	status,2,c
 27105  0147B2  D7DE               	goto	i2l5910
 27106  0147B4  0A03               	xorlw	3	; case 34
 27107  0147B6  A4D8               	btfss	status,2,c
 27108  0147B8  0012               	return	
 27109  0147BA  D7E9               	goto	i2l1445
 27110  0147BC                     __end_of_USBCheckCDCRequest:
 27111                           	opt stack 0
 27112                           pclatu	equ	0xFFB
 27113                           pclath	equ	0xFFA
 27114                           tblptru	equ	0xFF8
 27115                           tblptrh	equ	0xFF7
 27116                           tblptrl	equ	0xFF6
 27117                           tablat	equ	0xFF5
 27118                           prodh	equ	0xFF4
 27119                           prodl	equ	0xFF3
 27120                           intcon	equ	0xFF2
 27121                           intcon2	equ	0xFF1
 27122                           postinc0	equ	0xFEE
 27123                           fsr0h	equ	0xFEA
 27124                           fsr0l	equ	0xFE9
 27125                           wreg	equ	0xFE8
 27126                           indf1	equ	0xFE7
 27127                           postinc1	equ	0xFE6
 27128                           postdec1	equ	0xFE5
 27129                           fsr1h	equ	0xFE2
 27130                           fsr1l	equ	0xFE1
 27131                           indf2	equ	0xFDF
 27132                           postinc2	equ	0xFDE
 27133                           postdec2	equ	0xFDD
 27134                           plusw2	equ	0xFDB
 27135                           fsr2h	equ	0xFDA
 27136                           fsr2l	equ	0xFD9
 27137                           status	equ	0xFD8
 27138                           
 27139 ;; *************** function _CDCInitEP *****************
 27140 ;; Defined at:
 27141 ;;		line 351 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 27142 ;; Parameters:    Size  Location     Type
 27143 ;;		None
 27144 ;; Auto vars:     Size  Location     Type
 27145 ;;		None
 27146 ;; Return value:  Size  Location     Type
 27147 ;;		None               void
 27148 ;; Registers used:
 27149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27150 ;; Tracked objects:
 27151 ;;		On entry : 0/0
 27152 ;;		On exit  : 0/0
 27153 ;;		Unchanged: 0/0
 27154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27159 ;;Total ram usage:        0 bytes
 27160 ;; Hardware stack levels used:    1
 27161 ;; Hardware stack levels required when called:    2
 27162 ;; This function calls:
 27163 ;;		_USBEnableEndpoint
 27164 ;;		i2_USBTransferOnePacket
 27165 ;; This function is called by:
 27166 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27167 ;; This function uses a non-reentrant model
 27168 ;;
 27169                           
 27170                           	psect	text123
 27171  015E2C                     __ptext123:
 27172                           	opt stack 0
 27173  015E2C                     _CDCInitEP:
 27174                           	opt stack 16
 27175                           
 27176                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 27177                           
 27178                           ;incstack = 0
 27179  015E2C  0E00               	movlw	0
 27180  015E2E  0101               	movlb	1	; () banked
 27181  015E30  6FF8               	movwf	_line_coding& (0+255),b
 27182  015E32  0E4B               	movlw	75
 27183  015E34  6FF9               	movwf	(_line_coding+1)& (0+255),b
 27184  015E36  0E00               	movlw	0
 27185  015E38  6FFA               	movwf	(_line_coding+2)& (0+255),b
 27186  015E3A  0E00               	movlw	0
 27187  015E3C  6FFB               	movwf	(_line_coding+3)& (0+255),b
 27188                           
 27189                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 27190  015E3E  0E00               	movlw	0
 27191  015E40  0101               	movlb	1	; () banked
 27192  015E42  6FFC               	movwf	(_line_coding+4)& (0+255),b
 27193                           
 27194                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 27195  015E44  0E00               	movlw	0
 27196  015E46  0101               	movlb	1	; () banked
 27197  015E48  6FFD               	movwf	(_line_coding+5)& (0+255),b
 27198                           
 27199                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 27200  015E4A  0E08               	movlw	8
 27201  015E4C  0101               	movlb	1	; () banked
 27202  015E4E  6FFE               	movwf	(_line_coding+6)& (0+255),b
 27203                           
 27204                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 27205  015E50  0E00               	movlw	0
 27206  015E52  0100               	movlb	0	; () banked
 27207  015E54  6F92               	movwf	_cdc_rx_len& (0+255),b
 27208                           
 27209                           ; BSR set to: 0
 27210                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 27211  015E56  0E1A               	movlw	26
 27212  015E58  6E09               	movwf	USBEnableEndpoint@options,c
 27213  015E5A  0E01               	movlw	1
 27214  015E5C  EC43  F0B2         	call	_USBEnableEndpoint
 27215                           
 27216                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 27217  015E60  0E1E               	movlw	30
 27218  015E62  6E09               	movwf	USBEnableEndpoint@options,c
 27219  015E64  0E02               	movlw	2
 27220  015E66  EC43  F0B2         	call	_USBEnableEndpoint
 27221                           
 27222                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 27223  015E6A  0E00               	movlw	0
 27224  015E6C  6E01               	movwf	i2USBTransferOnePacket@dir,c
 27225  015E6E  0E45               	movlw	low _cdc_data_rx
 27226  015E70  6E02               	movwf	i2USBTransferOnePacket@data,c
 27227  015E72  0E03               	movlw	high _cdc_data_rx
 27228  015E74  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 27229  015E76  0E40               	movlw	64
 27230  015E78  6E04               	movwf	i2USBTransferOnePacket@len,c
 27231  015E7A  0E02               	movlw	2
 27232  015E7C  EC83  F0A8         	call	i2_USBTransferOnePacket
 27233  015E80  C001  F089         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 27234  015E84  C002  F08A         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 27235                           
 27236                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 27237  015E88  0E00               	movlw	0
 27238  015E8A  0100               	movlb	0	; () banked
 27239  015E8C  6F87               	movwf	_CDCDataInHandle& (0+255),b
 27240  015E8E  0E00               	movlw	0
 27241  015E90  0100               	movlb	0	; () banked
 27242  015E92  6F88               	movwf	(_CDCDataInHandle+1)& (0+255),b
 27243                           
 27244                           ; BSR set to: 0
 27245                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 27246  015E94  0E00               	movlw	0
 27247  015E96  0100               	movlb	0	; () banked
 27248  015E98  6F93               	movwf	_cdc_trf_state& (0+255),b
 27249                           
 27250                           ; BSR set to: 0
 27251  015E9A  0012               	return		;funcret
 27252  015E9C                     __end_of_CDCInitEP:
 27253                           	opt stack 0
 27254                           pclatu	equ	0xFFB
 27255                           pclath	equ	0xFFA
 27256                           tblptru	equ	0xFF8
 27257                           tblptrh	equ	0xFF7
 27258                           tblptrl	equ	0xFF6
 27259                           tablat	equ	0xFF5
 27260                           prodh	equ	0xFF4
 27261                           prodl	equ	0xFF3
 27262                           intcon	equ	0xFF2
 27263                           intcon2	equ	0xFF1
 27264                           postinc0	equ	0xFEE
 27265                           fsr0h	equ	0xFEA
 27266                           fsr0l	equ	0xFE9
 27267                           wreg	equ	0xFE8
 27268                           indf1	equ	0xFE7
 27269                           postinc1	equ	0xFE6
 27270                           postdec1	equ	0xFE5
 27271                           fsr1h	equ	0xFE2
 27272                           fsr1l	equ	0xFE1
 27273                           indf2	equ	0xFDF
 27274                           postinc2	equ	0xFDE
 27275                           postdec2	equ	0xFDD
 27276                           plusw2	equ	0xFDB
 27277                           fsr2h	equ	0xFDA
 27278                           fsr2l	equ	0xFD9
 27279                           status	equ	0xFD8
 27280                           
 27281 ;; *************** function i2_USBTransferOnePacket *****************
 27282 ;; Defined at:
 27283 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 27284 ;; Parameters:    Size  Location     Type
 27285 ;;  ep              1    wreg     unsigned char 
 27286 ;;  dir             1    0[COMRAM] unsigned char 
 27287 ;;  data            2    1[COMRAM] PTR unsigned char 
 27288 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 27289 ;;  len             1    3[COMRAM] unsigned char 
 27290 ;; Auto vars:     Size  Location     Type
 27291 ;;  ep              1    4[COMRAM] unsigned char 
 27292 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 27293 ;;		 -> NULL(0), BDT(48), 
 27294 ;; Return value:  Size  Location     Type
 27295 ;;                  2    0[COMRAM] PTR void 
 27296 ;; Registers used:
 27297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27298 ;; Tracked objects:
 27299 ;;		On entry : 0/0
 27300 ;;		On exit  : 0/0
 27301 ;;		Unchanged: 0/0
 27302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27304 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27307 ;;Total ram usage:        7 bytes
 27308 ;; Hardware stack levels used:    1
 27309 ;; This function calls:
 27310 ;;		Nothing
 27311 ;; This function is called by:
 27312 ;;		_CDCInitEP
 27313 ;; This function uses a non-reentrant model
 27314 ;;
 27315                           
 27316                           	psect	text124
 27317  015106                     __ptext124:
 27318                           	opt stack 0
 27319  015106                     i2_USBTransferOnePacket:
 27320                           	opt stack 17
 27321                           
 27322                           ; BSR set to: 0
 27323                           ;incstack = 0
 27324                           ;i2USBTransferOnePacket@ep stored from wreg
 27325  015106  6E05               	movwf	i2USBTransferOnePacket@ep,c
 27326                           
 27327                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 27328                           ;usb_device.c: 1000: if(dir != 0)
 27329  015108  5001               	movf	i2USBTransferOnePacket@dir,w,c
 27330  01510A  B4D8               	btfsc	status,2,c
 27331  01510C  D007               	goto	i2l5830
 27332                           
 27333                           ;usb_device.c: 1001: {
 27334                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 27335  01510E  5005               	movf	i2USBTransferOnePacket@ep,w,c
 27336  015110  0D02               	mullw	2
 27337  015112  0E6F               	movlw	low _pBDTEntryIn
 27338  015114  24F3               	addwf	prodl,w,c
 27339  015116  6ED9               	movwf	fsr2l,c
 27340  015118  0E00               	movlw	high _pBDTEntryIn
 27341  01511A  D006               	goto	L15
 27342  01511C                     i2l5830:
 27343                           
 27344                           ;usb_device.c: 1005: else
 27345                           ;usb_device.c: 1006: {
 27346                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 27347  01511C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 27348  01511E  0D02               	mullw	2
 27349  015120  0E75               	movlw	low _pBDTEntryOut
 27350  015122  24F3               	addwf	prodl,w,c
 27351  015124  6ED9               	movwf	fsr2l,c
 27352  015126  0E00               	movlw	high _pBDTEntryOut
 27353  015128                     L15:
 27354  015128  20F4               	addwfc	prodh,w,c
 27355  01512A  6EDA               	movwf	fsr2h,c
 27356  01512C  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 27357  015130  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 27358                           
 27359                           ;usb_device.c: 1009: }
 27360                           ;usb_device.c: 1013: if(handle == 0)
 27361  015134  5006               	movf	i2USBTransferOnePacket@handle,w,c
 27362  015136  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 27363  015138  A4D8               	btfss	status,2,c
 27364  01513A  D005               	goto	i2l5838
 27365                           
 27366                           ;usb_device.c: 1014: {
 27367                           ;usb_device.c: 1015: return 0;
 27368  01513C  0E00               	movlw	0
 27369  01513E  6E01               	movwf	?i2_USBTransferOnePacket,c
 27370  015140  0E00               	movlw	0
 27371  015142  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 27372  015144  0012               	return	
 27373  015146                     i2l5838:
 27374                           
 27375                           ;usb_device.c: 1016: }
 27376                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 27377  015146  EE20 F002          	lfsr	2,2
 27378  01514A  5006               	movf	i2USBTransferOnePacket@handle,w,c
 27379  01514C  26D9               	addwf	fsr2l,f,c
 27380  01514E  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 27381  015150  22DA               	addwfc	fsr2h,f,c
 27382  015152  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 27383  015156  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 27384                           
 27385                           ;usb_device.c: 1030: handle->CNT = len;
 27386  01515A  EE20 F001          	lfsr	2,1
 27387  01515E  5006               	movf	i2USBTransferOnePacket@handle,w,c
 27388  015160  26D9               	addwf	fsr2l,f,c
 27389  015162  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 27390  015164  22DA               	addwfc	fsr2h,f,c
 27391  015166  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 27392                           
 27393                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 27394  01516A  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27395  01516E  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27396  015172  0E40               	movlw	64
 27397  015174  16DF               	andwf	indf2,f,c
 27398                           
 27399                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 27400  015176  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27401  01517A  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27402  01517E  0E00               	movlw	0
 27403  015180  86DB               	bsf	plusw2,3,c
 27404                           
 27405                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 27406  015182  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27407  015186  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27408  01518A  0E00               	movlw	0
 27409  01518C  8EDB               	bsf	plusw2,7,c
 27410                           
 27411                           ;usb_device.c: 1036: if(dir != 0)
 27412  01518E  5001               	movf	i2USBTransferOnePacket@dir,w,c
 27413  015190  B4D8               	btfsc	status,2,c
 27414  015192  D007               	goto	i2l5850
 27415                           
 27416                           ;usb_device.c: 1037: {
 27417                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 27418  015194  5005               	movf	i2USBTransferOnePacket@ep,w,c
 27419  015196  0D02               	mullw	2
 27420  015198  0E6F               	movlw	low _pBDTEntryIn
 27421  01519A  24F3               	addwf	prodl,w,c
 27422  01519C  6ED9               	movwf	fsr2l,c
 27423  01519E  0E00               	movlw	high _pBDTEntryIn
 27424  0151A0  D006               	goto	L16
 27425  0151A2                     i2l5850:
 27426                           
 27427                           ;usb_device.c: 1041: else
 27428                           ;usb_device.c: 1042: {
 27429                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 27430  0151A2  5005               	movf	i2USBTransferOnePacket@ep,w,c
 27431  0151A4  0D02               	mullw	2
 27432  0151A6  0E75               	movlw	low _pBDTEntryOut
 27433  0151A8  24F3               	addwf	prodl,w,c
 27434  0151AA  6ED9               	movwf	fsr2l,c
 27435  0151AC  0E00               	movlw	high _pBDTEntryOut
 27436  0151AE                     L16:
 27437  0151AE  20F4               	addwfc	prodh,w,c
 27438  0151B0  6EDA               	movwf	fsr2h,c
 27439  0151B2  0E04               	movlw	4
 27440  0151B4  1ADF               	xorwf	indf2,f,c
 27441                           
 27442                           ;usb_device.c: 1045: }
 27443                           ;usb_device.c: 1046: return (void*)handle;
 27444  0151B6  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 27445  0151BA  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 27446  0151BE  0012               	return	
 27447  0151C0                     __end_ofi2_USBTransferOnePacket:
 27448                           	opt stack 0
 27449                           pclatu	equ	0xFFB
 27450                           pclath	equ	0xFFA
 27451                           tblptru	equ	0xFF8
 27452                           tblptrh	equ	0xFF7
 27453                           tblptrl	equ	0xFF6
 27454                           tablat	equ	0xFF5
 27455                           prodh	equ	0xFF4
 27456                           prodl	equ	0xFF3
 27457                           intcon	equ	0xFF2
 27458                           intcon2	equ	0xFF1
 27459                           postinc0	equ	0xFEE
 27460                           fsr0h	equ	0xFEA
 27461                           fsr0l	equ	0xFE9
 27462                           wreg	equ	0xFE8
 27463                           indf1	equ	0xFE7
 27464                           postinc1	equ	0xFE6
 27465                           postdec1	equ	0xFE5
 27466                           fsr1h	equ	0xFE2
 27467                           fsr1l	equ	0xFE1
 27468                           indf2	equ	0xFDF
 27469                           postinc2	equ	0xFDE
 27470                           postdec2	equ	0xFDD
 27471                           plusw2	equ	0xFDB
 27472                           fsr2h	equ	0xFDA
 27473                           fsr2l	equ	0xFD9
 27474                           status	equ	0xFD8
 27475                           
 27476 ;; *************** function _USBEnableEndpoint *****************
 27477 ;; Defined at:
 27478 ;;		line 878 in file "../My_header/usb_cdc/usb/usb_device.c"
 27479 ;; Parameters:    Size  Location     Type
 27480 ;;  ep              1    wreg     unsigned char 
 27481 ;;  options         1    8[COMRAM] unsigned char 
 27482 ;; Auto vars:     Size  Location     Type
 27483 ;;  ep              1   11[COMRAM] unsigned char 
 27484 ;;  p               2    9[COMRAM] PTR unsigned char 
 27485 ;;		 -> UEP0(1), 
 27486 ;; Return value:  Size  Location     Type
 27487 ;;		None               void
 27488 ;; Registers used:
 27489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27490 ;; Tracked objects:
 27491 ;;		On entry : 0/0
 27492 ;;		On exit  : 0/0
 27493 ;;		Unchanged: 0/0
 27494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27496 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27499 ;;Total ram usage:        4 bytes
 27500 ;; Hardware stack levels used:    1
 27501 ;; Hardware stack levels required when called:    1
 27502 ;; This function calls:
 27503 ;;		_USBConfigureEndpoint
 27504 ;; This function is called by:
 27505 ;;		_CDCInitEP
 27506 ;; This function uses a non-reentrant model
 27507 ;;
 27508                           
 27509                           	psect	text125
 27510  016486                     __ptext125:
 27511                           	opt stack 0
 27512  016486                     _USBEnableEndpoint:
 27513                           	opt stack 16
 27514                           
 27515                           ;incstack = 0
 27516                           ;USBEnableEndpoint@ep stored from wreg
 27517  016486  6E0C               	movwf	USBEnableEndpoint@ep,c
 27518                           
 27519                           ;usb_device.c: 880: unsigned char* p;
 27520                           ;usb_device.c: 884: if(options & 0x04)
 27521  016488  A409               	btfss	USBEnableEndpoint@options,2,c
 27522  01648A  D005               	goto	i2l5818
 27523                           
 27524                           ;usb_device.c: 885: {
 27525                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 27526  01648C  0E00               	movlw	0
 27527  01648E  6E01               	movwf	USBConfigureEndpoint@direction,c
 27528  016490  500C               	movf	USBEnableEndpoint@ep,w,c
 27529  016492  EC0C  F0AC         	call	_USBConfigureEndpoint
 27530  016496                     i2l5818:
 27531                           
 27532                           ;usb_device.c: 887: }
 27533                           ;usb_device.c: 888: if(options & 0x02)
 27534  016496  A209               	btfss	USBEnableEndpoint@options,1,c
 27535  016498  D005               	goto	i2l5822
 27536                           
 27537                           ;usb_device.c: 889: {
 27538                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 27539  01649A  0E01               	movlw	1
 27540  01649C  6E01               	movwf	USBConfigureEndpoint@direction,c
 27541  01649E  500C               	movf	USBEnableEndpoint@ep,w,c
 27542  0164A0  EC0C  F0AC         	call	_USBConfigureEndpoint
 27543  0164A4                     i2l5822:
 27544                           
 27545                           ;usb_device.c: 891: }
 27546                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 27547  0164A4  500C               	movf	USBEnableEndpoint@ep,w,c
 27548  0164A6  0D01               	mullw	1
 27549  0164A8  0E26               	movlw	38
 27550  0164AA  24F3               	addwf	prodl,w,c
 27551  0164AC  6E0A               	movwf	USBEnableEndpoint@p,c
 27552  0164AE  0E0F               	movlw	15
 27553  0164B0  20F4               	addwfc	prodh,w,c
 27554  0164B2  6E0B               	movwf	USBEnableEndpoint@p+1,c
 27555                           
 27556                           ;usb_device.c: 901: *p = options;
 27557  0164B4  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 27558  0164B8  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 27559  0164BC  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 27560  0164C0  0012               	return		;funcret
 27561  0164C2                     __end_of_USBEnableEndpoint:
 27562                           	opt stack 0
 27563                           pclatu	equ	0xFFB
 27564                           pclath	equ	0xFFA
 27565                           tblptru	equ	0xFF8
 27566                           tblptrh	equ	0xFF7
 27567                           tblptrl	equ	0xFF6
 27568                           tablat	equ	0xFF5
 27569                           prodh	equ	0xFF4
 27570                           prodl	equ	0xFF3
 27571                           intcon	equ	0xFF2
 27572                           intcon2	equ	0xFF1
 27573                           postinc0	equ	0xFEE
 27574                           fsr0h	equ	0xFEA
 27575                           fsr0l	equ	0xFE9
 27576                           wreg	equ	0xFE8
 27577                           indf1	equ	0xFE7
 27578                           postinc1	equ	0xFE6
 27579                           postdec1	equ	0xFE5
 27580                           fsr1h	equ	0xFE2
 27581                           fsr1l	equ	0xFE1
 27582                           indf2	equ	0xFDF
 27583                           postinc2	equ	0xFDE
 27584                           postdec2	equ	0xFDD
 27585                           plusw2	equ	0xFDB
 27586                           fsr2h	equ	0xFDA
 27587                           fsr2l	equ	0xFD9
 27588                           status	equ	0xFD8
 27589                           
 27590 ;; *************** function _USBConfigureEndpoint *****************
 27591 ;; Defined at:
 27592 ;;		line 1543 in file "../My_header/usb_cdc/usb/usb_device.c"
 27593 ;; Parameters:    Size  Location     Type
 27594 ;;  EPNum           1    wreg     unsigned char 
 27595 ;;  direction       1    0[COMRAM] unsigned char 
 27596 ;; Auto vars:     Size  Location     Type
 27597 ;;  EPNum           1    5[COMRAM] unsigned char 
 27598 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 27599 ;;		 -> BDT(48), 
 27600 ;; Return value:  Size  Location     Type
 27601 ;;		None               void
 27602 ;; Registers used:
 27603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27604 ;; Tracked objects:
 27605 ;;		On entry : 0/0
 27606 ;;		On exit  : 0/0
 27607 ;;		Unchanged: 0/0
 27608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27609 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27610 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27611 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27612 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27613 ;;Total ram usage:        8 bytes
 27614 ;; Hardware stack levels used:    1
 27615 ;; This function calls:
 27616 ;;		Nothing
 27617 ;; This function is called by:
 27618 ;;		_USBEnableEndpoint
 27619 ;; This function uses a non-reentrant model
 27620 ;;
 27621                           
 27622                           	psect	text126
 27623  015818                     __ptext126:
 27624                           	opt stack 0
 27625  015818                     _USBConfigureEndpoint:
 27626                           	opt stack 16
 27627                           
 27628                           ;incstack = 0
 27629                           ;USBConfigureEndpoint@EPNum stored from wreg
 27630  015818  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 27631                           
 27632                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 27633                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 27634  01581A  0E00               	movlw	0
 27635  01581C  6E07               	movwf	USBConfigureEndpoint@handle,c
 27636  01581E  0E0D               	movlw	13
 27637  015820  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 27638                           
 27639                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 27640  015822  5001               	movf	USBConfigureEndpoint@direction,w,c
 27641  015824  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 27642  015826  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 27643  015828  90D8               	bcf	status,0,c
 27644  01582A  3602               	rlcf	??_USBConfigureEndpoint,f,c
 27645  01582C  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 27646  01582E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 27647  015830  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 27648  015832  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 27649  015834  90D8               	bcf	status,0,c
 27650  015836  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 27651  015838  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 27652  01583A  90D8               	bcf	status,0,c
 27653  01583C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 27654  01583E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 27655  015840  5002               	movf	??_USBConfigureEndpoint,w,c
 27656  015842  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 27657  015844  5003               	movf	??_USBConfigureEndpoint+1,w,c
 27658  015846  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 27659  015848  90D8               	bcf	status,0,c
 27660  01584A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 27661  01584C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 27662  01584E  90D8               	bcf	status,0,c
 27663  015850  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 27664  015852  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 27665  015854  5004               	movf	??_USBConfigureEndpoint+2,w,c
 27666  015856  2607               	addwf	USBConfigureEndpoint@handle,f,c
 27667  015858  5005               	movf	??_USBConfigureEndpoint+3,w,c
 27668  01585A  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 27669                           
 27670                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 27671  01585C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 27672  015860  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 27673  015864  9EDF               	bcf	indf2,7,c
 27674                           
 27675                           ;usb_device.c: 1557: if(direction == 0)
 27676  015866  5001               	movf	USBConfigureEndpoint@direction,w,c
 27677  015868  A4D8               	btfss	status,2,c
 27678  01586A  D007               	goto	i2l5808
 27679                           
 27680                           ;usb_device.c: 1558: {
 27681                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 27682  01586C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 27683  01586E  0D02               	mullw	2
 27684  015870  0E75               	movlw	low _pBDTEntryOut
 27685  015872  24F3               	addwf	prodl,w,c
 27686  015874  6ED9               	movwf	fsr2l,c
 27687  015876  0E00               	movlw	high _pBDTEntryOut
 27688  015878  D006               	goto	L17
 27689  01587A                     i2l5808:
 27690                           
 27691                           ;usb_device.c: 1561: else
 27692                           ;usb_device.c: 1562: {
 27693                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 27694  01587A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 27695  01587C  0D02               	mullw	2
 27696  01587E  0E6F               	movlw	low _pBDTEntryIn
 27697  015880  24F3               	addwf	prodl,w,c
 27698  015882  6ED9               	movwf	fsr2l,c
 27699  015884  0E00               	movlw	high _pBDTEntryIn
 27700  015886                     L17:
 27701  015886  20F4               	addwfc	prodh,w,c
 27702  015888  6EDA               	movwf	fsr2h,c
 27703  01588A  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 27704  01588E  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 27705                           
 27706                           ;usb_device.c: 1564: }
 27707                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 27708  015892  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 27709  015896  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 27710  01589A  9CDF               	bcf	indf2,6,c
 27711                           
 27712                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 27713  01589C  EE20 F004          	lfsr	2,4
 27714  0158A0  5007               	movf	USBConfigureEndpoint@handle,w,c
 27715  0158A2  26D9               	addwf	fsr2l,f,c
 27716  0158A4  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 27717  0158A6  22DA               	addwfc	fsr2h,f,c
 27718  0158A8  8CDF               	bsf	indf2,6,c
 27719  0158AA  0012               	return		;funcret
 27720  0158AC                     __end_of_USBConfigureEndpoint:
 27721                           	opt stack 0
 27722                           pclatu	equ	0xFFB
 27723                           pclath	equ	0xFFA
 27724                           tblptru	equ	0xFF8
 27725                           tblptrh	equ	0xFF7
 27726                           tblptrl	equ	0xFF6
 27727                           tablat	equ	0xFF5
 27728                           prodh	equ	0xFF4
 27729                           prodl	equ	0xFF3
 27730                           intcon	equ	0xFF2
 27731                           intcon2	equ	0xFF1
 27732                           postinc0	equ	0xFEE
 27733                           fsr0h	equ	0xFEA
 27734                           fsr0l	equ	0xFE9
 27735                           wreg	equ	0xFE8
 27736                           indf1	equ	0xFE7
 27737                           postinc1	equ	0xFE6
 27738                           postdec1	equ	0xFE5
 27739                           fsr1h	equ	0xFE2
 27740                           fsr1l	equ	0xFE1
 27741                           indf2	equ	0xFDF
 27742                           postinc2	equ	0xFDE
 27743                           postdec2	equ	0xFDD
 27744                           plusw2	equ	0xFDB
 27745                           fsr2h	equ	0xFDA
 27746                           fsr2l	equ	0xFD9
 27747                           status	equ	0xFD8
 27748                           
 27749 ;; *************** function _USBCtrlTrfOutHandler *****************
 27750 ;; Defined at:
 27751 ;;		line 2541 in file "../My_header/usb_cdc/usb/usb_device.c"
 27752 ;; Parameters:    Size  Location     Type
 27753 ;;		None
 27754 ;; Auto vars:     Size  Location     Type
 27755 ;;		None
 27756 ;; Return value:  Size  Location     Type
 27757 ;;		None               void
 27758 ;; Registers used:
 27759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27760 ;; Tracked objects:
 27761 ;;		On entry : 0/0
 27762 ;;		On exit  : 0/0
 27763 ;;		Unchanged: 0/0
 27764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27769 ;;Total ram usage:        0 bytes
 27770 ;; Hardware stack levels used:    1
 27771 ;; Hardware stack levels required when called:    2
 27772 ;; This function calls:
 27773 ;;		_USBCtrlTrfRxService
 27774 ;; This function is called by:
 27775 ;;		_USBCtrlEPService
 27776 ;; This function uses a non-reentrant model
 27777 ;;
 27778                           
 27779                           	psect	text127
 27780  016084                     __ptext127:
 27781                           	opt stack 0
 27782  016084                     _USBCtrlTrfOutHandler:
 27783                           	opt stack 16
 27784                           
 27785                           ;usb_device.c: 2543: if(controlTransferState == 2)
 27786                           
 27787                           ;incstack = 0
 27788  016084  0E02               	movlw	2
 27789  016086  1849               	xorwf	_controlTransferState,w,c	;volatile
 27790  016088  A4D8               	btfss	status,2,c
 27791  01608A  D003               	goto	i2l6934
 27792                           
 27793                           ;usb_device.c: 2544: {
 27794                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 27795  01608C  EC5A  F09D         	call	_USBCtrlTrfRxService	;wreg free
 27796                           
 27797                           ;usb_device.c: 2546: }
 27798  016090  0012               	return	
 27799  016092                     i2l6934:
 27800                           
 27801                           ;usb_device.c: 2547: else
 27802                           ;usb_device.c: 2548: {
 27803                           ;usb_device.c: 2551: controlTransferState = 0;
 27804  016092  0E00               	movlw	0
 27805  016094  6E49               	movwf	_controlTransferState,c	;volatile
 27806                           
 27807                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 27808  016096  5040               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 27809  016098  A4D8               	btfss	status,2,c
 27810  01609A  D01F               	goto	i2l6942
 27811                           
 27812                           ;usb_device.c: 2559: {
 27813                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 27814  01609C  EE20 F001          	lfsr	2,1
 27815  0160A0  5039               	movf	_pBDTEntryEP0OutNext,w,c
 27816  0160A2  26D9               	addwf	fsr2l,f,c
 27817  0160A4  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 27818  0160A6  22DA               	addwfc	fsr2h,f,c
 27819  0160A8  0E08               	movlw	8
 27820  0160AA  6EDF               	movwf	indf2,c
 27821                           
 27822                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27823  0160AC  EE20 F002          	lfsr	2,2
 27824  0160B0  5039               	movf	_pBDTEntryEP0OutNext,w,c
 27825  0160B2  26D9               	addwf	fsr2l,f,c
 27826  0160B4  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 27827  0160B6  22DA               	addwfc	fsr2h,f,c
 27828  0160B8  0E30               	movlw	48
 27829  0160BA  6EDE               	movwf	postinc2,c
 27830  0160BC  0E0D               	movlw	13
 27831  0160BE  6EDD               	movwf	postdec2,c
 27832                           
 27833                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27834  0160C0  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27835  0160C4  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27836  0160C8  0E0C               	movlw	12
 27837  0160CA  6EDF               	movwf	indf2,c
 27838                           
 27839                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27840  0160CC  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27841  0160D0  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27842  0160D4  0E00               	movlw	0
 27843  0160D6  8EDB               	bsf	plusw2,7,c
 27844                           
 27845                           ;usb_device.c: 2564: }
 27846  0160D8  0012               	return	
 27847  0160DA                     i2l6942:
 27848                           
 27849                           ;usb_device.c: 2565: else
 27850                           ;usb_device.c: 2566: {
 27851                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 27852  0160DA  0E00               	movlw	0
 27853  0160DC  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 27854  0160DE  0012               	return	
 27855  0160E0                     __end_of_USBCtrlTrfOutHandler:
 27856                           	opt stack 0
 27857                           pclatu	equ	0xFFB
 27858                           pclath	equ	0xFFA
 27859                           tblptru	equ	0xFF8
 27860                           tblptrh	equ	0xFF7
 27861                           tblptrl	equ	0xFF6
 27862                           tablat	equ	0xFF5
 27863                           prodh	equ	0xFF4
 27864                           prodl	equ	0xFF3
 27865                           intcon	equ	0xFF2
 27866                           intcon2	equ	0xFF1
 27867                           postinc0	equ	0xFEE
 27868                           fsr0h	equ	0xFEA
 27869                           fsr0l	equ	0xFE9
 27870                           wreg	equ	0xFE8
 27871                           indf1	equ	0xFE7
 27872                           postinc1	equ	0xFE6
 27873                           postdec1	equ	0xFE5
 27874                           fsr1h	equ	0xFE2
 27875                           fsr1l	equ	0xFE1
 27876                           indf2	equ	0xFDF
 27877                           postinc2	equ	0xFDE
 27878                           postdec2	equ	0xFDD
 27879                           plusw2	equ	0xFDB
 27880                           fsr2h	equ	0xFDA
 27881                           fsr2l	equ	0xFD9
 27882                           status	equ	0xFD8
 27883                           
 27884 ;; *************** function _USBCtrlTrfRxService *****************
 27885 ;; Defined at:
 27886 ;;		line 1852 in file "../My_header/usb_cdc/usb/usb_device.c"
 27887 ;; Parameters:    Size  Location     Type
 27888 ;;		None
 27889 ;; Auto vars:     Size  Location     Type
 27890 ;;  byteToRead      1    1[COMRAM] unsigned char 
 27891 ;;  i               1    0[COMRAM] unsigned char 
 27892 ;; Return value:  Size  Location     Type
 27893 ;;		None               void
 27894 ;; Registers used:
 27895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27896 ;; Tracked objects:
 27897 ;;		On entry : 0/0
 27898 ;;		On exit  : 0/0
 27899 ;;		Unchanged: 0/0
 27900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27905 ;;Total ram usage:        2 bytes
 27906 ;; Hardware stack levels used:    1
 27907 ;; Hardware stack levels required when called:    1
 27908 ;; This function calls:
 27909 ;;		_USBCtrlEPAllowStatusStage
 27910 ;; This function is called by:
 27911 ;;		_USBCtrlTrfOutHandler
 27912 ;; This function uses a non-reentrant model
 27913 ;;
 27914                           
 27915                           	psect	text128
 27916  013AB4                     __ptext128:
 27917                           	opt stack 0
 27918  013AB4                     _USBCtrlTrfRxService:
 27919                           	opt stack 16
 27920                           
 27921                           ;usb_device.c: 1854: uint8_t byteToRead;
 27922                           ;usb_device.c: 1855: uint8_t i;
 27923                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 27924                           
 27925                           ;incstack = 0
 27926  013AB4  EE20 F001          	lfsr	2,1
 27927  013AB8  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 27928  013ABA  26D9               	addwf	fsr2l,f,c
 27929  013ABC  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27930  013ABE  22DA               	addwfc	fsr2h,f,c
 27931  013AC0  50DF               	movf	indf2,w,c
 27932  013AC2  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 27933                           
 27934                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 27935  013AC4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 27936  013AC6  0100               	movlb	0	; () banked
 27937  013AC8  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 27938  013ACA  0E00               	movlw	0
 27939  013ACC  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 27940  013ACE  A0D8               	btfss	status,0,c
 27941                           
 27942                           ; BSR set to: 0
 27943                           ;usb_device.c: 1866: {
 27944                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 27945  013AD0  C064  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 27946                           
 27947                           ; BSR set to: 0
 27948                           ;usb_device.c: 1868: }
 27949                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 27950                           
 27951                           ; BSR set to: 0
 27952  013AD4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 27953  013AD6  0100               	movlb	0	; () banked
 27954  013AD8  5F64               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 27955  013ADA  0E00               	movlw	0
 27956  013ADC  5B65               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 27957                           
 27958                           ; BSR set to: 0
 27959                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 27960  013ADE  0E00               	movlw	0
 27961  013AE0  6E01               	movwf	USBCtrlTrfRxService@i,c
 27962  013AE2  D012               	goto	i2l6686
 27963  013AE4                     i2l6680:
 27964                           
 27965                           ; BSR set to: 0
 27966                           ;usb_device.c: 1875: {
 27967                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 27968  013AE4  5001               	movf	USBCtrlTrfRxService@i,w,c
 27969  013AE6  0D01               	mullw	1
 27970  013AE8  0E38               	movlw	56
 27971  013AEA  24F3               	addwf	prodl,w,c
 27972  013AEC  6ED9               	movwf	fsr2l,c
 27973  013AEE  0E0D               	movlw	13
 27974  013AF0  20F4               	addwfc	prodh,w,c
 27975  013AF2  6EDA               	movwf	fsr2h,c
 27976  013AF4  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
 27977  013AF8  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 27978  013AFC  CFDF FFE7          	movff	indf2,indf1
 27979                           
 27980                           ; BSR set to: 0
 27981  013B00  0100               	movlb	0	; () banked
 27982  013B02  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
 27983  013B04  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 27984                           
 27985                           ; BSR set to: 0
 27986  013B06  2A01               	incf	USBCtrlTrfRxService@i,f,c
 27987  013B08                     i2l6686:
 27988                           
 27989                           ; BSR set to: 0
 27990  013B08  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 27991  013B0A  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 27992  013B0C  A0D8               	btfss	status,0,c
 27993  013B0E  D7EA               	goto	i2l6680
 27994                           
 27995                           ; BSR set to: 0
 27996                           ;usb_device.c: 1877: }
 27997                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 27998                           
 27999                           ; BSR set to: 0
 28000  013B10  0100               	movlb	0	; () banked
 28001  013B12  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 28002  013B14  0100               	movlb	0	; () banked
 28003  013B16  1165               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 28004  013B18  B4D8               	btfsc	status,2,c
 28005  013B1A  D032               	goto	i2l6702
 28006                           
 28007                           ; BSR set to: 0
 28008                           ;usb_device.c: 1882: {
 28009                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 28010  013B1C  EE20 F001          	lfsr	2,1
 28011  013B20  5039               	movf	_pBDTEntryEP0OutNext,w,c
 28012  013B22  26D9               	addwf	fsr2l,f,c
 28013  013B24  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 28014  013B26  22DA               	addwfc	fsr2h,f,c
 28015  013B28  0E08               	movlw	8
 28016  013B2A  6EDF               	movwf	indf2,c
 28017                           
 28018                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28019  013B2C  EE20 F002          	lfsr	2,2
 28020  013B30  5039               	movf	_pBDTEntryEP0OutNext,w,c
 28021  013B32  26D9               	addwf	fsr2l,f,c
 28022  013B34  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 28023  013B36  22DA               	addwfc	fsr2h,f,c
 28024  013B38  0E38               	movlw	56
 28025  013B3A  6EDE               	movwf	postinc2,c
 28026  013B3C  0E0D               	movlw	13
 28027  013B3E  6EDD               	movwf	postdec2,c
 28028                           
 28029                           ; BSR set to: 0
 28030                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28031  013B40  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28032  013B44  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28033  013B48  BCDF               	btfsc	indf2,6,c
 28034  013B4A  D00D               	goto	i2l6698
 28035                           
 28036                           ; BSR set to: 0
 28037                           ;usb_device.c: 1886: {
 28038                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28039  013B4C  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28040  013B50  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28041  013B54  0E48               	movlw	72
 28042  013B56  6EDF               	movwf	indf2,c
 28043                           
 28044                           ; BSR set to: 0
 28045                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28046  013B58  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28047  013B5C  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28048  013B60  0E00               	movlw	0
 28049  013B62  8EDB               	bsf	plusw2,7,c
 28050                           
 28051                           ;usb_device.c: 1889: }
 28052  013B64  0012               	return	
 28053  013B66                     i2l6698:
 28054                           
 28055                           ; BSR set to: 0
 28056                           ;usb_device.c: 1890: else
 28057                           ;usb_device.c: 1891: {
 28058                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 28059  013B66  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28060  013B6A  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28061  013B6E  0E08               	movlw	8
 28062  013B70  6EDF               	movwf	indf2,c
 28063                           
 28064                           ; BSR set to: 0
 28065                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28066  013B72  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28067  013B76  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28068  013B7A  0E00               	movlw	0
 28069  013B7C  8EDB               	bsf	plusw2,7,c
 28070                           
 28071                           ; BSR set to: 0
 28072                           ;usb_device.c: 1894: }
 28073                           ;usb_device.c: 1895: }
 28074  013B7E  0012               	return	
 28075  013B80                     i2l6702:
 28076                           
 28077                           ; BSR set to: 0
 28078                           ;usb_device.c: 1896: else
 28079                           ;usb_device.c: 1897: {
 28080                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 28081  013B80  EE20 F001          	lfsr	2,1
 28082  013B84  5039               	movf	_pBDTEntryEP0OutNext,w,c
 28083  013B86  26D9               	addwf	fsr2l,f,c
 28084  013B88  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 28085  013B8A  22DA               	addwfc	fsr2h,f,c
 28086  013B8C  0E08               	movlw	8
 28087  013B8E  6EDF               	movwf	indf2,c
 28088                           
 28089                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28090  013B90  EE20 F002          	lfsr	2,2
 28091  013B94  5039               	movf	_pBDTEntryEP0OutNext,w,c
 28092  013B96  26D9               	addwf	fsr2l,f,c
 28093  013B98  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 28094  013B9A  22DA               	addwfc	fsr2h,f,c
 28095  013B9C  0E30               	movlw	48
 28096  013B9E  6EDE               	movwf	postinc2,c
 28097  013BA0  0E0D               	movlw	13
 28098  013BA2  6EDD               	movwf	postdec2,c
 28099                           
 28100                           ; BSR set to: 0
 28101                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28102  013BA4  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28103  013BA8  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28104  013BAC  0E04               	movlw	4
 28105  013BAE  6EDF               	movwf	indf2,c
 28106                           
 28107                           ; BSR set to: 0
 28108                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28109  013BB0  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28110  013BB4  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28111  013BB8  0E00               	movlw	0
 28112  013BBA  8EDB               	bsf	plusw2,7,c
 28113                           
 28114                           ; BSR set to: 0
 28115                           ;usb_device.c: 1926: }
 28116                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 28117                           
 28118                           ; BSR set to: 0
 28119                           ;usb_device.c: 1915: {
 28120                           ;usb_device.c: 1921: outPipes[0].pFunc();
 28121  013BBC  0100               	movlb	0	; () banked
 28122  013BBE  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 28123                           
 28124                           ; BSR set to: 0
 28125                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 28126  013BC0  5044               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28127  013BC2  A4D8               	btfss	status,2,c
 28128  013BC4  0012               	return	
 28129                           
 28130                           ; BSR set to: 0
 28131                           ;usb_device.c: 1942: {
 28132                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 28133  013BC6  ECE7  F0A5         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28134  013BCA  0012               	return	
 28135  013BCC                     __end_of_USBCtrlTrfRxService:
 28136                           	opt stack 0
 28137                           pclatu	equ	0xFFB
 28138                           pclath	equ	0xFFA
 28139                           tblptru	equ	0xFF8
 28140                           tblptrh	equ	0xFF7
 28141                           tblptrl	equ	0xFF6
 28142                           tablat	equ	0xFF5
 28143                           prodh	equ	0xFF4
 28144                           prodl	equ	0xFF3
 28145                           intcon	equ	0xFF2
 28146                           intcon2	equ	0xFF1
 28147                           postinc0	equ	0xFEE
 28148                           fsr0h	equ	0xFEA
 28149                           fsr0l	equ	0xFE9
 28150                           wreg	equ	0xFE8
 28151                           indf1	equ	0xFE7
 28152                           postinc1	equ	0xFE6
 28153                           postdec1	equ	0xFE5
 28154                           fsr1h	equ	0xFE2
 28155                           fsr1l	equ	0xFE1
 28156                           indf2	equ	0xFDF
 28157                           postinc2	equ	0xFDE
 28158                           postdec2	equ	0xFDD
 28159                           plusw2	equ	0xFDB
 28160                           fsr2h	equ	0xFDA
 28161                           fsr2l	equ	0xFD9
 28162                           status	equ	0xFD8
 28163                           
 28164 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 28165 ;; Defined at:
 28166 ;;		line 1416 in file "../My_header/usb_cdc/usb/usb_device.c"
 28167 ;; Parameters:    Size  Location     Type
 28168 ;;		None
 28169 ;; Auto vars:     Size  Location     Type
 28170 ;;		None
 28171 ;; Return value:  Size  Location     Type
 28172 ;;		None               void
 28173 ;; Registers used:
 28174 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28175 ;; Tracked objects:
 28176 ;;		On entry : 0/0
 28177 ;;		On exit  : 0/0
 28178 ;;		Unchanged: 0/0
 28179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28184 ;;Total ram usage:        0 bytes
 28185 ;; Hardware stack levels used:    1
 28186 ;; This function calls:
 28187 ;;		Nothing
 28188 ;; This function is called by:
 28189 ;;		_USBDeviceTasks
 28190 ;;		_USBCtrlEPServiceComplete
 28191 ;;		_USBCtrlTrfRxService
 28192 ;; This function uses a non-reentrant model
 28193 ;;
 28194                           
 28195                           	psect	text129
 28196  014BCE                     __ptext129:
 28197                           	opt stack 0
 28198  014BCE                     _USBCtrlEPAllowStatusStage:
 28199                           	opt stack 16
 28200                           
 28201                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 28202                           
 28203                           ;incstack = 0
 28204  014BCE  5046               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 28205  014BD0  A4D8               	btfss	status,2,c
 28206  014BD2  0012               	return	
 28207                           
 28208                           ;usb_device.c: 1424: {
 28209                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 28210  014BD4  0E01               	movlw	1
 28211  014BD6  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28212                           
 28213                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 28214  014BD8  5047               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 28215  014BDA  A4D8               	btfss	status,2,c
 28216  014BDC  0012               	return	
 28217                           
 28218                           ;usb_device.c: 1427: {
 28219                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 28220  014BDE  0E01               	movlw	1
 28221  014BE0  6E47               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28222                           
 28223                           ;usb_device.c: 1432: if(controlTransferState == 2)
 28224  014BE2  0E02               	movlw	2
 28225  014BE4  1849               	xorwf	_controlTransferState,w,c	;volatile
 28226  014BE6  A4D8               	btfss	status,2,c
 28227  014BE8  D016               	goto	i2l6240
 28228                           
 28229                           ;usb_device.c: 1433: {
 28230                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 28231  014BEA  0100               	movlb	0	; () banked
 28232  014BEC  EE20 F001          	lfsr	2,1
 28233  014BF0  516F               	movf	_pBDTEntryIn& (0+255),w,b
 28234  014BF2  26D9               	addwf	fsr2l,f,c
 28235  014BF4  5170               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28236  014BF6  22DA               	addwfc	fsr2h,f,c
 28237  014BF8  0E00               	movlw	0
 28238  014BFA  6EDF               	movwf	indf2,c
 28239                           
 28240                           ; BSR set to: 0
 28241                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28242  014BFC  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28243  014C00  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28244  014C04  0E48               	movlw	72
 28245  014C06  6EDF               	movwf	indf2,c
 28246                           
 28247                           ; BSR set to: 0
 28248                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28249  014C08  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28250  014C0C  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28251  014C10  0E00               	movlw	0
 28252  014C12  8EDB               	bsf	plusw2,7,c
 28253                           
 28254                           ;usb_device.c: 1437: }
 28255  014C14  0012               	return	
 28256  014C16                     i2l6240:
 28257                           
 28258                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 28259  014C16  0449               	decf	_controlTransferState,w,c	;volatile
 28260  014C18  A4D8               	btfss	status,2,c
 28261  014C1A  0012               	return	
 28262                           
 28263                           ;usb_device.c: 1439: {
 28264                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 28265  014C1C  0E00               	movlw	0
 28266  014C1E  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28267                           
 28268                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 28269  014C20  EE20 F001          	lfsr	2,1
 28270  014C24  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 28271  014C26  26D9               	addwf	fsr2l,f,c
 28272  014C28  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28273  014C2A  22DA               	addwfc	fsr2h,f,c
 28274  014C2C  0E08               	movlw	8
 28275  014C2E  6EDF               	movwf	indf2,c
 28276                           
 28277                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28278  014C30  EE20 F002          	lfsr	2,2
 28279  014C34  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 28280  014C36  26D9               	addwf	fsr2l,f,c
 28281  014C38  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28282  014C3A  22DA               	addwfc	fsr2h,f,c
 28283  014C3C  0E30               	movlw	48
 28284  014C3E  6EDE               	movwf	postinc2,c
 28285  014C40  0E0D               	movlw	13
 28286  014C42  6EDD               	movwf	postdec2,c
 28287                           
 28288                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 28289  014C44  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28290  014C48  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28291  014C4C  0E04               	movlw	4
 28292  014C4E  6EDF               	movwf	indf2,c
 28293                           
 28294                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 28295  014C50  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28296  014C54  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28297  014C58  0E00               	movlw	0
 28298  014C5A  8EDB               	bsf	plusw2,7,c
 28299                           
 28300                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 28301  014C5C  0E01               	movlw	1
 28302  014C5E  6E40               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28303                           
 28304                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 28305  014C60  EE20 F001          	lfsr	2,1
 28306  014C64  5039               	movf	_pBDTEntryEP0OutNext,w,c
 28307  014C66  26D9               	addwf	fsr2l,f,c
 28308  014C68  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 28309  014C6A  22DA               	addwfc	fsr2h,f,c
 28310  014C6C  0E08               	movlw	8
 28311  014C6E  6EDF               	movwf	indf2,c
 28312                           
 28313                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28314  014C70  EE20 F002          	lfsr	2,2
 28315  014C74  5039               	movf	_pBDTEntryEP0OutNext,w,c
 28316  014C76  26D9               	addwf	fsr2l,f,c
 28317  014C78  503A               	movf	_pBDTEntryEP0OutNext+1,w,c
 28318  014C7A  22DA               	addwfc	fsr2h,f,c
 28319  014C7C  0E30               	movlw	48
 28320  014C7E  6EDE               	movwf	postinc2,c
 28321  014C80  0E0D               	movlw	13
 28322  014C82  6EDD               	movwf	postdec2,c
 28323                           
 28324                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 28325  014C84  C039  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28326  014C88  C03A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28327  014C8C  0E80               	movlw	128
 28328  014C8E  6EDF               	movwf	indf2,c
 28329  014C90  0012               	return	
 28330  014C92                     __end_of_USBCtrlEPAllowStatusStage:
 28331                           	opt stack 0
 28332                           pclatu	equ	0xFFB
 28333                           pclath	equ	0xFFA
 28334                           tblptru	equ	0xFF8
 28335                           tblptrh	equ	0xFF7
 28336                           tblptrl	equ	0xFF6
 28337                           tablat	equ	0xFF5
 28338                           prodh	equ	0xFF4
 28339                           prodl	equ	0xFF3
 28340                           intcon	equ	0xFF2
 28341                           intcon2	equ	0xFF1
 28342                           postinc0	equ	0xFEE
 28343                           fsr0h	equ	0xFEA
 28344                           fsr0l	equ	0xFE9
 28345                           wreg	equ	0xFE8
 28346                           indf1	equ	0xFE7
 28347                           postinc1	equ	0xFE6
 28348                           postdec1	equ	0xFE5
 28349                           fsr1h	equ	0xFE2
 28350                           fsr1l	equ	0xFE1
 28351                           indf2	equ	0xFDF
 28352                           postinc2	equ	0xFDE
 28353                           postdec2	equ	0xFDD
 28354                           plusw2	equ	0xFDB
 28355                           fsr2h	equ	0xFDA
 28356                           fsr2l	equ	0xFD9
 28357                           status	equ	0xFD8
 28358                           
 28359 ;; *************** function _USBCtrlTrfInHandler *****************
 28360 ;; Defined at:
 28361 ;;		line 2595 in file "../My_header/usb_cdc/usb/usb_device.c"
 28362 ;; Parameters:    Size  Location     Type
 28363 ;;		None
 28364 ;; Auto vars:     Size  Location     Type
 28365 ;;  lastDTS         1    1[COMRAM] unsigned char 
 28366 ;; Return value:  Size  Location     Type
 28367 ;;		None               void
 28368 ;; Registers used:
 28369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28370 ;; Tracked objects:
 28371 ;;		On entry : 0/0
 28372 ;;		On exit  : 0/0
 28373 ;;		Unchanged: 0/0
 28374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28379 ;;Total ram usage:        1 bytes
 28380 ;; Hardware stack levels used:    1
 28381 ;; Hardware stack levels required when called:    1
 28382 ;; This function calls:
 28383 ;;		_USBCtrlTrfTxService
 28384 ;; This function is called by:
 28385 ;;		_USBCtrlEPService
 28386 ;; This function uses a non-reentrant model
 28387 ;;
 28388                           
 28389                           	psect	text130
 28390  014C92                     __ptext130:
 28391                           	opt stack 0
 28392  014C92                     _USBCtrlTrfInHandler:
 28393                           	opt stack 17
 28394                           
 28395                           ;usb_device.c: 2597: uint8_t lastDTS;
 28396                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 28397                           
 28398                           ;incstack = 0
 28399  014C92  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28400  014C96  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28401  014C9A  0E00               	movlw	0
 28402  014C9C  BCDF               	btfsc	indf2,6,c
 28403  014C9E  0E01               	movlw	1
 28404  014CA0  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 28405                           
 28406                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28407  014CA2  0E04               	movlw	4
 28408  014CA4  0100               	movlb	0	; () banked
 28409  014CA6  1B6F               	xorwf	_pBDTEntryIn& (0+255),f,b
 28410                           
 28411                           ; BSR set to: 0
 28412                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 28413  014CA8  0E08               	movlw	8
 28414  014CAA  1845               	xorwf	_USBDeviceState,w,c	;volatile
 28415  014CAC  A4D8               	btfss	status,2,c
 28416  014CAE  D00D               	goto	i2l6958
 28417                           
 28418                           ; BSR set to: 0
 28419                           ;usb_device.c: 2608: {
 28420                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 28421  014CB0  010D               	movlb	13	; () banked
 28422  014CB2  5132               	movf	50,w,b	;volatile
 28423  014CB4  0B7F               	andlw	127
 28424  014CB6  010F               	movlb	15	; () banked
 28425  014CB8  6F38               	movwf	56,b	;volatile
 28426                           
 28427                           ; BSR set to: 15
 28428                           ;usb_device.c: 2610: if(UADDR != 0u)
 28429  014CBA  010F               	movlb	15	; () banked
 28430  014CBC  5138               	movf	56,w,b	;volatile
 28431  014CBE  B4D8               	btfsc	status,2,c
 28432  014CC0  D002               	goto	i2l6956
 28433                           
 28434                           ; BSR set to: 15
 28435                           ;usb_device.c: 2611: {
 28436                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 28437  014CC2  0E10               	movlw	16
 28438  014CC4  D001               	goto	L18
 28439  014CC6                     i2l6956:
 28440                           
 28441                           ; BSR set to: 15
 28442                           ;usb_device.c: 2614: else
 28443                           ;usb_device.c: 2615: {
 28444                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 28445  014CC6  0E04               	movlw	4
 28446  014CC8                     L18:
 28447  014CC8  6E45               	movwf	_USBDeviceState,c	;volatile
 28448  014CCA                     i2l6958:
 28449                           
 28450                           ;usb_device.c: 2617: }
 28451                           ;usb_device.c: 2618: }
 28452                           ;usb_device.c: 2621: if(controlTransferState == 1)
 28453  014CCA  0449               	decf	_controlTransferState,w,c	;volatile
 28454  014CCC  A4D8               	btfss	status,2,c
 28455  014CCE  D03B               	goto	i2l1338
 28456                           
 28457                           ;usb_device.c: 2622: {
 28458                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 28459  014CD0  0100               	movlb	0	; () banked
 28460  014CD2  EE20 F002          	lfsr	2,2
 28461  014CD6  516F               	movf	_pBDTEntryIn& (0+255),w,b
 28462  014CD8  26D9               	addwf	fsr2l,f,c
 28463  014CDA  5170               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28464  014CDC  22DA               	addwfc	fsr2h,f,c
 28465  014CDE  0E38               	movlw	56
 28466  014CE0  6EDE               	movwf	postinc2,c
 28467  014CE2  0E0D               	movlw	13
 28468  014CE4  6EDD               	movwf	postdec2,c
 28469                           
 28470                           ; BSR set to: 0
 28471                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 28472  014CE6  EC07  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 28473                           
 28474                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 28475  014CEA  0E02               	movlw	2
 28476  014CEC  184F               	xorwf	_shortPacketStatus,w,c	;volatile
 28477  014CEE  A4D8               	btfss	status,2,c
 28478  014CF0  D00D               	goto	i2l6970
 28479                           
 28480                           ;usb_device.c: 2631: {
 28481                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 28482  014CF2  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28483  014CF6  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28484  014CFA  0E04               	movlw	4
 28485  014CFC  6EDF               	movwf	indf2,c
 28486                           
 28487                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28488  014CFE  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28489  014D02  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28490  014D06  0E00               	movlw	0
 28491  014D08  8EDB               	bsf	plusw2,7,c
 28492                           
 28493                           ;usb_device.c: 2636: }
 28494  014D0A  0012               	return	
 28495  014D0C                     i2l6970:
 28496                           
 28497                           ;usb_device.c: 2637: else
 28498                           ;usb_device.c: 2638: {
 28499                           ;usb_device.c: 2639: if(lastDTS == 0)
 28500  014D0C  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 28501  014D0E  A4D8               	btfss	status,2,c
 28502  014D10  D00D               	goto	i2l6976
 28503                           
 28504                           ;usb_device.c: 2640: {
 28505                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28506  014D12  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28507  014D16  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28508  014D1A  0E48               	movlw	72
 28509  014D1C  6EDF               	movwf	indf2,c
 28510                           
 28511                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28512  014D1E  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28513  014D22  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28514  014D26  0E00               	movlw	0
 28515  014D28  8EDB               	bsf	plusw2,7,c
 28516                           
 28517                           ;usb_device.c: 2643: }
 28518  014D2A  0012               	return	
 28519  014D2C                     i2l6976:
 28520                           
 28521                           ;usb_device.c: 2644: else
 28522                           ;usb_device.c: 2645: {
 28523                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 28524  014D2C  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28525  014D30  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28526  014D34  0E08               	movlw	8
 28527  014D36  6EDF               	movwf	indf2,c
 28528                           
 28529                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28530  014D38  C06F  FFD9         	movff	_pBDTEntryIn,fsr2l
 28531  014D3C  C070  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28532  014D40  0E00               	movlw	0
 28533  014D42  8EDB               	bsf	plusw2,7,c
 28534                           
 28535                           ;usb_device.c: 2648: }
 28536                           ;usb_device.c: 2649: }
 28537                           ;usb_device.c: 2650: }
 28538  014D44  0012               	return	
 28539  014D46                     i2l1338:
 28540                           
 28541                           ;usb_device.c: 2651: else
 28542                           ;usb_device.c: 2652: {
 28543                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 28544  014D46  0100               	movlb	0	; () banked
 28545  014D48  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 28546  014D4A  D002               	goto	i2l6982
 28547                           
 28548                           ; BSR set to: 0
 28549                           ;usb_device.c: 2661: }
 28550                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 28551                           
 28552                           ; BSR set to: 0
 28553                           ;usb_device.c: 2659: {
 28554                           ;usb_device.c: 2660: outPipes[0].pFunc();
 28555  014D4C  0100               	movlb	0	; () banked
 28556  014D4E  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 28557  014D50                     i2l6982:
 28558                           
 28559                           ; BSR set to: 0
 28560                           ;usb_device.c: 2663: }
 28561                           ;usb_device.c: 2665: controlTransferState = 0;
 28562  014D50  0E00               	movlw	0
 28563  014D52  6E49               	movwf	_controlTransferState,c	;volatile
 28564  014D54  0012               	return	
 28565  014D56                     __end_of_USBCtrlTrfInHandler:
 28566                           	opt stack 0
 28567                           pclatu	equ	0xFFB
 28568                           pclath	equ	0xFFA
 28569                           tblptru	equ	0xFF8
 28570                           tblptrh	equ	0xFF7
 28571                           tblptrl	equ	0xFF6
 28572                           tablat	equ	0xFF5
 28573                           prodh	equ	0xFF4
 28574                           prodl	equ	0xFF3
 28575                           intcon	equ	0xFF2
 28576                           intcon2	equ	0xFF1
 28577                           postinc0	equ	0xFEE
 28578                           fsr0h	equ	0xFEA
 28579                           fsr0l	equ	0xFE9
 28580                           wreg	equ	0xFE8
 28581                           indf1	equ	0xFE7
 28582                           postinc1	equ	0xFE6
 28583                           postdec1	equ	0xFE5
 28584                           fsr1h	equ	0xFE2
 28585                           fsr1l	equ	0xFE1
 28586                           indf2	equ	0xFDF
 28587                           postinc2	equ	0xFDE
 28588                           postdec2	equ	0xFDD
 28589                           plusw2	equ	0xFDB
 28590                           fsr2h	equ	0xFDA
 28591                           fsr2l	equ	0xFD9
 28592                           status	equ	0xFD8
 28593                           
 28594 ;; *************** function _USBCtrlTrfTxService *****************
 28595 ;; Defined at:
 28596 ;;		line 1771 in file "../My_header/usb_cdc/usb/usb_device.c"
 28597 ;; Parameters:    Size  Location     Type
 28598 ;;		None
 28599 ;; Auto vars:     Size  Location     Type
 28600 ;;  byteToSend      1    0[COMRAM] unsigned char 
 28601 ;; Return value:  Size  Location     Type
 28602 ;;		None               void
 28603 ;; Registers used:
 28604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28605 ;; Tracked objects:
 28606 ;;		On entry : 0/0
 28607 ;;		On exit  : 0/0
 28608 ;;		Unchanged: 0/0
 28609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28614 ;;Total ram usage:        1 bytes
 28615 ;; Hardware stack levels used:    1
 28616 ;; This function calls:
 28617 ;;		Nothing
 28618 ;; This function is called by:
 28619 ;;		_USBCtrlEPAllowDataStage
 28620 ;;		_USBCtrlTrfInHandler
 28621 ;; This function uses a non-reentrant model
 28622 ;;
 28623                           
 28624                           	psect	text131
 28625  01460E                     __ptext131:
 28626                           	opt stack 0
 28627  01460E                     _USBCtrlTrfTxService:
 28628                           	opt stack 15
 28629                           
 28630                           ;usb_device.c: 1773: uint8_t byteToSend;
 28631                           ;usb_device.c: 1777: byteToSend = 8;
 28632                           
 28633                           ;incstack = 0
 28634  01460E  0E08               	movlw	8
 28635  014610  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 28636                           
 28637                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 28638  014612  0100               	movlb	0	; () banked
 28639  014614  516E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 28640  014616  E111               	bnz	i2l5962
 28641  014618  0E08               	movlw	8
 28642  01461A  0100               	movlb	0	; () banked
 28643  01461C  5D6D               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 28644  01461E  B0D8               	btfsc	status,0,c
 28645  014620  D00C               	goto	i2l5962
 28646                           
 28647                           ; BSR set to: 0
 28648                           ;usb_device.c: 1779: {
 28649                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 28650  014622  C06D  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 28651                           
 28652                           ; BSR set to: 0
 28653                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 28654  014626  504F               	movf	_shortPacketStatus,w,c	;volatile
 28655  014628  A4D8               	btfss	status,2,c
 28656  01462A  D002               	goto	i2l5958
 28657                           
 28658                           ; BSR set to: 0
 28659                           ;usb_device.c: 1788: {
 28660                           ;usb_device.c: 1789: shortPacketStatus = 1;
 28661  01462C  0E01               	movlw	1
 28662  01462E  D004               	goto	L19
 28663  014630                     i2l5958:
 28664                           
 28665                           ; BSR set to: 0
 28666                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 28667  014630  044F               	decf	_shortPacketStatus,w,c	;volatile
 28668  014632  A4D8               	btfss	status,2,c
 28669  014634  D002               	goto	i2l5962
 28670                           
 28671                           ; BSR set to: 0
 28672                           ;usb_device.c: 1792: {
 28673                           ;usb_device.c: 1793: shortPacketStatus = 2;
 28674  014636  0E02               	movlw	2
 28675  014638                     L19:
 28676  014638  6E4F               	movwf	_shortPacketStatus,c	;volatile
 28677  01463A                     i2l5962:
 28678                           
 28679                           ; BSR set to: 0
 28680                           ;usb_device.c: 1794: }
 28681                           ;usb_device.c: 1795: }
 28682                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 28683  01463A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 28684  01463C  0100               	movlb	0	; () banked
 28685  01463E  5F6D               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 28686  014640  0E00               	movlw	0
 28687  014642  5B6E               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 28688                           
 28689                           ; BSR set to: 0
 28690                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 28691  014644  0100               	movlb	0	; () banked
 28692  014646  EE20 F001          	lfsr	2,1
 28693  01464A  516F               	movf	_pBDTEntryIn& (0+255),w,b
 28694  01464C  26D9               	addwf	fsr2l,f,c
 28695  01464E  5170               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28696  014650  22DA               	addwfc	fsr2h,f,c
 28697  014652  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 28698                           
 28699                           ; BSR set to: 0
 28700                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 28701  014656  0E38               	movlw	56
 28702  014658  6E3B               	movwf	_pDst,c
 28703  01465A  0E0D               	movlw	13
 28704  01465C  6E3C               	movwf	_pDst+1,c
 28705                           
 28706                           ; BSR set to: 0
 28707                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 28708  01465E  0100               	movlb	0	; () banked
 28709  014660  A16C               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 28710  014662  D01D               	goto	i2l5980
 28711  014664  D03C               	goto	i2l5990
 28712  014666                     i2l5972:
 28713                           
 28714                           ; BSR set to: 0
 28715                           ;usb_device.c: 1812: {
 28716                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 28717  014666  C069  FFF6         	movff	_inPipes,tblptrl	;volatile
 28718  01466A  C06A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28719  01466E  0E00               	movlw	low (__mediumconst shr (0+16))
 28720  014670  6EF8               	movwf	tblptru,c
 28721  014672  C03B  FFD9         	movff	_pDst,fsr2l
 28722  014676  C03C  FFDA         	movff	_pDst+1,fsr2h
 28723  01467A  0E0E               	movlw	(high __ramtop+-1)
 28724  01467C  64F7               	cpfsgt	tblptrh,c
 28725  01467E  D003               	bra	i2u521_47
 28726  014680  0008               	tblrd		*
 28727  014682  50F5               	movf	tablat,w,c
 28728  014684  D005               	bra	i2u521_40
 28729  014686                     i2u521_47:
 28730  014686  CFF6 FFE1          	movff	tblptrl,fsr1l
 28731  01468A  CFF7 FFE2          	movff	tblptrh,fsr1h
 28732  01468E  50E7               	movf	indf1,w,c
 28733  014690                     i2u521_40:
 28734  014690  6EDF               	movwf	indf2,c
 28735  014692  0100               	movlb	0	; () banked
 28736  014694  4B69               	infsnz	_inPipes& (0+255),f,b	;volatile
 28737  014696  2B6A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 28738                           
 28739                           ; BSR set to: 0
 28740  014698  4A3B               	infsnz	_pDst,f,c
 28741  01469A  2A3C               	incf	_pDst+1,f,c
 28742                           
 28743                           ; BSR set to: 0
 28744                           ;usb_device.c: 1814: byteToSend--;
 28745  01469C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 28746  01469E                     i2l5980:
 28747                           
 28748                           ; BSR set to: 0
 28749  01469E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 28750  0146A0  B4D8               	btfsc	status,2,c
 28751  0146A2  0012               	return	
 28752  0146A4  D7E0               	goto	i2l5972
 28753  0146A6                     i2l5982:
 28754                           
 28755                           ; BSR set to: 0
 28756                           ;usb_device.c: 1820: {
 28757                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 28758  0146A6  C069  FFF6         	movff	_inPipes,tblptrl	;volatile
 28759  0146AA  C06A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28760  0146AE  0E00               	movlw	low (__mediumconst shr (0+16))
 28761  0146B0  6EF8               	movwf	tblptru,c
 28762  0146B2  C03B  FFD9         	movff	_pDst,fsr2l
 28763  0146B6  C03C  FFDA         	movff	_pDst+1,fsr2h
 28764  0146BA  0E0E               	movlw	(high __ramtop+-1)
 28765  0146BC  64F7               	cpfsgt	tblptrh,c
 28766  0146BE  D003               	bra	i2u523_47
 28767  0146C0  0008               	tblrd		*
 28768  0146C2  50F5               	movf	tablat,w,c
 28769  0146C4  D005               	bra	i2u523_40
 28770  0146C6                     i2u523_47:
 28771  0146C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 28772  0146CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 28773  0146CE  50E7               	movf	indf1,w,c
 28774  0146D0                     i2u523_40:
 28775  0146D0  6EDF               	movwf	indf2,c
 28776  0146D2  0100               	movlb	0	; () banked
 28777  0146D4  4B69               	infsnz	_inPipes& (0+255),f,b	;volatile
 28778  0146D6  2B6A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 28779                           
 28780                           ; BSR set to: 0
 28781  0146D8  4A3B               	infsnz	_pDst,f,c
 28782  0146DA  2A3C               	incf	_pDst+1,f,c
 28783                           
 28784                           ; BSR set to: 0
 28785                           ;usb_device.c: 1822: byteToSend--;
 28786  0146DC  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 28787  0146DE                     i2l5990:
 28788                           
 28789                           ; BSR set to: 0
 28790  0146DE  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 28791  0146E0  B4D8               	btfsc	status,2,c
 28792  0146E2  0012               	return	
 28793  0146E4  D7E0               	goto	i2l5982
 28794  0146E6                     __end_of_USBCtrlTrfTxService:
 28795                           	opt stack 0
 28796                           pclatu	equ	0xFFB
 28797                           pclath	equ	0xFFA
 28798                           tblptru	equ	0xFF8
 28799                           tblptrh	equ	0xFF7
 28800                           tblptrl	equ	0xFF6
 28801                           tablat	equ	0xFF5
 28802                           prodh	equ	0xFF4
 28803                           prodl	equ	0xFF3
 28804                           intcon	equ	0xFF2
 28805                           intcon2	equ	0xFF1
 28806                           postinc0	equ	0xFEE
 28807                           fsr0h	equ	0xFEA
 28808                           fsr0l	equ	0xFE9
 28809                           wreg	equ	0xFE8
 28810                           indf1	equ	0xFE7
 28811                           postinc1	equ	0xFE6
 28812                           postdec1	equ	0xFE5
 28813                           fsr1h	equ	0xFE2
 28814                           fsr1l	equ	0xFE1
 28815                           indf2	equ	0xFDF
 28816                           postinc2	equ	0xFDE
 28817                           postdec2	equ	0xFDD
 28818                           plusw2	equ	0xFDB
 28819                           fsr2h	equ	0xFDA
 28820                           fsr2l	equ	0xFD9
 28821                           status	equ	0xFD8
 28822                           
 28823 ;; *************** function _LED_indicator *****************
 28824 ;; Defined at:
 28825 ;;		line 140 in file "tasks.h"
 28826 ;; Parameters:    Size  Location     Type
 28827 ;;		None
 28828 ;; Auto vars:     Size  Location     Type
 28829 ;;  i               1   11[COMRAM] unsigned char 
 28830 ;; Return value:  Size  Location     Type
 28831 ;;		None               void
 28832 ;; Registers used:
 28833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28834 ;; Tracked objects:
 28835 ;;		On entry : 0/0
 28836 ;;		On exit  : 0/0
 28837 ;;		Unchanged: 0/0
 28838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28841 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28843 ;;Total ram usage:        4 bytes
 28844 ;; Hardware stack levels used:    1
 28845 ;; Hardware stack levels required when called:    1
 28846 ;; This function calls:
 28847 ;;		i2_LED_OUT
 28848 ;;		i2___awdiv
 28849 ;;		i2___lwdiv
 28850 ;; This function is called by:
 28851 ;;		_ISR
 28852 ;; This function uses a non-reentrant model
 28853 ;;
 28854                           
 28855                           	psect	text132
 28856  013878                     __ptext132:
 28857                           	opt stack 0
 28858  013878                     _LED_indicator:
 28859                           	opt stack 20
 28860                           
 28861                           ;tasks.h: 141: uint8_t i;
 28862                           ;tasks.h: 142: static uint8_t cnt[3];
 28863                           ;tasks.h: 143: static uint8_t cntf[3];
 28864                           ;tasks.h: 144: for (i = 0; i < 3; i++) {
 28865                           
 28866                           ; BSR set to: 0
 28867                           ;incstack = 0
 28868  013878  0E00               	movlw	0
 28869  01387A  6E0C               	movwf	LED_indicator@i,c
 28870  01387C                     i2l8714:
 28871  01387C  0E02               	movlw	2
 28872  01387E  640C               	cpfsgt	LED_indicator@i,c
 28873  013880  D001               	goto	i2l8718
 28874  013882  0012               	return	
 28875  013884                     i2l8718:
 28876                           
 28877                           ;tasks.h: 145: if (port[i].flag.led_indicater_ON) {
 28878  013884  500C               	movf	LED_indicator@i,w,c
 28879  013886  0D17               	mullw	23
 28880  013888  0E16               	movlw	22
 28881  01388A  26F3               	addwf	prodl,f,c
 28882  01388C  0E00               	movlw	0
 28883  01388E  22F4               	addwfc	prodh,f,c
 28884  013890  0E00               	movlw	low _port
 28885  013892  24F3               	addwf	prodl,w,c
 28886  013894  6ED9               	movwf	fsr2l,c
 28887  013896  0E03               	movlw	high _port
 28888  013898  20F4               	addwfc	prodh,w,c
 28889  01389A  6EDA               	movwf	fsr2h,c
 28890  01389C  0103               	movlb	3	; () banked
 28891  01389E  A2DF               	btfss	indf2,1,c
 28892  0138A0  D07B               	goto	i2l8738
 28893                           
 28894                           ; BSR set to: 3
 28895                           ;tasks.h: 146: cnt[i]++;
 28896  0138A2  500C               	movf	LED_indicator@i,w,c
 28897  0138A4  0D01               	mullw	1
 28898  0138A6  0E2D               	movlw	low LED_indicator@cnt
 28899  0138A8  24F3               	addwf	prodl,w,c
 28900  0138AA  6ED9               	movwf	fsr2l,c
 28901  0138AC  0E00               	movlw	high LED_indicator@cnt
 28902  0138AE  20F4               	addwfc	prodh,w,c
 28903  0138B0  6EDA               	movwf	fsr2h,c
 28904  0138B2  2ADF               	incf	indf2,f,c
 28905                           
 28906                           ;tasks.h: 147: if (cnt[i] % 2 == 1) {
 28907  0138B4  500C               	movf	LED_indicator@i,w,c
 28908  0138B6  0D01               	mullw	1
 28909  0138B8  0E2D               	movlw	low LED_indicator@cnt
 28910  0138BA  24F3               	addwf	prodl,w,c
 28911  0138BC  6ED9               	movwf	fsr2l,c
 28912  0138BE  0E00               	movlw	high LED_indicator@cnt
 28913  0138C0  20F4               	addwfc	prodh,w,c
 28914  0138C2  6EDA               	movwf	fsr2h,c
 28915  0138C4  A0DF               	btfss	indf2,0,c
 28916  0138C6  D006               	goto	i2l8724
 28917                           
 28918                           ; BSR set to: 3
 28919                           ;tasks.h: 148: LED_OUT(i, 0);
 28920  0138C8  0E00               	movlw	0
 28921  0138CA  6E01               	movwf	i2LED_OUT@value,c
 28922  0138CC  500C               	movf	LED_indicator@i,w,c
 28923  0138CE  EC83  F0AF         	call	i2_LED_OUT
 28924                           
 28925                           ;tasks.h: 149: } else {
 28926  0138D2  D062               	goto	i2l8738
 28927  0138D4                     i2l8724:
 28928                           
 28929                           ;tasks.h: 150: if (cnt[i] / 2 <= port[i].current / 100) {
 28930  0138D4  500C               	movf	LED_indicator@i,w,c
 28931  0138D6  0D17               	mullw	23
 28932  0138D8  0E06               	movlw	6
 28933  0138DA  26F3               	addwf	prodl,f,c
 28934  0138DC  0E00               	movlw	0
 28935  0138DE  22F4               	addwfc	prodh,f,c
 28936  0138E0  0E00               	movlw	low _port
 28937  0138E2  24F3               	addwf	prodl,w,c
 28938  0138E4  6ED9               	movwf	fsr2l,c
 28939  0138E6  0E03               	movlw	high _port
 28940  0138E8  20F4               	addwfc	prodh,w,c
 28941  0138EA  6EDA               	movwf	fsr2h,c
 28942  0138EC  CFDE F001          	movff	postinc2,i2___lwdiv@dividend
 28943  0138F0  CFDD F002          	movff	postdec2,i2___lwdiv@dividend+1
 28944  0138F4  0E00               	movlw	0
 28945  0138F6  6E04               	movwf	i2___lwdiv@divisor+1,c
 28946  0138F8  0E64               	movlw	100
 28947  0138FA  6E03               	movwf	i2___lwdiv@divisor,c
 28948  0138FC  EC1E  F0B1         	call	i2___lwdiv	;wreg free
 28949  013900  C001  F009         	movff	?i2___lwdiv,??_LED_indicator
 28950  013904  C002  F00A         	movff	?i2___lwdiv+1,??_LED_indicator+1
 28951  013908  500C               	movf	LED_indicator@i,w,c
 28952  01390A  0D01               	mullw	1
 28953  01390C  0E2D               	movlw	low LED_indicator@cnt
 28954  01390E  24F3               	addwf	prodl,w,c
 28955  013910  6ED9               	movwf	fsr2l,c
 28956  013912  0E00               	movlw	high LED_indicator@cnt
 28957  013914  20F4               	addwfc	prodh,w,c
 28958  013916  6EDA               	movwf	fsr2h,c
 28959  013918  50DF               	movf	indf2,w,c
 28960  01391A  6E0B               	movwf	(??_LED_indicator+2)& (0+255),c
 28961  01391C  500B               	movf	??_LED_indicator+2,w,c
 28962  01391E  6E01               	movwf	i2___awdiv@dividend,c
 28963  013920  6A02               	clrf	i2___awdiv@dividend+1,c
 28964  013922  0E00               	movlw	0
 28965  013924  6E04               	movwf	i2___awdiv@divisor+1,c
 28966  013926  0E02               	movlw	2
 28967  013928  6E03               	movwf	i2___awdiv@divisor,c
 28968  01392A  EC6F  F0AD         	call	i2___awdiv	;wreg free
 28969  01392E  5001               	movf	?i2___awdiv,w,c
 28970  013930  5C09               	subwf	??_LED_indicator,w,c
 28971  013932  5002               	movf	?i2___awdiv+1,w,c
 28972  013934  580A               	subwfb	??_LED_indicator+1,w,c
 28973  013936  A0D8               	btfss	status,0,c
 28974  013938  D00C               	goto	i2l8730
 28975                           
 28976                           ;tasks.h: 151: LED_OUT(i, 1);
 28977  01393A  0E01               	movlw	1
 28978  01393C  6E01               	movwf	i2LED_OUT@value,c
 28979  01393E  500C               	movf	LED_indicator@i,w,c
 28980  013940  EC83  F0AF         	call	i2_LED_OUT
 28981                           
 28982                           ;tasks.h: 152: cntf[i] = 0;
 28983  013944  500C               	movf	LED_indicator@i,w,c
 28984  013946  0D01               	mullw	1
 28985  013948  0E30               	movlw	low LED_indicator@cntf
 28986  01394A  24F3               	addwf	prodl,w,c
 28987  01394C  6ED9               	movwf	fsr2l,c
 28988  01394E  0E00               	movlw	high LED_indicator@cntf
 28989  013950  D01F               	goto	L20
 28990  013952                     i2l8730:
 28991                           
 28992                           ;tasks.h: 154: cntf[i]++;
 28993  013952  500C               	movf	LED_indicator@i,w,c
 28994  013954  0D01               	mullw	1
 28995  013956  0E30               	movlw	low LED_indicator@cntf
 28996  013958  24F3               	addwf	prodl,w,c
 28997  01395A  6ED9               	movwf	fsr2l,c
 28998  01395C  0E00               	movlw	high LED_indicator@cntf
 28999  01395E  20F4               	addwfc	prodh,w,c
 29000  013960  6EDA               	movwf	fsr2h,c
 29001  013962  2ADF               	incf	indf2,f,c
 29002                           
 29003                           ;tasks.h: 155: LED_OUT(i, 0);
 29004  013964  0E00               	movlw	0
 29005  013966  6E01               	movwf	i2LED_OUT@value,c
 29006  013968  500C               	movf	LED_indicator@i,w,c
 29007  01396A  EC83  F0AF         	call	i2_LED_OUT
 29008                           
 29009                           ;tasks.h: 156: if (cntf[i] >= 2) {
 29010  01396E  500C               	movf	LED_indicator@i,w,c
 29011  013970  0D01               	mullw	1
 29012  013972  0E30               	movlw	low LED_indicator@cntf
 29013  013974  24F3               	addwf	prodl,w,c
 29014  013976  6ED9               	movwf	fsr2l,c
 29015  013978  0E00               	movlw	high LED_indicator@cntf
 29016  01397A  20F4               	addwfc	prodh,w,c
 29017  01397C  6EDA               	movwf	fsr2h,c
 29018  01397E  0E01               	movlw	1
 29019  013980  64DF               	cpfsgt	indf2,c
 29020  013982  D00A               	goto	i2l8738
 29021                           
 29022                           ;tasks.h: 157: cnt[i] = 0;
 29023  013984  500C               	movf	LED_indicator@i,w,c
 29024  013986  0D01               	mullw	1
 29025  013988  0E2D               	movlw	low LED_indicator@cnt
 29026  01398A  24F3               	addwf	prodl,w,c
 29027  01398C  6ED9               	movwf	fsr2l,c
 29028  01398E  0E00               	movlw	high LED_indicator@cnt
 29029  013990                     L20:
 29030  013990  20F4               	addwfc	prodh,w,c
 29031  013992  6EDA               	movwf	fsr2h,c
 29032  013994  0E00               	movlw	0
 29033  013996  6EDF               	movwf	indf2,c
 29034  013998                     i2l8738:
 29035  013998  2A0C               	incf	LED_indicator@i,f,c
 29036  01399A  D770               	goto	i2l8714
 29037  01399C                     __end_of_LED_indicator:
 29038                           	opt stack 0
 29039                           pclatu	equ	0xFFB
 29040                           pclath	equ	0xFFA
 29041                           tblptru	equ	0xFF8
 29042                           tblptrh	equ	0xFF7
 29043                           tblptrl	equ	0xFF6
 29044                           tablat	equ	0xFF5
 29045                           prodh	equ	0xFF4
 29046                           prodl	equ	0xFF3
 29047                           intcon	equ	0xFF2
 29048                           intcon2	equ	0xFF1
 29049                           postinc0	equ	0xFEE
 29050                           fsr0h	equ	0xFEA
 29051                           fsr0l	equ	0xFE9
 29052                           wreg	equ	0xFE8
 29053                           indf1	equ	0xFE7
 29054                           postinc1	equ	0xFE6
 29055                           postdec1	equ	0xFE5
 29056                           fsr1h	equ	0xFE2
 29057                           fsr1l	equ	0xFE1
 29058                           indf2	equ	0xFDF
 29059                           postinc2	equ	0xFDE
 29060                           postdec2	equ	0xFDD
 29061                           plusw2	equ	0xFDB
 29062                           fsr2h	equ	0xFDA
 29063                           fsr2l	equ	0xFD9
 29064                           status	equ	0xFD8
 29065                           
 29066 ;; *************** function i2___lwdiv *****************
 29067 ;; Defined at:
 29068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 29069 ;; Parameters:    Size  Location     Type
 29070 ;;  dividend        2    0[COMRAM] unsigned int 
 29071 ;;  divisor         2    2[COMRAM] unsigned int 
 29072 ;; Auto vars:     Size  Location     Type
 29073 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 29074 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 29075 ;; Return value:  Size  Location     Type
 29076 ;;                  2    0[COMRAM] unsigned int 
 29077 ;; Registers used:
 29078 ;;		wreg, status,2, status,0
 29079 ;; Tracked objects:
 29080 ;;		On entry : 0/0
 29081 ;;		On exit  : 0/0
 29082 ;;		Unchanged: 0/0
 29083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29085 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29087 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29088 ;;Total ram usage:        7 bytes
 29089 ;; Hardware stack levels used:    1
 29090 ;; This function calls:
 29091 ;;		Nothing
 29092 ;; This function is called by:
 29093 ;;		_LED_indicator
 29094 ;; This function uses a non-reentrant model
 29095 ;;
 29096                           
 29097                           	psect	text133
 29098  01623C                     __ptext133:
 29099                           	opt stack 0
 29100  01623C                     i2___lwdiv:
 29101                           	opt stack 20
 29102                           
 29103                           ;incstack = 0
 29104  01623C  0E00               	movlw	0
 29105  01623E  6E06               	movwf	i2___lwdiv@quotient+1,c
 29106  016240  0E00               	movlw	0
 29107  016242  6E05               	movwf	i2___lwdiv@quotient,c
 29108  016244  5003               	movf	i2___lwdiv@divisor,w,c
 29109  016246  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 29110  016248  B4D8               	btfsc	status,2,c
 29111  01624A  D01C               	goto	i2l1931
 29112  01624C  0E01               	movlw	1
 29113  01624E  6E07               	movwf	i2___lwdiv@counter,c
 29114  016250  D004               	goto	i2l8662
 29115  016252                     i2l8660:
 29116  016252  90D8               	bcf	status,0,c
 29117  016254  3603               	rlcf	i2___lwdiv@divisor,f,c
 29118  016256  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 29119  016258  2A07               	incf	i2___lwdiv@counter,f,c
 29120  01625A                     i2l8662:
 29121  01625A  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 29122  01625C  D7FA               	goto	i2l8660
 29123  01625E                     i2l8664:
 29124  01625E  90D8               	bcf	status,0,c
 29125  016260  3605               	rlcf	i2___lwdiv@quotient,f,c
 29126  016262  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 29127  016264  5003               	movf	i2___lwdiv@divisor,w,c
 29128  016266  5C01               	subwf	i2___lwdiv@dividend,w,c
 29129  016268  5004               	movf	i2___lwdiv@divisor+1,w,c
 29130  01626A  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 29131  01626C  A0D8               	btfss	status,0,c
 29132  01626E  D005               	goto	i2l8672
 29133  016270  5003               	movf	i2___lwdiv@divisor,w,c
 29134  016272  5E01               	subwf	i2___lwdiv@dividend,f,c
 29135  016274  5004               	movf	i2___lwdiv@divisor+1,w,c
 29136  016276  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 29137  016278  8005               	bsf	i2___lwdiv@quotient,0,c
 29138  01627A                     i2l8672:
 29139  01627A  90D8               	bcf	status,0,c
 29140  01627C  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 29141  01627E  3203               	rrcf	i2___lwdiv@divisor,f,c
 29142  016280  2E07               	decfsz	i2___lwdiv@counter,f,c
 29143  016282  D7ED               	goto	i2l8664
 29144  016284                     i2l1931:
 29145  016284  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 29146  016288  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 29147  01628C  0012               	return		;funcret
 29148  01628E                     __end_ofi2___lwdiv:
 29149                           	opt stack 0
 29150                           pclatu	equ	0xFFB
 29151                           pclath	equ	0xFFA
 29152                           tblptru	equ	0xFF8
 29153                           tblptrh	equ	0xFF7
 29154                           tblptrl	equ	0xFF6
 29155                           tablat	equ	0xFF5
 29156                           prodh	equ	0xFF4
 29157                           prodl	equ	0xFF3
 29158                           intcon	equ	0xFF2
 29159                           intcon2	equ	0xFF1
 29160                           postinc0	equ	0xFEE
 29161                           fsr0h	equ	0xFEA
 29162                           fsr0l	equ	0xFE9
 29163                           wreg	equ	0xFE8
 29164                           indf1	equ	0xFE7
 29165                           postinc1	equ	0xFE6
 29166                           postdec1	equ	0xFE5
 29167                           fsr1h	equ	0xFE2
 29168                           fsr1l	equ	0xFE1
 29169                           indf2	equ	0xFDF
 29170                           postinc2	equ	0xFDE
 29171                           postdec2	equ	0xFDD
 29172                           plusw2	equ	0xFDB
 29173                           fsr2h	equ	0xFDA
 29174                           fsr2l	equ	0xFD9
 29175                           status	equ	0xFD8
 29176                           
 29177 ;; *************** function i2___awdiv *****************
 29178 ;; Defined at:
 29179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 29180 ;; Parameters:    Size  Location     Type
 29181 ;;  dividend        2    0[COMRAM] int 
 29182 ;;  divisor         2    2[COMRAM] int 
 29183 ;; Auto vars:     Size  Location     Type
 29184 ;;  __awdiv         2    6[COMRAM] int 
 29185 ;;  __awdiv         1    5[COMRAM] unsigned char 
 29186 ;;  __awdiv         1    4[COMRAM] unsigned char 
 29187 ;; Return value:  Size  Location     Type
 29188 ;;                  2    0[COMRAM] int 
 29189 ;; Registers used:
 29190 ;;		wreg, status,2, status,0
 29191 ;; Tracked objects:
 29192 ;;		On entry : 0/0
 29193 ;;		On exit  : 0/0
 29194 ;;		Unchanged: 0/0
 29195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29197 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29199 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29200 ;;Total ram usage:        8 bytes
 29201 ;; Hardware stack levels used:    1
 29202 ;; This function calls:
 29203 ;;		Nothing
 29204 ;; This function is called by:
 29205 ;;		_LED_indicator
 29206 ;; This function uses a non-reentrant model
 29207 ;;
 29208                           
 29209                           	psect	text134
 29210  015ADE                     __ptext134:
 29211                           	opt stack 0
 29212  015ADE                     i2___awdiv:
 29213                           	opt stack 20
 29214                           
 29215                           ;incstack = 0
 29216  015ADE  0E00               	movlw	0
 29217  015AE0  6E06               	movwf	i2___awdiv@sign,c
 29218  015AE2  AE04               	btfss	i2___awdiv@divisor+1,7,c
 29219  015AE4  D006               	goto	i2l8596
 29220  015AE6  6C03               	negf	i2___awdiv@divisor,c
 29221  015AE8  1E04               	comf	i2___awdiv@divisor+1,f,c
 29222  015AEA  B0D8               	btfsc	status,0,c
 29223  015AEC  2A04               	incf	i2___awdiv@divisor+1,f,c
 29224  015AEE  0E01               	movlw	1
 29225  015AF0  6E06               	movwf	i2___awdiv@sign,c
 29226  015AF2                     i2l8596:
 29227  015AF2  AE02               	btfss	i2___awdiv@dividend+1,7,c
 29228  015AF4  D006               	goto	i2l8602
 29229  015AF6  6C01               	negf	i2___awdiv@dividend,c
 29230  015AF8  1E02               	comf	i2___awdiv@dividend+1,f,c
 29231  015AFA  B0D8               	btfsc	status,0,c
 29232  015AFC  2A02               	incf	i2___awdiv@dividend+1,f,c
 29233  015AFE  0E01               	movlw	1
 29234  015B00  1A06               	xorwf	i2___awdiv@sign,f,c
 29235  015B02                     i2l8602:
 29236  015B02  0E00               	movlw	0
 29237  015B04  6E08               	movwf	i2___awdiv@quotient+1,c
 29238  015B06  0E00               	movlw	0
 29239  015B08  6E07               	movwf	i2___awdiv@quotient,c
 29240  015B0A  5003               	movf	i2___awdiv@divisor,w,c
 29241  015B0C  1004               	iorwf	i2___awdiv@divisor+1,w,c
 29242  015B0E  B4D8               	btfsc	status,2,c
 29243  015B10  D01C               	goto	i2l8624
 29244  015B12  0E01               	movlw	1
 29245  015B14  6E05               	movwf	i2___awdiv@counter,c
 29246  015B16  D004               	goto	i2l8610
 29247  015B18                     i2l8608:
 29248  015B18  90D8               	bcf	status,0,c
 29249  015B1A  3603               	rlcf	i2___awdiv@divisor,f,c
 29250  015B1C  3604               	rlcf	i2___awdiv@divisor+1,f,c
 29251  015B1E  2A05               	incf	i2___awdiv@counter,f,c
 29252  015B20                     i2l8610:
 29253  015B20  AE04               	btfss	i2___awdiv@divisor+1,7,c
 29254  015B22  D7FA               	goto	i2l8608
 29255  015B24                     i2l8612:
 29256  015B24  90D8               	bcf	status,0,c
 29257  015B26  3607               	rlcf	i2___awdiv@quotient,f,c
 29258  015B28  3608               	rlcf	i2___awdiv@quotient+1,f,c
 29259  015B2A  5003               	movf	i2___awdiv@divisor,w,c
 29260  015B2C  5C01               	subwf	i2___awdiv@dividend,w,c
 29261  015B2E  5004               	movf	i2___awdiv@divisor+1,w,c
 29262  015B30  5802               	subwfb	i2___awdiv@dividend+1,w,c
 29263  015B32  A0D8               	btfss	status,0,c
 29264  015B34  D005               	goto	i2l8620
 29265  015B36  5003               	movf	i2___awdiv@divisor,w,c
 29266  015B38  5E01               	subwf	i2___awdiv@dividend,f,c
 29267  015B3A  5004               	movf	i2___awdiv@divisor+1,w,c
 29268  015B3C  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 29269  015B3E  8007               	bsf	i2___awdiv@quotient,0,c
 29270  015B40                     i2l8620:
 29271  015B40  90D8               	bcf	status,0,c
 29272  015B42  3204               	rrcf	i2___awdiv@divisor+1,f,c
 29273  015B44  3203               	rrcf	i2___awdiv@divisor,f,c
 29274  015B46  2E05               	decfsz	i2___awdiv@counter,f,c
 29275  015B48  D7ED               	goto	i2l8612
 29276  015B4A                     i2l8624:
 29277  015B4A  5006               	movf	i2___awdiv@sign,w,c
 29278  015B4C  B4D8               	btfsc	status,2,c
 29279  015B4E  D004               	goto	i2l8628
 29280  015B50  6C07               	negf	i2___awdiv@quotient,c
 29281  015B52  1E08               	comf	i2___awdiv@quotient+1,f,c
 29282  015B54  B0D8               	btfsc	status,0,c
 29283  015B56  2A08               	incf	i2___awdiv@quotient+1,f,c
 29284  015B58                     i2l8628:
 29285  015B58  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 29286  015B5C  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 29287  015B60  0012               	return	
 29288  015B62                     __end_ofi2___awdiv:
 29289                           	opt stack 0
 29290                           pclatu	equ	0xFFB
 29291                           pclath	equ	0xFFA
 29292                           tblptru	equ	0xFF8
 29293                           tblptrh	equ	0xFF7
 29294                           tblptrl	equ	0xFF6
 29295                           tablat	equ	0xFF5
 29296                           prodh	equ	0xFF4
 29297                           prodl	equ	0xFF3
 29298                           intcon	equ	0xFF2
 29299                           intcon2	equ	0xFF1
 29300                           postinc0	equ	0xFEE
 29301                           fsr0h	equ	0xFEA
 29302                           fsr0l	equ	0xFE9
 29303                           wreg	equ	0xFE8
 29304                           indf1	equ	0xFE7
 29305                           postinc1	equ	0xFE6
 29306                           postdec1	equ	0xFE5
 29307                           fsr1h	equ	0xFE2
 29308                           fsr1l	equ	0xFE1
 29309                           indf2	equ	0xFDF
 29310                           postinc2	equ	0xFDE
 29311                           postdec2	equ	0xFDD
 29312                           plusw2	equ	0xFDB
 29313                           fsr2h	equ	0xFDA
 29314                           fsr2l	equ	0xFD9
 29315                           status	equ	0xFD8
 29316                           
 29317 ;; *************** function i2_LED_OUT *****************
 29318 ;; Defined at:
 29319 ;;		line 125 in file "tasks.h"
 29320 ;; Parameters:    Size  Location     Type
 29321 ;;  b               1    wreg     unsigned char 
 29322 ;;  value           1    0[COMRAM] unsigned char 
 29323 ;; Auto vars:     Size  Location     Type
 29324 ;;  b               1    1[COMRAM] unsigned char 
 29325 ;; Return value:  Size  Location     Type
 29326 ;;		None               void
 29327 ;; Registers used:
 29328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29329 ;; Tracked objects:
 29330 ;;		On entry : 0/0
 29331 ;;		On exit  : 0/0
 29332 ;;		Unchanged: 0/0
 29333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29334 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29338 ;;Total ram usage:        2 bytes
 29339 ;; Hardware stack levels used:    1
 29340 ;; This function calls:
 29341 ;;		Nothing
 29342 ;; This function is called by:
 29343 ;;		_LED_indicator
 29344 ;; This function uses a non-reentrant model
 29345 ;;
 29346                           
 29347                           	psect	text135
 29348  015F06                     __ptext135:
 29349                           	opt stack 0
 29350  015F06                     i2_LED_OUT:
 29351                           	opt stack 20
 29352                           
 29353                           ;incstack = 0
 29354                           ;i2LED_OUT@b stored from wreg
 29355  015F06  6E02               	movwf	i2LED_OUT@b,c
 29356                           
 29357                           ;tasks.h: 126: port[b].flag.led_flag = value;
 29358  015F08  5002               	movf	i2LED_OUT@b,w,c
 29359  015F0A  0D17               	mullw	23
 29360  015F0C  0E16               	movlw	22
 29361  015F0E  26F3               	addwf	prodl,f,c
 29362  015F10  0E00               	movlw	0
 29363  015F12  22F4               	addwfc	prodh,f,c
 29364  015F14  0E00               	movlw	low _port
 29365  015F16  24F3               	addwf	prodl,w,c
 29366  015F18  6ED9               	movwf	fsr2l,c
 29367  015F1A  0E03               	movlw	high _port
 29368  015F1C  20F4               	addwfc	prodh,w,c
 29369  015F1E  6EDA               	movwf	fsr2h,c
 29370  015F20  B001               	btfsc	i2LED_OUT@value,0,c
 29371  015F22  D003               	bra	i2u891_45
 29372  015F24  0103               	movlb	3	; () banked
 29373  015F26  96DF               	bcf	indf2,3,c
 29374  015F28  D002               	bra	i2u891_46
 29375  015F2A                     i2u891_45:
 29376  015F2A  0103               	movlb	3	; () banked
 29377  015F2C  86DF               	bsf	indf2,3,c
 29378  015F2E                     i2u891_46:
 29379                           
 29380                           ;tasks.h: 127: switch (b) {
 29381  015F2E  D012               	goto	i2l8586
 29382  015F30                     i2l642:
 29383                           
 29384                           ;tasks.h: 129: LATB7 = value;
 29385  015F30  A001               	btfss	i2LED_OUT@value,0,c
 29386  015F32  D002               	goto	i2u892_40
 29387  015F34  8E8A               	bsf	3978,7,c	;volatile
 29388  015F36  0012               	return	
 29389  015F38                     i2u892_40:
 29390  015F38  9E8A               	bcf	3978,7,c	;volatile
 29391                           
 29392                           ;tasks.h: 130: break;
 29393  015F3A  0012               	return	
 29394  015F3C                     i2l644:
 29395                           
 29396                           ;tasks.h: 132: LATB6 = value;
 29397  015F3C  A001               	btfss	i2LED_OUT@value,0,c
 29398  015F3E  D002               	goto	i2u894_40
 29399  015F40  8C8A               	bsf	3978,6,c	;volatile
 29400  015F42  0012               	return	
 29401  015F44                     i2u894_40:
 29402  015F44  9C8A               	bcf	3978,6,c	;volatile
 29403                           
 29404                           ;tasks.h: 133: break;
 29405  015F46  0012               	return	
 29406  015F48                     i2l645:
 29407                           
 29408                           ;tasks.h: 135: LATC2 = value;
 29409  015F48  A001               	btfss	i2LED_OUT@value,0,c
 29410  015F4A  D002               	goto	i2u896_40
 29411  015F4C  848B               	bsf	3979,2,c	;volatile
 29412  015F4E  0012               	return	
 29413  015F50                     i2u896_40:
 29414  015F50  948B               	bcf	3979,2,c	;volatile
 29415                           
 29416                           ;tasks.h: 137: }
 29417                           
 29418                           ;tasks.h: 136: break;
 29419  015F52  0012               	return	
 29420  015F54                     i2l8586:
 29421  015F54  5002               	movf	i2LED_OUT@b,w,c
 29422                           
 29423                           ; Switch size 1, requested type "space"
 29424                           ; Number of cases is 3, Range of values is 0 to 2
 29425                           ; switch strategies available:
 29426                           ; Name         Instructions Cycles
 29427                           ; simple_byte           10     6 (average)
 29428                           ;	Chosen strategy is simple_byte
 29429  015F56  0A00               	xorlw	0	; case 0
 29430  015F58  B4D8               	btfsc	status,2,c
 29431  015F5A  D7EA               	goto	i2l642
 29432  015F5C  0A01               	xorlw	1	; case 1
 29433  015F5E  B4D8               	btfsc	status,2,c
 29434  015F60  D7ED               	goto	i2l644
 29435  015F62  0A03               	xorlw	3	; case 2
 29436  015F64  A4D8               	btfss	status,2,c
 29437  015F66  0012               	return	
 29438  015F68  D7EF               	goto	i2l645
 29439  015F6A                     __end_ofi2_LED_OUT:
 29440                           	opt stack 0
 29441                           pclatu	equ	0xFFB
 29442                           pclath	equ	0xFFA
 29443                           tblptru	equ	0xFF8
 29444                           tblptrh	equ	0xFF7
 29445                           tblptrl	equ	0xFF6
 29446                           tablat	equ	0xFF5
 29447                           prodh	equ	0xFF4
 29448                           prodl	equ	0xFF3
 29449                           intcon	equ	0xFF2
 29450                           intcon2	equ	0xFF1
 29451                           postinc0	equ	0xFEE
 29452                           fsr0h	equ	0xFEA
 29453                           fsr0l	equ	0xFE9
 29454                           wreg	equ	0xFE8
 29455                           indf1	equ	0xFE7
 29456                           postinc1	equ	0xFE6
 29457                           postdec1	equ	0xFE5
 29458                           fsr1h	equ	0xFE2
 29459                           fsr1l	equ	0xFE1
 29460                           indf2	equ	0xFDF
 29461                           postinc2	equ	0xFDE
 29462                           postdec2	equ	0xFDD
 29463                           plusw2	equ	0xFDB
 29464                           fsr2h	equ	0xFDA
 29465                           fsr2l	equ	0xFD9
 29466                           status	equ	0xFD8
 29467                           pclatu	equ	0xFFB
 29468                           pclath	equ	0xFFA
 29469                           tblptru	equ	0xFF8
 29470                           tblptrh	equ	0xFF7
 29471                           tblptrl	equ	0xFF6
 29472                           tablat	equ	0xFF5
 29473                           prodh	equ	0xFF4
 29474                           prodl	equ	0xFF3
 29475                           intcon	equ	0xFF2
 29476                           intcon2	equ	0xFF1
 29477                           postinc0	equ	0xFEE
 29478                           fsr0h	equ	0xFEA
 29479                           fsr0l	equ	0xFE9
 29480                           wreg	equ	0xFE8
 29481                           indf1	equ	0xFE7
 29482                           postinc1	equ	0xFE6
 29483                           postdec1	equ	0xFE5
 29484                           fsr1h	equ	0xFE2
 29485                           fsr1l	equ	0xFE1
 29486                           indf2	equ	0xFDF
 29487                           postinc2	equ	0xFDE
 29488                           postdec2	equ	0xFDD
 29489                           plusw2	equ	0xFDB
 29490                           fsr2h	equ	0xFDA
 29491                           fsr2l	equ	0xFD9
 29492                           status	equ	0xFD8
 29493                           
 29494                           	psect	rparam
 29495  0000                     pclatu	equ	0xFFB
 29496                           pclath	equ	0xFFA
 29497                           tblptru	equ	0xFF8
 29498                           tblptrh	equ	0xFF7
 29499                           tblptrl	equ	0xFF6
 29500                           tablat	equ	0xFF5
 29501                           prodh	equ	0xFF4
 29502                           prodl	equ	0xFF3
 29503                           intcon	equ	0xFF2
 29504                           intcon2	equ	0xFF1
 29505                           postinc0	equ	0xFEE
 29506                           fsr0h	equ	0xFEA
 29507                           fsr0l	equ	0xFE9
 29508                           wreg	equ	0xFE8
 29509                           indf1	equ	0xFE7
 29510                           postinc1	equ	0xFE6
 29511                           postdec1	equ	0xFE5
 29512                           fsr1h	equ	0xFE2
 29513                           fsr1l	equ	0xFE1
 29514                           indf2	equ	0xFDF
 29515                           postinc2	equ	0xFDE
 29516                           postdec2	equ	0xFDD
 29517                           plusw2	equ	0xFDB
 29518                           fsr2h	equ	0xFDA
 29519                           fsr2l	equ	0xFD9
 29520                           status	equ	0xFD8
 29521                           
 29522                           	psect	temp
 29523  000058                     btemp:
 29524                           	opt stack 0
 29525  000058                     	ds	1
 29526  0000                     int$flags	set	btemp
 29527                           pclatu	equ	0xFFB
 29528                           pclath	equ	0xFFA
 29529                           tblptru	equ	0xFF8
 29530                           tblptrh	equ	0xFF7
 29531                           tblptrl	equ	0xFF6
 29532                           tablat	equ	0xFF5
 29533                           prodh	equ	0xFF4
 29534                           prodl	equ	0xFF3
 29535                           intcon	equ	0xFF2
 29536                           intcon2	equ	0xFF1
 29537                           postinc0	equ	0xFEE
 29538                           fsr0h	equ	0xFEA
 29539                           fsr0l	equ	0xFE9
 29540                           wreg	equ	0xFE8
 29541                           indf1	equ	0xFE7
 29542                           postinc1	equ	0xFE6
 29543                           postdec1	equ	0xFE5
 29544                           fsr1h	equ	0xFE2
 29545                           fsr1l	equ	0xFE1
 29546                           indf2	equ	0xFDF
 29547                           postinc2	equ	0xFDE
 29548                           postdec2	equ	0xFDD
 29549                           plusw2	equ	0xFDB
 29550                           fsr2h	equ	0xFDA
 29551                           fsr2l	equ	0xFD9
 29552                           status	equ	0xFD8


Data Sizes:
    Strings     1022
    Constant    229
    Data        4
    BSS         2517
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      87
    BANK0           160     72     160
    BANK1           256    201     256
    BANK2           256    205     243
    BANK3           256    100     233
    BANK4           256      0     164
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    command_operation@opland3	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland3(BANK2[100]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3982_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3982_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3982_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3982_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2715$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S2705$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2705$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2681$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2681$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2681$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2681$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    F9693.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    command_operation@opland2	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK3[100]), 

    command_operation@opland1	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), 

    command_operation@opcode	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opcode(BANK1[100]), 

    comm_at@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    RTCC_adjust_time_button@cnt_dec	PTR struct button size(2) Largest target is 69
		 -> port(BANK3[69]), 

    RTCC_adjust_time_button@cnt_inc	PTR struct button size(2) Largest target is 69
		 -> port(BANK3[69]), 

    RTCC_adjust_time_button@mode	PTR struct button size(2) Largest target is 4
		 -> ctmu_m(BANK0[4]), 

    RTCC_adjust_time_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_adjust_time_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    display_time_1602@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_1602@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_93(CODE[2]), STR_92(CODE[11]), STR_91(CODE[3]), STR_90(CODE[16]), 
		 -> STR_89(CODE[3]), STR_88(CODE[19]), STR_87(CODE[2]), STR_86(CODE[8]), 
		 -> STR_85(CODE[2]), STR_84(CODE[6]), STR_83(CODE[3]), STR_82(CODE[16]), 
		 -> STR_81(CODE[3]), STR_80(CODE[19]), STR_79(CODE[2]), STR_78(CODE[8]), 
		 -> STR_77(CODE[2]), STR_76(CODE[7]), STR_75(CODE[3]), STR_74(CODE[16]), 
		 -> STR_73(CODE[3]), STR_72(CODE[19]), STR_71(CODE[2]), STR_70(CODE[8]), 
		 -> STR_69(CODE[2]), STR_68(CODE[5]), STR_67(CODE[2]), STR_66(CODE[8]), 
		 -> STR_64(CODE[2]), STR_63(CODE[6]), STR_60(CODE[5]), STR_59(CODE[11]), 
		 -> STR_58(CODE[6]), STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), 
		 -> STR_54(CODE[2]), STR_53(CODE[2]), STR_52(CODE[2]), STR_51(CODE[12]), 
		 -> STR_50(CODE[3]), STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[10]), 
		 -> STR_46(CODE[4]), STR_45(CODE[9]), STR_43(CODE[2]), STR_42(CODE[5]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK3[100]), rx_loop@opland1(BANK2[100]), rx_loop@opcode(BANK1[100]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK3[100]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> comm_disp@str(BANK0[10]), tx_send_dec@str(BANK0[10]), display_LCD@str(BANK1[10]), display_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_98(CODE[9]), STR_97(CODE[17]), STR_24(CODE[14]), STR_23(CODE[8]), 
		 -> STR_22(CODE[7]), STR_21(CODE[12]), STR_20(CODE[13]), STR_19(CODE[16]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[16]), STR_15(CODE[2]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[4]), 
		 -> display_LCD@str(BANK1[10]), STR_10(CODE[15]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[12]), 
		 -> STR_3(CODE[10]), STR_2(CODE[10]), weekday_3char(CODE[28]), STR_1(CODE[3]), 
		 -> display_dec@str(BANK0[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK0[4]), port(BANK3[69]), 

    delay_set@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    delay_timer_interrupt@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 490
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_94(CODE[2]), STR_65(CODE[18]), 
		 -> STR_62(CODE[36]), STR_61(CODE[24]), STR_44(CODE[490]), STR_41(CODE[2]), 
		 -> STR_40(CODE[3]), STR_39(CODE[3]), STR_38(CODE[3]), comm_disp@str(BANK0[10]), 
		 -> STR_37(CODE[2]), STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[3]), 
		 -> STR_33(CODE[2]), STR_32(CODE[8]), STR_31(CODE[2]), STR_30(CODE[3]), 
		 -> STR_29(CODE[3]), STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[3]), tx_send_dec@str(BANK0[10]), weekday_3char(CODE[28]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK0[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK4[100]), main_init@txbuf(BIGRAMl[2000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _integrating->i2___lldiv
    _charge_time_count->_EEP_write32
    _EEP_write32->i2_I2C_Start
    i2_I2C_Stop->i2_I2C_IdleCheck
    i2_I2C_Start->i2_I2C_IdleCheck
    i2_I2C_Send->i2_I2C_IdleCheck
    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _main->_rx_loop
    _sleep_loop->_I2C_LCD_SetCursor
    _rx_loop->_command_operation
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_comm_at
    _my_atoi->___wmul
    _ctmu_set_ratio->___lwdiv
    _comm_disp->_my_utoa
    _tx_sendn->___lwdiv
    _print_time->_tx_send_dec
    _tx_send_dec->_my_utoa
    _tx_sends->_ringbuf_put
    _tx_send->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _normal_mode_loop->_RTCC_adjust_time_button
    _port_loop->_delay_set
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_my_utoa
    _my_utoa->___lwdiv
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    ___llmod->___lldiv
    _RTCC_adjust_time_button->_RTCC_adjust_time_dec
    _RTCC_adjust_time_button->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _ctmu_loop->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _EEP_read32->_I2C_rStart
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rx_loop
    _normal_mode_loop->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_rx_loop

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_rx_loop

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  417941
                                            204 BANK2      1     1      0
                         _EEP_read32
                            _LED_OUT
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                           _USB_loop
                          _ctmu_loop
                     _ctmu_set_ratio
                          _delay_set
                          _main_init
                   _normal_mode_loop
                            _rx_loop
                         _sleep_loop
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0   11817
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            _LED_OUT
                                _OUT
 ---------------------------------------------------------------------------------
 (1) _rx_loop                                            507   507      0  196325
                                             70 BANK0      2     2      0
                                              0 BANK1    201   201      0
                                              0 BANK2    204   204      0
                                              0 BANK3    100   100      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1308
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   10     2      8  166513
                                             60 BANK0     10     2      8
                            _comm_at
                          _comm_disp
                     _ctmu_set_ratio
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4   10238
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    9034
                                             28 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   14950
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _comm_disp                                           16    15      1   42427
                                             43 BANK0     16    15      1
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                            _my_utoa
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sendn                                             6     3      3   10314
                                             35 BANK0      6     3      3
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (3) _comm_at                                              5     0      5   52048
                                             55 BANK0      5     0      5
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _print_time                                           0     0      0   27032
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (4) _tx_send_dec                                         12    11      1   17416
                                             43 BANK0     12    11      1
                            _my_utoa
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sends                                             2     0      2    6385
                                             15 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    3231
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_caltime                                    4     0      4   15949
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (1) _normal_mode_loop                                     0     0      0  135194
                           _Auto_cut
            _RTCC_adjust_time_button
                        _display_LCD
                          _port_loop
 ---------------------------------------------------------------------------------
 (2) _port_loop                                            1     1      0    4934
                                              4 BANK0      1     1      0
                            _LED_OUT
                                _OUT
                          _delay_set
 ---------------------------------------------------------------------------------
 (3) _delay_set                                            4     0      4    1757
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _LED_OUT                                              2     1      1    1225
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         14    14      0   74273
                                              0 BANK1     14    14      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                       _display_port
                  _display_time_1602
                            _my_utoa
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    5     1      4   33510
                                             55 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   16481
                                             43 BANK0     12    11      1
                       _I2C_LCD_Puts
                            _my_utoa
 ---------------------------------------------------------------------------------
 (5) _my_utoa                                              8     3      5   10161
                                             35 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2520
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0    1256
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _display_port                                         0     0      0    8469
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    3643
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    4826
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1688
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _RTCC_adjust_time_button                              6     0      6   46795
                                             63 BANK0      6     0      6
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_toggle                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_inc                                10     6      4   23071
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_dec                                10     6      4   23071
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_epoch                                      4     0      4   11213
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    9218
                                             33 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    5648
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1278
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     853
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_cursor                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    9192
                                             28 BANK0      3     3      0
                                _ADC
                                 _IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    8108
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _CTMU_read (ARG)
                                 _IN (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     706
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _IN                                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    5555
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1361
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    2751
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0    1256
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0    1256
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    8697
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (2) _button_timer_interrupt                               5     2      3    1979
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    3915
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2803
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    2667
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   13932
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    3200
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2028
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1049
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    2741
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    4772
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    6817
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_RTCC                                       4     0      4    6817
                                             40 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (5) _caltime_to_epoch                                    15    11      4    5090
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _month_length                                         6     5      1    2179
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (5) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (6) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EEP_read32                                          36    32      4    2589
                                              6 BANK0     32    28      4
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           4     0      4     717
                                              2 BANK0      4     0      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1    1098
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          2     2      0      96
                                              2 BANK0      2     2      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 14    14      0   32120
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                  _charge_time_count
              _delay_timer_interrupt
                        _integrating
 ---------------------------------------------------------------------------------
 (10) _integrating                                         9     9      0    1149
                                             13 COMRAM     9     9      0
                        _EEP_write32
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (11) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) _delay_timer_interrupt                               4     2      2     177
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _charge_time_count                                   9     9      0     891
                                             11 COMRAM     9     9      0
                        _EEP_write32
 ---------------------------------------------------------------------------------
 (11) _EEP_write32                                         7     2      5     669
                                              4 COMRAM     7     2      5
                         i2_I2C_Send
                        i2_I2C_Start
                         i2_I2C_Stop
 ---------------------------------------------------------------------------------
 (12) i2_I2C_Stop                                          0     0      0      22
                    i2_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (12) i2_I2C_Start                                         2     1      1      92
                                              2 COMRAM     2     1      1
                    i2_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (12) i2_I2C_Send                                          1     1      0      44
                                              2 COMRAM     1     1      0
                    i2_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (13) i2_I2C_IdleCheck                                     2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _USB_ISR                                             0     0      0   28817
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   28817
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   16656
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16359
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12432
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4333
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4218
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3835
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (14) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                          i2_LED_OUT
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i2_LED_OUT                                           2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEP_read32
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
   _LED_OUT
   _OUT
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _ctmu_loop
     _CTMU_read
       ___lldiv
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     _button_timer_interrupt
       _CTMU_read (ARG)
         ___lldiv
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
   _ctmu_set_ratio
     _CTMU_read
       ___lldiv
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     ___wmul
       _ADC (ARG)
       _CTMU_read (ARG)
         ___lldiv
       _IN (ARG)
   _delay_set
   _main_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_mode_loop
     _Auto_cut
       _ADC
       _IN
       _OUT
       ___wmul
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     _RTCC_adjust_time_button
       _RTCC_adjust_time_cursor
       _RTCC_adjust_time_dec
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_inc
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_toggle
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod
       _display_port
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _display_time_1602
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
       _my_utoa
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod (ARG)
     _port_loop
       _LED_OUT
       _OUT
       _delay_set
   _rx_loop
     _command_operation
       _comm_at
         _RTCC_from_caltime
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         _print_time (ARG)
           _tx_send
             _ringbuf_put
               _ringbuf_num
           _tx_send_dec
             _my_utoa
               ___lldiv (ARG)
               ___llmod (ARG)
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   _IN (ARG)
               ___lwmod (ARG)
             _tx_sends
               _ringbuf_put
                 _ringbuf_num
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends (ARG)
           _ringbuf_put
             _ringbuf_num
       _comm_disp
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod
         _my_utoa
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod (ARG)
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_sendn
           ___lwdiv
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod
           _tx_send
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___wmul
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       _month_length
         ___awmod
       _my_atoi
         ___wmul
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       _my_strcmp
       _print_time
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_send_dec
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _tx_send
       _ringbuf_put
         _ringbuf_num
     _tx_sendn
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod
       _tx_send
         _ringbuf_put
           _ringbuf_num
     _tx_sends
       _ringbuf_put
         _ringbuf_num
   _sleep_loop
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_OUT
     _OUT

 _ISR (ROOT)
   _LED_indicator
     i2_LED_OUT
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _charge_time_count
     _EEP_write32
       i2_I2C_Send
         i2_I2C_IdleCheck
       i2_I2C_Start
         i2_I2C_IdleCheck
       i2_I2C_Stop
         i2_I2C_IdleCheck
   _delay_timer_interrupt
   _integrating
     _EEP_write32
       i2_I2C_Send
         i2_I2C_IdleCheck
       i2_I2C_Start
         i2_I2C_IdleCheck
       i2_I2C_Stop
         i2_I2C_IdleCheck
     i2___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A4      14       64.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     64      E9      12       91.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     CD      F3      10       94.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      57       1       92.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     477       8        0.0%
DATA                 0      0     C47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 10 22:38:47 2015

               charge_time_count@it_cache 02CD                           get_string_usb@s 00C2  
                              _USB_SD_Ptr FB1B                           EEP_write32@data 0006  
                        EEP_write32@Reg_h 000A                              ?_display_LCD 0001  
                        EEP_write32@Reg_l 0005                         _charge_time_count 3CDC  
                      __size_of_I2C_Start 0030                              ?_display_dec 00E0  
                           my_strcmp@str1 00B5                             my_strcmp@str2 00B7  
                                      _IN 678C                                        _d1 01DD  
                            ___awdiv@sign 00BA                 __size_of_normal_mode_loop 00BA  
                                      _ms 01D9                              ?_EEP_write32 0005  
                           _USBDeviceInit 2E36                       ___wmul@multiplicand 00CD  
                      i2___lwdiv@dividend 0001                         ??_RTCC_from_epoch 00EA  
                      __size_of_CDCInitEP 0070                        ?_charge_time_count 0001  
                            __CFG_CP0$OFF 000000                                       ?_IN 0001  
                            _rx_loop$5269 02C8                                       IN@b 00B5  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                                     l142 62B8                                       l137 64DA  
                                     l234 5C5E                                       l325 682C  
             __end_of_USBStdGetDscHandler 3396                                       l334 6A82  
                                     l319 6696                                       l247 4DB0  
                                     l343 6598                                       l159 66F6  
                                     _ADC 66D6                                       l440 4964  
                                     l434 51C0                                       l282 1B2C  
                                     l530 6A9A                                       l283 1B54  
                                     l355 6528                                       l284 1B7A  
                                     l285 1BA0                                       l541 6060  
                                     l453 287C                                       l390 3014  
                                     l286 1BC4                                       l287 1BE8  
                                     l543 606E                                       l535 6036  
                                     l288 1C0C                                       l289 1C30  
                                     l537 6044                                       l626 5DEA  
                                     l482 5A58                                       l642 5D78  
                                     l539 6052                                       l628 5DF8  
                                     l644 5D86                                       l389 2FC6  
                                     l901 572A                                       l629 5E06  
                                     l645 5D94                                       l590 6374  
                                     l911 52C0                                       _BDT 000D00  
                                     l942 2B12                                       l873 1208  
                                     l858 0EBE                                       l867 0F8A  
                                     l869 10B4                                       l895 502A  
                                     l896 503C                                       l978 6A52  
                                     _GIE 007F97                                       _ISR 0008  
                                     _UIE 000F36                               comm_at@hand 00EC  
                                     _UIR 000F62                                       _OUT 5DBA  
                       get_string_usb@len 00C4                             ?_get_quot_rem 00CE  
                           ?_display_port 0001                               EEP_read32@d 00D6  
                      caltime_to_epoch@ep 00D0                        caltime_to_epoch@ct 00CE  
                              _USBSuspend 683C                         _RTCC_from_caltime 65A4  
                             ?i2_I2C_Send 0001                              ___awmod@sign 00BA  
                     __size_of_I2C_rStart 002C                      __size_of_I2C_Receive 0030  
                    USBStdSetCfgHandler@i 0015                               ?i2_I2C_Stop 0001  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 3396                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0045               RTCC_adjust_time_button@mode 00F4  
                     ??_charge_time_count 000C                   _RTCC_adjust_time_button 3754  
                 _RTCC_adjust_time_cursor 6028                        ?_RTCC_from_caltime 00E6  
                                    ??_IN 00B5                     ??_USBCtrlTrfRxService 0001  
                            _I2C_LCD_Putc 64FC                              _I2C_LCD_Puts 593A  
                __size_ofi2_USBDeviceInit 0144                            ??_getsUSBUSART 00BF  
                                    ?_ADC 00B5                  USBEnableEndpoint@options 0009  
                 _RTCC_adjust_time_toggle 6A8A                         ??_I2C_LCD_Command 00B9  
                         __end_of_LED_OUT 5DBA                                      ?_ISR 0001  
                  __end_of_get_string_usb 632C                                      ?_OUT 00B5  
                            _I2C_LCD_init 6190                                      l1200 6562  
                                    l1201 6560                                      l1139 2EAC  
                                    l1502 2BFE                USBConfigureEndpoint@handle 0007  
                                    l1497 2BA2                                      l1931 5C52  
                                    l1941 5FC2                                      OUT@b 00B6  
                                    l1878 4F80                                      l1888 56D6  
                      __CFG_WPFP$PAGE_127 000000                                      l9400 494C  
                                    l9404 6A06                                      l9412 5D0A  
                                    l9502 4F04                                      l9430 4E4A  
                                    l9408 5CE4                                      l9504 4F14  
                                    l9440 4E7A                                      l9424 4E34  
                                    l9514 4F6E                                      l9506 4F1A  
                                    l9524 5C02                                      l9436 4E68  
                                    l9452 4EB8                                      l9620 5A84  
                                    l9606 44E2                                      l9526 5C0E  
                                    l9438 4E74                                      l9480 54C0  
                                    l9472 549A                                      l9536 5C44  
                                    l9528 5C14                                      l9456 4ECC  
                                    l9448 4EAA                                      l9552 5FB4  
                                    l9544 5F7E                                      l9810 4D7C  
                                    l9730 28F2                                      l9650 5968  
                                    l9546 5F8A                                      l9618 5A66  
                                    l9562 5EDA                                      l9802 5CC4  
                                    l9492 5506                                      l9484 54E4  
                                    l9476 54AE                                      l9468 548A  
                                    l9388 4130                                      l9548 5F90  
                                    l9628 5AC4                                      l9478 54BA  
                                    l9750 1DE2                                      l9806 4D72  
                                    l9734 28FA                                      l9558 5E9E  
                                    l9488 54F2                                      l9760 1E46  
                                    l9904 661A                                      l9728 28EE  
                                    l9656 599A                                      l9770 1ECE  
                                    l9754 1DEC                                      l9762 1E4A  
                                    l9922 4588                                      l9914 4554  
                                    l9658 59C2                                      l9748 1DDC  
                                    l9908 662C                                      l9766 1E6A  
                                    l9934 45EE                                      l9838 4DD2  
                                    l9950 566A                                      STR_1 FFDA  
                                    l9952 567A                                      l9792 5C6E  
                                    STR_2 FF55                                      STR_3 FF41  
                                    l9954 5680                                      l9874 617E  
                                    l9786 6126                                      l9890 3A70  
                                    STR_4 FF09                                      STR_5 FEF1  
                                    l9972 67E6                                      l9892 3A76  
                                    l9796 5C90                                      STR_6 FF36  
                                    STR_7 FF15                                      l9974 67F8  
                                    l9958 56C4                                      STR_8 FE4B  
                                    STR_9 FECB                                      l9994 5592  
                                    l9986 551C                                      l9996 5598  
                   ??_USBCtrlTrfTxService 0001                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      _UEIR 000F63  
                                    _UCON 000F65                           _CDCDataInHandle 0087  
                            comm_at@value 00F0                       ??_RTCC_from_caltime 00EA  
  USBStdFeatureReqHandler@current_ep_data 0018                                      _pDst 003B  
                                    _main 2982                  ??i2_USBTransferOnePacket 0005  
                button_timer_interrupt@bt 00D8                                      _port 0300  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0005                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 01D5                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 6A8A                           _USBDeviceAttach 6534  
                                    btemp 0058                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 6B02                          __end_of_I2C_Stop 6AF2  
                                    pclat 000FFA                              ?i2_I2C_Start 0003  
                             _tx_send_dec 60E0                          __end_of_I2C_init 6ADE  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00EC                          __end_of_ADC_init 69E2  
                           __CFG_IESO$OFF 000000                          comm_disp@content 00EF  
              RTCC_adjust_time_dec@i_2050 00F2                        __size_of_CTMU_init 0028  
                      __size_of_CTMU_read 00C2                __end_of_USBCheckStdRequest 40B8  
                  ??_USBCtrlTrfOutHandler 0003                 __end_of_charge_time_count 3DE0  
                            comm_disp@str 00E1                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0015                             _I2C_LCD_Clear 6A58  
                                   ??_ADC 00B7                                     ADC@ch 00B8  
                           ADC_init@p_ref 00B5                                     ??_ISR 001F  
                  __size_of_I2C_IdleCheck 001E                                     ??_OUT 00B6  
                ??_USBStdGetStatusHandler 0001                            ?_USBDeviceInit 0001  
                      __size_ofi2_LED_OUT 0064                         ??_RTCC_to_caltime 00B9  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l10000 53CC                                     l10100 23EA  
                                   l10012 5448                                     l10006 5418  
                                   l10112 24C4                                     l10008 5424  
                                   l11000 04B4                                     l10106 2450  
                                   l10114 24DC                                     l10210 3EE2  
                                   l11010 0538                                     l10140 25B4  
                                   l10132 2578                                     l10108 2458  
                                   l10220 3F58                                     l10044 3204  
                                   l10300 17B2                                     l11020 05BC  
                                   l11004 04F0                                     l11012 0544  
                                   l10118 2510                                     l10222 3F6A  
                                   l10214 3F14                                     l10230 3FAE  
                                   l10046 320A                                     l10206 5DA2  
                                   l11102 0F0A                                     l11022 05C8  
                                   l11006 04FC                                     l10400 2B78  
                                   l10320 2E8C                                     l10160 26BC  
                                   l10144 262A                                     l10136 2596  
                                   l10128 255E                                     l10080 2314  
                                   l10216 3F26                                     l11032 064C  
                                   l11016 0580                                     l10402 2B82  
                                   l10170 2774                                     l10226 3F9C  
                                   l11202 12FE                                     l10250 1386  
                                   l11050 0724                                     l11042 06D0  
                                   l11026 0604                                     l11034 0658  
                                   l10412 2BAE                                     l10332 2EBA  
                                   l10340 2ED2                                     l10316 2E82  
                                   l10068 607C                                     l10164 2728  
                                   l10148 2644                                     l10092 23C6  
                                   l10084 2332                                     l10076 22FA  
                                   l11204 1302                                     l11108 0F3E  
                                   l11060 07A8                                     l11044 06DC  
                                   l11028 0610                                     l10406 2B92  
                                   l10502 428A                                     l11230 62F8  
                                   l10190 679A                                     l10182 6792  
                                   l10158 26B4                                     l10166 2740  
                                   l11134 1068                                     l10246 6016  
                                   l10270 1526                                     l11054 0760  
                                   l11038 0694                                     l10432 2C2C  
                                   l10440 2C50                                     l10424 2C02  
                                   l10344 2EF2                                     l10096 23E0  
                                   l10088 2350                                     l11160 1176  
                                   l11072 0E3C                                     l11064 0E04  
                                   l11400 500E                                     l10264 14D8  
                                   l11048 0718                                     l11056 076C  
                                   l11320 1940                                     l11312 18EE  
                                   l11304 189C                                     l10442 2C5C  
                                   l10450 2C80                                     l10418 2BE6  
                                   l10354 2F62                                     l10514 64F2  
                                   l10186 6796                                     l10178 5E14  
                                   l11218 137A                                     l11170 11BC  
                                   l11082 0E9A                                     l11330 1996  
                                   l11322 1944                                     l11314 18F2  
                                   l11306 18A0                                     l10460 2CA8  
                                   l10452 2C8A                                     l11228 62F4  
                                   l11244 645A                                     l10348 2EFC  
                                   l10196 679E                                     l11084 0E9E  
                                   l11092 0EAA                                     l11068 0E0E  
                                   l10604 58F0                                     l10462 2CCC  
                                   l11246 645E                                     l10526 62BA  
                                   l11094 0EC2                                     l11406 501C  
                                   l11342 1A52                                     l11168 11B8  
                                   l11088 0EA6                                     l11352 1AAE  
                                   l11344 1A5A                                     l11336 1A12  
                                   l11328 1992                                     l11360 1ADC  
                                   l10458 2CA2                                     l11426 575A  
                                   l10650 1CA4                                     l10642 1C54  
                                   l11194 12BC                                     l11338 1A30  
                                   l11434 5294                                     l10492 4220  
                                   l10484 41DE                                     l10476 6956  
                                   l10900 0D7C                                     l10812 0976  
                                   l11348 1A6E                                     l10494 4228  
                                   l10486 41E8                                     l10670 1D72  
                                   l10662 1D1E                                     l10654 1CCC  
                                   l10646 1C7C                                     l10718 671A  
                                   l10822 09E0                                     l11390 4FC2  
                                   l11294 1800                                     l11454 5300  
                                   l11438 529E                                     l10760 3626  
                                   l10752 3834                                     l11384 4FB6  
                                   l10920 0088                                     l10498 4258  
                                   l10586 4BAE                                     l10594 4BCA  
                                   l10666 1D48                                     l10658 1CF4  
                                   l10674 1D9A                                     l10746 37F2  
                                   l10738 37C0                                     l11386 4FBA  
                                   l11394 4FC6                                     l10922 00A0  
                                   l10914 003C                                     l11298 1832  
                                   l11458 5318                                     l10588 4BC4  
                                   l10764 3630                                     l10852 0C6C  
                                   l10908 0D9E                                     l11396 4FDE  
                                   l10916 004C                                     l10774 372C  
                                   l10870 0CD2                                     l10790 080C  
                                   l10782 07B4                                     l10942 01B6  
                                   l10934 011A                                     l10776 374E  
                                   l10864 0CB0                                     l10952 0260  
                                   l10960 02FC                                     l11664 2A10  
                                   l11656 29E6                                     l10882 0D16  
                                   l10858 0C8E                                     l10938 0168  
                                   l10876 0CF4                                     l10796 082E  
                                   l10788 07EE                                     l10956 02AE  
                                   l10948 0212                                     l11668 2A1A  
                                   l10894 0D5A                                     l10990 0430  
                                   l10982 03DC                                     l10966 0356  
                                   l10888 0D38                                     l10976 0390  
                                   l10994 046C                                     l10978 03A0  
                                   l10986 03F4                                     l10998 04A8  
               __end_of_RTCC_from_caltime 65DA                                     ?_main 0001  
                 __size_of_put_string_usb 0042                            ??_get_quot_rem 00D2  
                          ??_display_port 00BF                           __end_of___awdiv 4ED6  
                                   _ADRES 000FC3                                     STR_10 FEAE  
                                   STR_11 FFD3                                     STR_12 FFE0  
                                   STR_20 FED8                                     STR_13 FFE3  
                                   STR_21 FEE5                                     STR_14 FFE6  
                                   STR_30 FFDD                                     STR_22 FF9B  
                                   STR_15 FF81                                     STR_31 FFF4  
                                   STR_23 FF8B                                     STR_40 FFE6  
                                   STR_32 FF83                                     STR_24 FEBD  
                                   STR_16 FE7E                                     STR_33 FFF2  
                                   STR_25 FFDA                                     STR_41 FF81  
                                   STR_17 FE6D                                     STR_26 FFF2  
                                   STR_50 FFEF                                     STR_34 FFD7  
                                   STR_42 FFC0                                     STR_18 FE5C  
                                   STR_35 FFF2                                     STR_43 FEEF  
                                   STR_27 FFF6                                     STR_51 FEFD  
                                   STR_19 FE9E                                     STR_28 FFF6  
                                   STR_52 FF99                                     STR_60 FFCA  
                                   STR_36 FFBB                                     STR_44 FC00  
                         __end_of___awmod 5510                                     STR_37 FFF2  
                                   STR_53 FFF8                                     STR_29 FFE9  
                                   STR_45 FF7A                                     STR_61 FE0E  
                                   STR_38 FFE0                                     STR_54 FF78  
                                   STR_46 FFB1                                     STR_70 FE31  
                                   STR_62 FDEA                                     STR_39 FFE3  
                                   STR_71 FFED                                     STR_55 FFD5  
                                   STR_63 FFAF                                     STR_47 FF4B  
                                   STR_64 FFA7                                     STR_80 FE26  
                                   STR_56 FFFC                                     STR_48 FF5F  
                                   STR_72 FE26                                     STR_81 FFEC  
                                   STR_57 FF81                                     STR_73 FFEC  
                                   STR_49 FF71                                     STR_65 FE39  
                                   STR_90 FE8E                                     STR_82 FE8E  
                                   STR_58 FFA9                                     STR_66 FF93  
                                   STR_74 FE8E                                     STR_67 FF78  
                                   STR_91 FFCC                                     STR_83 FFCC  
                                   STR_75 FFCC                                     STR_59 FF2B  
                                   STR_68 FFC5                                     STR_84 FFB5  
                                   STR_76 FFA2                                     STR_92 FF20  
                                   STR_77 FFED                                     STR_85 FFA7  
                                   STR_93 FFF0                                     STR_69 FFFA  
                                   STR_94 FDE8                                     STR_86 FE31  
                                   STR_78 FE31                                     STR_87 FFED  
                                   STR_79 FFED                                     STR_95 FFCF  
                                   STR_96 FFCF                                     STR_88 FE26  
                                   STR_97 FE4B                                     STR_89 FFEC  
                                   STR_98 FF68         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___lldiv 4F92                                     u10310 5ECC  
                                   u10400 44BE                                     u11200 5E02  
                                   u10320 5EFC                                     u10420 44D4  
                                   u11220 5E10                                     u12020 371C  
                                   u10500 598A                                     u10317 5EC2  
                                   u10350 66A2                                     u10430 44D6  
                                   u10510 59BC                                     u10327 5EF2  
                                   u10440 452E                                     u10450 4530  
                                   u10418 44C2                                     u11250 5D82  
                                   u10507 5980                                     u10380 448C  
                                   u11180 5DF4                           ___awdiv@divisor 00B7  
                                   u10517 59B2                                     u11245 5D72  
                                   u10390 448E                                     u11270 5D90  
                                   u11246 5D76                                     u11175 5DE4  
                                   u11600 41CE                                     u11176 5DE8  
                         __end_of___llmod 56E8                    __end_of_USBDeviceTasks 34DC  
                                   u11290 5D9E                                     u11460 2B68  
                                   u11608 41D2                                     u10690 4E0A  
                                   u11900 6838                                     u11468 2B6C  
                                   _LATB2 007C52                                     u13407 301A  
                                   u10695 4DFC                                     _LATA5 007C4D  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   u11665 69D2                                     u13337 652E  
                                   _LATA7 007C4F                                     u11850 1D0A  
                                   u11666 69D4                                     _LATB6 007C56  
                                   u11915 66CC                                     u13347 5996  
                                   _LATB7 007C57                                     u11916 66CE  
                                   u11860 1D34                                     u12900 3C92  
                                   u13357 6A66                                     u11870 1D5E  
                                   u12910 3CD0                                     u13367 659E  
                                   u11880 1D88                                     u12920 3CD2  
                                   u13377 67EE                                     u12850 3C10  
               ?_USBCtrlEPServiceComplete 0001                                     u13387 4D9C  
                                   u12860 3C12                                     u13397 4DA6  
                                   u12870 3C50                                     u12880 3C52  
                                   u12890 3C90                                     u11995 3658  
                         __end_of___lwdiv 5C5C                           __end_of___lwmod 5FCC  
                                   i2l334 6AAE                                     i2l319 68AE  
                                   i2l642 5F30                                     i2l644 5F3C  
                                   i2l645 5F48                                     i2l398 6438  
                                   i2l930 00B0                                     _UADDR 000F38  
                         ___awdiv@counter 00B9                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
                  __size_of_LED_indicator 0124        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 00C6                             EEP_read32@ans 00DA  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 564E  
                         __end_of_comm_at 6028                                     _sd000 FBFC  
                                   _sd001 FB66                                     _sd002 FB9A  
                     __size_of_EEP_read32 0162                      caltime_to_epoch@year 00D6  
                              i2memset@p1 0001                                     _colon 0095  
                      __size_of_RTCC_init 002E                           ?_get_string_usb 00C2  
                      __size_of_RTCC_loop 0046                          ringbuf_delete@rb 00B5  
                                   main@i 02CC                         __end_of_I2C_Start 66A6  
                         __end_of_my_atoi 55B0                                     tablat 000FF5  
                         __end_of_my_utoa 5ADE                       integrating@ic_cache 01C9  
                                   plusw2 000FDB                         __end_of_CDCInitEP 5E9C  
                  ?_delay_timer_interrupt 0001                          __end_of_USB_init 6AE8  
                        __end_of_USB_loop 5782                __size_of_ringbuf_backspace 008E  
                         __end_of_rx_loop 1AFA                              ?_integrating 0001  
                                   status 000FD8                           __end_of_tx_send 6A3C  
                        __end_ofi2_memset 6894                          __end_of_Delay_ms 6810  
                          delay_set@value 00B7                        __size_ofi2___awdiv 0084  
                       month_length@month 00BB                               CTMU_read@ch 00C5  
                      __size_ofi2___lldiv 0082                        __size_ofi2___lwdiv 0052  
                         putUSBUSART@data 00B5              __size_of_USBStdSetCfgHandler 00E2  
                            LED_OUT@value 00B5                            ?_I2C_LCD_Clear 0001  
                     __size_ofi2_I2C_Send 0016                           __initialization 5782  
                     __size_ofi2_I2C_Stop 000A                         i2___lldiv@divisor 0005  
                            __end_of_main 2B44                         i2___lldiv@counter 000D  
                   _control_signal_bitmap 004A                          __end_of_Auto_cut 3754  
                     ringbuf_init@bufsize 00B9                          RTCC_from_RTCC@ep 00DF  
                        RTCC_from_RTCC@ct 00DD                RTCC_adjust_time_inc@i_2037 00F2  
                ctmu_set_ratio@percentage 00D8                 __size_of_USBCtrlEPService 00CE  
                                  ??_main 00FD                             __activetblptr 000003  
                         ?_USBDeviceTasks 0001                 ??_RTCC_adjust_time_button 00FA  
               ??_RTCC_adjust_time_cursor 00B5                                 ??_LED_OUT 00B6  
                             ?_USBSuspend 0001                 ??_RTCC_adjust_time_toggle 00B5  
                       __end_of_CTMU_init 690E                         __end_of_CTMU_read 4E18  
                            _cdc_mem_type 0091                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 6A02                   __end_of_USBDeviceAttach 656C  
                        _CDCDataOutHandle 0089                         _getsUSBUSART$4371 00C0  
                        ___llmod@dividend 00C2                         _I2C_LCD_SetCursor 6760  
                     display_time_1602@ep 00EE                       display_time_1602@ct 00EC  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 00B5  
                               ??_USB_ISR 001F                        I2C_LCD_Command@ans 00BA  
                         getsUSBUSART@len 00BE                     __size_of_CDCTxService 018C  
                                  i2l1301 63FC                                    i2l1151 33C6  
                                  i2l1225 3E5A                                    i2l1161 3460  
                                  i2l1162 34D8                                    i2l1139 3542  
                                  i2l1163 3472                                    i2l1352 3FD6  
                                  i2l1361 403A                                    i2l1338 4D46  
                                  i2l1443 4744                                    i2l1291 50E8  
                                  i2l1292 506A                                    i2l1445 478E  
                                  i2l1293 5070                                    i2l1367 2074  
                                  i2l1288 505A                                    i2l1386 223A  
                       __end_ofi2_LED_OUT 5F6A                            __CFG_WDTEN$OFF 000000  
                                  i2l1931 6284                                    i2l6300 43EC  
                                  i2l1878 5BD2                                    i2l6240 4C16  
                                  i2l6144 6872                                    i2l7008 6AB8  
                                  i2l6410 212E                                    i2l6412 2130  
                                  i2l6404 20EA                                    i2l6324 325A  
                                  i2l6148 6882                                    i2l6316 4436  
                                  i2l6350 337E                                    i2l6270 55FE  
                                  i2l6432 21D4                                    i2l6416 214C  
                                  i2l6344 336E                                    i2l6336 330C  
                                  i2l6328 3272                                    i2l6442 221A  
                                  i2l6426 219E                                    i2l6346 3376  
                                  i2l6338 3314                                    i2l6362 5090  
                                  i2l6290 43B8                                    i2l6274 561A  
                                  i2l6460 22A8                                    i2l6452 2256  
                                  i2l6444 2226                                    i2l6428 21BA  
                                  i2l6372 50D0                                    i2l6702 3B80  
                                  i2l5822 64A4                                    i2l5830 511C  
                                  i2l5910 4770                                    i2l5902 4732  
                                  i2l6390 2070                                    i2l6294 43C0  
                                  i2l5808 587A                                    i2l6720 3FE0  
                                  i2l6632 3E04                                    i2l5818 6496  
                                  i2l5850 51A2                                    i2l6458 229C  
                                  i2l6722 3FE6                                    i2l7602 4A84  
                                  i2l6732 4008                                    i2l6724 3FEC  
                                  i2l6652 3E80                                    i2l7620 4AF2  
                                  i2l5838 5146                                    i2l5918 4798  
                                  i2l5942 6740                                    i2l6734 400E  
                                  i2l6750 4074                                    i2l7614 4AD2  
                                  i2l7606 4A8C                                    i2l7702 35EA  
                                  i2l6680 3AE4                                    i2l5936 6734  
                                  i2l6736 4014                                    i2l8520 33EC  
                                  i2l8512 33DC                                    i2l8610 5B20  
                                  i2l8602 5B02                                    i2l5962 463A  
                                  i2l5938 673A                                    i2l6746 4056  
                                  i2l7618 4AEC                                    i2l7562 666E  
                                  i2l9162 006A                                    i2l8620 5B40  
                                  i2l8612 5B24                                    i2l5972 4666  
                                  i2l5980 469E                                    i2l7564 6670  
                                  i2l9172 0086                                    i2l5982 46A6  
                                  i2l5990 46DE                                    i2l5958 4630  
                                  i2l6686 3B08                                    i2l6942 60DA  
                                  i2l6934 6092                                    i2l5894 4712  
                                  i2l8550 3456                                    i2l8542 342E  
                                  i2l8526 3412                                    i2l9158 005E  
                                  i2l8608 5B18                                    i2l8624 5B4A  
                                  i2l7680 3550                                    i2l7664 351E  
                                  i2l8536 3422                                    i2l8640 5B90  
                                  i2l8730 3952                                    i2l8714 387C  
                                  i2l6970 4D0C                                    i2l6698 3B66  
                                  i2l7586 63F8                                    i2l8570 3498  
                                  i2l8490 33AE                                    i2l8650 5BC4  
                                  i2l8642 5B94                                    i2l9178 0096  
                                  i2l8628 5B58                                    i2l8660 6252  
                                  i2l8724 38D4                                    i2l6956 4CC6  
                                  i2l7692 3586                                    i2l7668 3526  
                                  i2l8556 346A                                    i2l8662 625A  
                                  i2l8718 3884                                    i2l6982 4D50  
                                  i2l6958 4CCA                                    i2l8638 5B84  
                                  i2l8672 627A                                    i2l8664 625E  
                                  i2l6976 4D2C                                    i2l7696 358E  
                                  i2l7688 3568                                    i2l8576 34B8  
                                  i2l8680 634C                                    i2l8744 2CD4  
                                  i2l8586 5F54                                    i2l8738 3998  
                                  i2l8578 34D4                                    i2l8498 33BE  
                                  i2l8596 5AF2                                    i2l8772 3D30  
                                  i2l8764 3CE0                                    i2l8748 2CDC  
                                  i2l8758 2E32                                    i2l8768 3CE8  
                                  i2l8778 3DDC                        ?_I2C_LCD_SetCursor 00BB  
                                  _RCREG1 000FAF                             CDCTxService@i 00BF  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                  i2USBTransferOnePacket@ep 0005  
                       ??i2_USBDeviceInit 0009           __size_ofi2_USBTransferOnePacket 00BA  
                            ??_I2C_rStart 00BB                           i2I2C_Start@adrs 0004  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 6A58  
                           _LED_indicator 3878                        epoch_to_caltime@ep 00D8  
                      epoch_to_caltime@ct 00D6                  __size_ofi2_I2C_IdleCheck 0016  
                    get_string_usb@rx_len 00C7                         _shortPacketStatus 004F  
                     ??_I2C_LCD_SetCursor 00BC                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 00D6                   __size_of_ctmu_set_ratio 00E6  
              __size_of_charge_time_count 0104                           USBDeviceTasks@i 001E  
                   caltime_to_epoch@epoch 00D8               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 00B6                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 00BD                              ?_ringbuf_pop 00BD  
                            ?_ringbuf_num 00B5                              ?_ringbuf_put 00BD  
                   caltime_to_epoch@month 00DC                                    ___lmul 5CD2  
                            ?_putUSBUSART 00B5                           _caltime_to_RTCC 4964  
                                  ___wmul 65DA                        ??_epoch_to_caltime 00DA  
                               ??___awdiv 00B9                                 ??___awmod 00B9  
            __end_of_RTCC_adjust_time_dec 2796              __end_of_RTCC_adjust_time_inc 2532  
                                  _d_to_x 68BE                                 ??___lldiv 00BD  
                    __end_of_getsUSBUSART 4290                              ?_timer0_init 0001  
                               ??___llmod 00CA                         __end_of_RTCC_init 6732  
                            ?_timer1_init 00B5                                 ??___lwdiv 00D5  
                       __end_of_RTCC_loop 63BA                                 ??___lwmod 00B9  
                            ?_timer3_init 0001                         _USBEnableEndpoint 6486  
         __size_of_USBStdGetStatusHandler 00BA                          _normal_mode_loop 4F92  
                                  _ctmu_m 00AD                                    _memset 6610  
                                  clear_0 578A                                    clear_1 579C  
                                  clear_2 57A8                           put_string_usb@s 00C1  
                                  clear_3 57B4                                    clear_4 57C0  
                                  clear_5 57CC                                    clear_6 57D8  
                         __CFG_CLKOEC$OFF 000000                              rx_loop@ascii 02CA  
                        ___awdiv@quotient 00BB                           ___awmod@divisor 00B7  
                    __size_of_display_LCD 0650                           ___awmod@counter 00B9  
                                  _x_to_d 69E2                        ?_USBEnableEndpoint 0009  
                                  _rx_buf 01E8                __size_of_RTCC_from_caltime 0036  
                                  _usb_rx 02E3                                    _usb_tx 02EB  
                       _command_operation 0000                                    _tx_buf 009E  
                    __size_of_display_dec 0058                                 ??_comm_at 00F1  
                          i2___awdiv@sign 0006             __size_of_USBTransferOnePacket 00D8  
                    __size_of_EEP_write32 0044                 __size_of_caltime_to_epoch 0288  
                    rx_loop@comm_buf_init 01FF                        ?_command_operation 00F1  
                       __end_ofi2___awdiv 5B62                                 ?_I2C_Send 0001  
                            _CDCTxService 2B44                                 ?_I2C_Stop 0001  
                       __end_ofi2___lldiv 5BE4                         __end_ofi2___lwdiv 628E  
                            __mediumconst FB1A                             _cut_time_flag 004B  
                               ?_I2C_init 0001                 __end_of_I2C_LCD_SetCursor 678C  
                      __end_of_I2C_rStart 683C                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                 ??_my_atoi 00D3  
                                  tblptru 000FF8                                 ?_ADC_init 0001  
                     ??_USBEnableEndpoint 000A                            ?_I2C_IdleCheck 0001  
                               ??_my_utoa 00DD                                 ??_rx_loop 00FB  
                  delay_timer_interrupt@d 0001                                 ??_tx_send 00C4  
                             _CtrlTrfData 000D38                          __end_of_tx_sendn 5CD2  
                        __end_of_tx_sends 5F06                       ??_command_operation 00F9  
                    _controlTransferState 0049            RTCC_adjust_time_button@cnt_dec 00F8  
                    __CFG_LS48MHZ$SYS48X8 000000            RTCC_adjust_time_button@cnt_inc 00F6  
                              __accesstop 0060                   __end_of__initialization 580E  
                            __pbssBIGRAMl 04A4                              CTMU_read@sum 00C6  
                    __end_of_get_quot_rem 4890                      __end_of_display_port 3FC6  
                          ?_LED_indicator 0001                             ___rparam_used 000001  
                         ??_I2C_LCD_Clear 00BB                           _RTCC_from_epoch 697E  
                __size_of_USBStallHandler 0046                              ??_EEP_read32 00BF  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        LED_indicator@cnt 002D                      __size_ofi2_I2C_Start 002A  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 64C2  
                      i2___lldiv@dividend 0001                             __end_of_sd000 FC00  
                           __end_of_sd001 FB9A                             __end_of_sd002 FBCE  
                            __pidataBANK0 6B02                              __pidataBANK1 6B05  
                command_operation@opland1 00F3                  command_operation@opland2 00F5  
                command_operation@opland3 00F7          __size_of_USBCtrlEPAllowDataStage 009E  
               __end_of_command_operation 07AE             __size_of_USBConfigureEndpoint 0094  
             __end_of_USBCtrlTrfInHandler 4D56                           __CFG_DSWDTPS$G2 000000  
                              __end_of_IN 67B8                           _I2C_LCD_Command 656C  
                          _put_string_usb 6444                        __size_of_delay_set 0024  
                  i2_USBTransferOnePacket 5106                                 ?_USB_init 0001  
                               ?_USB_loop 0001                              ??i2_I2C_Send 0003  
                        I2C_LCD_Command@c 00B9                                ??_I2C_Send 00B7  
                       _CDCTxService$4419 00BD                              ??i2_I2C_Stop 0003  
                              ??_I2C_Stop 00B7                                _cdc_notice 02D9  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 0001  
                              _cdc_rx_len 0092                                ??_I2C_init 00B5  
                               ?_Delay_ms 00B5                             i2I2C_Start@rw 0003  
                              _cdc_tx_len 0094                                ??_ADC_init 00B5  
              caltime_to_epoch@month_1955 00D7                        __size_of_comm_disp 044A  
                ??_USBCtrlTrfSetupHandler 001B                        __end_of_EEP_read32 30FA  
                  RTCC_adjust_time_dec@ep 00EC                    RTCC_adjust_time_dec@ct 00EA  
                        ?_USBDeviceAttach 0001                    _USBStdGetStatusHandler 504C  
                      i2___lldiv@quotient 0009                    RTCC_adjust_time_inc@ep 00EC  
                  RTCC_adjust_time_inc@ct 00EA                        __size_of_main_init 00A6  
                              __pbssBANK0 0060                                __pbssBANK1 01C9  
                              __pbssBANK2 02CD                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                 ?_Auto_cut 0001  
                          LED_indicator@i 000C                        __size_of_ctmu_loop 0110  
                               ISR@cnt_t0 0033                                 ISR@cnt_t1 003F  
                 __end_of_caltime_to_RTCC 4A34                           _RTCC_to_caltime 51C0  
                            ?_tx_send_dec 00E0               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 006F                      __size_of_integrating 0166  
        __end_of_USBCtrlEPServiceComplete 3ED4               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FBEA                      USBCtrlTrfRxService@i 0001  
                      __end_ofi2_I2C_Send 6AB6                        __end_ofi2_I2C_Stop 6AFC  
                                 ?___lmul 00C2                                   ?___wmul 00CB  
                                 ?_d_to_x 0001                            i2LED_OUT@value 0001  
                  __end_of_put_string_usb 6486                         ??i2_I2C_IdleCheck 0001  
                                 ?_memset 00B5                      I2C_LCD_SetCursor@col 00BE  
                          ___lmul@product 00CA                                _device_dsc FBEA  
                    I2C_LCD_SetCursor@row 00BB                          _USBCtrlEPService 4A34  
                           ??_I2C_Receive 00B7                                   ?_x_to_d 0001  
                            I2C_Send@data 00B7                                _ep_data_in 007B  
             __end_of_USBCtrlTrfRxService 3BCC                        _USBCheckStdRequest 3FC6  
                              ??_USB_init 00BE                         _configDescriptor1 FB23  
                              ??_USB_loop 00C9                                   _LED_OUT 5D48  
                        ??_get_string_usb 00C6                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 00B5                        __size_of_my_strcmp 00A4  
                              ??i2_memset 0007               __end_of_USBCtrlTrfTxService 46E6  
                              ??_Delay_ms 00B7                       _USBStdSetCfgHandler 4376  
              __size_of_I2C_LCD_SetCursor 002C                        __size_of_port_loop 0582  
                  I2C_LCD_SetCursor@F8672 00FD                           __CFG_WDTPS$1024 000000  
                            tx_sendn@temp 00DC                                   _SPBRGH1 000F7F  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                 ??_delay_timer_interrupt 0003                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                                 _USB_ISR 6AFC                   __end_of_RTCC_from_epoch 69A0  
                    timer1_init@prescaler 00B7                      _RTCC_adjust_time_dec 2532  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 22CE  
                              ??_Auto_cut 00D1                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 00DB                             _cdc_trf_state 0093  
                         ??_LED_indicator 0009                         __end_of_delay_set 697E  
                         EEP_read32@Reg_h 00D5                           EEP_read32@Reg_l 00BB  
                           ?_month_length 00BB                       epoch_to_caltime@day 00DE  
                       RTCC_from_epoch@ep 00E8                         RTCC_from_epoch@ct 00E6  
                     epoch_to_caltime@num 00E2                                 _I2C_Start 6676  
                          I2C_Receive@ack 00B7                                   _pCDCDst 0081  
                                 _pCDCSrc 0084                     __size_of_getsUSBUSART 00EA  
                                 __Hparam 0000                            _ctmu_set_ratio 4290  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 5E2C  
                                 __Lparam 0000                              USB_loop@data 00CB  
                              _ctmu_ratio 0097                   __end_of_I2C_LCD_Command 65A4  
                          display_LCD@str 0100                __size_of_USBEnableEndpoint 003C  
                       __end_of_comm_disp 17CA                      ??_USBCheckStdRequest 001B  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 00B5  
                                 ___awdiv 4E18                           __size_of___lmul 0076  
                                 ___awmod 546E                                   ___lldiv 4ED6  
                        ??_USBDeviceTasks 001E                           __size_of___wmul 0036  
                                 ___llmod 564E                                   ___lwdiv 5BE4  
                         ?_put_string_usb 00C1                         ??_USBStallHandler 0001  
                                 ___lwmod 5F6A                           __size_of_d_to_x 0028  
              __size_of_command_operation 07AE                      __size_of_ringbuf_pop 00CC  
                    __size_of_ringbuf_num 00EE                      __size_of_ringbuf_put 00D4  
                         __CFG_STVREN$OFF 000000                         __end_of_main_init 53CA  
                    __size_of_putUSBUSART 0026               epoch_to_caltime@month_cache 00FF  
                                 __pcinit 5782                        getsUSBUSART@buffer 00BC  
                               ?_tx_sendn 00D8                                 ?_tx_sends 00C4  
                         __size_of_memset 0034                             rx_loop@i_2425 01C8  
               __end_of_configDescriptor1 FB66                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                                   _halfsec 0099  
                    __size_of_timer1_init 0050                                   __ptext0 2982  
                                 __ptext1 5276                                   __ptext2 17CA  
                                 __ptext3 690E                                   __ptext4 58AC  
                                 __ptext5 0000                                   __ptext6 53CA  
                                 __ptext7 5510                                   __ptext8 4290  
                                 __ptext9 1380                             I2C_LCD_Putc@c 00B9  
                                 _inPipes 0069                      __size_of_timer3_init 002C  
                       __end_of_ctmu_loop 3CDC                           __size_of_x_to_d 0020  
                           I2C_LCD_Puts@s 00B9                                   _comm_at 5FCC  
             _USBDeferOUTDataStagePackets 0043                                 _T0CONbits 000FD5  
                            __size_of_ADC 002E                          _time_change_flag 0050  
                        _caltime_to_epoch 1DC2                              __size_of_ISR 00E4  
                               _T1CONbits 000FCD                              __size_of_OUT 0072  
                            ??_USBSuspend 0015                   __size_of_RTCC_from_RTCC 0022  
                               _T3CONbits 000F79                          ___awmod@dividend 00B5  
                               _T5CONbits 000F22                                   _my_atoi 5510  
                         i2_USBDeviceInit 34DC                          i2USBDeviceInit@i 0009  
                                 _my_utoa 5A56                       __end_of_I2C_Receive 66D6  
                           rx_loop@opcode 0164                        __end_of_USB_CD_Ptr FB23  
                                 _rx_loop 17CA           __size_of_USBCtrlTrfSetupHandler 008E  
                 __end_of_RTCC_to_caltime 5276                                   _tx_send 6A20  
                   ?_RTCC_adjust_time_dec 00EA                     ?_RTCC_adjust_time_inc 00EA  
                   __size_of_get_quot_rem 00D4                     __size_of_display_port 00F2  
                    end_of_initialization 580E                              _getsUSBUSART 41A6  
                              delay_set@d 00B5                                 _CTMU_init 68E6  
                               _CTMU_read 4D56                  __end_of_normal_mode_loop 504C  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FB21  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 0039  
                          ??_month_length 00BC                            display_dec@dec 00EB  
                                 memset@c 00B7                                   memset@n 00B9  
                                 memset@p 00BB                            display_dec@str 00E1  
         _dummy_encapsulated_cmd_response 01E0                    __end_of_ctmu_set_ratio 4376  
                             sleep_loop@i 00BF                  ?_USBStdFeatureReqHandler 0001  
                        ?_caltime_to_RTCC 00BE                                ?_I2C_Start 00B7  
                               i2u1341_47 643E                                 i2_LED_OUT 5F06  
                   ??_USBStdSetCfgHandler 0015                           ___lldiv@divisor 00B9  
                    timer3_init@prescaler 00B6                         __end_of_my_strcmp 546E  
                            I2C_rStart@rw 00B9                                ?_CDCInitEP 0001  
                         ___lldiv@counter 00C1                         ?_is_usb_available 0001  
                          tx_send_dec@dec 00EB                            tx_sendn@digits 00DA  
                          tx_send_dec@str 00E1                        __end_of_USBSuspend 6868  
                          ??_ringbuf_init 00BB                   _USBCtrlEPAllowDataStage 55B0  
                       __end_of_port_loop 1380                                _sleep_flag 009C  
                      ??_is_usb_available 00B5                                   postdec1 000FE5  
                                 postdec2 000FDD                                _sleep_loop 5276  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 3DE0  
                              ??_tx_sendn 00DB                                ??_tx_sends 00C6  
              _USBStatusStageEnabledFlag1 0046                _USBStatusStageEnabledFlag2 0047  
                      USBEnableEndpoint@p 000A                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 6704                                 _RTCC_loop 6374  
                            _display_flag 004C                 epoch_to_caltime@day_cache 008D  
                            _get_quot_rem 47BC                              _display_port 3ED4  
                              _print_time 399C                                _print_port 009B  
                          _ringbuf_delete 690E                 __size_of_epoch_to_caltime 01EC  
                        __CFG_CPUDIV$OSC1 000000                       RTCC_from_caltime@ep 00E8  
                     RTCC_from_caltime@ct 00E6                        _BothEP0OutUOWNsSet 0040  
                          EEP_write32@ans 000B                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                                 i2___awdiv 5ADE  
                       __size_of_I2C_init 0012                 USBConfigureEndpoint@EPNum 0006  
                       i2___lwdiv@divisor 0003                                 i2___lldiv 5B62  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 0001  
                               i2___lwdiv 623C                         i2___lwdiv@counter 0007  
                        ?_RTCC_from_epoch 00E6                                ?_CTMU_init 0001  
                              ?_CTMU_read 00C2       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                     i2I2C_IdleCheck@mask 0002                                comm_at@max 00EF  
                              comm_at@min 00EE                                 _USTATcopy 0057  
                               Auto_cut@i 00D3                                comm_disp@i 00E0  
         __size_of_button_timer_interrupt 02C8                   timer1_init@clock_select 00B5  
            __end_of_USBTransferOnePacket 460E                           ?_ctmu_set_ratio 0001  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 0001  
                              ?i2_LED_OUT 0001                         putUSBUSART@length 00B7  
                    __size_of_tx_send_dec 0058                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 0030                          ?_I2C_LCD_Command 0001  
                          ringbuf_init@rb 00B5                    _USBCtrlTrfSetupHandler 59C8  
                           ??_display_LCD 00F1                            ringbuf_pop@ret 00C3  
                           ??_display_dec 00E1                   ?i2_USBTransferOnePacket 0001  
                   __end_of_USBDeviceInit 2F98                            __end_of___lmul 5D48  
                ?_RTCC_adjust_time_button 00F4                  ?_RTCC_adjust_time_cursor 0001  
                           ??_EEP_write32 000A                            __end_of___wmul 6610  
                            integrating@i 0016                            __end_of_d_to_x 68E6  
                ?_RTCC_adjust_time_toggle 0001                   __end_ofi2_USBDeviceInit 3620  
                  __end_of_ringbuf_delete 6934                                 i2memset@c 0003  
                               i2memset@n 0005                                 i2memset@p 0007  
                             _I2C_Receive 66A6                            __end_of_memset 6644  
                              ?_RTCC_init 0001                                ?_RTCC_loop 0001  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 0090  
                          __end_of_x_to_d 6A02                     epoch_to_caltime@month 00E1  
                          i2I2C_Send@data 0003                       start_initialization 5782  
                              CTMU_read@i 00CA                          month_length@year 00C0  
                 ?_USBStdGetStatusHandler 0001                               __end_of_ADC 6704  
                      i2___awdiv@quotient 0007                               __end_of_ISR 00EC  
           USBCtrlTrfRxService@byteToRead 0002                               __end_of_OUT 5E2C  
                       __size_of_USB_init 000A                         __size_of_USB_loop 009A  
                           ?_I2C_LCD_Putc 0001                             ?_I2C_LCD_Puts 00B9  
                  ??_RTCC_adjust_time_dec 00EE                    ??_RTCC_adjust_time_inc 00EE  
                           ?_I2C_LCD_init 0001                               _cdc_data_rx 0345  
                             _cdc_data_tx 0464                         __size_ofi2_memset 002C  
                              ?i2___awdiv 0001              __end_of_USBConfigureEndpoint 58AC  
                       __size_of_Delay_ms 002C                                ?i2___lldiv 0001  
                        ?_RTCC_to_caltime 00B7                                ?i2___lwdiv 0001  
         __end_of_USBStdFeatureReqHandler 22CE         __end_of_USBCtrlEPAllowStatusStage 4C92  
                __end_of_USBCtrlEPService 4B02                           ___llmod@divisor 00C6  
                           ??i2_I2C_Start 0004                         __size_of_Auto_cut 0134  
                             ??_I2C_Start 00B8                           ___llmod@counter 00CA  
                         i2_I2C_IdleCheck 6AB6                 ??_USBCtrlEPAllowDataStage 0002  
                             ??_CDCInitEP 000D                            USBDeviceInit@i 00BD  
                   __end_of_I2C_LCD_Clear 6A72                    _pBDTEntryEP0OutCurrent 0037  
                            _ctmu_value_m 008B                   USBTransferOnePacket@dir 00B5  
                 USBTransferOnePacket@len 00B8            __end_ofi2_USBTransferOnePacket 51C0  
                                ??___lmul 00CA                               ?_sleep_loop 0001  
                                ??___wmul 00CF                            USB_loop@rx_len 00C9  
                     _USBStdGetDscHandler 3248                                  ??_d_to_x 00BD  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK0 00FD  
                             __pdataBANK1 01FF                                  ??_memset 00BB  
                  _button_timer_interrupt 1AFA                                  ??_x_to_d 00B5  
                         ?_ringbuf_delete 00B5                      __end_of_month_length 4536  
                          _RTCC_from_RTCC 69A0                       __end_of_display_LCD 0DFE  
                  _USBActiveConfiguration 0056            __end_of_USBStdGetStatusHandler 5106  
                             ?_print_time 0001                                  ?_LED_OUT 00B5  
                     __end_of_display_dec 6190                               __pbssCOMRAM 002D  
                     __end_of_EEP_write32 6444                       RTCC_to_caltime@dumy 00B9  
                           __pcstackBANK0 00B5                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 0385  
            __size_of_USBCtrlTrfInHandler 00C4                            ??_I2C_LCD_Putc 00B9  
                          ??_I2C_LCD_Puts 00BB                                  LED_OUT@b 00B6  
                          ??_I2C_LCD_init 00BC                   command_operation@opcode 00F1  
                             _caltime_now 00A6                             _delay_display 0051  
                    __end_of_ringbuf_init 623C                      ?_USBStdGetDscHandler 0001  
                        tx_send@asciicode 00C4                                  ?_USB_ISR 0001  
                             ??_CTMU_init 00B5                               ??_CTMU_read 00C4  
          __size_of_delay_timer_interrupt 0048             __end_of_delay_timer_interrupt 6374  
              __end_of_USBWakeFromSuspend 6676                             ??_integrating 000E  
                   RTCC_adjust_time_dec@i 00F3                           _USBStallHandler 63BA  
                            _pBDTEntryOut 0075                     RTCC_adjust_time_inc@i 00F3  
              __end_of_USBCheckCDCRequest 47BC                  __end_of_caltime_to_epoch 204A  
                             ??i2_LED_OUT 0002                           millis_timer@cnt 003D  
                __size_of_USBDeviceAttach 0038                          ??_put_string_usb 00C5  
                        ___lwdiv@dividend 00D1           __end_of_RTCC_adjust_time_button 3878  
         __end_of_RTCC_adjust_time_cursor 6084                                 _delay_set 695A  
                               _edit_flag 0098                                 __pintcode 0008  
         __end_of_RTCC_adjust_time_toggle 6AA0                             __pmediumconst FB1A  
                                ?___awdiv 00B5                                 __ptext100 6400  
                               __ptext101 6AF2                                 __ptext110 63BA  
                               __ptext102 6894                                 __ptext111 4A34  
                               __ptext103 6AA0                                 __ptext120 204A  
                               __ptext112 59C8                                 __ptext104 6AB6  
                               __ptext121 6732                                 __ptext113 3DE0  
                               __ptext105 6AFC                                 __ptext130 4C92  
                               __ptext122 46E6                                 __ptext114 55B0  
                               __ptext106 3396                                 __ptext131 460E  
                               __ptext123 5E2C                                 __ptext115 3FC6  
                               __ptext107 34DC                                 __ptext132 3878  
                               __ptext124 5106                                 __ptext116 4376  
                               __ptext108 6644                                 __ptext133 623C  
                               __ptext125 6486                                 __ptext117 6868  
                               __ptext109 683C                                 __ptext134 5ADE  
                               __ptext126 5818                                 __ptext118 504C  
                               __ptext135 5F06                                 __ptext127 6084  
                               __ptext119 3248                                 __ptext128 3AB4  
                               __ptext129 4BCE                                  ?___awmod 00B5  
                     __end_ofi2_I2C_Start 68BE                                  ?___lldiv 00B5  
                      charge_time_count@i 0014                                  ?___llmod 00C2  
                                ?___lwdiv 00D1                                  ?___lwmod 00B5  
                   _is_usb_available$2619 00B5                           I2C_LCD_Putc@ans 00BA  
                  __end_of_RTCC_from_RTCC 69C2                           I2C_LCD_Puts@ans 00BC  
                               _comm_disp 1380                          ?i2_USBDeviceInit 0001  
              USBCBSendResume@delay_count 0035                                  ?_comm_at 00EC  
                             ??_RTCC_init 00B5                               ??_RTCC_loop 00E1  
                    _USBTransferOnePacket 4536                         __size_of_tx_sendn 0076  
                       __size_of_tx_sends 006A                                 _epoch_now 00B1  
                               _main_init 5324                               I2C_Start@rw 00B7  
                        _epoch_to_caltime 2796                                  _I2C_Send 6A72  
                                OUT@value 00B5                                  _I2C_Stop 6AE8  
                    __CFG_RTCOSC$T1OSCREF 000000                                 _ctmu_flag 0096  
                                _I2C_init 6ACC                          _display_LCD$5266 010A  
                               _ctmu_loop 3BCC                                  ?_my_atoi 00D1  
                                _ADC_init 69C2                     __end_of_I2C_IdleCheck 6A20  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 60E0  
                                ?_my_utoa 00D8                       ringbuf_backspace@rb 00BD  
                   ??_USBStdGetDscHandler 0001                               _ep_data_out 007E  
                        ___lwdiv@quotient 00D6                                  ?_rx_loop 0001  
             command_operation@percentage 00FA                               ??i2___awdiv 0005  
                 __end_ofi2_I2C_IdleCheck 6ACC                                  ?_tx_send 0001  
                             ??i2___lldiv 0009              __size_of_USBCtrlTrfRxService 0118  
                              my_atoi@ret 00D7             USBConfigureEndpoint@direction 0001  
                              my_atoi@str 00D1                               ??i2___lwdiv 0005  
                     __size_of_sleep_loop 00AE                               __size_of_IN 002C  
                               d_to_x@dec 00BD                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
                       ?_normal_mode_loop 0001              __size_of_USBCtrlTrfTxService 00D8  
                ringbuf_init@internal_buf 00B7                            ___wmul@product 00CF  
              ??_USBCtrlEPServiceComplete 0002                     __end_of_LED_indicator 399C  
                      ??_normal_mode_loop 00FA                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                           rx_loop@comm_buf 01F0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 0118                                ?_delay_set 00B5  
                                i2u521_40 4690                                  _PIR1bits 000F9E  
                                i2u521_47 4686                                  i2u523_40 46D0  
                                _PIR2bits 000FA1                                  i2u523_47 46C6  
                                _PIR5bits 000F98                epoch_to_caltime@year_cache 009D  
                                i2u580_40 3362                                  i2u580_47 3358  
                                i2u752_40 68BA                 USBCtrlEPService@setup_cnt 001D  
                                i2u577_40 32D0                                  i2u577_47 32C6  
                                i2u578_40 3306                                  i2u578_47 32FC  
                                i2u923_40 2DC8                                  i2u926_40 3D0E  
                                i2u927_40 3D72                             ??_ringbuf_pop 00BF  
                           ??_ringbuf_num 00B7                             ??_ringbuf_put 00C0  
                                i2u891_45 5F2A                                  i2u891_46 5F2E  
                                i2u892_40 5F38                       __end_of_integrating 2E36  
                                i2u894_40 5F44                                  _RCONbits 000FD0  
                                i2u896_40 5F50                         _display_time_1602 30FA  
                           ??_putUSBUSART 00B8                                  _UEP0bits 000F26  
                           tx_sendn@value 00D8                _USBDeferINDataStagePackets 0042  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 00B5                             ??_timer1_init 00B6  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 07AE  
                           ??_timer3_init 00B5                                 _my_strcmp 53CA  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 00EC                               _display_dec 6138  
                    _USBConfigureEndpoint 5818                               _EEP_write32 6400  
                               _port_loop 0DFE                           ?_RTCC_from_RTCC 00DD  
                              my_utoa@str 00D8                                ?_comm_disp 00E0  
        __size_of_USBStdFeatureReqHandler 0284                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 00CB  
                   ?_USBTransferOnePacket 00B5                          __CFG_SOSCSEL$LOW 000000  
          button_timer_interrupt@sw_value 00DA                                  _USB_init 6ADE  
                                _USB_loop 56E8                                ?_main_init 0001  
               __size_of_is_usb_available 001C                             ?_CDCTxService 0001  
                     ??_display_time_1602 00F0                              _RemoteWakeup 0041  
                       i2___awdiv@divisor 0003                                  i2_memset 6868  
                        __size_of_LED_OUT 0072                                  _Delay_ms 67E4  
                       i2___awdiv@counter 0005                                ?_ctmu_loop 0001  
                           ringbuf_pop@rb 00BD                             ringbuf_num@rb 00B5  
                 __end_of_USBStallHandler 6400                             I2C_Start@adrs 00B8  
                           ringbuf_put@rb 00BD                         ___lmul@multiplier 00C2  
                        ??_ctmu_set_ratio 00D8                               _INTCON2bits 000FF1  
                              port_loop@i 00B9               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 4458                          __size_of_USB_ISR 0006  
                                _Auto_cut 3620                      epoch_to_caltime@year 00E0  
                 __size_of_get_string_usb 004E                           I2C_Receive@data 00B8  
                      _next_print_content 004E                        __end_of_device_dsc FBFC  
                              _I2C_rStart 6810                               i2_I2C_Start 6894  
                 ?_USBCtrlTrfSetupHandler 0001                 __end_of_display_time_1602 3248  
                 USBStdGetStatusHandler@p 0002                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 00B9  
                    __end_of_I2C_LCD_Putc 6534                      __end_of_I2C_LCD_Puts 59C8  
                              rx_loop@buf 0100                                  _SetupPkt 000D30  
                           _weekday_3char FBCE                      __end_of_I2C_LCD_init 61E8  
                   __size_of_month_length 00DE                                ?_my_strcmp 00B5  
                   ?_USBConfigureEndpoint 0001                  __size_of_caltime_to_RTCC 00D0  
                       ??_USBDeviceAttach 00B5                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 00B6  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                              ?_port_loop 0001                              ?_I2C_Receive 0001  
                       tx_sends@asciicode 00C4                       __end_of_ringbuf_pop 4BCE  
                     __end_of_ringbuf_num 41A6                       __end_of_ringbuf_put 4964  
                     __end_of_putUSBUSART 695A                               _line_coding 01F8  
                          ??_CDCTxService 00BC                       __end_of_timer0_init 64FC  
                   __size_of_ringbuf_init 0054                          __size_of_comm_at 005C  
                     __end_of_timer1_init 62DE                       __end_of_timer3_init 67E4  
                 __size_of_USBDeviceTasks 0146                                i2LED_OUT@b 0002  
                         ___lwdiv@divisor 00D3                           ___lwdiv@counter 00D5  
                    timer0_init@prescaler 00B6                                  __ptext10 5C5C  
                                __ptext11 5FCC                                  __ptext20 5D48  
                                __ptext12 399C                                  __ptext21 07AE  
                                __ptext13 60E0                                  __ptext30 564E  
                                __ptext22 30FA                                  __ptext14 5E9C  
                                __ptext31 3754                                  __ptext23 6138  
                                __ptext15 6A20                                  __ptext40 4E18  
                                __ptext32 6A8A                                  __ptext24 5A56  
                                __ptext16 65A4                                  __ptext41 6028  
                                __ptext33 22CE                                  __ptext25 5F6A  
                                __ptext17 4F92                                  __ptext50 64C2  
                                __ptext42 3620                                  __ptext34 2532  
                                __ptext26 64FC                                  __ptext18 0DFE  
                                __ptext51 61E8                                  __ptext43 65DA  
                                __ptext35 697E                                  __ptext27 3ED4  
                                __ptext19 695A                                  __ptext60 656C  
                                __ptext52 6ADE                                  __ptext44 5DBA  
                                __ptext36 2796                                  __ptext28 6760  
                                __ptext61 67E4                                  __ptext53 2E36  
                                __ptext45 678C                                  __ptext37 47BC  
                                __ptext29 593A                                  __ptext70 4890  
                                __ptext62 68E6                                  __ptext54 6610  
                                __ptext46 66D6                                  __ptext38 4964  
                                __ptext71 4B02                                  __ptext63 69C2  
                                __ptext55 6534                                  __ptext47 5324  
                                __ptext39 68BE                                  __ptext80 6374  
                                __ptext72 40B8                                  __ptext64 3BCC  
                                __ptext56 6704                                  __ptext48 67B8  
                                __ptext81 69A0                                  __ptext73 6444  
                                __ptext65 1AFA                                  __ptext57 6ACC  
                                __ptext49 628E                                  __ptext90 6AE8  
                                __ptext82 1DC2                                  __ptext74 6934  
                                __ptext66 5BE4                                  __ptext58 6190  
                                __ptext91 6676                                  __ptext83 4458  
                                __ptext75 62DE                                  __ptext67 4D56  
                                __ptext59 6A58                                  __ptext92 6A72  
                                __ptext84 546E                                  __ptext76 6A3C  
                                __ptext68 4ED6                                  __ptext93 66A6  
                                __ptext85 5CD2                                  __ptext77 41A6  
                                __ptext69 56E8                                  __ptext94 6A02  
                                __ptext86 51C0                                  __ptext78 2B44  
                                __ptext87 69E2                                  __ptext79 4536  
                                __ptext96 2CD0                                  __ptext88 2F98  
                                __ptext97 5B62                                  __ptext89 6810  
                                __ptext98 632C                                  __ptext99 3CDC  
                        __size_of_my_atoi 00A0                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_button 0124          __size_of_RTCC_adjust_time_cursor 005C  
                        __size_of_my_utoa 0088                            _comm_disp$5267 00EB  
                        ?i2_I2C_IdleCheck 0001                          __size_of_rx_loop 0330  
        __size_of_RTCC_adjust_time_toggle 0016                     RTCC_loop@prev_halfsec 008F  
                        __size_of_tx_send 001C                            I2C_rStart@adrs 00B7  
                             _integrating 2CD0            __end_of_USBCtrlTrfSetupHandler 5A56  
                           __size_of_main 01C2                         ?_USBCtrlEPService 0001  
                           ??_tx_send_dec 00E1                              _month_length 4458  
                       put_string_usb@len 00C3                        ??_USBCtrlEPService 001B  
                __size_of_RTCC_from_epoch 0022                                _EEP_read32 2F98  
                             ??_delay_set 00B9                       _USBCtrlTrfInHandler 4C92  
                            ??_sleep_loop 00BF                                  _outPipes 0060  
                        ??_ringbuf_delete 00B7                   ?_button_timer_interrupt 00D8  
                    _USBCtrlTrfOutHandler 6084                                  int$flags 0058  
                          rx_loop@opland1 0264                            rx_loop@opland2 0385  
                          rx_loop@opland3 0200                              _ringbuf_init 61E8  
               _USBCtrlEPAllowStatusStage 4BCE                                 x_to_d@hex 00B6  
                  ??_USBTransferOnePacket 00B9                                  _tx_sendn 5C5C  
                                _tx_sends 5E9C                               ??_comm_disp 00E1  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 0044  
                            ??_print_time 00EC                  CDCTxService@byte_to_send 00C0  
                          main_init@rxbuf 0400                            main_init@txbuf 04A4  
                             ??_main_init 00BE                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 00BF  
                              i2_I2C_Send 6AA0                                i2_I2C_Stop 6AF2  
                    ?_USBCtrlTrfInHandler 0001                               ??_ctmu_loop 00DD  
           USBCtrlTrfTxService@byteToSend 0001              I2C_LCD_SetCursor@row_offsets 00BC  
                              Delay_ms@ms 00B5                           display_dec@edit 00E0  
                                memset@p1 00B5                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                          get_quot_rem@quot 00CE  
                       RTCC_to_caltime@ct 00B7             __size_of_RTCC_adjust_time_dec 0264  
           __size_of_RTCC_adjust_time_inc 0264                                  intlevel2 0000  
                      __end_of_sleep_loop 5324                    __size_of_USBDeviceInit 0162  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6760  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0013          ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
         _USER_USB_CALLBACK_EVENT_HANDLER 6732                          ___lwmod@dividend 00B5  
            i2USBTransferOnePacket@handle 0006                          ___lldiv@dividend 00B5  
                               tx_sendn@i 00DB                               ?_I2C_rStart 00B7  
                              _RCSTA1bits 000FAC                         ?_caltime_to_epoch 00CE  
                       _ringbuf_backspace 58AC                __size_of_display_time_1602 014E  
                __end_of_epoch_to_caltime 2982                  __size_of_RTCC_to_caltime 00B6  
                           _print_content 009A                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 1DC2                           tx_send_dec@edit 00E0  
                      __end_of_print_time 3AB4                i2USBTransferOnePacket@data 0002  
                      ??_caltime_to_epoch 00D2                        ?_ringbuf_backspace 00BD  
                  ??_USBConfigureEndpoint 0002                                  my_utoa@d 00DD  
                   ?_USBCtrlTrfOutHandler 0001                                  my_utoa@v 00DE  
                             _ringbuf_pop 4B02                               _ringbuf_num 40B8  
                             _ringbuf_put 4890                               _putUSBUSART 6934  
                     __end_of_tx_send_dec 6138                               ??_my_strcmp 00B9  
                     _USBCtrlTrfRxService 3AB4                               _timer0_init 64C2  
                      _USBWakeFromSuspend 6644                               _timer1_init 628E  
                             _timer3_init 67B8                   _USBStdFeatureReqHandler 204A  
                             ??_port_loop 00B9                        _USBCheckCDCRequest 46E6  
                     _USBCtrlTrfTxService 460E                                  rx_loop@i 02CB  
                     ??_ringbuf_backspace 00BF                           get_quot_rem@div 00D0  
                         get_quot_rem@num 00D2                                _RTCCFGbits 000F3F  
                     ?_USBWakeFromSuspend 0001                          _is_usb_available 6A3C  
                        ___lldiv@quotient 00BD                         caltime_to_RTCC@ct 00BE  
                         ___lwmod@divisor 00B7                         ??_caltime_to_RTCC 00C0  
                   ??_USBCtrlTrfInHandler 0002                     _USBAlternateInterface 0054  
                         ___lwmod@counter 00B9                       ?_USBCheckCDCRequest 0001  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 004D  
                  __size_of_I2C_LCD_Clear 001A                      ?_USBCtrlTrfRxService 0001  
         epoch_to_caltime@day_since_epoch 00DC                             ?_getsUSBUSART 00BC  
                ?_USBCtrlEPAllowDataStage 0001                            _get_string_usb 62DE  
                    ?_USBCtrlTrfTxService 0001                             my_utoa@digits 00DC  
               __end_of_ringbuf_backspace 593A              _USBStatusStageTimeoutCounter 0048  
                   __size_of_I2C_LCD_Putc 0038                     __size_of_I2C_LCD_Puts 008E  
                   _delay_timer_interrupt 632C                     __size_of_I2C_LCD_init 0058  
                    ??_USBWakeFromSuspend 0015                USBTransferOnePacket@handle 00BA  
                    __end_of_CDCTxService 2CD0                              my_utoa@value 00DA  
                  _command_operation$5268 00F9                      ??_USBCheckCDCRequest 0001  
                             ?_EEP_read32 00BB                                _USB_CD_Ptr FB21  
                        ??_RTCC_from_RTCC 00E1  
