

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 19:17:08 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           	psect	idataCOMRAM
    82  012890                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for epoch_to_caltime@month_cache
    86  012890  01                 	db	1
    87                           
    88                           	psect	idataBANK1
    89  012891                     __pidataBANK1:
    90                           	opt stack 0
    91                           
    92                           ;initializer for rx_loop@comm_buf_init
    93  012891  01                 	db	1
    94                           
    95                           	psect	mediumconst
    96  00FE2C                     __pmediumconst:
    97                           	opt stack 0
    98  00FE2C  00                 	db	0
    99  00FE2D                     _weekday_3char:
   100                           	opt stack 0
   101  00FE2D  53                 	db	83
   102  00FE2E  55                 	db	85
   103  00FE2F  4E                 	db	78
   104  00FE30  00                 	db	0
   105  00FE31  4D                 	db	77
   106  00FE32  4F                 	db	79
   107  00FE33  4E                 	db	78
   108  00FE34  00                 	db	0
   109  00FE35  54                 	db	84
   110  00FE36  55                 	db	85
   111  00FE37  45                 	db	69
   112  00FE38  00                 	db	0
   113  00FE39  57                 	db	87
   114  00FE3A  45                 	db	69
   115  00FE3B  44                 	db	68
   116  00FE3C  00                 	db	0
   117  00FE3D  54                 	db	84
   118  00FE3E  48                 	db	72
   119  00FE3F  55                 	db	85
   120  00FE40  00                 	db	0
   121  00FE41  46                 	db	70
   122  00FE42  52                 	db	82
   123  00FE43  49                 	db	73
   124  00FE44  00                 	db	0
   125  00FE45  53                 	db	83
   126  00FE46  41                 	db	65
   127  00FE47  54                 	db	84
   128  00FE48  00                 	db	0
   129  00FE49                     __end_of_weekday_3char:
   130                           	opt stack 0
   131  0000                     _PPSCONbits	set	3775
   132  0000                     _RPOR3	set	3779
   133  0000                     _RPOR4	set	3780
   134  0000                     _RPOR5	set	3781
   135  0000                     _ANCON0	set	3912
   136  0000                     _ANCON1	set	3913
   137  0000                     _CCP3CONbits	set	3861
   138  0000                     _CCP4CONbits	set	3858
   139  0000                     _CCPR3L	set	3862
   140  0000                     _CCPR3Lbits	set	3862
   141  0000                     _CCPR4L	set	3859
   142  0000                     _CCPR4Lbits	set	3859
   143  0000                     _CCPTMRS0bits	set	3922
   144  0000                     _CCPTMRS1bits	set	3921
   145  0000                     _PADCFG1bits	set	3900
   146  0000                     _RTCCAL	set	3902
   147  0000                     _RTCCFGbits	set	3903
   148  0000                     _RTCVALH	set	3899
   149  0000                     _RTCVALL	set	3898
   150  0000                     _T5CONbits	set	3874
   151  0000                     _ADRES	set	4035
   152  0000                     _ADCON0bits	set	4034
   153  0000                     _ADCON1bits	set	4033
   154  0000                     _BAUDCON1bits	set	3966
   155  0000                     _CCP1CONbits	set	4026
   156  0000                     _CCP2CONbits	set	4020
   157  0000                     _CCPR1L	set	4027
   158  0000                     _CCPR1Lbits	set	4027
   159  0000                     _CCPR2L	set	4021
   160  0000                     _CCPR2Lbits	set	4021
   161  0000                     _CTMUCONH	set	4019
   162  0000                     _CTMUCONHbits	set	4019
   163  0000                     _CTMUCONL	set	4018
   164  0000                     _CTMUCONLbits	set	4018
   165  0000                     _CTMUICON	set	4017
   166  0000                     _EECON2	set	4007
   167  0000                     _INTCON2bits	set	4081
   168  0000                     _INTCONbits	set	4082
   169  0000                     _IPR1bits	set	3999
   170  0000                     _IPR2bits	set	4002
   171  0000                     _IPR5bits	set	3993
   172  0000                     _OSCCONbits	set	4051
   173  0000                     _OSCTUNEbits	set	3995
   174  0000                     _PIE1bits	set	3997
   175  0000                     _PIE2bits	set	4000
   176  0000                     _PIE5bits	set	3985
   177  0000                     _PIR1bits	set	3998
   178  0000                     _PIR2bits	set	4001
   179  0000                     _PIR5bits	set	3992
   180  0000                     _PORTAbits	set	3968
   181  0000                     _PR2	set	4043
   182  0000                     _RCREG1	set	4015
   183  0000                     _RCSTA1bits	set	4012
   184  0000                     _SPBRG1	set	4016
   185  0000                     _SPBRGH1	set	3967
   186  0000                     _T0CONbits	set	4053
   187  0000                     _T1CONbits	set	4045
   188  0000                     _T2CONbits	set	4042
   189  0000                     _T3CONbits	set	3961
   190  0000                     _TMR1H	set	4047
   191  0000                     _TRISA	set	3986
   192  0000                     _TRISB	set	3987
   193  0000                     _TRISC	set	3988
   194  0000                     _TXREG1	set	4014
   195  0000                     _TXSTA1bits	set	4013
   196  0000                     _GIE	set	32663
   197  0000                     _LATB2	set	31826
   198  00FE49                     STR_11:
   199  00FE49  09                 	db	9
   200  00FE4A  2A                 	db	42
   201  00FE4B  2A                 	db	42
   202  00FE4C  2A                 	db	42
   203  00FE4D  2A                 	db	42
   204  00FE4E  2A                 	db	42
   205  00FE4F  2A                 	db	42
   206  00FE50  2A                 	db	42
   207  00FE51  2A                 	db	42
   208  00FE52  2A                 	db	42
   209  00FE53  2A                 	db	42
   210  00FE54  2A                 	db	42
   211  00FE55  2A                 	db	42
   212  00FE56  2A                 	db	42
   213  00FE57  2A                 	db	42
   214  00FE58  2A                 	db	42
   215  00FE59  2A                 	db	42
   216  00FE5A  2A                 	db	42
   217  00FE5B  2A                 	db	42
   218  00FE5C  2A                 	db	42
   219  00FE5D  2A                 	db	42
   220  00FE5E  2A                 	db	42
   221  00FE5F  2A                 	db	42
   222  00FE60  2A                 	db	42
   223  00FE61  2A                 	db	42
   224  00FE62  2A                 	db	42
   225  00FE63  2A                 	db	42
   226  00FE64  0A                 	db	10
   227  00FE65  09                 	db	9
   228  00FE66  2A                 	db	42
   229  00FE67  2A                 	db	42
   230  00FE68  2A                 	db	42
   231  00FE69  2A                 	db	42
   232  00FE6A  20                 	db	32
   233  00FE6B  4B                 	db	75	;'K'
   234  00FE6C  69                 	db	105	;'i'
   235  00FE6D  6C                 	db	108	;'l'
   236  00FE6E  6C                 	db	108	;'l'
   237  00FE6F  69                 	db	105	;'i'
   238  00FE70  66                 	db	102	;'f'
   239  00FE71  69                 	db	105	;'i'
   240  00FE72  73                 	db	115	;'s'
   241  00FE73  68                 	db	104	;'h'
   242  00FE74  20                 	db	32
   243  00FE75  4C                 	db	76	;'L'
   244  00FE76  69                 	db	105	;'i'
   245  00FE77  67                 	db	103	;'g'
   246  00FE78  68                 	db	104	;'h'
   247  00FE79  74                 	db	116	;'t'
   248  00FE7A  20                 	db	32
   249  00FE7B  20                 	db	32
   250  00FE7C  2A                 	db	42
   251  00FE7D  2A                 	db	42
   252  00FE7E  2A                 	db	42
   253  00FE7F  2A                 	db	42
   254  00FE80  0A                 	db	10
   255  00FE81  09                 	db	9
   256  00FE82  2A                 	db	42
   257  00FE83  2A                 	db	42
   258  00FE84  2A                 	db	42
   259  00FE85  2A                 	db	42
   260  00FE86  20                 	db	32
   261  00FE87  4D                 	db	77	;'M'
   262  00FE88  61                 	db	97	;'a'
   263  00FE89  64                 	db	100	;'d'
   264  00FE8A  65                 	db	101	;'e'
   265  00FE8B  20                 	db	32
   266  00FE8C  62                 	db	98	;'b'
   267  00FE8D  79                 	db	121	;'y'
   268  00FE8E  20                 	db	32
   269  00FE8F  40                 	db	64	;'@'
   270  00FE90  52                 	db	82	;'R'
   271  00FE91  79                 	db	121	;'y'
   272  00FE92  6F                 	db	111	;'o'
   273  00FE93  6B                 	db	107	;'k'
   274  00FE94  65                 	db	101	;'e'
   275  00FE95  72                 	db	114	;'r'
   276  00FE96  69                 	db	105	;'i'
   277  00FE97  20                 	db	32
   278  00FE98  2A                 	db	42
   279  00FE99  2A                 	db	42
   280  00FE9A  2A                 	db	42
   281  00FE9B  2A                 	db	42
   282  00FE9C  0A                 	db	10
   283  00FE9D  09                 	db	9
   284  00FE9E  2A                 	db	42
   285  00FE9F  2A                 	db	42
   286  00FEA0  2A                 	db	42
   287  00FEA1  2A                 	db	42
   288  00FEA2  2A                 	db	42
   289  00FEA3  2A                 	db	42
   290  00FEA4  2A                 	db	42
   291  00FEA5  2A                 	db	42
   292  00FEA6  2A                 	db	42
   293  00FEA7  2A                 	db	42
   294  00FEA8  2A                 	db	42
   295  00FEA9  2A                 	db	42
   296  00FEAA  2A                 	db	42
   297  00FEAB  2A                 	db	42
   298  00FEAC  2A                 	db	42
   299  00FEAD  2A                 	db	42
   300  00FEAE  2A                 	db	42
   301  00FEAF  2A                 	db	42
   302  00FEB0  2A                 	db	42
   303  00FEB1  2A                 	db	42
   304  00FEB2  2A                 	db	42
   305  00FEB3  2A                 	db	42
   306  00FEB4  2A                 	db	42
   307  00FEB5  2A                 	db	42
   308  00FEB6  2A                 	db	42
   309  00FEB7  2A                 	db	42
   310  00FEB8  0A                 	db	10
   311  00FEB9  0A                 	db	10
   312  00FEBA  09                 	db	9
   313  00FEBB  63                 	db	99	;'c'
   314  00FEBC  6F                 	db	111	;'o'
   315  00FEBD  6D                 	db	109	;'m'
   316  00FEBE  6D                 	db	109	;'m'
   317  00FEBF  61                 	db	97	;'a'
   318  00FEC0  6E                 	db	110	;'n'
   319  00FEC1  64                 	db	100	;'d'
   320  00FEC2  20                 	db	32
   321  00FEC3  09                 	db	9
   322  00FEC4  6F                 	db	111	;'o'
   323  00FEC5  70                 	db	112	;'p'
   324  00FEC6  65                 	db	101	;'e'
   325  00FEC7  6C                 	db	108	;'l'
   326  00FEC8  61                 	db	97	;'a'
   327  00FEC9  6E                 	db	110	;'n'
   328  00FECA  64                 	db	100	;'d'
   329  00FECB  31                 	db	49	;'1'
   330  00FECC  09                 	db	9
   331  00FECD  6F                 	db	111	;'o'
   332  00FECE  70                 	db	112	;'p'
   333  00FECF  65                 	db	101	;'e'
   334  00FED0  6C                 	db	108	;'l'
   335  00FED1  61                 	db	97	;'a'
   336  00FED2  6E                 	db	110	;'n'
   337  00FED3  64                 	db	100	;'d'
   338  00FED4  32                 	db	50	;'2'
   339  00FED5  0A                 	db	10
   340  00FED6  0A                 	db	10
   341  00FED7  09                 	db	9
   342  00FED8  70                 	db	112	;'p'
   343  00FED9  72                 	db	114	;'r'
   344  00FEDA  69                 	db	105	;'i'
   345  00FEDB  6E                 	db	110	;'n'
   346  00FEDC  74                 	db	116	;'t'
   347  00FEDD  5F                 	db	95	;'_'
   348  00FEDE  74                 	db	116	;'t'
   349  00FEDF  69                 	db	105	;'i'
   350  00FEE0  6D                 	db	109	;'m'
   351  00FEE1  65                 	db	101	;'e'
   352  00FEE2  28                 	db	40
   353  00FEE3  74                 	db	116	;'t'
   354  00FEE4  29                 	db	41
   355  00FEE5  0A                 	db	10
   356  00FEE6  09                 	db	9
   357  00FEE7  61                 	db	97	;'a'
   358  00FEE8  64                 	db	100	;'d'
   359  00FEE9  6A                 	db	106	;'j'
   360  00FEEA  75                 	db	117	;'u'
   361  00FEEB  73                 	db	115	;'s'
   362  00FEEC  74                 	db	116	;'t'
   363  00FEED  5F                 	db	95	;'_'
   364  00FEEE  74                 	db	116	;'t'
   365  00FEEF  69                 	db	105	;'i'
   366  00FEF0  6D                 	db	109	;'m'
   367  00FEF1  65                 	db	101	;'e'
   368  00FEF2  28                 	db	40
   369  00FEF3  61                 	db	97	;'a'
   370  00FEF4  74                 	db	116	;'t'
   371  00FEF5  29                 	db	41
   372  00FEF6  20                 	db	32
   373  00FEF7  5B                 	db	91	;'['
   374  00FEF8  68                 	db	104	;'h'
   375  00FEF9  61                 	db	97	;'a'
   376  00FEFA  6E                 	db	110	;'n'
   377  00FEFB  64                 	db	100	;'d'
   378  00FEFC  3A                 	db	58	;':'
   379  00FEFD  79                 	db	121	;'y'
   380  00FEFE  2C                 	db	44
   381  00FEFF  4D                 	db	77	;'M'
   382  00FF00  2C                 	db	44
   383  00FF01  64                 	db	100	;'d'
   384  00FF02  2C                 	db	44
   385  00FF03  68                 	db	104	;'h'
   386  00FF04  2C                 	db	44
   387  00FF05  6D                 	db	109	;'m'
   388  00FF06  2C                 	db	44
   389  00FF07  73                 	db	115	;'s'
   390  00FF08  5D                 	db	93	;']'
   391  00FF09  20                 	db	32
   392  00FF0A  5B                 	db	91	;'['
   393  00FF0B  76                 	db	118	;'v'
   394  00FF0C  61                 	db	97	;'a'
   395  00FF0D  6C                 	db	108	;'l'
   396  00FF0E  75                 	db	117	;'u'
   397  00FF0F  65                 	db	101	;'e'
   398  00FF10  28                 	db	40
   399  00FF11  64                 	db	100	;'d'
   400  00FF12  65                 	db	101	;'e'
   401  00FF13  63                 	db	99	;'c'
   402  00FF14  69                 	db	105	;'i'
   403  00FF15  6D                 	db	109	;'m'
   404  00FF16  61                 	db	97	;'a'
   405  00FF17  6C                 	db	108	;'l'
   406  00FF18  29                 	db	41
   407  00FF19  5D                 	db	93	;']'
   408  00FF1A  0A                 	db	10
   409  00FF1B  09                 	db	9
   410  00FF1C  70                 	db	112	;'p'
   411  00FF1D  77                 	db	119	;'w'
   412  00FF1E  6D                 	db	109	;'m'
   413  00FF1F  20                 	db	32
   414  00FF20  5B                 	db	91	;'['
   415  00FF21  63                 	db	99	;'c'
   416  00FF22  6F                 	db	111	;'o'
   417  00FF23  6C                 	db	108	;'l'
   418  00FF24  6F                 	db	111	;'o'
   419  00FF25  72                 	db	114	;'r'
   420  00FF26  3A                 	db	58	;':'
   421  00FF27  52                 	db	82	;'R'
   422  00FF28  2C                 	db	44
   423  00FF29  47                 	db	71	;'G'
   424  00FF2A  2C                 	db	44
   425  00FF2B  42                 	db	66	;'B'
   426  00FF2C  2C                 	db	44
   427  00FF2D  57                 	db	87	;'W'
   428  00FF2E  5D                 	db	93	;']'
   429  00FF2F  20                 	db	32
   430  00FF30  5B                 	db	91	;'['
   431  00FF31  76                 	db	118	;'v'
   432  00FF32  61                 	db	97	;'a'
   433  00FF33  6C                 	db	108	;'l'
   434  00FF34  75                 	db	117	;'u'
   435  00FF35  65                 	db	101	;'e'
   436  00FF36  28                 	db	40
   437  00FF37  25                 	db	37
   438  00FF38  29                 	db	41
   439  00FF39  3A                 	db	58	;':'
   440  00FF3A  30                 	db	48	;'0'
   441  00FF3B  7E                 	db	126
   442  00FF3C  31                 	db	49	;'1'
   443  00FF3D  30                 	db	48	;'0'
   444  00FF3E  30                 	db	48	;'0'
   445  00FF3F  5D                 	db	93	;']'
   446  00FF40  0A                 	db	10
   447  00FF41  09                 	db	9
   448  00FF42  70                 	db	112	;'p'
   449  00FF43  77                 	db	119	;'w'
   450  00FF44  6D                 	db	109	;'m'
   451  00FF45  20                 	db	32
   452  00FF46  63                 	db	99	;'c'
   453  00FF47  6C                 	db	108	;'l'
   454  00FF48  65                 	db	101	;'e'
   455  00FF49  61                 	db	97	;'a'
   456  00FF4A  72                 	db	114	;'r'
   457  00FF4B  0A                 	db	10
   458  00FF4C  09                 	db	9
   459  00FF4D  73                 	db	115	;'s'
   460  00FF4E  65                 	db	101	;'e'
   461  00FF4F  74                 	db	116	;'t'
   462  00FF50  20                 	db	32
   463  00FF51  74                 	db	116	;'t'
   464  00FF52  69                 	db	105	;'i'
   465  00FF53  6D                 	db	109	;'m'
   466  00FF54  65                 	db	101	;'e'
   467  00FF55  5F                 	db	95	;'_'
   468  00FF56  73                 	db	115	;'s'
   469  00FF57  79                 	db	121	;'y'
   470  00FF58  6E                 	db	110	;'n'
   471  00FF59  63                 	db	99	;'c'
   472  00FF5A  5F                 	db	95	;'_'
   473  00FF5B  6D                 	db	109	;'m'
   474  00FF5C  6F                 	db	111	;'o'
   475  00FF5D  64                 	db	100	;'d'
   476  00FF5E  65                 	db	101	;'e'
   477  00FF5F  28                 	db	40
   478  00FF60  73                 	db	115	;'s'
   479  00FF61  79                 	db	121	;'y'
   480  00FF62  6E                 	db	110	;'n'
   481  00FF63  63                 	db	99	;'c'
   482  00FF64  29                 	db	41
   483  00FF65  0A                 	db	10
   484  00FF66  09                 	db	9
   485  00FF67  73                 	db	115	;'s'
   486  00FF68  65                 	db	101	;'e'
   487  00FF69  74                 	db	116	;'t'
   488  00FF6A  20                 	db	32
   489  00FF6B  41                 	db	65	;'A'
   490  00FF6C  44                 	db	68	;'D'
   491  00FF6D  43                 	db	67	;'C'
   492  00FF6E  5F                 	db	95	;'_'
   493  00FF6F  6D                 	db	109	;'m'
   494  00FF70  6F                 	db	111	;'o'
   495  00FF71  64                 	db	100	;'d'
   496  00FF72  65                 	db	101	;'e'
   497  00FF73  28                 	db	40
   498  00FF74  61                 	db	97	;'a'
   499  00FF75  64                 	db	100	;'d'
   500  00FF76  63                 	db	99	;'c'
   501  00FF77  29                 	db	41
   502  00FF78  0A                 	db	10
   503  00FF79  09                 	db	9
   504  00FF7A  52                 	db	82	;'R'
   505  00FF7B  45                 	db	69	;'E'
   506  00FF7C  53                 	db	83	;'S'
   507  00FF7D  45                 	db	69	;'E'
   508  00FF7E  54                 	db	84	;'T'
   509  00FF7F  28                 	db	40
   510  00FF80  29                 	db	41
   511  00FF81  3B                 	db	59	;';'
   512  00FF82  0A                 	db	10
   513  00FF83  00                 	db	0
   514  00FF84                     STR_14:
   515  00FF84  61                 	db	97	;'a'
   516  00FF85  64                 	db	100	;'d'
   517  00FF86  6A                 	db	106	;'j'
   518  00FF87  75                 	db	117	;'u'
   519  00FF88  73                 	db	115	;'s'
   520  00FF89  74                 	db	116	;'t'
   521  00FF8A  5F                 	db	95	;'_'
   522  00FF8B  74                 	db	116	;'t'
   523  00FF8C  69                 	db	105	;'i'
   524  00FF8D  6D                 	db	109	;'m'
   525  00FF8E  65                 	db	101	;'e'
   526  00FF8F  00                 	db	0
   527  00FF90                     STR_21:
   528  00FF90  70                 	db	112	;'p'
   529  00FF91  72                 	db	114	;'r'
   530  00FF92  69                 	db	105	;'i'
   531  00FF93  6E                 	db	110	;'n'
   532  00FF94  74                 	db	116	;'t'
   533  00FF95  5F                 	db	95	;'_'
   534  00FF96  74                 	db	116	;'t'
   535  00FF97  69                 	db	105	;'i'
   536  00FF98  6D                 	db	109	;'m'
   537  00FF99  65                 	db	101	;'e'
   538  00FF9A  00                 	db	0
   539  00FF9B                     STR_12:
   540  00FF9B  52                 	db	82	;'R'
   541  00FF9C  45                 	db	69	;'E'
   542  00FF9D  53                 	db	83	;'S'
   543  00FF9E  45                 	db	69	;'E'
   544  00FF9F  54                 	db	84	;'T'
   545  00FFA0  28                 	db	40
   546  00FFA1  29                 	db	41
   547  00FFA2  3B                 	db	59	;';'
   548  00FFA3  00                 	db	0
   549  00FFA4                     STR_8:
   550  00FFA4  09                 	db	9
   551  00FFA5  65                 	db	101	;'e'
   552  00FFA6  72                 	db	114	;'r'
   553  00FFA7  72                 	db	114	;'r'
   554  00FFA8  6F                 	db	111	;'o'
   555  00FFA9  72                 	db	114	;'r'
   556  00FFAA  0A                 	db	10
   557  00FFAB  00                 	db	0
   558  00FFAC                     STR_37:
   559  00FFAC  63                 	db	99	;'c'
   560  00FFAD  6C                 	db	108	;'l'
   561  00FFAE  65                 	db	101	;'e'
   562  00FFAF  61                 	db	97	;'a'
   563  00FFB0  72                 	db	114	;'r'
   564  00FFB1  00                 	db	0
   565  00FFB2                     STR_2:
   566  00FFB2  20                 	db	32
   567  00FFB3  20                 	db	32
   568  00FFB4  20                 	db	32
   569  00FFB5  20                 	db	32
   570  00FFB6  00                 	db	0
   571  00FFB7                     STR_24:
   572  00FFB7  73                 	db	115	;'s'
   573  00FFB8  79                 	db	121	;'y'
   574  00FFB9  6E                 	db	110	;'n'
   575  00FFBA  63                 	db	99	;'c'
   576  00FFBB  00                 	db	0
   577  00FFBC                     STR_9:
   578  00FFBC  68                 	db	104	;'h'
   579  00FFBD  65                 	db	101	;'e'
   580  00FFBE  6C                 	db	108	;'l'
   581  00FFBF  70                 	db	112	;'p'
   582  00FFC0  00                 	db	0
   583  00FFC1                     STR_39:
   584  00FFC1  08                 	db	8
   585  00FFC2  20                 	db	32
   586  00FFC3  08                 	db	8
   587  00FFC4  00                 	db	0
   588  00FFC5                     STR_26:
   589  00FFC5  41                 	db	65	;'A'
   590  00FFC6  44                 	db	68	;'D'
   591  00FFC7  43                 	db	67	;'C'
   592  00FFC8  00                 	db	0
   593  00FFC9                     STR_28:
   594  00FFC9  50                 	db	80	;'P'
   595  00FFCA  57                 	db	87	;'W'
   596  00FFCB  4D                 	db	77	;'M'
   597  00FFCC  00                 	db	0
   598  00FFCD                     STR_25:
   599  00FFCD  61                 	db	97	;'a'
   600  00FFCE  64                 	db	100	;'d'
   601  00FFCF  63                 	db	99	;'c'
   602  00FFD0  00                 	db	0
   603  00FFD1                     STR_27:
   604  00FFD1  70                 	db	112	;'p'
   605  00FFD2  77                 	db	119	;'w'
   606  00FFD3  6D                 	db	109	;'m'
   607  00FFD4  00                 	db	0
   608  00FFD5                     STR_23:
   609  00FFD5  73                 	db	115	;'s'
   610  00FFD6  65                 	db	101	;'e'
   611  00FFD7  74                 	db	116	;'t'
   612  00FFD8  00                 	db	0
   613  00FFD9                     STR_6:
   614  00FFD9  29                 	db	41
   615  00FFDA  20                 	db	32
   616  00FFDB  00                 	db	0
   617  00FFDC                     STR_5:
   618  00FFDC  20                 	db	32
   619  00FFDD  28                 	db	40
   620  00FFDE  00                 	db	0
   621  00FFDF                     STR_13:
   622  00FFDF  61                 	db	97	;'a'
   623  00FFE0  74                 	db	116	;'t'
   624  00FFE1  00                 	db	0
   625  00FFE2                     STR_7:
   626  00FFE2  2D                 	db	45
   627  00FFE3  00                 	db	0
   628  00FFE4                     STR_3:
   629  00FFE4  2F                 	db	47
   630  00FFE5  00                 	db	0
   631  00FFE6                     STR_10:
   632  00FFE6  3F                 	db	63	;'?'
   633  00FFE7  00                 	db	0
   634  00FFE8                     STR_34:
   635  00FFE8  42                 	db	66	;'B'
   636  00FFE9  00                 	db	0
   637  00FFEA                     STR_32:
   638  00FFEA  47                 	db	71	;'G'
   639  00FFEB  00                 	db	0
   640  00FFEC                     STR_30:
   641  00FFEC  52                 	db	82	;'R'
   642  00FFED  00                 	db	0
   643  00FFEE                     STR_36:
   644  00FFEE  57                 	db	87	;'W'
   645  00FFEF  00                 	db	0
   646  00FFF0                     STR_33:
   647  00FFF0  62                 	db	98	;'b'
   648  00FFF1  00                 	db	0
   649  00FFF2                     STR_17:
   650  00FFF2  64                 	db	100	;'d'
   651  00FFF3  00                 	db	0
   652  00FFF4                     STR_31:
   653  00FFF4  67                 	db	103	;'g'
   654  00FFF5  00                 	db	0
   655  00FFF6                     STR_18:
   656  00FFF6  68                 	db	104	;'h'
   657  00FFF7  00                 	db	0
   658  00FFF8                     STR_20:
   659  00FFF8  73                 	db	115	;'s'
   660  00FFF9  00                 	db	0
   661  00FFFA                     STR_35:
   662  00FFFA  77                 	db	119	;'w'
   663  00FFFB  00                 	db	0
   664  00FFFC                     STR_15:
   665  00FFFC  79                 	db	121	;'y'
   666  00FFFD  00                 	db	0
   667  0000                     
   668                           ; #config settings
   669  00FFFE  00                 	db	0	; dummy byte at the end
   670  0000                     
   671                           	psect	cinit
   672  01231E                     __pcinit:
   673                           	opt stack 0
   674  01231E                     start_initialization:
   675                           	opt stack 0
   676  01231E                     __initialization:
   677                           	opt stack 0
   678                           
   679                           ; Clear objects allocated to BIGRAM (1000 bytes)
   680  01231E  EE04  F064         	lfsr	0,__pbssBIGRAM
   681  012322  EE13 F0E8          	lfsr	1,1000
   682  012326                     clear_0:
   683  012326  6AEE               	clrf	postinc0,c
   684  012328  50E5               	movf	postdec1,w,c
   685  01232A  50E1               	movf	fsr1l,w,c
   686  01232C  E1FC               	bnz	clear_0
   687  01232E  50E2               	movf	fsr1h,w,c
   688  012330  E1FA               	bnz	clear_0
   689                           
   690                           ; Clear objects allocated to BANK3 (250 bytes)
   691  012332  EE03  F000         	lfsr	0,__pbssBANK3
   692  012336  0EFA               	movlw	250
   693  012338                     clear_1:
   694  012338  6AEE               	clrf	postinc0,c
   695  01233A  06E8               	decf	wreg,f,c
   696  01233C  E1FD               	bnz	clear_1
   697                           
   698                           ; Clear objects allocated to BANK1 (35 bytes)
   699  01233E  EE01  F0C8         	lfsr	0,__pbssBANK1
   700  012342  0E23               	movlw	35
   701  012344                     clear_2:
   702  012344  6AEE               	clrf	postinc0,c
   703  012346  06E8               	decf	wreg,f,c
   704  012348  E1FD               	bnz	clear_2
   705                           
   706                           ; Clear objects allocated to BANK0 (8 bytes)
   707  01234A  EE00  F0B2         	lfsr	0,__pbssBANK0
   708  01234E  0E08               	movlw	8
   709  012350                     clear_3:
   710  012350  6AEE               	clrf	postinc0,c
   711  012352  06E8               	decf	wreg,f,c
   712  012354  E1FD               	bnz	clear_3
   713                           
   714                           ; Clear objects allocated to COMRAM (29 bytes)
   715  012356  EE00  F023         	lfsr	0,__pbssCOMRAM
   716  01235A  0E1D               	movlw	29
   717  01235C                     clear_4:
   718  01235C  6AEE               	clrf	postinc0,c
   719  01235E  06E8               	decf	wreg,f,c
   720  012360  E1FD               	bnz	clear_4
   721                           
   722                           ; Initialize objects allocated to BANK1 (1 bytes)
   723                           ; load TBLPTR registers with __pidataBANK1
   724  012362  0E91               	movlw	low __pidataBANK1
   725  012364  6EF6               	movwf	tblptrl,c
   726  012366  0E28               	movlw	high __pidataBANK1
   727  012368  6EF7               	movwf	tblptrh,c
   728  01236A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   729  01236C  6EF8               	movwf	tblptru,c
   730  01236E  0009               	tblrd		*+	;fetch initializer
   731  012370  CFF5 F1EB          	movff	tablat,__pdataBANK1
   732                           
   733                           ; Initialize objects allocated to COMRAM (1 bytes)
   734                           ; load TBLPTR registers with __pidataCOMRAM
   735  012374  0E90               	movlw	low __pidataCOMRAM
   736  012376  6EF6               	movwf	tblptrl,c
   737  012378  0E28               	movlw	high __pidataCOMRAM
   738  01237A  6EF7               	movwf	tblptrh,c
   739  01237C  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   740  01237E  6EF8               	movwf	tblptru,c
   741  012380  0009               	tblrd		*+	;fetch initializer
   742  012382  CFF5 F040          	movff	tablat,__pdataCOMRAM
   743  012386                     end_of_initialization:
   744                           	opt stack 0
   745  012386                     __end_of__initialization:
   746                           	opt stack 0
   747  012386  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   748  012388  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   749  01238A  0100               	movlb	0
   750  01238C  EFC8  F091         	goto	_main	;jump to C main() function
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           postinc0	equ	0xFEE
   756                           wreg	equ	0xFE8
   757                           postdec1	equ	0xFE5
   758                           fsr1h	equ	0xFE2
   759                           fsr1l	equ	0xFE1
   760                           
   761                           	psect	bssCOMRAM
   762  000023                     __pbssCOMRAM:
   763                           	opt stack 0
   764  000023                     epoch_to_caltime@day_cache:
   765                           	opt stack 0
   766  000023                     	ds	2
   767  000025                     millis_timer@cnt:
   768                           	opt stack 0
   769  000025                     	ds	2
   770  000027                     RTCC_loop@prev_halfsec:
   771                           	opt stack 0
   772  000027                     	ds	1
   773  000028                     _colon:
   774                           	opt stack 0
   775  000028                     	ds	1
   776  000029                     _display_flag:
   777                           	opt stack 0
   778  000029                     	ds	1
   779  00002A                     _edit_flag:
   780                           	opt stack 0
   781  00002A                     	ds	1
   782  00002B                     _rc_flag:
   783                           	opt stack 0
   784  00002B                     	ds	1
   785  00002C                     _rx_flag:
   786                           	opt stack 0
   787  00002C                     	ds	1
   788  00002D                     _t0if:
   789                           	opt stack 0
   790  00002D                     	ds	1
   791  00002E                     _time_change_flag:
   792                           	opt stack 0
   793  00002E                     	ds	1
   794  00002F                     _time_sync:
   795                           	opt stack 0
   796  00002F                     	ds	1
   797  000030                     epoch_to_caltime@year_cache:
   798                           	opt stack 0
   799  000030                     	ds	1
   800  000031                     _caltime_now:
   801                           	opt stack 0
   802  000031                     	ds	7
   803  000038                     _sw_G:
   804                           	opt stack 0
   805  000038                     	ds	4
   806  00003C                     _sw_R:
   807                           	opt stack 0
   808  00003C                     	ds	4
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           postdec1	equ	0xFE5
   816                           fsr1h	equ	0xFE2
   817                           fsr1l	equ	0xFE1
   818                           
   819                           	psect	dataCOMRAM
   820  000040                     __pdataCOMRAM:
   821                           	opt stack 0
   822  000040                     epoch_to_caltime@month_cache:
   823                           	opt stack 0
   824  000040                     	ds	1
   825                           tblptru	equ	0xFF8
   826                           tblptrh	equ	0xFF7
   827                           tblptrl	equ	0xFF6
   828                           tablat	equ	0xFF5
   829                           postinc0	equ	0xFEE
   830                           wreg	equ	0xFE8
   831                           postdec1	equ	0xFE5
   832                           fsr1h	equ	0xFE2
   833                           fsr1l	equ	0xFE1
   834                           
   835                           	psect	bssBANK0
   836  0000B2                     __pbssBANK0:
   837                           	opt stack 0
   838  0000B2                     _halfsec:
   839                           	opt stack 0
   840  0000B2                     	ds	1
   841  0000B3                     _light_mode:
   842                           	opt stack 0
   843  0000B3                     	ds	1
   844  0000B4                     _epoch_now:
   845                           	opt stack 0
   846  0000B4                     	ds	4
   847  0000B8                     normal_loop@_2503:
   848                           	opt stack 0
   849  0000B8                     	ds	1
   850  0000B9                     normal_loop@n:
   851                           	opt stack 0
   852  0000B9                     	ds	1
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           postdec1	equ	0xFE5
   860                           fsr1h	equ	0xFE2
   861                           fsr1l	equ	0xFE1
   862                           
   863                           	psect	bssBANK1
   864  0001C8                     __pbssBANK1:
   865                           	opt stack 0
   866  0001C8                     _ms:
   867                           	opt stack 0
   868  0001C8                     	ds	4
   869  0001CC                     _d1:
   870                           	opt stack 0
   871  0001CC                     	ds	3
   872  0001CF                     _rx_buf:
   873                           	opt stack 0
   874  0001CF                     	ds	8
   875  0001D7                     _tx_buf:
   876                           	opt stack 0
   877  0001D7                     	ds	8
   878  0001DF                     rx_loop@comm_buf:
   879                           	opt stack 0
   880  0001DF                     	ds	8
   881  0001E7                     _sw_B:
   882                           	opt stack 0
   883  0001E7                     	ds	4
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           postdec1	equ	0xFE5
   891                           fsr1h	equ	0xFE2
   892                           fsr1l	equ	0xFE1
   893                           
   894                           	psect	dataBANK1
   895  0001EB                     __pdataBANK1:
   896                           	opt stack 0
   897  0001EB                     rx_loop@comm_buf_init:
   898                           	opt stack 0
   899  0001EB                     	ds	1
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           postdec1	equ	0xFE5
   907                           fsr1h	equ	0xFE2
   908                           fsr1l	equ	0xFE1
   909                           
   910                           	psect	bssBANK3
   911  000300                     __pbssBANK3:
   912                           	opt stack 0
   913  000300                     main_init@rxbuf:
   914                           	opt stack 0
   915  000300                     	ds	250
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           postinc0	equ	0xFEE
   921                           wreg	equ	0xFE8
   922                           postdec1	equ	0xFE5
   923                           fsr1h	equ	0xFE2
   924                           fsr1l	equ	0xFE1
   925                           
   926                           	psect	bssBIGRAM
   927  000464                     __pbssBIGRAM:
   928                           	opt stack 0
   929  000464                     main_init@txbuf:
   930                           	opt stack 0
   931  000464                     	ds	1000
   932                           tblptru	equ	0xFF8
   933                           tblptrh	equ	0xFF7
   934                           tblptrl	equ	0xFF6
   935                           tablat	equ	0xFF5
   936                           postinc0	equ	0xFEE
   937                           wreg	equ	0xFE8
   938                           postdec1	equ	0xFE5
   939                           fsr1h	equ	0xFE2
   940                           fsr1l	equ	0xFE1
   941                           
   942                           	psect	cstackBANK4
   943  000400                     __pcstackBANK4:
   944                           	opt stack 0
   945  000400                     rx_loop@opland2:
   946                           	opt stack 0
   947                           
   948                           ; 100 bytes @ 0x0
   949  000400                     	ds	100
   950                           tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           tblptrl	equ	0xFF6
   953                           tablat	equ	0xFF5
   954                           postinc0	equ	0xFEE
   955                           wreg	equ	0xFE8
   956                           postdec1	equ	0xFE5
   957                           fsr1h	equ	0xFE2
   958                           fsr1l	equ	0xFE1
   959                           
   960                           	psect	cstackBANK2
   961  000200                     __pcstackBANK2:
   962                           	opt stack 0
   963  000200                     rx_loop@opland3:
   964                           	opt stack 0
   965                           
   966                           ; 100 bytes @ 0x0
   967  000200                     	ds	100
   968  000264                     rx_loop@opland1:
   969                           	opt stack 0
   970                           
   971                           ; 100 bytes @ 0x64
   972  000264                     	ds	100
   973                           tblptru	equ	0xFF8
   974                           tblptrh	equ	0xFF7
   975                           tblptrl	equ	0xFF6
   976                           tablat	equ	0xFF5
   977                           postinc0	equ	0xFEE
   978                           wreg	equ	0xFE8
   979                           postdec1	equ	0xFE5
   980                           fsr1h	equ	0xFE2
   981                           fsr1l	equ	0xFE1
   982                           
   983                           	psect	cstackBANK1
   984  000100                     __pcstackBANK1:
   985                           	opt stack 0
   986  000100                     rx_loop@buf:
   987                           	opt stack 0
   988                           
   989                           ; 100 bytes @ 0x0
   990  000100                     	ds	100
   991  000164                     rx_loop@opcode:
   992                           	opt stack 0
   993                           
   994                           ; 100 bytes @ 0x64
   995  000164                     	ds	100
   996                           tblptru	equ	0xFF8
   997                           tblptrh	equ	0xFF7
   998                           tblptrl	equ	0xFF6
   999                           tablat	equ	0xFF5
  1000                           postinc0	equ	0xFEE
  1001                           wreg	equ	0xFE8
  1002                           postdec1	equ	0xFE5
  1003                           fsr1h	equ	0xFE2
  1004                           fsr1l	equ	0xFE1
  1005                           
  1006                           	psect	cstackBANK0
  1007  000060                     __pcstackBANK0:
  1008                           	opt stack 0
  1009  000060                     ??_ringbuf_num:
  1010  000060                     ??_my_strcmp:
  1011  000060                     ?___wmul:
  1012                           	opt stack 0
  1013  000060                     ?___llmod:
  1014                           	opt stack 0
  1015  000060                     RTCC_to_caltime@dumy:
  1016                           	opt stack 0
  1017  000060                     ___awdiv@counter:
  1018                           	opt stack 0
  1019  000060                     ___awmod@counter:
  1020                           	opt stack 0
  1021  000060                     ___lwmod@counter:
  1022                           	opt stack 0
  1023  000060                     ringbuf_init@rb:
  1024                           	opt stack 0
  1025  000060                     ___wmul@multiplier:
  1026                           	opt stack 0
  1027  000060                     ___llmod@dividend:
  1028                           	opt stack 0
  1029                           
  1030                           ; 4 bytes @ 0x0
  1031  000060                     	ds	1
  1032  000061                     ___awdiv@sign:
  1033                           	opt stack 0
  1034  000061                     ___awmod@sign:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x1
  1038  000061                     	ds	1
  1039  000062                     month_length@month:
  1040                           	opt stack 0
  1041  000062                     ringbuf_init@internal_buf:
  1042                           	opt stack 0
  1043  000062                     ___wmul@multiplicand:
  1044                           	opt stack 0
  1045  000062                     ___awdiv@quotient:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x2
  1049  000062                     	ds	1
  1050  000063                     ??_month_length:
  1051                           
  1052                           ; 0 bytes @ 0x3
  1053  000063                     	ds	1
  1054  000064                     d_to_x@dec:
  1055                           	opt stack 0
  1056  000064                     ringbuf_init@bufsize:
  1057                           	opt stack 0
  1058  000064                     ___wmul@product:
  1059                           	opt stack 0
  1060  000064                     ___llmod@divisor:
  1061                           	opt stack 0
  1062                           
  1063                           ; 4 bytes @ 0x4
  1064  000064                     	ds	1
  1065  000065                     caltime_to_RTCC@ct:
  1066                           	opt stack 0
  1067                           
  1068                           ; 2 bytes @ 0x5
  1069  000065                     	ds	1
  1070  000066                     ??_ringbuf_pop:
  1071  000066                     ??_ringbuf_backspace:
  1072  000066                     ?_my_atoi:
  1073                           	opt stack 0
  1074  000066                     ?___lwdiv:
  1075                           	opt stack 0
  1076  000066                     ringbuf_put@rb:
  1077                           	opt stack 0
  1078  000066                     my_atoi@str:
  1079                           	opt stack 0
  1080  000066                     ___lwdiv@dividend:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x6
  1084  000066                     	ds	1
  1085  000067                     month_length@year:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0x7
  1089  000067                     	ds	1
  1090  000068                     ??_my_atoi:
  1091  000068                     ?___lmul:
  1092                           	opt stack 0
  1093  000068                     ringbuf_put@asciicode:
  1094                           	opt stack 0
  1095  000068                     ___lwdiv@divisor:
  1096                           	opt stack 0
  1097  000068                     ___lmul@multiplier:
  1098                           	opt stack 0
  1099                           
  1100                           ; 4 bytes @ 0x8
  1101  000068                     	ds	1
  1102  000069                     ??_ringbuf_put:
  1103                           
  1104                           ; 0 bytes @ 0x9
  1105  000069                     	ds	1
  1106  00006A                     ringbuf_pop@ret:
  1107                           	opt stack 0
  1108  00006A                     ___lwdiv@counter:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0xA
  1112  00006A                     	ds	1
  1113  00006B                     ___lwdiv@quotient:
  1114                           	opt stack 0
  1115                           
  1116                           ; 2 bytes @ 0xB
  1117  00006B                     	ds	1
  1118  00006C                     my_atoi@ret:
  1119                           	opt stack 0
  1120  00006C                     ___lmul@multiplicand:
  1121                           	opt stack 0
  1122                           
  1123                           ; 4 bytes @ 0xC
  1124  00006C                     	ds	1
  1125  00006D                     tx_sendn@value:
  1126                           	opt stack 0
  1127  00006D                     my_utoa@str:
  1128                           	opt stack 0
  1129                           
  1130                           ; 2 bytes @ 0xD
  1131  00006D                     	ds	1
  1132  00006E                     PWM_set@value:
  1133                           	opt stack 0
  1134                           
  1135                           ; 2 bytes @ 0xE
  1136  00006E                     	ds	1
  1137  00006F                     tx_sendn@digits:
  1138                           	opt stack 0
  1139  00006F                     my_utoa@value:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0xF
  1143  00006F                     	ds	1
  1144  000070                     ??_PWM_set:
  1145  000070                     tx_sendn@i:
  1146                           	opt stack 0
  1147  000070                     ___lmul@product:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x10
  1151  000070                     	ds	1
  1152  000071                     my_utoa@digits:
  1153                           	opt stack 0
  1154  000071                     tx_sendn@temp:
  1155                           	opt stack 0
  1156                           
  1157                           ; 2 bytes @ 0x11
  1158  000071                     	ds	1
  1159  000072                     my_utoa@d:
  1160                           	opt stack 0
  1161  000072                     PWM_set@color:
  1162                           	opt stack 0
  1163                           
  1164                           ; 1 bytes @ 0x12
  1165  000072                     	ds	1
  1166  000073                     my_utoa@v:
  1167                           	opt stack 0
  1168                           
  1169                           ; 2 bytes @ 0x13
  1170  000073                     	ds	1
  1171  000074                     ?___lldiv:
  1172                           	opt stack 0
  1173  000074                     caltime_to_epoch@ct:
  1174                           	opt stack 0
  1175  000074                     ___lldiv@dividend:
  1176                           	opt stack 0
  1177                           
  1178                           ; 4 bytes @ 0x14
  1179  000074                     	ds	1
  1180  000075                     tx_send_dec@edit:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0x15
  1184  000075                     	ds	1
  1185  000076                     caltime_to_epoch@ep:
  1186                           	opt stack 0
  1187  000076                     tx_send_dec@str:
  1188                           	opt stack 0
  1189                           
  1190                           ; 10 bytes @ 0x16
  1191  000076                     	ds	2
  1192  000078                     ??_caltime_to_epoch:
  1193  000078                     ___lldiv@divisor:
  1194                           	opt stack 0
  1195                           
  1196                           ; 4 bytes @ 0x18
  1197  000078                     	ds	4
  1198  00007C                     caltime_to_epoch@year:
  1199                           	opt stack 0
  1200  00007C                     ___lldiv@quotient:
  1201                           	opt stack 0
  1202                           
  1203                           ; 4 bytes @ 0x1C
  1204  00007C                     	ds	1
  1205  00007D                     caltime_to_epoch@month_2065:
  1206                           	opt stack 0
  1207                           
  1208                           ; 1 bytes @ 0x1D
  1209  00007D                     	ds	1
  1210  00007E                     caltime_to_epoch@epoch:
  1211                           	opt stack 0
  1212                           
  1213                           ; 4 bytes @ 0x1E
  1214  00007E                     	ds	2
  1215  000080                     tx_send_dec@dec:
  1216                           	opt stack 0
  1217  000080                     ___lldiv@counter:
  1218                           	opt stack 0
  1219                           
  1220                           ; 1 bytes @ 0x20
  1221  000080                     	ds	1
  1222  000081                     ?_get_quot_rem:
  1223                           	opt stack 0
  1224  000081                     get_quot_rem@quot:
  1225                           	opt stack 0
  1226                           
  1227                           ; 2 bytes @ 0x21
  1228  000081                     	ds	1
  1229  000082                     caltime_to_epoch@month:
  1230                           	opt stack 0
  1231                           
  1232                           ; 1 bytes @ 0x22
  1233  000082                     	ds	1
  1234  000083                     get_quot_rem@div:
  1235                           	opt stack 0
  1236  000083                     RTCC_from_RTCC@ct:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x23
  1240  000083                     	ds	2
  1241  000085                     RTCC_from_RTCC@ep:
  1242                           	opt stack 0
  1243  000085                     get_quot_rem@num:
  1244                           	opt stack 0
  1245                           
  1246                           ; 4 bytes @ 0x25
  1247  000085                     	ds	2
  1248  000087                     ??_normal_loop:
  1249                           
  1250                           ; 0 bytes @ 0x27
  1251  000087                     	ds	2
  1252  000089                     epoch_to_caltime@ct:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x29
  1256  000089                     	ds	2
  1257  00008B                     epoch_to_caltime@ep:
  1258                           	opt stack 0
  1259  00008B                     normal_loop@scan:
  1260                           	opt stack 0
  1261                           
  1262                           ; 2 bytes @ 0x2B
  1263  00008B                     	ds	2
  1264  00008D                     ??_epoch_to_caltime:
  1265  00008D                     normal_loop@value:
  1266                           	opt stack 0
  1267                           
  1268                           ; 1 bytes @ 0x2D
  1269  00008D                     	ds	1
  1270  00008E                     normal_loop@value_2504:
  1271                           	opt stack 0
  1272                           
  1273                           ; 1 bytes @ 0x2E
  1274  00008E                     	ds	1
  1275  00008F                     normal_loop@i_2486:
  1276                           	opt stack 0
  1277  00008F                     epoch_to_caltime@day_since_epoch:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x2F
  1281  00008F                     	ds	1
  1282  000090                     normal_loop@i:
  1283                           	opt stack 0
  1284                           
  1285                           ; 1 bytes @ 0x30
  1286  000090                     	ds	1
  1287  000091                     epoch_to_caltime@day:
  1288                           	opt stack 0
  1289  000091                     normal_loop@temp:
  1290                           	opt stack 0
  1291                           
  1292                           ; 4 bytes @ 0x31
  1293  000091                     	ds	2
  1294  000093                     epoch_to_caltime@year:
  1295                           	opt stack 0
  1296                           
  1297                           ; 1 bytes @ 0x33
  1298  000093                     	ds	1
  1299  000094                     epoch_to_caltime@month:
  1300                           	opt stack 0
  1301                           
  1302                           ; 1 bytes @ 0x34
  1303  000094                     	ds	1
  1304  000095                     epoch_to_caltime@num:
  1305                           	opt stack 0
  1306                           
  1307                           ; 4 bytes @ 0x35
  1308  000095                     	ds	4
  1309  000099                     RTCC_from_caltime@ct:
  1310                           	opt stack 0
  1311  000099                     RTCC_from_epoch@ct:
  1312                           	opt stack 0
  1313                           
  1314                           ; 2 bytes @ 0x39
  1315  000099                     	ds	2
  1316  00009B                     RTCC_from_caltime@ep:
  1317                           	opt stack 0
  1318  00009B                     RTCC_from_epoch@ep:
  1319                           	opt stack 0
  1320                           
  1321                           ; 2 bytes @ 0x3B
  1322  00009B                     	ds	2
  1323  00009D                     comm_at@hand:
  1324                           	opt stack 0
  1325                           
  1326                           ; 2 bytes @ 0x3D
  1327  00009D                     	ds	2
  1328  00009F                     comm_at@min:
  1329                           	opt stack 0
  1330                           
  1331                           ; 1 bytes @ 0x3F
  1332  00009F                     	ds	1
  1333  0000A0                     comm_at@max:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x40
  1337  0000A0                     	ds	1
  1338  0000A1                     comm_at@value:
  1339                           	opt stack 0
  1340                           
  1341                           ; 1 bytes @ 0x41
  1342  0000A1                     	ds	1
  1343  0000A2                     command_operation@opcode:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0x42
  1347  0000A2                     	ds	2
  1348  0000A4                     command_operation@opland1:
  1349                           	opt stack 0
  1350                           
  1351                           ; 2 bytes @ 0x44
  1352  0000A4                     	ds	2
  1353  0000A6                     command_operation@opland2:
  1354                           	opt stack 0
  1355                           
  1356                           ; 2 bytes @ 0x46
  1357  0000A6                     	ds	2
  1358  0000A8                     command_operation@opland3:
  1359                           	opt stack 0
  1360                           
  1361                           ; 2 bytes @ 0x48
  1362  0000A8                     	ds	2
  1363  0000AA                     _command_operation$3180:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0x4A
  1367  0000AA                     	ds	1
  1368  0000AB                     ??_rx_loop:
  1369                           
  1370                           ; 0 bytes @ 0x4B
  1371  0000AB                     	ds	2
  1372  0000AD                     _rx_loop$3181:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x4D
  1376  0000AD                     	ds	2
  1377  0000AF                     rx_loop@i_2444:
  1378                           	opt stack 0
  1379                           
  1380                           ; 1 bytes @ 0x4F
  1381  0000AF                     	ds	1
  1382  0000B0                     rx_loop@ascii:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0x50
  1386  0000B0                     	ds	1
  1387  0000B1                     rx_loop@i:
  1388                           	opt stack 0
  1389                           
  1390                           ; 1 bytes @ 0x51
  1391  0000B1                     	ds	1
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           postdec1	equ	0xFE5
  1399                           fsr1h	equ	0xFE2
  1400                           fsr1l	equ	0xFE1
  1401                           
  1402                           	psect	cstackCOMRAM
  1403  000001                     __pcstackCOMRAM:
  1404                           	opt stack 0
  1405  000001                     ?i2_ringbuf_num:
  1406                           	opt stack 0
  1407  000001                     button_timer_interrupt@bt:
  1408                           	opt stack 0
  1409  000001                     i2ringbuf_num@rb:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x0
  1413  000001                     	ds	2
  1414  000003                     ??i2_ringbuf_num:
  1415  000003                     button_timer_interrupt@sw_value:
  1416                           	opt stack 0
  1417                           
  1418                           ; 1 bytes @ 0x2
  1419  000003                     	ds	1
  1420  000004                     
  1421                           ; 0 bytes @ 0x3
  1422  000004                     	ds	5
  1423  000009                     i2ringbuf_put@rb:
  1424                           	opt stack 0
  1425  000009                     i2ringbuf_pop@rb:
  1426                           	opt stack 0
  1427                           
  1428                           ; 2 bytes @ 0x8
  1429  000009                     	ds	2
  1430  00000B                     ??i2_ringbuf_pop:
  1431  00000B                     i2ringbuf_put@asciicode:
  1432                           	opt stack 0
  1433                           
  1434                           ; 1 bytes @ 0xA
  1435  00000B                     	ds	1
  1436  00000C                     ??i2_ringbuf_put:
  1437                           
  1438                           ; 0 bytes @ 0xB
  1439  00000C                     	ds	3
  1440  00000F                     i2ringbuf_pop@ret:
  1441                           	opt stack 0
  1442                           
  1443                           ; 1 bytes @ 0xE
  1444  00000F                     	ds	1
  1445  000010                     UART_ISR@ascii:
  1446                           	opt stack 0
  1447                           
  1448                           ; 1 bytes @ 0xF
  1449  000010                     	ds	1
  1450  000011                     ??_ISR:
  1451                           
  1452                           ; 0 bytes @ 0x10
  1453  000011                     	ds	14
  1454  00001F                     ??_timer0_init:
  1455  00001F                     ??_timer3_init:
  1456  00001F                     ??_x_to_d:
  1457  00001F                     ?_ADC:
  1458                           	opt stack 0
  1459  00001F                     ?_ringbuf_num:
  1460                           	opt stack 0
  1461  00001F                     ?___awdiv:
  1462                           	opt stack 0
  1463  00001F                     ?___awmod:
  1464                           	opt stack 0
  1465  00001F                     ?___lwmod:
  1466                           	opt stack 0
  1467  00001F                     timer1_init@clock_select:
  1468                           	opt stack 0
  1469  00001F                     ADC_init@p_ref:
  1470                           	opt stack 0
  1471  00001F                     PWM_init@PR:
  1472                           	opt stack 0
  1473  00001F                     ___llmod@counter:
  1474                           	opt stack 0
  1475  00001F                     ringbuf_num@rb:
  1476                           	opt stack 0
  1477  00001F                     ringbuf_delete@rb:
  1478                           	opt stack 0
  1479  00001F                     my_strcmp@str1:
  1480                           	opt stack 0
  1481  00001F                     ___awdiv@dividend:
  1482                           	opt stack 0
  1483  00001F                     ___awmod@dividend:
  1484                           	opt stack 0
  1485  00001F                     ___lwmod@dividend:
  1486                           	opt stack 0
  1487                           
  1488                           ; 2 bytes @ 0x1E
  1489  00001F                     	ds	1
  1490  000020                     ??_timer1_init:
  1491  000020                     timer0_init@prescaler:
  1492                           	opt stack 0
  1493  000020                     timer3_init@prescaler:
  1494                           	opt stack 0
  1495  000020                     x_to_d@hex:
  1496                           	opt stack 0
  1497                           
  1498                           ; 1 bytes @ 0x1F
  1499  000020                     	ds	1
  1500  000021                     ??_ADC:
  1501  000021                     timer1_init@prescaler:
  1502                           	opt stack 0
  1503  000021                     tx_send@asciicode:
  1504                           	opt stack 0
  1505  000021                     ringbuf_pop@rb:
  1506                           	opt stack 0
  1507  000021                     ringbuf_backspace@rb:
  1508                           	opt stack 0
  1509  000021                     tx_sends@asciicode:
  1510                           	opt stack 0
  1511  000021                     RTCC_to_caltime@ct:
  1512                           	opt stack 0
  1513  000021                     my_strcmp@str2:
  1514                           	opt stack 0
  1515  000021                     ___awdiv@divisor:
  1516                           	opt stack 0
  1517  000021                     ___awmod@divisor:
  1518                           	opt stack 0
  1519  000021                     ___lwmod@divisor:
  1520                           	opt stack 0
  1521                           
  1522                           ; 2 bytes @ 0x20
  1523  000021                     	ds	1
  1524  000022                     ADC@ch:
  1525                           	opt stack 0
  1526                           
  1527                           ; 1 bytes @ 0x21
  1528  000022                     	ds	1
  1529  000023                     tblptru	equ	0xFF8
  1530                           tblptrh	equ	0xFF7
  1531                           tblptrl	equ	0xFF6
  1532                           tablat	equ	0xFF5
  1533                           postinc0	equ	0xFEE
  1534                           wreg	equ	0xFE8
  1535                           postdec1	equ	0xFE5
  1536                           fsr1h	equ	0xFE2
  1537                           fsr1l	equ	0xFE1
  1538                           
  1539                           ; 0 bytes @ 0x22
  1540 ;;
  1541 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1542 ;;
  1543 ;; *************** function _main *****************
  1544 ;; Defined at:
  1545 ;;		line 424 in file "PIC18F27J53-killifish_light02.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2  658[None  ] int 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels required when called:   12
  1565 ;; This function calls:
  1566 ;;		_RTCC_from_RTCC
  1567 ;;		_RTCC_from_epoch
  1568 ;;		_RTCC_loop
  1569 ;;		_main_init
  1570 ;;		_normal_loop
  1571 ;;		_rx_loop
  1572 ;; This function is called by:
  1573 ;;		Startup code after reset
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text0
  1578  012390                     __ptext0:
  1579                           	opt stack 0
  1580  012390                     _main:
  1581                           	opt stack 19
  1582                           
  1583                           ;PIC18F27J53-killifish_light02.c: 425: main_init();
  1584                           
  1585                           ;incstack = 0
  1586  012390  EC86  F08F         	call	_main_init	;wreg free
  1587                           
  1588                           ;PIC18F27J53-killifish_light02.c: 426: INTCONbits.GIE = 1;
  1589  012394  8EF2               	bsf	intcon,7,c	;volatile
  1590                           
  1591                           ;PIC18F27J53-killifish_light02.c: 428: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1592  012396  0E31               	movlw	low _caltime_now
  1593  012398  0100               	movlb	0	; () banked
  1594  01239A  6F83               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1595  01239C  0E00               	movlw	high _caltime_now
  1596  01239E  0100               	movlb	0	; () banked
  1597  0123A0  6F84               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1598  0123A2  0EB4               	movlw	low _epoch_now
  1599  0123A4  0100               	movlb	0	; () banked
  1600  0123A6  6F85               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1601  0123A8  0E00               	movlw	high _epoch_now
  1602  0123AA  0100               	movlb	0	; () banked
  1603  0123AC  6F86               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1604  0123AE  ECD7  F093         	call	_RTCC_from_RTCC	;wreg free
  1605                           
  1606                           ;PIC18F27J53-killifish_light02.c: 429: if (caltime_now.DD == 0) {
  1607  0123B2  5035               	movf	_caltime_now+4,w,c
  1608  0123B4  A4D8               	btfss	status,2,c
  1609  0123B6  D017               	goto	l5359
  1610                           
  1611                           ;PIC18F27J53-killifish_light02.c: 430: epoch_now = 0;
  1612  0123B8  0E00               	movlw	0
  1613  0123BA  0100               	movlb	0	; () banked
  1614  0123BC  6FB4               	movwf	_epoch_now& (0+255),b
  1615  0123BE  0E00               	movlw	0
  1616  0123C0  6FB5               	movwf	(_epoch_now+1)& (0+255),b
  1617  0123C2  0E00               	movlw	0
  1618  0123C4  6FB6               	movwf	(_epoch_now+2)& (0+255),b
  1619  0123C6  0E00               	movlw	0
  1620  0123C8  6FB7               	movwf	(_epoch_now+3)& (0+255),b
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;PIC18F27J53-killifish_light02.c: 431: RTCC_from_epoch(&caltime_now, &epoch_now);
  1624  0123CA  0E31               	movlw	low _caltime_now
  1625  0123CC  0100               	movlb	0	; () banked
  1626  0123CE  6F99               	movwf	RTCC_from_epoch@ct& (0+255),b
  1627  0123D0  0E00               	movlw	high _caltime_now
  1628  0123D2  0100               	movlb	0	; () banked
  1629  0123D4  6F9A               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1630  0123D6  0EB4               	movlw	low _epoch_now
  1631  0123D8  0100               	movlb	0	; () banked
  1632  0123DA  6F9B               	movwf	RTCC_from_epoch@ep& (0+255),b
  1633  0123DC  0E00               	movlw	high _epoch_now
  1634  0123DE  0100               	movlb	0	; () banked
  1635  0123E0  6F9C               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1636  0123E2  ECE8  F093         	call	_RTCC_from_epoch	;wreg free
  1637  0123E6                     l5359:
  1638                           
  1639                           ;PIC18F27J53-killifish_light02.c: 435: INTCONbits.GIE = 0;
  1640  0123E6  9EF2               	bcf	intcon,7,c	;volatile
  1641                           
  1642                           ;PIC18F27J53-killifish_light02.c: 436: RTCC_loop();
  1643  0123E8  EC18  F093         	call	_RTCC_loop	;wreg free
  1644                           
  1645                           ;PIC18F27J53-killifish_light02.c: 437: rx_loop();
  1646  0123EC  ECF5  F083         	call	_rx_loop	;wreg free
  1647                           
  1648                           ;PIC18F27J53-killifish_light02.c: 438: normal_loop();
  1649  0123F0  EC73  F082         	call	_normal_loop	;wreg free
  1650                           
  1651                           ;PIC18F27J53-killifish_light02.c: 439: INTCONbits.GIE = 1;
  1652  0123F4  8EF2               	bsf	intcon,7,c	;volatile
  1653  0123F6  D7F7               	goto	l5359
  1654  0123F8                     __end_of_main:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           intcon	equ	0xFF2
  1661                           postinc0	equ	0xFEE
  1662                           wreg	equ	0xFE8
  1663                           postdec1	equ	0xFE5
  1664                           fsr1h	equ	0xFE2
  1665                           fsr1l	equ	0xFE1
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _rx_loop *****************
  1669 ;; Defined at:
  1670 ;;		line 292 in file "PIC18F27J53-killifish_light02.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  i               1   79[BANK0 ] unsigned char 
  1675 ;;  opland2       100    0[BANK4 ] unsigned char [100]
  1676 ;;  opland1       100  100[BANK2 ] unsigned char [100]
  1677 ;;  opcode        100  100[BANK1 ] unsigned char [100]
  1678 ;;  opland3       100    0[BANK2 ] unsigned char [100]
  1679 ;;  i               1   81[BANK0 ] unsigned char 
  1680 ;;  ascii           1   80[BANK0 ] unsigned char 
  1681 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1682 ;; Return value:  Size  Location     Type
  1683 ;;		None               void
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;      Locals:         0       5     200     200       0     100       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;      Totals:         0       7     200     200       0     100       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;Total ram usage:      507 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:   11
  1698 ;; This function calls:
  1699 ;;		_command_operation
  1700 ;;		_ringbuf_backspace
  1701 ;;		_ringbuf_delete
  1702 ;;		_ringbuf_init
  1703 ;;		_ringbuf_num
  1704 ;;		_ringbuf_pop
  1705 ;;		_ringbuf_put
  1706 ;;		_tx_send
  1707 ;;		_tx_sendn
  1708 ;;		_tx_sends
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text1
  1715  0107EA                     __ptext1:
  1716                           	opt stack 0
  1717  0107EA                     _rx_loop:
  1718                           	opt stack 19
  1719                           
  1720                           ;PIC18F27J53-killifish_light02.c: 293: static ringbuf_t comm_buf;
  1721                           ;PIC18F27J53-killifish_light02.c: 294: static uint8_t comm_buf_init = 1;
  1722                           ;PIC18F27J53-killifish_light02.c: 295: if (comm_buf_init) {
  1723                           
  1724                           ;incstack = 0
  1725  0107EA  0101               	movlb	1	; () banked
  1726  0107EC  51EB               	movf	rx_loop@comm_buf_init& (0+255),w,b
  1727  0107EE  0101               	movlb	1	; () banked
  1728  0107F0  B4D8               	btfsc	status,2,c
  1729  0107F2  D016               	goto	l5039
  1730                           
  1731                           ; BSR set to: 1
  1732                           ;PIC18F27J53-killifish_light02.c: 296: comm_buf_init = 0;
  1733  0107F4  0E00               	movlw	0
  1734  0107F6  0101               	movlb	1	; () banked
  1735  0107F8  6FEB               	movwf	rx_loop@comm_buf_init& (0+255),b
  1736                           
  1737                           ; BSR set to: 1
  1738                           ;PIC18F27J53-killifish_light02.c: 297: char buf[100];
  1739                           ;PIC18F27J53-killifish_light02.c: 298: ringbuf_init(&comm_buf, buf, sizeof (buf));
  1740  0107FA  0EDF               	movlw	low rx_loop@comm_buf
  1741  0107FC  0100               	movlb	0	; () banked
  1742  0107FE  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1743  010800  0E01               	movlw	high rx_loop@comm_buf
  1744  010802  0100               	movlb	0	; () banked
  1745  010804  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1746  010806  0E00               	movlw	low rx_loop@buf
  1747  010808  0100               	movlb	0	; () banked
  1748  01080A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1749  01080C  0E01               	movlw	high rx_loop@buf
  1750  01080E  0100               	movlb	0	; () banked
  1751  010810  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1752  010812  0E00               	movlw	0
  1753  010814  0100               	movlb	0	; () banked
  1754  010816  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1755  010818  0E64               	movlw	100
  1756  01081A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1757  01081C  EC5C  F092         	call	_ringbuf_init	;wreg free
  1758  010820                     l5039:
  1759                           
  1760                           ;PIC18F27J53-killifish_light02.c: 299: }
  1761                           ;PIC18F27J53-killifish_light02.c: 300: if (ringbuf_num(&rx_buf)) {
  1762  010820  0ECF               	movlw	low _rx_buf
  1763  010822  6E1F               	movwf	ringbuf_num@rb,c
  1764  010824  0E01               	movlw	high _rx_buf
  1765  010826  6E20               	movwf	ringbuf_num@rb+1,c
  1766  010828  EC0E  F08A         	call	_ringbuf_num	;wreg free
  1767  01082C  501F               	movf	?_ringbuf_num,w,c
  1768  01082E  1020               	iorwf	?_ringbuf_num+1,w,c
  1769  010830  B4D8               	btfsc	status,2,c
  1770  010832  0012               	return	
  1771                           
  1772                           ;PIC18F27J53-killifish_light02.c: 301: char ascii = ringbuf_pop(&rx_buf);
  1773  010834  0ECF               	movlw	low _rx_buf
  1774  010836  6E21               	movwf	ringbuf_pop@rb,c
  1775  010838  0E01               	movlw	high _rx_buf
  1776  01083A  6E22               	movwf	ringbuf_pop@rb+1,c
  1777  01083C  EC1B  F08C         	call	_ringbuf_pop	;wreg free
  1778  010840  0100               	movlb	0	; () banked
  1779  010842  6FB0               	movwf	rx_loop@ascii& (0+255),b
  1780                           
  1781                           ;PIC18F27J53-killifish_light02.c: 302: switch (ascii) {
  1782  010844  D13B               	goto	l5105
  1783  010846                     l5043:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;PIC18F27J53-killifish_light02.c: 304: ringbuf_put(&comm_buf, '\0');
  1787  010846  0EDF               	movlw	low rx_loop@comm_buf
  1788  010848  0100               	movlb	0	; () banked
  1789  01084A  6F66               	movwf	ringbuf_put@rb& (0+255),b
  1790  01084C  0E01               	movlw	high rx_loop@comm_buf
  1791  01084E  0100               	movlb	0	; () banked
  1792  010850  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1793  010852  0E00               	movlw	0
  1794  010854  0100               	movlb	0	; () banked
  1795  010856  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  1796  010858  ECE4  F08A         	call	_ringbuf_put	;wreg free
  1797                           
  1798                           ;PIC18F27J53-killifish_light02.c: 305: tx_send('\t');
  1799  01085C  0E09               	movlw	9
  1800  01085E  EC28  F094         	call	_tx_send
  1801                           
  1802                           ;PIC18F27J53-killifish_light02.c: 306: tx_sendn(ringbuf_num(&comm_buf) - 1, 2);
  1803  010862  0EDF               	movlw	low rx_loop@comm_buf
  1804  010864  6E1F               	movwf	ringbuf_num@rb,c
  1805  010866  0E01               	movlw	high rx_loop@comm_buf
  1806  010868  6E20               	movwf	ringbuf_num@rb+1,c
  1807  01086A  EC0E  F08A         	call	_ringbuf_num	;wreg free
  1808  01086E  0EFF               	movlw	255
  1809  010870  241F               	addwf	?_ringbuf_num,w,c
  1810  010872  0100               	movlb	0	; () banked
  1811  010874  6FAD               	movwf	_rx_loop$3181& (0+255),b
  1812  010876  0EFF               	movlw	255
  1813  010878  2020               	addwfc	?_ringbuf_num+1,w,c
  1814  01087A  0100               	movlb	0	; () banked
  1815  01087C  6FAE               	movwf	(_rx_loop$3181+1)& (0+255),b
  1816                           
  1817                           ;PIC18F27J53-killifish_light02.c: 306: tx_sendn(ringbuf_num(&comm_buf) - 1, 2);
  1818  01087E  C0AD  F06D         	movff	_rx_loop$3181,tx_sendn@value
  1819  010882  C0AE  F06E         	movff	_rx_loop$3181+1,tx_sendn@value+1
  1820  010886  0E02               	movlw	2
  1821  010888  0100               	movlb	0	; () banked
  1822  01088A  6F6F               	movwf	tx_sendn@digits& (0+255),b
  1823  01088C  EC55  F091         	call	_tx_sendn	;wreg free
  1824                           
  1825                           ;PIC18F27J53-killifish_light02.c: 307: tx_sends("\n");
  1826  010890  0E82               	movlw	low (STR_11+313)
  1827  010892  6E21               	movwf	tx_sends@asciicode,c
  1828  010894  0EFF               	movlw	high (STR_11+313)
  1829  010896  6E22               	movwf	tx_sends@asciicode+1,c
  1830  010898  ECFC  F091         	call	_tx_sends	;wreg free
  1831                           
  1832                           ;PIC18F27J53-killifish_light02.c: 308: char opcode[100];
  1833                           ;PIC18F27J53-killifish_light02.c: 309: char opland1[100];
  1834                           ;PIC18F27J53-killifish_light02.c: 310: char opland2[100];
  1835                           ;PIC18F27J53-killifish_light02.c: 311: char opland3[100];
  1836                           ;PIC18F27J53-killifish_light02.c: 312: uint8_t i;
  1837                           ;PIC18F27J53-killifish_light02.c: 313: for (i = 0; opcode[i] = ringbuf_pop(&comm_buf); i
      +                          ++);
  1838  01089C  0E00               	movlw	0
  1839  01089E  0100               	movlb	0	; () banked
  1840  0108A0  6FB1               	movwf	rx_loop@i& (0+255),b
  1841  0108A2  D002               	goto	l5051
  1842  0108A4                     l5049:
  1843                           
  1844                           ; BSR set to: 0
  1845  0108A4  0100               	movlb	0	; () banked
  1846  0108A6  2BB1               	incf	rx_loop@i& (0+255),f,b
  1847  0108A8                     l5051:
  1848                           
  1849                           ; BSR set to: 0
  1850  0108A8  0EDF               	movlw	low rx_loop@comm_buf
  1851  0108AA  6E21               	movwf	ringbuf_pop@rb,c
  1852  0108AC  0E01               	movlw	high rx_loop@comm_buf
  1853  0108AE  6E22               	movwf	ringbuf_pop@rb+1,c
  1854  0108B0  EC1B  F08C         	call	_ringbuf_pop	;wreg free
  1855  0108B4  0100               	movlb	0	; () banked
  1856  0108B6  6FAB               	movwf	??_rx_loop& (0+255),b
  1857  0108B8  0100               	movlb	0	; () banked
  1858  0108BA  51B1               	movf	rx_loop@i& (0+255),w,b
  1859  0108BC  0D01               	mullw	1
  1860  0108BE  0E64               	movlw	low rx_loop@opcode
  1861  0108C0  24F3               	addwf	prodl,w,c
  1862  0108C2  6ED9               	movwf	fsr2l,c
  1863  0108C4  0E01               	movlw	high rx_loop@opcode
  1864  0108C6  20F4               	addwfc	prodh,w,c
  1865  0108C8  6EDA               	movwf	fsr2h,c
  1866  0108CA  C0AB  FFDF         	movff	??_rx_loop,indf2
  1867  0108CE  50DF               	movf	indf2,w,c
  1868  0108D0  A4D8               	btfss	status,2,c
  1869  0108D2  D7E8               	goto	l5049
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;PIC18F27J53-killifish_light02.c: 314: opcode[i] = '\0';
  1873                           
  1874                           ; BSR set to: 0
  1875  0108D4  0100               	movlb	0	; () banked
  1876  0108D6  51B1               	movf	rx_loop@i& (0+255),w,b
  1877  0108D8  0D01               	mullw	1
  1878  0108DA  0E64               	movlw	low rx_loop@opcode
  1879  0108DC  24F3               	addwf	prodl,w,c
  1880  0108DE  6ED9               	movwf	fsr2l,c
  1881  0108E0  0E01               	movlw	high rx_loop@opcode
  1882  0108E2  20F4               	addwfc	prodh,w,c
  1883  0108E4  6EDA               	movwf	fsr2h,c
  1884  0108E6  0E00               	movlw	0
  1885  0108E8  6EDF               	movwf	indf2,c
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;PIC18F27J53-killifish_light02.c: 315: for (i = 0; opland1[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  1889  0108EA  0E00               	movlw	0
  1890  0108EC  0100               	movlb	0	; () banked
  1891  0108EE  6FB1               	movwf	rx_loop@i& (0+255),b
  1892  0108F0  D002               	goto	l5059
  1893  0108F2                     l5057:
  1894                           
  1895                           ; BSR set to: 0
  1896  0108F2  0100               	movlb	0	; () banked
  1897  0108F4  2BB1               	incf	rx_loop@i& (0+255),f,b
  1898  0108F6                     l5059:
  1899                           
  1900                           ; BSR set to: 0
  1901  0108F6  0EDF               	movlw	low rx_loop@comm_buf
  1902  0108F8  6E21               	movwf	ringbuf_pop@rb,c
  1903  0108FA  0E01               	movlw	high rx_loop@comm_buf
  1904  0108FC  6E22               	movwf	ringbuf_pop@rb+1,c
  1905  0108FE  EC1B  F08C         	call	_ringbuf_pop	;wreg free
  1906  010902  0100               	movlb	0	; () banked
  1907  010904  6FAB               	movwf	??_rx_loop& (0+255),b
  1908  010906  0100               	movlb	0	; () banked
  1909  010908  51B1               	movf	rx_loop@i& (0+255),w,b
  1910  01090A  0D01               	mullw	1
  1911  01090C  0E64               	movlw	low rx_loop@opland1
  1912  01090E  24F3               	addwf	prodl,w,c
  1913  010910  6ED9               	movwf	fsr2l,c
  1914  010912  0E02               	movlw	high rx_loop@opland1
  1915  010914  20F4               	addwfc	prodh,w,c
  1916  010916  6EDA               	movwf	fsr2h,c
  1917  010918  C0AB  FFDF         	movff	??_rx_loop,indf2
  1918  01091C  50DF               	movf	indf2,w,c
  1919  01091E  A4D8               	btfss	status,2,c
  1920  010920  D7E8               	goto	l5057
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;PIC18F27J53-killifish_light02.c: 316: opland1[i] = '\0';
  1924                           
  1925                           ; BSR set to: 0
  1926  010922  0100               	movlb	0	; () banked
  1927  010924  51B1               	movf	rx_loop@i& (0+255),w,b
  1928  010926  0D01               	mullw	1
  1929  010928  0E64               	movlw	low rx_loop@opland1
  1930  01092A  24F3               	addwf	prodl,w,c
  1931  01092C  6ED9               	movwf	fsr2l,c
  1932  01092E  0E02               	movlw	high rx_loop@opland1
  1933  010930  20F4               	addwfc	prodh,w,c
  1934  010932  6EDA               	movwf	fsr2h,c
  1935  010934  0E00               	movlw	0
  1936  010936  6EDF               	movwf	indf2,c
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;PIC18F27J53-killifish_light02.c: 317: for (i = 0; opland2[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  1940  010938  0E00               	movlw	0
  1941  01093A  0100               	movlb	0	; () banked
  1942  01093C  6FB1               	movwf	rx_loop@i& (0+255),b
  1943  01093E  D002               	goto	l5067
  1944  010940                     l5065:
  1945                           
  1946                           ; BSR set to: 0
  1947  010940  0100               	movlb	0	; () banked
  1948  010942  2BB1               	incf	rx_loop@i& (0+255),f,b
  1949  010944                     l5067:
  1950                           
  1951                           ; BSR set to: 0
  1952  010944  0EDF               	movlw	low rx_loop@comm_buf
  1953  010946  6E21               	movwf	ringbuf_pop@rb,c
  1954  010948  0E01               	movlw	high rx_loop@comm_buf
  1955  01094A  6E22               	movwf	ringbuf_pop@rb+1,c
  1956  01094C  EC1B  F08C         	call	_ringbuf_pop	;wreg free
  1957  010950  0100               	movlb	0	; () banked
  1958  010952  6FAB               	movwf	??_rx_loop& (0+255),b
  1959  010954  0100               	movlb	0	; () banked
  1960  010956  51B1               	movf	rx_loop@i& (0+255),w,b
  1961  010958  0D01               	mullw	1
  1962  01095A  0E00               	movlw	low rx_loop@opland2
  1963  01095C  24F3               	addwf	prodl,w,c
  1964  01095E  6ED9               	movwf	fsr2l,c
  1965  010960  0E04               	movlw	high rx_loop@opland2
  1966  010962  20F4               	addwfc	prodh,w,c
  1967  010964  6EDA               	movwf	fsr2h,c
  1968  010966  C0AB  FFDF         	movff	??_rx_loop,indf2
  1969  01096A  50DF               	movf	indf2,w,c
  1970  01096C  A4D8               	btfss	status,2,c
  1971  01096E  D7E8               	goto	l5065
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;PIC18F27J53-killifish_light02.c: 318: opland2[i] = '\0';
  1975                           
  1976                           ; BSR set to: 0
  1977  010970  0100               	movlb	0	; () banked
  1978  010972  51B1               	movf	rx_loop@i& (0+255),w,b
  1979  010974  0D01               	mullw	1
  1980  010976  0E00               	movlw	low rx_loop@opland2
  1981  010978  24F3               	addwf	prodl,w,c
  1982  01097A  6ED9               	movwf	fsr2l,c
  1983  01097C  0E04               	movlw	high rx_loop@opland2
  1984  01097E  20F4               	addwfc	prodh,w,c
  1985  010980  6EDA               	movwf	fsr2h,c
  1986  010982  0E00               	movlw	0
  1987  010984  6EDF               	movwf	indf2,c
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;PIC18F27J53-killifish_light02.c: 319: for (i = 0; opland3[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  1991  010986  0E00               	movlw	0
  1992  010988  0100               	movlb	0	; () banked
  1993  01098A  6FB1               	movwf	rx_loop@i& (0+255),b
  1994  01098C  D002               	goto	l5075
  1995  01098E                     l5073:
  1996                           
  1997                           ; BSR set to: 0
  1998  01098E  0100               	movlb	0	; () banked
  1999  010990  2BB1               	incf	rx_loop@i& (0+255),f,b
  2000  010992                     l5075:
  2001                           
  2002                           ; BSR set to: 0
  2003  010992  0EDF               	movlw	low rx_loop@comm_buf
  2004  010994  6E21               	movwf	ringbuf_pop@rb,c
  2005  010996  0E01               	movlw	high rx_loop@comm_buf
  2006  010998  6E22               	movwf	ringbuf_pop@rb+1,c
  2007  01099A  EC1B  F08C         	call	_ringbuf_pop	;wreg free
  2008  01099E  0100               	movlb	0	; () banked
  2009  0109A0  6FAB               	movwf	??_rx_loop& (0+255),b
  2010  0109A2  0100               	movlb	0	; () banked
  2011  0109A4  51B1               	movf	rx_loop@i& (0+255),w,b
  2012  0109A6  0D01               	mullw	1
  2013  0109A8  0E00               	movlw	low rx_loop@opland3
  2014  0109AA  24F3               	addwf	prodl,w,c
  2015  0109AC  6ED9               	movwf	fsr2l,c
  2016  0109AE  0E02               	movlw	high rx_loop@opland3
  2017  0109B0  20F4               	addwfc	prodh,w,c
  2018  0109B2  6EDA               	movwf	fsr2h,c
  2019  0109B4  C0AB  FFDF         	movff	??_rx_loop,indf2
  2020  0109B8  50DF               	movf	indf2,w,c
  2021  0109BA  A4D8               	btfss	status,2,c
  2022  0109BC  D7E8               	goto	l5073
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;PIC18F27J53-killifish_light02.c: 320: opland3[i] = '\0';
  2026                           
  2027                           ; BSR set to: 0
  2028  0109BE  0100               	movlb	0	; () banked
  2029  0109C0  51B1               	movf	rx_loop@i& (0+255),w,b
  2030  0109C2  0D01               	mullw	1
  2031  0109C4  0E00               	movlw	low rx_loop@opland3
  2032  0109C6  24F3               	addwf	prodl,w,c
  2033  0109C8  6ED9               	movwf	fsr2l,c
  2034  0109CA  0E02               	movlw	high rx_loop@opland3
  2035  0109CC  20F4               	addwfc	prodh,w,c
  2036  0109CE  6EDA               	movwf	fsr2h,c
  2037  0109D0  0E00               	movlw	0
  2038  0109D2  6EDF               	movwf	indf2,c
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;PIC18F27J53-killifish_light02.c: 321: command_operation(opcode, opland1, opland2, oplan
      +                          d3);
  2042  0109D4  0E64               	movlw	low rx_loop@opcode
  2043  0109D6  0100               	movlb	0	; () banked
  2044  0109D8  6FA2               	movwf	command_operation@opcode& (0+255),b
  2045  0109DA  0E01               	movlw	high rx_loop@opcode
  2046  0109DC  0100               	movlb	0	; () banked
  2047  0109DE  6FA3               	movwf	(command_operation@opcode+1)& (0+255),b
  2048  0109E0  0E64               	movlw	low rx_loop@opland1
  2049  0109E2  0100               	movlb	0	; () banked
  2050  0109E4  6FA4               	movwf	command_operation@opland1& (0+255),b
  2051  0109E6  0E02               	movlw	high rx_loop@opland1
  2052  0109E8  0100               	movlb	0	; () banked
  2053  0109EA  6FA5               	movwf	(command_operation@opland1+1)& (0+255),b
  2054  0109EC  0E00               	movlw	low rx_loop@opland2
  2055  0109EE  0100               	movlb	0	; () banked
  2056  0109F0  6FA6               	movwf	command_operation@opland2& (0+255),b
  2057  0109F2  0E04               	movlw	high rx_loop@opland2
  2058  0109F4  0100               	movlb	0	; () banked
  2059  0109F6  6FA7               	movwf	(command_operation@opland2+1)& (0+255),b
  2060  0109F8  0E00               	movlw	low rx_loop@opland3
  2061  0109FA  0100               	movlb	0	; () banked
  2062  0109FC  6FA8               	movwf	command_operation@opland3& (0+255),b
  2063  0109FE  0E02               	movlw	high rx_loop@opland3
  2064  010A00  0100               	movlb	0	; () banked
  2065  010A02  6FA9               	movwf	(command_operation@opland3+1)& (0+255),b
  2066  010A04  EC00  F080         	call	_command_operation	;wreg free
  2067                           
  2068                           ;PIC18F27J53-killifish_light02.c: 322: break;
  2069  010A08  0012               	return	
  2070  010A0A                     l5081:
  2071                           
  2072                           ;PIC18F27J53-killifish_light02.c: 324: ringbuf_put(&comm_buf, '\0');
  2073  010A0A  0EDF               	movlw	low rx_loop@comm_buf
  2074  010A0C  0100               	movlb	0	; () banked
  2075  010A0E  6F66               	movwf	ringbuf_put@rb& (0+255),b
  2076  010A10  0E01               	movlw	high rx_loop@comm_buf
  2077  010A12  0100               	movlb	0	; () banked
  2078  010A14  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2079  010A16  0E00               	movlw	0
  2080  010A18  0100               	movlb	0	; () banked
  2081  010A1A  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2082  010A1C  ECE4  F08A         	call	_ringbuf_put	;wreg free
  2083                           
  2084                           ;PIC18F27J53-killifish_light02.c: 325: tx_send(' ');
  2085  010A20  0E20               	movlw	32
  2086  010A22  EC28  F094         	call	_tx_send
  2087                           
  2088                           ;PIC18F27J53-killifish_light02.c: 326: break;
  2089  010A26  0012               	return	
  2090  010A28                     l5083:
  2091                           
  2092                           ;PIC18F27J53-killifish_light02.c: 328: ringbuf_backspace(&comm_buf);
  2093  010A28  0EDF               	movlw	low rx_loop@comm_buf
  2094  010A2A  6E21               	movwf	ringbuf_backspace@rb,c
  2095  010A2C  0E01               	movlw	high rx_loop@comm_buf
  2096  010A2E  6E22               	movwf	ringbuf_backspace@rb+1,c
  2097  010A30  EC5E  F090         	call	_ringbuf_backspace	;wreg free
  2098                           
  2099                           ;PIC18F27J53-killifish_light02.c: 329: tx_sends("\b \b");
  2100  010A34  0EC1               	movlw	low STR_39
  2101  010A36  6E21               	movwf	tx_sends@asciicode,c
  2102  010A38  0EFF               	movlw	high STR_39
  2103  010A3A  6E22               	movwf	tx_sends@asciicode+1,c
  2104  010A3C  ECFC  F091         	call	_tx_sends	;wreg free
  2105                           
  2106                           ;PIC18F27J53-killifish_light02.c: 330: break;
  2107  010A40  0012               	return	
  2108  010A42                     l5087:
  2109                           
  2110                           ;PIC18F27J53-killifish_light02.c: 332: for (uint8_t i = 0; i < ringbuf_num(&comm_buf); i
      +                          ++) tx_sends("\b \b");
  2111  010A42  0E00               	movlw	0
  2112  010A44  0100               	movlb	0	; () banked
  2113  010A46  6FAF               	movwf	rx_loop@i_2444& (0+255),b
  2114  010A48  D008               	goto	l5093
  2115  010A4A                     l5089:
  2116                           
  2117                           ; BSR set to: 0
  2118  010A4A  0EC1               	movlw	low STR_39
  2119  010A4C  6E21               	movwf	tx_sends@asciicode,c
  2120  010A4E  0EFF               	movlw	high STR_39
  2121  010A50  6E22               	movwf	tx_sends@asciicode+1,c
  2122  010A52  ECFC  F091         	call	_tx_sends	;wreg free
  2123  010A56  0100               	movlb	0	; () banked
  2124  010A58  2BAF               	incf	rx_loop@i_2444& (0+255),f,b
  2125  010A5A                     l5093:
  2126                           
  2127                           ; BSR set to: 0
  2128  010A5A  0EDF               	movlw	low rx_loop@comm_buf
  2129  010A5C  6E1F               	movwf	ringbuf_num@rb,c
  2130  010A5E  0E01               	movlw	high rx_loop@comm_buf
  2131  010A60  6E20               	movwf	ringbuf_num@rb+1,c
  2132  010A62  EC0E  F08A         	call	_ringbuf_num	;wreg free
  2133  010A66  0100               	movlb	0	; () banked
  2134  010A68  51AF               	movf	rx_loop@i_2444& (0+255),w,b
  2135  010A6A  0100               	movlb	0	; () banked
  2136  010A6C  6FAB               	movwf	??_rx_loop& (0+255),b
  2137  010A6E  6BAC               	clrf	(??_rx_loop+1)& (0+255),b
  2138  010A70  501F               	movf	?_ringbuf_num,w,c
  2139  010A72  0100               	movlb	0	; () banked
  2140  010A74  5DAB               	subwf	??_rx_loop& (0+255),w,b
  2141  010A76  5020               	movf	?_ringbuf_num+1,w,c
  2142  010A78  0100               	movlb	0	; () banked
  2143  010A7A  59AC               	subwfb	(??_rx_loop+1)& (0+255),w,b
  2144  010A7C  A0D8               	btfss	status,0,c
  2145  010A7E  D7E5               	goto	l5089
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;PIC18F27J53-killifish_light02.c: 333: ringbuf_delete(&comm_buf);
  2149                           
  2150                           ; BSR set to: 0
  2151  010A80  0EDF               	movlw	low rx_loop@comm_buf
  2152  010A82  6E1F               	movwf	ringbuf_delete@rb,c
  2153  010A84  0E01               	movlw	high rx_loop@comm_buf
  2154  010A86  6E20               	movwf	ringbuf_delete@rb+1,c
  2155  010A88  ECC6  F093         	call	_ringbuf_delete	;wreg free
  2156                           
  2157                           ;PIC18F27J53-killifish_light02.c: 334: break;
  2158  010A8C  0012               	return	
  2159  010A8E                     l5097:
  2160                           
  2161                           ;PIC18F27J53-killifish_light02.c: 336: if (ascii >= ' ' && ascii <= '~') {
  2162  010A8E  0E1F               	movlw	31
  2163  010A90  0100               	movlb	0	; () banked
  2164  010A92  65B0               	cpfsgt	rx_loop@ascii& (0+255),b
  2165  010A94  0012               	return	
  2166                           
  2167                           ; BSR set to: 0
  2168  010A96  0E7F               	movlw	127
  2169  010A98  0100               	movlb	0	; () banked
  2170  010A9A  61B0               	cpfslt	rx_loop@ascii& (0+255),b
  2171  010A9C  0012               	return	
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;PIC18F27J53-killifish_light02.c: 337: ringbuf_put(&comm_buf, ascii);
  2175  010A9E  0EDF               	movlw	low rx_loop@comm_buf
  2176  010AA0  0100               	movlb	0	; () banked
  2177  010AA2  6F66               	movwf	ringbuf_put@rb& (0+255),b
  2178  010AA4  0E01               	movlw	high rx_loop@comm_buf
  2179  010AA6  0100               	movlb	0	; () banked
  2180  010AA8  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2181  010AAA  C0B0  F068         	movff	rx_loop@ascii,ringbuf_put@asciicode
  2182  010AAE  ECE4  F08A         	call	_ringbuf_put	;wreg free
  2183                           
  2184                           ;PIC18F27J53-killifish_light02.c: 338: tx_send(ascii);
  2185  010AB2  0100               	movlb	0	; () banked
  2186  010AB4  51B0               	movf	rx_loop@ascii& (0+255),w,b
  2187  010AB6  EC28  F094         	call	_tx_send
  2188                           
  2189                           ;PIC18F27J53-killifish_light02.c: 341: }
  2190                           
  2191                           ;PIC18F27J53-killifish_light02.c: 339: }
  2192                           ;PIC18F27J53-killifish_light02.c: 340: break;
  2193  010ABA  0012               	return	
  2194  010ABC                     l5105:
  2195  010ABC  0100               	movlb	0	; () banked
  2196  010ABE  51B0               	movf	rx_loop@ascii& (0+255),w,b
  2197                           
  2198                           ; Switch size 1, requested type "space"
  2199                           ; Number of cases is 4, Range of values is 8 to 127
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte           13     7 (average)
  2203                           ;	Chosen strategy is simple_byte
  2204  010AC0  0A08               	xorlw	8	; case 8
  2205  010AC2  B4D8               	btfsc	status,2,c
  2206  010AC4  D7B1               	goto	l5083
  2207  010AC6  0A05               	xorlw	5	; case 13
  2208  010AC8  B4D8               	btfsc	status,2,c
  2209  010ACA  D6BD               	goto	l5043
  2210  010ACC  0A2D               	xorlw	45	; case 32
  2211  010ACE  B4D8               	btfsc	status,2,c
  2212  010AD0  D79C               	goto	l5081
  2213  010AD2  0A5F               	xorlw	95	; case 127
  2214  010AD4  B4D8               	btfsc	status,2,c
  2215  010AD6  D7B5               	goto	l5087
  2216  010AD8  D7DA               	goto	l5097
  2217  010ADA                     __end_of_rx_loop:
  2218                           	opt stack 0
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           prodh	equ	0xFF4
  2224                           prodl	equ	0xFF3
  2225                           intcon	equ	0xFF2
  2226                           postinc0	equ	0xFEE
  2227                           wreg	equ	0xFE8
  2228                           postdec1	equ	0xFE5
  2229                           fsr1h	equ	0xFE2
  2230                           fsr1l	equ	0xFE1
  2231                           indf2	equ	0xFDF
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _tx_sendn *****************
  2237 ;; Defined at:
  2238 ;;		line 272 in file "../My_header\My_header.h"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  value           2   13[BANK0 ] const unsigned int 
  2241 ;;  digits          1   15[BANK0 ] unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  i               1   16[BANK0 ] unsigned char 
  2244 ;;  temp            2   17[BANK0 ] unsigned int 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2254 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;Total ram usage:        6 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    7
  2261 ;; This function calls:
  2262 ;;		___lwdiv
  2263 ;;		___lwmod
  2264 ;;		_tx_send
  2265 ;; This function is called by:
  2266 ;;		_rx_loop
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text2
  2271  0122AA                     __ptext2:
  2272                           	opt stack 0
  2273  0122AA                     _tx_sendn:
  2274                           	opt stack 22
  2275                           
  2276                           ;My_header\My_header.h: 273: while (digits--) {
  2277                           
  2278                           ;incstack = 0
  2279  0122AA  D032               	goto	l4745
  2280  0122AC                     l236:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;My_header\My_header.h: 274: uint16_t temp = value;
  2284  0122AC  C06D  F071         	movff	tx_sendn@value,tx_sendn@temp
  2285  0122B0  C06E  F072         	movff	tx_sendn@value+1,tx_sendn@temp+1
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;My_header\My_header.h: 275: for (uint8_t i = 0; i < digits; i++) {
  2289  0122B4  0E00               	movlw	0
  2290  0122B6  0100               	movlb	0	; () banked
  2291  0122B8  6F70               	movwf	tx_sendn@i& (0+255),b
  2292  0122BA  D011               	goto	l4739
  2293  0122BC                     l4735:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;My_header\My_header.h: 276: temp /= 10;
  2297  0122BC  C071  F066         	movff	tx_sendn@temp,___lwdiv@dividend
  2298  0122C0  C072  F067         	movff	tx_sendn@temp+1,___lwdiv@dividend+1
  2299  0122C4  0E00               	movlw	0
  2300  0122C6  0100               	movlb	0	; () banked
  2301  0122C8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2302  0122CA  0E0A               	movlw	10
  2303  0122CC  6F68               	movwf	___lwdiv@divisor& (0+255),b
  2304  0122CE  ECDE  F090         	call	___lwdiv	;wreg free
  2305  0122D2  C066  F071         	movff	?___lwdiv,tx_sendn@temp
  2306  0122D6  C067  F072         	movff	?___lwdiv+1,tx_sendn@temp+1
  2307  0122DA  0100               	movlb	0	; () banked
  2308  0122DC  2B70               	incf	tx_sendn@i& (0+255),f,b
  2309  0122DE                     l4739:
  2310                           
  2311                           ; BSR set to: 0
  2312  0122DE  0100               	movlb	0	; () banked
  2313  0122E0  516F               	movf	tx_sendn@digits& (0+255),w,b
  2314  0122E2  0100               	movlb	0	; () banked
  2315  0122E4  5D70               	subwf	tx_sendn@i& (0+255),w,b
  2316  0122E6  A0D8               	btfss	status,0,c
  2317  0122E8  D7E9               	goto	l4735
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;My_header\My_header.h: 277: }
  2321                           ;My_header\My_header.h: 278: temp %= 10;
  2322                           
  2323                           ; BSR set to: 0
  2324  0122EA  C071  F01F         	movff	tx_sendn@temp,___lwmod@dividend
  2325  0122EE  C072  F020         	movff	tx_sendn@temp+1,___lwmod@dividend+1
  2326  0122F2  0E00               	movlw	0
  2327  0122F4  6E22               	movwf	___lwmod@divisor+1,c
  2328  0122F6  0E0A               	movlw	10
  2329  0122F8  6E21               	movwf	___lwmod@divisor,c
  2330  0122FA  ECD2  F092         	call	___lwmod	;wreg free
  2331  0122FE  C01F  F071         	movff	?___lwmod,tx_sendn@temp
  2332  012302  C020  F072         	movff	?___lwmod+1,tx_sendn@temp+1
  2333                           
  2334                           ;My_header\My_header.h: 279: tx_send('0' + temp);
  2335  012306  0100               	movlb	0	; () banked
  2336  012308  5171               	movf	tx_sendn@temp& (0+255),w,b
  2337  01230A  0F30               	addlw	48
  2338  01230C  EC28  F094         	call	_tx_send
  2339  012310                     l4745:
  2340  012310  0100               	movlb	0	; () banked
  2341  012312  076F               	decf	tx_sendn@digits& (0+255),f,b
  2342  012314  0100               	movlb	0	; () banked
  2343  012316  296F               	incf	tx_sendn@digits& (0+255),w,b
  2344  012318  B4D8               	btfsc	status,2,c
  2345  01231A  0012               	return	
  2346  01231C  D7C7               	goto	l236
  2347  01231E                     __end_of_tx_sendn:
  2348                           	opt stack 0
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           intcon	equ	0xFF2
  2356                           postinc0	equ	0xFEE
  2357                           wreg	equ	0xFE8
  2358                           postdec1	equ	0xFE5
  2359                           fsr1h	equ	0xFE2
  2360                           fsr1l	equ	0xFE1
  2361                           indf2	equ	0xFDF
  2362                           fsr2h	equ	0xFDA
  2363                           fsr2l	equ	0xFD9
  2364                           status	equ	0xFD8
  2365                           
  2366 ;; *************** function _ringbuf_pop *****************
  2367 ;; Defined at:
  2368 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2371 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  ret             1   10[BANK0 ] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      unsigned char 
  2376 ;; Registers used:
  2377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2386 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;Total ram usage:        7 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    5
  2390 ;; This function calls:
  2391 ;;		_ringbuf_num
  2392 ;; This function is called by:
  2393 ;;		_rx_loop
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text3
  2398  011836                     __ptext3:
  2399                           	opt stack 0
  2400  011836                     _ringbuf_pop:
  2401                           	opt stack 24
  2402                           
  2403                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;incstack = 0
  2407  011836  C021  F01F         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2408  01183A  C022  F020         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2409  01183E  EC0E  F08A         	call	_ringbuf_num	;wreg free
  2410  011842  501F               	movf	?_ringbuf_num,w,c
  2411  011844  1020               	iorwf	?_ringbuf_num+1,w,c
  2412  011846  B4D8               	btfsc	status,2,c
  2413  011848  D053               	goto	l4717
  2414                           
  2415                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  2416  01184A  EE20 F006          	lfsr	2,6
  2417  01184E  5021               	movf	ringbuf_pop@rb,w,c
  2418  011850  26D9               	addwf	fsr2l,f,c
  2419  011852  5022               	movf	ringbuf_pop@rb+1,w,c
  2420  011854  22DA               	addwfc	fsr2h,f,c
  2421  011856  CFDE F066          	movff	postinc2,??_ringbuf_pop
  2422  01185A  CFDD F067          	movff	postdec2,??_ringbuf_pop+1
  2423  01185E  C021  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2424  011862  C022  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2425  011866  CFDE F068          	movff	postinc2,??_ringbuf_pop+2
  2426  01186A  CFDD F069          	movff	postdec2,??_ringbuf_pop+3
  2427  01186E  0100               	movlb	0	; () banked
  2428  011870  5166               	movf	??_ringbuf_pop& (0+255),w,b
  2429  011872  0100               	movlb	0	; () banked
  2430  011874  2568               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2431  011876  6ED9               	movwf	fsr2l,c
  2432  011878  0100               	movlb	0	; () banked
  2433  01187A  5167               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2434  01187C  0100               	movlb	0	; () banked
  2435  01187E  2169               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2436  011880  6EDA               	movwf	fsr2h,c
  2437  011882  50DF               	movf	indf2,w,c
  2438  011884  0100               	movlb	0	; () banked
  2439  011886  6F6A               	movwf	ringbuf_pop@ret& (0+255),b
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  2443  011888  EE20 F002          	lfsr	2,2
  2444  01188C  5021               	movf	ringbuf_pop@rb,w,c
  2445  01188E  26D9               	addwf	fsr2l,f,c
  2446  011890  5022               	movf	ringbuf_pop@rb+1,w,c
  2447  011892  22DA               	addwfc	fsr2h,f,c
  2448  011894  EE10 F006          	lfsr	1,6
  2449  011898  5021               	movf	ringbuf_pop@rb,w,c
  2450  01189A  26E1               	addwf	fsr1l,f,c
  2451  01189C  5022               	movf	ringbuf_pop@rb+1,w,c
  2452  01189E  22E2               	addwfc	fsr1h,f,c
  2453  0118A0  CFE6 F068          	movff	postinc1,??_ringbuf_pop+2
  2454  0118A4  CFE5 F069          	movff	postdec1,??_ringbuf_pop+3
  2455  0118A8  0E01               	movlw	1
  2456  0118AA  0100               	movlb	0	; () banked
  2457  0118AC  2768               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2458  0118AE  0E00               	movlw	0
  2459  0118B0  2369               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2460  0118B2  50DE               	movf	postinc2,w,c
  2461  0118B4  0100               	movlb	0	; () banked
  2462  0118B6  5D68               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2463  0118B8  50DE               	movf	postinc2,w,c
  2464  0118BA  0100               	movlb	0	; () banked
  2465  0118BC  5969               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2466  0118BE  B0D8               	btfsc	status,0,c
  2467  0118C0  D00A               	goto	l4709
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2471  0118C2  EE20 F006          	lfsr	2,6
  2472  0118C6  5021               	movf	ringbuf_pop@rb,w,c
  2473  0118C8  26D9               	addwf	fsr2l,f,c
  2474  0118CA  5022               	movf	ringbuf_pop@rb+1,w,c
  2475  0118CC  22DA               	addwfc	fsr2h,f,c
  2476  0118CE  2ADE               	incf	postinc2,f,c
  2477  0118D0  0E00               	movlw	0
  2478  0118D2  22DD               	addwfc	postdec2,f,c
  2479                           
  2480                           ;My_header\My_ringbuf.h: 69: } else {
  2481  0118D4  D00A               	goto	l4711
  2482  0118D6                     l4709:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2486  0118D6  EE20 F006          	lfsr	2,6
  2487  0118DA  5021               	movf	ringbuf_pop@rb,w,c
  2488  0118DC  26D9               	addwf	fsr2l,f,c
  2489  0118DE  5022               	movf	ringbuf_pop@rb+1,w,c
  2490  0118E0  22DA               	addwfc	fsr2h,f,c
  2491  0118E2  0E00               	movlw	0
  2492  0118E4  6EDE               	movwf	postinc2,c
  2493  0118E6  0E00               	movlw	0
  2494  0118E8  6EDD               	movwf	postdec2,c
  2495  0118EA                     l4711:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;My_header\My_ringbuf.h: 71: }
  2499                           ;My_header\My_ringbuf.h: 72: return ret;
  2500  0118EA  0100               	movlb	0	; () banked
  2501  0118EC  516A               	movf	ringbuf_pop@ret& (0+255),w,b
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;My_header\My_ringbuf.h: 73: } else {
  2505                           
  2506                           ; BSR set to: 0
  2507  0118EE  0012               	return	
  2508  0118F0                     l4717:
  2509                           
  2510                           ;My_header\My_ringbuf.h: 74: return 0;
  2511  0118F0  0E00               	movlw	0
  2512  0118F2  0012               	return	
  2513  0118F4                     __end_of_ringbuf_pop:
  2514                           	opt stack 0
  2515                           tblptru	equ	0xFF8
  2516                           tblptrh	equ	0xFF7
  2517                           tblptrl	equ	0xFF6
  2518                           tablat	equ	0xFF5
  2519                           prodh	equ	0xFF4
  2520                           prodl	equ	0xFF3
  2521                           intcon	equ	0xFF2
  2522                           postinc0	equ	0xFEE
  2523                           wreg	equ	0xFE8
  2524                           postinc1	equ	0xFE6
  2525                           postdec1	equ	0xFE5
  2526                           fsr1h	equ	0xFE2
  2527                           fsr1l	equ	0xFE1
  2528                           indf2	equ	0xFDF
  2529                           postinc2	equ	0xFDE
  2530                           postdec2	equ	0xFDD
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8
  2534                           
  2535 ;; *************** function _ringbuf_delete *****************
  2536 ;; Defined at:
  2537 ;;		line 85 in file "../My_header\My_ringbuf.h"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  2540 ;;		 -> rx_loop@comm_buf(8), 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;		None               void
  2545 ;; Registers used:
  2546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;Total ram usage:        2 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    4
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_rx_loop
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text4
  2567  01278C                     __ptext4:
  2568                           	opt stack 0
  2569  01278C                     _ringbuf_delete:
  2570                           	opt stack 25
  2571                           
  2572                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  2573                           
  2574                           ;incstack = 0
  2575  01278C  EE20 F006          	lfsr	2,6
  2576  012790  501F               	movf	ringbuf_delete@rb,w,c
  2577  012792  26D9               	addwf	fsr2l,f,c
  2578  012794  5020               	movf	ringbuf_delete@rb+1,w,c
  2579  012796  22DA               	addwfc	fsr2h,f,c
  2580  012798  EE10 F004          	lfsr	1,4
  2581  01279C  501F               	movf	ringbuf_delete@rb,w,c
  2582  01279E  26E1               	addwf	fsr1l,f,c
  2583  0127A0  5020               	movf	ringbuf_delete@rb+1,w,c
  2584  0127A2  22E2               	addwfc	fsr1h,f,c
  2585  0127A4  CFDE FFE6          	movff	postinc2,postinc1
  2586  0127A8  CFDD FFE5          	movff	postdec2,postdec1
  2587  0127AC  0012               	return		;funcret
  2588  0127AE                     __end_of_ringbuf_delete:
  2589                           	opt stack 0
  2590                           tblptru	equ	0xFF8
  2591                           tblptrh	equ	0xFF7
  2592                           tblptrl	equ	0xFF6
  2593                           tablat	equ	0xFF5
  2594                           prodh	equ	0xFF4
  2595                           prodl	equ	0xFF3
  2596                           intcon	equ	0xFF2
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           postinc1	equ	0xFE6
  2600                           postdec1	equ	0xFE5
  2601                           fsr1h	equ	0xFE2
  2602                           fsr1l	equ	0xFE1
  2603                           indf2	equ	0xFDF
  2604                           postinc2	equ	0xFDE
  2605                           postdec2	equ	0xFDD
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _ringbuf_backspace *****************
  2611 ;; Defined at:
  2612 ;;		line 78 in file "../My_header\My_ringbuf.h"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2615 ;;		 -> rx_loop@comm_buf(8), 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;		None               void
  2620 ;; Registers used:
  2621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2629 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;Total ram usage:        6 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    5
  2634 ;; This function calls:
  2635 ;;		_ringbuf_num
  2636 ;; This function is called by:
  2637 ;;		_rx_loop
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text5
  2642  0120BC                     __ptext5:
  2643                           	opt stack 0
  2644  0120BC                     _ringbuf_backspace:
  2645                           	opt stack 24
  2646                           
  2647                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  2648                           
  2649                           ;incstack = 0
  2650  0120BC  C021  F01F         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  2651  0120C0  C022  F020         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  2652  0120C4  EC0E  F08A         	call	_ringbuf_num	;wreg free
  2653  0120C8  501F               	movf	?_ringbuf_num,w,c
  2654  0120CA  1020               	iorwf	?_ringbuf_num+1,w,c
  2655  0120CC  B4D8               	btfsc	status,2,c
  2656  0120CE  0012               	return	
  2657                           
  2658                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  2659  0120D0  EE20 F004          	lfsr	2,4
  2660  0120D4  5021               	movf	ringbuf_backspace@rb,w,c
  2661  0120D6  26D9               	addwf	fsr2l,f,c
  2662  0120D8  5022               	movf	ringbuf_backspace@rb+1,w,c
  2663  0120DA  22DA               	addwfc	fsr2h,f,c
  2664  0120DC  50DE               	movf	postinc2,w,c
  2665  0120DE  10DE               	iorwf	postinc2,w,c
  2666  0120E0  B4D8               	btfsc	status,2,c
  2667  0120E2  D00A               	goto	l4727
  2668  0120E4  EE20 F004          	lfsr	2,4
  2669  0120E8  5021               	movf	ringbuf_backspace@rb,w,c
  2670  0120EA  26D9               	addwf	fsr2l,f,c
  2671  0120EC  5022               	movf	ringbuf_backspace@rb+1,w,c
  2672  0120EE  22DA               	addwfc	fsr2h,f,c
  2673  0120F0  06DE               	decf	postinc2,f,c
  2674  0120F2  0E00               	movlw	0
  2675  0120F4  5ADD               	subwfb	postdec2,f,c
  2676  0120F6  0012               	return	
  2677  0120F8                     l4727:
  2678                           
  2679                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  2680  0120F8  0EFF               	movlw	255
  2681  0120FA  0100               	movlb	0	; () banked
  2682  0120FC  6F66               	movwf	??_ringbuf_backspace& (0+255),b
  2683  0120FE  0EFF               	movlw	255
  2684  012100  0100               	movlb	0	; () banked
  2685  012102  6F67               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  2686  012104  EE20 F002          	lfsr	2,2
  2687  012108  5021               	movf	ringbuf_backspace@rb,w,c
  2688  01210A  26D9               	addwf	fsr2l,f,c
  2689  01210C  5022               	movf	ringbuf_backspace@rb+1,w,c
  2690  01210E  22DA               	addwfc	fsr2h,f,c
  2691  012110  CFDE F068          	movff	postinc2,??_ringbuf_backspace+2
  2692  012114  CFDD F069          	movff	postdec2,??_ringbuf_backspace+3
  2693  012118  0100               	movlb	0	; () banked
  2694  01211A  5166               	movf	??_ringbuf_backspace& (0+255),w,b
  2695  01211C  0100               	movlb	0	; () banked
  2696  01211E  2768               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  2697  012120  0100               	movlb	0	; () banked
  2698  012122  5167               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  2699  012124  0100               	movlb	0	; () banked
  2700  012126  2369               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  2701  012128  EE20 F004          	lfsr	2,4
  2702  01212C  5021               	movf	ringbuf_backspace@rb,w,c
  2703  01212E  26D9               	addwf	fsr2l,f,c
  2704  012130  5022               	movf	ringbuf_backspace@rb+1,w,c
  2705  012132  22DA               	addwfc	fsr2h,f,c
  2706  012134  C068  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  2707  012138  C069  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  2708                           
  2709                           ; BSR set to: 0
  2710  01213C  0012               	return	
  2711  01213E                     __end_of_ringbuf_backspace:
  2712                           	opt stack 0
  2713                           tblptru	equ	0xFF8
  2714                           tblptrh	equ	0xFF7
  2715                           tblptrl	equ	0xFF6
  2716                           tablat	equ	0xFF5
  2717                           prodh	equ	0xFF4
  2718                           prodl	equ	0xFF3
  2719                           intcon	equ	0xFF2
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           postinc1	equ	0xFE6
  2723                           postdec1	equ	0xFE5
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           indf2	equ	0xFDF
  2727                           postinc2	equ	0xFDE
  2728                           postdec2	equ	0xFDD
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function _command_operation *****************
  2734 ;; Defined at:
  2735 ;;		line 214 in file "PIC18F27J53-killifish_light02.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  opcode          2   66[BANK0 ] PTR unsigned char 
  2738 ;;		 -> rx_loop@opcode(100), 
  2739 ;;  opland1         2   68[BANK0 ] PTR unsigned char 
  2740 ;;		 -> rx_loop@opland1(100), 
  2741 ;;  opland2         2   70[BANK0 ] PTR unsigned char 
  2742 ;;		 -> rx_loop@opland2(100), 
  2743 ;;  opland3         2   72[BANK0 ] PTR unsigned char 
  2744 ;;		 -> rx_loop@opland3(100), 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2756 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;Total ram usage:        9 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:   10
  2763 ;; This function calls:
  2764 ;;		_PWM_set
  2765 ;;		_comm_at
  2766 ;;		_month_length
  2767 ;;		_my_atoi
  2768 ;;		_my_strcmp
  2769 ;;		_print_time
  2770 ;;		_tx_sends
  2771 ;; This function is called by:
  2772 ;;		_rx_loop
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text6
  2777  010000                     __ptext6:
  2778                           	opt stack 0
  2779  010000                     _command_operation:
  2780                           	opt stack 19
  2781                           
  2782                           ;PIC18F27J53-killifish_light02.c: 215: if (!my_strcmp(opcode, "help") || !my_strcmp(opco
      +                          de, "?")) {
  2783                           
  2784                           ;incstack = 0
  2785  010000  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2786  010004  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2787  010008  0EBC               	movlw	low STR_9
  2788  01000A  6E21               	movwf	my_strcmp@str2,c
  2789  01000C  0EFF               	movlw	high STR_9
  2790  01000E  6E22               	movwf	my_strcmp@str2+1,c
  2791  010010  EC98  F08E         	call	_my_strcmp	;wreg free
  2792  010014  0900               	iorlw	0
  2793  010016  B4D8               	btfsc	status,2,c
  2794  010018  D00D               	goto	l4751
  2795  01001A  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2796  01001E  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2797  010022  0EE6               	movlw	low STR_10
  2798  010024  6E21               	movwf	my_strcmp@str2,c
  2799  010026  0EFF               	movlw	high STR_10
  2800  010028  6E22               	movwf	my_strcmp@str2+1,c
  2801  01002A  EC98  F08E         	call	_my_strcmp	;wreg free
  2802  01002E  0900               	iorlw	0
  2803  010030  A4D8               	btfss	status,2,c
  2804  010032  D006               	goto	l4753
  2805  010034                     l4751:
  2806                           
  2807                           ;PIC18F27J53-killifish_light02.c: 216: tx_sends(
  2808                           ;PIC18F27J53-killifish_light02.c: 217: "\t**************************\n"
  2809                           ;PIC18F27J53-killifish_light02.c: 218: "\t**** Killifish Light  ****\n"
  2810                           ;PIC18F27J53-killifish_light02.c: 219: "\t**** Made by @Ryokeri ****\n"
  2811                           ;PIC18F27J53-killifish_light02.c: 220: "\t**************************\n\n"
  2812                           ;PIC18F27J53-killifish_light02.c: 221: "\tcommand \topeland1\topeland2\n\n"
  2813                           ;PIC18F27J53-killifish_light02.c: 222: "\tprint_time(t)\n"
  2814                           ;PIC18F27J53-killifish_light02.c: 223: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  2815  010034  0E49               	movlw	low STR_11
  2816  010036  6E21               	movwf	tx_sends@asciicode,c
  2817  010038  0EFE               	movlw	high STR_11
  2818  01003A  6E22               	movwf	tx_sends@asciicode+1,c
  2819  01003C  ECFC  F091         	call	_tx_sends	;wreg free
  2820  010040                     l4753:
  2821                           
  2822                           ;PIC18F27J53-killifish_light02.c: 230: }
  2823                           ;PIC18F27J53-killifish_light02.c: 231: if (!my_strcmp(opcode, "RESET();")) {
  2824  010040  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2825  010044  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2826  010048  0E9B               	movlw	low STR_12
  2827  01004A  6E21               	movwf	my_strcmp@str2,c
  2828  01004C  0EFF               	movlw	high STR_12
  2829  01004E  6E22               	movwf	my_strcmp@str2+1,c
  2830  010050  EC98  F08E         	call	_my_strcmp	;wreg free
  2831  010054  0900               	iorlw	0
  2832  010056  B4D8               	btfsc	status,2,c
  2833  010058  00FF               	reset		;# 
  2834                           
  2835                           ;PIC18F27J53-killifish_light02.c: 233: }
  2836                           ;PIC18F27J53-killifish_light02.c: 234: if (!my_strcmp(opcode, "at") || !my_strcmp(opcode
      +                          , "adjust_time")) {
  2837  01005A  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2838  01005E  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2839  010062  0EDF               	movlw	low STR_13
  2840  010064  6E21               	movwf	my_strcmp@str2,c
  2841  010066  0EFF               	movlw	high STR_13
  2842  010068  6E22               	movwf	my_strcmp@str2+1,c
  2843  01006A  EC98  F08E         	call	_my_strcmp	;wreg free
  2844  01006E  0900               	iorlw	0
  2845  010070  B4D8               	btfsc	status,2,c
  2846  010072  D00D               	goto	l4761
  2847  010074  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2848  010078  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2849  01007C  0E84               	movlw	low STR_14
  2850  01007E  6E21               	movwf	my_strcmp@str2,c
  2851  010080  0EFF               	movlw	high STR_14
  2852  010082  6E22               	movwf	my_strcmp@str2+1,c
  2853  010084  EC98  F08E         	call	_my_strcmp	;wreg free
  2854  010088  0900               	iorlw	0
  2855  01008A  A4D8               	btfss	status,2,c
  2856  01008C  D0E4               	goto	l4787
  2857  01008E                     l4761:
  2858                           
  2859                           ;PIC18F27J53-killifish_light02.c: 235: if (!my_strcmp(opland1, "y")) {
  2860  01008E  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2861  010092  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2862  010096  0EFC               	movlw	low STR_15
  2863  010098  6E21               	movwf	my_strcmp@str2,c
  2864  01009A  0EFF               	movlw	high STR_15
  2865  01009C  6E22               	movwf	my_strcmp@str2+1,c
  2866  01009E  EC98  F08E         	call	_my_strcmp	;wreg free
  2867  0100A2  0900               	iorlw	0
  2868  0100A4  A4D8               	btfss	status,2,c
  2869  0100A6  D018               	goto	l4765
  2870                           
  2871                           ;PIC18F27J53-killifish_light02.c: 236: comm_at(&caltime_now.YY, 0, 99, my_atoi(opland2))
      +                          ;
  2872  0100A8  0E37               	movlw	low (_caltime_now+6)
  2873  0100AA  0100               	movlb	0	; () banked
  2874  0100AC  6F9D               	movwf	comm_at@hand& (0+255),b
  2875  0100AE  0E00               	movlw	high (_caltime_now+6)
  2876  0100B0  0100               	movlb	0	; () banked
  2877  0100B2  6F9E               	movwf	(comm_at@hand+1)& (0+255),b
  2878  0100B4  0E00               	movlw	0
  2879  0100B6  0100               	movlb	0	; () banked
  2880  0100B8  6F9F               	movwf	comm_at@min& (0+255),b
  2881  0100BA  0E63               	movlw	99
  2882  0100BC  0100               	movlb	0	; () banked
  2883  0100BE  6FA0               	movwf	comm_at@max& (0+255),b
  2884  0100C0  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  2885  0100C4  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  2886  0100C8  ECE8  F08E         	call	_my_atoi	;wreg free
  2887  0100CC  0100               	movlb	0	; () banked
  2888  0100CE  5166               	movf	?_my_atoi& (0+255),w,b
  2889  0100D0  0100               	movlb	0	; () banked
  2890  0100D2  6FA1               	movwf	comm_at@value& (0+255),b
  2891  0100D4  EC30  F092         	call	_comm_at	;wreg free
  2892  0100D8                     l4765:
  2893                           
  2894                           ;PIC18F27J53-killifish_light02.c: 237: }
  2895                           ;PIC18F27J53-killifish_light02.c: 238: if (!my_strcmp(opland1, "M")) {
  2896  0100D8  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2897  0100DC  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2898  0100E0  0ECB               	movlw	low (STR_28+2)
  2899  0100E2  6E21               	movwf	my_strcmp@str2,c
  2900  0100E4  0EFF               	movlw	high (STR_28+2)
  2901  0100E6  6E22               	movwf	my_strcmp@str2+1,c
  2902  0100E8  EC98  F08E         	call	_my_strcmp	;wreg free
  2903  0100EC  0900               	iorlw	0
  2904  0100EE  A4D8               	btfss	status,2,c
  2905  0100F0  D018               	goto	l4769
  2906                           
  2907                           ;PIC18F27J53-killifish_light02.c: 239: comm_at(&caltime_now.MM, 1, 12, my_atoi(opland2))
      +                          ;
  2908  0100F2  0E36               	movlw	low (_caltime_now+5)
  2909  0100F4  0100               	movlb	0	; () banked
  2910  0100F6  6F9D               	movwf	comm_at@hand& (0+255),b
  2911  0100F8  0E00               	movlw	high (_caltime_now+5)
  2912  0100FA  0100               	movlb	0	; () banked
  2913  0100FC  6F9E               	movwf	(comm_at@hand+1)& (0+255),b
  2914  0100FE  0E01               	movlw	1
  2915  010100  0100               	movlb	0	; () banked
  2916  010102  6F9F               	movwf	comm_at@min& (0+255),b
  2917  010104  0E0C               	movlw	12
  2918  010106  0100               	movlb	0	; () banked
  2919  010108  6FA0               	movwf	comm_at@max& (0+255),b
  2920  01010A  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  2921  01010E  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  2922  010112  ECE8  F08E         	call	_my_atoi	;wreg free
  2923  010116  0100               	movlb	0	; () banked
  2924  010118  5166               	movf	?_my_atoi& (0+255),w,b
  2925  01011A  0100               	movlb	0	; () banked
  2926  01011C  6FA1               	movwf	comm_at@value& (0+255),b
  2927  01011E  EC30  F092         	call	_comm_at	;wreg free
  2928  010122                     l4769:
  2929                           
  2930                           ;PIC18F27J53-killifish_light02.c: 240: }
  2931                           ;PIC18F27J53-killifish_light02.c: 241: if (!my_strcmp(opland1, "d")) {
  2932  010122  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2933  010126  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2934  01012A  0EF2               	movlw	low STR_17
  2935  01012C  6E21               	movwf	my_strcmp@str2,c
  2936  01012E  0EFF               	movlw	high STR_17
  2937  010130  6E22               	movwf	my_strcmp@str2+1,c
  2938  010132  EC98  F08E         	call	_my_strcmp	;wreg free
  2939  010136  0900               	iorlw	0
  2940  010138  A4D8               	btfss	status,2,c
  2941  01013A  D01E               	goto	l4775
  2942                           
  2943                           ;PIC18F27J53-killifish_light02.c: 242: comm_at(&caltime_now.DD, 1, month_length(caltime_
      +                          now.YY, caltime_now.MM), my_atoi(opland2));
  2944  01013C  C036  F062         	movff	_caltime_now+5,month_length@month
  2945  010140  5037               	movf	_caltime_now+6,w,c
  2946  010142  ECB4  F08B         	call	_month_length
  2947  010146  0100               	movlb	0	; () banked
  2948  010148  6FAA               	movwf	_command_operation$3180& (0+255),b
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;PIC18F27J53-killifish_light02.c: 242: comm_at(&caltime_now.DD, 1, month_length(caltime_
      +                          now.YY, caltime_now.MM), my_atoi(opland2));
  2952  01014A  0E35               	movlw	low (_caltime_now+4)
  2953  01014C  0100               	movlb	0	; () banked
  2954  01014E  6F9D               	movwf	comm_at@hand& (0+255),b
  2955  010150  0E00               	movlw	high (_caltime_now+4)
  2956  010152  0100               	movlb	0	; () banked
  2957  010154  6F9E               	movwf	(comm_at@hand+1)& (0+255),b
  2958  010156  0E01               	movlw	1
  2959  010158  0100               	movlb	0	; () banked
  2960  01015A  6F9F               	movwf	comm_at@min& (0+255),b
  2961  01015C  C0AA  F0A0         	movff	_command_operation$3180,comm_at@max
  2962  010160  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  2963  010164  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  2964  010168  ECE8  F08E         	call	_my_atoi	;wreg free
  2965  01016C  0100               	movlb	0	; () banked
  2966  01016E  5166               	movf	?_my_atoi& (0+255),w,b
  2967  010170  0100               	movlb	0	; () banked
  2968  010172  6FA1               	movwf	comm_at@value& (0+255),b
  2969  010174  EC30  F092         	call	_comm_at	;wreg free
  2970  010178                     l4775:
  2971                           
  2972                           ;PIC18F27J53-killifish_light02.c: 243: }
  2973                           ;PIC18F27J53-killifish_light02.c: 244: if (!my_strcmp(opland1, "h")) {
  2974  010178  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2975  01017C  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2976  010180  0EF6               	movlw	low STR_18
  2977  010182  6E21               	movwf	my_strcmp@str2,c
  2978  010184  0EFF               	movlw	high STR_18
  2979  010186  6E22               	movwf	my_strcmp@str2+1,c
  2980  010188  EC98  F08E         	call	_my_strcmp	;wreg free
  2981  01018C  0900               	iorlw	0
  2982  01018E  A4D8               	btfss	status,2,c
  2983  010190  D018               	goto	l4779
  2984                           
  2985                           ;PIC18F27J53-killifish_light02.c: 245: comm_at(&caltime_now.hh, 0, 23, my_atoi(opland2))
      +                          ;
  2986  010192  0E33               	movlw	low (_caltime_now+2)
  2987  010194  0100               	movlb	0	; () banked
  2988  010196  6F9D               	movwf	comm_at@hand& (0+255),b
  2989  010198  0E00               	movlw	high (_caltime_now+2)
  2990  01019A  0100               	movlb	0	; () banked
  2991  01019C  6F9E               	movwf	(comm_at@hand+1)& (0+255),b
  2992  01019E  0E00               	movlw	0
  2993  0101A0  0100               	movlb	0	; () banked
  2994  0101A2  6F9F               	movwf	comm_at@min& (0+255),b
  2995  0101A4  0E17               	movlw	23
  2996  0101A6  0100               	movlb	0	; () banked
  2997  0101A8  6FA0               	movwf	comm_at@max& (0+255),b
  2998  0101AA  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  2999  0101AE  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3000  0101B2  ECE8  F08E         	call	_my_atoi	;wreg free
  3001  0101B6  0100               	movlb	0	; () banked
  3002  0101B8  5166               	movf	?_my_atoi& (0+255),w,b
  3003  0101BA  0100               	movlb	0	; () banked
  3004  0101BC  6FA1               	movwf	comm_at@value& (0+255),b
  3005  0101BE  EC30  F092         	call	_comm_at	;wreg free
  3006  0101C2                     l4779:
  3007                           
  3008                           ;PIC18F27J53-killifish_light02.c: 246: }
  3009                           ;PIC18F27J53-killifish_light02.c: 247: if (!my_strcmp(opland1, "m")) {
  3010  0101C2  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3011  0101C6  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3012  0101CA  0ED3               	movlw	low (STR_27+2)
  3013  0101CC  6E21               	movwf	my_strcmp@str2,c
  3014  0101CE  0EFF               	movlw	high (STR_27+2)
  3015  0101D0  6E22               	movwf	my_strcmp@str2+1,c
  3016  0101D2  EC98  F08E         	call	_my_strcmp	;wreg free
  3017  0101D6  0900               	iorlw	0
  3018  0101D8  A4D8               	btfss	status,2,c
  3019  0101DA  D018               	goto	l4783
  3020                           
  3021                           ;PIC18F27J53-killifish_light02.c: 248: comm_at(&caltime_now.mm, 0, 59, my_atoi(opland2))
      +                          ;
  3022  0101DC  0E32               	movlw	low (_caltime_now+1)
  3023  0101DE  0100               	movlb	0	; () banked
  3024  0101E0  6F9D               	movwf	comm_at@hand& (0+255),b
  3025  0101E2  0E00               	movlw	high (_caltime_now+1)
  3026  0101E4  0100               	movlb	0	; () banked
  3027  0101E6  6F9E               	movwf	(comm_at@hand+1)& (0+255),b
  3028  0101E8  0E00               	movlw	0
  3029  0101EA  0100               	movlb	0	; () banked
  3030  0101EC  6F9F               	movwf	comm_at@min& (0+255),b
  3031  0101EE  0E3B               	movlw	59
  3032  0101F0  0100               	movlb	0	; () banked
  3033  0101F2  6FA0               	movwf	comm_at@max& (0+255),b
  3034  0101F4  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  3035  0101F8  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3036  0101FC  ECE8  F08E         	call	_my_atoi	;wreg free
  3037  010200  0100               	movlb	0	; () banked
  3038  010202  5166               	movf	?_my_atoi& (0+255),w,b
  3039  010204  0100               	movlb	0	; () banked
  3040  010206  6FA1               	movwf	comm_at@value& (0+255),b
  3041  010208  EC30  F092         	call	_comm_at	;wreg free
  3042  01020C                     l4783:
  3043                           
  3044                           ;PIC18F27J53-killifish_light02.c: 249: }
  3045                           ;PIC18F27J53-killifish_light02.c: 250: if (!my_strcmp(opland1, "s")) {
  3046  01020C  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3047  010210  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3048  010214  0EF8               	movlw	low STR_20
  3049  010216  6E21               	movwf	my_strcmp@str2,c
  3050  010218  0EFF               	movlw	high STR_20
  3051  01021A  6E22               	movwf	my_strcmp@str2+1,c
  3052  01021C  EC98  F08E         	call	_my_strcmp	;wreg free
  3053  010220  0900               	iorlw	0
  3054  010222  A4D8               	btfss	status,2,c
  3055  010224  D018               	goto	l4787
  3056                           
  3057                           ;PIC18F27J53-killifish_light02.c: 251: comm_at(&caltime_now.ss, 0, 59, my_atoi(opland2))
      +                          ;
  3058  010226  0E31               	movlw	low _caltime_now
  3059  010228  0100               	movlb	0	; () banked
  3060  01022A  6F9D               	movwf	comm_at@hand& (0+255),b
  3061  01022C  0E00               	movlw	high _caltime_now
  3062  01022E  0100               	movlb	0	; () banked
  3063  010230  6F9E               	movwf	(comm_at@hand+1)& (0+255),b
  3064  010232  0E00               	movlw	0
  3065  010234  0100               	movlb	0	; () banked
  3066  010236  6F9F               	movwf	comm_at@min& (0+255),b
  3067  010238  0E3B               	movlw	59
  3068  01023A  0100               	movlb	0	; () banked
  3069  01023C  6FA0               	movwf	comm_at@max& (0+255),b
  3070  01023E  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  3071  010242  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3072  010246  ECE8  F08E         	call	_my_atoi	;wreg free
  3073  01024A  0100               	movlb	0	; () banked
  3074  01024C  5166               	movf	?_my_atoi& (0+255),w,b
  3075  01024E  0100               	movlb	0	; () banked
  3076  010250  6FA1               	movwf	comm_at@value& (0+255),b
  3077  010252  EC30  F092         	call	_comm_at	;wreg free
  3078  010256                     l4787:
  3079                           
  3080                           ;PIC18F27J53-killifish_light02.c: 252: }
  3081                           ;PIC18F27J53-killifish_light02.c: 253: }
  3082                           ;PIC18F27J53-killifish_light02.c: 254: if (!my_strcmp(opcode, "print_time") || !my_strcm
      +                          p(opcode, "t")) {
  3083  010256  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3084  01025A  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3085  01025E  0E90               	movlw	low STR_21
  3086  010260  6E21               	movwf	my_strcmp@str2,c
  3087  010262  0EFF               	movlw	high STR_21
  3088  010264  6E22               	movwf	my_strcmp@str2+1,c
  3089  010266  EC98  F08E         	call	_my_strcmp	;wreg free
  3090  01026A  0900               	iorlw	0
  3091  01026C  B4D8               	btfsc	status,2,c
  3092  01026E  D00C               	goto	l4791
  3093  010270  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3094  010274  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3095  010278  0EE0               	movlw	low (STR_13+1)
  3096  01027A  6E21               	movwf	my_strcmp@str2,c
  3097  01027C  0EFF               	movlw	high (STR_13+1)
  3098  01027E  6E22               	movwf	my_strcmp@str2+1,c
  3099  010280  EC98  F08E         	call	_my_strcmp	;wreg free
  3100  010284  0900               	iorlw	0
  3101  010286  B4D8               	btfsc	status,2,c
  3102  010288                     l4791:
  3103                           
  3104                           ;PIC18F27J53-killifish_light02.c: 255: print_time();
  3105  010288  EC8A  F089         	call	_print_time	;wreg free
  3106                           
  3107                           ;PIC18F27J53-killifish_light02.c: 256: }
  3108                           ;PIC18F27J53-killifish_light02.c: 257: if (!my_strcmp(opcode, "set")) {
  3109  01028C  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3110  010290  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3111  010294  0ED5               	movlw	low STR_23
  3112  010296  6E21               	movwf	my_strcmp@str2,c
  3113  010298  0EFF               	movlw	high STR_23
  3114  01029A  6E22               	movwf	my_strcmp@str2+1,c
  3115  01029C  EC98  F08E         	call	_my_strcmp	;wreg free
  3116  0102A0  0900               	iorlw	0
  3117  0102A2  A4D8               	btfss	status,2,c
  3118  0102A4  D02D               	goto	l4805
  3119                           
  3120                           ;PIC18F27J53-killifish_light02.c: 258: if (!my_strcmp(opland1, "sync")) {
  3121  0102A6  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3122  0102AA  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3123  0102AE  0EB7               	movlw	low STR_24
  3124  0102B0  6E21               	movwf	my_strcmp@str2,c
  3125  0102B2  0EFF               	movlw	high STR_24
  3126  0102B4  6E22               	movwf	my_strcmp@str2+1,c
  3127  0102B6  EC98  F08E         	call	_my_strcmp	;wreg free
  3128  0102BA  0900               	iorlw	0
  3129  0102BC  A4D8               	btfss	status,2,c
  3130  0102BE  D003               	goto	l4799
  3131                           
  3132                           ;PIC18F27J53-killifish_light02.c: 259: light_mode = TIME_SYNC_mode;
  3133  0102C0  0E00               	movlw	0
  3134  0102C2  0100               	movlb	0	; () banked
  3135  0102C4  6FB3               	movwf	_light_mode& (0+255),b
  3136  0102C6                     l4799:
  3137                           
  3138                           ;PIC18F27J53-killifish_light02.c: 260: }
  3139                           ;PIC18F27J53-killifish_light02.c: 261: if (!my_strcmp(opland1, "adc") || !my_strcmp(opla
      +                          nd1, "ADC")) {
  3140  0102C6  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3141  0102CA  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3142  0102CE  0ECD               	movlw	low STR_25
  3143  0102D0  6E21               	movwf	my_strcmp@str2,c
  3144  0102D2  0EFF               	movlw	high STR_25
  3145  0102D4  6E22               	movwf	my_strcmp@str2+1,c
  3146  0102D6  EC98  F08E         	call	_my_strcmp	;wreg free
  3147  0102DA  0900               	iorlw	0
  3148  0102DC  B4D8               	btfsc	status,2,c
  3149  0102DE  D00D               	goto	l4803
  3150  0102E0  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3151  0102E4  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3152  0102E8  0EC5               	movlw	low STR_26
  3153  0102EA  6E21               	movwf	my_strcmp@str2,c
  3154  0102EC  0EFF               	movlw	high STR_26
  3155  0102EE  6E22               	movwf	my_strcmp@str2+1,c
  3156  0102F0  EC98  F08E         	call	_my_strcmp	;wreg free
  3157  0102F4  0900               	iorlw	0
  3158  0102F6  A4D8               	btfss	status,2,c
  3159  0102F8  D003               	goto	l4805
  3160  0102FA                     l4803:
  3161                           
  3162                           ;PIC18F27J53-killifish_light02.c: 262: light_mode = ADC_mode;
  3163  0102FA  0E01               	movlw	1
  3164  0102FC  0100               	movlb	0	; () banked
  3165  0102FE  6FB3               	movwf	_light_mode& (0+255),b
  3166  010300                     l4805:
  3167                           
  3168                           ;PIC18F27J53-killifish_light02.c: 263: }
  3169                           ;PIC18F27J53-killifish_light02.c: 264: }
  3170                           ;PIC18F27J53-killifish_light02.c: 265: if (!my_strcmp(opcode, "pwm") || !my_strcmp(opcod
      +                          e, "PWM")) {
  3171  010300  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3172  010304  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3173  010308  0ED1               	movlw	low STR_27
  3174  01030A  6E21               	movwf	my_strcmp@str2,c
  3175  01030C  0EFF               	movlw	high STR_27
  3176  01030E  6E22               	movwf	my_strcmp@str2+1,c
  3177  010310  EC98  F08E         	call	_my_strcmp	;wreg free
  3178  010314  0900               	iorlw	0
  3179  010316  B4D8               	btfsc	status,2,c
  3180  010318  D00D               	goto	l4809
  3181  01031A  C0A2  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3182  01031E  C0A3  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3183  010322  0EC9               	movlw	low STR_28
  3184  010324  6E21               	movwf	my_strcmp@str2,c
  3185  010326  0EFF               	movlw	high STR_28
  3186  010328  6E22               	movwf	my_strcmp@str2+1,c
  3187  01032A  EC98  F08E         	call	_my_strcmp	;wreg free
  3188  01032E  0900               	iorlw	0
  3189  010330  A4D8               	btfss	status,2,c
  3190  010332  0012               	return	
  3191  010334                     l4809:
  3192                           
  3193                           ;PIC18F27J53-killifish_light02.c: 266: if (!my_strcmp(opland1, "r") || !my_strcmp(opland
      +                          1, "R")) {
  3194  010334  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3195  010338  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3196  01033C  0EB0               	movlw	low (STR_37+4)
  3197  01033E  6E21               	movwf	my_strcmp@str2,c
  3198  010340  0EFF               	movlw	high (STR_37+4)
  3199  010342  6E22               	movwf	my_strcmp@str2+1,c
  3200  010344  EC98  F08E         	call	_my_strcmp	;wreg free
  3201  010348  0900               	iorlw	0
  3202  01034A  B4D8               	btfsc	status,2,c
  3203  01034C  D00D               	goto	l4813
  3204  01034E  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3205  010352  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3206  010356  0EEC               	movlw	low STR_30
  3207  010358  6E21               	movwf	my_strcmp@str2,c
  3208  01035A  0EFF               	movlw	high STR_30
  3209  01035C  6E22               	movwf	my_strcmp@str2+1,c
  3210  01035E  EC98  F08E         	call	_my_strcmp	;wreg free
  3211  010362  0900               	iorlw	0
  3212  010364  A4D8               	btfss	status,2,c
  3213  010366  D010               	goto	l4817
  3214  010368                     l4813:
  3215                           
  3216                           ;PIC18F27J53-killifish_light02.c: 267: light_mode = COMMAND_mode;
  3217  010368  0E02               	movlw	2
  3218  01036A  0100               	movlb	0	; () banked
  3219  01036C  6FB3               	movwf	_light_mode& (0+255),b
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;PIC18F27J53-killifish_light02.c: 268: PWM_set(0, my_atoi(opland2));
  3223  01036E  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  3224  010372  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3225  010376  ECE8  F08E         	call	_my_atoi	;wreg free
  3226  01037A  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3227  01037E  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3228  010382  0E00               	movlw	0
  3229  010384  ECE6  F088         	call	_PWM_set
  3230  010388                     l4817:
  3231                           
  3232                           ;PIC18F27J53-killifish_light02.c: 269: }
  3233                           ;PIC18F27J53-killifish_light02.c: 270: if (!my_strcmp(opland1, "g") || !my_strcmp(opland
      +                          1, "G")) {
  3234  010388  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3235  01038C  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3236  010390  0EF4               	movlw	low STR_31
  3237  010392  6E21               	movwf	my_strcmp@str2,c
  3238  010394  0EFF               	movlw	high STR_31
  3239  010396  6E22               	movwf	my_strcmp@str2+1,c
  3240  010398  EC98  F08E         	call	_my_strcmp	;wreg free
  3241  01039C  0900               	iorlw	0
  3242  01039E  B4D8               	btfsc	status,2,c
  3243  0103A0  D00D               	goto	l4821
  3244  0103A2  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3245  0103A6  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3246  0103AA  0EEA               	movlw	low STR_32
  3247  0103AC  6E21               	movwf	my_strcmp@str2,c
  3248  0103AE  0EFF               	movlw	high STR_32
  3249  0103B0  6E22               	movwf	my_strcmp@str2+1,c
  3250  0103B2  EC98  F08E         	call	_my_strcmp	;wreg free
  3251  0103B6  0900               	iorlw	0
  3252  0103B8  A4D8               	btfss	status,2,c
  3253  0103BA  D010               	goto	l4825
  3254  0103BC                     l4821:
  3255                           
  3256                           ;PIC18F27J53-killifish_light02.c: 271: light_mode = COMMAND_mode;
  3257  0103BC  0E02               	movlw	2
  3258  0103BE  0100               	movlb	0	; () banked
  3259  0103C0  6FB3               	movwf	_light_mode& (0+255),b
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;PIC18F27J53-killifish_light02.c: 272: PWM_set(1, my_atoi(opland2));
  3263  0103C2  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  3264  0103C6  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3265  0103CA  ECE8  F08E         	call	_my_atoi	;wreg free
  3266  0103CE  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3267  0103D2  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3268  0103D6  0E01               	movlw	1
  3269  0103D8  ECE6  F088         	call	_PWM_set
  3270  0103DC                     l4825:
  3271                           
  3272                           ;PIC18F27J53-killifish_light02.c: 273: }
  3273                           ;PIC18F27J53-killifish_light02.c: 274: if (!my_strcmp(opland1, "b") || !my_strcmp(opland
      +                          1, "B")) {
  3274  0103DC  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3275  0103E0  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3276  0103E4  0EF0               	movlw	low STR_33
  3277  0103E6  6E21               	movwf	my_strcmp@str2,c
  3278  0103E8  0EFF               	movlw	high STR_33
  3279  0103EA  6E22               	movwf	my_strcmp@str2+1,c
  3280  0103EC  EC98  F08E         	call	_my_strcmp	;wreg free
  3281  0103F0  0900               	iorlw	0
  3282  0103F2  B4D8               	btfsc	status,2,c
  3283  0103F4  D00D               	goto	l4829
  3284  0103F6  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3285  0103FA  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3286  0103FE  0EE8               	movlw	low STR_34
  3287  010400  6E21               	movwf	my_strcmp@str2,c
  3288  010402  0EFF               	movlw	high STR_34
  3289  010404  6E22               	movwf	my_strcmp@str2+1,c
  3290  010406  EC98  F08E         	call	_my_strcmp	;wreg free
  3291  01040A  0900               	iorlw	0
  3292  01040C  A4D8               	btfss	status,2,c
  3293  01040E  D010               	goto	l4833
  3294  010410                     l4829:
  3295                           
  3296                           ;PIC18F27J53-killifish_light02.c: 275: light_mode = COMMAND_mode;
  3297  010410  0E02               	movlw	2
  3298  010412  0100               	movlb	0	; () banked
  3299  010414  6FB3               	movwf	_light_mode& (0+255),b
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;PIC18F27J53-killifish_light02.c: 276: PWM_set(2, my_atoi(opland2));
  3303  010416  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  3304  01041A  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3305  01041E  ECE8  F08E         	call	_my_atoi	;wreg free
  3306  010422  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3307  010426  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3308  01042A  0E02               	movlw	2
  3309  01042C  ECE6  F088         	call	_PWM_set
  3310  010430                     l4833:
  3311                           
  3312                           ;PIC18F27J53-killifish_light02.c: 277: }
  3313                           ;PIC18F27J53-killifish_light02.c: 278: if (!my_strcmp(opland1, "w") || !my_strcmp(opland
      +                          1, "W")) {
  3314  010430  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3315  010434  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3316  010438  0EFA               	movlw	low STR_35
  3317  01043A  6E21               	movwf	my_strcmp@str2,c
  3318  01043C  0EFF               	movlw	high STR_35
  3319  01043E  6E22               	movwf	my_strcmp@str2+1,c
  3320  010440  EC98  F08E         	call	_my_strcmp	;wreg free
  3321  010444  0900               	iorlw	0
  3322  010446  B4D8               	btfsc	status,2,c
  3323  010448  D00D               	goto	l4837
  3324  01044A  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3325  01044E  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3326  010452  0EEE               	movlw	low STR_36
  3327  010454  6E21               	movwf	my_strcmp@str2,c
  3328  010456  0EFF               	movlw	high STR_36
  3329  010458  6E22               	movwf	my_strcmp@str2+1,c
  3330  01045A  EC98  F08E         	call	_my_strcmp	;wreg free
  3331  01045E  0900               	iorlw	0
  3332  010460  A4D8               	btfss	status,2,c
  3333  010462  D010               	goto	l4841
  3334  010464                     l4837:
  3335                           
  3336                           ;PIC18F27J53-killifish_light02.c: 279: light_mode = COMMAND_mode;
  3337  010464  0E02               	movlw	2
  3338  010466  0100               	movlb	0	; () banked
  3339  010468  6FB3               	movwf	_light_mode& (0+255),b
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;PIC18F27J53-killifish_light02.c: 280: PWM_set(3, my_atoi(opland2));
  3343  01046A  C0A6  F066         	movff	command_operation@opland2,my_atoi@str
  3344  01046E  C0A7  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3345  010472  ECE8  F08E         	call	_my_atoi	;wreg free
  3346  010476  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3347  01047A  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3348  01047E  0E03               	movlw	3
  3349  010480  ECE6  F088         	call	_PWM_set
  3350  010484                     l4841:
  3351                           
  3352                           ;PIC18F27J53-killifish_light02.c: 281: }
  3353                           ;PIC18F27J53-killifish_light02.c: 282: if (!my_strcmp(opland1, "clear")) {
  3354  010484  C0A4  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3355  010488  C0A5  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3356  01048C  0EAC               	movlw	low STR_37
  3357  01048E  6E21               	movwf	my_strcmp@str2,c
  3358  010490  0EFF               	movlw	high STR_37
  3359  010492  6E22               	movwf	my_strcmp@str2+1,c
  3360  010494  EC98  F08E         	call	_my_strcmp	;wreg free
  3361  010498  0900               	iorlw	0
  3362  01049A  A4D8               	btfss	status,2,c
  3363  01049C  0012               	return	
  3364                           
  3365                           ;PIC18F27J53-killifish_light02.c: 283: light_mode = COMMAND_mode;
  3366  01049E  0E02               	movlw	2
  3367  0104A0  0100               	movlb	0	; () banked
  3368  0104A2  6FB3               	movwf	_light_mode& (0+255),b
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;PIC18F27J53-killifish_light02.c: 284: PWM_set(0, 0);
  3372  0104A4  0E00               	movlw	0
  3373  0104A6  0100               	movlb	0	; () banked
  3374  0104A8  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3375  0104AA  0E00               	movlw	0
  3376  0104AC  6F6E               	movwf	PWM_set@value& (0+255),b
  3377  0104AE  0E00               	movlw	0
  3378  0104B0  ECE6  F088         	call	_PWM_set
  3379                           
  3380                           ;PIC18F27J53-killifish_light02.c: 285: PWM_set(1, 0);
  3381  0104B4  0E00               	movlw	0
  3382  0104B6  0100               	movlb	0	; () banked
  3383  0104B8  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3384  0104BA  0E00               	movlw	0
  3385  0104BC  6F6E               	movwf	PWM_set@value& (0+255),b
  3386  0104BE  0E01               	movlw	1
  3387  0104C0  ECE6  F088         	call	_PWM_set
  3388                           
  3389                           ;PIC18F27J53-killifish_light02.c: 286: PWM_set(2, 0);
  3390  0104C4  0E00               	movlw	0
  3391  0104C6  0100               	movlb	0	; () banked
  3392  0104C8  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3393  0104CA  0E00               	movlw	0
  3394  0104CC  6F6E               	movwf	PWM_set@value& (0+255),b
  3395  0104CE  0E02               	movlw	2
  3396  0104D0  ECE6  F088         	call	_PWM_set
  3397                           
  3398                           ;PIC18F27J53-killifish_light02.c: 287: PWM_set(3, 0);
  3399  0104D4  0E00               	movlw	0
  3400  0104D6  0100               	movlb	0	; () banked
  3401  0104D8  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3402  0104DA  0E00               	movlw	0
  3403  0104DC  6F6E               	movwf	PWM_set@value& (0+255),b
  3404  0104DE  0E03               	movlw	3
  3405  0104E0  ECE6  F088         	call	_PWM_set
  3406  0104E4  0012               	return	
  3407  0104E6                     __end_of_command_operation:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           tblptrh	equ	0xFF7
  3411                           tblptrl	equ	0xFF6
  3412                           tablat	equ	0xFF5
  3413                           prodh	equ	0xFF4
  3414                           prodl	equ	0xFF3
  3415                           intcon	equ	0xFF2
  3416                           postinc0	equ	0xFEE
  3417                           wreg	equ	0xFE8
  3418                           postinc1	equ	0xFE6
  3419                           postdec1	equ	0xFE5
  3420                           fsr1h	equ	0xFE2
  3421                           fsr1l	equ	0xFE1
  3422                           indf2	equ	0xFDF
  3423                           postinc2	equ	0xFDE
  3424                           postdec2	equ	0xFDD
  3425                           fsr2h	equ	0xFDA
  3426                           fsr2l	equ	0xFD9
  3427                           status	equ	0xFD8
  3428                           
  3429 ;; *************** function _my_strcmp *****************
  3430 ;; Defined at:
  3431 ;;		line 53 in file "../My_header\My_stdlib.h"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  str1            2   30[COMRAM] PTR const unsigned char 
  3434 ;;		 -> rx_loop@opland1(100), rx_loop@opcode(100), 
  3435 ;;  str2            2   32[COMRAM] PTR const unsigned char 
  3436 ;;		 -> STR_37(6), STR_36(2), STR_35(2), STR_34(2), 
  3437 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
  3438 ;;		 -> STR_29(2), STR_28(4), STR_27(4), STR_26(4), 
  3439 ;;		 -> STR_25(4), STR_24(5), STR_23(4), STR_22(2), 
  3440 ;;		 -> STR_21(11), STR_20(2), STR_19(2), STR_18(2), 
  3441 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(12), 
  3442 ;;		 -> STR_13(3), STR_12(9), STR_10(2), STR_9(5), 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      char 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3457 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;Total ram usage:        5 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    4
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_command_operation
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text7
  3469  011D30                     __ptext7:
  3470                           	opt stack 0
  3471  011D30                     _my_strcmp:
  3472                           	opt stack 24
  3473                           
  3474                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  3475                           
  3476                           ;incstack = 0
  3477  011D30  D02A               	goto	l4617
  3478  011D32                     l4609:
  3479                           
  3480                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  3481  011D32  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3482  011D36  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3483  011D3A  50DF               	movf	indf2,w,c
  3484  011D3C  0100               	movlb	0	; () banked
  3485  011D3E  6F60               	movwf	??_my_strcmp& (0+255),b
  3486  011D40  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3487  011D44  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3488  011D48                     	if	0	;tblptru may be non-zero
  3489  011D48                     	endif
  3490  011D48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3491  011D48  0E00               	movlw	low (__mediumconst shr (0+16))
  3492  011D4A  6EF8               	movwf	tblptru,c
  3493  011D4C                     	endif
  3494  011D4C  0008               	tblrd		*
  3495  011D4E  50F5               	movf	tablat,w,c
  3496  011D50  0100               	movlb	0	; () banked
  3497  011D52  1960               	xorwf	??_my_strcmp& (0+255),w,b
  3498  011D54  B4D8               	btfsc	status,2,c
  3499  011D56  D013               	goto	l4615
  3500                           
  3501                           ; BSR set to: 0
  3502  011D58  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3503  011D5C  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3504  011D60  50DF               	movf	indf2,w,c
  3505  011D62  0100               	movlb	0	; () banked
  3506  011D64  6F60               	movwf	??_my_strcmp& (0+255),b
  3507  011D66  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3508  011D6A  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3509  011D6E                     	if	0	;tblptru may be non-zero
  3510  011D6E                     	endif
  3511  011D6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3512  011D6E  0E00               	movlw	low (__mediumconst shr (0+16))
  3513  011D70  6EF8               	movwf	tblptru,c
  3514  011D72                     	endif
  3515  011D72  0008               	tblrd		*
  3516  011D74  50F5               	movf	tablat,w,c
  3517  011D76  0800               	sublw	0
  3518  011D78  0100               	movlb	0	; () banked
  3519  011D7A  2560               	addwf	??_my_strcmp& (0+255),w,b
  3520                           
  3521                           ; BSR set to: 0
  3522  011D7C  0012               	return	
  3523  011D7E                     l4615:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;My_header\My_stdlib.h: 56: str1++;
  3527  011D7E  4A1F               	infsnz	my_strcmp@str1,f,c
  3528  011D80  2A20               	incf	my_strcmp@str1+1,f,c
  3529                           
  3530                           ;My_header\My_stdlib.h: 57: str2++;
  3531  011D82  4A21               	infsnz	my_strcmp@str2,f,c
  3532  011D84  2A22               	incf	my_strcmp@str2+1,f,c
  3533  011D86                     l4617:
  3534  011D86  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3535  011D8A  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3536  011D8E  50DF               	movf	indf2,w,c
  3537  011D90  B4D8               	btfsc	status,2,c
  3538  011D92  D00B               	goto	l4621
  3539  011D94  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3540  011D98  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3541  011D9C                     	if	0	;tblptru may be non-zero
  3542  011D9C                     	endif
  3543  011D9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3544  011D9C  0E00               	movlw	low (__mediumconst shr (0+16))
  3545  011D9E  6EF8               	movwf	tblptru,c
  3546  011DA0                     	endif
  3547  011DA0  0008               	tblrd		*
  3548  011DA2  50F5               	movf	tablat,w,c
  3549  011DA4  0900               	iorlw	0
  3550  011DA6  A4D8               	btfss	status,2,c
  3551  011DA8  D7C4               	goto	l4609
  3552  011DAA                     l4621:
  3553                           
  3554                           ;My_header\My_stdlib.h: 58: }
  3555                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  3556  011DAA  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3557  011DAE  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3558  011DB2  50DF               	movf	indf2,w,c
  3559  011DB4  0100               	movlb	0	; () banked
  3560  011DB6  6F60               	movwf	??_my_strcmp& (0+255),b
  3561  011DB8  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3562  011DBC  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3563  011DC0                     	if	0	;tblptru may be non-zero
  3564  011DC0                     	endif
  3565  011DC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3566  011DC0  0E00               	movlw	low (__mediumconst shr (0+16))
  3567  011DC2  6EF8               	movwf	tblptru,c
  3568  011DC4                     	endif
  3569  011DC4  0008               	tblrd		*
  3570  011DC6  50F5               	movf	tablat,w,c
  3571  011DC8  0800               	sublw	0
  3572  011DCA  0100               	movlb	0	; () banked
  3573  011DCC  2560               	addwf	??_my_strcmp& (0+255),w,b
  3574  011DCE  0012               	return	
  3575  011DD0                     __end_of_my_strcmp:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           postinc1	equ	0xFE6
  3587                           postdec1	equ	0xFE5
  3588                           fsr1h	equ	0xFE2
  3589                           fsr1l	equ	0xFE1
  3590                           indf2	equ	0xFDF
  3591                           postinc2	equ	0xFDE
  3592                           postdec2	equ	0xFDD
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _my_atoi *****************
  3598 ;; Defined at:
  3599 ;;		line 41 in file "../My_header\My_stdlib.h"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  str             2    6[BANK0 ] PTR const unsigned char 
  3602 ;;		 -> rx_loop@opland2(100), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  ret             2   12[BANK0 ] unsigned int 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  2    6[BANK0 ] unsigned int 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3617 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3618 ;;Total ram usage:        8 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    5
  3621 ;; This function calls:
  3622 ;;		___wmul
  3623 ;; This function is called by:
  3624 ;;		_command_operation
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text8
  3629  011DD0                     __ptext8:
  3630                           	opt stack 0
  3631  011DD0                     _my_atoi:
  3632                           	opt stack 23
  3633                           
  3634                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;incstack = 0
  3638  011DD0  0E00               	movlw	0
  3639  011DD2  0100               	movlb	0	; () banked
  3640  011DD4  6F6D               	movwf	(my_atoi@ret+1)& (0+255),b
  3641  011DD6  0E00               	movlw	0
  3642  011DD8  6F6C               	movwf	my_atoi@ret& (0+255),b
  3643                           
  3644                           ;My_header\My_stdlib.h: 43: while (*str) {
  3645  011DDA  D03E               	goto	l4605
  3646  011DDC                     l4595:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  3650  011DDC  C066  FFD9         	movff	my_atoi@str,fsr2l
  3651  011DE0  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  3652  011DE4  0E2F               	movlw	47
  3653  011DE6  64DF               	cpfsgt	indf2,c
  3654  011DE8  D034               	goto	l4603
  3655                           
  3656                           ; BSR set to: 0
  3657  011DEA  C066  FFD9         	movff	my_atoi@str,fsr2l
  3658  011DEE  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  3659  011DF2  0E3A               	movlw	58
  3660  011DF4  60DF               	cpfslt	indf2,c
  3661  011DF6  D02D               	goto	l4603
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;My_header\My_stdlib.h: 45: ret *= 10;
  3665  011DF8  C06C  F060         	movff	my_atoi@ret,___wmul@multiplier
  3666  011DFC  C06D  F061         	movff	my_atoi@ret+1,___wmul@multiplier+1
  3667  011E00  0E00               	movlw	0
  3668  011E02  0100               	movlb	0	; () banked
  3669  011E04  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3670  011E06  0E0A               	movlw	10
  3671  011E08  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3672  011E0A  EC55  F093         	call	___wmul	;wreg free
  3673  011E0E  C060  F06C         	movff	?___wmul,my_atoi@ret
  3674  011E12  C061  F06D         	movff	?___wmul+1,my_atoi@ret+1
  3675                           
  3676                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  3677  011E16  0ED0               	movlw	208
  3678  011E18  0100               	movlb	0	; () banked
  3679  011E1A  6F68               	movwf	??_my_atoi& (0+255),b
  3680  011E1C  0EFF               	movlw	255
  3681  011E1E  0100               	movlb	0	; () banked
  3682  011E20  6F69               	movwf	(??_my_atoi+1)& (0+255),b
  3683  011E22  C066  FFD9         	movff	my_atoi@str,fsr2l
  3684  011E26  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  3685  011E2A  50DF               	movf	indf2,w,c
  3686  011E2C  0100               	movlb	0	; () banked
  3687  011E2E  6F6A               	movwf	(??_my_atoi+2)& (0+255),b
  3688  011E30  6B6B               	clrf	(??_my_atoi+3)& (0+255),b
  3689  011E32  0100               	movlb	0	; () banked
  3690  011E34  5168               	movf	??_my_atoi& (0+255),w,b
  3691  011E36  0100               	movlb	0	; () banked
  3692  011E38  276A               	addwf	(??_my_atoi+2)& (0+255),f,b
  3693  011E3A  0100               	movlb	0	; () banked
  3694  011E3C  5169               	movf	(??_my_atoi+1)& (0+255),w,b
  3695  011E3E  0100               	movlb	0	; () banked
  3696  011E40  236B               	addwfc	(??_my_atoi+3)& (0+255),f,b
  3697  011E42  0100               	movlb	0	; () banked
  3698  011E44  516A               	movf	(??_my_atoi+2)& (0+255),w,b
  3699  011E46  0100               	movlb	0	; () banked
  3700  011E48  276C               	addwf	my_atoi@ret& (0+255),f,b
  3701  011E4A  0100               	movlb	0	; () banked
  3702  011E4C  516B               	movf	(??_my_atoi+3)& (0+255),w,b
  3703  011E4E  0100               	movlb	0	; () banked
  3704  011E50  236D               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  3705  011E52                     l4603:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;My_header\My_stdlib.h: 47: }
  3709                           ;My_header\My_stdlib.h: 48: str++;
  3710  011E52  0100               	movlb	0	; () banked
  3711  011E54  4B66               	infsnz	my_atoi@str& (0+255),f,b
  3712  011E56  2B67               	incf	(my_atoi@str+1)& (0+255),f,b
  3713  011E58                     l4605:
  3714                           
  3715                           ; BSR set to: 0
  3716  011E58  C066  FFD9         	movff	my_atoi@str,fsr2l
  3717  011E5C  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  3718  011E60  50DF               	movf	indf2,w,c
  3719  011E62  A4D8               	btfss	status,2,c
  3720  011E64  D7BB               	goto	l4595
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;My_header\My_stdlib.h: 49: }
  3724                           ;My_header\My_stdlib.h: 50: return ret;
  3725  011E66  C06C  F066         	movff	my_atoi@ret,?_my_atoi
  3726  011E6A  C06D  F067         	movff	my_atoi@ret+1,?_my_atoi+1
  3727                           
  3728                           ; BSR set to: 0
  3729  011E6E  0012               	return		;funcret
  3730  011E70                     __end_of_my_atoi:
  3731                           	opt stack 0
  3732                           tblptru	equ	0xFF8
  3733                           tblptrh	equ	0xFF7
  3734                           tblptrl	equ	0xFF6
  3735                           tablat	equ	0xFF5
  3736                           prodh	equ	0xFF4
  3737                           prodl	equ	0xFF3
  3738                           intcon	equ	0xFF2
  3739                           postinc0	equ	0xFEE
  3740                           wreg	equ	0xFE8
  3741                           postinc1	equ	0xFE6
  3742                           postdec1	equ	0xFE5
  3743                           fsr1h	equ	0xFE2
  3744                           fsr1l	equ	0xFE1
  3745                           indf2	equ	0xFDF
  3746                           postinc2	equ	0xFDE
  3747                           postdec2	equ	0xFDD
  3748                           fsr2h	equ	0xFDA
  3749                           fsr2l	equ	0xFD9
  3750                           status	equ	0xFD8
  3751                           
  3752 ;; *************** function _comm_at *****************
  3753 ;; Defined at:
  3754 ;;		line 203 in file "PIC18F27J53-killifish_light02.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  hand            2   61[BANK0 ] PTR unsigned char 
  3757 ;;		 -> caltime_now(7), 
  3758 ;;  min             1   63[BANK0 ] unsigned char 
  3759 ;;  max             1   64[BANK0 ] unsigned char 
  3760 ;;  value           1   65[BANK0 ] unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3772 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;Total ram usage:        5 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    9
  3779 ;; This function calls:
  3780 ;;		_RTCC_from_caltime
  3781 ;;		_print_time
  3782 ;;		_tx_sends
  3783 ;; This function is called by:
  3784 ;;		_command_operation
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text9
  3789  012460                     __ptext9:
  3790                           	opt stack 0
  3791  012460                     _comm_at:
  3792                           	opt stack 19
  3793                           
  3794                           ;PIC18F27J53-killifish_light02.c: 204: if (value >= min && value <= max) {
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;incstack = 0
  3798  012460  0100               	movlb	0	; () banked
  3799  012462  519F               	movf	comm_at@min& (0+255),w,b
  3800  012464  0100               	movlb	0	; () banked
  3801  012466  5DA1               	subwf	comm_at@value& (0+255),w,b
  3802  012468  A0D8               	btfss	status,0,c
  3803  01246A  D01F               	goto	l4679
  3804                           
  3805                           ; BSR set to: 0
  3806  01246C  0100               	movlb	0	; () banked
  3807  01246E  51A1               	movf	comm_at@value& (0+255),w,b
  3808  012470  0100               	movlb	0	; () banked
  3809  012472  5DA0               	subwf	comm_at@max& (0+255),w,b
  3810  012474  A0D8               	btfss	status,0,c
  3811  012476  D019               	goto	l4679
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;PIC18F27J53-killifish_light02.c: 205: *hand = value;
  3815  012478  C09D  FFD9         	movff	comm_at@hand,fsr2l
  3816  01247C  C09E  FFDA         	movff	comm_at@hand+1,fsr2h
  3817  012480  C0A1  FFDF         	movff	comm_at@value,indf2
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;PIC18F27J53-killifish_light02.c: 206: RTCC_from_caltime(&caltime_now, &epoch_now);
  3821  012484  0E31               	movlw	low _caltime_now
  3822  012486  0100               	movlb	0	; () banked
  3823  012488  6F99               	movwf	RTCC_from_caltime@ct& (0+255),b
  3824  01248A  0E00               	movlw	high _caltime_now
  3825  01248C  0100               	movlb	0	; () banked
  3826  01248E  6F9A               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  3827  012490  0EB4               	movlw	low _epoch_now
  3828  012492  0100               	movlb	0	; () banked
  3829  012494  6F9B               	movwf	RTCC_from_caltime@ep& (0+255),b
  3830  012496  0E00               	movlw	high _epoch_now
  3831  012498  0100               	movlb	0	; () banked
  3832  01249A  6F9C               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  3833  01249C  EC3A  F093         	call	_RTCC_from_caltime	;wreg free
  3834                           
  3835                           ;PIC18F27J53-killifish_light02.c: 207: time_change_flag = 1;
  3836  0124A0  0E01               	movlw	1
  3837  0124A2  6E2E               	movwf	_time_change_flag,c
  3838                           
  3839                           ;PIC18F27J53-killifish_light02.c: 208: print_time();
  3840  0124A4  EC8A  F089         	call	_print_time	;wreg free
  3841                           
  3842                           ;PIC18F27J53-killifish_light02.c: 209: } else {
  3843  0124A8  0012               	return	
  3844  0124AA                     l4679:
  3845                           
  3846                           ;PIC18F27J53-killifish_light02.c: 210: tx_sends("\terror\n");
  3847  0124AA  0EA4               	movlw	low STR_8
  3848  0124AC  6E21               	movwf	tx_sends@asciicode,c
  3849  0124AE  0EFF               	movlw	high STR_8
  3850  0124B0  6E22               	movwf	tx_sends@asciicode+1,c
  3851  0124B2  ECFC  F091         	call	_tx_sends	;wreg free
  3852  0124B6  0012               	return	
  3853  0124B8                     __end_of_comm_at:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           postinc1	equ	0xFE6
  3865                           postdec1	equ	0xFE5
  3866                           fsr1h	equ	0xFE2
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _print_time *****************
  3876 ;; Defined at:
  3877 ;;		line 180 in file "PIC18F27J53-killifish_light02.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    8
  3898 ;; This function calls:
  3899 ;;		_RTCC_from_RTCC
  3900 ;;		_tx_send
  3901 ;;		_tx_send_dec
  3902 ;;		_tx_sends
  3903 ;; This function is called by:
  3904 ;;		_comm_at
  3905 ;;		_command_operation
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text10
  3910  011314                     __ptext10:
  3911                           	opt stack 0
  3912  011314                     _print_time:
  3913                           	opt stack 20
  3914                           
  3915                           ;PIC18F27J53-killifish_light02.c: 181: RTCC_from_RTCC(&caltime_now, &epoch_now);
  3916                           
  3917                           ;incstack = 0
  3918  011314  0E31               	movlw	low _caltime_now
  3919  011316  0100               	movlb	0	; () banked
  3920  011318  6F83               	movwf	RTCC_from_RTCC@ct& (0+255),b
  3921  01131A  0E00               	movlw	high _caltime_now
  3922  01131C  0100               	movlb	0	; () banked
  3923  01131E  6F84               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  3924  011320  0EB4               	movlw	low _epoch_now
  3925  011322  0100               	movlb	0	; () banked
  3926  011324  6F85               	movwf	RTCC_from_RTCC@ep& (0+255),b
  3927  011326  0E00               	movlw	high _epoch_now
  3928  011328  0100               	movlb	0	; () banked
  3929  01132A  6F86               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  3930  01132C  ECD7  F093         	call	_RTCC_from_RTCC	;wreg free
  3931                           
  3932                           ;PIC18F27J53-killifish_light02.c: 182: GIE = 0;
  3933  011330  9EF2               	bcf	intcon,7,c	;volatile
  3934                           
  3935                           ;PIC18F27J53-killifish_light02.c: 183: tx_sends("    ");
  3936  011332  0EB2               	movlw	low STR_2
  3937  011334  6E21               	movwf	tx_sends@asciicode,c
  3938  011336  0EFF               	movlw	high STR_2
  3939  011338  6E22               	movwf	tx_sends@asciicode+1,c
  3940  01133A  ECFC  F091         	call	_tx_sends	;wreg free
  3941                           
  3942                           ;PIC18F27J53-killifish_light02.c: 184: tx_send_dec(20, edit_flag.flag.YY);
  3943  01133E  0E00               	movlw	0
  3944  011340  BA2A               	btfsc	_edit_flag,5,c
  3945  011342  0E01               	movlw	1
  3946  011344  0100               	movlb	0	; () banked
  3947  011346  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3948  011348  0E14               	movlw	20
  3949  01134A  EC86  F092         	call	_tx_send_dec
  3950                           
  3951                           ;PIC18F27J53-killifish_light02.c: 185: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  3952  01134E  0E00               	movlw	0
  3953  011350  BA2A               	btfsc	_edit_flag,5,c
  3954  011352  0E01               	movlw	1
  3955  011354  0100               	movlb	0	; () banked
  3956  011356  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3957  011358  5037               	movf	_caltime_now+6,w,c
  3958  01135A  EC86  F092         	call	_tx_send_dec
  3959                           
  3960                           ;PIC18F27J53-killifish_light02.c: 186: tx_sends("/");
  3961  01135E  0EE4               	movlw	low STR_3
  3962  011360  6E21               	movwf	tx_sends@asciicode,c
  3963  011362  0EFF               	movlw	high STR_3
  3964  011364  6E22               	movwf	tx_sends@asciicode+1,c
  3965  011366  ECFC  F091         	call	_tx_sends	;wreg free
  3966                           
  3967                           ;PIC18F27J53-killifish_light02.c: 187: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  3968  01136A  0E00               	movlw	0
  3969  01136C  B82A               	btfsc	_edit_flag,4,c
  3970  01136E  0E01               	movlw	1
  3971  011370  0100               	movlb	0	; () banked
  3972  011372  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3973  011374  5036               	movf	_caltime_now+5,w,c
  3974  011376  EC86  F092         	call	_tx_send_dec
  3975                           
  3976                           ;PIC18F27J53-killifish_light02.c: 188: tx_sends("/");
  3977  01137A  0EE4               	movlw	low STR_3
  3978  01137C  6E21               	movwf	tx_sends@asciicode,c
  3979  01137E  0EFF               	movlw	high STR_3
  3980  011380  6E22               	movwf	tx_sends@asciicode+1,c
  3981  011382  ECFC  F091         	call	_tx_sends	;wreg free
  3982                           
  3983                           ;PIC18F27J53-killifish_light02.c: 189: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  3984  011386  0E00               	movlw	0
  3985  011388  B62A               	btfsc	_edit_flag,3,c
  3986  01138A  0E01               	movlw	1
  3987  01138C  0100               	movlb	0	; () banked
  3988  01138E  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3989  011390  5035               	movf	_caltime_now+4,w,c
  3990  011392  EC86  F092         	call	_tx_send_dec
  3991                           
  3992                           ;PIC18F27J53-killifish_light02.c: 190: tx_sends(" (");
  3993  011396  0EDC               	movlw	low STR_5
  3994  011398  6E21               	movwf	tx_sends@asciicode,c
  3995  01139A  0EFF               	movlw	high STR_5
  3996  01139C  6E22               	movwf	tx_sends@asciicode+1,c
  3997  01139E  ECFC  F091         	call	_tx_sends	;wreg free
  3998                           
  3999                           ;PIC18F27J53-killifish_light02.c: 191: tx_sends(weekday_3char[caltime_now.EE]);
  4000  0113A2  5034               	movf	_caltime_now+3,w,c
  4001  0113A4  0D04               	mullw	4
  4002  0113A6  0E2D               	movlw	low _weekday_3char
  4003  0113A8  24F3               	addwf	prodl,w,c
  4004  0113AA  6E21               	movwf	tx_sends@asciicode,c
  4005  0113AC  0EFE               	movlw	high _weekday_3char
  4006  0113AE  20F4               	addwfc	prodh,w,c
  4007  0113B0  6E22               	movwf	tx_sends@asciicode+1,c
  4008  0113B2  ECFC  F091         	call	_tx_sends	;wreg free
  4009                           
  4010                           ;PIC18F27J53-killifish_light02.c: 192: tx_sends(") ");
  4011  0113B6  0ED9               	movlw	low STR_6
  4012  0113B8  6E21               	movwf	tx_sends@asciicode,c
  4013  0113BA  0EFF               	movlw	high STR_6
  4014  0113BC  6E22               	movwf	tx_sends@asciicode+1,c
  4015  0113BE  ECFC  F091         	call	_tx_sends	;wreg free
  4016                           
  4017                           ;PIC18F27J53-killifish_light02.c: 193: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  4018  0113C2  0E00               	movlw	0
  4019  0113C4  B42A               	btfsc	_edit_flag,2,c
  4020  0113C6  0E01               	movlw	1
  4021  0113C8  0100               	movlb	0	; () banked
  4022  0113CA  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4023  0113CC  5033               	movf	_caltime_now+2,w,c
  4024  0113CE  EC86  F092         	call	_tx_send_dec
  4025                           
  4026                           ;PIC18F27J53-killifish_light02.c: 194: if (colon)tx_send(':');
  4027  0113D2  5028               	movf	_colon,w,c
  4028  0113D4  B4D8               	btfsc	status,2,c
  4029  0113D6  D004               	goto	l4575
  4030  0113D8  0E3A               	movlw	58
  4031  0113DA  EC28  F094         	call	_tx_send
  4032  0113DE  D003               	goto	l4577
  4033  0113E0                     l4575:
  4034                           
  4035                           ;PIC18F27J53-killifish_light02.c: 195: else tx_send(' ');
  4036  0113E0  0E20               	movlw	32
  4037  0113E2  EC28  F094         	call	_tx_send
  4038  0113E6                     l4577:
  4039                           
  4040                           ;PIC18F27J53-killifish_light02.c: 196: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  4041  0113E6  0E00               	movlw	0
  4042  0113E8  B22A               	btfsc	_edit_flag,1,c
  4043  0113EA  0E01               	movlw	1
  4044  0113EC  0100               	movlb	0	; () banked
  4045  0113EE  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4046  0113F0  5032               	movf	_caltime_now+1,w,c
  4047  0113F2  EC86  F092         	call	_tx_send_dec
  4048                           
  4049                           ;PIC18F27J53-killifish_light02.c: 197: tx_sends("-");
  4050  0113F6  0EE2               	movlw	low STR_7
  4051  0113F8  6E21               	movwf	tx_sends@asciicode,c
  4052  0113FA  0EFF               	movlw	high STR_7
  4053  0113FC  6E22               	movwf	tx_sends@asciicode+1,c
  4054  0113FE  ECFC  F091         	call	_tx_sends	;wreg free
  4055                           
  4056                           ;PIC18F27J53-killifish_light02.c: 198: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  4057  011402  0E00               	movlw	0
  4058  011404  B02A               	btfsc	_edit_flag,0,c
  4059  011406  0E01               	movlw	1
  4060  011408  0100               	movlb	0	; () banked
  4061  01140A  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4062  01140C  5031               	movf	_caltime_now,w,c
  4063  01140E  EC86  F092         	call	_tx_send_dec
  4064                           
  4065                           ;PIC18F27J53-killifish_light02.c: 199: tx_send('\n');
  4066  011412  0E0A               	movlw	10
  4067  011414  EC28  F094         	call	_tx_send
  4068                           
  4069                           ;PIC18F27J53-killifish_light02.c: 200: GIE = 1;
  4070  011418  8EF2               	bsf	intcon,7,c	;volatile
  4071  01141A  0012               	return		;funcret
  4072  01141C                     __end_of_print_time:
  4073                           	opt stack 0
  4074                           tblptru	equ	0xFF8
  4075                           tblptrh	equ	0xFF7
  4076                           tblptrl	equ	0xFF6
  4077                           tablat	equ	0xFF5
  4078                           prodh	equ	0xFF4
  4079                           prodl	equ	0xFF3
  4080                           intcon	equ	0xFF2
  4081                           postinc0	equ	0xFEE
  4082                           wreg	equ	0xFE8
  4083                           postinc1	equ	0xFE6
  4084                           postdec1	equ	0xFE5
  4085                           fsr1h	equ	0xFE2
  4086                           fsr1l	equ	0xFE1
  4087                           indf2	equ	0xFDF
  4088                           postinc2	equ	0xFDE
  4089                           postdec2	equ	0xFDD
  4090                           fsr2h	equ	0xFDA
  4091                           fsr2l	equ	0xFD9
  4092                           status	equ	0xFD8
  4093                           
  4094 ;; *************** function _tx_send_dec *****************
  4095 ;; Defined at:
  4096 ;;		line 173 in file "PIC18F27J53-killifish_light02.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  dec             1    wreg     unsigned char 
  4099 ;;  edit            1   21[BANK0 ] unsigned char 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  dec             1   32[BANK0 ] unsigned char 
  4102 ;;  str            10   22[BANK0 ] unsigned char [10]
  4103 ;; Return value:  Size  Location     Type
  4104 ;;		None               void
  4105 ;; Registers used:
  4106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4112 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4113 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;Total ram usage:       12 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    7
  4119 ;; This function calls:
  4120 ;;		_my_utoa
  4121 ;;		_tx_sends
  4122 ;; This function is called by:
  4123 ;;		_print_time
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text11
  4128  01250C                     __ptext11:
  4129                           	opt stack 0
  4130  01250C                     _tx_send_dec:
  4131                           	opt stack 20
  4132                           
  4133                           ;incstack = 0
  4134                           ;tx_send_dec@dec stored from wreg
  4135  01250C  0100               	movlb	0	; () banked
  4136  01250E  6F80               	movwf	tx_send_dec@dec& (0+255),b
  4137                           
  4138                           ;PIC18F27J53-killifish_light02.c: 174: uint8_t str[10];
  4139                           ;PIC18F27J53-killifish_light02.c: 175: my_utoa(&str, dec, 2);
  4140  012510  0E76               	movlw	low tx_send_dec@str
  4141  012512  0100               	movlb	0	; () banked
  4142  012514  6F6D               	movwf	my_utoa@str& (0+255),b
  4143  012516  0E00               	movlw	high tx_send_dec@str
  4144  012518  0100               	movlb	0	; () banked
  4145  01251A  6F6E               	movwf	(my_utoa@str+1)& (0+255),b
  4146  01251C  C080  F06F         	movff	tx_send_dec@dec,my_utoa@value
  4147  012520  0100               	movlb	0	; () banked
  4148  012522  6B70               	clrf	(my_utoa@value+1)& (0+255),b
  4149  012524  0E02               	movlw	2
  4150  012526  0100               	movlb	0	; () banked
  4151  012528  6F71               	movwf	my_utoa@digits& (0+255),b
  4152  01252A  EC1B  F090         	call	_my_utoa	;wreg free
  4153                           
  4154                           ;PIC18F27J53-killifish_light02.c: 176: if (edit && RTCCFGbits.HALFSEC)tx_sends("  ");
  4155  01252E  0100               	movlb	0	; () banked
  4156  012530  5175               	movf	tx_send_dec@edit& (0+255),w,b
  4157  012532  0100               	movlb	0	; () banked
  4158  012534  B4D8               	btfsc	status,2,c
  4159  012536  D00A               	goto	l4539
  4160                           
  4161                           ; BSR set to: 0
  4162  012538  010F               	movlb	15	; () banked
  4163  01253A  A73F               	btfss	63,3,b	;volatile
  4164  01253C  D007               	goto	l4539
  4165                           
  4166                           ; BSR set to: 15
  4167  01253E  0EB4               	movlw	low (STR_2+2)
  4168  012540  6E21               	movwf	tx_sends@asciicode,c
  4169  012542  0EFF               	movlw	high (STR_2+2)
  4170  012544  6E22               	movwf	tx_sends@asciicode+1,c
  4171  012546  ECFC  F091         	call	_tx_sends	;wreg free
  4172  01254A  0012               	return	
  4173  01254C                     l4539:
  4174                           
  4175                           ;PIC18F27J53-killifish_light02.c: 177: else tx_sends(str);
  4176  01254C  0E76               	movlw	low tx_send_dec@str
  4177  01254E  6E21               	movwf	tx_sends@asciicode,c
  4178  012550  0E00               	movlw	high tx_send_dec@str
  4179  012552  6E22               	movwf	tx_sends@asciicode+1,c
  4180  012554  ECFC  F091         	call	_tx_sends	;wreg free
  4181  012558  0012               	return	
  4182  01255A                     __end_of_tx_send_dec:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           postinc1	equ	0xFE6
  4194                           postdec1	equ	0xFE5
  4195                           fsr1h	equ	0xFE2
  4196                           fsr1l	equ	0xFE1
  4197                           indf2	equ	0xFDF
  4198                           postinc2	equ	0xFDE
  4199                           postdec2	equ	0xFDD
  4200                           fsr2h	equ	0xFDA
  4201                           fsr2l	equ	0xFD9
  4202                           status	equ	0xFD8
  4203                           
  4204 ;; *************** function _tx_sends *****************
  4205 ;; Defined at:
  4206 ;;		line 227 in file "../My_header\My_header.h"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  asciicode       2   32[COMRAM] PTR const unsigned char 
  4209 ;;		 -> STR_40(4), STR_39(4), STR_38(2), STR_11(315), 
  4210 ;;		 -> STR_8(8), STR_7(2), STR_6(3), weekday_3char(28), 
  4211 ;;		 -> STR_5(3), STR_4(2), STR_3(2), STR_2(5), 
  4212 ;;		 -> STR_1(3), tx_send_dec@str(10), 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;		None               void
  4217 ;; Registers used:
  4218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;Total ram usage:        2 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    6
  4231 ;; This function calls:
  4232 ;;		_ringbuf_put
  4233 ;; This function is called by:
  4234 ;;		_tx_send_dec
  4235 ;;		_print_time
  4236 ;;		_comm_at
  4237 ;;		_command_operation
  4238 ;;		_rx_loop
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text12
  4243  0123F8                     __ptext12:
  4244                           	opt stack 0
  4245  0123F8                     _tx_sends:
  4246                           	opt stack 23
  4247                           
  4248                           ;My_header\My_header.h: 228: while (*asciicode) {
  4249                           
  4250                           ;incstack = 0
  4251  0123F8  D01D               	goto	l4377
  4252  0123FA                     l4373:
  4253                           
  4254                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  4255  0123FA  0ED7               	movlw	low _tx_buf
  4256  0123FC  0100               	movlb	0	; () banked
  4257  0123FE  6F66               	movwf	ringbuf_put@rb& (0+255),b
  4258  012400  0E01               	movlw	high _tx_buf
  4259  012402  0100               	movlb	0	; () banked
  4260  012404  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4261  012406  C021  FFF6         	movff	tx_sends@asciicode,tblptrl
  4262  01240A  C022  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  4263  01240E  0E00               	movlw	low (__mediumconst shr (0+16))
  4264  012410  6EF8               	movwf	tblptru,c
  4265  012412  0E0E               	movlw	(high __ramtop+-1)
  4266  012414  64F7               	cpfsgt	tblptrh,c
  4267  012416  D003               	bra	u4597
  4268  012418  0008               	tblrd		*
  4269  01241A  50F5               	movf	tablat,w,c
  4270  01241C  D005               	bra	u4590
  4271  01241E                     u4597:
  4272  01241E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4273  012422  CFF7 FFE2          	movff	tblptrh,fsr1h
  4274  012426  50E7               	movf	indf1,w,c
  4275  012428                     u4590:
  4276  012428  0100               	movlb	0	; () banked
  4277  01242A  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  4278  01242C  ECE4  F08A         	call	_ringbuf_put	;wreg free
  4279  012430  4A21               	infsnz	tx_sends@asciicode,f,c
  4280  012432  2A22               	incf	tx_sends@asciicode+1,f,c
  4281  012434                     l4377:
  4282  012434  C021  FFF6         	movff	tx_sends@asciicode,tblptrl
  4283  012438  C022  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  4284  01243C  0E00               	movlw	low (__mediumconst shr (0+16))
  4285  01243E  6EF8               	movwf	tblptru,c
  4286  012440  0E0E               	movlw	(high __ramtop+-1)
  4287  012442  64F7               	cpfsgt	tblptrh,c
  4288  012444  D003               	bra	u4607
  4289  012446  0008               	tblrd		*
  4290  012448  50F5               	movf	tablat,w,c
  4291  01244A  D005               	bra	u4600
  4292  01244C                     u4607:
  4293  01244C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4294  012450  CFF7 FFE2          	movff	tblptrh,fsr1h
  4295  012454  50E7               	movf	indf1,w,c
  4296  012456                     u4600:
  4297  012456  0900               	iorlw	0
  4298  012458  A4D8               	btfss	status,2,c
  4299  01245A  D7CF               	goto	l4373
  4300                           
  4301                           ;My_header\My_header.h: 230: }
  4302                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  4303  01245C  889D               	bsf	3997,4,c	;volatile
  4304  01245E  0012               	return		;funcret
  4305  012460                     __end_of_tx_sends:
  4306                           	opt stack 0
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           prodh	equ	0xFF4
  4312                           prodl	equ	0xFF3
  4313                           intcon	equ	0xFF2
  4314                           postinc0	equ	0xFEE
  4315                           wreg	equ	0xFE8
  4316                           indf1	equ	0xFE7
  4317                           postinc1	equ	0xFE6
  4318                           postdec1	equ	0xFE5
  4319                           fsr1h	equ	0xFE2
  4320                           fsr1l	equ	0xFE1
  4321                           indf2	equ	0xFDF
  4322                           postinc2	equ	0xFDE
  4323                           postdec2	equ	0xFDD
  4324                           fsr2h	equ	0xFDA
  4325                           fsr2l	equ	0xFD9
  4326                           status	equ	0xFD8
  4327                           
  4328 ;; *************** function _my_utoa *****************
  4329 ;; Defined at:
  4330 ;;		line 11 in file "../My_header\My_stdlib.h"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  str             2   13[BANK0 ] PTR unsigned char 
  4333 ;;		 -> tx_send_dec@str(10), 
  4334 ;;  value           2   15[BANK0 ] unsigned int 
  4335 ;;  digits          1   17[BANK0 ] unsigned char 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  v               2   19[BANK0 ] unsigned int 
  4338 ;;  d               1   18[BANK0 ] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;		None               void
  4341 ;; Registers used:
  4342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4348 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4349 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4351 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4352 ;;Total ram usage:        8 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    5
  4355 ;; This function calls:
  4356 ;;		___lwdiv
  4357 ;;		___lwmod
  4358 ;; This function is called by:
  4359 ;;		_tx_send_dec
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text13
  4364  012036                     __ptext13:
  4365                           	opt stack 0
  4366  012036                     _my_utoa:
  4367                           	opt stack 21
  4368                           
  4369                           ;My_header\My_stdlib.h: 12: uint16_t v;
  4370                           ;My_header\My_stdlib.h: 13: uint8_t d;
  4371                           ;My_header\My_stdlib.h: 14: while (digits--) {
  4372                           
  4373                           ;incstack = 0
  4374  012036  D035               	goto	l4439
  4375  012038                     l459:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;My_header\My_stdlib.h: 15: v = value;
  4379  012038  C06F  F073         	movff	my_utoa@value,my_utoa@v
  4380  01203C  C070  F074         	movff	my_utoa@value+1,my_utoa@v+1
  4381                           
  4382                           ;My_header\My_stdlib.h: 16: d = digits;
  4383  012040  C071  F072         	movff	my_utoa@digits,my_utoa@d
  4384                           
  4385                           ;My_header\My_stdlib.h: 17: while (d--) {
  4386  012044  D00F               	goto	l4431
  4387  012046                     l4429:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;My_header\My_stdlib.h: 18: v /= 10;
  4391  012046  C073  F066         	movff	my_utoa@v,___lwdiv@dividend
  4392  01204A  C074  F067         	movff	my_utoa@v+1,___lwdiv@dividend+1
  4393  01204E  0E00               	movlw	0
  4394  012050  0100               	movlb	0	; () banked
  4395  012052  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4396  012054  0E0A               	movlw	10
  4397  012056  6F68               	movwf	___lwdiv@divisor& (0+255),b
  4398  012058  ECDE  F090         	call	___lwdiv	;wreg free
  4399  01205C  C066  F073         	movff	?___lwdiv,my_utoa@v
  4400  012060  C067  F074         	movff	?___lwdiv+1,my_utoa@v+1
  4401  012064                     l4431:
  4402  012064  0100               	movlb	0	; () banked
  4403  012066  0772               	decf	my_utoa@d& (0+255),f,b
  4404  012068  0100               	movlb	0	; () banked
  4405  01206A  2972               	incf	my_utoa@d& (0+255),w,b
  4406  01206C  A4D8               	btfss	status,2,c
  4407  01206E  D7EB               	goto	l4429
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;My_header\My_stdlib.h: 19: }
  4411                           ;My_header\My_stdlib.h: 20: v %= 10;
  4412                           
  4413                           ; BSR set to: 0
  4414  012070  C073  F01F         	movff	my_utoa@v,___lwmod@dividend
  4415  012074  C074  F020         	movff	my_utoa@v+1,___lwmod@dividend+1
  4416  012078  0E00               	movlw	0
  4417  01207A  6E22               	movwf	___lwmod@divisor+1,c
  4418  01207C  0E0A               	movlw	10
  4419  01207E  6E21               	movwf	___lwmod@divisor,c
  4420  012080  ECD2  F092         	call	___lwmod	;wreg free
  4421  012084  C01F  F073         	movff	?___lwmod,my_utoa@v
  4422  012088  C020  F074         	movff	?___lwmod+1,my_utoa@v+1
  4423                           
  4424                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
  4425  01208C  0100               	movlb	0	; () banked
  4426  01208E  5173               	movf	my_utoa@v& (0+255),w,b
  4427  012090  0F30               	addlw	48
  4428  012092  C06D  FFD9         	movff	my_utoa@str,fsr2l
  4429  012096  C06E  FFDA         	movff	my_utoa@str+1,fsr2h
  4430  01209A  6EDF               	movwf	indf2,c
  4431                           
  4432                           ; BSR set to: 0
  4433  01209C  0100               	movlb	0	; () banked
  4434  01209E  4B6D               	infsnz	my_utoa@str& (0+255),f,b
  4435  0120A0  2B6E               	incf	(my_utoa@str+1)& (0+255),f,b
  4436  0120A2                     l4439:
  4437  0120A2  0100               	movlb	0	; () banked
  4438  0120A4  0771               	decf	my_utoa@digits& (0+255),f,b
  4439  0120A6  0100               	movlb	0	; () banked
  4440  0120A8  2971               	incf	my_utoa@digits& (0+255),w,b
  4441  0120AA  A4D8               	btfss	status,2,c
  4442  0120AC  D7C5               	goto	l459
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;My_header\My_stdlib.h: 22: }
  4446                           ;My_header\My_stdlib.h: 23: *str = '\0';
  4447                           
  4448                           ; BSR set to: 0
  4449  0120AE  C06D  FFD9         	movff	my_utoa@str,fsr2l
  4450  0120B2  C06E  FFDA         	movff	my_utoa@str+1,fsr2h
  4451  0120B6  0E00               	movlw	0
  4452  0120B8  6EDF               	movwf	indf2,c
  4453                           
  4454                           ; BSR set to: 0
  4455  0120BA  0012               	return		;funcret
  4456  0120BC                     __end_of_my_utoa:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           intcon	equ	0xFF2
  4465                           postinc0	equ	0xFEE
  4466                           wreg	equ	0xFE8
  4467                           indf1	equ	0xFE7
  4468                           postinc1	equ	0xFE6
  4469                           postdec1	equ	0xFE5
  4470                           fsr1h	equ	0xFE2
  4471                           fsr1l	equ	0xFE1
  4472                           indf2	equ	0xFDF
  4473                           postinc2	equ	0xFDE
  4474                           postdec2	equ	0xFDD
  4475                           fsr2h	equ	0xFDA
  4476                           fsr2l	equ	0xFD9
  4477                           status	equ	0xFD8
  4478                           
  4479 ;; *************** function ___lwmod *****************
  4480 ;; Defined at:
  4481 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  dividend        2   30[COMRAM] unsigned int 
  4484 ;;  divisor         2   32[COMRAM] unsigned int 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  counter         1    0[BANK0 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  2   30[COMRAM] unsigned int 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4499 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4500 ;;Total ram usage:        5 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    4
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_tx_sendn
  4507 ;;		_my_utoa
  4508 ;;		_ringbuf_put_num
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text14
  4513  0125A4                     __ptext14:
  4514                           	opt stack 0
  4515  0125A4                     ___lwmod:
  4516                           	opt stack 24
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;incstack = 0
  4520  0125A4  5021               	movf	___lwmod@divisor,w,c
  4521  0125A6  1022               	iorwf	___lwmod@divisor+1,w,c
  4522  0125A8  B4D8               	btfsc	status,2,c
  4523  0125AA  D01B               	goto	l1076
  4524  0125AC  0E01               	movlw	1
  4525  0125AE  0100               	movlb	0	; () banked
  4526  0125B0  6F60               	movwf	___lwmod@counter& (0+255),b
  4527  0125B2  D005               	goto	l4361
  4528  0125B4                     l4359:
  4529                           
  4530                           ; BSR set to: 0
  4531  0125B4  90D8               	bcf	status,0,c
  4532  0125B6  3621               	rlcf	___lwmod@divisor,f,c
  4533  0125B8  3622               	rlcf	___lwmod@divisor+1,f,c
  4534  0125BA  0100               	movlb	0	; () banked
  4535  0125BC  2B60               	incf	___lwmod@counter& (0+255),f,b
  4536  0125BE                     l4361:
  4537                           
  4538                           ; BSR set to: 0
  4539  0125BE  AE22               	btfss	___lwmod@divisor+1,7,c
  4540  0125C0  D7F9               	goto	l4359
  4541  0125C2                     l4363:
  4542                           
  4543                           ; BSR set to: 0
  4544  0125C2  5021               	movf	___lwmod@divisor,w,c
  4545  0125C4  5C1F               	subwf	___lwmod@dividend,w,c
  4546  0125C6  5022               	movf	___lwmod@divisor+1,w,c
  4547  0125C8  5820               	subwfb	___lwmod@dividend+1,w,c
  4548  0125CA  A0D8               	btfss	status,0,c
  4549  0125CC  D004               	goto	l4367
  4550                           
  4551                           ; BSR set to: 0
  4552  0125CE  5021               	movf	___lwmod@divisor,w,c
  4553  0125D0  5E1F               	subwf	___lwmod@dividend,f,c
  4554  0125D2  5022               	movf	___lwmod@divisor+1,w,c
  4555  0125D4  5A20               	subwfb	___lwmod@dividend+1,f,c
  4556  0125D6                     l4367:
  4557                           
  4558                           ; BSR set to: 0
  4559  0125D6  90D8               	bcf	status,0,c
  4560  0125D8  3222               	rrcf	___lwmod@divisor+1,f,c
  4561  0125DA  3221               	rrcf	___lwmod@divisor,f,c
  4562                           
  4563                           ; BSR set to: 0
  4564  0125DC  0100               	movlb	0	; () banked
  4565  0125DE  2F60               	decfsz	___lwmod@counter& (0+255),f,b
  4566  0125E0  D7F0               	goto	l4363
  4567  0125E2                     l1076:
  4568  0125E2  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
  4569  0125E6  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
  4570  0125EA  0012               	return		;funcret
  4571  0125EC                     __end_of___lwmod:
  4572                           	opt stack 0
  4573                           tblptru	equ	0xFF8
  4574                           tblptrh	equ	0xFF7
  4575                           tblptrl	equ	0xFF6
  4576                           tablat	equ	0xFF5
  4577                           prodh	equ	0xFF4
  4578                           prodl	equ	0xFF3
  4579                           intcon	equ	0xFF2
  4580                           postinc0	equ	0xFEE
  4581                           wreg	equ	0xFE8
  4582                           indf1	equ	0xFE7
  4583                           postinc1	equ	0xFE6
  4584                           postdec1	equ	0xFE5
  4585                           fsr1h	equ	0xFE2
  4586                           fsr1l	equ	0xFE1
  4587                           indf2	equ	0xFDF
  4588                           postinc2	equ	0xFDE
  4589                           postdec2	equ	0xFDD
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _tx_send *****************
  4595 ;; Defined at:
  4596 ;;		line 222 in file "../My_header\My_header.h"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  asciicode       1    wreg     const unsigned char 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  asciicode       1   32[COMRAM] const unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;		None               void
  4603 ;; Registers used:
  4604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4614 ;;Total ram usage:        1 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    6
  4617 ;; This function calls:
  4618 ;;		_ringbuf_put
  4619 ;; This function is called by:
  4620 ;;		_tx_sendn
  4621 ;;		_print_time
  4622 ;;		_rx_loop
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text15
  4627  012850                     __ptext15:
  4628                           	opt stack 0
  4629  012850                     _tx_send:
  4630                           	opt stack 22
  4631                           
  4632                           ;incstack = 0
  4633                           ;tx_send@asciicode stored from wreg
  4634  012850  6E21               	movwf	tx_send@asciicode,c
  4635                           
  4636                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  4637  012852  0ED7               	movlw	low _tx_buf
  4638  012854  0100               	movlb	0	; () banked
  4639  012856  6F66               	movwf	ringbuf_put@rb& (0+255),b
  4640  012858  0E01               	movlw	high _tx_buf
  4641  01285A  0100               	movlb	0	; () banked
  4642  01285C  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4643  01285E  C021  F068         	movff	tx_send@asciicode,ringbuf_put@asciicode
  4644  012862  ECE4  F08A         	call	_ringbuf_put	;wreg free
  4645                           
  4646                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  4647  012866  889D               	bsf	3997,4,c	;volatile
  4648  012868  0012               	return		;funcret
  4649  01286A                     __end_of_tx_send:
  4650                           	opt stack 0
  4651                           tblptru	equ	0xFF8
  4652                           tblptrh	equ	0xFF7
  4653                           tblptrl	equ	0xFF6
  4654                           tablat	equ	0xFF5
  4655                           prodh	equ	0xFF4
  4656                           prodl	equ	0xFF3
  4657                           intcon	equ	0xFF2
  4658                           postinc0	equ	0xFEE
  4659                           wreg	equ	0xFE8
  4660                           indf1	equ	0xFE7
  4661                           postinc1	equ	0xFE6
  4662                           postdec1	equ	0xFE5
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           indf2	equ	0xFDF
  4666                           postinc2	equ	0xFDE
  4667                           postdec2	equ	0xFDD
  4668                           fsr2h	equ	0xFDA
  4669                           fsr2l	equ	0xFD9
  4670                           status	equ	0xFD8
  4671                           
  4672 ;; *************** function _ringbuf_put *****************
  4673 ;; Defined at:
  4674 ;;		line 39 in file "../My_header\My_ringbuf.h"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  rb              2    6[BANK0 ] PTR struct ringbuf
  4677 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  4678 ;;  asciicode       1    8[BANK0 ] unsigned char 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;		None               void
  4683 ;; Registers used:
  4684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4690 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4693 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4694 ;;Total ram usage:        7 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    5
  4697 ;; This function calls:
  4698 ;;		_ringbuf_num
  4699 ;; This function is called by:
  4700 ;;		_tx_send
  4701 ;;		_tx_sends
  4702 ;;		_rx_loop
  4703 ;;		_ringbuf_put_num
  4704 ;;		_ringbuf_put_str
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text16
  4709  0115C8                     __ptext16:
  4710                           	opt stack 0
  4711  0115C8                     _ringbuf_put:
  4712                           	opt stack 23
  4713                           
  4714                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  4715                           
  4716                           ;incstack = 0
  4717  0115C8  C066  F01F         	movff	ringbuf_put@rb,ringbuf_num@rb
  4718  0115CC  C067  F020         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  4719  0115D0  EC0E  F08A         	call	_ringbuf_num	;wreg free
  4720  0115D4  0100               	movlb	0	; () banked
  4721  0115D6  EE20 F002          	lfsr	2,2
  4722  0115DA  5166               	movf	ringbuf_put@rb& (0+255),w,b
  4723  0115DC  26D9               	addwf	fsr2l,f,c
  4724  0115DE  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4725  0115E0  22DA               	addwfc	fsr2h,f,c
  4726  0115E2  50DE               	movf	postinc2,w,c
  4727  0115E4  5C1F               	subwf	?_ringbuf_num,w,c
  4728  0115E6  50DE               	movf	postinc2,w,c
  4729  0115E8  5820               	subwfb	?_ringbuf_num+1,w,c
  4730  0115EA  B0D8               	btfsc	status,0,c
  4731  0115EC  0012               	return	
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  4735  0115EE  0100               	movlb	0	; () banked
  4736  0115F0  EE20 F004          	lfsr	2,4
  4737  0115F4  5166               	movf	ringbuf_put@rb& (0+255),w,b
  4738  0115F6  26D9               	addwf	fsr2l,f,c
  4739  0115F8  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4740  0115FA  22DA               	addwfc	fsr2h,f,c
  4741  0115FC  CFDE F069          	movff	postinc2,??_ringbuf_put
  4742  011600  CFDD F06A          	movff	postdec2,??_ringbuf_put+1
  4743  011604  C066  FFD9         	movff	ringbuf_put@rb,fsr2l
  4744  011608  C067  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  4745  01160C  CFDE F06B          	movff	postinc2,??_ringbuf_put+2
  4746  011610  CFDD F06C          	movff	postdec2,??_ringbuf_put+3
  4747  011614  0100               	movlb	0	; () banked
  4748  011616  5169               	movf	??_ringbuf_put& (0+255),w,b
  4749  011618  0100               	movlb	0	; () banked
  4750  01161A  256B               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  4751  01161C  6ED9               	movwf	fsr2l,c
  4752  01161E  0100               	movlb	0	; () banked
  4753  011620  516A               	movf	(??_ringbuf_put+1)& (0+255),w,b
  4754  011622  0100               	movlb	0	; () banked
  4755  011624  216C               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  4756  011626  6EDA               	movwf	fsr2h,c
  4757  011628  C068  FFDF         	movff	ringbuf_put@asciicode,indf2
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  4761  01162C  0100               	movlb	0	; () banked
  4762  01162E  EE20 F002          	lfsr	2,2
  4763  011632  5166               	movf	ringbuf_put@rb& (0+255),w,b
  4764  011634  26D9               	addwf	fsr2l,f,c
  4765  011636  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4766  011638  22DA               	addwfc	fsr2h,f,c
  4767  01163A  0100               	movlb	0	; () banked
  4768  01163C  EE10 F004          	lfsr	1,4
  4769  011640  5166               	movf	ringbuf_put@rb& (0+255),w,b
  4770  011642  26E1               	addwf	fsr1l,f,c
  4771  011644  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4772  011646  22E2               	addwfc	fsr1h,f,c
  4773  011648  CFE6 F06B          	movff	postinc1,??_ringbuf_put+2
  4774  01164C  CFE5 F06C          	movff	postdec1,??_ringbuf_put+3
  4775  011650  0E01               	movlw	1
  4776  011652  0100               	movlb	0	; () banked
  4777  011654  276B               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  4778  011656  0E00               	movlw	0
  4779  011658  236C               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  4780  01165A  50DE               	movf	postinc2,w,c
  4781  01165C  0100               	movlb	0	; () banked
  4782  01165E  5D6B               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  4783  011660  50DE               	movf	postinc2,w,c
  4784  011662  0100               	movlb	0	; () banked
  4785  011664  596C               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  4786  011666  B0D8               	btfsc	status,0,c
  4787  011668  D00B               	goto	l4239
  4788                           
  4789                           ; BSR set to: 0
  4790  01166A  0100               	movlb	0	; () banked
  4791  01166C  EE20 F004          	lfsr	2,4
  4792  011670  5166               	movf	ringbuf_put@rb& (0+255),w,b
  4793  011672  26D9               	addwf	fsr2l,f,c
  4794  011674  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4795  011676  22DA               	addwfc	fsr2h,f,c
  4796  011678  2ADE               	incf	postinc2,f,c
  4797  01167A  0E00               	movlw	0
  4798  01167C  22DD               	addwfc	postdec2,f,c
  4799  01167E  0012               	return	
  4800  011680                     l4239:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  4804  011680  0100               	movlb	0	; () banked
  4805  011682  EE20 F004          	lfsr	2,4
  4806  011686  5166               	movf	ringbuf_put@rb& (0+255),w,b
  4807  011688  26D9               	addwf	fsr2l,f,c
  4808  01168A  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4809  01168C  22DA               	addwfc	fsr2h,f,c
  4810  01168E  0E00               	movlw	0
  4811  011690  6EDE               	movwf	postinc2,c
  4812  011692  0E00               	movlw	0
  4813  011694  6EDD               	movwf	postdec2,c
  4814                           
  4815                           ; BSR set to: 0
  4816  011696  0012               	return	
  4817  011698                     __end_of_ringbuf_put:
  4818                           	opt stack 0
  4819                           tblptru	equ	0xFF8
  4820                           tblptrh	equ	0xFF7
  4821                           tblptrl	equ	0xFF6
  4822                           tablat	equ	0xFF5
  4823                           prodh	equ	0xFF4
  4824                           prodl	equ	0xFF3
  4825                           intcon	equ	0xFF2
  4826                           postinc0	equ	0xFEE
  4827                           wreg	equ	0xFE8
  4828                           indf1	equ	0xFE7
  4829                           postinc1	equ	0xFE6
  4830                           postdec1	equ	0xFE5
  4831                           fsr1h	equ	0xFE2
  4832                           fsr1l	equ	0xFE1
  4833                           indf2	equ	0xFDF
  4834                           postinc2	equ	0xFDE
  4835                           postdec2	equ	0xFDD
  4836                           fsr2h	equ	0xFDA
  4837                           fsr2l	equ	0xFD9
  4838                           status	equ	0xFD8
  4839                           
  4840 ;; *************** function _ringbuf_num *****************
  4841 ;; Defined at:
  4842 ;;		line 31 in file "../My_header\My_ringbuf.h"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  4845 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  2   30[COMRAM] unsigned int 
  4850 ;; Registers used:
  4851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4859 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4861 ;;Total ram usage:        8 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    4
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_ringbuf_put
  4868 ;;		_ringbuf_pop
  4869 ;;		_ringbuf_backspace
  4870 ;;		_rx_loop
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text17
  4875  01141C                     __ptext17:
  4876                           	opt stack 0
  4877  01141C                     _ringbuf_num:
  4878                           	opt stack 23
  4879                           
  4880                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;incstack = 0
  4884  01141C  EE20 F006          	lfsr	2,6
  4885  011420  501F               	movf	ringbuf_num@rb,w,c
  4886  011422  26D9               	addwf	fsr2l,f,c
  4887  011424  5020               	movf	ringbuf_num@rb+1,w,c
  4888  011426  22DA               	addwfc	fsr2h,f,c
  4889  011428  EE10 F004          	lfsr	1,4
  4890  01142C  501F               	movf	ringbuf_num@rb,w,c
  4891  01142E  26E1               	addwf	fsr1l,f,c
  4892  011430  5020               	movf	ringbuf_num@rb+1,w,c
  4893  011432  22E2               	addwfc	fsr1h,f,c
  4894  011434  50DE               	movf	postinc2,w,c
  4895  011436  5CE6               	subwf	postinc1,w,c
  4896  011438  50DE               	movf	postinc2,w,c
  4897  01143A  58E6               	subwfb	postinc1,w,c
  4898  01143C  A0D8               	btfss	status,0,c
  4899  01143E  D024               	goto	l4191
  4900                           
  4901                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  4902  011440  EE20 F004          	lfsr	2,4
  4903  011444  501F               	movf	ringbuf_num@rb,w,c
  4904  011446  26D9               	addwf	fsr2l,f,c
  4905  011448  5020               	movf	ringbuf_num@rb+1,w,c
  4906  01144A  22DA               	addwfc	fsr2h,f,c
  4907  01144C  CFDE F060          	movff	postinc2,??_ringbuf_num
  4908  011450  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  4909  011454  EE20 F006          	lfsr	2,6
  4910  011458  501F               	movf	ringbuf_num@rb,w,c
  4911  01145A  26D9               	addwf	fsr2l,f,c
  4912  01145C  5020               	movf	ringbuf_num@rb+1,w,c
  4913  01145E  22DA               	addwfc	fsr2h,f,c
  4914  011460  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  4915  011464  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  4916  011468  0100               	movlb	0	; () banked
  4917  01146A  1F62               	comf	(??_ringbuf_num+2)& (0+255),f,b
  4918  01146C  1F63               	comf	(??_ringbuf_num+3)& (0+255),f,b
  4919  01146E  4B62               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  4920  011470  2B63               	incf	(??_ringbuf_num+3)& (0+255),f,b
  4921  011472  0100               	movlb	0	; () banked
  4922  011474  5160               	movf	??_ringbuf_num& (0+255),w,b
  4923  011476  0100               	movlb	0	; () banked
  4924  011478  2562               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  4925  01147A  6E1F               	movwf	?_ringbuf_num,c
  4926  01147C  0100               	movlb	0	; () banked
  4927  01147E  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  4928  011480  0100               	movlb	0	; () banked
  4929  011482  2163               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  4930  011484  6E20               	movwf	?_ringbuf_num+1,c
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;My_header\My_ringbuf.h: 34: } else {
  4934                           
  4935                           ; BSR set to: 0
  4936  011486  0012               	return	
  4937  011488                     l4191:
  4938                           
  4939                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  4940  011488  EE20 F004          	lfsr	2,4
  4941  01148C  501F               	movf	ringbuf_num@rb,w,c
  4942  01148E  26D9               	addwf	fsr2l,f,c
  4943  011490  5020               	movf	ringbuf_num@rb+1,w,c
  4944  011492  22DA               	addwfc	fsr2h,f,c
  4945  011494  CFDE F060          	movff	postinc2,??_ringbuf_num
  4946  011498  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  4947  01149C  EE20 F002          	lfsr	2,2
  4948  0114A0  501F               	movf	ringbuf_num@rb,w,c
  4949  0114A2  26D9               	addwf	fsr2l,f,c
  4950  0114A4  5020               	movf	ringbuf_num@rb+1,w,c
  4951  0114A6  22DA               	addwfc	fsr2h,f,c
  4952  0114A8  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  4953  0114AC  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  4954  0114B0  EE20 F006          	lfsr	2,6
  4955  0114B4  501F               	movf	ringbuf_num@rb,w,c
  4956  0114B6  26D9               	addwf	fsr2l,f,c
  4957  0114B8  5020               	movf	ringbuf_num@rb+1,w,c
  4958  0114BA  22DA               	addwfc	fsr2h,f,c
  4959  0114BC  CFDE F064          	movff	postinc2,??_ringbuf_num+4
  4960  0114C0  CFDD F065          	movff	postdec2,??_ringbuf_num+5
  4961  0114C4  0100               	movlb	0	; () banked
  4962  0114C6  1F64               	comf	(??_ringbuf_num+4)& (0+255),f,b
  4963  0114C8  1F65               	comf	(??_ringbuf_num+5)& (0+255),f,b
  4964  0114CA  4B64               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  4965  0114CC  2B65               	incf	(??_ringbuf_num+5)& (0+255),f,b
  4966  0114CE  0100               	movlb	0	; () banked
  4967  0114D0  5162               	movf	(??_ringbuf_num+2)& (0+255),w,b
  4968  0114D2  0100               	movlb	0	; () banked
  4969  0114D4  2764               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  4970  0114D6  0100               	movlb	0	; () banked
  4971  0114D8  5163               	movf	(??_ringbuf_num+3)& (0+255),w,b
  4972  0114DA  0100               	movlb	0	; () banked
  4973  0114DC  2365               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  4974  0114DE  0100               	movlb	0	; () banked
  4975  0114E0  5160               	movf	??_ringbuf_num& (0+255),w,b
  4976  0114E2  0100               	movlb	0	; () banked
  4977  0114E4  2564               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  4978  0114E6  6E1F               	movwf	?_ringbuf_num,c
  4979  0114E8  0100               	movlb	0	; () banked
  4980  0114EA  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  4981  0114EC  0100               	movlb	0	; () banked
  4982  0114EE  2165               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  4983  0114F0  6E20               	movwf	?_ringbuf_num+1,c
  4984                           
  4985                           ; BSR set to: 0
  4986  0114F2  0012               	return	
  4987  0114F4                     __end_of_ringbuf_num:
  4988                           	opt stack 0
  4989                           tblptru	equ	0xFF8
  4990                           tblptrh	equ	0xFF7
  4991                           tblptrl	equ	0xFF6
  4992                           tablat	equ	0xFF5
  4993                           prodh	equ	0xFF4
  4994                           prodl	equ	0xFF3
  4995                           intcon	equ	0xFF2
  4996                           postinc0	equ	0xFEE
  4997                           wreg	equ	0xFE8
  4998                           indf1	equ	0xFE7
  4999                           postinc1	equ	0xFE6
  5000                           postdec1	equ	0xFE5
  5001                           fsr1h	equ	0xFE2
  5002                           fsr1l	equ	0xFE1
  5003                           indf2	equ	0xFDF
  5004                           postinc2	equ	0xFDE
  5005                           postdec2	equ	0xFDD
  5006                           fsr2h	equ	0xFDA
  5007                           fsr2l	equ	0xFD9
  5008                           status	equ	0xFD8
  5009                           
  5010 ;; *************** function _RTCC_from_caltime *****************
  5011 ;; Defined at:
  5012 ;;		line 236 in file "../My_header\My_RTCC.h"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  ct              2   57[BANK0 ] PTR struct .
  5015 ;;		 -> caltime_now(7), 
  5016 ;;  ep              2   59[BANK0 ] PTR unsigned long 
  5017 ;;		 -> epoch_now(4), 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;		None               void
  5022 ;; Registers used:
  5023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5029 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5032 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5033 ;;Total ram usage:        4 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    7
  5036 ;; This function calls:
  5037 ;;		_caltime_to_RTCC
  5038 ;;		_caltime_to_epoch
  5039 ;;		_epoch_to_caltime
  5040 ;; This function is called by:
  5041 ;;		_comm_at
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text18
  5046  012674                     __ptext18:
  5047                           	opt stack 0
  5048  012674                     _RTCC_from_caltime:
  5049                           	opt stack 20
  5050                           
  5051                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;incstack = 0
  5055  012674  C099  F074         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  5056  012678  C09A  F075         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  5057  01267C  C09B  F076         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  5058  012680  C09C  F077         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  5059  012684  EC6D  F085         	call	_caltime_to_epoch	;wreg free
  5060                           
  5061                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  5062  012688  C099  F089         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  5063  01268C  C09A  F08A         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  5064  012690  C09B  F08B         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  5065  012694  C09C  F08C         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  5066  012698  ECF2  F087         	call	_epoch_to_caltime	;wreg free
  5067                           
  5068                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  5069  01269C  C099  F065         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  5070  0126A0  C09A  F066         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  5071  0126A4  EC4C  F08B         	call	_caltime_to_RTCC	;wreg free
  5072  0126A8  0012               	return		;funcret
  5073  0126AA                     __end_of_RTCC_from_caltime:
  5074                           	opt stack 0
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           prodh	equ	0xFF4
  5080                           prodl	equ	0xFF3
  5081                           intcon	equ	0xFF2
  5082                           postinc0	equ	0xFEE
  5083                           wreg	equ	0xFE8
  5084                           indf1	equ	0xFE7
  5085                           postinc1	equ	0xFE6
  5086                           postdec1	equ	0xFE5
  5087                           fsr1h	equ	0xFE2
  5088                           fsr1l	equ	0xFE1
  5089                           indf2	equ	0xFDF
  5090                           postinc2	equ	0xFDE
  5091                           postdec2	equ	0xFDD
  5092                           fsr2h	equ	0xFDA
  5093                           fsr2l	equ	0xFD9
  5094                           status	equ	0xFD8
  5095                           
  5096 ;; *************** function _normal_loop *****************
  5097 ;; Defined at:
  5098 ;;		line 345 in file "PIC18F27J53-killifish_light02.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;		None
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  scan            2   43[BANK0 ] unsigned int 
  5103 ;;  i               1   48[BANK0 ] unsigned char 
  5104 ;;  i               1   47[BANK0 ] unsigned char 
  5105 ;;  temp            4   49[BANK0 ] unsigned long 
  5106 ;;  value           1   46[BANK0 ] unsigned char 
  5107 ;;  value           1   45[BANK0 ] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;		None               void
  5110 ;; Registers used:
  5111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5120 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5121 ;;Total ram usage:       14 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    8
  5124 ;; This function calls:
  5125 ;;		_ADC
  5126 ;;		_PWM_set
  5127 ;;		_RTCC_from_RTCC
  5128 ;;		___lldiv
  5129 ;;		___llmod
  5130 ;;		___lmul
  5131 ;;		___lwdiv
  5132 ;;		___wmul
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text19
  5139  0104E6                     __ptext19:
  5140                           	opt stack 0
  5141  0104E6                     _normal_loop:
  5142                           	opt stack 22
  5143                           
  5144                           ;PIC18F27J53-killifish_light02.c: 346: if (time_change_flag) {
  5145                           
  5146                           ;incstack = 0
  5147  0104E6  502E               	movf	_time_change_flag,w,c
  5148  0104E8  B4D8               	btfsc	status,2,c
  5149  0104EA  D0D6               	goto	l5135
  5150                           
  5151                           ;PIC18F27J53-killifish_light02.c: 347: time_change_flag = 0;
  5152  0104EC  0E00               	movlw	0
  5153  0104EE  6E2E               	movwf	_time_change_flag,c
  5154                           
  5155                           ;PIC18F27J53-killifish_light02.c: 348: RTCC_from_RTCC(&caltime_now, &epoch_now);
  5156  0104F0  0E31               	movlw	low _caltime_now
  5157  0104F2  0100               	movlb	0	; () banked
  5158  0104F4  6F83               	movwf	RTCC_from_RTCC@ct& (0+255),b
  5159  0104F6  0E00               	movlw	high _caltime_now
  5160  0104F8  0100               	movlb	0	; () banked
  5161  0104FA  6F84               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  5162  0104FC  0EB4               	movlw	low _epoch_now
  5163  0104FE  0100               	movlb	0	; () banked
  5164  010500  6F85               	movwf	RTCC_from_RTCC@ep& (0+255),b
  5165  010502  0E00               	movlw	high _epoch_now
  5166  010504  0100               	movlb	0	; () banked
  5167  010506  6F86               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  5168  010508  ECD7  F093         	call	_RTCC_from_RTCC	;wreg free
  5169                           
  5170                           ;PIC18F27J53-killifish_light02.c: 349: if (light_mode == TIME_SYNC_mode) {
  5171  01050C  0100               	movlb	0	; () banked
  5172  01050E  51B3               	movf	_light_mode& (0+255),w,b
  5173  010510  A4D8               	btfss	status,2,c
  5174  010512  D0C2               	goto	l5135
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;PIC18F27J53-killifish_light02.c: 350: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  5178  010514  C0B4  F060         	movff	_epoch_now,___llmod@dividend
  5179  010518  C0B5  F061         	movff	_epoch_now+1,___llmod@dividend+1
  5180  01051C  C0B6  F062         	movff	_epoch_now+2,___llmod@dividend+2
  5181  010520  C0B7  F063         	movff	_epoch_now+3,___llmod@dividend+3
  5182  010524  0E80               	movlw	128
  5183  010526  0100               	movlb	0	; () banked
  5184  010528  6F64               	movwf	___llmod@divisor& (0+255),b
  5185  01052A  0E51               	movlw	81
  5186  01052C  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  5187  01052E  0E01               	movlw	1
  5188  010530  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  5189  010532  0E00               	movlw	0
  5190  010534  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  5191  010536  ECD1  F08F         	call	___llmod	;wreg free
  5192  01053A  C060  F091         	movff	?___llmod,normal_loop@temp
  5193  01053E  C061  F092         	movff	?___llmod+1,normal_loop@temp+1
  5194  010542  C062  F093         	movff	?___llmod+2,normal_loop@temp+2
  5195  010546  C063  F094         	movff	?___llmod+3,normal_loop@temp+3
  5196                           
  5197                           ;PIC18F27J53-killifish_light02.c: 351: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  5198  01054A  0100               	movlb	0	; () banked
  5199  01054C  5194               	movf	(normal_loop@temp+3)& (0+255),w,b
  5200  01054E  0100               	movlb	0	; () banked
  5201  010550  1193               	iorwf	(normal_loop@temp+2)& (0+255),w,b
  5202  010552  E108               	bnz	u5660
  5203  010554  0EC1               	movlw	193
  5204  010556  0100               	movlb	0	; () banked
  5205  010558  5D91               	subwf	normal_loop@temp& (0+255),w,b
  5206  01055A  0EA8               	movlw	168
  5207  01055C  0100               	movlb	0	; () banked
  5208  01055E  5992               	subwfb	(normal_loop@temp+1)& (0+255),w,b
  5209  010560  A0D8               	btfss	status,0,c
  5210  010562  D026               	goto	l5121
  5211  010564                     u5660:
  5212                           
  5213                           ; BSR set to: 0
  5214  010564  C091  F087         	movff	normal_loop@temp,??_normal_loop
  5215  010568  C092  F088         	movff	normal_loop@temp+1,??_normal_loop+1
  5216  01056C  C093  F089         	movff	normal_loop@temp+2,??_normal_loop+2
  5217  010570  C094  F08A         	movff	normal_loop@temp+3,??_normal_loop+3
  5218  010574  0100               	movlb	0	; () banked
  5219  010576  1F87               	comf	??_normal_loop& (0+255),f,b
  5220  010578  1F88               	comf	(??_normal_loop+1)& (0+255),f,b
  5221  01057A  1F89               	comf	(??_normal_loop+2)& (0+255),f,b
  5222  01057C  1F8A               	comf	(??_normal_loop+3)& (0+255),f,b
  5223  01057E  2B87               	incf	??_normal_loop& (0+255),f,b
  5224  010580  0E00               	movlw	0
  5225  010582  2388               	addwfc	(??_normal_loop+1)& (0+255),f,b
  5226  010584  2389               	addwfc	(??_normal_loop+2)& (0+255),f,b
  5227  010586  238A               	addwfc	(??_normal_loop+3)& (0+255),f,b
  5228  010588  0E80               	movlw	128
  5229  01058A  0100               	movlb	0	; () banked
  5230  01058C  2587               	addwf	??_normal_loop& (0+255),w,b
  5231  01058E  0100               	movlb	0	; () banked
  5232  010590  6F91               	movwf	normal_loop@temp& (0+255),b
  5233  010592  0E51               	movlw	81
  5234  010594  0100               	movlb	0	; () banked
  5235  010596  2188               	addwfc	(??_normal_loop+1)& (0+255),w,b
  5236  010598  0100               	movlb	0	; () banked
  5237  01059A  6F92               	movwf	(normal_loop@temp+1)& (0+255),b
  5238  01059C  0E01               	movlw	1
  5239  01059E  0100               	movlb	0	; () banked
  5240  0105A0  2189               	addwfc	(??_normal_loop+2)& (0+255),w,b
  5241  0105A2  0100               	movlb	0	; () banked
  5242  0105A4  6F93               	movwf	(normal_loop@temp+2)& (0+255),b
  5243  0105A6  0E00               	movlw	0
  5244  0105A8  0100               	movlb	0	; () banked
  5245  0105AA  218A               	addwfc	(??_normal_loop+3)& (0+255),w,b
  5246  0105AC  0100               	movlb	0	; () banked
  5247  0105AE  6F94               	movwf	(normal_loop@temp+3)& (0+255),b
  5248  0105B0                     l5121:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;PIC18F27J53-killifish_light02.c: 352: temp = temp * 2 * 100 / ((epoch_t)60*60*24);
  5252  0105B0  90D8               	bcf	status,0,c
  5253  0105B2  0100               	movlb	0	; () banked
  5254  0105B4  3591               	rlcf	normal_loop@temp& (0+255),w,b
  5255  0105B6  0100               	movlb	0	; () banked
  5256  0105B8  6F68               	movwf	___lmul@multiplier& (0+255),b
  5257  0105BA  0100               	movlb	0	; () banked
  5258  0105BC  3592               	rlcf	(normal_loop@temp+1)& (0+255),w,b
  5259  0105BE  0100               	movlb	0	; () banked
  5260  0105C0  6F69               	movwf	(___lmul@multiplier+1)& (0+255),b
  5261  0105C2  0100               	movlb	0	; () banked
  5262  0105C4  3593               	rlcf	(normal_loop@temp+2)& (0+255),w,b
  5263  0105C6  0100               	movlb	0	; () banked
  5264  0105C8  6F6A               	movwf	(___lmul@multiplier+2)& (0+255),b
  5265  0105CA  0100               	movlb	0	; () banked
  5266  0105CC  3594               	rlcf	(normal_loop@temp+3)& (0+255),w,b
  5267  0105CE  0100               	movlb	0	; () banked
  5268  0105D0  6F6B               	movwf	(___lmul@multiplier+3)& (0+255),b
  5269  0105D2  0E64               	movlw	100
  5270  0105D4  0100               	movlb	0	; () banked
  5271  0105D6  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  5272  0105D8  0E00               	movlw	0
  5273  0105DA  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  5274  0105DC  0E00               	movlw	0
  5275  0105DE  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  5276  0105E0  0E00               	movlw	0
  5277  0105E2  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  5278  0105E4  EC1A  F091         	call	___lmul	;wreg free
  5279  0105E8  C068  F074         	movff	?___lmul,___lldiv@dividend
  5280  0105EC  C069  F075         	movff	?___lmul+1,___lldiv@dividend+1
  5281  0105F0  C06A  F076         	movff	?___lmul+2,___lldiv@dividend+2
  5282  0105F4  C06B  F077         	movff	?___lmul+3,___lldiv@dividend+3
  5283  0105F8  0E80               	movlw	128
  5284  0105FA  0100               	movlb	0	; () banked
  5285  0105FC  6F78               	movwf	___lldiv@divisor& (0+255),b
  5286  0105FE  0E51               	movlw	81
  5287  010600  6F79               	movwf	(___lldiv@divisor+1)& (0+255),b
  5288  010602  0E01               	movlw	1
  5289  010604  6F7A               	movwf	(___lldiv@divisor+2)& (0+255),b
  5290  010606  0E00               	movlw	0
  5291  010608  6F7B               	movwf	(___lldiv@divisor+3)& (0+255),b
  5292  01060A  EC7A  F08C         	call	___lldiv	;wreg free
  5293  01060E  C074  F091         	movff	?___lldiv,normal_loop@temp
  5294  010612  C075  F092         	movff	?___lldiv+1,normal_loop@temp+1
  5295  010616  C076  F093         	movff	?___lldiv+2,normal_loop@temp+2
  5296  01061A  C077  F094         	movff	?___lldiv+3,normal_loop@temp+3
  5297                           
  5298                           ;PIC18F27J53-killifish_light02.c: 353: temp *= 2;
  5299  01061E  0100               	movlb	0	; () banked
  5300  010620  90D8               	bcf	status,0,c
  5301  010622  3791               	rlcf	normal_loop@temp& (0+255),f,b
  5302  010624  3792               	rlcf	(normal_loop@temp+1)& (0+255),f,b
  5303  010626  3793               	rlcf	(normal_loop@temp+2)& (0+255),f,b
  5304  010628  3794               	rlcf	(normal_loop@temp+3)& (0+255),f,b
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;PIC18F27J53-killifish_light02.c: 354: temp /= 3;
  5308  01062A  C091  F074         	movff	normal_loop@temp,___lldiv@dividend
  5309  01062E  C092  F075         	movff	normal_loop@temp+1,___lldiv@dividend+1
  5310  010632  C093  F076         	movff	normal_loop@temp+2,___lldiv@dividend+2
  5311  010636  C094  F077         	movff	normal_loop@temp+3,___lldiv@dividend+3
  5312  01063A  0E03               	movlw	3
  5313  01063C  0100               	movlb	0	; () banked
  5314  01063E  6F78               	movwf	___lldiv@divisor& (0+255),b
  5315  010640  0E00               	movlw	0
  5316  010642  6F79               	movwf	(___lldiv@divisor+1)& (0+255),b
  5317  010644  0E00               	movlw	0
  5318  010646  6F7A               	movwf	(___lldiv@divisor+2)& (0+255),b
  5319  010648  0E00               	movlw	0
  5320  01064A  6F7B               	movwf	(___lldiv@divisor+3)& (0+255),b
  5321  01064C  EC7A  F08C         	call	___lldiv	;wreg free
  5322  010650  C074  F091         	movff	?___lldiv,normal_loop@temp
  5323  010654  C075  F092         	movff	?___lldiv+1,normal_loop@temp+1
  5324  010658  C076  F093         	movff	?___lldiv+2,normal_loop@temp+2
  5325  01065C  C077  F094         	movff	?___lldiv+3,normal_loop@temp+3
  5326                           
  5327                           ;PIC18F27J53-killifish_light02.c: 355: PWM_set(0, temp);
  5328  010660  C091  F06E         	movff	normal_loop@temp,PWM_set@value
  5329  010664  C092  F06F         	movff	normal_loop@temp+1,PWM_set@value+1
  5330  010668  0E00               	movlw	0
  5331  01066A  ECE6  F088         	call	_PWM_set
  5332                           
  5333                           ;PIC18F27J53-killifish_light02.c: 356: PWM_set(1, temp);
  5334  01066E  C091  F06E         	movff	normal_loop@temp,PWM_set@value
  5335  010672  C092  F06F         	movff	normal_loop@temp+1,PWM_set@value+1
  5336  010676  0E01               	movlw	1
  5337  010678  ECE6  F088         	call	_PWM_set
  5338                           
  5339                           ;PIC18F27J53-killifish_light02.c: 357: PWM_set(2, temp);
  5340  01067C  C091  F06E         	movff	normal_loop@temp,PWM_set@value
  5341  010680  C092  F06F         	movff	normal_loop@temp+1,PWM_set@value+1
  5342  010684  0E02               	movlw	2
  5343  010686  ECE6  F088         	call	_PWM_set
  5344                           
  5345                           ;PIC18F27J53-killifish_light02.c: 358: PWM_set(3, temp);
  5346  01068A  C091  F06E         	movff	normal_loop@temp,PWM_set@value
  5347  01068E  C092  F06F         	movff	normal_loop@temp+1,PWM_set@value+1
  5348  010692  0E03               	movlw	3
  5349  010694  ECE6  F088         	call	_PWM_set
  5350  010698                     l5135:
  5351                           
  5352                           ;PIC18F27J53-killifish_light02.c: 359: }
  5353                           ;PIC18F27J53-killifish_light02.c: 360: }
  5354                           ;PIC18F27J53-killifish_light02.c: 361: if (light_mode == ADC_mode) {
  5355  010698  0100               	movlb	0	; () banked
  5356  01069A  05B3               	decf	_light_mode& (0+255),w,b
  5357  01069C  A4D8               	btfss	status,2,c
  5358  01069E  D046               	goto	l631
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;PIC18F27J53-killifish_light02.c: 362: PWM_set(3, 0);
  5362  0106A0  0E00               	movlw	0
  5363  0106A2  0100               	movlb	0	; () banked
  5364  0106A4  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  5365  0106A6  0E00               	movlw	0
  5366  0106A8  6F6E               	movwf	PWM_set@value& (0+255),b
  5367  0106AA  0E03               	movlw	3
  5368  0106AC  ECE6  F088         	call	_PWM_set
  5369                           
  5370                           ;PIC18F27J53-killifish_light02.c: 363: if (t0if) {
  5371  0106B0  502D               	movf	_t0if,w,c
  5372  0106B2  B4D8               	btfsc	status,2,c
  5373  0106B4  D03B               	goto	l631
  5374                           
  5375                           ;PIC18F27J53-killifish_light02.c: 364: t0if = 0;
  5376  0106B6  0E00               	movlw	0
  5377  0106B8  6E2D               	movwf	_t0if,c
  5378                           
  5379                           ;PIC18F27J53-killifish_light02.c: 365: for (uint8_t i = 0; i < 3; i++) {
  5380  0106BA  0E00               	movlw	0
  5381  0106BC  0100               	movlb	0	; () banked
  5382  0106BE  6F90               	movwf	normal_loop@i& (0+255),b
  5383  0106C0                     l5143:
  5384                           
  5385                           ; BSR set to: 0
  5386  0106C0  0E02               	movlw	2
  5387  0106C2  0100               	movlb	0	; () banked
  5388  0106C4  6590               	cpfsgt	normal_loop@i& (0+255),b
  5389  0106C6  D001               	goto	l5147
  5390  0106C8  D031               	goto	l631
  5391  0106CA                     l5147:
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;PIC18F27J53-killifish_light02.c: 366: uint16_t scan = (ADC(i) >> 4) * 100 / 255;
  5395  0106CA  0100               	movlb	0	; () banked
  5396  0106CC  5190               	movf	normal_loop@i& (0+255),w,b
  5397  0106CE  EC9F  F093         	call	_ADC
  5398  0106D2  0E04               	movlw	4
  5399  0106D4  0100               	movlb	0	; () banked
  5400  0106D6  6F87               	movwf	??_normal_loop& (0+255),b
  5401  0106D8                     u5705:
  5402  0106D8  90D8               	bcf	status,0,c
  5403  0106DA  3220               	rrcf	?_ADC+1,f,c
  5404  0106DC  321F               	rrcf	?_ADC,f,c
  5405  0106DE  0100               	movlb	0	; () banked
  5406  0106E0  2F87               	decfsz	??_normal_loop& (0+255),f,b
  5407  0106E2  D7FA               	goto	u5705
  5408  0106E4  C01F  F060         	movff	?_ADC,___wmul@multiplier
  5409  0106E8  C020  F061         	movff	?_ADC+1,___wmul@multiplier+1
  5410  0106EC  0E00               	movlw	0
  5411  0106EE  0100               	movlb	0	; () banked
  5412  0106F0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5413  0106F2  0E64               	movlw	100
  5414  0106F4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5415  0106F6  EC55  F093         	call	___wmul	;wreg free
  5416  0106FA  C060  F066         	movff	?___wmul,___lwdiv@dividend
  5417  0106FE  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  5418  010702  0E00               	movlw	0
  5419  010704  0100               	movlb	0	; () banked
  5420  010706  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5421  010708  6968               	setf	___lwdiv@divisor& (0+255),b
  5422  01070A  ECDE  F090         	call	___lwdiv	;wreg free
  5423  01070E  C066  F08B         	movff	?___lwdiv,normal_loop@scan
  5424  010712  C067  F08C         	movff	?___lwdiv+1,normal_loop@scan+1
  5425                           
  5426                           ;PIC18F27J53-killifish_light02.c: 367: PWM_set(i, scan);
  5427  010716  C08B  F06E         	movff	normal_loop@scan,PWM_set@value
  5428  01071A  C08C  F06F         	movff	normal_loop@scan+1,PWM_set@value+1
  5429  01071E  0100               	movlb	0	; () banked
  5430  010720  5190               	movf	normal_loop@i& (0+255),w,b
  5431  010722  ECE6  F088         	call	_PWM_set
  5432  010726  0100               	movlb	0	; () banked
  5433  010728  2B90               	incf	normal_loop@i& (0+255),f,b
  5434  01072A  D7CA               	goto	l5143
  5435  01072C                     l631:
  5436                           
  5437                           ;PIC18F27J53-killifish_light02.c: 368: }
  5438                           ;PIC18F27J53-killifish_light02.c: 369: }
  5439                           ;PIC18F27J53-killifish_light02.c: 370: }
  5440                           ;PIC18F27J53-killifish_light02.c: 371: if (sw_R.flag.press) {
  5441  01072C  A03E               	btfss	_sw_R+2,0,c
  5442  01072E  D007               	goto	l5155
  5443                           
  5444                           ;PIC18F27J53-killifish_light02.c: 372: sw_R.flags = 0;
  5445  010730  0E00               	movlw	0
  5446  010732  6E3F               	movwf	_sw_R+3,c
  5447  010734  0E00               	movlw	0
  5448  010736  6E3E               	movwf	_sw_R+2,c
  5449                           
  5450                           ;PIC18F27J53-killifish_light02.c: 373: light_mode = TIME_SYNC_mode;
  5451  010738  0E00               	movlw	0
  5452  01073A  0100               	movlb	0	; () banked
  5453  01073C  6FB3               	movwf	_light_mode& (0+255),b
  5454  01073E                     l5155:
  5455                           
  5456                           ;PIC18F27J53-killifish_light02.c: 374: }
  5457                           ;PIC18F27J53-killifish_light02.c: 375: if (sw_R.flag.long_holding_1) {
  5458  01073E  A23F               	btfss	_sw_R+3,1,c
  5459  010740  D007               	goto	l5159
  5460                           
  5461                           ;PIC18F27J53-killifish_light02.c: 376: sw_R.flags = 0;
  5462  010742  0E00               	movlw	0
  5463  010744  6E3F               	movwf	_sw_R+3,c
  5464  010746  0E00               	movlw	0
  5465  010748  6E3E               	movwf	_sw_R+2,c
  5466                           
  5467                           ;PIC18F27J53-killifish_light02.c: 377: light_mode = ADC_mode;
  5468  01074A  0E01               	movlw	1
  5469  01074C  0100               	movlb	0	; () banked
  5470  01074E  6FB3               	movwf	_light_mode& (0+255),b
  5471  010750                     l5159:
  5472                           
  5473                           ;PIC18F27J53-killifish_light02.c: 378: }
  5474                           ;PIC18F27J53-killifish_light02.c: 379: if (sw_G.flag.press) {
  5475  010750  A03A               	btfss	_sw_G+2,0,c
  5476  010752  D029               	goto	l637
  5477                           
  5478                           ;PIC18F27J53-killifish_light02.c: 380: sw_G.flags = 0;
  5479  010754  0E00               	movlw	0
  5480  010756  6E3B               	movwf	_sw_G+3,c
  5481  010758  0E00               	movlw	0
  5482  01075A  6E3A               	movwf	_sw_G+2,c
  5483                           
  5484                           ;PIC18F27J53-killifish_light02.c: 381: light_mode = COMMAND_mode;
  5485  01075C  0E02               	movlw	2
  5486  01075E  0100               	movlb	0	; () banked
  5487  010760  6FB3               	movwf	_light_mode& (0+255),b
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;PIC18F27J53-killifish_light02.c: 382: static uint8_t n = 0;
  5491                           ;PIC18F27J53-killifish_light02.c: 383: if (n >= 4) n = 0;
  5492  010762  0E03               	movlw	3
  5493  010764  0100               	movlb	0	; () banked
  5494  010766  65B9               	cpfsgt	normal_loop@n& (0+255),b
  5495  010768  D004               	goto	l5167
  5496                           
  5497                           ; BSR set to: 0
  5498  01076A  0E00               	movlw	0
  5499  01076C  0100               	movlb	0	; () banked
  5500  01076E  6FB9               	movwf	normal_loop@n& (0+255),b
  5501  010770  D002               	goto	l5169
  5502  010772                     l5167:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;PIC18F27J53-killifish_light02.c: 384: else n++;
  5506  010772  0100               	movlb	0	; () banked
  5507  010774  2BB9               	incf	normal_loop@n& (0+255),f,b
  5508  010776                     l5169:
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;PIC18F27J53-killifish_light02.c: 385: uint8_t value = 100 / 4 * n;
  5512  010776  0100               	movlb	0	; () banked
  5513  010778  51B9               	movf	normal_loop@n& (0+255),w,b
  5514  01077A  0D19               	mullw	25
  5515  01077C  CFF3 F08D          	movff	prodl,normal_loop@value
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;PIC18F27J53-killifish_light02.c: 386: for (uint8_t i = 0; i < 3; i++) {
  5519  010780  0E00               	movlw	0
  5520  010782  0100               	movlb	0	; () banked
  5521  010784  6F8F               	movwf	normal_loop@i_2486& (0+255),b
  5522  010786                     l5173:
  5523                           
  5524                           ; BSR set to: 0
  5525  010786  0E02               	movlw	2
  5526  010788  0100               	movlb	0	; () banked
  5527  01078A  658F               	cpfsgt	normal_loop@i_2486& (0+255),b
  5528  01078C  D001               	goto	l5177
  5529  01078E  D00B               	goto	l637
  5530  010790                     l5177:
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;PIC18F27J53-killifish_light02.c: 387: PWM_set(i, value);
  5534  010790  C08D  F06E         	movff	normal_loop@value,PWM_set@value
  5535  010794  0100               	movlb	0	; () banked
  5536  010796  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  5537  010798  0100               	movlb	0	; () banked
  5538  01079A  518F               	movf	normal_loop@i_2486& (0+255),w,b
  5539  01079C  ECE6  F088         	call	_PWM_set
  5540  0107A0  0100               	movlb	0	; () banked
  5541  0107A2  2B8F               	incf	normal_loop@i_2486& (0+255),f,b
  5542  0107A4  D7F0               	goto	l5173
  5543  0107A6                     l637:
  5544                           
  5545                           ;PIC18F27J53-killifish_light02.c: 388: }
  5546                           ;PIC18F27J53-killifish_light02.c: 389: }
  5547                           ;PIC18F27J53-killifish_light02.c: 390: if (sw_B.flag.press) {
  5548  0107A6  0101               	movlb	1	; () banked
  5549  0107A8  A1E9               	btfss	(_sw_B+2)& (0+255),0,b
  5550  0107AA  0012               	return	
  5551                           
  5552                           ; BSR set to: 1
  5553                           ;PIC18F27J53-killifish_light02.c: 391: sw_B.flags = 0;
  5554  0107AC  0E00               	movlw	0
  5555  0107AE  0101               	movlb	1	; () banked
  5556  0107B0  6FEA               	movwf	(_sw_B+3)& (0+255),b
  5557  0107B2  0E00               	movlw	0
  5558  0107B4  6FE9               	movwf	(_sw_B+2)& (0+255),b
  5559                           
  5560                           ;PIC18F27J53-killifish_light02.c: 392: light_mode = COMMAND_mode;
  5561  0107B6  0E02               	movlw	2
  5562  0107B8  0100               	movlb	0	; () banked
  5563  0107BA  6FB3               	movwf	_light_mode& (0+255),b
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;PIC18F27J53-killifish_light02.c: 393: static uint8_t n = 0;
  5567                           ;PIC18F27J53-killifish_light02.c: 394: if (n >= 4) n = 0;
  5568  0107BC  0E03               	movlw	3
  5569  0107BE  0100               	movlb	0	; () banked
  5570  0107C0  65B8               	cpfsgt	normal_loop@_2503& (0+255),b
  5571  0107C2  D004               	goto	l5189
  5572                           
  5573                           ; BSR set to: 0
  5574  0107C4  0E00               	movlw	0
  5575  0107C6  0100               	movlb	0	; () banked
  5576  0107C8  6FB8               	movwf	normal_loop@_2503& (0+255),b
  5577  0107CA  D002               	goto	l5191
  5578  0107CC                     l5189:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;PIC18F27J53-killifish_light02.c: 395: else n++;
  5582  0107CC  0100               	movlb	0	; () banked
  5583  0107CE  2BB8               	incf	normal_loop@_2503& (0+255),f,b
  5584  0107D0                     l5191:
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;PIC18F27J53-killifish_light02.c: 396: uint8_t value = 100 / 4 * n;
  5588  0107D0  0100               	movlb	0	; () banked
  5589  0107D2  51B8               	movf	normal_loop@_2503& (0+255),w,b
  5590  0107D4  0D19               	mullw	25
  5591  0107D6  CFF3 F08E          	movff	prodl,normal_loop@value_2504
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;PIC18F27J53-killifish_light02.c: 397: PWM_set(3, value);
  5595  0107DA  C08E  F06E         	movff	normal_loop@value_2504,PWM_set@value
  5596  0107DE  0100               	movlb	0	; () banked
  5597  0107E0  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  5598  0107E2  0E03               	movlw	3
  5599  0107E4  ECE6  F088         	call	_PWM_set
  5600  0107E8  0012               	return	
  5601  0107EA                     __end_of_normal_loop:
  5602                           	opt stack 0
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           prodh	equ	0xFF4
  5608                           prodl	equ	0xFF3
  5609                           intcon	equ	0xFF2
  5610                           postinc0	equ	0xFEE
  5611                           wreg	equ	0xFE8
  5612                           indf1	equ	0xFE7
  5613                           postinc1	equ	0xFE6
  5614                           postdec1	equ	0xFE5
  5615                           fsr1h	equ	0xFE2
  5616                           fsr1l	equ	0xFE1
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           postdec2	equ	0xFDD
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624 ;; *************** function ___llmod *****************
  5625 ;; Defined at:
  5626 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  dividend        4    0[BANK0 ] unsigned long 
  5629 ;;  divisor         4    4[BANK0 ] unsigned long 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  counter         1   30[COMRAM] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  4    0[BANK0 ] unsigned long 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5641 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;Total ram usage:        9 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    4
  5648 ;; This function calls:
  5649 ;;		Nothing
  5650 ;; This function is called by:
  5651 ;;		_normal_loop
  5652 ;;		_my_utoa32
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text20
  5657  011FA2                     __ptext20:
  5658                           	opt stack 0
  5659  011FA2                     ___llmod:
  5660                           	opt stack 25
  5661                           
  5662                           ;incstack = 0
  5663  011FA2  0100               	movlb	0	; () banked
  5664  011FA4  5164               	movf	___llmod@divisor& (0+255),w,b
  5665  011FA6  0100               	movlb	0	; () banked
  5666  011FA8  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5667  011FAA  0100               	movlb	0	; () banked
  5668  011FAC  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5669  011FAE  0100               	movlb	0	; () banked
  5670  011FB0  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5671  011FB2  B4D8               	btfsc	status,2,c
  5672  011FB4  D037               	goto	l1023
  5673                           
  5674                           ; BSR set to: 0
  5675  011FB6  0E01               	movlw	1
  5676  011FB8  6E1F               	movwf	___llmod@counter,c
  5677  011FBA  D007               	goto	l4859
  5678  011FBC                     l4857:
  5679                           
  5680                           ; BSR set to: 0
  5681  011FBC  0100               	movlb	0	; () banked
  5682  011FBE  90D8               	bcf	status,0,c
  5683  011FC0  3764               	rlcf	___llmod@divisor& (0+255),f,b
  5684  011FC2  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5685  011FC4  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5686  011FC6  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5687  011FC8  2A1F               	incf	___llmod@counter,f,c
  5688  011FCA                     l4859:
  5689                           
  5690                           ; BSR set to: 0
  5691  011FCA  0100               	movlb	0	; () banked
  5692  011FCC  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5693  011FCE  D7F6               	goto	l4857
  5694  011FD0                     l4861:
  5695                           
  5696                           ; BSR set to: 0
  5697  011FD0  0100               	movlb	0	; () banked
  5698  011FD2  5164               	movf	___llmod@divisor& (0+255),w,b
  5699  011FD4  0100               	movlb	0	; () banked
  5700  011FD6  5D60               	subwf	___llmod@dividend& (0+255),w,b
  5701  011FD8  0100               	movlb	0	; () banked
  5702  011FDA  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5703  011FDC  0100               	movlb	0	; () banked
  5704  011FDE  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5705  011FE0  0100               	movlb	0	; () banked
  5706  011FE2  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5707  011FE4  0100               	movlb	0	; () banked
  5708  011FE6  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5709  011FE8  0100               	movlb	0	; () banked
  5710  011FEA  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5711  011FEC  0100               	movlb	0	; () banked
  5712  011FEE  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5713  011FF0  A0D8               	btfss	status,0,c
  5714  011FF2  D010               	goto	l4865
  5715                           
  5716                           ; BSR set to: 0
  5717  011FF4  0100               	movlb	0	; () banked
  5718  011FF6  5164               	movf	___llmod@divisor& (0+255),w,b
  5719  011FF8  0100               	movlb	0	; () banked
  5720  011FFA  5F60               	subwf	___llmod@dividend& (0+255),f,b
  5721  011FFC  0100               	movlb	0	; () banked
  5722  011FFE  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5723  012000  0100               	movlb	0	; () banked
  5724  012002  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5725  012004  0100               	movlb	0	; () banked
  5726  012006  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5727  012008  0100               	movlb	0	; () banked
  5728  01200A  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5729  01200C  0100               	movlb	0	; () banked
  5730  01200E  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5731  012010  0100               	movlb	0	; () banked
  5732  012012  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5733  012014                     l4865:
  5734                           
  5735                           ; BSR set to: 0
  5736  012014  0100               	movlb	0	; () banked
  5737  012016  90D8               	bcf	status,0,c
  5738  012018  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5739  01201A  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5740  01201C  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5741  01201E  3364               	rrcf	___llmod@divisor& (0+255),f,b
  5742                           
  5743                           ; BSR set to: 0
  5744  012020  2E1F               	decfsz	___llmod@counter,f,c
  5745  012022  D7D6               	goto	l4861
  5746  012024                     l1023:
  5747                           
  5748                           ; BSR set to: 0
  5749  012024  C060  F060         	movff	___llmod@dividend,?___llmod
  5750  012028  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  5751  01202C  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  5752  012030  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  5753                           
  5754                           ; BSR set to: 0
  5755  012034  0012               	return		;funcret
  5756  012036                     __end_of___llmod:
  5757                           	opt stack 0
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           intcon	equ	0xFF2
  5765                           postinc0	equ	0xFEE
  5766                           wreg	equ	0xFE8
  5767                           indf1	equ	0xFE7
  5768                           postinc1	equ	0xFE6
  5769                           postdec1	equ	0xFE5
  5770                           fsr1h	equ	0xFE2
  5771                           fsr1l	equ	0xFE1
  5772                           indf2	equ	0xFDF
  5773                           postinc2	equ	0xFDE
  5774                           postdec2	equ	0xFDD
  5775                           fsr2h	equ	0xFDA
  5776                           fsr2l	equ	0xFD9
  5777                           status	equ	0xFD8
  5778                           
  5779 ;; *************** function _PWM_set *****************
  5780 ;; Defined at:
  5781 ;;		line 126 in file "PIC18F27J53-killifish_light02.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  color           1    wreg     unsigned char 
  5784 ;;  value           2   14[BANK0 ] unsigned int 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  color           1   18[BANK0 ] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;		None               void
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5800 ;;Total ram usage:        5 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    5
  5803 ;; This function calls:
  5804 ;;		___lwdiv
  5805 ;;		___wmul
  5806 ;; This function is called by:
  5807 ;;		_command_operation
  5808 ;;		_normal_loop
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text21
  5813  0111CC                     __ptext21:
  5814                           	opt stack 0
  5815  0111CC                     _PWM_set:
  5816                           	opt stack 23
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;incstack = 0
  5820                           ;PWM_set@color stored from wreg
  5821  0111CC  0100               	movlb	0	; () banked
  5822  0111CE  6F72               	movwf	PWM_set@color& (0+255),b
  5823                           
  5824                           ;PIC18F27J53-killifish_light02.c: 127: value = value * value / 100;
  5825  0111D0  C06E  F060         	movff	PWM_set@value,___wmul@multiplier
  5826  0111D4  C06F  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  5827  0111D8  C06E  F062         	movff	PWM_set@value,___wmul@multiplicand
  5828  0111DC  C06F  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  5829  0111E0  EC55  F093         	call	___wmul	;wreg free
  5830  0111E4  C060  F066         	movff	?___wmul,___lwdiv@dividend
  5831  0111E8  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  5832  0111EC  0E00               	movlw	0
  5833  0111EE  0100               	movlb	0	; () banked
  5834  0111F0  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5835  0111F2  0E64               	movlw	100
  5836  0111F4  6F68               	movwf	___lwdiv@divisor& (0+255),b
  5837  0111F6  ECDE  F090         	call	___lwdiv	;wreg free
  5838  0111FA  C066  F06E         	movff	?___lwdiv,PWM_set@value
  5839  0111FE  C067  F06F         	movff	?___lwdiv+1,PWM_set@value+1
  5840                           
  5841                           ;PIC18F27J53-killifish_light02.c: 128: switch (color) {
  5842  011202  D056               	goto	l4645
  5843  011204                     l4627:
  5844                           
  5845                           ;PIC18F27J53-killifish_light02.c: 130: if (value < 100 / 4) {
  5846  011204  0100               	movlb	0	; () banked
  5847  011206  516F               	movf	(PWM_set@value+1)& (0+255),w,b
  5848  011208  E105               	bnz	l4631
  5849  01120A  0E19               	movlw	25
  5850  01120C  0100               	movlb	0	; () banked
  5851  01120E  5D6E               	subwf	PWM_set@value& (0+255),w,b
  5852  011210  A0D8               	btfss	status,0,c
  5853  011212  D071               	goto	l4665
  5854  011214                     l4631:
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;PIC18F27J53-killifish_light02.c: 133: value = 2 * (value - 100 / 4) / 3 + 100 / 4;
  5858  011214  C06E  F070         	movff	PWM_set@value,??_PWM_set
  5859  011218  C06F  F071         	movff	PWM_set@value+1,??_PWM_set+1
  5860  01121C  90D8               	bcf	status,0,c
  5861  01121E  0100               	movlb	0	; () banked
  5862  011220  3770               	rlcf	??_PWM_set& (0+255),f,b
  5863  011222  3771               	rlcf	(??_PWM_set+1)& (0+255),f,b
  5864  011224  0ECE               	movlw	206
  5865  011226  0100               	movlb	0	; () banked
  5866  011228  2570               	addwf	??_PWM_set& (0+255),w,b
  5867  01122A  0100               	movlb	0	; () banked
  5868  01122C  6F66               	movwf	___lwdiv@dividend& (0+255),b
  5869  01122E  0EFF               	movlw	255
  5870  011230  0100               	movlb	0	; () banked
  5871  011232  2171               	addwfc	(??_PWM_set+1)& (0+255),w,b
  5872  011234  0100               	movlb	0	; () banked
  5873  011236  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  5874  011238  0E00               	movlw	0
  5875  01123A  0100               	movlb	0	; () banked
  5876  01123C  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5877  01123E  0E03               	movlw	3
  5878  011240  6F68               	movwf	___lwdiv@divisor& (0+255),b
  5879  011242  ECDE  F090         	call	___lwdiv	;wreg free
  5880  011246  0E19               	movlw	25
  5881  011248  0100               	movlb	0	; () banked
  5882  01124A  2566               	addwf	?___lwdiv& (0+255),w,b
  5883  01124C  0100               	movlb	0	; () banked
  5884  01124E  6F6E               	movwf	PWM_set@value& (0+255),b
  5885  011250  0E00               	movlw	0
  5886  011252  0100               	movlb	0	; () banked
  5887  011254  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
  5888  011256  D029               	goto	L1
  5889  011258                     l4637:
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;PIC18F27J53-killifish_light02.c: 144: if (value < 100 / 4) {
  5893  011258  0100               	movlb	0	; () banked
  5894  01125A  516F               	movf	(PWM_set@value+1)& (0+255),w,b
  5895  01125C  E105               	bnz	l4641
  5896  01125E  0E19               	movlw	25
  5897  011260  0100               	movlb	0	; () banked
  5898  011262  5D6E               	subwf	PWM_set@value& (0+255),w,b
  5899  011264  A0D8               	btfss	status,0,c
  5900  011266  D047               	goto	l4665
  5901  011268                     l4641:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;PIC18F27J53-killifish_light02.c: 147: value = 3 * (value - 100 / 4) / 4 + 100 / 4;
  5905  011268  0EE7               	movlw	231
  5906  01126A  0100               	movlb	0	; () banked
  5907  01126C  256E               	addwf	PWM_set@value& (0+255),w,b
  5908  01126E  0100               	movlb	0	; () banked
  5909  011270  6F60               	movwf	___wmul@multiplier& (0+255),b
  5910  011272  0EFF               	movlw	255
  5911  011274  0100               	movlb	0	; () banked
  5912  011276  216F               	addwfc	(PWM_set@value+1)& (0+255),w,b
  5913  011278  0100               	movlb	0	; () banked
  5914  01127A  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
  5915  01127C  0E00               	movlw	0
  5916  01127E  0100               	movlb	0	; () banked
  5917  011280  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5918  011282  0E03               	movlw	3
  5919  011284  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5920  011286  EC55  F093         	call	___wmul	;wreg free
  5921  01128A  0100               	movlb	0	; () banked
  5922  01128C  90D8               	bcf	status,0,c
  5923  01128E  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  5924  011290  3360               	rrcf	?___wmul& (0+255),f,b
  5925  011292  0100               	movlb	0	; () banked
  5926  011294  90D8               	bcf	status,0,c
  5927  011296  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  5928  011298  3360               	rrcf	?___wmul& (0+255),f,b
  5929  01129A  0E19               	movlw	25
  5930  01129C  0100               	movlb	0	; () banked
  5931  01129E  2560               	addwf	?___wmul& (0+255),w,b
  5932  0112A0  0100               	movlb	0	; () banked
  5933  0112A2  6F6E               	movwf	PWM_set@value& (0+255),b
  5934  0112A4  0E00               	movlw	0
  5935  0112A6  0100               	movlb	0	; () banked
  5936  0112A8  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  5937  0112AA                     L1:
  5938  0112AA  0100               	movlb	0	; () banked
  5939  0112AC  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;PIC18F27J53-killifish_light02.c: 152: }
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;PIC18F27J53-killifish_light02.c: 151: break;
  5946                           
  5947                           ;PIC18F27J53-killifish_light02.c: 150: case 3:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;PIC18F27J53-killifish_light02.c: 148: }
  5951                           ;PIC18F27J53-killifish_light02.c: 149: break;
  5952  0112AE  D023               	goto	l4665
  5953  0112B0                     l4645:
  5954  0112B0  0100               	movlb	0	; () banked
  5955  0112B2  5172               	movf	PWM_set@color& (0+255),w,b
  5956                           
  5957                           ; Switch size 1, requested type "space"
  5958                           ; Number of cases is 4, Range of values is 0 to 3
  5959                           ; switch strategies available:
  5960                           ; Name         Instructions Cycles
  5961                           ; simple_byte           13     7 (average)
  5962                           ;	Chosen strategy is simple_byte
  5963  0112B4  0A00               	xorlw	0	; case 0
  5964  0112B6  B4D8               	btfsc	status,2,c
  5965  0112B8  D7A5               	goto	l4627
  5966  0112BA  0A01               	xorlw	1	; case 1
  5967  0112BC  B4D8               	btfsc	status,2,c
  5968  0112BE  D01B               	goto	l4665
  5969  0112C0  0A03               	xorlw	3	; case 2
  5970  0112C2  B4D8               	btfsc	status,2,c
  5971  0112C4  D7C9               	goto	l4637
  5972  0112C6  0A01               	xorlw	1	; case 3
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;PIC18F27J53-killifish_light02.c: 153: switch (color) {
  5976  0112C8  D016               	goto	l4665
  5977  0112CA                     l4647:
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;PIC18F27J53-killifish_light02.c: 155: CCP1CONbits.DC1B = 0;
  5981  0112CA  0ECF               	movlw	-49
  5982  0112CC  16BA               	andwf	4026,f,c	;volatile
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;PIC18F27J53-killifish_light02.c: 156: CCPR1L = value;
  5986  0112CE  C06E  FFBB         	movff	PWM_set@value,4027	;volatile
  5987                           
  5988                           ;PIC18F27J53-killifish_light02.c: 157: break;
  5989  0112D2  0012               	return	
  5990  0112D4                     l4651:
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;PIC18F27J53-killifish_light02.c: 159: CCP2CONbits.DC2B = 0;
  5994  0112D4  0ECF               	movlw	-49
  5995  0112D6  16B4               	andwf	4020,f,c	;volatile
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;PIC18F27J53-killifish_light02.c: 160: CCPR2L = value;
  5999  0112D8  C06E  FFB5         	movff	PWM_set@value,4021	;volatile
  6000                           
  6001                           ;PIC18F27J53-killifish_light02.c: 161: break;
  6002  0112DC  0012               	return	
  6003  0112DE                     l4655:
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;PIC18F27J53-killifish_light02.c: 163: CCP3CONbits.DC3B = 0;
  6007  0112DE  0ECF               	movlw	-49
  6008  0112E0  010F               	movlb	15	; () banked
  6009  0112E2  1715               	andwf	21,f,b	;volatile
  6010                           
  6011                           ; BSR set to: 15
  6012                           ;PIC18F27J53-killifish_light02.c: 164: CCPR3L = value;
  6013  0112E4  C06E  FF16         	movff	PWM_set@value,3862	;volatile
  6014                           
  6015                           ;PIC18F27J53-killifish_light02.c: 165: break;
  6016  0112E8  0012               	return	
  6017  0112EA                     l4659:
  6018                           
  6019                           ;PIC18F27J53-killifish_light02.c: 167: CCP4CONbits.DC4B = 0;
  6020  0112EA  0ECF               	movlw	-49
  6021  0112EC  010F               	movlb	15	; () banked
  6022  0112EE  1712               	andwf	18,f,b	;volatile
  6023                           
  6024                           ; BSR set to: 15
  6025                           ;PIC18F27J53-killifish_light02.c: 168: CCPR4L = value;
  6026  0112F0  C06E  FF13         	movff	PWM_set@value,3859	;volatile
  6027                           
  6028                           ; BSR set to: 15
  6029                           ;PIC18F27J53-killifish_light02.c: 170: }
  6030                           
  6031                           ;PIC18F27J53-killifish_light02.c: 169: break;
  6032  0112F4  0012               	return	
  6033  0112F6                     l4665:
  6034  0112F6  0100               	movlb	0	; () banked
  6035  0112F8  5172               	movf	PWM_set@color& (0+255),w,b
  6036                           
  6037                           ; Switch size 1, requested type "space"
  6038                           ; Number of cases is 4, Range of values is 0 to 3
  6039                           ; switch strategies available:
  6040                           ; Name         Instructions Cycles
  6041                           ; simple_byte           13     7 (average)
  6042                           ;	Chosen strategy is simple_byte
  6043  0112FA  0A00               	xorlw	0	; case 0
  6044  0112FC  B4D8               	btfsc	status,2,c
  6045  0112FE  D7E5               	goto	l4647
  6046  011300  0A01               	xorlw	1	; case 1
  6047  011302  B4D8               	btfsc	status,2,c
  6048  011304  D7E7               	goto	l4651
  6049  011306  0A03               	xorlw	3	; case 2
  6050  011308  B4D8               	btfsc	status,2,c
  6051  01130A  D7E9               	goto	l4655
  6052  01130C  0A01               	xorlw	1	; case 3
  6053  01130E  A4D8               	btfss	status,2,c
  6054  011310  0012               	return	
  6055  011312  D7EB               	goto	l4659
  6056  011314                     __end_of_PWM_set:
  6057                           	opt stack 0
  6058                           tblptru	equ	0xFF8
  6059                           tblptrh	equ	0xFF7
  6060                           tblptrl	equ	0xFF6
  6061                           tablat	equ	0xFF5
  6062                           prodh	equ	0xFF4
  6063                           prodl	equ	0xFF3
  6064                           intcon	equ	0xFF2
  6065                           postinc0	equ	0xFEE
  6066                           wreg	equ	0xFE8
  6067                           indf1	equ	0xFE7
  6068                           postinc1	equ	0xFE6
  6069                           postdec1	equ	0xFE5
  6070                           fsr1h	equ	0xFE2
  6071                           fsr1l	equ	0xFE1
  6072                           indf2	equ	0xFDF
  6073                           postinc2	equ	0xFDE
  6074                           postdec2	equ	0xFDD
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function ___wmul *****************
  6080 ;; Defined at:
  6081 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6084 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  product         2    4[BANK0 ] unsigned int 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  2    0[BANK0 ] unsigned int 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0, prodl, prodh
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6099 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;Total ram usage:        6 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    4
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		_my_atoi
  6107 ;;		_PWM_set
  6108 ;;		_normal_loop
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text22
  6113  0126AA                     __ptext22:
  6114                           	opt stack 0
  6115  0126AA                     ___wmul:
  6116                           	opt stack 23
  6117                           
  6118                           ;incstack = 0
  6119  0126AA  0100               	movlb	0	; () banked
  6120  0126AC  5160               	movf	___wmul@multiplier& (0+255),w,b
  6121  0126AE  0100               	movlb	0	; () banked
  6122  0126B0  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6123  0126B2  CFF3 F064          	movff	prodl,___wmul@product
  6124  0126B6  CFF4 F065          	movff	prodh,___wmul@product+1
  6125  0126BA  0100               	movlb	0	; () banked
  6126  0126BC  5160               	movf	___wmul@multiplier& (0+255),w,b
  6127  0126BE  0100               	movlb	0	; () banked
  6128  0126C0  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6129  0126C2  50F3               	movf	prodl,w,c
  6130  0126C4  0100               	movlb	0	; () banked
  6131  0126C6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6132  0126C8  0100               	movlb	0	; () banked
  6133  0126CA  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6134  0126CC  0100               	movlb	0	; () banked
  6135  0126CE  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6136  0126D0  50F3               	movf	prodl,w,c
  6137  0126D2  0100               	movlb	0	; () banked
  6138  0126D4  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6139                           
  6140                           ; BSR set to: 0
  6141  0126D6  C064  F060         	movff	___wmul@product,?___wmul
  6142  0126DA  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6143  0126DE  0012               	return	
  6144  0126E0                     __end_of___wmul:
  6145                           	opt stack 0
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           prodh	equ	0xFF4
  6151                           prodl	equ	0xFF3
  6152                           intcon	equ	0xFF2
  6153                           postinc0	equ	0xFEE
  6154                           wreg	equ	0xFE8
  6155                           indf1	equ	0xFE7
  6156                           postinc1	equ	0xFE6
  6157                           postdec1	equ	0xFE5
  6158                           fsr1h	equ	0xFE2
  6159                           fsr1l	equ	0xFE1
  6160                           indf2	equ	0xFDF
  6161                           postinc2	equ	0xFDE
  6162                           postdec2	equ	0xFDD
  6163                           fsr2h	equ	0xFDA
  6164                           fsr2l	equ	0xFD9
  6165                           status	equ	0xFD8
  6166                           
  6167 ;; *************** function ___lwdiv *****************
  6168 ;; Defined at:
  6169 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  dividend        2    6[BANK0 ] unsigned int 
  6172 ;;  divisor         2    8[BANK0 ] unsigned int 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  quotient        2   11[BANK0 ] unsigned int 
  6175 ;;  counter         1   10[BANK0 ] unsigned char 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  2    6[BANK0 ] unsigned int 
  6178 ;; Registers used:
  6179 ;;		wreg, status,2, status,0
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6185 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6189 ;;Total ram usage:        7 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:    4
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_tx_sendn
  6196 ;;		_my_utoa
  6197 ;;		_PWM_set
  6198 ;;		_normal_loop
  6199 ;;		_ringbuf_put_num
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text23
  6204  0121BC                     __ptext23:
  6205                           	opt stack 0
  6206  0121BC                     ___lwdiv:
  6207                           	opt stack 24
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;incstack = 0
  6211  0121BC  0E00               	movlw	0
  6212  0121BE  0100               	movlb	0	; () banked
  6213  0121C0  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6214  0121C2  0E00               	movlw	0
  6215  0121C4  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  6216                           
  6217                           ; BSR set to: 0
  6218  0121C6  0100               	movlb	0	; () banked
  6219  0121C8  5168               	movf	___lwdiv@divisor& (0+255),w,b
  6220  0121CA  0100               	movlb	0	; () banked
  6221  0121CC  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6222  0121CE  B4D8               	btfsc	status,2,c
  6223  0121D0  D02C               	goto	l1066
  6224                           
  6225                           ; BSR set to: 0
  6226  0121D2  0E01               	movlw	1
  6227  0121D4  0100               	movlb	0	; () banked
  6228  0121D6  6F6A               	movwf	___lwdiv@counter& (0+255),b
  6229  0121D8  D006               	goto	l4341
  6230  0121DA                     l4339:
  6231                           
  6232                           ; BSR set to: 0
  6233  0121DA  0100               	movlb	0	; () banked
  6234  0121DC  90D8               	bcf	status,0,c
  6235  0121DE  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
  6236  0121E0  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6237  0121E2  0100               	movlb	0	; () banked
  6238  0121E4  2B6A               	incf	___lwdiv@counter& (0+255),f,b
  6239  0121E6                     l4341:
  6240                           
  6241                           ; BSR set to: 0
  6242  0121E6  0100               	movlb	0	; () banked
  6243  0121E8  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6244  0121EA  D7F7               	goto	l4339
  6245  0121EC                     l4343:
  6246                           
  6247                           ; BSR set to: 0
  6248  0121EC  0100               	movlb	0	; () banked
  6249  0121EE  90D8               	bcf	status,0,c
  6250  0121F0  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  6251  0121F2  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6252                           
  6253                           ; BSR set to: 0
  6254  0121F4  0100               	movlb	0	; () banked
  6255  0121F6  5168               	movf	___lwdiv@divisor& (0+255),w,b
  6256  0121F8  0100               	movlb	0	; () banked
  6257  0121FA  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
  6258  0121FC  0100               	movlb	0	; () banked
  6259  0121FE  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6260  012200  0100               	movlb	0	; () banked
  6261  012202  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6262  012204  A0D8               	btfss	status,0,c
  6263  012206  D00A               	goto	l4351
  6264                           
  6265                           ; BSR set to: 0
  6266  012208  0100               	movlb	0	; () banked
  6267  01220A  5168               	movf	___lwdiv@divisor& (0+255),w,b
  6268  01220C  0100               	movlb	0	; () banked
  6269  01220E  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
  6270  012210  0100               	movlb	0	; () banked
  6271  012212  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6272  012214  0100               	movlb	0	; () banked
  6273  012216  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6274                           
  6275                           ; BSR set to: 0
  6276  012218  0100               	movlb	0	; () banked
  6277  01221A  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  6278  01221C                     l4351:
  6279                           
  6280                           ; BSR set to: 0
  6281  01221C  0100               	movlb	0	; () banked
  6282  01221E  90D8               	bcf	status,0,c
  6283  012220  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6284  012222  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
  6285                           
  6286                           ; BSR set to: 0
  6287  012224  0100               	movlb	0	; () banked
  6288  012226  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
  6289  012228  D7E1               	goto	l4343
  6290  01222A                     l1066:
  6291                           
  6292                           ; BSR set to: 0
  6293  01222A  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
  6294  01222E  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6295                           
  6296                           ; BSR set to: 0
  6297  012232  0012               	return		;funcret
  6298  012234                     __end_of___lwdiv:
  6299                           	opt stack 0
  6300                           tblptru	equ	0xFF8
  6301                           tblptrh	equ	0xFF7
  6302                           tblptrl	equ	0xFF6
  6303                           tablat	equ	0xFF5
  6304                           prodh	equ	0xFF4
  6305                           prodl	equ	0xFF3
  6306                           intcon	equ	0xFF2
  6307                           postinc0	equ	0xFEE
  6308                           wreg	equ	0xFE8
  6309                           indf1	equ	0xFE7
  6310                           postinc1	equ	0xFE6
  6311                           postdec1	equ	0xFE5
  6312                           fsr1h	equ	0xFE2
  6313                           fsr1l	equ	0xFE1
  6314                           indf2	equ	0xFDF
  6315                           postinc2	equ	0xFDE
  6316                           postdec2	equ	0xFDD
  6317                           fsr2h	equ	0xFDA
  6318                           fsr2l	equ	0xFD9
  6319                           status	equ	0xFD8
  6320                           
  6321 ;; *************** function _ADC *****************
  6322 ;; Defined at:
  6323 ;;		line 172 in file "../My_header\My_header.h"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  ch              1    wreg     unsigned char 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  ch              1   33[COMRAM] unsigned char 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  2   30[COMRAM] unsigned int 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2, status,0
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;Total ram usage:        4 bytes
  6342 ;; Hardware stack levels used:    1
  6343 ;; Hardware stack levels required when called:    4
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_normal_loop
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text24
  6352  01273E                     __ptext24:
  6353                           	opt stack 0
  6354  01273E                     _ADC:
  6355                           	opt stack 25
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;incstack = 0
  6359                           ;ADC@ch stored from wreg
  6360  01273E  6E22               	movwf	ADC@ch,c
  6361                           
  6362                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
  6363  012740  C022  F021         	movff	ADC@ch,??_ADC
  6364  012744  4621               	rlncf	??_ADC,f,c
  6365  012746  4621               	rlncf	??_ADC,f,c
  6366  012748  50C2               	movf	4034,w,c	;volatile
  6367  01274A  1821               	xorwf	??_ADC,w,c
  6368  01274C  0BC3               	andlw	-61
  6369  01274E  1821               	xorwf	??_ADC,w,c
  6370  012750  6EC2               	movwf	4034,c	;volatile
  6371                           
  6372                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
  6373  012752  80C2               	bsf	4034,0,c	;volatile
  6374                           
  6375                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
  6376  012754  9C9E               	bcf	3998,6,c	;volatile
  6377                           
  6378                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
  6379  012756  82C2               	bsf	4034,1,c	;volatile
  6380  012758                     l161:
  6381  012758  AC9E               	btfss	3998,6,c	;volatile
  6382  01275A  D7FE               	goto	l161
  6383                           
  6384                           ;My_header\My_header.h: 179: return ADRES;
  6385  01275C  CFC3 F01F          	movff	4035,?_ADC	;volatile
  6386  012760  CFC4 F020          	movff	4036,?_ADC+1	;volatile
  6387  012764  0012               	return		;funcret
  6388  012766                     __end_of_ADC:
  6389                           	opt stack 0
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           prodh	equ	0xFF4
  6395                           prodl	equ	0xFF3
  6396                           intcon	equ	0xFF2
  6397                           postinc0	equ	0xFEE
  6398                           wreg	equ	0xFE8
  6399                           indf1	equ	0xFE7
  6400                           postinc1	equ	0xFE6
  6401                           postdec1	equ	0xFE5
  6402                           fsr1h	equ	0xFE2
  6403                           fsr1l	equ	0xFE1
  6404                           indf2	equ	0xFDF
  6405                           postinc2	equ	0xFDE
  6406                           postdec2	equ	0xFDD
  6407                           fsr2h	equ	0xFDA
  6408                           fsr2l	equ	0xFD9
  6409                           status	equ	0xFD8
  6410                           
  6411 ;; *************** function _main_init *****************
  6412 ;; Defined at:
  6413 ;;		line 401 in file "PIC18F27J53-killifish_light02.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;		None               void
  6420 ;; Registers used:
  6421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;Total ram usage:        0 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    5
  6434 ;; This function calls:
  6435 ;;		_ADC_init
  6436 ;;		_OSC_init
  6437 ;;		_PWM_init
  6438 ;;		_RTCC_init
  6439 ;;		_UART_init
  6440 ;;		_ringbuf_init
  6441 ;;		_timer0_init
  6442 ;;		_timer1_init
  6443 ;;		_timer3_init
  6444 ;; This function is called by:
  6445 ;;		_main
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text25
  6450  011F0C                     __ptext25:
  6451                           	opt stack 0
  6452  011F0C                     _main_init:
  6453                           	opt stack 25
  6454                           
  6455                           ;PIC18F27J53-killifish_light02.c: 402: OSC_init();
  6456                           
  6457                           ;incstack = 0
  6458  011F0C  EC41  F094         	call	_OSC_init	;wreg free
  6459                           
  6460                           ;PIC18F27J53-killifish_light02.c: 403: TRISA = 0b11110111;
  6461  011F10  0EF7               	movlw	247
  6462  011F12  6E92               	movwf	3986,c	;volatile
  6463                           
  6464                           ;PIC18F27J53-killifish_light02.c: 404: TRISB = 0b00000000;
  6465  011F14  0E00               	movlw	0
  6466  011F16  6E93               	movwf	3987,c	;volatile
  6467                           
  6468                           ;PIC18F27J53-killifish_light02.c: 405: TRISC = 0b10111010;
  6469  011F18  0EBA               	movlw	186
  6470  011F1A  6E94               	movwf	3988,c	;volatile
  6471                           
  6472                           ;PIC18F27J53-killifish_light02.c: 406: ANCON0 = 0b11111000;
  6473  011F1C  0EF8               	movlw	248
  6474  011F1E  010F               	movlb	15	; () banked
  6475  011F20  6F48               	movwf	72,b	;volatile
  6476                           
  6477                           ; BSR set to: 15
  6478                           ;PIC18F27J53-killifish_light02.c: 407: ANCON1 = 0b00011111;
  6479  011F22  0E1F               	movlw	31
  6480  011F24  010F               	movlb	15	; () banked
  6481  011F26  6F49               	movwf	73,b	;volatile
  6482                           
  6483                           ; BSR set to: 15
  6484                           ;PIC18F27J53-killifish_light02.c: 408: INTCON2bits.RBPU = 0;
  6485  011F28  9EF1               	bcf	intcon2,7,c	;volatile
  6486                           
  6487                           ; BSR set to: 15
  6488                           ;PIC18F27J53-killifish_light02.c: 410: timer0_init(6);
  6489  011F2A  0E06               	movlw	6
  6490  011F2C  EC70  F093         	call	_timer0_init
  6491                           
  6492                           ;PIC18F27J53-killifish_light02.c: 411: timer1_init(0, 2);
  6493  011F30  0E02               	movlw	2
  6494  011F32  6E1F               	movwf	timer1_init@clock_select,c
  6495  011F34  0E00               	movlw	0
  6496  011F36  ECF6  F092         	call	_timer1_init
  6497                           
  6498                           ;PIC18F27J53-killifish_light02.c: 412: timer3_init(2);
  6499  011F3A  0E02               	movlw	2
  6500  011F3C  ECB3  F093         	call	_timer3_init
  6501                           
  6502                           ;PIC18F27J53-killifish_light02.c: 413: ADC_init(0);
  6503  011F40  0E00               	movlw	0
  6504  011F42  EC1A  F094         	call	_ADC_init
  6505                           
  6506                           ;PIC18F27J53-killifish_light02.c: 414: RTCC_init();
  6507  011F46  EC88  F093         	call	_RTCC_init	;wreg free
  6508                           
  6509                           ;PIC18F27J53-killifish_light02.c: 415: PWM_init(100);
  6510  011F4A  0E64               	movlw	100
  6511  011F4C  EC36  F08D         	call	_PWM_init
  6512                           
  6513                           ;PIC18F27J53-killifish_light02.c: 417: UART_init();
  6514  011F50  EC0A  F094         	call	_UART_init	;wreg free
  6515                           
  6516                           ;PIC18F27J53-killifish_light02.c: 418: static uint8_t txbuf[1000];
  6517                           ;PIC18F27J53-killifish_light02.c: 419: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  6518  011F54  0ED7               	movlw	low _tx_buf
  6519  011F56  0100               	movlb	0	; () banked
  6520  011F58  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6521  011F5A  0E01               	movlw	high _tx_buf
  6522  011F5C  0100               	movlb	0	; () banked
  6523  011F5E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6524  011F60  0E64               	movlw	low main_init@txbuf
  6525  011F62  0100               	movlb	0	; () banked
  6526  011F64  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6527  011F66  0E04               	movlw	high main_init@txbuf
  6528  011F68  0100               	movlb	0	; () banked
  6529  011F6A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6530  011F6C  0E03               	movlw	3
  6531  011F6E  0100               	movlb	0	; () banked
  6532  011F70  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6533  011F72  0EE8               	movlw	232
  6534  011F74  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6535  011F76  EC5C  F092         	call	_ringbuf_init	;wreg free
  6536                           
  6537                           ;PIC18F27J53-killifish_light02.c: 420: static uint8_t rxbuf[250];
  6538                           ;PIC18F27J53-killifish_light02.c: 421: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  6539  011F7A  0ECF               	movlw	low _rx_buf
  6540  011F7C  0100               	movlb	0	; () banked
  6541  011F7E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6542  011F80  0E01               	movlw	high _rx_buf
  6543  011F82  0100               	movlb	0	; () banked
  6544  011F84  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6545  011F86  0E00               	movlw	low main_init@rxbuf
  6546  011F88  0100               	movlb	0	; () banked
  6547  011F8A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6548  011F8C  0E03               	movlw	high main_init@rxbuf
  6549  011F8E  0100               	movlb	0	; () banked
  6550  011F90  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6551  011F92  0E00               	movlw	0
  6552  011F94  0100               	movlb	0	; () banked
  6553  011F96  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6554  011F98  0EFA               	movlw	250
  6555  011F9A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6556  011F9C  EC5C  F092         	call	_ringbuf_init	;wreg free
  6557  011FA0  0012               	return		;funcret
  6558  011FA2                     __end_of_main_init:
  6559                           	opt stack 0
  6560                           tblptru	equ	0xFF8
  6561                           tblptrh	equ	0xFF7
  6562                           tblptrl	equ	0xFF6
  6563                           tablat	equ	0xFF5
  6564                           prodh	equ	0xFF4
  6565                           prodl	equ	0xFF3
  6566                           intcon	equ	0xFF2
  6567                           intcon2	equ	0xFF1
  6568                           postinc0	equ	0xFEE
  6569                           wreg	equ	0xFE8
  6570                           indf1	equ	0xFE7
  6571                           postinc1	equ	0xFE6
  6572                           postdec1	equ	0xFE5
  6573                           fsr1h	equ	0xFE2
  6574                           fsr1l	equ	0xFE1
  6575                           indf2	equ	0xFDF
  6576                           postinc2	equ	0xFDE
  6577                           postdec2	equ	0xFDD
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582 ;; *************** function _timer3_init *****************
  6583 ;; Defined at:
  6584 ;;		line 85 in file "../My_header\My_header.h"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  prescaler       1    wreg     unsigned char 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  prescaler       1   31[COMRAM] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;		None               void
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6602 ;;Total ram usage:        2 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    4
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_main_init
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text26
  6613  012766                     __ptext26:
  6614                           	opt stack 0
  6615  012766                     _timer3_init:
  6616                           	opt stack 25
  6617                           
  6618                           ;incstack = 0
  6619                           ;timer3_init@prescaler stored from wreg
  6620  012766  6E20               	movwf	timer3_init@prescaler,c
  6621                           
  6622                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  6623  012768  0E3F               	movlw	-193
  6624  01276A  1679               	andwf	3961,f,c	;volatile
  6625                           
  6626                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  6627  01276C  9679               	bcf	3961,3,c	;volatile
  6628                           
  6629                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  6630  01276E  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
  6631  012772  3A1F               	swapf	??_timer3_init,f,c
  6632  012774  5079               	movf	3961,w,c	;volatile
  6633  012776  181F               	xorwf	??_timer3_init,w,c
  6634  012778  0BCF               	andlw	-49
  6635  01277A  181F               	xorwf	??_timer3_init,w,c
  6636  01277C  6E79               	movwf	3961,c	;volatile
  6637                           
  6638                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  6639  01277E  9E79               	bcf	3961,7,c	;volatile
  6640                           
  6641                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  6642  012780  8079               	bsf	3961,0,c	;volatile
  6643                           
  6644                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  6645  012782  92A2               	bcf	4002,1,c	;volatile
  6646                           
  6647                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  6648  012784  92A1               	bcf	4001,1,c	;volatile
  6649                           
  6650                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  6651  012786  82A0               	bsf	4000,1,c	;volatile
  6652                           
  6653                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  6654  012788  8CF2               	bsf	intcon,6,c	;volatile
  6655  01278A  0012               	return		;funcret
  6656  01278C                     __end_of_timer3_init:
  6657                           	opt stack 0
  6658                           tblptru	equ	0xFF8
  6659                           tblptrh	equ	0xFF7
  6660                           tblptrl	equ	0xFF6
  6661                           tablat	equ	0xFF5
  6662                           prodh	equ	0xFF4
  6663                           prodl	equ	0xFF3
  6664                           intcon	equ	0xFF2
  6665                           intcon2	equ	0xFF1
  6666                           postinc0	equ	0xFEE
  6667                           wreg	equ	0xFE8
  6668                           indf1	equ	0xFE7
  6669                           postinc1	equ	0xFE6
  6670                           postdec1	equ	0xFE5
  6671                           fsr1h	equ	0xFE2
  6672                           fsr1l	equ	0xFE1
  6673                           indf2	equ	0xFDF
  6674                           postinc2	equ	0xFDE
  6675                           postdec2	equ	0xFDD
  6676                           fsr2h	equ	0xFDA
  6677                           fsr2l	equ	0xFD9
  6678                           status	equ	0xFD8
  6679                           
  6680 ;; *************** function _timer1_init *****************
  6681 ;; Defined at:
  6682 ;;		line 54 in file "../My_header\My_header.h"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  prescaler       1    wreg     unsigned char 
  6685 ;;  clock_select    1   30[COMRAM] unsigned char 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  prescaler       1   32[COMRAM] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;		None               void
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6697 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6701 ;;Total ram usage:        3 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    4
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_main_init
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text27
  6712  0125EC                     __ptext27:
  6713                           	opt stack 0
  6714  0125EC                     _timer1_init:
  6715                           	opt stack 25
  6716                           
  6717                           ;incstack = 0
  6718                           ;timer1_init@prescaler stored from wreg
  6719  0125EC  6E21               	movwf	timer1_init@prescaler,c
  6720                           
  6721                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  6722  0125EE  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
  6723  0125F2  3A20               	swapf	??_timer1_init,f,c
  6724  0125F4  4620               	rlncf	??_timer1_init,f,c
  6725  0125F6  4620               	rlncf	??_timer1_init,f,c
  6726  0125F8  50CD               	movf	4045,w,c	;volatile
  6727  0125FA  1820               	xorwf	??_timer1_init,w,c
  6728  0125FC  0B3F               	andlw	-193
  6729  0125FE  1820               	xorwf	??_timer1_init,w,c
  6730  012600  6ECD               	movwf	4045,c	;volatile
  6731                           
  6732                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6733  012602  0E02               	movlw	2
  6734  012604  181F               	xorwf	timer1_init@clock_select,w,c
  6735  012606  A4D8               	btfss	status,2,c
  6736  012608  D002               	goto	l144
  6737  01260A  86CD               	bsf	4045,3,c	;volatile
  6738  01260C  D001               	goto	l3289
  6739  01260E                     l144:
  6740                           
  6741                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  6742  01260E  96CD               	bcf	4045,3,c	;volatile
  6743  012610                     l3289:
  6744                           
  6745                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  6746  012610  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
  6747  012614  3A20               	swapf	??_timer1_init,f,c
  6748  012616  50CD               	movf	4045,w,c	;volatile
  6749  012618  1820               	xorwf	??_timer1_init,w,c
  6750  01261A  0BCF               	andlw	-49
  6751  01261C  1820               	xorwf	??_timer1_init,w,c
  6752  01261E  6ECD               	movwf	4045,c	;volatile
  6753                           
  6754                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  6755  012620  84CD               	bsf	4045,2,c	;volatile
  6756                           
  6757                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  6758  012622  92CD               	bcf	4045,1,c	;volatile
  6759                           
  6760                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  6761  012624  80CD               	bsf	4045,0,c	;volatile
  6762                           
  6763                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  6764  012626  909F               	bcf	3999,0,c	;volatile
  6765                           
  6766                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  6767  012628  909E               	bcf	3998,0,c	;volatile
  6768                           
  6769                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  6770  01262A  809D               	bsf	3997,0,c	;volatile
  6771                           
  6772                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  6773  01262C  8CF2               	bsf	intcon,6,c	;volatile
  6774  01262E  0012               	return		;funcret
  6775  012630                     __end_of_timer1_init:
  6776                           	opt stack 0
  6777                           tblptru	equ	0xFF8
  6778                           tblptrh	equ	0xFF7
  6779                           tblptrl	equ	0xFF6
  6780                           tablat	equ	0xFF5
  6781                           prodh	equ	0xFF4
  6782                           prodl	equ	0xFF3
  6783                           intcon	equ	0xFF2
  6784                           intcon2	equ	0xFF1
  6785                           postinc0	equ	0xFEE
  6786                           wreg	equ	0xFE8
  6787                           indf1	equ	0xFE7
  6788                           postinc1	equ	0xFE6
  6789                           postdec1	equ	0xFE5
  6790                           fsr1h	equ	0xFE2
  6791                           fsr1l	equ	0xFE1
  6792                           indf2	equ	0xFDF
  6793                           postinc2	equ	0xFDE
  6794                           postdec2	equ	0xFDD
  6795                           fsr2h	equ	0xFDA
  6796                           fsr2l	equ	0xFD9
  6797                           status	equ	0xFD8
  6798                           
  6799 ;; *************** function _timer0_init *****************
  6800 ;; Defined at:
  6801 ;;		line 15 in file "../My_header\My_header.h"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  prescaler       1    wreg     unsigned char 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;  prescaler       1   31[COMRAM] unsigned char 
  6806 ;; Return value:  Size  Location     Type
  6807 ;;		None               void
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6819 ;;Total ram usage:        2 bytes
  6820 ;; Hardware stack levels used:    1
  6821 ;; Hardware stack levels required when called:    4
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_main_init
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text28
  6830  0126E0                     __ptext28:
  6831                           	opt stack 0
  6832  0126E0                     _timer0_init:
  6833                           	opt stack 25
  6834                           
  6835                           ;incstack = 0
  6836                           ;timer0_init@prescaler stored from wreg
  6837  0126E0  6E20               	movwf	timer0_init@prescaler,c
  6838                           
  6839                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  6840  0126E2  8ED5               	bsf	4053,7,c	;volatile
  6841                           
  6842                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  6843  0126E4  8CD5               	bsf	4053,6,c	;volatile
  6844                           
  6845                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  6846  0126E6  9AD5               	bcf	4053,5,c	;volatile
  6847                           
  6848                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  6849  0126E8  5020               	movf	timer0_init@prescaler,w,c
  6850  0126EA  A4D8               	btfss	status,2,c
  6851  0126EC  D002               	goto	l139
  6852                           
  6853                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  6854  0126EE  86D5               	bsf	4053,3,c	;volatile
  6855                           
  6856                           ;My_header\My_header.h: 21: } else {
  6857  0126F0  D00A               	goto	l3277
  6858  0126F2                     l139:
  6859                           
  6860                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  6861  0126F2  96D5               	bcf	4053,3,c	;volatile
  6862                           
  6863                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  6864  0126F4  C020  F01F         	movff	timer0_init@prescaler,??_timer0_init
  6865  0126F8  0EFF               	movlw	255
  6866  0126FA  261F               	addwf	??_timer0_init,f,c
  6867  0126FC  50D5               	movf	4053,w,c	;volatile
  6868  0126FE  181F               	xorwf	??_timer0_init,w,c
  6869  012700  0BF8               	andlw	-8
  6870  012702  181F               	xorwf	??_timer0_init,w,c
  6871  012704  6ED5               	movwf	4053,c	;volatile
  6872  012706                     l3277:
  6873                           
  6874                           ;My_header\My_header.h: 24: }
  6875                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  6876  012706  8AF2               	bsf	intcon,5,c	;volatile
  6877                           
  6878                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  6879  012708  94F2               	bcf	intcon,2,c	;volatile
  6880                           
  6881                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  6882  01270A  94F1               	bcf	intcon2,2,c	;volatile
  6883                           
  6884                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  6885  01270C  8CF2               	bsf	intcon,6,c	;volatile
  6886  01270E  0012               	return		;funcret
  6887  012710                     __end_of_timer0_init:
  6888                           	opt stack 0
  6889                           tblptru	equ	0xFF8
  6890                           tblptrh	equ	0xFF7
  6891                           tblptrl	equ	0xFF6
  6892                           tablat	equ	0xFF5
  6893                           prodh	equ	0xFF4
  6894                           prodl	equ	0xFF3
  6895                           intcon	equ	0xFF2
  6896                           intcon2	equ	0xFF1
  6897                           postinc0	equ	0xFEE
  6898                           wreg	equ	0xFE8
  6899                           indf1	equ	0xFE7
  6900                           postinc1	equ	0xFE6
  6901                           postdec1	equ	0xFE5
  6902                           fsr1h	equ	0xFE2
  6903                           fsr1l	equ	0xFE1
  6904                           indf2	equ	0xFDF
  6905                           postinc2	equ	0xFDE
  6906                           postdec2	equ	0xFDD
  6907                           fsr2h	equ	0xFDA
  6908                           fsr2l	equ	0xFD9
  6909                           status	equ	0xFD8
  6910                           
  6911 ;; *************** function _ringbuf_init *****************
  6912 ;; Defined at:
  6913 ;;		line 24 in file "../My_header\My_ringbuf.h"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6916 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  6917 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  6918 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), rx_loop@buf(100), 
  6919 ;;  bufsize         2    4[BANK0 ] unsigned int 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;		None               void
  6924 ;; Registers used:
  6925 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6931 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6934 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6935 ;;Total ram usage:        6 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    4
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_rx_loop
  6942 ;;		_main_init
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text29
  6947  0124B8                     __ptext29:
  6948                           	opt stack 0
  6949  0124B8                     _ringbuf_init:
  6950                           	opt stack 25
  6951                           
  6952                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  6953                           
  6954                           ;incstack = 0
  6955  0124B8  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  6956  0124BC  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  6957  0124C0  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  6958  0124C4  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  6959                           
  6960                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  6961  0124C8  0100               	movlb	0	; () banked
  6962  0124CA  EE20 F002          	lfsr	2,2
  6963  0124CE  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6964  0124D0  26D9               	addwf	fsr2l,f,c
  6965  0124D2  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6966  0124D4  22DA               	addwfc	fsr2h,f,c
  6967  0124D6  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  6968  0124DA  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  6972  0124DE  0100               	movlb	0	; () banked
  6973  0124E0  EE20 F004          	lfsr	2,4
  6974  0124E4  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6975  0124E6  26D9               	addwf	fsr2l,f,c
  6976  0124E8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6977  0124EA  22DA               	addwfc	fsr2h,f,c
  6978  0124EC  0E00               	movlw	0
  6979  0124EE  6EDE               	movwf	postinc2,c
  6980  0124F0  0E00               	movlw	0
  6981  0124F2  6EDD               	movwf	postdec2,c
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  6985  0124F4  0100               	movlb	0	; () banked
  6986  0124F6  EE20 F006          	lfsr	2,6
  6987  0124FA  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6988  0124FC  26D9               	addwf	fsr2l,f,c
  6989  0124FE  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6990  012500  22DA               	addwfc	fsr2h,f,c
  6991  012502  0E00               	movlw	0
  6992  012504  6EDE               	movwf	postinc2,c
  6993  012506  0E00               	movlw	0
  6994  012508  6EDD               	movwf	postdec2,c
  6995                           
  6996                           ; BSR set to: 0
  6997  01250A  0012               	return		;funcret
  6998  01250C                     __end_of_ringbuf_init:
  6999                           	opt stack 0
  7000                           tblptru	equ	0xFF8
  7001                           tblptrh	equ	0xFF7
  7002                           tblptrl	equ	0xFF6
  7003                           tablat	equ	0xFF5
  7004                           prodh	equ	0xFF4
  7005                           prodl	equ	0xFF3
  7006                           intcon	equ	0xFF2
  7007                           intcon2	equ	0xFF1
  7008                           postinc0	equ	0xFEE
  7009                           wreg	equ	0xFE8
  7010                           indf1	equ	0xFE7
  7011                           postinc1	equ	0xFE6
  7012                           postdec1	equ	0xFE5
  7013                           fsr1h	equ	0xFE2
  7014                           fsr1l	equ	0xFE1
  7015                           indf2	equ	0xFDF
  7016                           postinc2	equ	0xFDE
  7017                           postdec2	equ	0xFDD
  7018                           fsr2h	equ	0xFDA
  7019                           fsr2l	equ	0xFD9
  7020                           status	equ	0xFD8
  7021                           
  7022 ;; *************** function _UART_init *****************
  7023 ;; Defined at:
  7024 ;;		line 192 in file "../My_header\My_header.h"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;		None               void
  7031 ;; Registers used:
  7032 ;;		wreg, status,2
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7042 ;;Total ram usage:        0 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    4
  7045 ;; This function calls:
  7046 ;;		Nothing
  7047 ;; This function is called by:
  7048 ;;		_main_init
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text30
  7053  012814                     __ptext30:
  7054                           	opt stack 0
  7055  012814                     _UART_init:
  7056                           	opt stack 25
  7057                           
  7058                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;incstack = 0
  7062  012814  9CAD               	bcf	4013,6,c	;volatile
  7063                           
  7064                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  7065  012816  8AAD               	bsf	4013,5,c	;volatile
  7066                           
  7067                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  7068  012818  98AD               	bcf	4013,4,c	;volatile
  7069                           
  7070                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  7071  01281A  94AD               	bcf	4013,2,c	;volatile
  7072                           
  7073                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  7074  01281C  8EAC               	bsf	4012,7,c	;volatile
  7075                           
  7076                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  7077  01281E  9CAC               	bcf	4012,6,c	;volatile
  7078                           
  7079                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  7080  012820  88AC               	bsf	4012,4,c	;volatile
  7081                           
  7082                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  7083  012822  967E               	bcf	3966,3,c	;volatile
  7084                           
  7085                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  7086  012824  0E4D               	movlw	77
  7087  012826  6EB0               	movwf	4016,c	;volatile
  7088                           
  7089                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  7090  012828  0E00               	movlw	0
  7091  01282A  6E7F               	movwf	3967,c	;volatile
  7092                           
  7093                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  7094  01282C  9A9F               	bcf	3999,5,c	;volatile
  7095                           
  7096                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  7097  01282E  8A9D               	bsf	3997,5,c	;volatile
  7098                           
  7099                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  7100  012830  8CF2               	bsf	intcon,6,c	;volatile
  7101  012832  0012               	return		;funcret
  7102  012834                     __end_of_UART_init:
  7103                           	opt stack 0
  7104                           tblptru	equ	0xFF8
  7105                           tblptrh	equ	0xFF7
  7106                           tblptrl	equ	0xFF6
  7107                           tablat	equ	0xFF5
  7108                           prodh	equ	0xFF4
  7109                           prodl	equ	0xFF3
  7110                           intcon	equ	0xFF2
  7111                           intcon2	equ	0xFF1
  7112                           postinc0	equ	0xFEE
  7113                           wreg	equ	0xFE8
  7114                           indf1	equ	0xFE7
  7115                           postinc1	equ	0xFE6
  7116                           postdec1	equ	0xFE5
  7117                           fsr1h	equ	0xFE2
  7118                           fsr1l	equ	0xFE1
  7119                           indf2	equ	0xFDF
  7120                           postinc2	equ	0xFDE
  7121                           postdec2	equ	0xFDD
  7122                           fsr2h	equ	0xFDA
  7123                           fsr2l	equ	0xFD9
  7124                           status	equ	0xFD8
  7125                           
  7126 ;; *************** function _RTCC_init *****************
  7127 ;; Defined at:
  7128 ;;		line 56 in file "../My_header\My_RTCC.h"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;		None
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;		None               void
  7135 ;; Registers used:
  7136 ;;		wreg, status,2
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7146 ;;Total ram usage:        0 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    4
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_main_init
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text31
  7157  012710                     __ptext31:
  7158                           	opt stack 0
  7159  012710                     _RTCC_init:
  7160                           	opt stack 25
  7161                           
  7162                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  7163                           
  7164                           ;incstack = 0
  7165  012710  010F               	movlb	15	; () banked
  7166  012712  8B3F               	bsf	63,5,b	;volatile
  7167                           
  7168                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  7169  012714  010F               	movlb	15	; () banked
  7170  012716  BB3F               	btfsc	63,5,b	;volatile
  7171  012718  D006               	goto	l3415
  7172                           
  7173                           ; BSR set to: 15
  7174                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  7175  01271A  0E55               	movlw	85
  7176  01271C  6EA7               	movwf	4007,c	;volatile
  7177                           
  7178                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  7179  01271E  0EAA               	movlw	170
  7180  012720  6EA7               	movwf	4007,c	;volatile
  7181                           
  7182                           ; BSR set to: 15
  7183                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  7184  012722  010F               	movlb	15	; () banked
  7185  012724  8B3F               	bsf	63,5,b	;volatile
  7186  012726                     l3415:
  7187                           
  7188                           ; BSR set to: 15
  7189                           ;My_header\My_RTCC.h: 62: }
  7190                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  7191  012726  010F               	movlb	15	; () banked
  7192  012728  8F3F               	bsf	63,7,b	;volatile
  7193                           
  7194                           ; BSR set to: 15
  7195                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  7196  01272A  010F               	movlb	15	; () banked
  7197  01272C  953F               	bcf	63,2,b	;volatile
  7198                           
  7199                           ; BSR set to: 15
  7200                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  7201  01272E  010F               	movlb	15	; () banked
  7202  012730  833C               	bsf	60,1,b	;volatile
  7203                           
  7204                           ; BSR set to: 15
  7205                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  7206  012732  010F               	movlb	15	; () banked
  7207  012734  853C               	bsf	60,2,b	;volatile
  7208                           
  7209                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  7210  012736  0E00               	movlw	0
  7211  012738  010F               	movlb	15	; () banked
  7212  01273A  6F3E               	movwf	62,b	;volatile
  7213                           
  7214                           ; BSR set to: 15
  7215  01273C  0012               	return		;funcret
  7216  01273E                     __end_of_RTCC_init:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodh	equ	0xFF4
  7223                           prodl	equ	0xFF3
  7224                           intcon	equ	0xFF2
  7225                           intcon2	equ	0xFF1
  7226                           postinc0	equ	0xFEE
  7227                           wreg	equ	0xFE8
  7228                           indf1	equ	0xFE7
  7229                           postinc1	equ	0xFE6
  7230                           postdec1	equ	0xFE5
  7231                           fsr1h	equ	0xFE2
  7232                           fsr1l	equ	0xFE1
  7233                           indf2	equ	0xFDF
  7234                           postinc2	equ	0xFDE
  7235                           postdec2	equ	0xFDD
  7236                           fsr2h	equ	0xFDA
  7237                           fsr2l	equ	0xFD9
  7238                           status	equ	0xFD8
  7239                           
  7240 ;; *************** function _PWM_init *****************
  7241 ;; Defined at:
  7242 ;;		line 85 in file "PIC18F27J53-killifish_light02.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  PR              1    wreg     unsigned char 
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  PR              1   30[COMRAM] unsigned char 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;		None               void
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;Total ram usage:        1 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    4
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_main_init
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text32
  7271  011A6C                     __ptext32:
  7272                           	opt stack 0
  7273  011A6C                     _PWM_init:
  7274                           	opt stack 25
  7275                           
  7276                           ; BSR set to: 15
  7277                           ;incstack = 0
  7278                           ;PWM_init@PR stored from wreg
  7279  011A6C  6E1F               	movwf	PWM_init@PR,c
  7280                           
  7281                           ;PIC18F27J53-killifish_light02.c: 86: PPSCONbits.IOLOCK = 0;
  7282  011A6E  010E               	movlb	14	; () banked
  7283  011A70  91BF               	bcf	191,0,b	;volatile
  7284                           
  7285                           ;PIC18F27J53-killifish_light02.c: 87: if (PPSCONbits.IOLOCK != 0) {
  7286  011A72  010E               	movlb	14	; () banked
  7287  011A74  A1BF               	btfss	191,0,b	;volatile
  7288  011A76  D006               	goto	l516
  7289                           
  7290                           ; BSR set to: 14
  7291                           ;PIC18F27J53-killifish_light02.c: 88: EECON2 = 0x55;
  7292  011A78  0E55               	movlw	85
  7293  011A7A  6EA7               	movwf	4007,c	;volatile
  7294                           
  7295                           ;PIC18F27J53-killifish_light02.c: 89: EECON2 = 0xAA;
  7296  011A7C  0EAA               	movlw	170
  7297  011A7E  6EA7               	movwf	4007,c	;volatile
  7298                           
  7299                           ; BSR set to: 14
  7300                           ;PIC18F27J53-killifish_light02.c: 90: PPSCONbits.IOLOCK = 0;
  7301  011A80  010E               	movlb	14	; () banked
  7302  011A82  91BF               	bcf	191,0,b	;volatile
  7303  011A84                     l516:
  7304                           
  7305                           ; BSR set to: 14
  7306                           ;PIC18F27J53-killifish_light02.c: 91: }
  7307                           ;PIC18F27J53-killifish_light02.c: 93: RPOR3 = 14;
  7308  011A84  0E0E               	movlw	14
  7309  011A86  010E               	movlb	14	; () banked
  7310  011A88  6FC3               	movwf	195,b	;volatile
  7311                           
  7312                           ;PIC18F27J53-killifish_light02.c: 94: RPOR4 = 18;
  7313  011A8A  0E12               	movlw	18
  7314  011A8C  010E               	movlb	14	; () banked
  7315  011A8E  6FC4               	movwf	196,b	;volatile
  7316                           
  7317                           ;PIC18F27J53-killifish_light02.c: 95: RPOR5 = 22;
  7318  011A90  0E16               	movlw	22
  7319  011A92  010E               	movlb	14	; () banked
  7320  011A94  6FC5               	movwf	197,b	;volatile
  7321                           
  7322                           ; BSR set to: 14
  7323                           ;PIC18F27J53-killifish_light02.c: 97: CCP1CONbits.CCP1M = 12;
  7324  011A96  50BA               	movf	4026,w,c	;volatile
  7325  011A98  0BF0               	andlw	-16
  7326  011A9A  090C               	iorlw	12
  7327  011A9C  6EBA               	movwf	4026,c	;volatile
  7328                           
  7329                           ; BSR set to: 14
  7330                           ;PIC18F27J53-killifish_light02.c: 98: CCP1CONbits.P1M = 0;
  7331  011A9E  0E3F               	movlw	-193
  7332  011AA0  16BA               	andwf	4026,f,c	;volatile
  7333                           
  7334                           ; BSR set to: 14
  7335                           ;PIC18F27J53-killifish_light02.c: 99: CCPTMRS0bits.C1TSEL = 0;
  7336  011AA2  010F               	movlb	15	; () banked
  7337  011AA4  9152               	bcf	82,0,b	;volatile
  7338  011AA6  9352               	bcf	82,1,b	;volatile
  7339  011AA8  9552               	bcf	82,2,b	;volatile
  7340                           
  7341                           ; BSR set to: 15
  7342                           ;PIC18F27J53-killifish_light02.c: 100: CCPR1Lbits.CCPR1L = 0;
  7343  011AAA  0E00               	movlw	0
  7344  011AAC  6EBB               	movwf	4027,c	;volatile
  7345                           
  7346                           ; BSR set to: 15
  7347                           ;PIC18F27J53-killifish_light02.c: 101: CCP1CONbits.DC1B = 0;
  7348  011AAE  0ECF               	movlw	-49
  7349  011AB0  16BA               	andwf	4026,f,c	;volatile
  7350                           
  7351                           ; BSR set to: 15
  7352                           ;PIC18F27J53-killifish_light02.c: 103: CCP2CONbits.CCP2M = 12;
  7353  011AB2  50B4               	movf	4020,w,c	;volatile
  7354  011AB4  0BF0               	andlw	-16
  7355  011AB6  090C               	iorlw	12
  7356  011AB8  6EB4               	movwf	4020,c	;volatile
  7357                           
  7358                           ; BSR set to: 15
  7359                           ;PIC18F27J53-killifish_light02.c: 104: CCP2CONbits.P2M = 0;
  7360  011ABA  0E3F               	movlw	-193
  7361  011ABC  16B4               	andwf	4020,f,c	;volatile
  7362                           
  7363                           ; BSR set to: 15
  7364                           ;PIC18F27J53-killifish_light02.c: 105: CCPTMRS0bits.C2TSEL = 0;
  7365  011ABE  010F               	movlb	15	; () banked
  7366  011AC0  9752               	bcf	82,3,b	;volatile
  7367  011AC2  9952               	bcf	82,4,b	;volatile
  7368  011AC4  9B52               	bcf	82,5,b	;volatile
  7369                           
  7370                           ; BSR set to: 15
  7371                           ;PIC18F27J53-killifish_light02.c: 106: CCPR2Lbits.CCPR2L = 0;
  7372  011AC6  0E00               	movlw	0
  7373  011AC8  6EB5               	movwf	4021,c	;volatile
  7374                           
  7375                           ; BSR set to: 15
  7376                           ;PIC18F27J53-killifish_light02.c: 107: CCP2CONbits.DC2B = 0;
  7377  011ACA  0ECF               	movlw	-49
  7378  011ACC  16B4               	andwf	4020,f,c	;volatile
  7379                           
  7380                           ; BSR set to: 15
  7381                           ;PIC18F27J53-killifish_light02.c: 109: CCP3CONbits.CCP3M = 12;
  7382  011ACE  010F               	movlb	15	; () banked
  7383  011AD0  5115               	movf	21,w,b	;volatile
  7384  011AD2  0BF0               	andlw	-16
  7385  011AD4  090C               	iorlw	12
  7386  011AD6  6F15               	movwf	21,b	;volatile
  7387                           
  7388                           ; BSR set to: 15
  7389                           ;PIC18F27J53-killifish_light02.c: 110: CCP3CONbits.P3M = 0;
  7390  011AD8  0E3F               	movlw	-193
  7391  011ADA  010F               	movlb	15	; () banked
  7392  011ADC  1715               	andwf	21,f,b	;volatile
  7393                           
  7394                           ; BSR set to: 15
  7395                           ;PIC18F27J53-killifish_light02.c: 111: CCPTMRS0bits.C3TSEL = 0;
  7396  011ADE  0E3F               	movlw	-193
  7397  011AE0  010F               	movlb	15	; () banked
  7398  011AE2  1752               	andwf	82,f,b	;volatile
  7399                           
  7400                           ; BSR set to: 15
  7401                           ;PIC18F27J53-killifish_light02.c: 112: CCPR3Lbits.CCPR3L = 0;
  7402  011AE4  0E00               	movlw	0
  7403  011AE6  010F               	movlb	15	; () banked
  7404  011AE8  6F16               	movwf	22,b	;volatile
  7405                           
  7406                           ; BSR set to: 15
  7407                           ;PIC18F27J53-killifish_light02.c: 113: CCP3CONbits.DC3B = 0;
  7408  011AEA  0ECF               	movlw	-49
  7409  011AEC  010F               	movlb	15	; () banked
  7410  011AEE  1715               	andwf	21,f,b	;volatile
  7411                           
  7412                           ; BSR set to: 15
  7413                           ;PIC18F27J53-killifish_light02.c: 115: CCP4CONbits.CCP4M = 12;
  7414  011AF0  010F               	movlb	15	; () banked
  7415  011AF2  5112               	movf	18,w,b	;volatile
  7416  011AF4  0BF0               	andlw	-16
  7417  011AF6  090C               	iorlw	12
  7418  011AF8  6F12               	movwf	18,b	;volatile
  7419                           
  7420                           ; BSR set to: 15
  7421                           ;PIC18F27J53-killifish_light02.c: 116: CCPTMRS1bits.C4TSEL = 0;
  7422  011AFA  0EFC               	movlw	-4
  7423  011AFC  010F               	movlb	15	; () banked
  7424  011AFE  1751               	andwf	81,f,b	;volatile
  7425                           
  7426                           ; BSR set to: 15
  7427                           ;PIC18F27J53-killifish_light02.c: 117: CCPR4Lbits.CCPR4L = 0;
  7428  011B00  0E00               	movlw	0
  7429  011B02  010F               	movlb	15	; () banked
  7430  011B04  6F13               	movwf	19,b	;volatile
  7431                           
  7432                           ; BSR set to: 15
  7433                           ;PIC18F27J53-killifish_light02.c: 118: CCP4CONbits.DC4B = 0;
  7434  011B06  0ECF               	movlw	-49
  7435  011B08  010F               	movlb	15	; () banked
  7436  011B0A  1712               	andwf	18,f,b	;volatile
  7437                           
  7438                           ; BSR set to: 15
  7439                           ;PIC18F27J53-killifish_light02.c: 120: T2CONbits.T2OUTPS = 0;
  7440  011B0C  96CA               	bcf	4042,3,c	;volatile
  7441  011B0E  98CA               	bcf	4042,4,c	;volatile
  7442  011B10  9ACA               	bcf	4042,5,c	;volatile
  7443  011B12  9CCA               	bcf	4042,6,c	;volatile
  7444                           
  7445                           ; BSR set to: 15
  7446                           ;PIC18F27J53-killifish_light02.c: 121: T2CONbits.T2CKPS = 2;
  7447  011B14  50CA               	movf	4042,w,c	;volatile
  7448  011B16  0BFC               	andlw	-4
  7449  011B18  0902               	iorlw	2
  7450  011B1A  6ECA               	movwf	4042,c	;volatile
  7451                           
  7452                           ; BSR set to: 15
  7453                           ;PIC18F27J53-killifish_light02.c: 122: PR2 = PR - 1;
  7454  011B1C  041F               	decf	PWM_init@PR,w,c
  7455  011B1E  6ECB               	movwf	4043,c	;volatile
  7456                           
  7457                           ; BSR set to: 15
  7458                           ;PIC18F27J53-killifish_light02.c: 123: T2CONbits.TMR2ON = 1;
  7459  011B20  84CA               	bsf	4042,2,c	;volatile
  7460                           
  7461                           ; BSR set to: 15
  7462  011B22  0012               	return		;funcret
  7463  011B24                     __end_of_PWM_init:
  7464                           	opt stack 0
  7465                           tblptru	equ	0xFF8
  7466                           tblptrh	equ	0xFF7
  7467                           tblptrl	equ	0xFF6
  7468                           tablat	equ	0xFF5
  7469                           prodh	equ	0xFF4
  7470                           prodl	equ	0xFF3
  7471                           intcon	equ	0xFF2
  7472                           intcon2	equ	0xFF1
  7473                           postinc0	equ	0xFEE
  7474                           wreg	equ	0xFE8
  7475                           indf1	equ	0xFE7
  7476                           postinc1	equ	0xFE6
  7477                           postdec1	equ	0xFE5
  7478                           fsr1h	equ	0xFE2
  7479                           fsr1l	equ	0xFE1
  7480                           indf2	equ	0xFDF
  7481                           postinc2	equ	0xFDE
  7482                           postdec2	equ	0xFDD
  7483                           fsr2h	equ	0xFDA
  7484                           fsr2l	equ	0xFD9
  7485                           status	equ	0xFD8
  7486                           
  7487 ;; *************** function _OSC_init *****************
  7488 ;; Defined at:
  7489 ;;		line 119 in file "../My_header\My_header.h"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;		None               void
  7496 ;; Registers used:
  7497 ;;		wreg, status,2
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;Total ram usage:        0 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    4
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_main_init
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text33
  7518  012882                     __ptext33:
  7519                           	opt stack 0
  7520  012882                     _OSC_init:
  7521                           	opt stack 25
  7522                           
  7523                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  7524                           
  7525                           ; BSR set to: 15
  7526                           ;incstack = 0
  7527  012882  88D3               	bsf	4051,4,c	;volatile
  7528  012884  8AD3               	bsf	4051,5,c	;volatile
  7529  012886  8CD3               	bsf	4051,6,c	;volatile
  7530                           
  7531                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  7532  012888  8C9B               	bsf	3995,6,c	;volatile
  7533                           
  7534                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  7535  01288A  0EFC               	movlw	-4
  7536  01288C  16D3               	andwf	4051,f,c	;volatile
  7537  01288E  0012               	return		;funcret
  7538  012890                     __end_of_OSC_init:
  7539                           	opt stack 0
  7540                           tblptru	equ	0xFF8
  7541                           tblptrh	equ	0xFF7
  7542                           tblptrl	equ	0xFF6
  7543                           tablat	equ	0xFF5
  7544                           prodh	equ	0xFF4
  7545                           prodl	equ	0xFF3
  7546                           intcon	equ	0xFF2
  7547                           intcon2	equ	0xFF1
  7548                           postinc0	equ	0xFEE
  7549                           wreg	equ	0xFE8
  7550                           indf1	equ	0xFE7
  7551                           postinc1	equ	0xFE6
  7552                           postdec1	equ	0xFE5
  7553                           fsr1h	equ	0xFE2
  7554                           fsr1l	equ	0xFE1
  7555                           indf2	equ	0xFDF
  7556                           postinc2	equ	0xFDE
  7557                           postdec2	equ	0xFDD
  7558                           fsr2h	equ	0xFDA
  7559                           fsr2l	equ	0xFD9
  7560                           status	equ	0xFD8
  7561                           
  7562 ;; *************** function _ADC_init *****************
  7563 ;; Defined at:
  7564 ;;		line 149 in file "../My_header\My_header.h"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  p_ref           1    wreg     unsigned char 
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;  p_ref           1   30[COMRAM] unsigned char 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;		None               void
  7571 ;; Registers used:
  7572 ;;		wreg, status,2
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7582 ;;Total ram usage:        1 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    4
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_main_init
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text34
  7593  012834                     __ptext34:
  7594                           	opt stack 0
  7595  012834                     _ADC_init:
  7596                           	opt stack 25
  7597                           
  7598                           ;incstack = 0
  7599                           ;ADC_init@p_ref stored from wreg
  7600  012834  6E1F               	movwf	ADC_init@p_ref,c
  7601                           
  7602                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  7603  012836  9EC2               	bcf	4034,7,c	;volatile
  7604                           
  7605                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  7606  012838  B01F               	btfsc	ADC_init@p_ref,0,c
  7607  01283A  D002               	bra	u2785
  7608  01283C  9CC2               	bcf	4034,6,c	;volatile
  7609  01283E  D001               	bra	u2786
  7610  012840                     u2785:
  7611  012840  8CC2               	bsf	4034,6,c	;volatile
  7612  012842                     u2786:
  7613                           
  7614                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  7615  012842  8EC1               	bsf	4033,7,c	;volatile
  7616                           
  7617                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  7618  012844  9CC1               	bcf	4033,6,c	;volatile
  7619                           
  7620                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  7621  012846  50C1               	movf	4033,w,c	;volatile
  7622  012848  0BF8               	andlw	-8
  7623  01284A  0906               	iorlw	6
  7624  01284C  6EC1               	movwf	4033,c	;volatile
  7625  01284E  0012               	return		;funcret
  7626  012850                     __end_of_ADC_init:
  7627                           	opt stack 0
  7628                           tblptru	equ	0xFF8
  7629                           tblptrh	equ	0xFF7
  7630                           tblptrl	equ	0xFF6
  7631                           tablat	equ	0xFF5
  7632                           prodh	equ	0xFF4
  7633                           prodl	equ	0xFF3
  7634                           intcon	equ	0xFF2
  7635                           intcon2	equ	0xFF1
  7636                           postinc0	equ	0xFEE
  7637                           wreg	equ	0xFE8
  7638                           indf1	equ	0xFE7
  7639                           postinc1	equ	0xFE6
  7640                           postdec1	equ	0xFE5
  7641                           fsr1h	equ	0xFE2
  7642                           fsr1l	equ	0xFE1
  7643                           indf2	equ	0xFDF
  7644                           postinc2	equ	0xFDE
  7645                           postdec2	equ	0xFDD
  7646                           fsr2h	equ	0xFDA
  7647                           fsr2l	equ	0xFD9
  7648                           status	equ	0xFD8
  7649                           
  7650 ;; *************** function _RTCC_loop *****************
  7651 ;; Defined at:
  7652 ;;		line 387 in file "../My_header\My_RTCC.h"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;		None
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;		None
  7657 ;; Return value:  Size  Location     Type
  7658 ;;		None               void
  7659 ;; Registers used:
  7660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;Total ram usage:        0 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    8
  7673 ;; This function calls:
  7674 ;;		_RTCC_from_RTCC
  7675 ;; This function is called by:
  7676 ;;		_main
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text35
  7681  012630                     __ptext35:
  7682                           	opt stack 0
  7683  012630                     _RTCC_loop:
  7684                           	opt stack 22
  7685  012630                     l451:
  7686  012630  010F               	movlb	15	; () banked
  7687  012632  B93F               	btfsc	63,4,b	;volatile
  7688  012634  D7FD               	goto	l451
  7689                           
  7690                           ; BSR set to: 15
  7691                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
  7692                           
  7693                           ; BSR set to: 15
  7694  012636  0E00               	movlw	0
  7695  012638  B73F               	btfsc	63,3,b	;volatile
  7696  01263A  0E01               	movlw	1
  7697  01263C  0100               	movlb	0	; () banked
  7698  01263E  6FB2               	movwf	_halfsec& (0+255),b
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
  7702  012640  0100               	movlb	0	; () banked
  7703  012642  51B2               	movf	_halfsec& (0+255),w,b
  7704  012644  1827               	xorwf	RTCC_loop@prev_halfsec,w,c
  7705  012646  B4D8               	btfsc	status,2,c
  7706  012648  0012               	return	
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
  7710  01264A  C0B2  F027         	movff	_halfsec,RTCC_loop@prev_halfsec
  7711                           
  7712                           ;My_header\My_RTCC.h: 393: colon = halfsec;
  7713  01264E  C0B2  F028         	movff	_halfsec,_colon
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
  7717  012652  0E01               	movlw	1
  7718  012654  6E2E               	movwf	_time_change_flag,c
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
  7722  012656  0E31               	movlw	low _caltime_now
  7723  012658  0100               	movlb	0	; () banked
  7724  01265A  6F83               	movwf	RTCC_from_RTCC@ct& (0+255),b
  7725  01265C  0E00               	movlw	high _caltime_now
  7726  01265E  0100               	movlb	0	; () banked
  7727  012660  6F84               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  7728  012662  0EB4               	movlw	low _epoch_now
  7729  012664  0100               	movlb	0	; () banked
  7730  012666  6F85               	movwf	RTCC_from_RTCC@ep& (0+255),b
  7731  012668  0E00               	movlw	high _epoch_now
  7732  01266A  0100               	movlb	0	; () banked
  7733  01266C  6F86               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  7734  01266E  ECD7  F093         	call	_RTCC_from_RTCC	;wreg free
  7735  012672  0012               	return	
  7736  012674                     __end_of_RTCC_loop:
  7737                           	opt stack 0
  7738                           tblptru	equ	0xFF8
  7739                           tblptrh	equ	0xFF7
  7740                           tblptrl	equ	0xFF6
  7741                           tablat	equ	0xFF5
  7742                           prodh	equ	0xFF4
  7743                           prodl	equ	0xFF3
  7744                           intcon	equ	0xFF2
  7745                           intcon2	equ	0xFF1
  7746                           postinc0	equ	0xFEE
  7747                           wreg	equ	0xFE8
  7748                           indf1	equ	0xFE7
  7749                           postinc1	equ	0xFE6
  7750                           postdec1	equ	0xFE5
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           indf2	equ	0xFDF
  7754                           postinc2	equ	0xFDE
  7755                           postdec2	equ	0xFDD
  7756                           fsr2h	equ	0xFDA
  7757                           fsr2l	equ	0xFD9
  7758                           status	equ	0xFD8
  7759                           
  7760 ;; *************** function _RTCC_from_RTCC *****************
  7761 ;; Defined at:
  7762 ;;		line 231 in file "../My_header\My_RTCC.h"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  ct              2   35[BANK0 ] PTR struct .
  7765 ;;		 -> caltime_now(7), 
  7766 ;;  ep              2   37[BANK0 ] PTR unsigned long 
  7767 ;;		 -> epoch_now(4), 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;		None               void
  7772 ;; Registers used:
  7773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7779 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;Total ram usage:        4 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    7
  7786 ;; This function calls:
  7787 ;;		_RTCC_to_caltime
  7788 ;;		_caltime_to_epoch
  7789 ;; This function is called by:
  7790 ;;		_RTCC_loop
  7791 ;;		_print_time
  7792 ;;		_normal_loop
  7793 ;;		_main
  7794 ;;		_RTCC_adjust_time_inc
  7795 ;;		_RTCC_adjust_time_dec
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text36
  7800  0127AE                     __ptext36:
  7801                           	opt stack 0
  7802  0127AE                     _RTCC_from_RTCC:
  7803                           	opt stack 20
  7804                           
  7805                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  7806                           
  7807                           ;incstack = 0
  7808  0127AE  C083  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  7809  0127B2  C084  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  7810  0127B6  EC43  F08E         	call	_RTCC_to_caltime	;wreg free
  7811                           
  7812                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  7813  0127BA  C083  F074         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  7814  0127BE  C084  F075         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  7815  0127C2  C085  F076         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  7816  0127C6  C086  F077         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  7817  0127CA  EC6D  F085         	call	_caltime_to_epoch	;wreg free
  7818  0127CE  0012               	return		;funcret
  7819  0127D0                     __end_of_RTCC_from_RTCC:
  7820                           	opt stack 0
  7821                           tblptru	equ	0xFF8
  7822                           tblptrh	equ	0xFF7
  7823                           tblptrl	equ	0xFF6
  7824                           tablat	equ	0xFF5
  7825                           prodh	equ	0xFF4
  7826                           prodl	equ	0xFF3
  7827                           intcon	equ	0xFF2
  7828                           intcon2	equ	0xFF1
  7829                           postinc0	equ	0xFEE
  7830                           wreg	equ	0xFE8
  7831                           indf1	equ	0xFE7
  7832                           postinc1	equ	0xFE6
  7833                           postdec1	equ	0xFE5
  7834                           fsr1h	equ	0xFE2
  7835                           fsr1l	equ	0xFE1
  7836                           indf2	equ	0xFDF
  7837                           postinc2	equ	0xFDE
  7838                           postdec2	equ	0xFDD
  7839                           fsr2h	equ	0xFDA
  7840                           fsr2l	equ	0xFD9
  7841                           status	equ	0xFD8
  7842                           
  7843 ;; *************** function _caltime_to_epoch *****************
  7844 ;; Defined at:
  7845 ;;		line 211 in file "../My_header\My_RTCC.h"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  ct              2   20[BANK0 ] PTR struct .
  7848 ;;		 -> caltime_now(7), 
  7849 ;;  ep              2   22[BANK0 ] PTR unsigned long 
  7850 ;;		 -> epoch_now(4), 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  month           1   34[BANK0 ] unsigned char 
  7853 ;;  month           1   29[BANK0 ] unsigned char 
  7854 ;;  year            1   28[BANK0 ] unsigned char 
  7855 ;;  epoch           4   30[BANK0 ] unsigned long 
  7856 ;; Return value:  Size  Location     Type
  7857 ;;		None               void
  7858 ;; Registers used:
  7859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7865 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7866 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7868 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;Total ram usage:       15 bytes
  7870 ;; Hardware stack levels used:    1
  7871 ;; Hardware stack levels required when called:    6
  7872 ;; This function calls:
  7873 ;;		___lmul
  7874 ;;		_month_length
  7875 ;; This function is called by:
  7876 ;;		_RTCC_from_RTCC
  7877 ;;		_RTCC_from_caltime
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text37
  7882  010ADA                     __ptext37:
  7883                           	opt stack 0
  7884  010ADA                     _caltime_to_epoch:
  7885                           	opt stack 20
  7886                           
  7887                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  7888                           
  7889                           ;incstack = 0
  7890  010ADA  0E00               	movlw	0
  7891  010ADC  0100               	movlb	0	; () banked
  7892  010ADE  6F7E               	movwf	caltime_to_epoch@epoch& (0+255),b
  7893  010AE0  0E00               	movlw	0
  7894  010AE2  6F7F               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  7895  010AE4  0E00               	movlw	0
  7896  010AE6  6F80               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  7897  010AE8  0E00               	movlw	0
  7898  010AEA  6F81               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  7899                           
  7900                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  7901  010AEC  0E00               	movlw	0
  7902  010AEE  0100               	movlb	0	; () banked
  7903  010AF0  6F7C               	movwf	caltime_to_epoch@year& (0+255),b
  7904  010AF2  D037               	goto	l4411
  7905  010AF4                     l4397:
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  7909  010AF4  0E01               	movlw	1
  7910  010AF6  0100               	movlb	0	; () banked
  7911  010AF8  6F82               	movwf	caltime_to_epoch@month& (0+255),b
  7912  010AFA                     l4399:
  7913                           
  7914                           ; BSR set to: 0
  7915  010AFA  0E0C               	movlw	12
  7916  010AFC  0100               	movlb	0	; () banked
  7917  010AFE  6582               	cpfsgt	caltime_to_epoch@month& (0+255),b
  7918  010B00  D001               	goto	l4403
  7919  010B02  D02D               	goto	l4409
  7920  010B04                     l4403:
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  7924  010B04  C082  F062         	movff	caltime_to_epoch@month,month_length@month
  7925  010B08  0100               	movlb	0	; () banked
  7926  010B0A  517C               	movf	caltime_to_epoch@year& (0+255),w,b
  7927  010B0C  ECB4  F08B         	call	_month_length
  7928  010B10  0100               	movlb	0	; () banked
  7929  010B12  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  7930  010B14  0100               	movlb	0	; () banked
  7931  010B16  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  7932  010B18  0100               	movlb	0	; () banked
  7933  010B1A  6F68               	movwf	___lmul@multiplier& (0+255),b
  7934  010B1C  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  7935  010B1E  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  7936  010B20  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  7937  010B22  0E80               	movlw	128
  7938  010B24  0100               	movlb	0	; () banked
  7939  010B26  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  7940  010B28  0E51               	movlw	81
  7941  010B2A  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7942  010B2C  0E01               	movlw	1
  7943  010B2E  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7944  010B30  0E00               	movlw	0
  7945  010B32  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7946  010B34  EC1A  F091         	call	___lmul	;wreg free
  7947  010B38  0100               	movlb	0	; () banked
  7948  010B3A  5168               	movf	?___lmul& (0+255),w,b
  7949  010B3C  0100               	movlb	0	; () banked
  7950  010B3E  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  7951  010B40  0100               	movlb	0	; () banked
  7952  010B42  5169               	movf	(?___lmul+1)& (0+255),w,b
  7953  010B44  0100               	movlb	0	; () banked
  7954  010B46  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  7955  010B48  0100               	movlb	0	; () banked
  7956  010B4A  516A               	movf	(?___lmul+2)& (0+255),w,b
  7957  010B4C  0100               	movlb	0	; () banked
  7958  010B4E  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  7959  010B50  0100               	movlb	0	; () banked
  7960  010B52  516B               	movf	(?___lmul+3)& (0+255),w,b
  7961  010B54  0100               	movlb	0	; () banked
  7962  010B56  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  7963                           
  7964                           ; BSR set to: 0
  7965  010B58  0100               	movlb	0	; () banked
  7966  010B5A  2B82               	incf	caltime_to_epoch@month& (0+255),f,b
  7967  010B5C  D7CE               	goto	l4399
  7968  010B5E                     l4409:
  7969                           
  7970                           ; BSR set to: 0
  7971  010B5E  0100               	movlb	0	; () banked
  7972  010B60  2B7C               	incf	caltime_to_epoch@year& (0+255),f,b
  7973  010B62                     l4411:
  7974                           
  7975                           ; BSR set to: 0
  7976  010B62  0100               	movlb	0	; () banked
  7977  010B64  EE20 F006          	lfsr	2,6
  7978  010B68  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  7979  010B6A  26D9               	addwf	fsr2l,f,c
  7980  010B6C  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  7981  010B6E  22DA               	addwfc	fsr2h,f,c
  7982  010B70  50DE               	movf	postinc2,w,c
  7983  010B72  0100               	movlb	0	; () banked
  7984  010B74  5D7C               	subwf	caltime_to_epoch@year& (0+255),w,b
  7985  010B76  A0D8               	btfss	status,0,c
  7986  010B78  D7BD               	goto	l4397
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;My_header\My_RTCC.h: 216: }
  7990                           ;My_header\My_RTCC.h: 217: }
  7991                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  7992                           
  7993                           ; BSR set to: 0
  7994  010B7A  0E01               	movlw	1
  7995  010B7C  0100               	movlb	0	; () banked
  7996  010B7E  6F7D               	movwf	caltime_to_epoch@month_2065& (0+255),b
  7997  010B80  D032               	goto	l4419
  7998  010B82                     l4415:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  8002  010B82  C07D  F062         	movff	caltime_to_epoch@month_2065,month_length@month
  8003  010B86  0100               	movlb	0	; () banked
  8004  010B88  EE20 F006          	lfsr	2,6
  8005  010B8C  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8006  010B8E  26D9               	addwf	fsr2l,f,c
  8007  010B90  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8008  010B92  22DA               	addwfc	fsr2h,f,c
  8009  010B94  50DF               	movf	indf2,w,c
  8010  010B96  ECB4  F08B         	call	_month_length
  8011  010B9A  0100               	movlb	0	; () banked
  8012  010B9C  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8013  010B9E  0100               	movlb	0	; () banked
  8014  010BA0  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8015  010BA2  0100               	movlb	0	; () banked
  8016  010BA4  6F68               	movwf	___lmul@multiplier& (0+255),b
  8017  010BA6  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  8018  010BA8  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  8019  010BAA  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  8020  010BAC  0E80               	movlw	128
  8021  010BAE  0100               	movlb	0	; () banked
  8022  010BB0  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8023  010BB2  0E51               	movlw	81
  8024  010BB4  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8025  010BB6  0E01               	movlw	1
  8026  010BB8  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8027  010BBA  0E00               	movlw	0
  8028  010BBC  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8029  010BBE  EC1A  F091         	call	___lmul	;wreg free
  8030  010BC2  0100               	movlb	0	; () banked
  8031  010BC4  5168               	movf	?___lmul& (0+255),w,b
  8032  010BC6  0100               	movlb	0	; () banked
  8033  010BC8  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8034  010BCA  0100               	movlb	0	; () banked
  8035  010BCC  5169               	movf	(?___lmul+1)& (0+255),w,b
  8036  010BCE  0100               	movlb	0	; () banked
  8037  010BD0  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8038  010BD2  0100               	movlb	0	; () banked
  8039  010BD4  516A               	movf	(?___lmul+2)& (0+255),w,b
  8040  010BD6  0100               	movlb	0	; () banked
  8041  010BD8  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8042  010BDA  0100               	movlb	0	; () banked
  8043  010BDC  516B               	movf	(?___lmul+3)& (0+255),w,b
  8044  010BDE  0100               	movlb	0	; () banked
  8045  010BE0  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8046                           
  8047                           ; BSR set to: 0
  8048  010BE2  0100               	movlb	0	; () banked
  8049  010BE4  2B7D               	incf	caltime_to_epoch@month_2065& (0+255),f,b
  8050  010BE6                     l4419:
  8051                           
  8052                           ; BSR set to: 0
  8053  010BE6  0100               	movlb	0	; () banked
  8054  010BE8  EE20 F005          	lfsr	2,5
  8055  010BEC  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8056  010BEE  26D9               	addwf	fsr2l,f,c
  8057  010BF0  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8058  010BF2  22DA               	addwfc	fsr2h,f,c
  8059  010BF4  50DE               	movf	postinc2,w,c
  8060  010BF6  0100               	movlb	0	; () banked
  8061  010BF8  5D7D               	subwf	caltime_to_epoch@month_2065& (0+255),w,b
  8062  010BFA  A0D8               	btfss	status,0,c
  8063  010BFC  D7C2               	goto	l4415
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;My_header\My_RTCC.h: 220: }
  8067                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  8068                           
  8069                           ; BSR set to: 0
  8070  010BFE  0EFF               	movlw	255
  8071  010C00  0100               	movlb	0	; () banked
  8072  010C02  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8073  010C04  0EFF               	movlw	255
  8074  010C06  0100               	movlb	0	; () banked
  8075  010C08  6F79               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  8076  010C0A  0100               	movlb	0	; () banked
  8077  010C0C  EE20 F004          	lfsr	2,4
  8078  010C10  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8079  010C12  26D9               	addwf	fsr2l,f,c
  8080  010C14  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8081  010C16  22DA               	addwfc	fsr2h,f,c
  8082  010C18  50DF               	movf	indf2,w,c
  8083  010C1A  0100               	movlb	0	; () banked
  8084  010C1C  6F7A               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  8085  010C1E  6B7B               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  8086  010C20  0100               	movlb	0	; () banked
  8087  010C22  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8088  010C24  0100               	movlb	0	; () banked
  8089  010C26  277A               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  8090  010C28  0100               	movlb	0	; () banked
  8091  010C2A  5179               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8092  010C2C  0100               	movlb	0	; () banked
  8093  010C2E  237B               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  8094  010C30  C07A  F068         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  8095  010C34  C07B  F069         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  8096  010C38  0100               	movlb	0	; () banked
  8097  010C3A  0E00               	movlw	0
  8098  010C3C  BF69               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  8099  010C3E  0EFF               	movlw	-1
  8100  010C40  6F6A               	movwf	(___lmul@multiplier+2)& (0+255),b
  8101  010C42  6F6B               	movwf	(___lmul@multiplier+3)& (0+255),b
  8102  010C44  0E80               	movlw	128
  8103  010C46  0100               	movlb	0	; () banked
  8104  010C48  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8105  010C4A  0E51               	movlw	81
  8106  010C4C  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8107  010C4E  0E01               	movlw	1
  8108  010C50  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8109  010C52  0E00               	movlw	0
  8110  010C54  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8111  010C56  EC1A  F091         	call	___lmul	;wreg free
  8112  010C5A  0100               	movlb	0	; () banked
  8113  010C5C  5168               	movf	?___lmul& (0+255),w,b
  8114  010C5E  0100               	movlb	0	; () banked
  8115  010C60  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8116  010C62  0100               	movlb	0	; () banked
  8117  010C64  5169               	movf	(?___lmul+1)& (0+255),w,b
  8118  010C66  0100               	movlb	0	; () banked
  8119  010C68  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8120  010C6A  0100               	movlb	0	; () banked
  8121  010C6C  516A               	movf	(?___lmul+2)& (0+255),w,b
  8122  010C6E  0100               	movlb	0	; () banked
  8123  010C70  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8124  010C72  0100               	movlb	0	; () banked
  8125  010C74  516B               	movf	(?___lmul+3)& (0+255),w,b
  8126  010C76  0100               	movlb	0	; () banked
  8127  010C78  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8128                           
  8129                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  8130  010C7A  0100               	movlb	0	; () banked
  8131  010C7C  EE20 F002          	lfsr	2,2
  8132  010C80  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8133  010C82  26D9               	addwf	fsr2l,f,c
  8134  010C84  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8135  010C86  22DA               	addwfc	fsr2h,f,c
  8136  010C88  50DF               	movf	indf2,w,c
  8137  010C8A  0100               	movlb	0	; () banked
  8138  010C8C  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8139  010C8E  0100               	movlb	0	; () banked
  8140  010C90  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8141  010C92  0100               	movlb	0	; () banked
  8142  010C94  6F68               	movwf	___lmul@multiplier& (0+255),b
  8143  010C96  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  8144  010C98  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  8145  010C9A  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  8146  010C9C  0E10               	movlw	16
  8147  010C9E  0100               	movlb	0	; () banked
  8148  010CA0  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8149  010CA2  0E0E               	movlw	14
  8150  010CA4  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8151  010CA6  0E00               	movlw	0
  8152  010CA8  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8153  010CAA  0E00               	movlw	0
  8154  010CAC  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8155  010CAE  EC1A  F091         	call	___lmul	;wreg free
  8156  010CB2  0100               	movlb	0	; () banked
  8157  010CB4  5168               	movf	?___lmul& (0+255),w,b
  8158  010CB6  0100               	movlb	0	; () banked
  8159  010CB8  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8160  010CBA  0100               	movlb	0	; () banked
  8161  010CBC  5169               	movf	(?___lmul+1)& (0+255),w,b
  8162  010CBE  0100               	movlb	0	; () banked
  8163  010CC0  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8164  010CC2  0100               	movlb	0	; () banked
  8165  010CC4  516A               	movf	(?___lmul+2)& (0+255),w,b
  8166  010CC6  0100               	movlb	0	; () banked
  8167  010CC8  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8168  010CCA  0100               	movlb	0	; () banked
  8169  010CCC  516B               	movf	(?___lmul+3)& (0+255),w,b
  8170  010CCE  0100               	movlb	0	; () banked
  8171  010CD0  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8172                           
  8173                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  8174  010CD2  0100               	movlb	0	; () banked
  8175  010CD4  EE20 F001          	lfsr	2,1
  8176  010CD8  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8177  010CDA  26D9               	addwf	fsr2l,f,c
  8178  010CDC  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8179  010CDE  22DA               	addwfc	fsr2h,f,c
  8180  010CE0  50DF               	movf	indf2,w,c
  8181  010CE2  0100               	movlb	0	; () banked
  8182  010CE4  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8183  010CE6  0100               	movlb	0	; () banked
  8184  010CE8  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8185  010CEA  0100               	movlb	0	; () banked
  8186  010CEC  6F68               	movwf	___lmul@multiplier& (0+255),b
  8187  010CEE  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  8188  010CF0  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  8189  010CF2  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  8190  010CF4  0E3C               	movlw	60
  8191  010CF6  0100               	movlb	0	; () banked
  8192  010CF8  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8193  010CFA  0E00               	movlw	0
  8194  010CFC  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8195  010CFE  0E00               	movlw	0
  8196  010D00  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8197  010D02  0E00               	movlw	0
  8198  010D04  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8199  010D06  EC1A  F091         	call	___lmul	;wreg free
  8200  010D0A  0100               	movlb	0	; () banked
  8201  010D0C  5168               	movf	?___lmul& (0+255),w,b
  8202  010D0E  0100               	movlb	0	; () banked
  8203  010D10  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8204  010D12  0100               	movlb	0	; () banked
  8205  010D14  5169               	movf	(?___lmul+1)& (0+255),w,b
  8206  010D16  0100               	movlb	0	; () banked
  8207  010D18  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8208  010D1A  0100               	movlb	0	; () banked
  8209  010D1C  516A               	movf	(?___lmul+2)& (0+255),w,b
  8210  010D1E  0100               	movlb	0	; () banked
  8211  010D20  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8212  010D22  0100               	movlb	0	; () banked
  8213  010D24  516B               	movf	(?___lmul+3)& (0+255),w,b
  8214  010D26  0100               	movlb	0	; () banked
  8215  010D28  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  8219  010D2A  C074  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  8220  010D2E  C075  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  8221  010D32  50DF               	movf	indf2,w,c
  8222  010D34  0100               	movlb	0	; () banked
  8223  010D36  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8224  010D38  0100               	movlb	0	; () banked
  8225  010D3A  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8226  010D3C  0100               	movlb	0	; () banked
  8227  010D3E  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8228  010D40  0E00               	movlw	0
  8229  010D42  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8230  010D44  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8231  010D46  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  8235  010D48  C076  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  8236  010D4C  C077  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  8237  010D50  C07E  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  8238  010D54  C07F  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  8239  010D58  C080  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  8240  010D5C  C081  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  8241                           
  8242                           ; BSR set to: 0
  8243  010D60  0012               	return		;funcret
  8244  010D62                     __end_of_caltime_to_epoch:
  8245                           	opt stack 0
  8246                           tblptru	equ	0xFF8
  8247                           tblptrh	equ	0xFF7
  8248                           tblptrl	equ	0xFF6
  8249                           tablat	equ	0xFF5
  8250                           prodh	equ	0xFF4
  8251                           prodl	equ	0xFF3
  8252                           intcon	equ	0xFF2
  8253                           intcon2	equ	0xFF1
  8254                           postinc0	equ	0xFEE
  8255                           wreg	equ	0xFE8
  8256                           indf1	equ	0xFE7
  8257                           postinc1	equ	0xFE6
  8258                           postdec1	equ	0xFE5
  8259                           fsr1h	equ	0xFE2
  8260                           fsr1l	equ	0xFE1
  8261                           indf2	equ	0xFDF
  8262                           postinc2	equ	0xFDE
  8263                           postdec2	equ	0xFDD
  8264                           fsr2h	equ	0xFDA
  8265                           fsr2l	equ	0xFD9
  8266                           status	equ	0xFD8
  8267                           
  8268 ;; *************** function _RTCC_to_caltime *****************
  8269 ;; Defined at:
  8270 ;;		line 121 in file "../My_header\My_RTCC.h"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  ct              2   32[COMRAM] PTR struct .
  8273 ;;		 -> caltime_now(7), 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  dumy            1    0[BANK0 ] unsigned char 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;		None               void
  8278 ;; Registers used:
  8279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8288 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;Total ram usage:        3 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    5
  8292 ;; This function calls:
  8293 ;;		_x_to_d
  8294 ;; This function is called by:
  8295 ;;		_RTCC_from_RTCC
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text38
  8300  011C86                     __ptext38:
  8301                           	opt stack 0
  8302  011C86                     _RTCC_to_caltime:
  8303                           	opt stack 21
  8304  011C86                     l344:
  8305  011C86  010F               	movlb	15	; () banked
  8306  011C88  B93F               	btfsc	63,4,b	;volatile
  8307  011C8A  D7FD               	goto	l344
  8308                           
  8309                           ; BSR set to: 15
  8310                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  8311  011C8C  010F               	movlb	15	; () banked
  8312  011C8E  813F               	bsf	63,0,b	;volatile
  8313                           
  8314                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  8315  011C90  010F               	movlb	15	; () banked
  8316  011C92  833F               	bsf	63,1,b	;volatile
  8317                           
  8318                           ; BSR set to: 15
  8319                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  8320  011C94  EE20 F006          	lfsr	2,6
  8321  011C98  5021               	movf	RTCC_to_caltime@ct,w,c
  8322  011C9A  26D9               	addwf	fsr2l,f,c
  8323  011C9C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  8324  011C9E  22DA               	addwfc	fsr2h,f,c
  8325  011CA0  010F               	movlb	15	; () banked
  8326  011CA2  513A               	movf	58,w,b	;volatile
  8327  011CA4  EC35  F094         	call	_x_to_d
  8328  011CA8  6EDF               	movwf	indf2,c
  8329                           
  8330                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  8331  011CAA  CF3B F060          	movff	3899,RTCC_to_caltime@dumy	;volatile
  8332                           
  8333                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  8334  011CAE  EE20 F004          	lfsr	2,4
  8335  011CB2  5021               	movf	RTCC_to_caltime@ct,w,c
  8336  011CB4  26D9               	addwf	fsr2l,f,c
  8337  011CB6  5022               	movf	RTCC_to_caltime@ct+1,w,c
  8338  011CB8  22DA               	addwfc	fsr2h,f,c
  8339  011CBA  010F               	movlb	15	; () banked
  8340  011CBC  513A               	movf	58,w,b	;volatile
  8341  011CBE  EC35  F094         	call	_x_to_d
  8342  011CC2  6EDF               	movwf	indf2,c
  8343                           
  8344                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  8345  011CC4  EE20 F005          	lfsr	2,5
  8346  011CC8  5021               	movf	RTCC_to_caltime@ct,w,c
  8347  011CCA  26D9               	addwf	fsr2l,f,c
  8348  011CCC  5022               	movf	RTCC_to_caltime@ct+1,w,c
  8349  011CCE  22DA               	addwfc	fsr2h,f,c
  8350  011CD0  010F               	movlb	15	; () banked
  8351  011CD2  513B               	movf	59,w,b	;volatile
  8352  011CD4  EC35  F094         	call	_x_to_d
  8353  011CD8  6EDF               	movwf	indf2,c
  8354                           
  8355                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  8356  011CDA  EE20 F002          	lfsr	2,2
  8357  011CDE  5021               	movf	RTCC_to_caltime@ct,w,c
  8358  011CE0  26D9               	addwf	fsr2l,f,c
  8359  011CE2  5022               	movf	RTCC_to_caltime@ct+1,w,c
  8360  011CE4  22DA               	addwfc	fsr2h,f,c
  8361  011CE6  010F               	movlb	15	; () banked
  8362  011CE8  513A               	movf	58,w,b	;volatile
  8363  011CEA  EC35  F094         	call	_x_to_d
  8364  011CEE  6EDF               	movwf	indf2,c
  8365                           
  8366                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  8367  011CF0  EE20 F003          	lfsr	2,3
  8368  011CF4  5021               	movf	RTCC_to_caltime@ct,w,c
  8369  011CF6  26D9               	addwf	fsr2l,f,c
  8370  011CF8  5022               	movf	RTCC_to_caltime@ct+1,w,c
  8371  011CFA  22DA               	addwfc	fsr2h,f,c
  8372  011CFC  010F               	movlb	15	; () banked
  8373  011CFE  513B               	movf	59,w,b	;volatile
  8374  011D00  EC35  F094         	call	_x_to_d
  8375  011D04  6EDF               	movwf	indf2,c
  8376                           
  8377                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  8378  011D06  010F               	movlb	15	; () banked
  8379  011D08  513A               	movf	58,w,b	;volatile
  8380  011D0A  EC35  F094         	call	_x_to_d
  8381  011D0E  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  8382  011D12  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  8383  011D16  6EDF               	movwf	indf2,c
  8384                           
  8385                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  8386  011D18  EE20 F001          	lfsr	2,1
  8387  011D1C  5021               	movf	RTCC_to_caltime@ct,w,c
  8388  011D1E  26D9               	addwf	fsr2l,f,c
  8389  011D20  5022               	movf	RTCC_to_caltime@ct+1,w,c
  8390  011D22  22DA               	addwfc	fsr2h,f,c
  8391  011D24  010F               	movlb	15	; () banked
  8392  011D26  513B               	movf	59,w,b	;volatile
  8393  011D28  EC35  F094         	call	_x_to_d
  8394  011D2C  6EDF               	movwf	indf2,c
  8395  011D2E  0012               	return		;funcret
  8396  011D30                     __end_of_RTCC_to_caltime:
  8397                           	opt stack 0
  8398                           tblptru	equ	0xFF8
  8399                           tblptrh	equ	0xFF7
  8400                           tblptrl	equ	0xFF6
  8401                           tablat	equ	0xFF5
  8402                           prodh	equ	0xFF4
  8403                           prodl	equ	0xFF3
  8404                           intcon	equ	0xFF2
  8405                           intcon2	equ	0xFF1
  8406                           postinc0	equ	0xFEE
  8407                           wreg	equ	0xFE8
  8408                           indf1	equ	0xFE7
  8409                           postinc1	equ	0xFE6
  8410                           postdec1	equ	0xFE5
  8411                           fsr1h	equ	0xFE2
  8412                           fsr1l	equ	0xFE1
  8413                           indf2	equ	0xFDF
  8414                           postinc2	equ	0xFDE
  8415                           postdec2	equ	0xFDD
  8416                           fsr2h	equ	0xFDA
  8417                           fsr2l	equ	0xFD9
  8418                           status	equ	0xFD8
  8419                           
  8420 ;; *************** function _x_to_d *****************
  8421 ;; Defined at:
  8422 ;;		line 81 in file "../My_header\My_RTCC.h"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  hex             1    wreg     unsigned char 
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;  hex             1   31[COMRAM] unsigned char 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      unsigned char 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0, prodl, prodh
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8440 ;;Total ram usage:        2 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; Hardware stack levels required when called:    4
  8443 ;; This function calls:
  8444 ;;		Nothing
  8445 ;; This function is called by:
  8446 ;;		_RTCC_to_caltime
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text39
  8451  01286A                     __ptext39:
  8452                           	opt stack 0
  8453  01286A                     _x_to_d:
  8454                           	opt stack 21
  8455                           
  8456                           ;incstack = 0
  8457                           ;x_to_d@hex stored from wreg
  8458  01286A  6E20               	movwf	x_to_d@hex,c
  8459                           
  8460                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  8461  01286C  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  8462  012870  0E0F               	movlw	15
  8463  012872  161F               	andwf	??_x_to_d,f,c
  8464  012874  3820               	swapf	x_to_d@hex,w,c
  8465  012876  0B0F               	andlw	15
  8466  012878  0B0F               	andlw	15
  8467  01287A  0D0A               	mullw	10
  8468  01287C  50F3               	movf	prodl,w,c
  8469  01287E  241F               	addwf	??_x_to_d,w,c
  8470  012880  0012               	return	
  8471  012882                     __end_of_x_to_d:
  8472                           	opt stack 0
  8473                           tblptru	equ	0xFF8
  8474                           tblptrh	equ	0xFF7
  8475                           tblptrl	equ	0xFF6
  8476                           tablat	equ	0xFF5
  8477                           prodh	equ	0xFF4
  8478                           prodl	equ	0xFF3
  8479                           intcon	equ	0xFF2
  8480                           intcon2	equ	0xFF1
  8481                           postinc0	equ	0xFEE
  8482                           wreg	equ	0xFE8
  8483                           indf1	equ	0xFE7
  8484                           postinc1	equ	0xFE6
  8485                           postdec1	equ	0xFE5
  8486                           fsr1h	equ	0xFE2
  8487                           fsr1l	equ	0xFE1
  8488                           indf2	equ	0xFDF
  8489                           postinc2	equ	0xFDE
  8490                           postdec2	equ	0xFDD
  8491                           fsr2h	equ	0xFDA
  8492                           fsr2l	equ	0xFD9
  8493                           status	equ	0xFD8
  8494                           
  8495 ;; *************** function _RTCC_from_epoch *****************
  8496 ;; Defined at:
  8497 ;;		line 242 in file "../My_header\My_RTCC.h"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;  ct              2   57[BANK0 ] PTR struct .
  8500 ;;		 -> caltime_now(7), 
  8501 ;;  ep              2   59[BANK0 ] PTR unsigned long 
  8502 ;;		 -> epoch_now(4), 
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;		None               void
  8507 ;; Registers used:
  8508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8517 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8518 ;;Total ram usage:        4 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:    7
  8521 ;; This function calls:
  8522 ;;		_caltime_to_RTCC
  8523 ;;		_epoch_to_caltime
  8524 ;; This function is called by:
  8525 ;;		_main
  8526 ;;		_RTCC_adjust_time_inc
  8527 ;;		_RTCC_adjust_time_dec
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text40
  8532  0127D0                     __ptext40:
  8533                           	opt stack 0
  8534  0127D0                     _RTCC_from_epoch:
  8535                           	opt stack 23
  8536                           
  8537                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  8538                           
  8539                           ;incstack = 0
  8540  0127D0  C099  F089         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  8541  0127D4  C09A  F08A         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  8542  0127D8  C09B  F08B         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  8543  0127DC  C09C  F08C         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  8544  0127E0  ECF2  F087         	call	_epoch_to_caltime	;wreg free
  8545                           
  8546                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  8547  0127E4  C099  F065         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  8548  0127E8  C09A  F066         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  8549  0127EC  EC4C  F08B         	call	_caltime_to_RTCC	;wreg free
  8550  0127F0  0012               	return		;funcret
  8551  0127F2                     __end_of_RTCC_from_epoch:
  8552                           	opt stack 0
  8553                           tblptru	equ	0xFF8
  8554                           tblptrh	equ	0xFF7
  8555                           tblptrl	equ	0xFF6
  8556                           tablat	equ	0xFF5
  8557                           prodh	equ	0xFF4
  8558                           prodl	equ	0xFF3
  8559                           intcon	equ	0xFF2
  8560                           intcon2	equ	0xFF1
  8561                           postinc0	equ	0xFEE
  8562                           wreg	equ	0xFE8
  8563                           indf1	equ	0xFE7
  8564                           postinc1	equ	0xFE6
  8565                           postdec1	equ	0xFE5
  8566                           fsr1h	equ	0xFE2
  8567                           fsr1l	equ	0xFE1
  8568                           indf2	equ	0xFDF
  8569                           postinc2	equ	0xFDE
  8570                           postdec2	equ	0xFDD
  8571                           fsr2h	equ	0xFDA
  8572                           fsr2l	equ	0xFD9
  8573                           status	equ	0xFD8
  8574                           
  8575 ;; *************** function _epoch_to_caltime *****************
  8576 ;; Defined at:
  8577 ;;		line 157 in file "../My_header\My_RTCC.h"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  ct              2   41[BANK0 ] PTR struct .
  8580 ;;		 -> caltime_now(7), 
  8581 ;;  ep              2   43[BANK0 ] PTR unsigned long 
  8582 ;;		 -> epoch_now(4), 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  num             4   53[BANK0 ] unsigned long 
  8585 ;;  day             2   49[BANK0 ] unsigned int 
  8586 ;;  day_since_ep    2   47[BANK0 ] unsigned int 
  8587 ;;  month           1   52[BANK0 ] unsigned char 
  8588 ;;  year            1   51[BANK0 ] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;		None               void
  8591 ;; Registers used:
  8592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8599 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8600 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8601 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8602 ;;Total ram usage:       16 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:    6
  8605 ;; This function calls:
  8606 ;;		_get_quot_rem
  8607 ;;		_month_length
  8608 ;; This function is called by:
  8609 ;;		_RTCC_from_caltime
  8610 ;;		_RTCC_from_epoch
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text41
  8615  010FE4                     __ptext41:
  8616                           	opt stack 0
  8617  010FE4                     _epoch_to_caltime:
  8618                           	opt stack 20
  8619                           
  8620                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  8621                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  8622                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  8623                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  8624                           ;My_header\My_RTCC.h: 164: uint16_t day;
  8625                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  8626                           
  8627                           ;incstack = 0
  8628  010FE4  0E00               	movlw	0
  8629  010FE6  0100               	movlb	0	; () banked
  8630  010FE8  6F93               	movwf	epoch_to_caltime@year& (0+255),b
  8631                           
  8632                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  8633  010FEA  0E01               	movlw	1
  8634  010FEC  0100               	movlb	0	; () banked
  8635  010FEE  6F94               	movwf	epoch_to_caltime@month& (0+255),b
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;My_header\My_RTCC.h: 167: epoch_t num;
  8639                           ;My_header\My_RTCC.h: 169: num = *ep;
  8640  010FF0  C08B  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  8641  010FF4  C08C  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  8642  010FF8  CFDE F095          	movff	postinc2,epoch_to_caltime@num
  8643  010FFC  CFDE F096          	movff	postinc2,epoch_to_caltime@num+1
  8644  011000  CFDE F097          	movff	postinc2,epoch_to_caltime@num+2
  8645  011004  CFDE F098          	movff	postinc2,epoch_to_caltime@num+3
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  8649  011008  0E95               	movlw	low epoch_to_caltime@num
  8650  01100A  0100               	movlb	0	; () banked
  8651  01100C  6F81               	movwf	get_quot_rem@quot& (0+255),b
  8652  01100E  0E00               	movlw	high epoch_to_caltime@num
  8653  011010  0100               	movlb	0	; () banked
  8654  011012  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8655  011014  0E3C               	movlw	60
  8656  011016  0100               	movlb	0	; () banked
  8657  011018  6F83               	movwf	get_quot_rem@div& (0+255),b
  8658  01101A  EC7A  F08A         	call	_get_quot_rem	;wreg free
  8659  01101E  0100               	movlb	0	; () banked
  8660  011020  5181               	movf	?_get_quot_rem& (0+255),w,b
  8661  011022  C089  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  8662  011026  C08A  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  8663  01102A  6EDF               	movwf	indf2,c
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  8667  01102C  0E95               	movlw	low epoch_to_caltime@num
  8668  01102E  0100               	movlb	0	; () banked
  8669  011030  6F81               	movwf	get_quot_rem@quot& (0+255),b
  8670  011032  0E00               	movlw	high epoch_to_caltime@num
  8671  011034  0100               	movlb	0	; () banked
  8672  011036  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8673  011038  0E3C               	movlw	60
  8674  01103A  0100               	movlb	0	; () banked
  8675  01103C  6F83               	movwf	get_quot_rem@div& (0+255),b
  8676  01103E  EC7A  F08A         	call	_get_quot_rem	;wreg free
  8677  011042  0100               	movlb	0	; () banked
  8678  011044  EE20 F001          	lfsr	2,1
  8679  011048  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8680  01104A  26D9               	addwf	fsr2l,f,c
  8681  01104C  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8682  01104E  22DA               	addwfc	fsr2h,f,c
  8683  011050  0100               	movlb	0	; () banked
  8684  011052  C081  FFDF         	movff	?_get_quot_rem,indf2
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  8688  011056  0E95               	movlw	low epoch_to_caltime@num
  8689  011058  0100               	movlb	0	; () banked
  8690  01105A  6F81               	movwf	get_quot_rem@quot& (0+255),b
  8691  01105C  0E00               	movlw	high epoch_to_caltime@num
  8692  01105E  0100               	movlb	0	; () banked
  8693  011060  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8694  011062  0E18               	movlw	24
  8695  011064  0100               	movlb	0	; () banked
  8696  011066  6F83               	movwf	get_quot_rem@div& (0+255),b
  8697  011068  EC7A  F08A         	call	_get_quot_rem	;wreg free
  8698  01106C  0100               	movlb	0	; () banked
  8699  01106E  EE20 F002          	lfsr	2,2
  8700  011072  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8701  011074  26D9               	addwf	fsr2l,f,c
  8702  011076  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8703  011078  22DA               	addwfc	fsr2h,f,c
  8704  01107A  0100               	movlb	0	; () banked
  8705  01107C  C081  FFDF         	movff	?_get_quot_rem,indf2
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;My_header\My_RTCC.h: 173: day = num;
  8709  011080  C095  F091         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8710  011084  C096  F092         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  8714  011088  C091  F08F         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8715  01108C  C092  F090         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;My_header\My_RTCC.h: 176: num += 6;
  8719  011090  0E06               	movlw	6
  8720  011092  0100               	movlb	0	; () banked
  8721  011094  2795               	addwf	epoch_to_caltime@num& (0+255),f,b
  8722  011096  0E00               	movlw	0
  8723  011098  2396               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8724  01109A  2397               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8725  01109C  2398               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  8729  01109E  0E95               	movlw	low epoch_to_caltime@num
  8730  0110A0  0100               	movlb	0	; () banked
  8731  0110A2  6F81               	movwf	get_quot_rem@quot& (0+255),b
  8732  0110A4  0E00               	movlw	high epoch_to_caltime@num
  8733  0110A6  0100               	movlb	0	; () banked
  8734  0110A8  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8735  0110AA  0E07               	movlw	7
  8736  0110AC  0100               	movlb	0	; () banked
  8737  0110AE  6F83               	movwf	get_quot_rem@div& (0+255),b
  8738  0110B0  EC7A  F08A         	call	_get_quot_rem	;wreg free
  8739  0110B4  0100               	movlb	0	; () banked
  8740  0110B6  EE20 F003          	lfsr	2,3
  8741  0110BA  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8742  0110BC  26D9               	addwf	fsr2l,f,c
  8743  0110BE  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8744  0110C0  22DA               	addwfc	fsr2h,f,c
  8745  0110C2  0100               	movlb	0	; () banked
  8746  0110C4  C081  FFDF         	movff	?_get_quot_rem,indf2
  8747                           
  8748                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  8749  0110C8  D03F               	goto	l4515
  8750  0110CA                     l363:
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  8754  0110CA  848A               	bsf	3978,2,c	;volatile
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  8758  0110CC  C094  F062         	movff	epoch_to_caltime@month,month_length@month
  8759  0110D0  0100               	movlb	0	; () banked
  8760  0110D2  5193               	movf	epoch_to_caltime@year& (0+255),w,b
  8761  0110D4  ECB4  F08B         	call	_month_length
  8762  0110D8  0100               	movlb	0	; () banked
  8763  0110DA  6F8D               	movwf	??_epoch_to_caltime& (0+255),b
  8764  0110DC  6B8E               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8765  0110DE  0100               	movlb	0	; () banked
  8766  0110E0  1F8D               	comf	??_epoch_to_caltime& (0+255),f,b
  8767  0110E2  1F8E               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8768  0110E4  4B8D               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8769  0110E6  2B8E               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8770  0110E8  0100               	movlb	0	; () banked
  8771  0110EA  5191               	movf	epoch_to_caltime@day& (0+255),w,b
  8772  0110EC  0100               	movlb	0	; () banked
  8773  0110EE  258D               	addwf	??_epoch_to_caltime& (0+255),w,b
  8774  0110F0  0100               	movlb	0	; () banked
  8775  0110F2  6F91               	movwf	epoch_to_caltime@day& (0+255),b
  8776  0110F4  0100               	movlb	0	; () banked
  8777  0110F6  5192               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8778  0110F8  0100               	movlb	0	; () banked
  8779  0110FA  218E               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8780  0110FC  0100               	movlb	0	; () banked
  8781  0110FE  6F92               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  8785  011100  0E0C               	movlw	12
  8786  011102  0100               	movlb	0	; () banked
  8787  011104  1994               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8788  011106  A4D8               	btfss	status,2,c
  8789  011108  D019               	goto	l4509
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;My_header\My_RTCC.h: 190: month = 1;
  8793  01110A  0E01               	movlw	1
  8794  01110C  0100               	movlb	0	; () banked
  8795  01110E  6F94               	movwf	epoch_to_caltime@month& (0+255),b
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;My_header\My_RTCC.h: 191: year++;
  8799  011110  0100               	movlb	0	; () banked
  8800  011112  2B93               	incf	epoch_to_caltime@year& (0+255),f,b
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  8804  011114  0E63               	movlw	99
  8805  011116  0100               	movlb	0	; () banked
  8806  011118  6593               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8807  01111A  D012               	goto	l4511
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  8811  01111C  C08B  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  8812  011120  C08C  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  8813  011124  0E80               	movlw	128
  8814  011126  5EDE               	subwf	postinc2,f,c
  8815  011128  0E13               	movlw	19
  8816  01112A  5ADE               	subwfb	postinc2,f,c
  8817  01112C  0E19               	movlw	25
  8818  01112E  5ADE               	subwfb	postinc2,f,c
  8819  011130  0EBC               	movlw	188
  8820  011132  5ADE               	subwfb	postinc2,f,c
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;My_header\My_RTCC.h: 195: year = 0;
  8824  011134  0E00               	movlw	0
  8825  011136  0100               	movlb	0	; () banked
  8826  011138  6F93               	movwf	epoch_to_caltime@year& (0+255),b
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;My_header\My_RTCC.h: 196: }
  8830                           ;My_header\My_RTCC.h: 197: } else {
  8831  01113A  D002               	goto	l4511
  8832  01113C                     l4509:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;My_header\My_RTCC.h: 198: month++;
  8836  01113C  0100               	movlb	0	; () banked
  8837  01113E  2B94               	incf	epoch_to_caltime@month& (0+255),f,b
  8838  011140                     l4511:
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;My_header\My_RTCC.h: 199: }
  8842                           ;My_header\My_RTCC.h: 200: month_cache = month;
  8843  011140  C094  F040         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;My_header\My_RTCC.h: 201: year_cache = year;
  8847  011144  C093  F030         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8848  011148                     l4515:
  8849                           
  8850                           ; BSR set to: 0
  8851  011148  C094  F062         	movff	epoch_to_caltime@month,month_length@month
  8852  01114C  0100               	movlb	0	; () banked
  8853  01114E  5193               	movf	epoch_to_caltime@year& (0+255),w,b
  8854  011150  ECB4  F08B         	call	_month_length
  8855  011154  0100               	movlb	0	; () banked
  8856  011156  6F8D               	movwf	??_epoch_to_caltime& (0+255),b
  8857  011158  0100               	movlb	0	; () banked
  8858  01115A  518D               	movf	??_epoch_to_caltime& (0+255),w,b
  8859  01115C  0100               	movlb	0	; () banked
  8860  01115E  5D91               	subwf	epoch_to_caltime@day& (0+255),w,b
  8861  011160  0E00               	movlw	0
  8862  011162  5992               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8863  011164  B0D8               	btfsc	status,0,c
  8864  011166  D7B1               	goto	l363
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;My_header\My_RTCC.h: 202: }
  8868                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  8869                           
  8870                           ; BSR set to: 0
  8871  011168  C091  F08D         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8872  01116C  C092  F08E         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8873  011170  0100               	movlb	0	; () banked
  8874  011172  1F8D               	comf	??_epoch_to_caltime& (0+255),f,b
  8875  011174  1F8E               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8876  011176  4B8D               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8877  011178  2B8E               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8878  01117A  0100               	movlb	0	; () banked
  8879  01117C  518F               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8880  01117E  0100               	movlb	0	; () banked
  8881  011180  258D               	addwf	??_epoch_to_caltime& (0+255),w,b
  8882  011182  6E23               	movwf	epoch_to_caltime@day_cache,c
  8883  011184  0100               	movlb	0	; () banked
  8884  011186  5190               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8885  011188  0100               	movlb	0	; () banked
  8886  01118A  218E               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8887  01118C  6E24               	movwf	epoch_to_caltime@day_cache+1,c
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;My_header\My_RTCC.h: 204: day++;
  8891  01118E  0100               	movlb	0	; () banked
  8892  011190  4B91               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8893  011192  2B92               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  8897  011194  0100               	movlb	0	; () banked
  8898  011196  EE20 F006          	lfsr	2,6
  8899  01119A  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8900  01119C  26D9               	addwf	fsr2l,f,c
  8901  01119E  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8902  0111A0  22DA               	addwfc	fsr2h,f,c
  8903  0111A2  C093  FFDF         	movff	epoch_to_caltime@year,indf2
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  8907  0111A6  0100               	movlb	0	; () banked
  8908  0111A8  EE20 F005          	lfsr	2,5
  8909  0111AC  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8910  0111AE  26D9               	addwf	fsr2l,f,c
  8911  0111B0  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8912  0111B2  22DA               	addwfc	fsr2h,f,c
  8913  0111B4  C094  FFDF         	movff	epoch_to_caltime@month,indf2
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  8917  0111B8  0100               	movlb	0	; () banked
  8918  0111BA  EE20 F004          	lfsr	2,4
  8919  0111BE  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8920  0111C0  26D9               	addwf	fsr2l,f,c
  8921  0111C2  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8922  0111C4  22DA               	addwfc	fsr2h,f,c
  8923  0111C6  C091  FFDF         	movff	epoch_to_caltime@day,indf2
  8924                           
  8925                           ; BSR set to: 0
  8926  0111CA  0012               	return		;funcret
  8927  0111CC                     __end_of_epoch_to_caltime:
  8928                           	opt stack 0
  8929                           tblptru	equ	0xFF8
  8930                           tblptrh	equ	0xFF7
  8931                           tblptrl	equ	0xFF6
  8932                           tablat	equ	0xFF5
  8933                           prodh	equ	0xFF4
  8934                           prodl	equ	0xFF3
  8935                           intcon	equ	0xFF2
  8936                           intcon2	equ	0xFF1
  8937                           postinc0	equ	0xFEE
  8938                           wreg	equ	0xFE8
  8939                           indf1	equ	0xFE7
  8940                           postinc1	equ	0xFE6
  8941                           postdec1	equ	0xFE5
  8942                           fsr1h	equ	0xFE2
  8943                           fsr1l	equ	0xFE1
  8944                           indf2	equ	0xFDF
  8945                           postinc2	equ	0xFDE
  8946                           postdec2	equ	0xFDD
  8947                           fsr2h	equ	0xFDA
  8948                           fsr2l	equ	0xFD9
  8949                           status	equ	0xFD8
  8950                           
  8951 ;; *************** function _month_length *****************
  8952 ;; Defined at:
  8953 ;;		line 87 in file "../My_header\My_RTCC.h"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  year            1    wreg     unsigned char 
  8956 ;;  month           1    2[BANK0 ] unsigned char 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  year            1    7[BANK0 ] unsigned char 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      unsigned char 
  8961 ;; Registers used:
  8962 ;;		wreg, status,2, status,0, cstack
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8968 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8970 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8971 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8972 ;;Total ram usage:        6 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:    5
  8975 ;; This function calls:
  8976 ;;		___awmod
  8977 ;; This function is called by:
  8978 ;;		_epoch_to_caltime
  8979 ;;		_caltime_to_epoch
  8980 ;;		_command_operation
  8981 ;;		_RTCC_adjust_time_inc
  8982 ;;		_RTCC_adjust_time_dec
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text42
  8987  011768                     __ptext42:
  8988                           	opt stack 0
  8989  011768                     _month_length:
  8990                           	opt stack 20
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;incstack = 0
  8994                           ;month_length@year stored from wreg
  8995  011768  0100               	movlb	0	; () banked
  8996  01176A  6F67               	movwf	month_length@year& (0+255),b
  8997                           
  8998                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  8999  01176C  0E02               	movlw	2
  9000  01176E  0100               	movlb	0	; () banked
  9001  011770  1962               	xorwf	month_length@month& (0+255),w,b
  9002  011772  A4D8               	btfss	status,2,c
  9003  011774  D036               	goto	l4253
  9004                           
  9005                           ; BSR set to: 0
  9006  011776  C067  F01F         	movff	month_length@year,___awmod@dividend
  9007  01177A  6A20               	clrf	___awmod@dividend+1,c
  9008  01177C  0E00               	movlw	0
  9009  01177E  6E22               	movwf	___awmod@divisor+1,c
  9010  011780  0E64               	movlw	100
  9011  011782  6E21               	movwf	___awmod@divisor,c
  9012  011784  EC9F  F090         	call	___awmod	;wreg free
  9013  011788  501F               	movf	?___awmod,w,c
  9014  01178A  1020               	iorwf	?___awmod+1,w,c
  9015  01178C  A4D8               	btfss	status,2,c
  9016  01178E  D002               	goto	u4340
  9017  011790  0E01               	movlw	1
  9018  011792  D001               	goto	u4350
  9019  011794                     u4340:
  9020  011794  0E00               	movlw	0
  9021  011796                     u4350:
  9022  011796  0800               	sublw	0
  9023  011798  0100               	movlb	0	; () banked
  9024  01179A  6F63               	movwf	??_month_length& (0+255),b
  9025  01179C  C067  F01F         	movff	month_length@year,___awmod@dividend
  9026  0117A0  6A20               	clrf	___awmod@dividend+1,c
  9027  0117A2  0E01               	movlw	1
  9028  0117A4  6E22               	movwf	___awmod@divisor+1,c
  9029  0117A6  0E90               	movlw	144
  9030  0117A8  6E21               	movwf	___awmod@divisor,c
  9031  0117AA  EC9F  F090         	call	___awmod	;wreg free
  9032  0117AE  501F               	movf	?___awmod,w,c
  9033  0117B0  1020               	iorwf	?___awmod+1,w,c
  9034  0117B2  A4D8               	btfss	status,2,c
  9035  0117B4  D004               	goto	u4360
  9036  0117B6  0100               	movlb	0	; () banked
  9037  0117B8  6B64               	clrf	(??_month_length+1)& (0+255),b
  9038  0117BA  2B64               	incf	(??_month_length+1)& (0+255),f,b
  9039  0117BC  D002               	goto	u4378
  9040  0117BE                     u4360:
  9041  0117BE  0100               	movlb	0	; () banked
  9042  0117C0  6B64               	clrf	(??_month_length+1)& (0+255),b
  9043  0117C2                     u4378:
  9044  0117C2  C067  F065         	movff	month_length@year,??_month_length+2
  9045  0117C6  0E03               	movlw	3
  9046  0117C8  0100               	movlb	0	; () banked
  9047  0117CA  1765               	andwf	(??_month_length+2)& (0+255),f,b
  9048  0117CC  A4D8               	btfss	status,2,c
  9049  0117CE  D002               	goto	u4380
  9050  0117D0  0E01               	movlw	1
  9051  0117D2  D001               	goto	u4390
  9052  0117D4                     u4380:
  9053  0117D4  0E00               	movlw	0
  9054  0117D6                     u4390:
  9055  0117D6  0100               	movlb	0	; () banked
  9056  0117D8  2564               	addwf	(??_month_length+1)& (0+255),w,b
  9057  0117DA  0100               	movlb	0	; () banked
  9058  0117DC  2563               	addwf	??_month_length& (0+255),w,b
  9059  0117DE  0F1C               	addlw	28
  9060                           
  9061                           ; BSR set to: 0
  9062                           
  9063                           ; BSR set to: 0
  9064  0117E0  0012               	return	
  9065  0117E2                     l4253:
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  9069  0117E2  0100               	movlb	0	; () banked
  9070  0117E4  5162               	movf	month_length@month& (0+255),w,b
  9071  0117E6  0B01               	andlw	1
  9072  0117E8  0100               	movlb	0	; () banked
  9073  0117EA  6F63               	movwf	??_month_length& (0+255),b
  9074  0117EC  6B64               	clrf	(??_month_length+1)& (0+255),b
  9075  0117EE  0100               	movlb	0	; () banked
  9076  0117F0  1F63               	comf	??_month_length& (0+255),f,b
  9077  0117F2  1F64               	comf	(??_month_length+1)& (0+255),f,b
  9078  0117F4  4B63               	infsnz	??_month_length& (0+255),f,b
  9079  0117F6  2B64               	incf	(??_month_length+1)& (0+255),f,b
  9080  0117F8  0100               	movlb	0	; () banked
  9081  0117FA  5162               	movf	month_length@month& (0+255),w,b
  9082  0117FC  0100               	movlb	0	; () banked
  9083  0117FE  6F65               	movwf	(??_month_length+2)& (0+255),b
  9084  011800  6B66               	clrf	(??_month_length+3)& (0+255),b
  9085  011802  0100               	movlb	0	; () banked
  9086  011804  5163               	movf	??_month_length& (0+255),w,b
  9087  011806  0100               	movlb	0	; () banked
  9088  011808  1B65               	xorwf	(??_month_length+2)& (0+255),f,b
  9089  01180A  0100               	movlb	0	; () banked
  9090  01180C  5164               	movf	(??_month_length+1)& (0+255),w,b
  9091  01180E  0100               	movlb	0	; () banked
  9092  011810  1B66               	xorwf	(??_month_length+3)& (0+255),f,b
  9093  011812  0E0D               	movlw	13
  9094  011814  0100               	movlb	0	; () banked
  9095  011816  1765               	andwf	(??_month_length+2)& (0+255),f,b
  9096  011818  0E00               	movlw	0
  9097  01181A  1766               	andwf	(??_month_length+3)& (0+255),f,b
  9098  01181C  0E04               	movlw	4
  9099  01181E  0100               	movlb	0	; () banked
  9100  011820  1965               	xorwf	(??_month_length+2)& (0+255),w,b
  9101  011822  0100               	movlb	0	; () banked
  9102  011824  1166               	iorwf	(??_month_length+3)& (0+255),w,b
  9103  011826  A4D8               	btfss	status,2,c
  9104  011828  D002               	goto	u4400
  9105  01182A  0E01               	movlw	1
  9106  01182C  D001               	goto	u4410
  9107  01182E                     u4400:
  9108  01182E  0E00               	movlw	0
  9109  011830                     u4410:
  9110  011830  0800               	sublw	0
  9111  011832  0F1F               	addlw	31
  9112                           
  9113                           ; BSR set to: 0
  9114  011834  0012               	return	
  9115  011836                     __end_of_month_length:
  9116                           	opt stack 0
  9117                           tblptru	equ	0xFF8
  9118                           tblptrh	equ	0xFF7
  9119                           tblptrl	equ	0xFF6
  9120                           tablat	equ	0xFF5
  9121                           prodh	equ	0xFF4
  9122                           prodl	equ	0xFF3
  9123                           intcon	equ	0xFF2
  9124                           intcon2	equ	0xFF1
  9125                           postinc0	equ	0xFEE
  9126                           wreg	equ	0xFE8
  9127                           indf1	equ	0xFE7
  9128                           postinc1	equ	0xFE6
  9129                           postdec1	equ	0xFE5
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           indf2	equ	0xFDF
  9133                           postinc2	equ	0xFDE
  9134                           postdec2	equ	0xFDD
  9135                           fsr2h	equ	0xFDA
  9136                           fsr2l	equ	0xFD9
  9137                           status	equ	0xFD8
  9138                           
  9139 ;; *************** function ___awmod *****************
  9140 ;; Defined at:
  9141 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  dividend        2   30[COMRAM] int 
  9144 ;;  divisor         2   32[COMRAM] int 
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  sign            1    1[BANK0 ] unsigned char 
  9147 ;;  counter         1    0[BANK0 ] unsigned char 
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  2   30[COMRAM] int 
  9150 ;; Registers used:
  9151 ;;		wreg, status,2, status,0
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9158 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9160 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9161 ;;Total ram usage:        6 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    4
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_month_length
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text43
  9172  01213E                     __ptext43:
  9173                           	opt stack 0
  9174  01213E                     ___awmod:
  9175                           	opt stack 20
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;incstack = 0
  9179  01213E  0E00               	movlw	0
  9180  012140  0100               	movlb	0	; () banked
  9181  012142  6F61               	movwf	___awmod@sign& (0+255),b
  9182                           
  9183                           ; BSR set to: 0
  9184  012144  AE20               	btfss	___awmod@dividend+1,7,c
  9185  012146  D007               	goto	l4203
  9186                           
  9187                           ; BSR set to: 0
  9188  012148  6C1F               	negf	___awmod@dividend,c
  9189  01214A  1E20               	comf	___awmod@dividend+1,f,c
  9190  01214C  B0D8               	btfsc	status,0,c
  9191  01214E  2A20               	incf	___awmod@dividend+1,f,c
  9192                           
  9193                           ; BSR set to: 0
  9194  012150  0E01               	movlw	1
  9195  012152  0100               	movlb	0	; () banked
  9196  012154  6F61               	movwf	___awmod@sign& (0+255),b
  9197  012156                     l4203:
  9198                           
  9199                           ; BSR set to: 0
  9200  012156  AE22               	btfss	___awmod@divisor+1,7,c
  9201  012158  D004               	goto	l4207
  9202                           
  9203                           ; BSR set to: 0
  9204  01215A  6C21               	negf	___awmod@divisor,c
  9205  01215C  1E22               	comf	___awmod@divisor+1,f,c
  9206  01215E  B0D8               	btfsc	status,0,c
  9207  012160  2A22               	incf	___awmod@divisor+1,f,c
  9208  012162                     l4207:
  9209                           
  9210                           ; BSR set to: 0
  9211  012162  5021               	movf	___awmod@divisor,w,c
  9212  012164  1022               	iorwf	___awmod@divisor+1,w,c
  9213  012166  B4D8               	btfsc	status,2,c
  9214  012168  D01B               	goto	l4223
  9215                           
  9216                           ; BSR set to: 0
  9217  01216A  0E01               	movlw	1
  9218  01216C  0100               	movlb	0	; () banked
  9219  01216E  6F60               	movwf	___awmod@counter& (0+255),b
  9220  012170  D005               	goto	l4213
  9221  012172                     l4211:
  9222                           
  9223                           ; BSR set to: 0
  9224  012172  90D8               	bcf	status,0,c
  9225  012174  3621               	rlcf	___awmod@divisor,f,c
  9226  012176  3622               	rlcf	___awmod@divisor+1,f,c
  9227  012178  0100               	movlb	0	; () banked
  9228  01217A  2B60               	incf	___awmod@counter& (0+255),f,b
  9229  01217C                     l4213:
  9230                           
  9231                           ; BSR set to: 0
  9232  01217C  AE22               	btfss	___awmod@divisor+1,7,c
  9233  01217E  D7F9               	goto	l4211
  9234  012180                     l4215:
  9235                           
  9236                           ; BSR set to: 0
  9237  012180  5021               	movf	___awmod@divisor,w,c
  9238  012182  5C1F               	subwf	___awmod@dividend,w,c
  9239  012184  5022               	movf	___awmod@divisor+1,w,c
  9240  012186  5820               	subwfb	___awmod@dividend+1,w,c
  9241  012188  A0D8               	btfss	status,0,c
  9242  01218A  D004               	goto	l4219
  9243                           
  9244                           ; BSR set to: 0
  9245  01218C  5021               	movf	___awmod@divisor,w,c
  9246  01218E  5E1F               	subwf	___awmod@dividend,f,c
  9247  012190  5022               	movf	___awmod@divisor+1,w,c
  9248  012192  5A20               	subwfb	___awmod@dividend+1,f,c
  9249  012194                     l4219:
  9250                           
  9251                           ; BSR set to: 0
  9252  012194  90D8               	bcf	status,0,c
  9253  012196  3222               	rrcf	___awmod@divisor+1,f,c
  9254  012198  3221               	rrcf	___awmod@divisor,f,c
  9255                           
  9256                           ; BSR set to: 0
  9257  01219A  0100               	movlb	0	; () banked
  9258  01219C  2F60               	decfsz	___awmod@counter& (0+255),f,b
  9259  01219E  D7F0               	goto	l4215
  9260  0121A0                     l4223:
  9261                           
  9262                           ; BSR set to: 0
  9263  0121A0  0100               	movlb	0	; () banked
  9264  0121A2  5161               	movf	___awmod@sign& (0+255),w,b
  9265  0121A4  0100               	movlb	0	; () banked
  9266  0121A6  B4D8               	btfsc	status,2,c
  9267  0121A8  D004               	goto	l4227
  9268                           
  9269                           ; BSR set to: 0
  9270  0121AA  6C1F               	negf	___awmod@dividend,c
  9271  0121AC  1E20               	comf	___awmod@dividend+1,f,c
  9272  0121AE  B0D8               	btfsc	status,0,c
  9273  0121B0  2A20               	incf	___awmod@dividend+1,f,c
  9274  0121B2                     l4227:
  9275                           
  9276                           ; BSR set to: 0
  9277  0121B2  C01F  F01F         	movff	___awmod@dividend,?___awmod
  9278  0121B6  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  9279  0121BA  0012               	return	
  9280  0121BC                     __end_of___awmod:
  9281                           	opt stack 0
  9282                           tblptru	equ	0xFF8
  9283                           tblptrh	equ	0xFF7
  9284                           tblptrl	equ	0xFF6
  9285                           tablat	equ	0xFF5
  9286                           prodh	equ	0xFF4
  9287                           prodl	equ	0xFF3
  9288                           intcon	equ	0xFF2
  9289                           intcon2	equ	0xFF1
  9290                           postinc0	equ	0xFEE
  9291                           wreg	equ	0xFE8
  9292                           indf1	equ	0xFE7
  9293                           postinc1	equ	0xFE6
  9294                           postdec1	equ	0xFE5
  9295                           fsr1h	equ	0xFE2
  9296                           fsr1l	equ	0xFE1
  9297                           indf2	equ	0xFDF
  9298                           postinc2	equ	0xFDE
  9299                           postdec2	equ	0xFDD
  9300                           fsr2h	equ	0xFDA
  9301                           fsr2l	equ	0xFD9
  9302                           status	equ	0xFD8
  9303                           
  9304 ;; *************** function _get_quot_rem *****************
  9305 ;; Defined at:
  9306 ;;		line 112 in file "../My_header\My_RTCC.h"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  quot            2   33[BANK0 ] PTR unsigned long 
  9309 ;;		 -> epoch_to_caltime@num(4), 
  9310 ;;  div             1   35[BANK0 ] unsigned char 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  num             4   37[BANK0 ] unsigned long 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  4   33[BANK0 ] unsigned long 
  9315 ;; Registers used:
  9316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9323 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9325 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9326 ;;Total ram usage:        8 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    5
  9329 ;; This function calls:
  9330 ;;		___lldiv
  9331 ;;		___lmul
  9332 ;; This function is called by:
  9333 ;;		_epoch_to_caltime
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text44
  9338  0114F4                     __ptext44:
  9339                           	opt stack 0
  9340  0114F4                     _get_quot_rem:
  9341                           	opt stack 20
  9342                           
  9343                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;incstack = 0
  9347  0114F4  C081  FFD9         	movff	get_quot_rem@quot,fsr2l
  9348  0114F8  C082  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  9349  0114FC  CFDE F085          	movff	postinc2,get_quot_rem@num
  9350  011500  CFDE F086          	movff	postinc2,get_quot_rem@num+1
  9351  011504  CFDE F087          	movff	postinc2,get_quot_rem@num+2
  9352  011508  CFDE F088          	movff	postinc2,get_quot_rem@num+3
  9353                           
  9354                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
  9355  01150C  0100               	movlb	0	; () banked
  9356  01150E  5183               	movf	get_quot_rem@div& (0+255),w,b
  9357  011510  0100               	movlb	0	; () banked
  9358  011512  6F78               	movwf	___lldiv@divisor& (0+255),b
  9359  011514  6B79               	clrf	(___lldiv@divisor+1)& (0+255),b
  9360  011516  6B7A               	clrf	(___lldiv@divisor+2)& (0+255),b
  9361  011518  6B7B               	clrf	(___lldiv@divisor+3)& (0+255),b
  9362  01151A  C085  F074         	movff	get_quot_rem@num,___lldiv@dividend
  9363  01151E  C086  F075         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  9364  011522  C087  F076         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  9365  011526  C088  F077         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  9366  01152A  EC7A  F08C         	call	___lldiv	;wreg free
  9367  01152E  C081  FFD9         	movff	get_quot_rem@quot,fsr2l
  9368  011532  C082  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  9369  011536  0100               	movlb	0	; () banked
  9370  011538  C074  FFDE         	movff	?___lldiv,postinc2
  9371  01153C  0100               	movlb	0	; () banked
  9372  01153E  C075  FFDE         	movff	?___lldiv+1,postinc2
  9373  011542  0100               	movlb	0	; () banked
  9374  011544  C076  FFDE         	movff	?___lldiv+2,postinc2
  9375  011548  0100               	movlb	0	; () banked
  9376  01154A  C077  FFDD         	movff	?___lldiv+3,postdec2
  9377  01154E  52DD               	movf	postdec2,f,c
  9378  011550  52DD               	movf	postdec2,f,c
  9379  011552  CFDE F068          	movff	postinc2,___lmul@multiplier
  9380  011556  CFDE F069          	movff	postinc2,___lmul@multiplier+1
  9381  01155A  CFDE F06A          	movff	postinc2,___lmul@multiplier+2
  9382  01155E  CFDE F06B          	movff	postinc2,___lmul@multiplier+3
  9383  011562  0100               	movlb	0	; () banked
  9384  011564  5183               	movf	get_quot_rem@div& (0+255),w,b
  9385  011566  0100               	movlb	0	; () banked
  9386  011568  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  9387  01156A  6B6D               	clrf	(___lmul@multiplicand+1)& (0+255),b
  9388  01156C  6B6E               	clrf	(___lmul@multiplicand+2)& (0+255),b
  9389  01156E  6B6F               	clrf	(___lmul@multiplicand+3)& (0+255),b
  9390  011570  EC1A  F091         	call	___lmul	;wreg free
  9391  011574  0100               	movlb	0	; () banked
  9392  011576  1F68               	comf	?___lmul& (0+255),f,b
  9393  011578  0100               	movlb	0	; () banked
  9394  01157A  1F69               	comf	(?___lmul+1)& (0+255),f,b
  9395  01157C  0100               	movlb	0	; () banked
  9396  01157E  1F6A               	comf	(?___lmul+2)& (0+255),f,b
  9397  011580  0100               	movlb	0	; () banked
  9398  011582  1F6B               	comf	(?___lmul+3)& (0+255),f,b
  9399  011584  0100               	movlb	0	; () banked
  9400  011586  2B68               	incf	?___lmul& (0+255),f,b
  9401  011588  0E00               	movlw	0
  9402  01158A  0100               	movlb	0	; () banked
  9403  01158C  2369               	addwfc	(?___lmul+1)& (0+255),f,b
  9404  01158E  0100               	movlb	0	; () banked
  9405  011590  236A               	addwfc	(?___lmul+2)& (0+255),f,b
  9406  011592  0100               	movlb	0	; () banked
  9407  011594  236B               	addwfc	(?___lmul+3)& (0+255),f,b
  9408  011596  0100               	movlb	0	; () banked
  9409  011598  5185               	movf	get_quot_rem@num& (0+255),w,b
  9410  01159A  0100               	movlb	0	; () banked
  9411  01159C  2568               	addwf	?___lmul& (0+255),w,b
  9412  01159E  0100               	movlb	0	; () banked
  9413  0115A0  6F81               	movwf	?_get_quot_rem& (0+255),b
  9414  0115A2  0100               	movlb	0	; () banked
  9415  0115A4  5186               	movf	(get_quot_rem@num+1)& (0+255),w,b
  9416  0115A6  0100               	movlb	0	; () banked
  9417  0115A8  2169               	addwfc	(?___lmul+1)& (0+255),w,b
  9418  0115AA  0100               	movlb	0	; () banked
  9419  0115AC  6F82               	movwf	(?_get_quot_rem+1)& (0+255),b
  9420  0115AE  0100               	movlb	0	; () banked
  9421  0115B0  5187               	movf	(get_quot_rem@num+2)& (0+255),w,b
  9422  0115B2  0100               	movlb	0	; () banked
  9423  0115B4  216A               	addwfc	(?___lmul+2)& (0+255),w,b
  9424  0115B6  0100               	movlb	0	; () banked
  9425  0115B8  6F83               	movwf	(?_get_quot_rem+2)& (0+255),b
  9426  0115BA  0100               	movlb	0	; () banked
  9427  0115BC  5188               	movf	(get_quot_rem@num+3)& (0+255),w,b
  9428  0115BE  0100               	movlb	0	; () banked
  9429  0115C0  216B               	addwfc	(?___lmul+3)& (0+255),w,b
  9430  0115C2  0100               	movlb	0	; () banked
  9431  0115C4  6F84               	movwf	(?_get_quot_rem+3)& (0+255),b
  9432  0115C6  0012               	return	
  9433  0115C8                     __end_of_get_quot_rem:
  9434                           	opt stack 0
  9435                           tblptru	equ	0xFF8
  9436                           tblptrh	equ	0xFF7
  9437                           tblptrl	equ	0xFF6
  9438                           tablat	equ	0xFF5
  9439                           prodh	equ	0xFF4
  9440                           prodl	equ	0xFF3
  9441                           intcon	equ	0xFF2
  9442                           intcon2	equ	0xFF1
  9443                           postinc0	equ	0xFEE
  9444                           wreg	equ	0xFE8
  9445                           indf1	equ	0xFE7
  9446                           postinc1	equ	0xFE6
  9447                           postdec1	equ	0xFE5
  9448                           fsr1h	equ	0xFE2
  9449                           fsr1l	equ	0xFE1
  9450                           indf2	equ	0xFDF
  9451                           postinc2	equ	0xFDE
  9452                           postdec2	equ	0xFDD
  9453                           fsr2h	equ	0xFDA
  9454                           fsr2l	equ	0xFD9
  9455                           status	equ	0xFD8
  9456                           
  9457 ;; *************** function ___lmul *****************
  9458 ;; Defined at:
  9459 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  multiplier      4    8[BANK0 ] unsigned long 
  9462 ;;  multiplicand    4   12[BANK0 ] unsigned long 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  product         4   16[BANK0 ] unsigned long 
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  4    8[BANK0 ] unsigned long 
  9467 ;; Registers used:
  9468 ;;		wreg, status,2, status,0
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9474 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9475 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;Total ram usage:       12 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:    4
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		_get_quot_rem
  9485 ;;		_caltime_to_epoch
  9486 ;;		_normal_loop
  9487 ;;		_RTCC_adjust_time_inc
  9488 ;;		_RTCC_adjust_time_dec
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           	psect	text45
  9493  012234                     __ptext45:
  9494                           	opt stack 0
  9495  012234                     ___lmul:
  9496                           	opt stack 21
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;incstack = 0
  9500  012234  0E00               	movlw	0
  9501  012236  0100               	movlb	0	; () banked
  9502  012238  6F70               	movwf	___lmul@product& (0+255),b
  9503  01223A  0E00               	movlw	0
  9504  01223C  6F71               	movwf	(___lmul@product+1)& (0+255),b
  9505  01223E  0E00               	movlw	0
  9506  012240  6F72               	movwf	(___lmul@product+2)& (0+255),b
  9507  012242  0E00               	movlw	0
  9508  012244  6F73               	movwf	(___lmul@product+3)& (0+255),b
  9509  012246                     l4259:
  9510                           
  9511                           ; BSR set to: 0
  9512  012246  0100               	movlb	0	; () banked
  9513  012248  A168               	btfss	___lmul@multiplier& (0+255),0,b
  9514  01224A  D010               	goto	l4263
  9515                           
  9516                           ; BSR set to: 0
  9517  01224C  0100               	movlb	0	; () banked
  9518  01224E  516C               	movf	___lmul@multiplicand& (0+255),w,b
  9519  012250  0100               	movlb	0	; () banked
  9520  012252  2770               	addwf	___lmul@product& (0+255),f,b
  9521  012254  0100               	movlb	0	; () banked
  9522  012256  516D               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  9523  012258  0100               	movlb	0	; () banked
  9524  01225A  2371               	addwfc	(___lmul@product+1)& (0+255),f,b
  9525  01225C  0100               	movlb	0	; () banked
  9526  01225E  516E               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  9527  012260  0100               	movlb	0	; () banked
  9528  012262  2372               	addwfc	(___lmul@product+2)& (0+255),f,b
  9529  012264  0100               	movlb	0	; () banked
  9530  012266  516F               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  9531  012268  0100               	movlb	0	; () banked
  9532  01226A  2373               	addwfc	(___lmul@product+3)& (0+255),f,b
  9533  01226C                     l4263:
  9534                           
  9535                           ; BSR set to: 0
  9536  01226C  0100               	movlb	0	; () banked
  9537  01226E  90D8               	bcf	status,0,c
  9538  012270  376C               	rlcf	___lmul@multiplicand& (0+255),f,b
  9539  012272  376D               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  9540  012274  376E               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  9541  012276  376F               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  9542                           
  9543                           ; BSR set to: 0
  9544  012278  0100               	movlb	0	; () banked
  9545  01227A  90D8               	bcf	status,0,c
  9546  01227C  336B               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  9547  01227E  336A               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  9548  012280  3369               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  9549  012282  3368               	rrcf	___lmul@multiplier& (0+255),f,b
  9550  012284  0100               	movlb	0	; () banked
  9551  012286  5168               	movf	___lmul@multiplier& (0+255),w,b
  9552  012288  0100               	movlb	0	; () banked
  9553  01228A  1169               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  9554  01228C  0100               	movlb	0	; () banked
  9555  01228E  116A               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  9556  012290  0100               	movlb	0	; () banked
  9557  012292  116B               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  9558  012294  A4D8               	btfss	status,2,c
  9559  012296  D7D7               	goto	l4259
  9560                           
  9561                           ; BSR set to: 0
  9562  012298  C070  F068         	movff	___lmul@product,?___lmul
  9563  01229C  C071  F069         	movff	___lmul@product+1,?___lmul+1
  9564  0122A0  C072  F06A         	movff	___lmul@product+2,?___lmul+2
  9565  0122A4  C073  F06B         	movff	___lmul@product+3,?___lmul+3
  9566                           
  9567                           ; BSR set to: 0
  9568  0122A8  0012               	return		;funcret
  9569  0122AA                     __end_of___lmul:
  9570                           	opt stack 0
  9571                           tblptru	equ	0xFF8
  9572                           tblptrh	equ	0xFF7
  9573                           tblptrl	equ	0xFF6
  9574                           tablat	equ	0xFF5
  9575                           prodh	equ	0xFF4
  9576                           prodl	equ	0xFF3
  9577                           intcon	equ	0xFF2
  9578                           intcon2	equ	0xFF1
  9579                           postinc0	equ	0xFEE
  9580                           wreg	equ	0xFE8
  9581                           indf1	equ	0xFE7
  9582                           postinc1	equ	0xFE6
  9583                           postdec1	equ	0xFE5
  9584                           fsr1h	equ	0xFE2
  9585                           fsr1l	equ	0xFE1
  9586                           indf2	equ	0xFDF
  9587                           postinc2	equ	0xFDE
  9588                           postdec2	equ	0xFDD
  9589                           fsr2h	equ	0xFDA
  9590                           fsr2l	equ	0xFD9
  9591                           status	equ	0xFD8
  9592                           
  9593 ;; *************** function ___lldiv *****************
  9594 ;; Defined at:
  9595 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  dividend        4   20[BANK0 ] unsigned long 
  9598 ;;  divisor         4   24[BANK0 ] unsigned long 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  quotient        4   28[BANK0 ] unsigned long 
  9601 ;;  counter         1   32[BANK0 ] unsigned char 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  4   20[BANK0 ] unsigned long 
  9604 ;; Registers used:
  9605 ;;		wreg, status,2, status,0
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9611 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9612 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9614 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9615 ;;Total ram usage:       13 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    4
  9618 ;; This function calls:
  9619 ;;		Nothing
  9620 ;; This function is called by:
  9621 ;;		_get_quot_rem
  9622 ;;		_normal_loop
  9623 ;;		_CTMU_read
  9624 ;;		_my_utoa32
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text46
  9629  0118F4                     __ptext46:
  9630                           	opt stack 0
  9631  0118F4                     ___lldiv:
  9632                           	opt stack 20
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;incstack = 0
  9636  0118F4  0E00               	movlw	0
  9637  0118F6  0100               	movlb	0	; () banked
  9638  0118F8  6F7C               	movwf	___lldiv@quotient& (0+255),b
  9639  0118FA  0E00               	movlw	0
  9640  0118FC  6F7D               	movwf	(___lldiv@quotient+1)& (0+255),b
  9641  0118FE  0E00               	movlw	0
  9642  011900  6F7E               	movwf	(___lldiv@quotient+2)& (0+255),b
  9643  011902  0E00               	movlw	0
  9644  011904  6F7F               	movwf	(___lldiv@quotient+3)& (0+255),b
  9645                           
  9646                           ; BSR set to: 0
  9647  011906  0100               	movlb	0	; () banked
  9648  011908  5178               	movf	___lldiv@divisor& (0+255),w,b
  9649  01190A  0100               	movlb	0	; () banked
  9650  01190C  1179               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9651  01190E  0100               	movlb	0	; () banked
  9652  011910  117A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9653  011912  0100               	movlb	0	; () banked
  9654  011914  117B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9655  011916  B4D8               	btfsc	status,2,c
  9656  011918  D042               	goto	l1013
  9657                           
  9658                           ; BSR set to: 0
  9659  01191A  0E01               	movlw	1
  9660  01191C  0100               	movlb	0	; () banked
  9661  01191E  6F80               	movwf	___lldiv@counter& (0+255),b
  9662  011920  D008               	goto	l4319
  9663  011922                     l4317:
  9664                           
  9665                           ; BSR set to: 0
  9666  011922  0100               	movlb	0	; () banked
  9667  011924  90D8               	bcf	status,0,c
  9668  011926  3778               	rlcf	___lldiv@divisor& (0+255),f,b
  9669  011928  3779               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9670  01192A  377A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9671  01192C  377B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9672  01192E  0100               	movlb	0	; () banked
  9673  011930  2B80               	incf	___lldiv@counter& (0+255),f,b
  9674  011932                     l4319:
  9675                           
  9676                           ; BSR set to: 0
  9677  011932  0100               	movlb	0	; () banked
  9678  011934  AF7B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9679  011936  D7F5               	goto	l4317
  9680  011938                     l4321:
  9681                           
  9682                           ; BSR set to: 0
  9683  011938  0100               	movlb	0	; () banked
  9684  01193A  90D8               	bcf	status,0,c
  9685  01193C  377C               	rlcf	___lldiv@quotient& (0+255),f,b
  9686  01193E  377D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9687  011940  377E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9688  011942  377F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9689                           
  9690                           ; BSR set to: 0
  9691  011944  0100               	movlb	0	; () banked
  9692  011946  5178               	movf	___lldiv@divisor& (0+255),w,b
  9693  011948  0100               	movlb	0	; () banked
  9694  01194A  5D74               	subwf	___lldiv@dividend& (0+255),w,b
  9695  01194C  0100               	movlb	0	; () banked
  9696  01194E  5179               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9697  011950  0100               	movlb	0	; () banked
  9698  011952  5975               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9699  011954  0100               	movlb	0	; () banked
  9700  011956  517A               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9701  011958  0100               	movlb	0	; () banked
  9702  01195A  5976               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9703  01195C  0100               	movlb	0	; () banked
  9704  01195E  517B               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9705  011960  0100               	movlb	0	; () banked
  9706  011962  5977               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9707  011964  A0D8               	btfss	status,0,c
  9708  011966  D012               	goto	l4329
  9709                           
  9710                           ; BSR set to: 0
  9711  011968  0100               	movlb	0	; () banked
  9712  01196A  5178               	movf	___lldiv@divisor& (0+255),w,b
  9713  01196C  0100               	movlb	0	; () banked
  9714  01196E  5F74               	subwf	___lldiv@dividend& (0+255),f,b
  9715  011970  0100               	movlb	0	; () banked
  9716  011972  5179               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9717  011974  0100               	movlb	0	; () banked
  9718  011976  5B75               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9719  011978  0100               	movlb	0	; () banked
  9720  01197A  517A               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9721  01197C  0100               	movlb	0	; () banked
  9722  01197E  5B76               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9723  011980  0100               	movlb	0	; () banked
  9724  011982  517B               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9725  011984  0100               	movlb	0	; () banked
  9726  011986  5B77               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9727                           
  9728                           ; BSR set to: 0
  9729  011988  0100               	movlb	0	; () banked
  9730  01198A  817C               	bsf	___lldiv@quotient& (0+255),0,b
  9731  01198C                     l4329:
  9732                           
  9733                           ; BSR set to: 0
  9734  01198C  0100               	movlb	0	; () banked
  9735  01198E  90D8               	bcf	status,0,c
  9736  011990  337B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9737  011992  337A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9738  011994  3379               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9739  011996  3378               	rrcf	___lldiv@divisor& (0+255),f,b
  9740                           
  9741                           ; BSR set to: 0
  9742  011998  0100               	movlb	0	; () banked
  9743  01199A  2F80               	decfsz	___lldiv@counter& (0+255),f,b
  9744  01199C  D7CD               	goto	l4321
  9745  01199E                     l1013:
  9746                           
  9747                           ; BSR set to: 0
  9748  01199E  C07C  F074         	movff	___lldiv@quotient,?___lldiv
  9749  0119A2  C07D  F075         	movff	___lldiv@quotient+1,?___lldiv+1
  9750  0119A6  C07E  F076         	movff	___lldiv@quotient+2,?___lldiv+2
  9751  0119AA  C07F  F077         	movff	___lldiv@quotient+3,?___lldiv+3
  9752                           
  9753                           ; BSR set to: 0
  9754  0119AE  0012               	return		;funcret
  9755  0119B0                     __end_of___lldiv:
  9756                           	opt stack 0
  9757                           tblptru	equ	0xFF8
  9758                           tblptrh	equ	0xFF7
  9759                           tblptrl	equ	0xFF6
  9760                           tablat	equ	0xFF5
  9761                           prodh	equ	0xFF4
  9762                           prodl	equ	0xFF3
  9763                           intcon	equ	0xFF2
  9764                           intcon2	equ	0xFF1
  9765                           postinc0	equ	0xFEE
  9766                           wreg	equ	0xFE8
  9767                           indf1	equ	0xFE7
  9768                           postinc1	equ	0xFE6
  9769                           postdec1	equ	0xFE5
  9770                           fsr1h	equ	0xFE2
  9771                           fsr1l	equ	0xFE1
  9772                           indf2	equ	0xFDF
  9773                           postinc2	equ	0xFDE
  9774                           postdec2	equ	0xFDD
  9775                           fsr2h	equ	0xFDA
  9776                           fsr2l	equ	0xFD9
  9777                           status	equ	0xFD8
  9778                           
  9779 ;; *************** function _caltime_to_RTCC *****************
  9780 ;; Defined at:
  9781 ;;		line 137 in file "../My_header\My_RTCC.h"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  ct              2    5[BANK0 ] PTR struct .
  9784 ;;		 -> caltime_now(7), 
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;		None
  9787 ;; Return value:  Size  Location     Type
  9788 ;;		None               void
  9789 ;; Registers used:
  9790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9791 ;; Tracked objects:
  9792 ;;		On entry : 0/0
  9793 ;;		On exit  : 0/0
  9794 ;;		Unchanged: 0/0
  9795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9800 ;;Total ram usage:        2 bytes
  9801 ;; Hardware stack levels used:    1
  9802 ;; Hardware stack levels required when called:    6
  9803 ;; This function calls:
  9804 ;;		_d_to_x
  9805 ;; This function is called by:
  9806 ;;		_RTCC_from_caltime
  9807 ;;		_RTCC_from_epoch
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text47
  9812  011698                     __ptext47:
  9813                           	opt stack 0
  9814  011698                     _caltime_to_RTCC:
  9815                           	opt stack 20
  9816  011698                     l350:
  9817  011698  010F               	movlb	15	; () banked
  9818  01169A  B93F               	btfsc	63,4,b	;volatile
  9819  01169C  D7FD               	goto	l350
  9820                           
  9821                           ; BSR set to: 15
  9822                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
  9823  01169E  010F               	movlb	15	; () banked
  9824  0116A0  813F               	bsf	63,0,b	;volatile
  9825                           
  9826                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
  9827  0116A2  010F               	movlb	15	; () banked
  9828  0116A4  833F               	bsf	63,1,b	;volatile
  9829                           
  9830                           ; BSR set to: 15
  9831                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
  9832  0116A6  0100               	movlb	0	; () banked
  9833  0116A8  EE20 F006          	lfsr	2,6
  9834  0116AC  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9835  0116AE  26D9               	addwf	fsr2l,f,c
  9836  0116B0  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9837  0116B2  22DA               	addwfc	fsr2h,f,c
  9838  0116B4  50DF               	movf	indf2,w,c
  9839  0116B6  ECF9  F093         	call	_d_to_x
  9840  0116BA  010F               	movlb	15	; () banked
  9841  0116BC  6F3A               	movwf	58,b	;volatile
  9842                           
  9843                           ; BSR set to: 15
  9844                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
  9845  0116BE  0E00               	movlw	0
  9846  0116C0  010F               	movlb	15	; () banked
  9847  0116C2  6F3B               	movwf	59,b	;volatile
  9848                           
  9849                           ; BSR set to: 15
  9850                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
  9851  0116C4  010F               	movlb	15	; () banked
  9852  0116C6  913F               	bcf	63,0,b	;volatile
  9853                           
  9854                           ; BSR set to: 15
  9855                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
  9856  0116C8  010F               	movlb	15	; () banked
  9857  0116CA  833F               	bsf	63,1,b	;volatile
  9858                           
  9859                           ; BSR set to: 15
  9860                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
  9861  0116CC  0100               	movlb	0	; () banked
  9862  0116CE  EE20 F004          	lfsr	2,4
  9863  0116D2  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9864  0116D4  26D9               	addwf	fsr2l,f,c
  9865  0116D6  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9866  0116D8  22DA               	addwfc	fsr2h,f,c
  9867  0116DA  50DF               	movf	indf2,w,c
  9868  0116DC  ECF9  F093         	call	_d_to_x
  9869  0116E0  010F               	movlb	15	; () banked
  9870  0116E2  6F3A               	movwf	58,b	;volatile
  9871                           
  9872                           ; BSR set to: 15
  9873                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
  9874  0116E4  0100               	movlb	0	; () banked
  9875  0116E6  EE20 F005          	lfsr	2,5
  9876  0116EA  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9877  0116EC  26D9               	addwf	fsr2l,f,c
  9878  0116EE  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9879  0116F0  22DA               	addwfc	fsr2h,f,c
  9880  0116F2  50DF               	movf	indf2,w,c
  9881  0116F4  ECF9  F093         	call	_d_to_x
  9882  0116F8  010F               	movlb	15	; () banked
  9883  0116FA  6F3B               	movwf	59,b	;volatile
  9884                           
  9885                           ; BSR set to: 15
  9886                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
  9887  0116FC  010F               	movlb	15	; () banked
  9888  0116FE  813F               	bsf	63,0,b	;volatile
  9889                           
  9890                           ; BSR set to: 15
  9891                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
  9892  011700  010F               	movlb	15	; () banked
  9893  011702  933F               	bcf	63,1,b	;volatile
  9894                           
  9895                           ; BSR set to: 15
  9896                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
  9897  011704  0100               	movlb	0	; () banked
  9898  011706  EE20 F002          	lfsr	2,2
  9899  01170A  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9900  01170C  26D9               	addwf	fsr2l,f,c
  9901  01170E  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9902  011710  22DA               	addwfc	fsr2h,f,c
  9903  011712  50DF               	movf	indf2,w,c
  9904  011714  ECF9  F093         	call	_d_to_x
  9905  011718  010F               	movlb	15	; () banked
  9906  01171A  6F3A               	movwf	58,b	;volatile
  9907                           
  9908                           ; BSR set to: 15
  9909                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
  9910  01171C  0100               	movlb	0	; () banked
  9911  01171E  EE20 F003          	lfsr	2,3
  9912  011722  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9913  011724  26D9               	addwf	fsr2l,f,c
  9914  011726  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9915  011728  22DA               	addwfc	fsr2h,f,c
  9916  01172A  50DF               	movf	indf2,w,c
  9917  01172C  ECF9  F093         	call	_d_to_x
  9918  011730  010F               	movlb	15	; () banked
  9919  011732  6F3B               	movwf	59,b	;volatile
  9920                           
  9921                           ; BSR set to: 15
  9922                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
  9923  011734  010F               	movlb	15	; () banked
  9924  011736  913F               	bcf	63,0,b	;volatile
  9925                           
  9926                           ; BSR set to: 15
  9927                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
  9928  011738  010F               	movlb	15	; () banked
  9929  01173A  933F               	bcf	63,1,b	;volatile
  9930                           
  9931                           ; BSR set to: 15
  9932                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
  9933  01173C  C065  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  9934  011740  C066  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  9935  011744  50DF               	movf	indf2,w,c
  9936  011746  ECF9  F093         	call	_d_to_x
  9937  01174A  010F               	movlb	15	; () banked
  9938  01174C  6F3A               	movwf	58,b	;volatile
  9939                           
  9940                           ; BSR set to: 15
  9941                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
  9942  01174E  0100               	movlb	0	; () banked
  9943  011750  EE20 F001          	lfsr	2,1
  9944  011754  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9945  011756  26D9               	addwf	fsr2l,f,c
  9946  011758  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9947  01175A  22DA               	addwfc	fsr2h,f,c
  9948  01175C  50DF               	movf	indf2,w,c
  9949  01175E  ECF9  F093         	call	_d_to_x
  9950  011762  010F               	movlb	15	; () banked
  9951  011764  6F3B               	movwf	59,b	;volatile
  9952                           
  9953                           ; BSR set to: 15
  9954  011766  0012               	return		;funcret
  9955  011768                     __end_of_caltime_to_RTCC:
  9956                           	opt stack 0
  9957                           tblptru	equ	0xFF8
  9958                           tblptrh	equ	0xFF7
  9959                           tblptrl	equ	0xFF6
  9960                           tablat	equ	0xFF5
  9961                           prodh	equ	0xFF4
  9962                           prodl	equ	0xFF3
  9963                           intcon	equ	0xFF2
  9964                           intcon2	equ	0xFF1
  9965                           postinc0	equ	0xFEE
  9966                           wreg	equ	0xFE8
  9967                           indf1	equ	0xFE7
  9968                           postinc1	equ	0xFE6
  9969                           postdec1	equ	0xFE5
  9970                           fsr1h	equ	0xFE2
  9971                           fsr1l	equ	0xFE1
  9972                           indf2	equ	0xFDF
  9973                           postinc2	equ	0xFDE
  9974                           postdec2	equ	0xFDD
  9975                           fsr2h	equ	0xFDA
  9976                           fsr2l	equ	0xFD9
  9977                           status	equ	0xFD8
  9978                           
  9979 ;; *************** function _d_to_x *****************
  9980 ;; Defined at:
  9981 ;;		line 73 in file "../My_header\My_RTCC.h"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  dec             1    wreg     unsigned char 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  dec             1    4[BANK0 ] unsigned char 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1    wreg      unsigned char 
  9988 ;; Registers used:
  9989 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9998 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9999 ;;Total ram usage:        1 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    5
 10002 ;; This function calls:
 10003 ;;		___awdiv
 10004 ;; This function is called by:
 10005 ;;		_caltime_to_RTCC
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           	psect	text48
 10010  0127F2                     __ptext48:
 10011                           	opt stack 0
 10012  0127F2                     _d_to_x:
 10013                           	opt stack 20
 10014                           
 10015                           ; BSR set to: 15
 10016                           ;incstack = 0
 10017                           ;d_to_x@dec stored from wreg
 10018  0127F2  0100               	movlb	0	; () banked
 10019  0127F4  6F64               	movwf	d_to_x@dec& (0+255),b
 10020                           
 10021                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 10022  0127F6  C064  F01F         	movff	d_to_x@dec,___awdiv@dividend
 10023  0127FA  6A20               	clrf	___awdiv@dividend+1,c
 10024  0127FC  0E00               	movlw	0
 10025  0127FE  6E22               	movwf	___awdiv@divisor+1,c
 10026  012800  0E0A               	movlw	10
 10027  012802  6E21               	movwf	___awdiv@divisor,c
 10028  012804  EC38  F08F         	call	___awdiv	;wreg free
 10029  012808  501F               	movf	?___awdiv,w,c
 10030  01280A  0D06               	mullw	6
 10031  01280C  50F3               	movf	prodl,w,c
 10032  01280E  0100               	movlb	0	; () banked
 10033  012810  2564               	addwf	d_to_x@dec& (0+255),w,b
 10034  012812  0012               	return	
 10035  012814                     __end_of_d_to_x:
 10036                           	opt stack 0
 10037                           tblptru	equ	0xFF8
 10038                           tblptrh	equ	0xFF7
 10039                           tblptrl	equ	0xFF6
 10040                           tablat	equ	0xFF5
 10041                           prodh	equ	0xFF4
 10042                           prodl	equ	0xFF3
 10043                           intcon	equ	0xFF2
 10044                           intcon2	equ	0xFF1
 10045                           postinc0	equ	0xFEE
 10046                           wreg	equ	0xFE8
 10047                           indf1	equ	0xFE7
 10048                           postinc1	equ	0xFE6
 10049                           postdec1	equ	0xFE5
 10050                           fsr1h	equ	0xFE2
 10051                           fsr1l	equ	0xFE1
 10052                           indf2	equ	0xFDF
 10053                           postinc2	equ	0xFDE
 10054                           postdec2	equ	0xFDD
 10055                           fsr2h	equ	0xFDA
 10056                           fsr2l	equ	0xFD9
 10057                           status	equ	0xFD8
 10058                           
 10059 ;; *************** function ___awdiv *****************
 10060 ;; Defined at:
 10061 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;  dividend        2   30[COMRAM] int 
 10064 ;;  divisor         2   32[COMRAM] int 
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;  quotient        2    2[BANK0 ] int 
 10067 ;;  sign            1    1[BANK0 ] unsigned char 
 10068 ;;  counter         1    0[BANK0 ] unsigned char 
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  2   30[COMRAM] int 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10079 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10081 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10082 ;;Total ram usage:        8 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    4
 10085 ;; This function calls:
 10086 ;;		Nothing
 10087 ;; This function is called by:
 10088 ;;		_d_to_x
 10089 ;; This function uses a non-reentrant model
 10090 ;;
 10091                           
 10092                           	psect	text49
 10093  011E70                     __ptext49:
 10094                           	opt stack 0
 10095  011E70                     ___awdiv:
 10096                           	opt stack 20
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;incstack = 0
 10100  011E70  0E00               	movlw	0
 10101  011E72  0100               	movlb	0	; () banked
 10102  011E74  6F61               	movwf	___awdiv@sign& (0+255),b
 10103                           
 10104                           ; BSR set to: 0
 10105  011E76  AE22               	btfss	___awdiv@divisor+1,7,c
 10106  011E78  D007               	goto	l4275
 10107                           
 10108                           ; BSR set to: 0
 10109  011E7A  6C21               	negf	___awdiv@divisor,c
 10110  011E7C  1E22               	comf	___awdiv@divisor+1,f,c
 10111  011E7E  B0D8               	btfsc	status,0,c
 10112  011E80  2A22               	incf	___awdiv@divisor+1,f,c
 10113                           
 10114                           ; BSR set to: 0
 10115  011E82  0E01               	movlw	1
 10116  011E84  0100               	movlb	0	; () banked
 10117  011E86  6F61               	movwf	___awdiv@sign& (0+255),b
 10118  011E88                     l4275:
 10119                           
 10120                           ; BSR set to: 0
 10121  011E88  AE20               	btfss	___awdiv@dividend+1,7,c
 10122  011E8A  D007               	goto	l4281
 10123                           
 10124                           ; BSR set to: 0
 10125  011E8C  6C1F               	negf	___awdiv@dividend,c
 10126  011E8E  1E20               	comf	___awdiv@dividend+1,f,c
 10127  011E90  B0D8               	btfsc	status,0,c
 10128  011E92  2A20               	incf	___awdiv@dividend+1,f,c
 10129                           
 10130                           ; BSR set to: 0
 10131  011E94  0E01               	movlw	1
 10132  011E96  0100               	movlb	0	; () banked
 10133  011E98  1B61               	xorwf	___awdiv@sign& (0+255),f,b
 10134  011E9A                     l4281:
 10135                           
 10136                           ; BSR set to: 0
 10137  011E9A  0E00               	movlw	0
 10138  011E9C  0100               	movlb	0	; () banked
 10139  011E9E  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
 10140  011EA0  0E00               	movlw	0
 10141  011EA2  6F62               	movwf	___awdiv@quotient& (0+255),b
 10142                           
 10143                           ; BSR set to: 0
 10144  011EA4  5021               	movf	___awdiv@divisor,w,c
 10145  011EA6  1022               	iorwf	___awdiv@divisor+1,w,c
 10146  011EA8  B4D8               	btfsc	status,2,c
 10147  011EAA  D021               	goto	l4303
 10148                           
 10149                           ; BSR set to: 0
 10150  011EAC  0E01               	movlw	1
 10151  011EAE  0100               	movlb	0	; () banked
 10152  011EB0  6F60               	movwf	___awdiv@counter& (0+255),b
 10153  011EB2  D005               	goto	l4289
 10154  011EB4                     l4287:
 10155                           
 10156                           ; BSR set to: 0
 10157  011EB4  90D8               	bcf	status,0,c
 10158  011EB6  3621               	rlcf	___awdiv@divisor,f,c
 10159  011EB8  3622               	rlcf	___awdiv@divisor+1,f,c
 10160  011EBA  0100               	movlb	0	; () banked
 10161  011EBC  2B60               	incf	___awdiv@counter& (0+255),f,b
 10162  011EBE                     l4289:
 10163                           
 10164                           ; BSR set to: 0
 10165  011EBE  AE22               	btfss	___awdiv@divisor+1,7,c
 10166  011EC0  D7F9               	goto	l4287
 10167  011EC2                     l4291:
 10168                           
 10169                           ; BSR set to: 0
 10170  011EC2  0100               	movlb	0	; () banked
 10171  011EC4  90D8               	bcf	status,0,c
 10172  011EC6  3762               	rlcf	___awdiv@quotient& (0+255),f,b
 10173  011EC8  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10174                           
 10175                           ; BSR set to: 0
 10176  011ECA  5021               	movf	___awdiv@divisor,w,c
 10177  011ECC  5C1F               	subwf	___awdiv@dividend,w,c
 10178  011ECE  5022               	movf	___awdiv@divisor+1,w,c
 10179  011ED0  5820               	subwfb	___awdiv@dividend+1,w,c
 10180  011ED2  A0D8               	btfss	status,0,c
 10181  011ED4  D006               	goto	l4299
 10182                           
 10183                           ; BSR set to: 0
 10184  011ED6  5021               	movf	___awdiv@divisor,w,c
 10185  011ED8  5E1F               	subwf	___awdiv@dividend,f,c
 10186  011EDA  5022               	movf	___awdiv@divisor+1,w,c
 10187  011EDC  5A20               	subwfb	___awdiv@dividend+1,f,c
 10188                           
 10189                           ; BSR set to: 0
 10190  011EDE  0100               	movlb	0	; () banked
 10191  011EE0  8162               	bsf	___awdiv@quotient& (0+255),0,b
 10192  011EE2                     l4299:
 10193                           
 10194                           ; BSR set to: 0
 10195  011EE2  90D8               	bcf	status,0,c
 10196  011EE4  3222               	rrcf	___awdiv@divisor+1,f,c
 10197  011EE6  3221               	rrcf	___awdiv@divisor,f,c
 10198                           
 10199                           ; BSR set to: 0
 10200  011EE8  0100               	movlb	0	; () banked
 10201  011EEA  2F60               	decfsz	___awdiv@counter& (0+255),f,b
 10202  011EEC  D7EA               	goto	l4291
 10203  011EEE                     l4303:
 10204                           
 10205                           ; BSR set to: 0
 10206  011EEE  0100               	movlb	0	; () banked
 10207  011EF0  5161               	movf	___awdiv@sign& (0+255),w,b
 10208  011EF2  0100               	movlb	0	; () banked
 10209  011EF4  B4D8               	btfsc	status,2,c
 10210  011EF6  D005               	goto	l4307
 10211                           
 10212                           ; BSR set to: 0
 10213  011EF8  0100               	movlb	0	; () banked
 10214  011EFA  6D62               	negf	___awdiv@quotient& (0+255),b
 10215  011EFC  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10216  011EFE  B0D8               	btfsc	status,0,c
 10217  011F00  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10218  011F02                     l4307:
 10219                           
 10220                           ; BSR set to: 0
 10221  011F02  C062  F01F         	movff	___awdiv@quotient,?___awdiv
 10222  011F06  C063  F020         	movff	___awdiv@quotient+1,?___awdiv+1
 10223  011F0A  0012               	return	
 10224  011F0C                     __end_of___awdiv:
 10225                           	opt stack 0
 10226                           tblptru	equ	0xFF8
 10227                           tblptrh	equ	0xFF7
 10228                           tblptrl	equ	0xFF6
 10229                           tablat	equ	0xFF5
 10230                           prodh	equ	0xFF4
 10231                           prodl	equ	0xFF3
 10232                           intcon	equ	0xFF2
 10233                           intcon2	equ	0xFF1
 10234                           postinc0	equ	0xFEE
 10235                           wreg	equ	0xFE8
 10236                           indf1	equ	0xFE7
 10237                           postinc1	equ	0xFE6
 10238                           postdec1	equ	0xFE5
 10239                           fsr1h	equ	0xFE2
 10240                           fsr1l	equ	0xFE1
 10241                           indf2	equ	0xFDF
 10242                           postinc2	equ	0xFDE
 10243                           postdec2	equ	0xFDD
 10244                           fsr2h	equ	0xFDA
 10245                           fsr2l	equ	0xFD9
 10246                           status	equ	0xFD8
 10247                           
 10248 ;; *************** function _ISR *****************
 10249 ;; Defined at:
 10250 ;;		line 67 in file "PIC18F27J53-killifish_light02.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;		None
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;		None
 10255 ;; Return value:  Size  Location     Type
 10256 ;;		None               void
 10257 ;; Registers used:
 10258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10266 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10267 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10268 ;;Total ram usage:       14 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    3
 10271 ;; This function calls:
 10272 ;;		_UART_ISR
 10273 ;;		_button_timer_interrupt
 10274 ;; This function is called by:
 10275 ;;		Interrupt level 2
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279                           	psect	intcode
 10280  000008                     __pintcode:
 10281                           	opt stack 0
 10282  000008                     _ISR:
 10283                           	opt stack 19
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;incstack = 0
 10287  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10288  00000A  CFFA F011          	movff	pclath,??_ISR
 10289  00000E  CFFB F012          	movff	pclatu,??_ISR+1
 10290  000012  CFE9 F013          	movff	fsr0l,??_ISR+2
 10291  000016  CFEA F014          	movff	fsr0h,??_ISR+3
 10292  00001A  CFE1 F015          	movff	fsr1l,??_ISR+4
 10293  00001E  CFE2 F016          	movff	fsr1h,??_ISR+5
 10294  000022  CFD9 F017          	movff	fsr2l,??_ISR+6
 10295  000026  CFDA F018          	movff	fsr2h,??_ISR+7
 10296  00002A  CFF3 F019          	movff	prodl,??_ISR+8
 10297  00002E  CFF4 F01A          	movff	prodh,??_ISR+9
 10298  000032  CFF6 F01B          	movff	tblptrl,??_ISR+10
 10299  000036  CFF7 F01C          	movff	tblptrh,??_ISR+11
 10300  00003A  CFF8 F01D          	movff	tblptru,??_ISR+12
 10301  00003E  CFF5 F01E          	movff	tablat,??_ISR+13
 10302                           
 10303                           ;PIC18F27J53-killifish_light02.c: 68: UART_ISR();
 10304  000042  ECAD  F092         	call	_UART_ISR	;wreg free
 10305                           
 10306                           ;PIC18F27J53-killifish_light02.c: 69: if (INTCONbits.T0IF) {
 10307  000046  A4F2               	btfss	intcon,2,c	;volatile
 10308  000048  D003               	goto	i2l5335
 10309                           
 10310                           ;PIC18F27J53-killifish_light02.c: 70: INTCONbits.T0IF = 0;
 10311  00004A  94F2               	bcf	intcon,2,c	;volatile
 10312                           
 10313                           ;PIC18F27J53-killifish_light02.c: 71: t0if = 1;
 10314  00004C  0E01               	movlw	1
 10315  00004E  6E2D               	movwf	_t0if,c
 10316  000050                     i2l5335:
 10317                           
 10318                           ;PIC18F27J53-killifish_light02.c: 72: }
 10319                           ;PIC18F27J53-killifish_light02.c: 73: if (PIR1bits.TMR1IF) {
 10320  000050  A09E               	btfss	3998,0,c	;volatile
 10321  000052  D003               	goto	i2l5341
 10322                           
 10323                           ;PIC18F27J53-killifish_light02.c: 74: PIR1bits.TMR1IF = 0;
 10324  000054  909E               	bcf	3998,0,c	;volatile
 10325                           
 10326                           ;PIC18F27J53-killifish_light02.c: 75: TMR1H = 0x80;
 10327  000056  0E80               	movlw	128
 10328  000058  6ECF               	movwf	4047,c	;volatile
 10329  00005A                     i2l5341:
 10330                           
 10331                           ;PIC18F27J53-killifish_light02.c: 76: }
 10332                           ;PIC18F27J53-killifish_light02.c: 77: if (PIR2bits.TMR3IF) {
 10333  00005A  A2A1               	btfss	4001,1,c	;volatile
 10334  00005C  D025               	goto	i2l513
 10335                           
 10336                           ;PIC18F27J53-killifish_light02.c: 78: PIR2bits.TMR3IF = 0;
 10337  00005E  92A1               	bcf	4001,1,c	;volatile
 10338                           
 10339                           ;PIC18F27J53-killifish_light02.c: 79: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 10340  000060  0E3C               	movlw	low _sw_R
 10341  000062  6E01               	movwf	button_timer_interrupt@bt,c
 10342  000064  0E00               	movlw	high _sw_R
 10343  000066  6E02               	movwf	button_timer_interrupt@bt+1,c
 10344  000068  BA80               	btfsc	3968,5,c	;volatile
 10345  00006A  D002               	goto	i2u596_40
 10346  00006C  0E01               	movlw	1
 10347  00006E  D001               	goto	i2u597_40
 10348  000070                     i2u596_40:
 10349  000070  0E00               	movlw	0
 10350  000072                     i2u597_40:
 10351  000072  6E03               	movwf	button_timer_interrupt@sw_value,c
 10352  000074  ECB1  F086         	call	_button_timer_interrupt	;wreg free
 10353                           
 10354                           ;PIC18F27J53-killifish_light02.c: 80: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 10355  000078  0E38               	movlw	low _sw_G
 10356  00007A  6E01               	movwf	button_timer_interrupt@bt,c
 10357  00007C  0E00               	movlw	high _sw_G
 10358  00007E  6E02               	movwf	button_timer_interrupt@bt+1,c
 10359  000080  BC80               	btfsc	3968,6,c	;volatile
 10360  000082  D002               	goto	i2u598_40
 10361  000084  0E01               	movlw	1
 10362  000086  D001               	goto	i2u599_40
 10363  000088                     i2u598_40:
 10364  000088  0E00               	movlw	0
 10365  00008A                     i2u599_40:
 10366  00008A  6E03               	movwf	button_timer_interrupt@sw_value,c
 10367  00008C  ECB1  F086         	call	_button_timer_interrupt	;wreg free
 10368                           
 10369                           ;PIC18F27J53-killifish_light02.c: 81: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 10370  000090  0EE7               	movlw	low _sw_B
 10371  000092  6E01               	movwf	button_timer_interrupt@bt,c
 10372  000094  0E01               	movlw	high _sw_B
 10373  000096  6E02               	movwf	button_timer_interrupt@bt+1,c
 10374  000098  BE80               	btfsc	3968,7,c	;volatile
 10375  00009A  D002               	goto	i2u600_40
 10376  00009C  0E01               	movlw	1
 10377  00009E  D001               	goto	i2u601_40
 10378  0000A0                     i2u600_40:
 10379  0000A0  0E00               	movlw	0
 10380  0000A2                     i2u601_40:
 10381  0000A2  6E03               	movwf	button_timer_interrupt@sw_value,c
 10382  0000A4  ECB1  F086         	call	_button_timer_interrupt	;wreg free
 10383  0000A8                     i2l513:
 10384  0000A8  C01E  FFF5         	movff	??_ISR+13,tablat
 10385  0000AC  C01D  FFF8         	movff	??_ISR+12,tblptru
 10386  0000B0  C01C  FFF7         	movff	??_ISR+11,tblptrh
 10387  0000B4  C01B  FFF6         	movff	??_ISR+10,tblptrl
 10388  0000B8  C01A  FFF4         	movff	??_ISR+9,prodh
 10389  0000BC  C019  FFF3         	movff	??_ISR+8,prodl
 10390  0000C0  C018  FFDA         	movff	??_ISR+7,fsr2h
 10391  0000C4  C017  FFD9         	movff	??_ISR+6,fsr2l
 10392  0000C8  C016  FFE2         	movff	??_ISR+5,fsr1h
 10393  0000CC  C015  FFE1         	movff	??_ISR+4,fsr1l
 10394  0000D0  C014  FFEA         	movff	??_ISR+3,fsr0h
 10395  0000D4  C013  FFE9         	movff	??_ISR+2,fsr0l
 10396  0000D8  C012  FFFB         	movff	??_ISR+1,pclatu
 10397  0000DC  C011  FFFA         	movff	??_ISR,pclath
 10398  0000E0  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10399  0000E2  0011               	retfie		f
 10400  0000E4                     __end_of_ISR:
 10401                           	opt stack 0
 10402                           pclatu	equ	0xFFB
 10403                           pclath	equ	0xFFA
 10404                           tblptru	equ	0xFF8
 10405                           tblptrh	equ	0xFF7
 10406                           tblptrl	equ	0xFF6
 10407                           tablat	equ	0xFF5
 10408                           prodh	equ	0xFF4
 10409                           prodl	equ	0xFF3
 10410                           intcon	equ	0xFF2
 10411                           intcon2	equ	0xFF1
 10412                           postinc0	equ	0xFEE
 10413                           fsr0h	equ	0xFEA
 10414                           fsr0l	equ	0xFE9
 10415                           wreg	equ	0xFE8
 10416                           indf1	equ	0xFE7
 10417                           postinc1	equ	0xFE6
 10418                           postdec1	equ	0xFE5
 10419                           fsr1h	equ	0xFE2
 10420                           fsr1l	equ	0xFE1
 10421                           indf2	equ	0xFDF
 10422                           postinc2	equ	0xFDE
 10423                           postdec2	equ	0xFDD
 10424                           fsr2h	equ	0xFDA
 10425                           fsr2l	equ	0xFD9
 10426                           status	equ	0xFD8
 10427                           
 10428 ;; *************** function _button_timer_interrupt *****************
 10429 ;; Defined at:
 10430 ;;		line 51 in file "../My_header\My_button.h"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;  bt              2    0[COMRAM] PTR struct button
 10433 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 10434 ;;  sw_value        1    2[COMRAM] unsigned char 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;		None
 10437 ;; Return value:  Size  Location     Type
 10438 ;;		None               void
 10439 ;; Registers used:
 10440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10446 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10449 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;Total ram usage:        5 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_ISR
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text51
 10460  010D62                     __ptext51:
 10461                           	opt stack 0
 10462  010D62                     _button_timer_interrupt:
 10463                           	opt stack 21
 10464                           
 10465                           ;My_header\My_button.h: 52: if (sw_value) {
 10466                           
 10467                           ;incstack = 0
 10468  010D62  5003               	movf	button_timer_interrupt@sw_value,w,c
 10469  010D64  B4D8               	btfsc	status,2,c
 10470  010D66  D098               	goto	i2l3663
 10471                           
 10472                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 10473  010D68  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10474  010D6C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10475  010D70  0E84               	movlw	132
 10476  010D72  18DE               	xorwf	postinc2,w,c
 10477  010D74  E10B               	bnz	i2l284
 10478  010D76  0E03               	movlw	3
 10479  010D78  18DE               	xorwf	postinc2,w,c
 10480  010D7A  A4D8               	btfss	status,2,c
 10481  010D7C  D007               	goto	i2l284
 10482  010D7E  EE20 F003          	lfsr	2,3
 10483  010D82  5001               	movf	button_timer_interrupt@bt,w,c
 10484  010D84  26D9               	addwf	fsr2l,f,c
 10485  010D86  5002               	movf	button_timer_interrupt@bt+1,w,c
 10486  010D88  22DA               	addwfc	fsr2h,f,c
 10487  010D8A  8EDF               	bsf	indf2,7,c
 10488  010D8C                     i2l284:
 10489                           
 10490                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 10491  010D8C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10492  010D90  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10493  010D94  0EBC               	movlw	188
 10494  010D96  18DE               	xorwf	postinc2,w,c
 10495  010D98  E10B               	bnz	i2l285
 10496  010D9A  0E02               	movlw	2
 10497  010D9C  18DE               	xorwf	postinc2,w,c
 10498  010D9E  A4D8               	btfss	status,2,c
 10499  010DA0  D007               	goto	i2l285
 10500  010DA2  EE20 F003          	lfsr	2,3
 10501  010DA6  5001               	movf	button_timer_interrupt@bt,w,c
 10502  010DA8  26D9               	addwf	fsr2l,f,c
 10503  010DAA  5002               	movf	button_timer_interrupt@bt+1,w,c
 10504  010DAC  22DA               	addwfc	fsr2h,f,c
 10505  010DAE  8CDF               	bsf	indf2,6,c
 10506  010DB0                     i2l285:
 10507                           
 10508                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 10509  010DB0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10510  010DB4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10511  010DB8  0EF4               	movlw	244
 10512  010DBA  18DE               	xorwf	postinc2,w,c
 10513  010DBC  E10A               	bnz	i2l286
 10514  010DBE  04DE               	decf	postinc2,w,c
 10515  010DC0  A4D8               	btfss	status,2,c
 10516  010DC2  D007               	goto	i2l286
 10517  010DC4  EE20 F003          	lfsr	2,3
 10518  010DC8  5001               	movf	button_timer_interrupt@bt,w,c
 10519  010DCA  26D9               	addwf	fsr2l,f,c
 10520  010DCC  5002               	movf	button_timer_interrupt@bt+1,w,c
 10521  010DCE  22DA               	addwfc	fsr2h,f,c
 10522  010DD0  8ADF               	bsf	indf2,5,c
 10523  010DD2                     i2l286:
 10524                           
 10525                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 10526  010DD2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10527  010DD6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10528  010DDA  0E2C               	movlw	44
 10529  010DDC  18DE               	xorwf	postinc2,w,c
 10530  010DDE  E10A               	bnz	i2l287
 10531  010DE0  04DE               	decf	postinc2,w,c
 10532  010DE2  A4D8               	btfss	status,2,c
 10533  010DE4  D007               	goto	i2l287
 10534  010DE6  EE20 F003          	lfsr	2,3
 10535  010DEA  5001               	movf	button_timer_interrupt@bt,w,c
 10536  010DEC  26D9               	addwf	fsr2l,f,c
 10537  010DEE  5002               	movf	button_timer_interrupt@bt+1,w,c
 10538  010DF0  22DA               	addwfc	fsr2h,f,c
 10539  010DF2  88DF               	bsf	indf2,4,c
 10540  010DF4                     i2l287:
 10541                           
 10542                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 10543  010DF4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10544  010DF8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10545  010DFC  0E96               	movlw	150
 10546  010DFE  18DE               	xorwf	postinc2,w,c
 10547  010E00  10DE               	iorwf	postinc2,w,c
 10548  010E02  A4D8               	btfss	status,2,c
 10549  010E04  D007               	goto	i2l288
 10550  010E06  EE20 F003          	lfsr	2,3
 10551  010E0A  5001               	movf	button_timer_interrupt@bt,w,c
 10552  010E0C  26D9               	addwf	fsr2l,f,c
 10553  010E0E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10554  010E10  22DA               	addwfc	fsr2h,f,c
 10555  010E12  86DF               	bsf	indf2,3,c
 10556  010E14                     i2l288:
 10557                           
 10558                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 10559  010E14  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10560  010E18  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10561  010E1C  0E3C               	movlw	60
 10562  010E1E  18DE               	xorwf	postinc2,w,c
 10563  010E20  10DE               	iorwf	postinc2,w,c
 10564  010E22  A4D8               	btfss	status,2,c
 10565  010E24  D007               	goto	i2l289
 10566  010E26  EE20 F003          	lfsr	2,3
 10567  010E2A  5001               	movf	button_timer_interrupt@bt,w,c
 10568  010E2C  26D9               	addwf	fsr2l,f,c
 10569  010E2E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10570  010E30  22DA               	addwfc	fsr2h,f,c
 10571  010E32  84DF               	bsf	indf2,2,c
 10572  010E34                     i2l289:
 10573                           
 10574                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 10575  010E34  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10576  010E38  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10577  010E3C  0E10               	movlw	16
 10578  010E3E  18DE               	xorwf	postinc2,w,c
 10579  010E40  10DE               	iorwf	postinc2,w,c
 10580  010E42  A4D8               	btfss	status,2,c
 10581  010E44  D007               	goto	i2l290
 10582  010E46  EE20 F003          	lfsr	2,3
 10583  010E4A  5001               	movf	button_timer_interrupt@bt,w,c
 10584  010E4C  26D9               	addwf	fsr2l,f,c
 10585  010E4E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10586  010E50  22DA               	addwfc	fsr2h,f,c
 10587  010E52  82DF               	bsf	indf2,1,c
 10588  010E54                     i2l290:
 10589                           
 10590                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 10591  010E54  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10592  010E58  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10593  010E5C  0E02               	movlw	2
 10594  010E5E  18DE               	xorwf	postinc2,w,c
 10595  010E60  10DE               	iorwf	postinc2,w,c
 10596  010E62  A4D8               	btfss	status,2,c
 10597  010E64  D007               	goto	i2l291
 10598  010E66  EE20 F003          	lfsr	2,3
 10599  010E6A  5001               	movf	button_timer_interrupt@bt,w,c
 10600  010E6C  26D9               	addwf	fsr2l,f,c
 10601  010E6E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10602  010E70  22DA               	addwfc	fsr2h,f,c
 10603  010E72  80DF               	bsf	indf2,0,c
 10604  010E74                     i2l291:
 10605                           
 10606                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 10607  010E74  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10608  010E78  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10609  010E7C  0E85               	movlw	133
 10610  010E7E  5CDE               	subwf	postinc2,w,c
 10611  010E80  0E03               	movlw	3
 10612  010E82  58DE               	subwfb	postinc2,w,c
 10613  010E84  B0D8               	btfsc	status,0,c
 10614  010E86  0012               	return	
 10615  010E88  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10616  010E8C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10617  010E90  2ADE               	incf	postinc2,f,c
 10618  010E92  0E00               	movlw	0
 10619  010E94  22DD               	addwfc	postdec2,f,c
 10620                           
 10621                           ;My_header\My_button.h: 62: } else {
 10622  010E96  0012               	return	
 10623  010E98                     i2l3663:
 10624                           
 10625                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 10626  010E98  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10627  010E9C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10628  010EA0  0E84               	movlw	132
 10629  010EA2  5CDE               	subwf	postinc2,w,c
 10630  010EA4  0E03               	movlw	3
 10631  010EA6  58DE               	subwfb	postinc2,w,c
 10632  010EA8  A0D8               	btfss	status,0,c
 10633  010EAA  D008               	goto	i2l3667
 10634  010EAC  EE20 F002          	lfsr	2,2
 10635  010EB0  5001               	movf	button_timer_interrupt@bt,w,c
 10636  010EB2  26D9               	addwf	fsr2l,f,c
 10637  010EB4  5002               	movf	button_timer_interrupt@bt+1,w,c
 10638  010EB6  22DA               	addwfc	fsr2h,f,c
 10639  010EB8  8EDF               	bsf	indf2,7,c
 10640  010EBA  D081               	goto	i2l3695
 10641  010EBC                     i2l3667:
 10642                           
 10643                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 10644  010EBC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10645  010EC0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10646  010EC4  0EBC               	movlw	188
 10647  010EC6  5CDE               	subwf	postinc2,w,c
 10648  010EC8  0E02               	movlw	2
 10649  010ECA  58DE               	subwfb	postinc2,w,c
 10650  010ECC  A0D8               	btfss	status,0,c
 10651  010ECE  D008               	goto	i2l3671
 10652  010ED0  EE20 F002          	lfsr	2,2
 10653  010ED4  5001               	movf	button_timer_interrupt@bt,w,c
 10654  010ED6  26D9               	addwf	fsr2l,f,c
 10655  010ED8  5002               	movf	button_timer_interrupt@bt+1,w,c
 10656  010EDA  22DA               	addwfc	fsr2h,f,c
 10657  010EDC  8CDF               	bsf	indf2,6,c
 10658  010EDE  D06F               	goto	i2l3695
 10659  010EE0                     i2l3671:
 10660                           
 10661                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 10662  010EE0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10663  010EE4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10664  010EE8  0EF4               	movlw	244
 10665  010EEA  5CDE               	subwf	postinc2,w,c
 10666  010EEC  0E01               	movlw	1
 10667  010EEE  58DE               	subwfb	postinc2,w,c
 10668  010EF0  A0D8               	btfss	status,0,c
 10669  010EF2  D008               	goto	i2l3675
 10670  010EF4  EE20 F002          	lfsr	2,2
 10671  010EF8  5001               	movf	button_timer_interrupt@bt,w,c
 10672  010EFA  26D9               	addwf	fsr2l,f,c
 10673  010EFC  5002               	movf	button_timer_interrupt@bt+1,w,c
 10674  010EFE  22DA               	addwfc	fsr2h,f,c
 10675  010F00  8ADF               	bsf	indf2,5,c
 10676  010F02  D05D               	goto	i2l3695
 10677  010F04                     i2l3675:
 10678                           
 10679                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 10680  010F04  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10681  010F08  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10682  010F0C  0E2C               	movlw	44
 10683  010F0E  5CDE               	subwf	postinc2,w,c
 10684  010F10  0E01               	movlw	1
 10685  010F12  58DE               	subwfb	postinc2,w,c
 10686  010F14  A0D8               	btfss	status,0,c
 10687  010F16  D008               	goto	i2l3679
 10688  010F18  EE20 F002          	lfsr	2,2
 10689  010F1C  5001               	movf	button_timer_interrupt@bt,w,c
 10690  010F1E  26D9               	addwf	fsr2l,f,c
 10691  010F20  5002               	movf	button_timer_interrupt@bt+1,w,c
 10692  010F22  22DA               	addwfc	fsr2h,f,c
 10693  010F24  88DF               	bsf	indf2,4,c
 10694  010F26  D04B               	goto	i2l3695
 10695  010F28                     i2l3679:
 10696                           
 10697                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 10698  010F28  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10699  010F2C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10700  010F30  0E01               	movlw	1
 10701  010F32  50DB               	movf	plusw2,w,c
 10702  010F34  E104               	bnz	i2u342_40
 10703  010F36  0E96               	movlw	150
 10704  010F38  5CDE               	subwf	postinc2,w,c
 10705  010F3A  A0D8               	btfss	status,0,c
 10706  010F3C  D008               	goto	i2l3683
 10707  010F3E                     i2u342_40:
 10708  010F3E  EE20 F002          	lfsr	2,2
 10709  010F42  5001               	movf	button_timer_interrupt@bt,w,c
 10710  010F44  26D9               	addwf	fsr2l,f,c
 10711  010F46  5002               	movf	button_timer_interrupt@bt+1,w,c
 10712  010F48  22DA               	addwfc	fsr2h,f,c
 10713  010F4A  86DF               	bsf	indf2,3,c
 10714  010F4C  D038               	goto	i2l3695
 10715  010F4E                     i2l3683:
 10716                           
 10717                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 10718  010F4E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10719  010F52  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10720  010F56  0E01               	movlw	1
 10721  010F58  50DB               	movf	plusw2,w,c
 10722  010F5A  E104               	bnz	i2u343_40
 10723  010F5C  0E3C               	movlw	60
 10724  010F5E  5CDE               	subwf	postinc2,w,c
 10725  010F60  A0D8               	btfss	status,0,c
 10726  010F62  D008               	goto	i2l3687
 10727  010F64                     i2u343_40:
 10728  010F64  EE20 F002          	lfsr	2,2
 10729  010F68  5001               	movf	button_timer_interrupt@bt,w,c
 10730  010F6A  26D9               	addwf	fsr2l,f,c
 10731  010F6C  5002               	movf	button_timer_interrupt@bt+1,w,c
 10732  010F6E  22DA               	addwfc	fsr2h,f,c
 10733  010F70  84DF               	bsf	indf2,2,c
 10734  010F72  D025               	goto	i2l3695
 10735  010F74                     i2l3687:
 10736                           
 10737                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 10738  010F74  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10739  010F78  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10740  010F7C  0E01               	movlw	1
 10741  010F7E  50DB               	movf	plusw2,w,c
 10742  010F80  E104               	bnz	i2u344_40
 10743  010F82  0E10               	movlw	16
 10744  010F84  5CDE               	subwf	postinc2,w,c
 10745  010F86  A0D8               	btfss	status,0,c
 10746  010F88  D008               	goto	i2l3691
 10747  010F8A                     i2u344_40:
 10748  010F8A  EE20 F002          	lfsr	2,2
 10749  010F8E  5001               	movf	button_timer_interrupt@bt,w,c
 10750  010F90  26D9               	addwf	fsr2l,f,c
 10751  010F92  5002               	movf	button_timer_interrupt@bt+1,w,c
 10752  010F94  22DA               	addwfc	fsr2h,f,c
 10753  010F96  82DF               	bsf	indf2,1,c
 10754  010F98  D012               	goto	i2l3695
 10755  010F9A                     i2l3691:
 10756                           
 10757                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 10758  010F9A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10759  010F9E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10760  010FA2  0E01               	movlw	1
 10761  010FA4  50DB               	movf	plusw2,w,c
 10762  010FA6  E104               	bnz	i2u345_40
 10763  010FA8  0E02               	movlw	2
 10764  010FAA  5CDE               	subwf	postinc2,w,c
 10765  010FAC  A0D8               	btfss	status,0,c
 10766  010FAE  D007               	goto	i2l3695
 10767  010FB0                     i2u345_40:
 10768  010FB0  EE20 F002          	lfsr	2,2
 10769  010FB4  5001               	movf	button_timer_interrupt@bt,w,c
 10770  010FB6  26D9               	addwf	fsr2l,f,c
 10771  010FB8  5002               	movf	button_timer_interrupt@bt+1,w,c
 10772  010FBA  22DA               	addwfc	fsr2h,f,c
 10773  010FBC  80DF               	bsf	indf2,0,c
 10774  010FBE                     i2l3695:
 10775                           
 10776                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 10777  010FBE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10778  010FC2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10779  010FC6  0E00               	movlw	0
 10780  010FC8  6EDE               	movwf	postinc2,c
 10781  010FCA  0E00               	movlw	0
 10782  010FCC  6EDD               	movwf	postdec2,c
 10783                           
 10784                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 10785  010FCE  EE20 F002          	lfsr	2,2
 10786  010FD2  5001               	movf	button_timer_interrupt@bt,w,c
 10787  010FD4  26D9               	addwf	fsr2l,f,c
 10788  010FD6  5002               	movf	button_timer_interrupt@bt+1,w,c
 10789  010FD8  22DA               	addwfc	fsr2h,f,c
 10790  010FDA  0EFF               	movlw	255
 10791  010FDC  16DE               	andwf	postinc2,f,c
 10792  010FDE  0E00               	movlw	0
 10793  010FE0  16DD               	andwf	postdec2,f,c
 10794  010FE2  0012               	return	
 10795  010FE4                     __end_of_button_timer_interrupt:
 10796                           	opt stack 0
 10797                           pclatu	equ	0xFFB
 10798                           pclath	equ	0xFFA
 10799                           tblptru	equ	0xFF8
 10800                           tblptrh	equ	0xFF7
 10801                           tblptrl	equ	0xFF6
 10802                           tablat	equ	0xFF5
 10803                           prodh	equ	0xFF4
 10804                           prodl	equ	0xFF3
 10805                           intcon	equ	0xFF2
 10806                           intcon2	equ	0xFF1
 10807                           postinc0	equ	0xFEE
 10808                           fsr0h	equ	0xFEA
 10809                           fsr0l	equ	0xFE9
 10810                           wreg	equ	0xFE8
 10811                           indf1	equ	0xFE7
 10812                           postinc1	equ	0xFE6
 10813                           postdec1	equ	0xFE5
 10814                           fsr1h	equ	0xFE2
 10815                           fsr1l	equ	0xFE1
 10816                           indf2	equ	0xFDF
 10817                           postinc2	equ	0xFDE
 10818                           postdec2	equ	0xFDD
 10819                           plusw2	equ	0xFDB
 10820                           fsr2h	equ	0xFDA
 10821                           fsr2l	equ	0xFD9
 10822                           status	equ	0xFD8
 10823                           
 10824 ;; *************** function _UART_ISR *****************
 10825 ;; Defined at:
 10826 ;;		line 208 in file "../My_header\My_header.h"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;  ascii           1   15[COMRAM] unsigned char 
 10831 ;; Return value:  Size  Location     Type
 10832 ;;		None               void
 10833 ;; Registers used:
 10834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;Total ram usage:        1 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    2
 10847 ;; This function calls:
 10848 ;;		i2_ringbuf_num
 10849 ;;		i2_ringbuf_pop
 10850 ;;		i2_ringbuf_put
 10851 ;; This function is called by:
 10852 ;;		_ISR
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           	psect	text52
 10857  01255A                     __ptext52:
 10858                           	opt stack 0
 10859  01255A                     _UART_ISR:
 10860                           	opt stack 19
 10861                           
 10862                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 10863                           
 10864                           ;incstack = 0
 10865  01255A  B89D               	btfsc	3997,4,c	;volatile
 10866  01255C  A89E               	btfss	3998,4,c	;volatile
 10867  01255E  D013               	goto	i2l219
 10868                           
 10869                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 10870  012560  0ED7               	movlw	low _tx_buf
 10871  012562  6E01               	movwf	i2ringbuf_num@rb,c
 10872  012564  0E01               	movlw	high _tx_buf
 10873  012566  6E02               	movwf	i2ringbuf_num@rb+1,c
 10874  012568  ECD8  F08C         	call	i2_ringbuf_num	;wreg free
 10875  01256C  5001               	movf	?i2_ringbuf_num,w,c
 10876  01256E  1002               	iorwf	?i2_ringbuf_num+1,w,c
 10877  012570  B4D8               	btfsc	status,2,c
 10878  012572  D008               	goto	i2l220
 10879                           
 10880                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 10881  012574  0ED7               	movlw	low _tx_buf
 10882  012576  6E09               	movwf	i2ringbuf_pop@rb,c
 10883  012578  0E01               	movlw	high _tx_buf
 10884  01257A  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 10885  01257C  ECED  F08D         	call	i2_ringbuf_pop	;wreg free
 10886  012580  6EAE               	movwf	4014,c	;volatile
 10887                           
 10888                           ;My_header\My_header.h: 212: } else {
 10889  012582  D001               	goto	i2l219
 10890  012584                     i2l220:
 10891                           
 10892                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 10893  012584  989D               	bcf	3997,4,c	;volatile
 10894  012586                     i2l219:
 10895                           
 10896                           ;My_header\My_header.h: 214: }
 10897                           ;My_header\My_header.h: 215: }
 10898                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 10899  012586  AA9E               	btfss	3998,5,c	;volatile
 10900  012588  0012               	return	
 10901  01258A  AA9D               	btfss	3997,5,c	;volatile
 10902  01258C  0012               	return	
 10903                           
 10904                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 10905  01258E  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 10906                           
 10907                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 10908  012592  0ECF               	movlw	low _rx_buf
 10909  012594  6E09               	movwf	i2ringbuf_put@rb,c
 10910  012596  0E01               	movlw	high _rx_buf
 10911  012598  6E0A               	movwf	i2ringbuf_put@rb+1,c
 10912  01259A  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 10913  01259E  EC92  F08D         	call	i2_ringbuf_put	;wreg free
 10914  0125A2  0012               	return	
 10915  0125A4                     __end_of_UART_ISR:
 10916                           	opt stack 0
 10917                           pclatu	equ	0xFFB
 10918                           pclath	equ	0xFFA
 10919                           tblptru	equ	0xFF8
 10920                           tblptrh	equ	0xFF7
 10921                           tblptrl	equ	0xFF6
 10922                           tablat	equ	0xFF5
 10923                           prodh	equ	0xFF4
 10924                           prodl	equ	0xFF3
 10925                           intcon	equ	0xFF2
 10926                           intcon2	equ	0xFF1
 10927                           postinc0	equ	0xFEE
 10928                           fsr0h	equ	0xFEA
 10929                           fsr0l	equ	0xFE9
 10930                           wreg	equ	0xFE8
 10931                           indf1	equ	0xFE7
 10932                           postinc1	equ	0xFE6
 10933                           postdec1	equ	0xFE5
 10934                           fsr1h	equ	0xFE2
 10935                           fsr1l	equ	0xFE1
 10936                           indf2	equ	0xFDF
 10937                           postinc2	equ	0xFDE
 10938                           postdec2	equ	0xFDD
 10939                           plusw2	equ	0xFDB
 10940                           fsr2h	equ	0xFDA
 10941                           fsr2l	equ	0xFD9
 10942                           status	equ	0xFD8
 10943                           
 10944 ;; *************** function i2_ringbuf_put *****************
 10945 ;; Defined at:
 10946 ;;		line 39 in file "../My_header\My_ringbuf.h"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 10949 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 10950 ;;  asciicode       1   10[COMRAM] unsigned char 
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;		None
 10953 ;; Return value:  Size  Location     Type
 10954 ;;		None               void
 10955 ;; Registers used:
 10956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10962 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10964 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10966 ;;Total ram usage:        7 bytes
 10967 ;; Hardware stack levels used:    1
 10968 ;; Hardware stack levels required when called:    1
 10969 ;; This function calls:
 10970 ;;		i2_ringbuf_num
 10971 ;; This function is called by:
 10972 ;;		_UART_ISR
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text53
 10977  011B24                     __ptext53:
 10978                           	opt stack 0
 10979  011B24                     i2_ringbuf_put:
 10980                           	opt stack 19
 10981                           
 10982                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 10983                           
 10984                           ;incstack = 0
 10985  011B24  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 10986  011B28  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 10987  011B2C  ECD8  F08C         	call	i2_ringbuf_num	;wreg free
 10988  011B30  EE20 F002          	lfsr	2,2
 10989  011B34  5009               	movf	i2ringbuf_put@rb,w,c
 10990  011B36  26D9               	addwf	fsr2l,f,c
 10991  011B38  500A               	movf	i2ringbuf_put@rb+1,w,c
 10992  011B3A  22DA               	addwfc	fsr2h,f,c
 10993  011B3C  50DE               	movf	postinc2,w,c
 10994  011B3E  5C01               	subwf	?i2_ringbuf_num,w,c
 10995  011B40  50DE               	movf	postinc2,w,c
 10996  011B42  5802               	subwfb	?i2_ringbuf_num+1,w,c
 10997  011B44  B0D8               	btfsc	status,0,c
 10998  011B46  0012               	return	
 10999                           
 11000                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 11001  011B48  EE20 F004          	lfsr	2,4
 11002  011B4C  5009               	movf	i2ringbuf_put@rb,w,c
 11003  011B4E  26D9               	addwf	fsr2l,f,c
 11004  011B50  500A               	movf	i2ringbuf_put@rb+1,w,c
 11005  011B52  22DA               	addwfc	fsr2h,f,c
 11006  011B54  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 11007  011B58  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 11008  011B5C  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 11009  011B60  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 11010  011B64  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 11011  011B68  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 11012  011B6C  500C               	movf	??i2_ringbuf_put,w,c
 11013  011B6E  240E               	addwf	??i2_ringbuf_put+2,w,c
 11014  011B70  6ED9               	movwf	fsr2l,c
 11015  011B72  500D               	movf	??i2_ringbuf_put+1,w,c
 11016  011B74  200F               	addwfc	??i2_ringbuf_put+3,w,c
 11017  011B76  6EDA               	movwf	fsr2h,c
 11018  011B78  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 11019                           
 11020                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 11021  011B7C  EE20 F002          	lfsr	2,2
 11022  011B80  5009               	movf	i2ringbuf_put@rb,w,c
 11023  011B82  26D9               	addwf	fsr2l,f,c
 11024  011B84  500A               	movf	i2ringbuf_put@rb+1,w,c
 11025  011B86  22DA               	addwfc	fsr2h,f,c
 11026  011B88  EE10 F004          	lfsr	1,4
 11027  011B8C  5009               	movf	i2ringbuf_put@rb,w,c
 11028  011B8E  26E1               	addwf	fsr1l,f,c
 11029  011B90  500A               	movf	i2ringbuf_put@rb+1,w,c
 11030  011B92  22E2               	addwfc	fsr1h,f,c
 11031  011B94  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 11032  011B98  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 11033  011B9C  0E01               	movlw	1
 11034  011B9E  260E               	addwf	??i2_ringbuf_put+2,f,c
 11035  011BA0  0E00               	movlw	0
 11036  011BA2  220F               	addwfc	??i2_ringbuf_put+3,f,c
 11037  011BA4  50DE               	movf	postinc2,w,c
 11038  011BA6  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 11039  011BA8  50DE               	movf	postinc2,w,c
 11040  011BAA  580F               	subwfb	??i2_ringbuf_put+3,w,c
 11041  011BAC  B0D8               	btfsc	status,0,c
 11042  011BAE  D00A               	goto	i2l4877
 11043  011BB0  EE20 F004          	lfsr	2,4
 11044  011BB4  5009               	movf	i2ringbuf_put@rb,w,c
 11045  011BB6  26D9               	addwf	fsr2l,f,c
 11046  011BB8  500A               	movf	i2ringbuf_put@rb+1,w,c
 11047  011BBA  22DA               	addwfc	fsr2h,f,c
 11048  011BBC  2ADE               	incf	postinc2,f,c
 11049  011BBE  0E00               	movlw	0
 11050  011BC0  22DD               	addwfc	postdec2,f,c
 11051  011BC2  0012               	return	
 11052  011BC4                     i2l4877:
 11053                           
 11054                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 11055  011BC4  EE20 F004          	lfsr	2,4
 11056  011BC8  5009               	movf	i2ringbuf_put@rb,w,c
 11057  011BCA  26D9               	addwf	fsr2l,f,c
 11058  011BCC  500A               	movf	i2ringbuf_put@rb+1,w,c
 11059  011BCE  22DA               	addwfc	fsr2h,f,c
 11060  011BD0  0E00               	movlw	0
 11061  011BD2  6EDE               	movwf	postinc2,c
 11062  011BD4  0E00               	movlw	0
 11063  011BD6  6EDD               	movwf	postdec2,c
 11064  011BD8  0012               	return	
 11065  011BDA                     __end_ofi2_ringbuf_put:
 11066                           	opt stack 0
 11067                           pclatu	equ	0xFFB
 11068                           pclath	equ	0xFFA
 11069                           tblptru	equ	0xFF8
 11070                           tblptrh	equ	0xFF7
 11071                           tblptrl	equ	0xFF6
 11072                           tablat	equ	0xFF5
 11073                           prodh	equ	0xFF4
 11074                           prodl	equ	0xFF3
 11075                           intcon	equ	0xFF2
 11076                           intcon2	equ	0xFF1
 11077                           postinc0	equ	0xFEE
 11078                           fsr0h	equ	0xFEA
 11079                           fsr0l	equ	0xFE9
 11080                           wreg	equ	0xFE8
 11081                           indf1	equ	0xFE7
 11082                           postinc1	equ	0xFE6
 11083                           postdec1	equ	0xFE5
 11084                           fsr1h	equ	0xFE2
 11085                           fsr1l	equ	0xFE1
 11086                           indf2	equ	0xFDF
 11087                           postinc2	equ	0xFDE
 11088                           postdec2	equ	0xFDD
 11089                           plusw2	equ	0xFDB
 11090                           fsr2h	equ	0xFDA
 11091                           fsr2l	equ	0xFD9
 11092                           status	equ	0xFD8
 11093                           
 11094 ;; *************** function i2_ringbuf_pop *****************
 11095 ;; Defined at:
 11096 ;;		line 64 in file "../My_header\My_ringbuf.h"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11099 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  1    wreg      unsigned char 
 11104 ;; Registers used:
 11105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11115 ;;Total ram usage:        7 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:    1
 11118 ;; This function calls:
 11119 ;;		i2_ringbuf_num
 11120 ;; This function is called by:
 11121 ;;		_UART_ISR
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           	psect	text54
 11126  011BDA                     __ptext54:
 11127                           	opt stack 0
 11128  011BDA                     i2_ringbuf_pop:
 11129                           	opt stack 19
 11130                           
 11131                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 11132                           
 11133                           ;incstack = 0
 11134  011BDA  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 11135  011BDE  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 11136  011BE2  ECD8  F08C         	call	i2_ringbuf_num	;wreg free
 11137  011BE6  5001               	movf	?i2_ringbuf_num,w,c
 11138  011BE8  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11139  011BEA  B4D8               	btfsc	status,2,c
 11140  011BEC  D04A               	goto	i2l4895
 11141                           
 11142                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 11143  011BEE  EE20 F006          	lfsr	2,6
 11144  011BF2  5009               	movf	i2ringbuf_pop@rb,w,c
 11145  011BF4  26D9               	addwf	fsr2l,f,c
 11146  011BF6  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11147  011BF8  22DA               	addwfc	fsr2h,f,c
 11148  011BFA  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 11149  011BFE  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 11150  011C02  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 11151  011C06  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 11152  011C0A  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 11153  011C0E  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 11154  011C12  500B               	movf	??i2_ringbuf_pop,w,c
 11155  011C14  240D               	addwf	??i2_ringbuf_pop+2,w,c
 11156  011C16  6ED9               	movwf	fsr2l,c
 11157  011C18  500C               	movf	??i2_ringbuf_pop+1,w,c
 11158  011C1A  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 11159  011C1C  6EDA               	movwf	fsr2h,c
 11160  011C1E  50DF               	movf	indf2,w,c
 11161  011C20  6E0F               	movwf	i2ringbuf_pop@ret,c
 11162                           
 11163                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 11164  011C22  EE20 F002          	lfsr	2,2
 11165  011C26  5009               	movf	i2ringbuf_pop@rb,w,c
 11166  011C28  26D9               	addwf	fsr2l,f,c
 11167  011C2A  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11168  011C2C  22DA               	addwfc	fsr2h,f,c
 11169  011C2E  EE10 F006          	lfsr	1,6
 11170  011C32  5009               	movf	i2ringbuf_pop@rb,w,c
 11171  011C34  26E1               	addwf	fsr1l,f,c
 11172  011C36  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11173  011C38  22E2               	addwfc	fsr1h,f,c
 11174  011C3A  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 11175  011C3E  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 11176  011C42  0E01               	movlw	1
 11177  011C44  260D               	addwf	??i2_ringbuf_pop+2,f,c
 11178  011C46  0E00               	movlw	0
 11179  011C48  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 11180  011C4A  50DE               	movf	postinc2,w,c
 11181  011C4C  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 11182  011C4E  50DE               	movf	postinc2,w,c
 11183  011C50  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 11184  011C52  B0D8               	btfsc	status,0,c
 11185  011C54  D00A               	goto	i2l4887
 11186                           
 11187                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 11188  011C56  EE20 F006          	lfsr	2,6
 11189  011C5A  5009               	movf	i2ringbuf_pop@rb,w,c
 11190  011C5C  26D9               	addwf	fsr2l,f,c
 11191  011C5E  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11192  011C60  22DA               	addwfc	fsr2h,f,c
 11193  011C62  2ADE               	incf	postinc2,f,c
 11194  011C64  0E00               	movlw	0
 11195  011C66  22DD               	addwfc	postdec2,f,c
 11196                           
 11197                           ;My_header\My_ringbuf.h: 69: } else {
 11198  011C68  D00A               	goto	i2l4889
 11199  011C6A                     i2l4887:
 11200                           
 11201                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 11202  011C6A  EE20 F006          	lfsr	2,6
 11203  011C6E  5009               	movf	i2ringbuf_pop@rb,w,c
 11204  011C70  26D9               	addwf	fsr2l,f,c
 11205  011C72  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11206  011C74  22DA               	addwfc	fsr2h,f,c
 11207  011C76  0E00               	movlw	0
 11208  011C78  6EDE               	movwf	postinc2,c
 11209  011C7A  0E00               	movlw	0
 11210  011C7C  6EDD               	movwf	postdec2,c
 11211  011C7E                     i2l4889:
 11212                           
 11213                           ;My_header\My_ringbuf.h: 71: }
 11214                           ;My_header\My_ringbuf.h: 72: return ret;
 11215  011C7E  500F               	movf	i2ringbuf_pop@ret,w,c
 11216                           
 11217                           ;My_header\My_ringbuf.h: 73: } else {
 11218  011C80  0012               	return	
 11219  011C82                     i2l4895:
 11220                           
 11221                           ;My_header\My_ringbuf.h: 74: return 0;
 11222  011C82  0E00               	movlw	0
 11223  011C84  0012               	return	
 11224  011C86                     __end_ofi2_ringbuf_pop:
 11225                           	opt stack 0
 11226                           pclatu	equ	0xFFB
 11227                           pclath	equ	0xFFA
 11228                           tblptru	equ	0xFF8
 11229                           tblptrh	equ	0xFF7
 11230                           tblptrl	equ	0xFF6
 11231                           tablat	equ	0xFF5
 11232                           prodh	equ	0xFF4
 11233                           prodl	equ	0xFF3
 11234                           intcon	equ	0xFF2
 11235                           intcon2	equ	0xFF1
 11236                           postinc0	equ	0xFEE
 11237                           fsr0h	equ	0xFEA
 11238                           fsr0l	equ	0xFE9
 11239                           wreg	equ	0xFE8
 11240                           indf1	equ	0xFE7
 11241                           postinc1	equ	0xFE6
 11242                           postdec1	equ	0xFE5
 11243                           fsr1h	equ	0xFE2
 11244                           fsr1l	equ	0xFE1
 11245                           indf2	equ	0xFDF
 11246                           postinc2	equ	0xFDE
 11247                           postdec2	equ	0xFDD
 11248                           plusw2	equ	0xFDB
 11249                           fsr2h	equ	0xFDA
 11250                           fsr2l	equ	0xFD9
 11251                           status	equ	0xFD8
 11252                           
 11253 ;; *************** function i2_ringbuf_num *****************
 11254 ;; Defined at:
 11255 ;;		line 31 in file "../My_header\My_ringbuf.h"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 11258 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;		None
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  2    0[COMRAM] unsigned int 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11274 ;;Total ram usage:        8 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; This function calls:
 11277 ;;		Nothing
 11278 ;; This function is called by:
 11279 ;;		_UART_ISR
 11280 ;;		i2_ringbuf_put
 11281 ;;		i2_ringbuf_pop
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           	psect	text55
 11286  0119B0                     __ptext55:
 11287                           	opt stack 0
 11288  0119B0                     i2_ringbuf_num:
 11289                           	opt stack 19
 11290                           
 11291                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 11292                           
 11293                           ;incstack = 0
 11294  0119B0  EE20 F006          	lfsr	2,6
 11295  0119B4  5001               	movf	i2ringbuf_num@rb,w,c
 11296  0119B6  26D9               	addwf	fsr2l,f,c
 11297  0119B8  5002               	movf	i2ringbuf_num@rb+1,w,c
 11298  0119BA  22DA               	addwfc	fsr2h,f,c
 11299  0119BC  EE10 F004          	lfsr	1,4
 11300  0119C0  5001               	movf	i2ringbuf_num@rb,w,c
 11301  0119C2  26E1               	addwf	fsr1l,f,c
 11302  0119C4  5002               	movf	i2ringbuf_num@rb+1,w,c
 11303  0119C6  22E2               	addwfc	fsr1h,f,c
 11304  0119C8  50DE               	movf	postinc2,w,c
 11305  0119CA  5CE6               	subwf	postinc1,w,c
 11306  0119CC  50DE               	movf	postinc2,w,c
 11307  0119CE  58E6               	subwfb	postinc1,w,c
 11308  0119D0  A0D8               	btfss	status,0,c
 11309  0119D2  D01F               	goto	i2l4689
 11310                           
 11311                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 11312  0119D4  EE20 F004          	lfsr	2,4
 11313  0119D8  5001               	movf	i2ringbuf_num@rb,w,c
 11314  0119DA  26D9               	addwf	fsr2l,f,c
 11315  0119DC  5002               	movf	i2ringbuf_num@rb+1,w,c
 11316  0119DE  22DA               	addwfc	fsr2h,f,c
 11317  0119E0  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 11318  0119E4  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 11319  0119E8  EE20 F006          	lfsr	2,6
 11320  0119EC  5001               	movf	i2ringbuf_num@rb,w,c
 11321  0119EE  26D9               	addwf	fsr2l,f,c
 11322  0119F0  5002               	movf	i2ringbuf_num@rb+1,w,c
 11323  0119F2  22DA               	addwfc	fsr2h,f,c
 11324  0119F4  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 11325  0119F8  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 11326  0119FC  1E05               	comf	??i2_ringbuf_num+2,f,c
 11327  0119FE  1E06               	comf	??i2_ringbuf_num+3,f,c
 11328  011A00  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 11329  011A02  2A06               	incf	??i2_ringbuf_num+3,f,c
 11330  011A04  5003               	movf	??i2_ringbuf_num,w,c
 11331  011A06  2405               	addwf	??i2_ringbuf_num+2,w,c
 11332  011A08  6E01               	movwf	?i2_ringbuf_num,c
 11333  011A0A  5004               	movf	??i2_ringbuf_num+1,w,c
 11334  011A0C  2006               	addwfc	??i2_ringbuf_num+3,w,c
 11335  011A0E  6E02               	movwf	?i2_ringbuf_num+1,c
 11336                           
 11337                           ;My_header\My_ringbuf.h: 34: } else {
 11338  011A10  0012               	return	
 11339  011A12                     i2l4689:
 11340                           
 11341                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 11342  011A12  EE20 F004          	lfsr	2,4
 11343  011A16  5001               	movf	i2ringbuf_num@rb,w,c
 11344  011A18  26D9               	addwf	fsr2l,f,c
 11345  011A1A  5002               	movf	i2ringbuf_num@rb+1,w,c
 11346  011A1C  22DA               	addwfc	fsr2h,f,c
 11347  011A1E  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 11348  011A22  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 11349  011A26  EE20 F002          	lfsr	2,2
 11350  011A2A  5001               	movf	i2ringbuf_num@rb,w,c
 11351  011A2C  26D9               	addwf	fsr2l,f,c
 11352  011A2E  5002               	movf	i2ringbuf_num@rb+1,w,c
 11353  011A30  22DA               	addwfc	fsr2h,f,c
 11354  011A32  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 11355  011A36  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 11356  011A3A  EE20 F006          	lfsr	2,6
 11357  011A3E  5001               	movf	i2ringbuf_num@rb,w,c
 11358  011A40  26D9               	addwf	fsr2l,f,c
 11359  011A42  5002               	movf	i2ringbuf_num@rb+1,w,c
 11360  011A44  22DA               	addwfc	fsr2h,f,c
 11361  011A46  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 11362  011A4A  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 11363  011A4E  1E07               	comf	??i2_ringbuf_num+4,f,c
 11364  011A50  1E08               	comf	??i2_ringbuf_num+5,f,c
 11365  011A52  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 11366  011A54  2A08               	incf	??i2_ringbuf_num+5,f,c
 11367  011A56  5005               	movf	??i2_ringbuf_num+2,w,c
 11368  011A58  2607               	addwf	??i2_ringbuf_num+4,f,c
 11369  011A5A  5006               	movf	??i2_ringbuf_num+3,w,c
 11370  011A5C  2208               	addwfc	??i2_ringbuf_num+5,f,c
 11371  011A5E  5003               	movf	??i2_ringbuf_num,w,c
 11372  011A60  2407               	addwf	??i2_ringbuf_num+4,w,c
 11373  011A62  6E01               	movwf	?i2_ringbuf_num,c
 11374  011A64  5004               	movf	??i2_ringbuf_num+1,w,c
 11375  011A66  2008               	addwfc	??i2_ringbuf_num+5,w,c
 11376  011A68  6E02               	movwf	?i2_ringbuf_num+1,c
 11377  011A6A  0012               	return	
 11378  011A6C                     __end_ofi2_ringbuf_num:
 11379                           	opt stack 0
 11380                           pclatu	equ	0xFFB
 11381                           pclath	equ	0xFFA
 11382                           tblptru	equ	0xFF8
 11383                           tblptrh	equ	0xFF7
 11384                           tblptrl	equ	0xFF6
 11385                           tablat	equ	0xFF5
 11386                           prodh	equ	0xFF4
 11387                           prodl	equ	0xFF3
 11388                           intcon	equ	0xFF2
 11389                           intcon2	equ	0xFF1
 11390                           postinc0	equ	0xFEE
 11391                           fsr0h	equ	0xFEA
 11392                           fsr0l	equ	0xFE9
 11393                           wreg	equ	0xFE8
 11394                           indf1	equ	0xFE7
 11395                           postinc1	equ	0xFE6
 11396                           postdec1	equ	0xFE5
 11397                           fsr1h	equ	0xFE2
 11398                           fsr1l	equ	0xFE1
 11399                           indf2	equ	0xFDF
 11400                           postinc2	equ	0xFDE
 11401                           postdec2	equ	0xFDD
 11402                           plusw2	equ	0xFDB
 11403                           fsr2h	equ	0xFDA
 11404                           fsr2l	equ	0xFD9
 11405                           status	equ	0xFD8
 11406                           pclatu	equ	0xFFB
 11407                           pclath	equ	0xFFA
 11408                           tblptru	equ	0xFF8
 11409                           tblptrh	equ	0xFF7
 11410                           tblptrl	equ	0xFF6
 11411                           tablat	equ	0xFF5
 11412                           prodh	equ	0xFF4
 11413                           prodl	equ	0xFF3
 11414                           intcon	equ	0xFF2
 11415                           intcon2	equ	0xFF1
 11416                           postinc0	equ	0xFEE
 11417                           fsr0h	equ	0xFEA
 11418                           fsr0l	equ	0xFE9
 11419                           wreg	equ	0xFE8
 11420                           indf1	equ	0xFE7
 11421                           postinc1	equ	0xFE6
 11422                           postdec1	equ	0xFE5
 11423                           fsr1h	equ	0xFE2
 11424                           fsr1l	equ	0xFE1
 11425                           indf2	equ	0xFDF
 11426                           postinc2	equ	0xFDE
 11427                           postdec2	equ	0xFDD
 11428                           plusw2	equ	0xFDB
 11429                           fsr2h	equ	0xFDA
 11430                           fsr2l	equ	0xFD9
 11431                           status	equ	0xFD8
 11432                           
 11433                           	psect	rparam
 11434  0000                     pclatu	equ	0xFFB
 11435                           pclath	equ	0xFFA
 11436                           tblptru	equ	0xFF8
 11437                           tblptrh	equ	0xFF7
 11438                           tblptrl	equ	0xFF6
 11439                           tablat	equ	0xFF5
 11440                           prodh	equ	0xFF4
 11441                           prodl	equ	0xFF3
 11442                           intcon	equ	0xFF2
 11443                           intcon2	equ	0xFF1
 11444                           postinc0	equ	0xFEE
 11445                           fsr0h	equ	0xFEA
 11446                           fsr0l	equ	0xFE9
 11447                           wreg	equ	0xFE8
 11448                           indf1	equ	0xFE7
 11449                           postinc1	equ	0xFE6
 11450                           postdec1	equ	0xFE5
 11451                           fsr1h	equ	0xFE2
 11452                           fsr1l	equ	0xFE1
 11453                           indf2	equ	0xFDF
 11454                           postinc2	equ	0xFDE
 11455                           postdec2	equ	0xFDD
 11456                           plusw2	equ	0xFDB
 11457                           fsr2h	equ	0xFDA
 11458                           fsr2l	equ	0xFD9
 11459                           status	equ	0xFD8
 11460                           
 11461                           	psect	temp
 11462  000041                     btemp:
 11463                           	opt stack 0
 11464  000041                     	ds	1
 11465  0000                     int$flags	set	btemp
 11466                           pclatu	equ	0xFFB
 11467                           pclath	equ	0xFFA
 11468                           tblptru	equ	0xFF8
 11469                           tblptrh	equ	0xFF7
 11470                           tblptrl	equ	0xFF6
 11471                           tablat	equ	0xFF5
 11472                           prodh	equ	0xFF4
 11473                           prodl	equ	0xFF3
 11474                           intcon	equ	0xFF2
 11475                           intcon2	equ	0xFF1
 11476                           postinc0	equ	0xFEE
 11477                           fsr0h	equ	0xFEA
 11478                           fsr0l	equ	0xFE9
 11479                           wreg	equ	0xFE8
 11480                           indf1	equ	0xFE7
 11481                           postinc1	equ	0xFE6
 11482                           postdec1	equ	0xFE5
 11483                           fsr1h	equ	0xFE2
 11484                           fsr1l	equ	0xFE1
 11485                           indf2	equ	0xFDF
 11486                           postinc2	equ	0xFDE
 11487                           postdec2	equ	0xFDD
 11488                           plusw2	equ	0xFDB
 11489                           fsr2h	equ	0xFDA
 11490                           fsr2l	equ	0xFD9
 11491                           status	equ	0xFD8


Data Sizes:
    Strings     437
    Constant    28
    Data        2
    BSS         1322
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      64
    BANK0           160     82      90
    BANK1           256    200     236
    BANK2           256    200     200
    BANK3           256      0     250
    BANK4           256    100     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    command_operation@opland3	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland3(BANK2[100]), 

    F8814.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    command_operation@opland2	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK4[100]), 

    command_operation@opland1	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), 

    command_operation@opcode	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opcode(BANK1[100]), 

    comm_at@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[6]), STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> STR_25(CODE[4]), STR_24(CODE[5]), STR_23(CODE[4]), STR_22(CODE[2]), 
		 -> STR_21(CODE[11]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[12]), 
		 -> STR_13(CODE[3]), STR_12(CODE[9]), STR_10(CODE[2]), STR_9(CODE[5]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), rx_loop@opcode(BANK1[100]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK4[100]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> tx_send_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_40(CODE[4]), STR_39(CODE[4]), STR_38(CODE[2]), STR_11(CODE[315]), 
		 -> STR_8(CODE[8]), STR_7(CODE[2]), STR_6(CODE[3]), weekday_3char(CODE[28]), 
		 -> STR_5(CODE[3]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), tx_send_dec@str(BANK0[10]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 


Critical Paths under _main in COMRAM

    _rx_loop->_ringbuf_backspace
    _rx_loop->_ringbuf_pop
    _rx_loop->_tx_sends
    _tx_sendn->___lwmod
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_my_strcmp
    _command_operation->_tx_sends
    _comm_at->_tx_sends
    _print_time->_tx_sends
    _tx_send_dec->_tx_sends
    _my_utoa->___lwmod
    _ringbuf_put->_ringbuf_num
    _normal_loop->_ADC
    ___wmul->_ADC
    ___lwdiv->_ADC
    _main_init->_timer1_init
    _RTCC_from_RTCC->_RTCC_to_caltime
    _RTCC_to_caltime->_x_to_d
    _month_length->___awmod
    _d_to_x->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_rx_loop
    _rx_loop->_command_operation
    _tx_sendn->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_comm_at
    _my_atoi->___wmul
    _comm_at->_RTCC_from_caltime
    _print_time->_RTCC_from_RTCC
    _tx_send_dec->_my_utoa
    _tx_sends->_ringbuf_put
    _my_utoa->___lwdiv
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _RTCC_from_caltime->_epoch_to_caltime
    _normal_loop->_RTCC_from_RTCC
    _PWM_set->_my_atoi
    ___lwdiv->___wmul
    _main_init->_ringbuf_init
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _month_length->___awmod
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rx_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_rx_loop

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_rx_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  153360
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                          _main_init
                        _normal_loop
                            _rx_loop
 ---------------------------------------------------------------------------------
 (1) _rx_loop                                            507   507      0  109106
                                             75 BANK0      7     7      0
                                              0 BANK1    200   200      0
                                              0 BANK2    200   200      0
                                              0 BANK4    100   100      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sendn                                             6     3      3    5599
                                             13 BANK0      6     3      3
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1750
                                             32 COMRAM     2     0      2
                                              6 BANK0      5     5      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1169
                                             32 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                    9     1      8   87483
                                             66 BANK0      9     1      8
                            _PWM_set
                            _comm_at
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4    6078
                                             30 COMRAM     4     0      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    2302
                                              6 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _comm_at                                              5     0      5   44095
                                             61 BANK0      5     0      5
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _print_time                                           0     0      0   22268
                     _RTCC_from_RTCC
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (4) _tx_send_dec                                         12    11      1    8125
                                             21 BANK0     12    11      1
                            _my_utoa
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sends                                             2     0      2    4304
                                             32 COMRAM     2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _my_utoa                                              8     3      5    2951
                                             13 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     856
                                             30 COMRAM     4     0      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    2814
                                             32 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    2783
                                              6 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2     910
                                             30 COMRAM     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_caltime                                    4     0      4   14841
                                             57 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (1) _normal_loop                                         14    14      0   18920
                                             39 BANK0     14    14      0
                                _ADC
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     648
                                             30 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2    4629
                                             14 BANK0      5     3      2
                            ___lwdiv
                             ___wmul
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1064
                                              0 BANK0      6     2      4
                                _ADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1489
                                              6 BANK0      7     3      4
                                _ADC (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      22
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1387
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7025
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_RTCC                                       4     0      4    7025
                                             35 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (5) _caltime_to_epoch                                    15    11      4    5298
                                             20 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _RTCC_to_caltime                                      3     1      2     386
                                             32 COMRAM     2     0      2
                                              0 BANK0      1     1      0
                             _x_to_d
 ---------------------------------------------------------------------------------
 (6) _x_to_d                                               2     2      0      62
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9897
                                             57 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    8040
                                             41 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _month_length                                         6     5      1    2179
                                              2 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     849
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    4470
                                             33 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2168
                                              8 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1281
                                             20 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1140
                                              5 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     715
                                              4 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     653
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 14    14      0    2983
                                             16 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (10) _button_timer_interrupt                              5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (10) _UART_ISR                                            1     1      0    1635
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_put                                       7     4      3     671
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_pop                                       7     5      2     608
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_num                                       8     6      2     322
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_loop
     _ADC
     _PWM_set
       ___lwdiv
         _ADC (ARG)
         ___wmul (ARG)
           _ADC (ARG)
       ___wmul
         _ADC (ARG)
       _my_atoi (ARG)
         ___wmul
           _ADC (ARG)
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
       ___lmul (ARG)
         _month_length (ARG)
           ___awmod
     ___llmod
     ___lmul
       _month_length (ARG)
         ___awmod
     ___lwdiv
       _ADC (ARG)
       ___wmul (ARG)
         _ADC (ARG)
     ___wmul
       _ADC (ARG)
   _rx_loop
     _command_operation
       _PWM_set
         ___lwdiv
           _ADC (ARG)
           ___wmul (ARG)
             _ADC (ARG)
         ___wmul
           _ADC (ARG)
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
       _comm_at
         _RTCC_from_caltime
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _caltime_to_epoch
             ___lmul
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
                 ___lmul (ARG)
                   _month_length (ARG)
                     ___awmod
               ___lmul
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
         _print_time (ARG)
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _tx_send
             _ringbuf_put
               _ringbuf_num
           _tx_send_dec
             _my_utoa
               ___lwdiv
                 _ADC (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
               ___lwmod
             _tx_sends
               _ringbuf_put
                 _ringbuf_num
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends (ARG)
           _ringbuf_put
             _ringbuf_num
       _month_length
         ___awmod
       _my_atoi
         ___wmul
           _ADC (ARG)
       _my_strcmp
       _print_time
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_send_dec
           _my_utoa
             ___lwdiv
               _ADC (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
             ___lwmod
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _tx_send
       _ringbuf_put
         _ringbuf_num
     _tx_sendn
       ___lwdiv
         _ADC (ARG)
         ___wmul (ARG)
           _ADC (ARG)
       ___lwmod
       _tx_send
         _ringbuf_put
           _ringbuf_num
     _tx_sends
       _ringbuf_put
         _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     64      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C8      EC       8       92.2%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      5A       5       56.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      40       1       68.1%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3AC       6        0.0%
DATA                 0      0     794       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 19:17:08 2015

                  my_strcmp@str1 001F                    my_strcmp@str2 0021  
                             _d1 01CC                     ___awdiv@sign 0061  
                             _ms 01C8              ___wmul@multiplicand 0062  
              ??_RTCC_from_epoch 0023                     __CFG_CP0$OFF 000000  
                   _rx_loop$3181 00AD                              l144 260E  
                            l161 2758                              l139 26F2  
                            l236 22AC                              l350 1698  
                            _ADC 273E                              l344 1C86  
                            l363 10CA                              l451 2630  
                            l516 1A84                              l631 072C  
                            l459 2038                              l637 07A6  
                            _GIE 007F97                              _PR2 000FCB  
                            _ISR 0008                      comm_at@hand 009D  
                  ?_get_quot_rem 0081               caltime_to_epoch@ep 0076  
             caltime_to_epoch@ct 0074                _RTCC_from_caltime 2674  
                   ___awmod@sign 0061                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
             ?_RTCC_from_caltime 0099                             ?_ADC 001F  
                           ?_ISR 0001            normal_loop@value_2504 008E  
                           l1013 199E                             l1023 2024  
                           l1066 222A                             l1076 25E2  
                           l4211 2172                             l4203 2156  
                           l4213 217C                             l4303 1EEE  
                           l4215 2180                             l4223 21A0  
                           l4207 2162                             l3415 2726  
                           l4321 1938                             l5121 05B0  
                           l5105 0ABC                             l4307 1F02  
                           l4227 21B2                             l4219 2194  
                           l4403 0B04                             l4411 0B62  
                           l5051 08A8                             l5043 0846  
                           l4317 1922                             l4253 17E2  
                           l3277 2706                             l4341 21E6  
                           l4319 1932                             l4263 226C  
                           l4511 1140                             l4415 0B82  
                           l4351 221C                             l4343 21EC  
                           l5143 06C0                             l5135 0698  
                           l4191 1488                             l4239 1680  
                           l4431 2064                             l5039 0820  
                           l4281 1E9A                             l4329 198C  
                           l4409 0B5E                             l3289 2610  
                           l4361 25BE                             l5081 0A0A  
                           l5073 098E                             l5065 0940  
                           l5057 08F2                             l5049 08A4  
                           l4291 1EC2                             l4275 1E88  
                           l4259 2246                             l4515 1148  
                           l4419 0BE6                             l4339 21DA  
                           l5155 073E                             l5147 06CA  
                           l4363 25C2                             l4603 1E52  
                           l5083 0A28                             l5075 0992  
                           l5067 0944                             l5059 08F6  
                           l4509 113C                             l5173 0786  
                           l4429 2046                             l4373 23FA  
                           l4605 1E58                             l4621 1DAA  
                           l5093 0A5A                             l4287 1EB4  
                           l4631 1214                             l5191 07D0  
                           l5167 0772                             l5159 0750  
                           l4367 25D6                             l4359 25B4  
                           l4439 20A2                             l4615 1D7E  
                           l4711 18EA                             l5087 0A42  
                           l4289 1EBE                             l4641 1268  
                           l5177 0790                             l5169 0776  
                           l4377 2434                             l4609 1D32  
                           l4617 1D86                             l5097 0A8E  
                           l5089 0A4A                             l4299 1EE2  
                           l4651 12D4                             l4627 1204  
                           l4539 254C                             l4803 02FA  
                           l4397 0AF4                             l4637 1258  
                           l4645 12B0                             l5189 07CC  
                           l4821 03BC                             l4813 0368  
                           l4805 0300                             l4709 18D6  
                           l4717 18F0                             l4399 0AFA  
                           l4655 12DE                             l4647 12CA  
                           l4575 13E0                             l4751 0034  
                           l4727 20F8                             l4735 22BC  
                           l5359 23E6                             l4665 12F6  
                           l4577 13E6                             l4841 0484  
                           l4833 0430                             l4825 03DC  
                           l4817 0388                             l4809 0334  
                           l4761 008E                             l4753 0040  
                           l4745 2310                             l4659 12EA  
                           l4595 1DDC                             l4739 22DE  
                           l4861 1FD0                             l4837 0464  
                           l4829 0410                             l4765 00D8  
                           l4679 24AA                             l4791 0288  
                           l4783 020C                             l4775 0178  
             __CFG_WPFP$PAGE_127 000000                             l4865 2014  
                           l4857 1FBC                             l4769 0122  
                           l4859 1FCA                             l4779 01C2  
                           l4787 0256                             l4799 02C6  
                           STR_1 FFB4                             STR_2 FFB2  
                           STR_3 FFE4                             STR_4 FFE4  
                           STR_5 FFDC                             STR_6 FFD9  
                           STR_7 FFE2                             STR_8 FFA4  
                           STR_9 FFBC                             u4400 182E  
                           u4410 1830                             u4340 1794  
                           u4350 1796                             u4360 17BE  
                           u4600 2456                             u4380 17D4  
                           u4390 17D6                             u4607 244C  
                           u2785 2840                             u4378 17C2  
                           u2786 2842                             u4590 2428  
                           u5705 06D8                             u5660 0564  
                           u4597 241E                             _t0if 002D  
                   comm_at@value 00A1              ??_RTCC_from_caltime 0023  
                           _main 2390         button_timer_interrupt@bt 0001  
                           _sw_B 01E7                             _sw_G 0038  
                           _sw_R 003C                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 0041  
         __CFG_DSWDTOSC$T1OSCREF 000000                             pclat 000FFA  
                    _tx_send_dec 250C                             prodh 000FF4  
                           prodl 000FF3                  __end_of_PWM_set 1314  
                           start 00E4                 __end_of_ADC_init 2850  
                  __CFG_IESO$OFF 000000                     ___param_bank 000010  
          __end_ofi2_ringbuf_pop 1C86            __end_ofi2_ringbuf_num 1A6C  
                          ??_ADC 0021            __end_ofi2_ringbuf_put 1BDA  
                          ADC@ch 0022                    ADC_init@p_ref 001F  
                          ??_ISR 0011                ??_RTCC_to_caltime 0023  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
      __end_of_RTCC_from_caltime 26AA                            ?_main 0001  
                 ??_get_quot_rem 0023                  __end_of___awdiv 1F0C  
                          _ADRES 000FC3                            STR_10 FFE6  
                          STR_11 FE49                            STR_20 FFF8  
                          STR_12 FF9B                            STR_13 FFDF  
                          STR_21 FF90                            STR_22 FFE0  
                          STR_30 FFEC                            STR_14 FF84  
                          STR_15 FFFC                            STR_31 FFF4  
                          STR_23 FFD5                            STR_40 FFC1  
                          STR_16 FFCB                            STR_32 FFEA  
                          STR_24 FFB7                            STR_17 FFF2  
                          STR_33 FFF0                            STR_25 FFCD  
                          STR_18 FFF6                            STR_34 FFE8  
                          STR_26 FFC5                            STR_19 FFD3  
                          STR_35 FFFA                            STR_27 FFD1  
                          STR_36 FFEE                            STR_28 FFC9  
                __end_of___awmod 21BC                            STR_29 FFB0  
                          STR_37 FFAC                            STR_38 FF82  
                          STR_39 FFC1                  __end_of___lldiv 19B0  
                ___awdiv@divisor 0021                  __end_of___llmod 2036  
                          _LATB2 007C52                  __end_of___lwdiv 2234  
                __end_of___lwmod 25EC                            i2l220 2584  
                          i2l219 2586                            i2l513 00A8  
                          i2l290 0E54                            i2l291 0E74  
                          i2l284 0D8C                            i2l285 0DB0  
                          i2l286 0DD2                            i2l287 0DF4  
                          i2l288 0E14                            i2l289 0E34  
                ___awdiv@counter 0060                            _TMR1H 000FCF  
                          _RPOR3 000EC3                            _RPOR4 000EC4  
                          _RPOR5 000EC5                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
            ___lmul@multiplicand 006C                   __CFG_FCMEN$OFF 000000  
               __end_of_UART_ISR 25A4                  __end_of_comm_at 24B8  
           caltime_to_epoch@year 007C               __size_of_UART_init 0020  
                          _colon 0028                 __end_of_OSC_init 2890  
             __size_of_RTCC_init 002E               __size_of_RTCC_loop 0044  
               ringbuf_delete@rb 001F                  __end_of_my_atoi 1E70  
                          tablat 000FF5                  __end_of_my_utoa 20BC  
                          plusw2 000FDB                 __end_of_PWM_init 1B24  
     __size_of_ringbuf_backspace 0082                  __end_of_rx_loop 0ADA  
                          status 000FD8                  __end_of_tx_send 286A  
              month_length@month 0062                  __initialization 231E  
                   __end_of_main 23F8              ringbuf_init@bufsize 0064  
               RTCC_from_RTCC@ep 0085                 RTCC_from_RTCC@ct 0083  
                         ??_main 0023                    __activetblptr 000003  
              normal_loop@i_2486 008F                 ___llmod@dividend 0060  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 001F  
                      ??_PWM_set 0070                   __CFG_WDTEN$OFF 000000  
                         i2l5341 005A                           i2l3671 0EE0  
                         i2l3663 0E98                           i2l5335 0050  
                         i2l3691 0F9A                           i2l3683 0F4E  
                         i2l3675 0F04                           i2l3667 0EBC  
                         i2l3687 0F74                           i2l3679 0F28  
                         i2l3695 0FBE                           i2l4689 1A12  
                         i2l4877 1BC4                           i2l4887 1C6A  
                         i2l4895 1C82                           i2l4889 1C7E  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0009  
                i2ringbuf_num@rb 0001                  i2ringbuf_put@rb 0009  
                 __CFG_WPDIS$OFF 000000               epoch_to_caltime@ep 008B  
             epoch_to_caltime@ct 0089                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0089                     _CCPTMRS0bits 000F52  
                   _CCPTMRS1bits 000F51            caltime_to_epoch@epoch 007E  
                   ?_ringbuf_pop 0021                     ?_ringbuf_num 001F  
                   ?_ringbuf_put 0066            caltime_to_epoch@month 0082  
                         ___lmul 2234                  _caltime_to_RTCC 1698  
                         ___wmul 26AA               ??_epoch_to_caltime 008D  
              __end_of_UART_init 2834                        ??___awdiv 0023  
                      ??___awmod 0023                           _d_to_x 27F2  
                      ??___lldiv 0023                     ?_timer0_init 0001  
                      ??___llmod 001F                __end_of_RTCC_init 273E  
                   ?_timer1_init 001F                        ??___lwdiv 0023  
              __end_of_RTCC_loop 2674                        ??___lwmod 0023  
                   ?_timer3_init 0001                     ?_normal_loop 0001  
                         clear_0 2326                           clear_1 2338  
                         clear_2 2344                           clear_3 2350  
                         clear_4 235C                  __CFG_CLKOEC$OFF 000000  
                   rx_loop@ascii 00B0                 ___awdiv@quotient 0062  
                ___awmod@divisor 0021                  ___awmod@counter 0060  
                         _x_to_d 286A                           _rx_buf 01CF  
     __size_of_RTCC_from_caltime 0036                _command_operation 0000  
                         _tx_buf 01D7                        ??_comm_at 0023  
      __size_of_caltime_to_epoch 0288             rx_loop@comm_buf_init 01EB  
                   __pdataCOMRAM 0040               ?_command_operation 00A2  
                   __mediumconst FE2C                           tblptrh 000FF7  
                         tblptrl 000FF6                        ??_my_atoi 0068  
                         tblptru 000FF8                        ?_ADC_init 0001  
                      ??_my_utoa 0023                        ??_rx_loop 00AB  
                      ??_tx_send 0021                 __end_of_tx_sendn 231E  
               __end_of_tx_sends 2460              ??_command_operation 0023  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 2386             __end_of_get_quot_rem 15C8  
                  ___rparam_used 000001                  _RTCC_from_epoch 27D0  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
                   __pidataBANK1 2891                        ?_UART_ISR 0001  
       command_operation@opland1 00A4         command_operation@opland2 00A6  
       command_operation@opland3 00A8        __end_of_command_operation 04E6  
                      ?_OSC_init 0001                  __CFG_DSWDTPS$G2 000000  
                      ?_PWM_init 0001          __size_of_ringbuf_delete 0022  
                normal_loop@scan 008B                  normal_loop@temp 0091  
                     ??_ADC_init 001F       caltime_to_epoch@month_2065 007D  
             __size_of_main_init 0096                       __pbssBANK0 00B2  
                     __pbssBANK1 01C8                       __pbssBANK3 0300  
        __end_of_caltime_to_RTCC 1768                  _RTCC_to_caltime 1C86  
                   ?_tx_send_dec 0075            __end_of_weekday_3char FE49  
                        ?___lmul 0068                       ??_UART_ISR 0010  
                        ?___wmul 0060                          ?_d_to_x 0001  
                     ??_OSC_init 001F                   ___lmul@product 0070  
                        ?_x_to_d 0001                       ??_PWM_init 001F  
             __CFG_OSC$INTOSCPLL 000000               __size_of_my_strcmp 00A0  
                __CFG_WDTPS$1024 000000                     tx_sendn@temp 0071  
                        _SPBRGH1 000F7F                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A          __end_of_RTCC_from_epoch 27F2  
           timer1_init@prescaler 0021                          _PWM_set 11CC  
               i2ringbuf_pop@ret 000F                     PWM_set@color 0072  
               __CFG_CFGPLLEN$ON 000000         ??_button_timer_interrupt 0004  
                   PWM_set@value 006E                    ?_month_length 0062  
            epoch_to_caltime@day 0091                RTCC_from_epoch@ep 009B  
              RTCC_from_epoch@ct 0099              epoch_to_caltime@num 0095  
                        __Hparam 0000                          __Lparam 0000  
                  ?_ringbuf_init 0060                          ___awdiv 1E70  
                __size_of___lmul 0076                          ___awmod 213E  
                        ___lldiv 18F4                  __size_of___wmul 0036  
                        ___llmod 1FA2                       _light_mode 00B3  
                        ___lwdiv 21BC                          ___lwmod 25A4  
                __size_of_d_to_x 0022       __size_of_command_operation 04E6  
           __size_of_ringbuf_pop 00BE             __size_of_ringbuf_num 00D8  
           __size_of_ringbuf_put 00D0                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 1FA2      epoch_to_caltime@month_cache 0040  
                        __pcinit 231E                        ?_tx_sendn 006D  
                      ?_tx_sends 0021                    rx_loop@i_2444 00AF  
                        __ramtop 0F00             __size_of_timer0_init 0030  
                        _halfsec 00B2             __size_of_timer1_init 0044  
                        __ptext0 2390                          __ptext1 07EA  
                        __ptext2 22AA                          __ptext3 1836  
                        __ptext4 278C                          __ptext5 20BC  
                        __ptext6 0000                          __ptext7 1D30  
                        __ptext8 1DD0                          __ptext9 2460  
           __size_of_timer3_init 0026             __size_of_normal_loop 0304  
                __size_of_x_to_d 0018                          _comm_at 2460  
                      _T0CONbits 000FD5                     __size_of_ADC 0028  
               _time_change_flag 002E                 _caltime_to_epoch 0ADA  
                   __size_of_ISR 00DC                        _T1CONbits 000FCD  
        __size_of_RTCC_from_RTCC 0022                        _T2CONbits 000FCA  
                        _rc_flag 002B                        _T3CONbits 000F79  
               ___awmod@dividend 001F                        _T5CONbits 000F22  
                        _my_atoi 1DD0                          _my_utoa 2036  
                  rx_loop@opcode 0164                          _rx_flag 002C  
                        _rx_loop 07EA          __end_of_RTCC_to_caltime 1D30  
                        _tx_send 2850            __size_of_get_quot_rem 00D4  
           end_of_initialization 2386           __size_ofi2_ringbuf_pop 00AC  
         __size_ofi2_ringbuf_num 00BC           __size_ofi2_ringbuf_put 00B6  
                   _CTMUCONHbits 000FB3                     _CTMUCONLbits 000FB2  
                 ??_month_length 0063                 ?_caltime_to_RTCC 0065  
                ___lldiv@divisor 0078             timer3_init@prescaler 0020  
              __end_of_my_strcmp 1DD0                  ___lldiv@counter 0080  
                 tx_send_dec@dec 0080                   tx_sendn@digits 006F  
                 tx_send_dec@str 0076                   ??_ringbuf_init 001F  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_tx_sendn 0023  
                     ??_tx_sends 0023                        _PORTAbits 000F80  
                      _UART_init 2814                 __CFG_DSBOREN$OFF 000000  
                      _RTCC_init 2710                        _RTCC_loop 2630  
                   _display_flag 0029        epoch_to_caltime@day_cache 0023  
         i2ringbuf_put@asciicode 000B                     _get_quot_rem 14F4  
                     _print_time 1314                   _ringbuf_delete 278C  
      __size_of_epoch_to_caltime 01E8                 __CFG_CPUDIV$OSC1 000000  
            RTCC_from_caltime@ep 009B              RTCC_from_caltime@ct 0099  
              __size_of_ADC_init 001C                 ?_RTCC_from_epoch 0099  
                     comm_at@max 00A0                       comm_at@min 009F  
__size_of_button_timer_interrupt 0282          timer1_init@clock_select 001F  
                    _CCP1CONbits 000FBA                      _CCP2CONbits 000FB4  
               __CFG_IOL1WAY$OFF 000000                      _CCP3CONbits 000F15  
                    _CCP4CONbits 000F12             __size_of_tx_send_dec 004E  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0060  
                 ringbuf_pop@ret 006A                    i2_ringbuf_pop 1BDA  
                  i2_ringbuf_num 19B0                    i2_ringbuf_put 1B24  
                 __end_of___lmul 22AA                   __end_of___wmul 26E0  
                 __end_of_d_to_x 2814                    __pidataCOMRAM 2890  
              __size_of_UART_ISR 004A           __end_of_ringbuf_delete 27AE  
                     ?_UART_init 0001                       ?_RTCC_init 0001  
              __size_of_OSC_init 000E                       ?_RTCC_loop 0001  
               __CFG_DSWDTEN$OFF 000000                   __end_of_x_to_d 2882  
          epoch_to_caltime@month 0094              start_initialization 231E  
               month_length@year 0067                      __end_of_ADC 2766  
                    __end_of_ISR 00E4                __size_of_PWM_init 00B8  
                  UART_ISR@ascii 0010                 ?_RTCC_to_caltime 0021  
               normal_loop@_2503 00B8                  ___llmod@divisor 0064  
                ___llmod@counter 001F                 normal_loop@value 008D  
                       ??___lmul 0023                   ?i2_ringbuf_pop 0009  
                 ?i2_ringbuf_num 0001                   ?i2_ringbuf_put 0009  
                       ??___wmul 0023                         ??_d_to_x 0023  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK1 01EB  
         _button_timer_interrupt 0D62                         ??_x_to_d 001F  
                ?_ringbuf_delete 001F             __end_of_month_length 1836  
                 _RTCC_from_RTCC 27AE                      ?_print_time 0001  
                    __pbssBIGRAM 0464                      __pbssCOMRAM 0023  
            RTCC_to_caltime@dumy 0060                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                    __pcstackBANK2 0200  
                  __pcstackBANK4 0400          command_operation@opcode 00A2  
                    _caltime_now 0031             __end_of_ringbuf_init 250C  
               tx_send@asciicode 0021                         ?_PWM_set 006E  
       __end_of_caltime_to_epoch 0D62                  millis_timer@cnt 0025  
               ___lwdiv@dividend 0066                        _edit_flag 002A  
                      __pintcode 0008                    __pmediumconst FE2C  
                       ?___awdiv 001F                         ?___awmod 001F  
                       ?___lldiv 0074                         ?___llmod 0060  
                       ?___lwdiv 0066                         ?___lwmod 001F  
         __end_of_RTCC_from_RTCC 27D0                      ??_UART_init 001F  
                       ?_comm_at 009D                      ??_RTCC_init 001F  
                    ??_RTCC_loop 0023                __size_of_tx_sendn 0074  
              __size_of_tx_sends 0068                        _epoch_now 00B4  
                      _main_init 1F0C                 _epoch_to_caltime 0FE4  
           __CFG_RTCOSC$T1OSCREF 000000                         ?_my_atoi 0066  
                       _ADC_init 2834                      _PADCFG1bits 000F3C  
                       ?_my_utoa 006D              ringbuf_backspace@rb 0021  
               ___lwdiv@quotient 006B                         ?_rx_loop 0001  
                       ?_tx_send 0001                       my_atoi@ret 006C  
                     my_atoi@str 0066                        d_to_x@dec 0064  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 0062  
                 ___wmul@product 0064                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                  rx_loop@comm_buf 01DF  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 0108                  ??i2_ringbuf_pop 000B  
                ??i2_ringbuf_num 0003                         i2u342_40 0F3E  
                ??i2_ringbuf_put 000C                         i2u343_40 0F64  
                       i2u344_40 0F8A                         i2u600_40 00A0  
                       i2u345_40 0FB0                         i2u601_40 00A2  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       _PIR5bits 000F98       epoch_to_caltime@year_cache 0030  
                       i2u596_40 0070                         i2u597_40 0072  
                       i2u598_40 0088                         i2u599_40 008A  
                  ??_ringbuf_pop 0066                    ??_ringbuf_num 0060  
                  ??_ringbuf_put 0069                    tx_sendn@value 006D  
                       _UART_ISR 255A                    ??_timer0_init 001F  
                  ??_timer1_init 0020                        _time_sync 002F  
                  ??_timer3_init 001F                    ??_normal_loop 0087  
                      _my_strcmp 1D30                         _OSC_init 2882  
                ?_RTCC_from_RTCC 0083                       my_utoa@str 006D  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
              ___wmul@multiplier 0060                 __CFG_SOSCSEL$LOW 000000  
                       _PWM_init 1A6C   button_timer_interrupt@sw_value 0003  
                     ?_main_init 0001                    ringbuf_pop@rb 0021  
                  ringbuf_num@rb 001F                    ringbuf_put@rb 0066  
              ___lmul@multiplier 0068                      _INTCON2bits 000FF1  
           epoch_to_caltime@year 0093                 __size_of_PWM_set 0148  
                     _CCPR1Lbits 000FBB                       _CCPR2Lbits 000FB5  
                     _CCPR3Lbits 000F16                       _CCPR4Lbits 000F13  
                       __Hrparam 0000                         __Lrparam 0000  
                     rx_loop@buf 0100                    _weekday_3char FE2D  
          __size_of_month_length 00CE                       ?_my_strcmp 001F  
       __size_of_caltime_to_RTCC 00D0                 __size_of___awdiv 009C  
               __size_of___awmod 007E                 __size_of___lldiv 00BC  
               __size_of___llmod 0094                 __size_of___lwdiv 0078  
               __size_of___lwmod 0048                tx_sends@asciicode 0021  
            __end_of_ringbuf_pop 18F4              __end_of_ringbuf_num 14F4  
            __end_of_ringbuf_put 1698              __end_of_timer0_init 2710  
          __size_of_ringbuf_init 0054                 __size_of_comm_at 0058  
            __end_of_timer1_init 2630              __end_of_timer3_init 278C  
            __end_of_normal_loop 07EA                  ___lwdiv@divisor 0068  
                ___lwdiv@counter 006A             timer0_init@prescaler 0020  
                       __ptext10 1314                         __ptext11 250C  
                       __ptext20 1FA2                         __ptext12 23F8  
                       __ptext21 11CC                         __ptext13 2036  
                       __ptext30 2814                         __ptext22 26AA  
                       __ptext14 25A4                         __ptext31 2710  
                       __ptext23 21BC                         __ptext15 2850  
                       __ptext40 27D0                         __ptext32 1A6C  
                       __ptext24 273E                         __ptext16 15C8  
                       __ptext41 0FE4                         __ptext33 2882  
                       __ptext25 1F0C                         __ptext17 141C  
                       __ptext42 1768                         __ptext34 2834  
                       __ptext26 2766                         __ptext18 2674  
                       __ptext51 0D62                         __ptext43 213E  
                       __ptext35 2630                         __ptext27 25EC  
                       __ptext19 04E6                         __ptext52 255A  
                       __ptext44 14F4                         __ptext36 27AE  
                       __ptext28 26E0                         __ptext53 1B24  
                       __ptext45 2234                         __ptext37 0ADA  
                       __ptext29 24B8                         __ptext54 1BDA  
                       __ptext46 18F4                         __ptext38 1C86  
                       __ptext55 19B0                         __ptext47 1698  
                       __ptext39 286A                         __ptext48 27F2  
                       __ptext49 1E70                 __size_of_my_atoi 00A0  
                     PWM_init@PR 001F                 __size_of_my_utoa 0086  
               __size_of_rx_loop 02F0            RTCC_loop@prev_halfsec 0027  
               __size_of_tx_send 001A                    __size_of_main 0068  
                  ??_tx_send_dec 0023                     _month_length 1768  
       __size_of_RTCC_from_epoch 0022                 ??_ringbuf_delete 0021  
        ?_button_timer_interrupt 0001                         int$flags 0041  
                 rx_loop@opland1 0264                   rx_loop@opland2 0400  
                 rx_loop@opland3 0200                     _ringbuf_init 24B8  
                      x_to_d@hex 0020                         _tx_sendn 22AA  
                       _tx_sends 23F8                     ??_print_time 0023  
                 main_init@rxbuf 0300                   main_init@txbuf 0464  
                    ??_main_init 0022                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 0068  
               get_quot_rem@quot 0081                RTCC_to_caltime@ct 0021  
                   normal_loop@i 0090                         intlevel2 0000  
                   normal_loop@n 00B9                 ___lwmod@dividend 001F  
               ___lldiv@dividend 0074                        tx_sendn@i 0070  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 0074  
              _ringbuf_backspace 20BC         __end_of_epoch_to_caltime 11CC  
       __size_of_RTCC_to_caltime 00AA                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 0FE4                  tx_send_dec@edit 0075  
             __end_of_print_time 141C               ??_caltime_to_epoch 0078  
             ?_ringbuf_backspace 0021                         my_utoa@d 0072  
                       my_utoa@v 0073                      _ringbuf_pop 1836  
                    _ringbuf_num 141C                      _ringbuf_put 15C8  
            __end_of_tx_send_dec 255A                      ??_my_strcmp 0060  
                    _timer0_init 26E0                      _timer1_init 25EC  
                    _timer3_init 2766                      _normal_loop 04E6  
                       rx_loop@i 00B1              ??_ringbuf_backspace 0066  
                get_quot_rem@div 0083                  get_quot_rem@num 0085  
                     _RTCCFGbits 000F3F                       _PPSCONbits 000EBF  
               ___lldiv@quotient 007C                caltime_to_RTCC@ct 0065  
                ___lwmod@divisor 0021                ??_caltime_to_RTCC 0023  
                ___lwmod@counter 0060  epoch_to_caltime@day_since_epoch 008F  
                  my_utoa@digits 0071        __end_of_ringbuf_backspace 213E  
                   my_utoa@value 006F           _command_operation$3180 00AA  
               ??_RTCC_from_RTCC 0023  
