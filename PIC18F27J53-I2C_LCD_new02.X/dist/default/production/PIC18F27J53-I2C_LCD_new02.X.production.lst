

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jan 13 13:59:57 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	dabs	1,0xD00,48,_BDT
    46                           	dabs	1,0xD38,8,_CtrlTrfData
    47                           	dabs	1,0xD30,8,_SetupPkt
    48  0000                     
    49                           	psect	idataBANK0
    50  010784                     __pidataBANK0:
    51                           	opt stack 0
    52                           
    53                           ;initializer for I2C_LCD_SetCursor@F8685
    54  010784  00                 	db	0
    55  010785  40                 	db	64
    56                           
    57                           ;initializer for ST7032_cursor@F8640
    58  010786  00                 	db	0
    59  010787  40                 	db	64
    60                           
    61                           ;initializer for epoch_to_caltime@month_cache
    62  010788  01                 	db	1
    63                           
    64                           	psect	mediumconst
    65  00FE6E                     __pmediumconst:
    66                           	opt stack 0
    67  00FE6E  00                 	db	0
    68  00FE6F                     _dpowers:
    69                           	opt stack 0
    70  00FE6F  0001               	dw	1
    71  00FE71  000A               	dw	10
    72  00FE73  0064               	dw	100
    73  00FE75  03E8               	dw	1000
    74  00FE77  2710               	dw	10000
    75  00FE79                     __end_of_dpowers:
    76                           	opt stack 0
    77  00FE79                     _USB_SD_Ptr:
    78                           	opt stack 0
    79  00FE79  5A                 	db	low _sd000
    80  00FE7A  FF                 	db	high _sd000
    81  00FE7B  C4                 	db	low _sd001
    82  00FE7C  FE                 	db	high _sd001
    83  00FE7D  F8                 	db	low _sd002
    84  00FE7E  FE                 	db	high _sd002
    85  00FE7F                     __end_of_USB_SD_Ptr:
    86                           	opt stack 0
    87  00FE7F                     _USB_CD_Ptr:
    88                           	opt stack 0
    89  00FE7F  81                 	db	low _configDescriptor1
    90  00FE80  FE                 	db	high _configDescriptor1
    91  00FE81                     __end_of_USB_CD_Ptr:
    92                           	opt stack 0
    93  00FE81                     _configDescriptor1:
    94                           	opt stack 0
    95  00FE81  09                 	db	9
    96  00FE82  02                 	db	2
    97  00FE83  43                 	db	67
    98  00FE84  00                 	db	0
    99  00FE85  02                 	db	2
   100  00FE86  01                 	db	1
   101  00FE87  00                 	db	0
   102  00FE88  C0                 	db	192
   103  00FE89  32                 	db	50
   104  00FE8A  09                 	db	9
   105  00FE8B  04                 	db	4
   106  00FE8C  00                 	db	0
   107  00FE8D  00                 	db	0
   108  00FE8E  01                 	db	1
   109  00FE8F  02                 	db	2
   110  00FE90  02                 	db	2
   111  00FE91  01                 	db	1
   112  00FE92  00                 	db	0
   113  00FE93  05                 	db	5
   114  00FE94  24                 	db	36
   115  00FE95  00                 	db	0
   116  00FE96  10                 	db	16
   117  00FE97  01                 	db	1
   118  00FE98  04                 	db	4
   119  00FE99  24                 	db	36
   120  00FE9A  02                 	db	2
   121  00FE9B  02                 	db	2
   122  00FE9C  05                 	db	5
   123  00FE9D  24                 	db	36
   124  00FE9E  06                 	db	6
   125  00FE9F  00                 	db	0
   126  00FEA0  01                 	db	1
   127  00FEA1  05                 	db	5
   128  00FEA2  24                 	db	36
   129  00FEA3  01                 	db	1
   130  00FEA4  00                 	db	0
   131  00FEA5  01                 	db	1
   132  00FEA6  07                 	db	7
   133  00FEA7  05                 	db	5
   134  00FEA8  81                 	db	129
   135  00FEA9  03                 	db	3
   136  00FEAA  08                 	db	8
   137  00FEAB  00                 	db	0
   138  00FEAC  02                 	db	2
   139  00FEAD  09                 	db	9
   140  00FEAE  04                 	db	4
   141  00FEAF  01                 	db	1
   142  00FEB0  00                 	db	0
   143  00FEB1  02                 	db	2
   144  00FEB2  0A                 	db	10
   145  00FEB3  00                 	db	0
   146  00FEB4  00                 	db	0
   147  00FEB5  00                 	db	0
   148  00FEB6  07                 	db	7
   149  00FEB7  05                 	db	5
   150  00FEB8  02                 	db	2
   151  00FEB9  02                 	db	2
   152  00FEBA  40                 	db	64
   153  00FEBB  00                 	db	0
   154  00FEBC  00                 	db	0
   155  00FEBD  07                 	db	7
   156  00FEBE  05                 	db	5
   157  00FEBF  82                 	db	130
   158  00FEC0  02                 	db	2
   159  00FEC1  40                 	db	64
   160  00FEC2  00                 	db	0
   161  00FEC3  00                 	db	0
   162  00FEC4                     __end_of_configDescriptor1:
   163                           	opt stack 0
   164  00FEC4                     _sd001:
   165                           	opt stack 0
   166  00FEC4  34                 	db	52
   167  00FEC5  03                 	db	3
   168  00FEC6  004D               	dw	77
   169  00FEC8  0069               	dw	105
   170  00FECA  0063               	dw	99
   171  00FECC  0072               	dw	114
   172  00FECE  006F               	dw	111
   173  00FED0  0063               	dw	99
   174  00FED2  0068               	dw	104
   175  00FED4  0069               	dw	105
   176  00FED6  0070               	dw	112
   177  00FED8  0020               	dw	32
   178  00FEDA  0054               	dw	84
   179  00FEDC  0065               	dw	101
   180  00FEDE  0063               	dw	99
   181  00FEE0  0068               	dw	104
   182  00FEE2  006E               	dw	110
   183  00FEE4  006F               	dw	111
   184  00FEE6  006C               	dw	108
   185  00FEE8  006F               	dw	111
   186  00FEEA  0067               	dw	103
   187  00FEEC  0079               	dw	121
   188  00FEEE  0020               	dw	32
   189  00FEF0  0049               	dw	73
   190  00FEF2  006E               	dw	110
   191  00FEF4  0063               	dw	99
   192  00FEF6  002E               	dw	46
   193  00FEF8                     __end_of_sd001:
   194                           	opt stack 0
   195  00FEF8                     _sd002:
   196                           	opt stack 0
   197  00FEF8  34                 	db	52
   198  00FEF9  03                 	db	3
   199  00FEFA  0043               	dw	67
   200  00FEFC  0044               	dw	68
   201  00FEFE  0043               	dw	67
   202  00FF00  0020               	dw	32
   203  00FF02  0052               	dw	82
   204  00FF04  0053               	dw	83
   205  00FF06  002D               	dw	45
   206  00FF08  0032               	dw	50
   207  00FF0A  0033               	dw	51
   208  00FF0C  0032               	dw	50
   209  00FF0E  0020               	dw	32
   210  00FF10  0045               	dw	69
   211  00FF12  006D               	dw	109
   212  00FF14  0075               	dw	117
   213  00FF16  006C               	dw	108
   214  00FF18  0061               	dw	97
   215  00FF1A  0074               	dw	116
   216  00FF1C  0069               	dw	105
   217  00FF1E  006F               	dw	111
   218  00FF20  006E               	dw	110
   219  00FF22  0020               	dw	32
   220  00FF24  0044               	dw	68
   221  00FF26  0065               	dw	101
   222  00FF28  006D               	dw	109
   223  00FF2A  006F               	dw	111
   224  00FF2C                     __end_of_sd002:
   225                           	opt stack 0
   226  00FF2C                     _weekday_3char:
   227                           	opt stack 0
   228  00FF2C  53                 	db	83
   229  00FF2D  55                 	db	85
   230  00FF2E  4E                 	db	78
   231  00FF2F  00                 	db	0
   232  00FF30  4D                 	db	77
   233  00FF31  4F                 	db	79
   234  00FF32  4E                 	db	78
   235  00FF33  00                 	db	0
   236  00FF34  54                 	db	84
   237  00FF35  55                 	db	85
   238  00FF36  45                 	db	69
   239  00FF37  00                 	db	0
   240  00FF38  57                 	db	87
   241  00FF39  45                 	db	69
   242  00FF3A  44                 	db	68
   243  00FF3B  00                 	db	0
   244  00FF3C  54                 	db	84
   245  00FF3D  48                 	db	72
   246  00FF3E  55                 	db	85
   247  00FF3F  00                 	db	0
   248  00FF40  46                 	db	70
   249  00FF41  52                 	db	82
   250  00FF42  49                 	db	73
   251  00FF43  00                 	db	0
   252  00FF44  53                 	db	83
   253  00FF45  41                 	db	65
   254  00FF46  54                 	db	84
   255  00FF47  00                 	db	0
   256  00FF48                     __end_of_weekday_3char:
   257                           	opt stack 0
   258  00FF48                     _device_dsc:
   259                           	opt stack 0
   260  00FF48  12                 	db	18
   261  00FF49  01                 	db	1
   262  00FF4A  0200               	dw	512
   263  00FF4C  02                 	db	2
   264  00FF4D  00                 	db	0
   265  00FF4E  00                 	db	0
   266  00FF4F  08                 	db	8
   267  00FF50  04D8               	dw	1240
   268  00FF52  000A               	dw	10
   269  00FF54  0100               	dw	256
   270  00FF56  01                 	db	1
   271  00FF57  02                 	db	2
   272  00FF58  00                 	db	0
   273  00FF59  01                 	db	1
   274  00FF5A                     __end_of_device_dsc:
   275                           	opt stack 0
   276  00FF5A                     _sd000:
   277                           	opt stack 0
   278  00FF5A  04                 	db	4
   279  00FF5B  03                 	db	3
   280  00FF5C  0409               	dw	1033
   281  00FF5E                     __end_of_sd000:
   282                           	opt stack 0
   283  0000                     _ANCON0	set	3912
   284  0000                     _ANCON1	set	3913
   285  0000                     _PADCFG1bits	set	3900
   286  0000                     _RTCCAL	set	3902
   287  0000                     _RTCCFGbits	set	3903
   288  0000                     _RTCVALH	set	3899
   289  0000                     _RTCVALL	set	3898
   290  0000                     _T5CONbits	set	3874
   291  0000                     _UADDR	set	3896
   292  0000                     _UCFG	set	3897
   293  0000                     _UEIE	set	3895
   294  0000                     _UEP0bits	set	3878
   295  0000                     _UIE	set	3894
   296  0000                     _UIEbits	set	3894
   297  0000                     _UEP0	set	3878
   298  0000                     _UEP1	set	3879
   299  0000                     _ADRES	set	4035
   300  0000                     _ADCON0bits	set	4034
   301  0000                     _ADCON1bits	set	4033
   302  0000                     _BAUDCON1bits	set	3966
   303  0000                     _CTMUCONH	set	4019
   304  0000                     _CTMUCONHbits	set	4019
   305  0000                     _CTMUCONL	set	4018
   306  0000                     _CTMUCONLbits	set	4018
   307  0000                     _CTMUICON	set	4017
   308  0000                     _EECON2	set	4007
   309  0000                     _INTCON2bits	set	4081
   310  0000                     _INTCONbits	set	4082
   311  0000                     _IPR1bits	set	3999
   312  0000                     _IPR2bits	set	4002
   313  0000                     _IPR5bits	set	3993
   314  0000                     _LATAbits	set	3977
   315  0000                     _OSCCONbits	set	4051
   316  0000                     _OSCTUNEbits	set	3995
   317  0000                     _PIE1bits	set	3997
   318  0000                     _PIE2bits	set	4000
   319  0000                     _PIE5bits	set	3985
   320  0000                     _PIR1bits	set	3998
   321  0000                     _PIR2bits	set	4001
   322  0000                     _PIR5bits	set	3992
   323  0000                     _RCONbits	set	4048
   324  0000                     _RCREG1	set	4015
   325  0000                     _RCSTA1bits	set	4012
   326  0000                     _SPBRG1	set	4016
   327  0000                     _SPBRGH1	set	3967
   328  0000                     _SSP1ADD	set	4040
   329  0000                     _SSP1BUF	set	4041
   330  0000                     _SSP1CON1	set	4038
   331  0000                     _SSP1CON1bits	set	4038
   332  0000                     _SSP1CON2	set	4037
   333  0000                     _SSP1CON2bits	set	4037
   334  0000                     _SSP1STAT	set	4039
   335  0000                     _SSP1STATbits	set	4039
   336  0000                     _SSPBUF	set	4041
   337  0000                     _T0CONbits	set	4053
   338  0000                     _T1CONbits	set	4045
   339  0000                     _T3CONbits	set	3961
   340  0000                     _TMR1H	set	4047
   341  0000                     _TRISA	set	3986
   342  0000                     _TRISB	set	3987
   343  0000                     _TRISC	set	3988
   344  0000                     _TXREG1	set	4014
   345  0000                     _TXSTA1bits	set	4013
   346  0000                     _UCON	set	3941
   347  0000                     _UCONbits	set	3941
   348  0000                     _UEIR	set	3939
   349  0000                     _UIR	set	3938
   350  0000                     _UIRbits	set	3938
   351  0000                     _USTAT	set	3940
   352  0000                     _BCL1IF	set	32011
   353  0000                     _LATB2	set	31826
   354  0000                     _SSP1IF	set	31987
   355  00FF5E  09                 	db	9
   356  00FF5F  32                 	db	50	;'2'
   357  00FF60  30                 	db	48	;'0'
   358  00FF61  25                 	db	37
   359  00FF62  30                 	db	48	;'0'
   360  00FF63  32                 	db	50	;'2'
   361  00FF64  64                 	db	100	;'d'
   362  00FF65  2F                 	db	47
   363  00FF66  25                 	db	37
   364  00FF67  30                 	db	48	;'0'
   365  00FF68  32                 	db	50	;'2'
   366  00FF69  64                 	db	100	;'d'
   367  00FF6A  2F                 	db	47
   368  00FF6B  25                 	db	37
   369  00FF6C  30                 	db	48	;'0'
   370  00FF6D  32                 	db	50	;'2'
   371  00FF6E  64                 	db	100	;'d'
   372  00FF6F  28                 	db	40
   373  00FF70  25                 	db	37
   374  00FF71  73                 	db	115	;'s'
   375  00FF72  29                 	db	41
   376  00FF73  25                 	db	37
   377  00FF74  30                 	db	48	;'0'
   378  00FF75  32                 	db	50	;'2'
   379  00FF76  64                 	db	100	;'d'
   380  00FF77  3A                 	db	58	;':'
   381  00FF78  25                 	db	37
   382  00FF79  30                 	db	48	;'0'
   383  00FF7A  32                 	db	50	;'2'
   384  00FF7B  64                 	db	100	;'d'
   385  00FF7C  2D                 	db	45
   386  00FF7D  25                 	db	37
   387  00FF7E  30                 	db	48	;'0'
   388  00FF7F  32                 	db	50	;'2'
   389  00FF80  64                 	db	100	;'d'
   390  00FF81  0A                 	db	10
   391  00FF82  00                 	db	0
   392  00FF83  61                 	db	97	;'a'
   393  00FF84  64                 	db	100	;'d'
   394  00FF85  6A                 	db	106	;'j'
   395  00FF86  75                 	db	117	;'u'
   396  00FF87  73                 	db	115	;'s'
   397  00FF88  74                 	db	116	;'t'
   398  00FF89  5F                 	db	95	;'_'
   399  00FF8A  74                 	db	116	;'t'
   400  00FF8B  69                 	db	105	;'i'
   401  00FF8C  6D                 	db	109	;'m'
   402  00FF8D  65                 	db	101	;'e'
   403  00FF8E  00                 	db	0
   404  00FF8F  70                 	db	112	;'p'
   405  00FF90  72                 	db	114	;'r'
   406  00FF91  69                 	db	105	;'i'
   407  00FF92  6E                 	db	110	;'n'
   408  00FF93  74                 	db	116	;'t'
   409  00FF94  5F                 	db	95	;'_'
   410  00FF95  74                 	db	116	;'t'
   411  00FF96  69                 	db	105	;'i'
   412  00FF97  6D                 	db	109	;'m'
   413  00FF98  65                 	db	101	;'e'
   414  00FF99  00                 	db	0
   415  00FF9A                     STR_41:
   416  00FF9A  31                 	db	49	;'1'
   417  00FF9B  38                 	db	56	;'8'
   418  00FF9C  46                 	db	70	;'F'
   419  00FF9D  32                 	db	50	;'2'
   420  00FF9E  37                 	db	55	;'7'
   421  00FF9F  4A                 	db	74	;'J'
   422  00FFA0  35                 	db	53	;'5'
   423  00FFA1  33                 	db	51	;'3'
   424  00FFA2  00                 	db	0
   425  00FFA3                     STR_15:
   426  00FFA3  20                 	db	32
   427  00FFA4  20                 	db	32
   428  00FFA5  20                 	db	32
   429  00FFA6  20                 	db	32
   430  00FFA7  20                 	db	32
   431  00FFA8  20                 	db	32
   432  00FFA9  20                 	db	32
   433  00FFAA  20                 	db	32
   434  00FFAB  00                 	db	0
   435  00FFAC                     STR_42:
   436  00FFAC  49                 	db	73	;'I'
   437  00FFAD  32                 	db	50	;'2'
   438  00FFAE  43                 	db	67	;'C'
   439  00FFAF  5F                 	db	95	;'_'
   440  00FFB0  6E                 	db	110	;'n'
   441  00FFB1  65                 	db	101	;'e'
   442  00FFB2  77                 	db	119	;'w'
   443  00FFB3  00                 	db	0
   444  00FFB4  09                 	db	9
   445  00FFB5  65                 	db	101	;'e'
   446  00FFB6  72                 	db	114	;'r'
   447  00FFB7  72                 	db	114	;'r'
   448  00FFB8  6F                 	db	111	;'o'
   449  00FFB9  72                 	db	114	;'r'
   450  00FFBA  0A                 	db	10
   451  00FFBB  00                 	db	0
   452  00FFBC                     STR_43:
   453  00FFBC  28                 	db	40
   454  00FFBD  6E                 	db	110	;'n'
   455  00FFBE  75                 	db	117	;'u'
   456  00FFBF  6C                 	db	108	;'l'
   457  00FFC0  6C                 	db	108	;'l'
   458  00FFC1  29                 	db	41
   459  00FFC2  00                 	db	0
   460  00FFC3  73                 	db	115	;'s'
   461  00FFC4  65                 	db	101	;'e'
   462  00FFC5  63                 	db	99	;'c'
   463  00FFC6  6F                 	db	111	;'o'
   464  00FFC7  6E                 	db	110	;'n'
   465  00FFC8  64                 	db	100	;'d'
   466  00FFC9  00                 	db	0
   467  00FFCA  6D                 	db	109	;'m'
   468  00FFCB  69                 	db	105	;'i'
   469  00FFCC  6E                 	db	110	;'n'
   470  00FFCD  75                 	db	117	;'u'
   471  00FFCE  74                 	db	116	;'t'
   472  00FFCF  65                 	db	101	;'e'
   473  00FFD0  00                 	db	0
   474  00FFD1                     STR_32:
   475  00FFD1  6D                 	db	109	;'m'
   476  00FFD2  6F                 	db	111	;'o'
   477  00FFD3  6E                 	db	110	;'n'
   478  00FFD4  74                 	db	116	;'t'
   479  00FFD5  68                 	db	104	;'h'
   480  00FFD6  00                 	db	0
   481  00FFD7  79                 	db	121	;'y'
   482  00FFD8  65                 	db	101	;'e'
   483  00FFD9  61                 	db	97	;'a'
   484  00FFDA  72                 	db	114	;'r'
   485  00FFDB  00                 	db	0
   486  00FFDC  68                 	db	104	;'h'
   487  00FFDD  6F                 	db	111	;'o'
   488  00FFDE  75                 	db	117	;'u'
   489  00FFDF  72                 	db	114	;'r'
   490  00FFE0  00                 	db	0
   491  00FFE1                     STR_1:
   492  00FFE1  25                 	db	37
   493  00FFE2  30                 	db	48	;'0'
   494  00FFE3  32                 	db	50	;'2'
   495  00FFE4  64                 	db	100	;'d'
   496  00FFE5  00                 	db	0
   497  00FFE6                     STR_19:
   498  00FFE6  08                 	db	8
   499  00FFE7  20                 	db	32
   500  00FFE8  08                 	db	8
   501  00FFE9  00                 	db	0
   502  00FFEA                     STR_34:
   503  00FFEA  64                 	db	100	;'d'
   504  00FFEB  61                 	db	97	;'a'
   505  00FFEC  79                 	db	121	;'y'
   506  00FFED  00                 	db	0
   507  00FFEE                     STR_27:
   508  00FFEE  61                 	db	97	;'a'
   509  00FFEF  74                 	db	116	;'t'
   510  00FFF0  00                 	db	0
   511  00FFF1  4D                 	db	77	;'M'
   512  00FFF2  00                 	db	0
   513  00FFF3  6D                 	db	109	;'m'
   514  00FFF4  00                 	db	0
   515  00FFF5  73                 	db	115	;'s'
   516  00FFF6  00                 	db	0
   517  00FFF7  28                 	db	40
   518  00FFF8  00                 	db	0
   519  00FFF9                     STR_9:
   520  00FFF9  2D                 	db	45
   521  00FFFA  00                 	db	0
   522  00FFFB                     STR_4:
   523  00FFFB  2F                 	db	47
   524  00FFFC  00                 	db	0
   525  00FFFD                     STR_7:
   526  00FFFD  3A                 	db	58	;':'
   527  00FFFE  00                 	db	0
   528  0000                     
   529                           ; #config settings
   530  00FFFF  00                 	db	0	; dummy byte at the end
   531  0000                     
   532                           	psect	cinit
   533  010420                     __pcinit:
   534                           	opt stack 0
   535  010420                     start_initialization:
   536                           	opt stack 0
   537  010420                     __initialization:
   538                           	opt stack 0
   539                           
   540                           ; Clear objects allocated to BIGRAMl (1300 bytes)
   541  010420  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
   542  010424  EE15 F014          	lfsr	1,1300
   543  010428                     clear_0:
   544  010428  6AEE               	clrf	postinc0,c
   545  01042A  50E5               	movf	postdec1,w,c
   546  01042C  50E1               	movf	fsr1l,w,c
   547  01042E  E1FC               	bnz	clear_0
   548  010430  50E2               	movf	fsr1h,w,c
   549  010432  E1FA               	bnz	clear_0
   550                           
   551                           ; Clear objects allocated to BANK4 (200 bytes)
   552  010434  EE04  F000         	lfsr	0,__pbssBANK4
   553  010438  0EC8               	movlw	200
   554  01043A                     clear_1:
   555  01043A  6AEE               	clrf	postinc0,c
   556  01043C  06E8               	decf	wreg,f,c
   557  01043E  E1FD               	bnz	clear_1
   558                           
   559                           ; Clear objects allocated to BANK3 (100 bytes)
   560  010440  EE03  F000         	lfsr	0,__pbssBANK3
   561  010444  0E64               	movlw	100
   562  010446                     clear_2:
   563  010446  6AEE               	clrf	postinc0,c
   564  010448  06E8               	decf	wreg,f,c
   565  01044A  E1FD               	bnz	clear_2
   566                           
   567                           ; Clear objects allocated to BANK2 (228 bytes)
   568  01044C  EE02  F000         	lfsr	0,__pbssBANK2
   569  010450  0EE4               	movlw	228
   570  010452                     clear_3:
   571  010452  6AEE               	clrf	postinc0,c
   572  010454  06E8               	decf	wreg,f,c
   573  010456  E1FD               	bnz	clear_3
   574                           
   575                           ; Clear objects allocated to BANK1 (203 bytes)
   576  010458  EE01  F000         	lfsr	0,__pbssBANK1
   577  01045C  0ECB               	movlw	203
   578  01045E                     clear_4:
   579  01045E  6AEE               	clrf	postinc0,c
   580  010460  06E8               	decf	wreg,f,c
   581  010462  E1FD               	bnz	clear_4
   582                           
   583                           ; Clear objects allocated to BANK0 (150 bytes)
   584  010464  EE00  F060         	lfsr	0,__pbssBANK0
   585  010468  0E96               	movlw	150
   586  01046A                     clear_5:
   587  01046A  6AEE               	clrf	postinc0,c
   588  01046C  06E8               	decf	wreg,f,c
   589  01046E  E1FD               	bnz	clear_5
   590                           
   591                           ; Clear objects allocated to COMRAM (57 bytes)
   592  010470  EE00  F001         	lfsr	0,__pbssCOMRAM
   593  010474  0E39               	movlw	57
   594  010476                     clear_6:
   595  010476  6AEE               	clrf	postinc0,c
   596  010478  06E8               	decf	wreg,f,c
   597  01047A  E1FD               	bnz	clear_6
   598                           
   599                           ; Initialize objects allocated to BANK0 (5 bytes)
   600                           ; load TBLPTR registers with __pidataBANK0
   601  01047C  0E84               	movlw	low __pidataBANK0
   602  01047E  6EF6               	movwf	tblptrl,c
   603  010480  0E07               	movlw	high __pidataBANK0
   604  010482  6EF7               	movwf	tblptrh,c
   605  010484  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   606  010486  6EF8               	movwf	tblptru,c
   607  010488  EE00  F0F6         	lfsr	0,__pdataBANK0
   608  01048C  EE10 F005          	lfsr	1,5
   609  010490                     copy_data0:
   610  010490  0009               	tblrd		*+
   611  010492  CFF5 FFEE          	movff	tablat,postinc0
   612  010496  50E5               	movf	postdec1,w,c
   613  010498  50E1               	movf	fsr1l,w,c
   614  01049A  E1FA               	bnz	copy_data0
   615  01049C                     end_of_initialization:
   616                           	opt stack 0
   617  01049C                     __end_of__initialization:
   618                           	opt stack 0
   619  01049C  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   620  01049E  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   621  0104A0  0100               	movlb	0
   622  0104A2  EF53  F082         	goto	_main	;jump to C main() function
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           postdec1	equ	0xFE5
   630                           fsr1h	equ	0xFE2
   631                           fsr1l	equ	0xFE1
   632                           
   633                           	psect	bssCOMRAM
   634  000001                     __pbssCOMRAM:
   635                           	opt stack 0
   636  000001                     _outPipes:
   637                           	opt stack 0
   638  000001                     	ds	9
   639  00000A                     _inPipes:
   640                           	opt stack 0
   641  00000A                     	ds	6
   642  000010                     _pBDTEntryIn:
   643                           	opt stack 0
   644  000010                     	ds	6
   645  000016                     _CDCDataOutHandle:
   646                           	opt stack 0
   647  000016                     	ds	2
   648  000018                     _pBDTEntryEP0OutCurrent:
   649                           	opt stack 0
   650  000018                     	ds	2
   651  00001A                     _pBDTEntryEP0OutNext:
   652                           	opt stack 0
   653  00001A                     	ds	2
   654  00001C                     RTCC_task@prev_halfsec:
   655                           	opt stack 0
   656  00001C                     	ds	1
   657  00001D                     ST7032_task@st7032_state:
   658                           	opt stack 0
   659  00001D                     	ds	1
   660  00001E                     _BothEP0OutUOWNsSet:
   661                           	opt stack 0
   662  00001E                     	ds	1
   663  00001F                     _I2C_sent_flag:
   664                           	opt stack 0
   665  00001F                     	ds	1
   666  000020                     _RemoteWakeup:
   667                           	opt stack 0
   668  000020                     	ds	1
   669  000021                     _USBDeferINDataStagePackets:
   670                           	opt stack 0
   671  000021                     	ds	1
   672  000022                     _USBDeferOUTDataStagePackets:
   673                           	opt stack 0
   674  000022                     	ds	1
   675  000023                     _USBDeferStatusStagePacket:
   676                           	opt stack 0
   677  000023                     	ds	1
   678  000024                     _USBDeviceState:
   679                           	opt stack 0
   680  000024                     	ds	1
   681  000025                     _USBStatusStageEnabledFlag1:
   682                           	opt stack 0
   683  000025                     	ds	1
   684  000026                     _USBStatusStageEnabledFlag2:
   685                           	opt stack 0
   686  000026                     	ds	1
   687  000027                     _USBStatusStageTimeoutCounter:
   688                           	opt stack 0
   689  000027                     	ds	1
   690  000028                     _cdc_mem_type:
   691                           	opt stack 0
   692  000028                     	ds	1
   693  000029                     _cdc_rx_len:
   694                           	opt stack 0
   695  000029                     	ds	1
   696  00002A                     _cdc_trf_state:
   697                           	opt stack 0
   698  00002A                     	ds	1
   699  00002B                     _cdc_tx_len:
   700                           	opt stack 0
   701  00002B                     	ds	1
   702  00002C                     _controlTransferState:
   703                           	opt stack 0
   704  00002C                     	ds	1
   705  00002D                     _endpoint_number:
   706                           	opt stack 0
   707  00002D                     	ds	1
   708  00002E                     _one_second_flag:
   709                           	opt stack 0
   710  00002E                     	ds	1
   711  00002F                     _shortPacketStatus:
   712                           	opt stack 0
   713  00002F                     	ds	1
   714  000030                     _lcd_tx:
   715                           	opt stack 0
   716  000030                     	ds	8
   717  000038                     _USBActiveConfiguration:
   718                           	opt stack 0
   719  000038                     	ds	1
   720  000039                     _USTATcopy:
   721                           	opt stack 0
   722  000039                     	ds	1
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           postdec1	equ	0xFE5
   730                           fsr1h	equ	0xFE2
   731                           fsr1l	equ	0xFE1
   732                           
   733                           	psect	bssBANK0
   734  000060                     __pbssBANK0:
   735                           	opt stack 0
   736  000060                     _cdc_notice:
   737                           	opt stack 0
   738  000060                     	ds	10
   739  00006A                     _pBDTEntryOut:
   740                           	opt stack 0
   741  00006A                     	ds	6
   742  000070                     _BaudRateGen:
   743                           	opt stack 0
   744  000070                     	ds	4
   745  000074                     _ms:
   746                           	opt stack 0
   747  000074                     	ds	4
   748  000078                     _ep_data_in:
   749                           	opt stack 0
   750  000078                     	ds	3
   751  00007B                     _ep_data_out:
   752                           	opt stack 0
   753  00007B                     	ds	3
   754  00007E                     _pCDCDst:
   755                           	opt stack 0
   756  00007E                     	ds	3
   757  000081                     _pCDCSrc:
   758                           	opt stack 0
   759  000081                     	ds	3
   760  000084                     ST7032_task@wait:
   761                           	opt stack 0
   762  000084                     	ds	2
   763  000086                     _CDCDataInHandle:
   764                           	opt stack 0
   765  000086                     	ds	2
   766  000088                     _pDst:
   767                           	opt stack 0
   768  000088                     	ds	2
   769  00008A                     epoch_to_caltime@day_cache:
   770                           	opt stack 0
   771  00008A                     	ds	2
   772  00008C                     millis_timer@cnt:
   773                           	opt stack 0
   774  00008C                     	ds	2
   775  00008E                     _I2C_busy:
   776                           	opt stack 0
   777  00008E                     	ds	1
   778  00008F                     _I2C_cfct_flag:
   779                           	opt stack 0
   780  00008F                     	ds	1
   781  000090                     _USBBusIsSuspended:
   782                           	opt stack 0
   783  000090                     	ds	1
   784  000091                     _control_signal_bitmap:
   785                           	opt stack 0
   786  000091                     	ds	1
   787  000092                     _st7032_state:
   788                           	opt stack 0
   789  000092                     	ds	1
   790  000093                     _time_change_flag:
   791                           	opt stack 0
   792  000093                     	ds	1
   793  000094                     epoch_to_caltime@year_cache:
   794                           	opt stack 0
   795  000094                     	ds	1
   796  000095                     terminal_task@command_init:
   797                           	opt stack 0
   798  000095                     	ds	1
   799  000096                     terminal_task@op0:
   800                           	opt stack 0
   801  000096                     	ds	25
   802  0000AF                     _now:
   803                           	opt stack 0
   804  0000AF                     	ds	14
   805  0000BD                     _dummy_encapsulated_cmd_response:
   806                           	opt stack 0
   807  0000BD                     	ds	8
   808  0000C5                     _uart_rx:
   809                           	opt stack 0
   810  0000C5                     	ds	8
   811  0000CD                     _uart_tx:
   812                           	opt stack 0
   813  0000CD                     	ds	8
   814  0000D5                     _usb_rx:
   815                           	opt stack 0
   816  0000D5                     	ds	8
   817  0000DD                     _usb_tx:
   818                           	opt stack 0
   819  0000DD                     	ds	8
   820  0000E5                     terminal_task@command:
   821                           	opt stack 0
   822  0000E5                     	ds	8
   823  0000ED                     _line_coding:
   824                           	opt stack 0
   825  0000ED                     	ds	7
   826  0000F4                     _USBAlternateInterface:
   827                           	opt stack 0
   828  0000F4                     	ds	2
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           postinc0	equ	0xFEE
   834                           wreg	equ	0xFE8
   835                           postdec1	equ	0xFE5
   836                           fsr1h	equ	0xFE2
   837                           fsr1l	equ	0xFE1
   838                           
   839                           	psect	dataBANK0
   840  0000F6                     __pdataBANK0:
   841                           	opt stack 0
   842  0000F6                     I2C_LCD_SetCursor@F8685:
   843                           	opt stack 0
   844  0000F6                     	ds	2
   845  0000F8                     ST7032_cursor@F8640:
   846                           	opt stack 0
   847  0000F8                     	ds	2
   848  0000FA                     epoch_to_caltime@month_cache:
   849                           	opt stack 0
   850  0000FA                     	ds	1
   851                           tblptru	equ	0xFF8
   852                           tblptrh	equ	0xFF7
   853                           tblptrl	equ	0xFF6
   854                           tablat	equ	0xFF5
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           postdec1	equ	0xFE5
   858                           fsr1h	equ	0xFE2
   859                           fsr1l	equ	0xFE1
   860                           
   861                           	psect	bssBANK1
   862  000100                     __pbssBANK1:
   863                           	opt stack 0
   864  000100                     _cdc_data_rx:
   865                           	opt stack 0
   866  000100                     	ds	64
   867  000140                     _cdc_data_tx:
   868                           	opt stack 0
   869  000140                     	ds	64
   870  000180                     terminal_task@op1:
   871                           	opt stack 0
   872  000180                     	ds	25
   873  000199                     terminal_task@op2:
   874                           	opt stack 0
   875  000199                     	ds	25
   876  0001B2                     terminal_task@op3:
   877                           	opt stack 0
   878  0001B2                     	ds	25
   879                           tblptru	equ	0xFF8
   880                           tblptrh	equ	0xFF7
   881                           tblptrl	equ	0xFF6
   882                           tablat	equ	0xFF5
   883                           postinc0	equ	0xFEE
   884                           wreg	equ	0xFE8
   885                           postdec1	equ	0xFE5
   886                           fsr1h	equ	0xFE2
   887                           fsr1l	equ	0xFE1
   888                           
   889                           	psect	bssBANK2
   890  000200                     __pbssBANK2:
   891                           	opt stack 0
   892  000200                     UART_buffer_init@uartrx:
   893                           	opt stack 0
   894  000200                     	ds	100
   895  000264                     _readBuffer:
   896                           	opt stack 0
   897  000264                     	ds	64
   898  0002A4                     _writeBuffer:
   899                           	opt stack 0
   900  0002A4                     	ds	64
   901                           tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           postinc0	equ	0xFEE
   906                           wreg	equ	0xFE8
   907                           postdec1	equ	0xFE5
   908                           fsr1h	equ	0xFE2
   909                           fsr1l	equ	0xFE1
   910                           
   911                           	psect	bssBANK3
   912  000300                     __pbssBANK3:
   913                           	opt stack 0
   914  000300                     USB_CDC_buffer_init@rxbuf:
   915                           	opt stack 0
   916  000300                     	ds	100
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           postinc0	equ	0xFEE
   922                           wreg	equ	0xFE8
   923                           postdec1	equ	0xFE5
   924                           fsr1h	equ	0xFE2
   925                           fsr1l	equ	0xFE1
   926                           
   927                           	psect	bssBANK4
   928  000400                     __pbssBANK4:
   929                           	opt stack 0
   930  000400                     ST7032_init@buf:
   931                           	opt stack 0
   932  000400                     	ds	200
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           postinc0	equ	0xFEE
   938                           wreg	equ	0xFE8
   939                           postdec1	equ	0xFE5
   940                           fsr1h	equ	0xFE2
   941                           fsr1l	equ	0xFE1
   942                           
   943                           	psect	bssBIGRAMl
   944  0004C8                     __pbssBIGRAMl:
   945                           	opt stack 0
   946  0004C8                     USB_CDC_buffer_init@txbuf:
   947                           	opt stack 0
   948  0004C8                     	ds	800
   949  0007E8                     UART_buffer_init@uarttx:
   950                           	opt stack 0
   951  0007E8                     	ds	500
   952                           tblptru	equ	0xFF8
   953                           tblptrh	equ	0xFF7
   954                           tblptrl	equ	0xFF6
   955                           tablat	equ	0xFF5
   956                           postinc0	equ	0xFEE
   957                           wreg	equ	0xFE8
   958                           postdec1	equ	0xFE5
   959                           fsr1h	equ	0xFE2
   960                           fsr1l	equ	0xFE1
   961                           
   962                           	psect	cstackBANK1
   963  0001CB                     __pcstackBANK1:
   964                           	opt stack 0
   965  0001CB                     ??_ringbuf_num:
   966                           
   967                           ; 0 bytes @ 0x0
   968  0001CB                     	ds	6
   969  0001D1                     ST7032_cursor@row_offsets:
   970                           	opt stack 0
   971  0001D1                     ST7032_puts@s:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x6
   975  0001D1                     	ds	2
   976  0001D3                     ST7032_cursor@col:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x8
   980  0001D3                     	ds	1
   981  0001D4                     ??_main:
   982                           
   983                           ; 0 bytes @ 0x9
   984  0001D4                     	ds	1
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           postdec1	equ	0xFE5
   992                           fsr1h	equ	0xFE2
   993                           fsr1l	equ	0xFE1
   994                           
   995                           	psect	cstackBANK0
   996  0000FB                     __pcstackBANK0:
   997                           	opt stack 0
   998  0000FB                     ??_ringbuf_put:
   999  0000FB                     ??_ringbuf_pop:
  1000                           
  1001                           ; 0 bytes @ 0x0
  1002  0000FB                     	ds	4
  1003  0000FF                     ST7032_cursor@row:
  1004                           	opt stack 0
  1005  0000FF                     ST7032_task@data:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0x4
  1009  0000FF                     	ds	1
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           postinc0	equ	0xFEE
  1015                           wreg	equ	0xFE8
  1016                           postdec1	equ	0xFE5
  1017                           fsr1h	equ	0xFE2
  1018                           fsr1l	equ	0xFE1
  1019                           
  1020                           	psect	cstackCOMRAM
  1021  00003A                     __pcstackCOMRAM:
  1022                           	opt stack 0
  1023  00003A                     ??_ISR:
  1024  00003A                     
  1025                           ; 2 bytes @ 0x0
  1026  00003A                     	ds	15
  1027  000049                     ??_I2C_idle_check:
  1028  000049                     ??_timer0_init:
  1029  000049                     ?_ringbuf_num:
  1030                           	opt stack 0
  1031  000049                     I2C_send@data:
  1032                           	opt stack 0
  1033  000049                     timer1_init@clock_select:
  1034                           	opt stack 0
  1035  000049                     ringbuf_init@rb:
  1036                           	opt stack 0
  1037  000049                     ringbuf_num@rb:
  1038                           	opt stack 0
  1039                           
  1040                           ; 2 bytes @ 0xF
  1041  000049                     	ds	1
  1042  00004A                     ??_timer1_init:
  1043  00004A                     I2C_idle_check@mask:
  1044                           	opt stack 0
  1045  00004A                     timer0_init@prescaler:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x10
  1049  00004A                     	ds	1
  1050  00004B                     timer1_init@prescaler:
  1051                           	opt stack 0
  1052  00004B                     ringbuf_init@internal_buf:
  1053                           	opt stack 0
  1054  00004B                     ringbuf_put@rb:
  1055                           	opt stack 0
  1056  00004B                     ringbuf_pop@rb:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x11
  1060  00004B                     	ds	2
  1061  00004D                     ringbuf_put@data:
  1062                           	opt stack 0
  1063  00004D                     ringbuf_pop@ret:
  1064                           	opt stack 0
  1065  00004D                     ringbuf_init@bufsize:
  1066                           	opt stack 0
  1067                           
  1068                           ; 2 bytes @ 0x13
  1069  00004D                     	ds	1
  1070  00004E                     ??_ST7032_task:
  1071  00004E                     ST7032_command@wait:
  1072                           	opt stack 0
  1073  00004E                     ST7032_put@c:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0x14
  1077  00004E                     	ds	1
  1078  00004F                     ST7032_command@command:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0x15
  1082  00004F                     	ds	1
  1083  000050                     tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           postdec1	equ	0xFE5
  1090                           fsr1h	equ	0xFE2
  1091                           fsr1l	equ	0xFE1
  1092                           
  1093                           ; 0 bytes @ 0x16
  1094 ;;
  1095 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1096 ;;
  1097 ;; *************** function _main *****************
  1098 ;; Defined at:
  1099 ;;		line 57 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  2  1463[None  ] int 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1116 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1117 ;;Total ram usage:        1 bytes
  1118 ;; Hardware stack levels required when called:    8
  1119 ;; This function calls:
  1120 ;;		_ST7032_clear
  1121 ;;		_ST7032_cursor
  1122 ;;		_ST7032_puts
  1123 ;;		_ST7032_task
  1124 ;;		_main_init
  1125 ;; This function is called by:
  1126 ;;		Startup code after reset
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text0
  1131  0104A6                     __ptext0:
  1132                           	opt stack 0
  1133  0104A6                     _main:
  1134                           	opt stack 23
  1135                           
  1136                           ;main.c: 58: main_init();
  1137                           
  1138                           ;incstack = 0
  1139  0104A6  EC43  F083         	call	_main_init	;wreg free
  1140                           
  1141                           ;main.c: 59: INTCONbits.GIE = 1;
  1142  0104AA  8EF2               	bsf	intcon,7,c	;volatile
  1143  0104AC                     l1464:
  1144                           
  1145                           ;main.c: 62: ST7032_task();
  1146  0104AC  EC00  F080         	call	_ST7032_task	;wreg free
  1147                           
  1148                           ;main.c: 64: LATAbits.LATA1 = !LATAbits.LATA1;
  1149  0104B0  B289               	btfsc	3977,1,c	;volatile
  1150  0104B2  D004               	goto	u7190
  1151  0104B4  0101               	movlb	1	; () banked
  1152  0104B6  6BD4               	clrf	??_main& (0+255),b
  1153  0104B8  2BD4               	incf	??_main& (0+255),f,b
  1154  0104BA  D002               	goto	u7208
  1155  0104BC                     u7190:
  1156  0104BC  0101               	movlb	1	; () banked
  1157  0104BE  6BD4               	clrf	??_main& (0+255),b
  1158  0104C0                     u7208:
  1159  0104C0  0101               	movlb	1	; () banked
  1160  0104C2  47D4               	rlncf	??_main& (0+255),f,b
  1161  0104C4  5089               	movf	3977,w,c	;volatile
  1162  0104C6  0101               	movlb	1	; () banked
  1163  0104C8  19D4               	xorwf	??_main& (0+255),w,b
  1164  0104CA  0BFD               	andlw	-3
  1165  0104CC  19D4               	xorwf	??_main& (0+255),w,b
  1166  0104CE  6E89               	movwf	3977,c	;volatile
  1167                           
  1168                           ; BSR set to: 1
  1169                           ;main.c: 66: if (one_second_flag) {
  1170  0104D0  502E               	movf	_one_second_flag,w,c
  1171  0104D2  B4D8               	btfsc	status,2,c
  1172  0104D4  D7EB               	goto	l1464
  1173                           
  1174                           ; BSR set to: 1
  1175                           ;main.c: 67: one_second_flag = 0;
  1176  0104D6  0E00               	movlw	0
  1177  0104D8  6E2E               	movwf	_one_second_flag,c
  1178                           
  1179                           ; BSR set to: 1
  1180                           ;main.c: 68: ST7032_clear();
  1181  0104DA  ECB8  F083         	call	_ST7032_clear	;wreg free
  1182                           
  1183                           ;main.c: 69: ST7032_cursor(0, 0);
  1184  0104DE  0E00               	movlw	0
  1185  0104E0  0100               	movlb	0	; () banked
  1186  0104E2  6FFF               	movwf	ST7032_cursor@row& (0+255),b
  1187  0104E4  0E00               	movlw	0
  1188  0104E6  EC74  F083         	call	_ST7032_cursor
  1189                           
  1190                           ;main.c: 70: ST7032_puts("18F27J53");
  1191  0104EA  0E9A               	movlw	low STR_41
  1192  0104EC  0101               	movlb	1	; () banked
  1193  0104EE  6FD1               	movwf	ST7032_puts@s& (0+255),b
  1194  0104F0  0EFF               	movlw	high STR_41
  1195  0104F2  0101               	movlb	1	; () banked
  1196  0104F4  6FD2               	movwf	(ST7032_puts@s+1)& (0+255),b
  1197  0104F6  EC29  F083         	call	_ST7032_puts	;wreg free
  1198                           
  1199                           ;main.c: 71: ST7032_cursor(0, 1);
  1200  0104FA  0E01               	movlw	1
  1201  0104FC  0100               	movlb	0	; () banked
  1202  0104FE  6FFF               	movwf	ST7032_cursor@row& (0+255),b
  1203  010500  0E00               	movlw	0
  1204  010502  EC74  F083         	call	_ST7032_cursor
  1205                           
  1206                           ;main.c: 72: ST7032_puts("I2C_new");
  1207  010506  0EAC               	movlw	low STR_42
  1208  010508  0101               	movlb	1	; () banked
  1209  01050A  6FD1               	movwf	ST7032_puts@s& (0+255),b
  1210  01050C  0EFF               	movlw	high STR_42
  1211  01050E  0101               	movlb	1	; () banked
  1212  010510  6FD2               	movwf	(ST7032_puts@s+1)& (0+255),b
  1213  010512  EC29  F083         	call	_ST7032_puts	;wreg free
  1214  010516  D7CA               	goto	l1464
  1215  010518                     __end_of_main:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           intcon	equ	0xFF2
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1h	equ	0xFE2
  1226                           fsr1l	equ	0xFE1
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function _main_init *****************
  1230 ;; Defined at:
  1231 ;;		line 43 in file "main.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;		None               void
  1238 ;; Registers used:
  1239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    7
  1252 ;; This function calls:
  1253 ;;		_OSC_init
  1254 ;;		_ST7032_init
  1255 ;;		_timer0_init
  1256 ;;		_timer1_init
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text1
  1263  010686                     __ptext1:
  1264                           	opt stack 0
  1265  010686                     _main_init:
  1266                           	opt stack 23
  1267                           
  1268                           ;main.c: 44: OSC_init();
  1269                           
  1270                           ;incstack = 0
  1271  010686  ECB1  F083         	call	_OSC_init	;wreg free
  1272                           
  1273                           ;main.c: 45: TRISA = 0b00010000;
  1274  01068A  0E10               	movlw	16
  1275  01068C  6E92               	movwf	3986,c	;volatile
  1276                           
  1277                           ;main.c: 46: TRISB = 0b00110001;
  1278  01068E  0E31               	movlw	49
  1279  010690  6E93               	movwf	3987,c	;volatile
  1280                           
  1281                           ;main.c: 47: TRISC = 0b10111010;
  1282  010692  0EBA               	movlw	186
  1283  010694  6E94               	movwf	3988,c	;volatile
  1284                           
  1285                           ;main.c: 48: ANCON0 = 0b11111111;
  1286  010696  010F               	movlb	15	; () banked
  1287  010698  6948               	setf	72,b	;volatile
  1288                           
  1289                           ; BSR set to: 15
  1290                           ;main.c: 49: ANCON1 = 0b00011111;
  1291  01069A  0E1F               	movlw	31
  1292  01069C  010F               	movlb	15	; () banked
  1293  01069E  6F49               	movwf	73,b	;volatile
  1294                           
  1295                           ; BSR set to: 15
  1296                           ;main.c: 50: INTCON2bits.RBPU = 0;
  1297  0106A0  9EF1               	bcf	intcon2,7,c	;volatile
  1298                           
  1299                           ; BSR set to: 15
  1300                           ;main.c: 52: timer0_init(6);
  1301  0106A2  0E06               	movlw	6
  1302  0106A4  EC5C  F083         	call	_timer0_init
  1303                           
  1304                           ;main.c: 53: timer1_init(0, 2);
  1305  0106A8  0E02               	movlw	2
  1306  0106AA  6E49               	movwf	timer1_init@clock_select,c
  1307  0106AC  0E00               	movlw	0
  1308  0106AE  EC07  F083         	call	_timer1_init
  1309                           
  1310                           ;main.c: 54: ST7032_init();
  1311  0106B2  ECC0  F081         	call	_ST7032_init	;wreg free
  1312  0106B6  0012               	return		;funcret
  1313  0106B8                     __end_of_main_init:
  1314                           	opt stack 0
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           intcon	equ	0xFF2
  1320                           intcon2	equ	0xFF1
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec1	equ	0xFE5
  1324                           fsr1h	equ	0xFE2
  1325                           fsr1l	equ	0xFE1
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _timer1_init *****************
  1329 ;; Defined at:
  1330 ;;		line 70 in file "../My_library/My_PIC.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  prescaler       1    wreg     unsigned char 
  1333 ;;  clock_select    1   15[COMRAM] unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  prescaler       1   17[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;		None               void
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1348 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1349 ;;Total ram usage:        3 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    2
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_main_init
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text2
  1360  01060E                     __ptext2:
  1361                           	opt stack 0
  1362  01060E                     _timer1_init:
  1363                           	opt stack 27
  1364                           
  1365                           ;incstack = 0
  1366                           ;timer1_init@prescaler stored from wreg
  1367  01060E  6E4B               	movwf	timer1_init@prescaler,c
  1368                           
  1369                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  1370  010610  C049  F04A         	movff	timer1_init@clock_select,??_timer1_init
  1371  010614  3A4A               	swapf	??_timer1_init,f,c
  1372  010616  464A               	rlncf	??_timer1_init,f,c
  1373  010618  464A               	rlncf	??_timer1_init,f,c
  1374  01061A  50CD               	movf	4045,w,c	;volatile
  1375  01061C  184A               	xorwf	??_timer1_init,w,c
  1376  01061E  0B3F               	andlw	-193
  1377  010620  184A               	xorwf	??_timer1_init,w,c
  1378  010622  6ECD               	movwf	4045,c	;volatile
  1379                           
  1380                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  1381  010624  0E02               	movlw	2
  1382  010626  1849               	xorwf	timer1_init@clock_select,w,c
  1383  010628  A4D8               	btfss	status,2,c
  1384  01062A  D002               	goto	l710
  1385  01062C  86CD               	bsf	4045,3,c	;volatile
  1386  01062E  D001               	goto	l5569
  1387  010630                     l710:
  1388                           
  1389                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  1390  010630  96CD               	bcf	4045,3,c	;volatile
  1391  010632                     l5569:
  1392                           
  1393                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  1394  010632  C04B  F04A         	movff	timer1_init@prescaler,??_timer1_init
  1395  010636  3A4A               	swapf	??_timer1_init,f,c
  1396  010638  50CD               	movf	4045,w,c	;volatile
  1397  01063A  184A               	xorwf	??_timer1_init,w,c
  1398  01063C  0BCF               	andlw	-49
  1399  01063E  184A               	xorwf	??_timer1_init,w,c
  1400  010640  6ECD               	movwf	4045,c	;volatile
  1401                           
  1402                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  1403  010642  84CD               	bsf	4045,2,c	;volatile
  1404                           
  1405                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  1406  010644  92CD               	bcf	4045,1,c	;volatile
  1407                           
  1408                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  1409  010646  80CD               	bsf	4045,0,c	;volatile
  1410                           
  1411                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  1412  010648  909F               	bcf	3999,0,c	;volatile
  1413                           
  1414                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  1415  01064A  909E               	bcf	3998,0,c	;volatile
  1416                           
  1417                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  1418  01064C  809D               	bsf	3997,0,c	;volatile
  1419                           
  1420                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  1421  01064E  8CF2               	bsf	intcon,6,c	;volatile
  1422  010650  0012               	return		;funcret
  1423  010652                     __end_of_timer1_init:
  1424                           	opt stack 0
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           intcon	equ	0xFF2
  1430                           intcon2	equ	0xFF1
  1431                           postinc0	equ	0xFEE
  1432                           wreg	equ	0xFE8
  1433                           postdec1	equ	0xFE5
  1434                           fsr1h	equ	0xFE2
  1435                           fsr1l	equ	0xFE1
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _timer0_init *****************
  1439 ;; Defined at:
  1440 ;;		line 34 in file "../My_library/My_PIC.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  prescaler       1    wreg     unsigned char 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  prescaler       1   16[COMRAM] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;		None               void
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1458 ;;Total ram usage:        2 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    2
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_main_init
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text3
  1469  0106B8                     __ptext3:
  1470                           	opt stack 0
  1471  0106B8                     _timer0_init:
  1472                           	opt stack 27
  1473                           
  1474                           ;incstack = 0
  1475                           ;timer0_init@prescaler stored from wreg
  1476  0106B8  6E4A               	movwf	timer0_init@prescaler,c
  1477                           
  1478                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  1479  0106BA  8ED5               	bsf	4053,7,c	;volatile
  1480                           
  1481                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  1482  0106BC  8CD5               	bsf	4053,6,c	;volatile
  1483                           
  1484                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  1485  0106BE  9AD5               	bcf	4053,5,c	;volatile
  1486                           
  1487                           ;My_PIC.c: 38: if (prescaler == 0) {
  1488  0106C0  504A               	movf	timer0_init@prescaler,w,c
  1489  0106C2  A4D8               	btfss	status,2,c
  1490  0106C4  D002               	goto	l705
  1491                           
  1492                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  1493  0106C6  86D5               	bsf	4053,3,c	;volatile
  1494                           
  1495                           ;My_PIC.c: 40: } else {
  1496  0106C8  D00A               	goto	l3179
  1497  0106CA                     l705:
  1498                           
  1499                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  1500  0106CA  96D5               	bcf	4053,3,c	;volatile
  1501                           
  1502                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  1503  0106CC  C04A  F049         	movff	timer0_init@prescaler,??_timer0_init
  1504  0106D0  0EFF               	movlw	255
  1505  0106D2  2649               	addwf	??_timer0_init,f,c
  1506  0106D4  50D5               	movf	4053,w,c	;volatile
  1507  0106D6  1849               	xorwf	??_timer0_init,w,c
  1508  0106D8  0BF8               	andlw	-8
  1509  0106DA  1849               	xorwf	??_timer0_init,w,c
  1510  0106DC  6ED5               	movwf	4053,c	;volatile
  1511  0106DE                     l3179:
  1512                           
  1513                           ;My_PIC.c: 43: }
  1514                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  1515  0106DE  8AF2               	bsf	intcon,5,c	;volatile
  1516                           
  1517                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  1518  0106E0  94F2               	bcf	intcon,2,c	;volatile
  1519                           
  1520                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  1521  0106E2  94F1               	bcf	intcon2,2,c	;volatile
  1522                           
  1523                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  1524  0106E4  8CF2               	bsf	intcon,6,c	;volatile
  1525  0106E6  0012               	return		;funcret
  1526  0106E8                     __end_of_timer0_init:
  1527                           	opt stack 0
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           intcon	equ	0xFF2
  1533                           intcon2	equ	0xFF1
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           postdec1	equ	0xFE5
  1537                           fsr1h	equ	0xFE2
  1538                           fsr1l	equ	0xFE1
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _ST7032_init *****************
  1542 ;; Defined at:
  1543 ;;		line 58 in file "../My_library/My_ST7032.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;		None               void
  1550 ;; Registers used:
  1551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    6
  1564 ;; This function calls:
  1565 ;;		_I2C_init_new
  1566 ;;		_ST7032_clear
  1567 ;;		_ST7032_command
  1568 ;;		_ringbuf_init
  1569 ;;		_ringbuf_put
  1570 ;; This function is called by:
  1571 ;;		_main_init
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text4
  1576  010380                     __ptext4:
  1577                           	opt stack 0
  1578  010380                     _ST7032_init:
  1579                           	opt stack 23
  1580                           
  1581                           ;My_ST7032.c: 59: I2C_init_new();
  1582                           
  1583                           ;incstack = 0
  1584  010380  EC9B  F083         	call	_I2C_init_new	;wreg free
  1585                           
  1586                           ;My_ST7032.c: 61: static char buf[200];
  1587                           ;My_ST7032.c: 62: ringbuf_init(&lcd_tx, buf, sizeof (buf));
  1588  010384  0E30               	movlw	low _lcd_tx
  1589  010386  6E49               	movwf	ringbuf_init@rb,c
  1590  010388  0E00               	movlw	high _lcd_tx
  1591  01038A  6E4A               	movwf	ringbuf_init@rb+1,c
  1592  01038C  0E00               	movlw	low ST7032_init@buf
  1593  01038E  6E4B               	movwf	ringbuf_init@internal_buf,c
  1594  010390  0E04               	movlw	high ST7032_init@buf
  1595  010392  6E4C               	movwf	ringbuf_init@internal_buf+1,c
  1596  010394  0E00               	movlw	0
  1597  010396  6E4E               	movwf	ringbuf_init@bufsize+1,c
  1598  010398  0EC8               	movlw	200
  1599  01039A  6E4D               	movwf	ringbuf_init@bufsize,c
  1600  01039C  ECE0  F082         	call	_ringbuf_init	;wreg free
  1601                           
  1602                           ;My_ST7032.c: 64: ringbuf_put(&lcd_tx, 0);
  1603  0103A0  0E30               	movlw	low _lcd_tx
  1604  0103A2  6E4B               	movwf	ringbuf_put@rb,c
  1605  0103A4  0E00               	movlw	high _lcd_tx
  1606  0103A6  6E4C               	movwf	ringbuf_put@rb+1,c
  1607  0103A8  0E00               	movlw	0
  1608  0103AA  6E4D               	movwf	ringbuf_put@data,c
  1609  0103AC  EC01  F081         	call	_ringbuf_put	;wreg free
  1610                           
  1611                           ;My_ST7032.c: 65: ringbuf_put(&lcd_tx, 3);
  1612  0103B0  0E30               	movlw	low _lcd_tx
  1613  0103B2  6E4B               	movwf	ringbuf_put@rb,c
  1614  0103B4  0E00               	movlw	high _lcd_tx
  1615  0103B6  6E4C               	movwf	ringbuf_put@rb+1,c
  1616  0103B8  0E03               	movlw	3
  1617  0103BA  6E4D               	movwf	ringbuf_put@data,c
  1618  0103BC  EC01  F081         	call	_ringbuf_put	;wreg free
  1619                           
  1620                           ;My_ST7032.c: 67: ST7032_command(0x38, 1);
  1621  0103C0  0E01               	movlw	1
  1622  0103C2  6E4E               	movwf	ST7032_command@wait,c
  1623  0103C4  0E38               	movlw	56
  1624  0103C6  ECB6  F082         	call	_ST7032_command
  1625                           
  1626                           ;My_ST7032.c: 68: ST7032_command(0x39, 1);
  1627  0103CA  0E01               	movlw	1
  1628  0103CC  6E4E               	movwf	ST7032_command@wait,c
  1629  0103CE  0E39               	movlw	57
  1630  0103D0  ECB6  F082         	call	_ST7032_command
  1631                           
  1632                           ;My_ST7032.c: 69: ST7032_command(0x14, 1);
  1633  0103D4  0E01               	movlw	1
  1634  0103D6  6E4E               	movwf	ST7032_command@wait,c
  1635  0103D8  0E14               	movlw	20
  1636  0103DA  ECB6  F082         	call	_ST7032_command
  1637                           
  1638                           ;My_ST7032.c: 70: ST7032_command(0x70, 1);
  1639  0103DE  0E01               	movlw	1
  1640  0103E0  6E4E               	movwf	ST7032_command@wait,c
  1641  0103E2  0E70               	movlw	112
  1642  0103E4  ECB6  F082         	call	_ST7032_command
  1643                           
  1644                           ;My_ST7032.c: 71: ST7032_command(0x56, 1);
  1645  0103E8  0E01               	movlw	1
  1646  0103EA  6E4E               	movwf	ST7032_command@wait,c
  1647  0103EC  0E56               	movlw	86
  1648  0103EE  ECB6  F082         	call	_ST7032_command
  1649                           
  1650                           ;My_ST7032.c: 72: ST7032_command(0x6C, 3);
  1651  0103F2  0E03               	movlw	3
  1652  0103F4  6E4E               	movwf	ST7032_command@wait,c
  1653  0103F6  0E6C               	movlw	108
  1654  0103F8  ECB6  F082         	call	_ST7032_command
  1655                           
  1656                           ;My_ST7032.c: 73: ST7032_command(0x38, 1);
  1657  0103FC  0E01               	movlw	1
  1658  0103FE  6E4E               	movwf	ST7032_command@wait,c
  1659  010400  0E38               	movlw	56
  1660  010402  ECB6  F082         	call	_ST7032_command
  1661                           
  1662                           ;My_ST7032.c: 74: ST7032_command(0x0C, 1);
  1663  010406  0E01               	movlw	1
  1664  010408  6E4E               	movwf	ST7032_command@wait,c
  1665  01040A  0E0C               	movlw	12
  1666  01040C  ECB6  F082         	call	_ST7032_command
  1667                           
  1668                           ;My_ST7032.c: 75: ST7032_command(0x06, 1);
  1669  010410  0E01               	movlw	1
  1670  010412  6E4E               	movwf	ST7032_command@wait,c
  1671  010414  0E06               	movlw	6
  1672  010416  ECB6  F082         	call	_ST7032_command
  1673                           
  1674                           ;My_ST7032.c: 76: ST7032_clear();
  1675  01041A  ECB8  F083         	call	_ST7032_clear	;wreg free
  1676  01041E  0012               	return		;funcret
  1677  010420                     __end_of_ST7032_init:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           intcon	equ	0xFF2
  1684                           intcon2	equ	0xFF1
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           postdec1	equ	0xFE5
  1688                           fsr1h	equ	0xFE2
  1689                           fsr1l	equ	0xFE1
  1690                           status	equ	0xFD8
  1691                           
  1692 ;; *************** function _ringbuf_init *****************
  1693 ;; Defined at:
  1694 ;;		line 5 in file "../My_library/My_ringbuf.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  rb              2   15[COMRAM] PTR struct ringbuf
  1697 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
  1698 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  1699 ;;  internal_buf    2   17[COMRAM] PTR unsigned char 
  1700 ;;		 -> USB_CDC_buffer_init@rxbuf(100), USB_CDC_buffer_init@txbuf(800), UART_buffer_init@uartrx(100), UART_buffer_init@u
      +arttx(500), 
  1701 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  1702 ;;  bufsize         2   19[COMRAM] unsigned int 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;		None               void
  1707 ;; Registers used:
  1708 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1714 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;Total ram usage:        6 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    2
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_ST7032_init
  1725 ;;		_terminal_task
  1726 ;;		_UART_buffer_init
  1727 ;;		_USB_CDC_buffer_init
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text5
  1732  0105C0                     __ptext5:
  1733                           	opt stack 0
  1734  0105C0                     _ringbuf_init:
  1735                           	opt stack 26
  1736                           
  1737                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  1738                           
  1739                           ;incstack = 0
  1740  0105C0  C049  FFD9         	movff	ringbuf_init@rb,fsr2l
  1741  0105C4  C04A  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1742  0105C8  C04B  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1743  0105CC  C04C  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1744                           
  1745                           ;My_ringbuf.c: 7: rb->size = bufsize;
  1746  0105D0  EE20 F002          	lfsr	2,2
  1747  0105D4  5049               	movf	ringbuf_init@rb,w,c
  1748  0105D6  26D9               	addwf	fsr2l,f,c
  1749  0105D8  504A               	movf	ringbuf_init@rb+1,w,c
  1750  0105DA  22DA               	addwfc	fsr2h,f,c
  1751  0105DC  C04D  FFDE         	movff	ringbuf_init@bufsize,postinc2
  1752  0105E0  C04E  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  1753                           
  1754                           ;My_ringbuf.c: 8: rb->head = 0;
  1755  0105E4  EE20 F004          	lfsr	2,4
  1756  0105E8  5049               	movf	ringbuf_init@rb,w,c
  1757  0105EA  26D9               	addwf	fsr2l,f,c
  1758  0105EC  504A               	movf	ringbuf_init@rb+1,w,c
  1759  0105EE  22DA               	addwfc	fsr2h,f,c
  1760  0105F0  0E00               	movlw	0
  1761  0105F2  6EDE               	movwf	postinc2,c
  1762  0105F4  0E00               	movlw	0
  1763  0105F6  6EDD               	movwf	postdec2,c
  1764                           
  1765                           ;My_ringbuf.c: 9: rb->tail = 0;
  1766  0105F8  EE20 F006          	lfsr	2,6
  1767  0105FC  5049               	movf	ringbuf_init@rb,w,c
  1768  0105FE  26D9               	addwf	fsr2l,f,c
  1769  010600  504A               	movf	ringbuf_init@rb+1,w,c
  1770  010602  22DA               	addwfc	fsr2h,f,c
  1771  010604  0E00               	movlw	0
  1772  010606  6EDE               	movwf	postinc2,c
  1773  010608  0E00               	movlw	0
  1774  01060A  6EDD               	movwf	postdec2,c
  1775  01060C  0012               	return		;funcret
  1776  01060E                     __end_of_ringbuf_init:
  1777                           	opt stack 0
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           intcon	equ	0xFF2
  1783                           intcon2	equ	0xFF1
  1784                           postinc0	equ	0xFEE
  1785                           wreg	equ	0xFE8
  1786                           postdec1	equ	0xFE5
  1787                           fsr1h	equ	0xFE2
  1788                           fsr1l	equ	0xFE1
  1789                           postinc2	equ	0xFDE
  1790                           postdec2	equ	0xFDD
  1791                           fsr2h	equ	0xFDA
  1792                           fsr2l	equ	0xFD9
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _ST7032_clear *****************
  1796 ;; Defined at:
  1797 ;;		line 22 in file "../My_library/My_ST7032.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;		None               void
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    5
  1818 ;; This function calls:
  1819 ;;		_ST7032_command
  1820 ;; This function is called by:
  1821 ;;		_ST7032_init
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text6
  1827  010770                     __ptext6:
  1828                           	opt stack 0
  1829  010770                     _ST7032_clear:
  1830                           	opt stack 23
  1831                           
  1832                           ;My_ST7032.c: 23: ST7032_command(0x01, 2);
  1833                           
  1834                           ;incstack = 0
  1835  010770  0E02               	movlw	2
  1836  010772  6E4E               	movwf	ST7032_command@wait,c
  1837  010774  0E01               	movlw	1
  1838  010776  ECB6  F082         	call	_ST7032_command
  1839  01077A  0012               	return		;funcret
  1840  01077C                     __end_of_ST7032_clear:
  1841                           	opt stack 0
  1842                           tblptru	equ	0xFF8
  1843                           tblptrh	equ	0xFF7
  1844                           tblptrl	equ	0xFF6
  1845                           tablat	equ	0xFF5
  1846                           intcon	equ	0xFF2
  1847                           intcon2	equ	0xFF1
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           postdec1	equ	0xFE5
  1851                           fsr1h	equ	0xFE2
  1852                           fsr1l	equ	0xFE1
  1853                           postinc2	equ	0xFDE
  1854                           postdec2	equ	0xFDD
  1855                           fsr2h	equ	0xFDA
  1856                           fsr2l	equ	0xFD9
  1857                           status	equ	0xFD8
  1858                           
  1859 ;; *************** function _I2C_init_new *****************
  1860 ;; Defined at:
  1861 ;;		line 31 in file "../My_library/My_I2C.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;		None               void
  1868 ;; Registers used:
  1869 ;;		wreg, status,2
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1879 ;;Total ram usage:        0 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    2
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_ST7032_init
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text7
  1890  010736                     __ptext7:
  1891                           	opt stack 0
  1892  010736                     _I2C_init_new:
  1893                           	opt stack 26
  1894                           
  1895                           ;My_I2C.c: 32: SSP1STAT = 0b10000000;
  1896                           
  1897                           ;incstack = 0
  1898  010736  0E80               	movlw	128
  1899  010738  6EC7               	movwf	4039,c	;volatile
  1900                           
  1901                           ;My_I2C.c: 33: SSP1CON1 = 0b00101000;
  1902  01073A  0E28               	movlw	40
  1903  01073C  6EC6               	movwf	4038,c	;volatile
  1904                           
  1905                           ;My_I2C.c: 34: SSP1ADD = 0x13;
  1906  01073E  0E13               	movlw	19
  1907  010740  6EC8               	movwf	4040,c	;volatile
  1908                           
  1909                           ;My_I2C.c: 35: PIE1bits.SSP1IE = 1;
  1910  010742  869D               	bsf	3997,3,c	;volatile
  1911                           
  1912                           ;My_I2C.c: 36: IPR1bits.SSP1IP = 0;
  1913  010744  969F               	bcf	3999,3,c	;volatile
  1914                           
  1915                           ;My_I2C.c: 37: PIR1bits.SSP1IF = 0;
  1916  010746  969E               	bcf	3998,3,c	;volatile
  1917                           
  1918                           ;My_I2C.c: 38: PIE2bits.BCL1IE = 1;
  1919  010748  86A0               	bsf	4000,3,c	;volatile
  1920                           
  1921                           ;My_I2C.c: 39: IPR2bits.BCL1IP = 0;
  1922  01074A  96A2               	bcf	4002,3,c	;volatile
  1923                           
  1924                           ;My_I2C.c: 40: PIR2bits.BCL1IF = 0;
  1925  01074C  96A1               	bcf	4001,3,c	;volatile
  1926                           
  1927                           ;My_I2C.c: 41: INTCONbits.PEIE = 1;
  1928  01074E  8CF2               	bsf	intcon,6,c	;volatile
  1929  010750  0012               	return		;funcret
  1930  010752                     __end_of_I2C_init_new:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           intcon	equ	0xFF2
  1937                           intcon2	equ	0xFF1
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1h	equ	0xFE2
  1942                           fsr1l	equ	0xFE1
  1943                           postinc2	equ	0xFDE
  1944                           postdec2	equ	0xFDD
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _OSC_init *****************
  1950 ;; Defined at:
  1951 ;;		line 8 in file "../My_library/My_PIC.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		wreg, status,2
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    2
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_main_init
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text8
  1980  010762                     __ptext8:
  1981                           	opt stack 0
  1982  010762                     _OSC_init:
  1983                           	opt stack 27
  1984                           
  1985                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  1986                           
  1987                           ;incstack = 0
  1988  010762  88D3               	bsf	4051,4,c	;volatile
  1989  010764  8AD3               	bsf	4051,5,c	;volatile
  1990  010766  8CD3               	bsf	4051,6,c	;volatile
  1991                           
  1992                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  1993  010768  8C9B               	bsf	3995,6,c	;volatile
  1994                           
  1995                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  1996  01076A  0EFC               	movlw	-4
  1997  01076C  16D3               	andwf	4051,f,c	;volatile
  1998  01076E  0012               	return		;funcret
  1999  010770                     __end_of_OSC_init:
  2000                           	opt stack 0
  2001                           tblptru	equ	0xFF8
  2002                           tblptrh	equ	0xFF7
  2003                           tblptrl	equ	0xFF6
  2004                           tablat	equ	0xFF5
  2005                           intcon	equ	0xFF2
  2006                           intcon2	equ	0xFF1
  2007                           postinc0	equ	0xFEE
  2008                           wreg	equ	0xFE8
  2009                           postdec1	equ	0xFE5
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           postinc2	equ	0xFDE
  2013                           postdec2	equ	0xFDD
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _ST7032_task *****************
  2019 ;; Defined at:
  2020 ;;		line 79 in file "../My_library/My_ST7032.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  data            1    4[BANK0 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;		None               void
  2027 ;; Registers used:
  2028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2037 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2038 ;;Total ram usage:        3 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    4
  2041 ;; This function calls:
  2042 ;;		_I2C_idle_check
  2043 ;;		_I2C_send
  2044 ;;		_I2C_start
  2045 ;;		_I2C_stop
  2046 ;;		_ringbuf_num
  2047 ;;		_ringbuf_pop
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text9
  2054  010000                     __ptext9:
  2055                           	opt stack 0
  2056  010000                     _ST7032_task:
  2057                           	opt stack 26
  2058                           
  2059                           ;My_ST7032.c: 80: if (I2C_idle_check(0x05)) return;
  2060                           
  2061                           ;incstack = 0
  2062  010000  0E05               	movlw	5
  2063  010002  ECA9  F083         	call	_I2C_idle_check
  2064  010006  0900               	iorlw	0
  2065  010008  A4D8               	btfss	status,2,c
  2066  01000A  0012               	return	
  2067  01000C  D07D               	goto	l7375
  2068  01000E                     l7323:
  2069                           
  2070                           ;My_ST7032.c: 87: if (ringbuf_num(&lcd_tx)) {
  2071  01000E  0E30               	movlw	low _lcd_tx
  2072  010010  6E49               	movwf	ringbuf_num@rb,c
  2073  010012  0E00               	movlw	high _lcd_tx
  2074  010014  6E4A               	movwf	ringbuf_num@rb+1,c
  2075  010016  EC95  F080         	call	_ringbuf_num	;wreg free
  2076  01001A  5049               	movf	?_ringbuf_num,w,c
  2077  01001C  104A               	iorwf	?_ringbuf_num+1,w,c
  2078  01001E  B4D8               	btfsc	status,2,c
  2079  010020  0012               	return	
  2080                           
  2081                           ;My_ST7032.c: 88: st7032_state = ST7032_START;
  2082  010022  0E01               	movlw	1
  2083  010024  6E1D               	movwf	ST7032_task@st7032_state,c
  2084                           
  2085                           ;My_ST7032.c: 89: }
  2086                           ;My_ST7032.c: 90: break;
  2087  010026  0012               	return	
  2088  010028                     l7327:
  2089                           
  2090                           ;My_ST7032.c: 92: I2C_sent_flag = 1;
  2091  010028  0E01               	movlw	1
  2092  01002A  6E1F               	movwf	_I2C_sent_flag,c
  2093                           
  2094                           ;My_ST7032.c: 93: I2C_start();
  2095  01002C  ECC7  F083         	call	_I2C_start	;wreg free
  2096                           
  2097                           ;My_ST7032.c: 94: st7032_state = ST7032_SEND;
  2098  010030  0E02               	movlw	2
  2099  010032  6E1D               	movwf	ST7032_task@st7032_state,c
  2100                           
  2101                           ;My_ST7032.c: 95: break;
  2102  010034  0012               	return	
  2103  010036                     l7333:
  2104                           
  2105                           ;My_ST7032.c: 97: if (!I2C_sent_flag) return;
  2106  010036  501F               	movf	_I2C_sent_flag,w,c
  2107  010038  B4D8               	btfsc	status,2,c
  2108  01003A  0012               	return	
  2109                           
  2110                           ;My_ST7032.c: 98: uint8_t data = ringbuf_pop(&lcd_tx);
  2111  01003C  0E30               	movlw	low _lcd_tx
  2112  01003E  6E4B               	movwf	ringbuf_pop@rb,c
  2113  010040  0E00               	movlw	high _lcd_tx
  2114  010042  6E4C               	movwf	ringbuf_pop@rb+1,c
  2115  010044  EC63  F081         	call	_ringbuf_pop	;wreg free
  2116  010048  0100               	movlb	0	; () banked
  2117  01004A  6FFF               	movwf	ST7032_task@data& (0+255),b
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;My_ST7032.c: 99: if (data != 0) {
  2121  01004C  0100               	movlb	0	; () banked
  2122  01004E  51FF               	movf	ST7032_task@data& (0+255),w,b
  2123  010050  0100               	movlb	0	; () banked
  2124  010052  B4D8               	btfsc	status,2,c
  2125  010054  D007               	goto	l7345
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;My_ST7032.c: 100: I2C_sent_flag = 0;
  2129  010056  0E00               	movlw	0
  2130  010058  6E1F               	movwf	_I2C_sent_flag,c
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;My_ST7032.c: 101: I2C_send(data);
  2134  01005A  0100               	movlb	0	; () banked
  2135  01005C  51FF               	movf	ST7032_task@data& (0+255),w,b
  2136  01005E  ECBE  F083         	call	_I2C_send
  2137                           
  2138                           ;My_ST7032.c: 102: } else {
  2139  010062  0012               	return	
  2140  010064                     l7345:
  2141                           
  2142                           ;My_ST7032.c: 103: wait = ringbuf_pop(&lcd_tx);
  2143  010064  0E30               	movlw	low _lcd_tx
  2144  010066  6E4B               	movwf	ringbuf_pop@rb,c
  2145  010068  0E00               	movlw	high _lcd_tx
  2146  01006A  6E4C               	movwf	ringbuf_pop@rb+1,c
  2147  01006C  EC63  F081         	call	_ringbuf_pop	;wreg free
  2148  010070  6E4E               	movwf	??_ST7032_task& (0+255),c
  2149  010072  504E               	movf	??_ST7032_task,w,c
  2150  010074  0100               	movlb	0	; () banked
  2151  010076  6F84               	movwf	ST7032_task@wait& (0+255),b
  2152  010078  6B85               	clrf	(ST7032_task@wait+1)& (0+255),b
  2153                           
  2154                           ;My_ST7032.c: 104: switch (wait) {
  2155  01007A  D01A               	goto	l7359
  2156  01007C                     l7347:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;My_ST7032.c: 106: wait = 0;
  2160  01007C  0E00               	movlw	0
  2161  01007E  0100               	movlb	0	; () banked
  2162  010080  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2163  010082  0E00               	movlw	0
  2164  010084  D013               	goto	L4
  2165  010086                     l7349:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;My_ST7032.c: 109: wait = 2;
  2169  010086  0E00               	movlw	0
  2170  010088  0100               	movlb	0	; () banked
  2171  01008A  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2172  01008C  0E02               	movlw	2
  2173  01008E  D00E               	goto	L4
  2174  010090                     l7351:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;My_ST7032.c: 112: wait = 25;
  2178  010090  0E00               	movlw	0
  2179  010092  0100               	movlb	0	; () banked
  2180  010094  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2181  010096  0E19               	movlw	25
  2182  010098  D009               	goto	L4
  2183  01009A                     l7353:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;My_ST7032.c: 115: wait = 800;
  2187  01009A  0E03               	movlw	3
  2188  01009C  0100               	movlb	0	; () banked
  2189  01009E  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2190  0100A0  0E20               	movlw	32
  2191  0100A2  D004               	goto	L4
  2192  0100A4                     l7355:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;My_ST7032.c: 118: wait = 1;
  2196  0100A4  0E00               	movlw	0
  2197  0100A6  0100               	movlb	0	; () banked
  2198  0100A8  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2199  0100AA  0E01               	movlw	1
  2200  0100AC                     L4:
  2201  0100AC  6F84               	movwf	ST7032_task@wait& (0+255),b
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;My_ST7032.c: 120: }
  2205                           
  2206                           ;My_ST7032.c: 119: break;
  2207  0100AE  D016               	goto	l7361
  2208  0100B0                     l7359:
  2209                           
  2210                           ; BSR set to: 0
  2211  0100B0  C084  F04E         	movff	ST7032_task@wait,??_ST7032_task
  2212  0100B4  C085  F04F         	movff	ST7032_task@wait+1,??_ST7032_task+1
  2213                           
  2214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2215                           ; Switch size 1, requested type "space"
  2216                           ; Number of cases is 1, Range of values is 0 to 0
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte            4     3 (average)
  2220                           ;	Chosen strategy is simple_byte
  2221  0100B8  504F               	movf	??_ST7032_task+1,w,c
  2222  0100BA  0A00               	xorlw	0	; case 0
  2223  0100BC  A4D8               	btfss	status,2,c
  2224  0100BE  D7F2               	goto	l7355
  2225                           
  2226                           ; BSR set to: 0
  2227                           ; Switch size 1, requested type "space"
  2228                           ; Number of cases is 4, Range of values is 0 to 3
  2229                           ; switch strategies available:
  2230                           ; Name         Instructions Cycles
  2231                           ; simple_byte           13     7 (average)
  2232                           ;	Chosen strategy is simple_byte
  2233  0100C0  504E               	movf	??_ST7032_task,w,c
  2234  0100C2  0A00               	xorlw	0	; case 0
  2235  0100C4  B4D8               	btfsc	status,2,c
  2236  0100C6  D7DA               	goto	l7347
  2237  0100C8  0A01               	xorlw	1	; case 1
  2238  0100CA  B4D8               	btfsc	status,2,c
  2239  0100CC  D7DC               	goto	l7349
  2240  0100CE  0A03               	xorlw	3	; case 2
  2241  0100D0  B4D8               	btfsc	status,2,c
  2242  0100D2  D7DE               	goto	l7351
  2243  0100D4  0A01               	xorlw	1	; case 3
  2244  0100D6  B4D8               	btfsc	status,2,c
  2245  0100D8  D7E0               	goto	l7353
  2246  0100DA  D7E4               	goto	l7355
  2247  0100DC                     l7361:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;My_ST7032.c: 121: st7032_state = ST7032_STOP;
  2251  0100DC  0E03               	movlw	3
  2252  0100DE  6E1D               	movwf	ST7032_task@st7032_state,c
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;My_ST7032.c: 122: }
  2256                           ;My_ST7032.c: 123: break;
  2257  0100E0  0012               	return	
  2258  0100E2                     l7363:
  2259                           
  2260                           ;My_ST7032.c: 125: I2C_stop();
  2261  0100E2  ECC5  F083         	call	_I2C_stop	;wreg free
  2262                           
  2263                           ;My_ST7032.c: 126: st7032_state = ST7032_WAIT;
  2264  0100E6  0E04               	movlw	4
  2265  0100E8  6E1D               	movwf	ST7032_task@st7032_state,c
  2266                           
  2267                           ;My_ST7032.c: 127: break;
  2268  0100EA  0012               	return	
  2269  0100EC                     l7367:
  2270                           
  2271                           ;My_ST7032.c: 129: if (wait == 0) st7032_state = ST7032_IDLE;
  2272  0100EC  0100               	movlb	0	; () banked
  2273  0100EE  5184               	movf	ST7032_task@wait& (0+255),w,b
  2274  0100F0  0100               	movlb	0	; () banked
  2275  0100F2  1185               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
  2276  0100F4  A4D8               	btfss	status,2,c
  2277  0100F6  D003               	goto	l7371
  2278                           
  2279                           ; BSR set to: 0
  2280  0100F8  0E00               	movlw	0
  2281  0100FA  6E1D               	movwf	ST7032_task@st7032_state,c
  2282  0100FC  0012               	return	
  2283  0100FE                     l7371:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;My_ST7032.c: 130: else wait--;
  2287  0100FE  0100               	movlb	0	; () banked
  2288  010100  0784               	decf	ST7032_task@wait& (0+255),f,b
  2289  010102  A0D8               	btfss	status,0,c
  2290  010104  0785               	decf	(ST7032_task@wait+1)& (0+255),f,b
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;My_ST7032.c: 132: }
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;My_ST7032.c: 131: break;
  2297  010106  0012               	return	
  2298  010108                     l7375:
  2299  010108  501D               	movf	ST7032_task@st7032_state,w,c
  2300                           
  2301                           ; Switch size 1, requested type "space"
  2302                           ; Number of cases is 5, Range of values is 0 to 4
  2303                           ; switch strategies available:
  2304                           ; Name         Instructions Cycles
  2305                           ; simple_byte           16     9 (average)
  2306                           ;	Chosen strategy is simple_byte
  2307  01010A  0A00               	xorlw	0	; case 0
  2308  01010C  B4D8               	btfsc	status,2,c
  2309  01010E  D77F               	goto	l7323
  2310  010110  0A01               	xorlw	1	; case 1
  2311  010112  B4D8               	btfsc	status,2,c
  2312  010114  D789               	goto	l7327
  2313  010116  0A03               	xorlw	3	; case 2
  2314  010118  B4D8               	btfsc	status,2,c
  2315  01011A  D78D               	goto	l7333
  2316  01011C  0A01               	xorlw	1	; case 3
  2317  01011E  B4D8               	btfsc	status,2,c
  2318  010120  D7E0               	goto	l7363
  2319  010122  0A07               	xorlw	7	; case 4
  2320  010124  A4D8               	btfss	status,2,c
  2321  010126  0012               	return	
  2322  010128  D7E1               	goto	l7367
  2323  01012A                     __end_of_ST7032_task:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           intcon	equ	0xFF2
  2330                           intcon2	equ	0xFF1
  2331                           postinc0	equ	0xFEE
  2332                           wreg	equ	0xFE8
  2333                           postdec1	equ	0xFE5
  2334                           fsr1h	equ	0xFE2
  2335                           fsr1l	equ	0xFE1
  2336                           postinc2	equ	0xFDE
  2337                           postdec2	equ	0xFDD
  2338                           fsr2h	equ	0xFDA
  2339                           fsr2l	equ	0xFD9
  2340                           status	equ	0xFD8
  2341                           
  2342 ;; *************** function _ringbuf_pop *****************
  2343 ;; Defined at:
  2344 ;;		line 45 in file "../My_library/My_ringbuf.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  rb              2   17[COMRAM] PTR struct ringbuf
  2347 ;;		 -> usb_tx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  ret             1   19[COMRAM] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      unsigned char 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2361 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2362 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2363 ;;Total ram usage:        7 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    3
  2366 ;; This function calls:
  2367 ;;		_ringbuf_num
  2368 ;; This function is called by:
  2369 ;;		_ST7032_task
  2370 ;;		_terminal_task
  2371 ;;		_UART_ISR
  2372 ;;		_USB_CDC_task
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text10
  2377  0102C6                     __ptext10:
  2378                           	opt stack 0
  2379  0102C6                     _ringbuf_pop:
  2380                           	opt stack 26
  2381                           
  2382                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  2383                           
  2384                           ;incstack = 0
  2385  0102C6  C04B  F049         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2386  0102CA  C04C  F04A         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2387  0102CE  EC95  F080         	call	_ringbuf_num	;wreg free
  2388  0102D2  5049               	movf	?_ringbuf_num,w,c
  2389  0102D4  104A               	iorwf	?_ringbuf_num+1,w,c
  2390  0102D6  B4D8               	btfsc	status,2,c
  2391  0102D8  D051               	goto	l7245
  2392                           
  2393                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  2394  0102DA  EE20 F006          	lfsr	2,6
  2395  0102DE  504B               	movf	ringbuf_pop@rb,w,c
  2396  0102E0  26D9               	addwf	fsr2l,f,c
  2397  0102E2  504C               	movf	ringbuf_pop@rb+1,w,c
  2398  0102E4  22DA               	addwfc	fsr2h,f,c
  2399  0102E6  CFDE F0FB          	movff	postinc2,??_ringbuf_pop
  2400  0102EA  CFDD F0FC          	movff	postdec2,??_ringbuf_pop+1
  2401  0102EE  C04B  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2402  0102F2  C04C  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2403  0102F6  CFDE F0FD          	movff	postinc2,??_ringbuf_pop+2
  2404  0102FA  CFDD F0FE          	movff	postdec2,??_ringbuf_pop+3
  2405  0102FE  0100               	movlb	0	; () banked
  2406  010300  51FB               	movf	??_ringbuf_pop& (0+255),w,b
  2407  010302  0100               	movlb	0	; () banked
  2408  010304  25FD               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2409  010306  6ED9               	movwf	fsr2l,c
  2410  010308  0100               	movlb	0	; () banked
  2411  01030A  51FC               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2412  01030C  0100               	movlb	0	; () banked
  2413  01030E  21FE               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2414  010310  6EDA               	movwf	fsr2h,c
  2415  010312  50DF               	movf	indf2,w,c
  2416  010314  6E4D               	movwf	ringbuf_pop@ret,c
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  2420  010316  EE20 F002          	lfsr	2,2
  2421  01031A  504B               	movf	ringbuf_pop@rb,w,c
  2422  01031C  26D9               	addwf	fsr2l,f,c
  2423  01031E  504C               	movf	ringbuf_pop@rb+1,w,c
  2424  010320  22DA               	addwfc	fsr2h,f,c
  2425  010322  EE10 F006          	lfsr	1,6
  2426  010326  504B               	movf	ringbuf_pop@rb,w,c
  2427  010328  26E1               	addwf	fsr1l,f,c
  2428  01032A  504C               	movf	ringbuf_pop@rb+1,w,c
  2429  01032C  22E2               	addwfc	fsr1h,f,c
  2430  01032E  CFE6 F0FD          	movff	postinc1,??_ringbuf_pop+2
  2431  010332  CFE5 F0FE          	movff	postdec1,??_ringbuf_pop+3
  2432  010336  0E01               	movlw	1
  2433  010338  0100               	movlb	0	; () banked
  2434  01033A  27FD               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2435  01033C  0E00               	movlw	0
  2436  01033E  23FE               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2437  010340  50DE               	movf	postinc2,w,c
  2438  010342  0100               	movlb	0	; () banked
  2439  010344  5DFD               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2440  010346  50DE               	movf	postinc2,w,c
  2441  010348  0100               	movlb	0	; () banked
  2442  01034A  59FE               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2443  01034C  B0D8               	btfsc	status,0,c
  2444  01034E  D00A               	goto	l7237
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;My_ringbuf.c: 49: rb->tail++;
  2448  010350  EE20 F006          	lfsr	2,6
  2449  010354  504B               	movf	ringbuf_pop@rb,w,c
  2450  010356  26D9               	addwf	fsr2l,f,c
  2451  010358  504C               	movf	ringbuf_pop@rb+1,w,c
  2452  01035A  22DA               	addwfc	fsr2h,f,c
  2453  01035C  2ADE               	incf	postinc2,f,c
  2454  01035E  0E00               	movlw	0
  2455  010360  22DD               	addwfc	postdec2,f,c
  2456                           
  2457                           ;My_ringbuf.c: 50: } else {
  2458  010362  D00A               	goto	l7239
  2459  010364                     l7237:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;My_ringbuf.c: 51: rb->tail = 0;
  2463  010364  EE20 F006          	lfsr	2,6
  2464  010368  504B               	movf	ringbuf_pop@rb,w,c
  2465  01036A  26D9               	addwf	fsr2l,f,c
  2466  01036C  504C               	movf	ringbuf_pop@rb+1,w,c
  2467  01036E  22DA               	addwfc	fsr2h,f,c
  2468  010370  0E00               	movlw	0
  2469  010372  6EDE               	movwf	postinc2,c
  2470  010374  0E00               	movlw	0
  2471  010376  6EDD               	movwf	postdec2,c
  2472  010378                     l7239:
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;My_ringbuf.c: 52: }
  2476                           ;My_ringbuf.c: 53: return ret;
  2477  010378  504D               	movf	ringbuf_pop@ret,w,c
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;My_ringbuf.c: 54: } else {
  2481                           
  2482                           ; BSR set to: 0
  2483  01037A  0012               	return	
  2484  01037C                     l7245:
  2485                           
  2486                           ;My_ringbuf.c: 55: return 0;
  2487  01037C  0E00               	movlw	0
  2488  01037E  0012               	return	
  2489  010380                     __end_of_ringbuf_pop:
  2490                           	opt stack 0
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           intcon	equ	0xFF2
  2496                           intcon2	equ	0xFF1
  2497                           postinc0	equ	0xFEE
  2498                           wreg	equ	0xFE8
  2499                           postinc1	equ	0xFE6
  2500                           postdec1	equ	0xFE5
  2501                           fsr1h	equ	0xFE2
  2502                           fsr1l	equ	0xFE1
  2503                           indf2	equ	0xFDF
  2504                           postinc2	equ	0xFDE
  2505                           postdec2	equ	0xFDD
  2506                           fsr2h	equ	0xFDA
  2507                           fsr2l	equ	0xFD9
  2508                           status	equ	0xFD8
  2509                           
  2510 ;; *************** function _I2C_stop *****************
  2511 ;; Defined at:
  2512 ;;		line 19 in file "../My_library/My_I2C.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;		None               void
  2519 ;; Registers used:
  2520 ;;		None
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    2
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_ST7032_task
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text11
  2541  01078A                     __ptext11:
  2542                           	opt stack 0
  2543  01078A                     _I2C_stop:
  2544                           	opt stack 27
  2545                           
  2546                           ;My_I2C.c: 20: SSP1CON2bits.PEN = 1;
  2547                           
  2548                           ;incstack = 0
  2549  01078A  84C5               	bsf	4037,2,c	;volatile
  2550  01078C  0012               	return		;funcret
  2551  01078E                     __end_of_I2C_stop:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           intcon	equ	0xFF2
  2558                           intcon2	equ	0xFF1
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           postinc1	equ	0xFE6
  2562                           postdec1	equ	0xFE5
  2563                           fsr1h	equ	0xFE2
  2564                           fsr1l	equ	0xFE1
  2565                           indf2	equ	0xFDF
  2566                           postinc2	equ	0xFDE
  2567                           postdec2	equ	0xFDD
  2568                           fsr2h	equ	0xFDA
  2569                           fsr2l	equ	0xFD9
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _I2C_start *****************
  2573 ;; Defined at:
  2574 ;;		line 11 in file "../My_library/My_I2C.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;		None               void
  2581 ;; Registers used:
  2582 ;;		None
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    2
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_ST7032_task
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text12
  2603  01078E                     __ptext12:
  2604                           	opt stack 0
  2605  01078E                     _I2C_start:
  2606                           	opt stack 27
  2607                           
  2608                           ;My_I2C.c: 12: SSP1CON2bits.SEN = 1;
  2609                           
  2610                           ;incstack = 0
  2611  01078E  80C5               	bsf	4037,0,c	;volatile
  2612  010790  0012               	return		;funcret
  2613  010792                     __end_of_I2C_start:
  2614                           	opt stack 0
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           intcon	equ	0xFF2
  2620                           intcon2	equ	0xFF1
  2621                           postinc0	equ	0xFEE
  2622                           wreg	equ	0xFE8
  2623                           postinc1	equ	0xFE6
  2624                           postdec1	equ	0xFE5
  2625                           fsr1h	equ	0xFE2
  2626                           fsr1l	equ	0xFE1
  2627                           indf2	equ	0xFDF
  2628                           postinc2	equ	0xFDE
  2629                           postdec2	equ	0xFDD
  2630                           fsr2h	equ	0xFDA
  2631                           fsr2l	equ	0xFD9
  2632                           status	equ	0xFD8
  2633                           
  2634 ;; *************** function _I2C_send *****************
  2635 ;; Defined at:
  2636 ;;		line 23 in file "../My_library/My_I2C.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  data            1    wreg     unsigned char 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  data            1   15[COMRAM] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;		None               void
  2643 ;; Registers used:
  2644 ;;		wreg
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2654 ;;Total ram usage:        1 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    2
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_ST7032_task
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text13
  2665  01077C                     __ptext13:
  2666                           	opt stack 0
  2667  01077C                     _I2C_send:
  2668                           	opt stack 27
  2669                           
  2670                           ;incstack = 0
  2671                           ;I2C_send@data stored from wreg
  2672  01077C  6E49               	movwf	I2C_send@data,c
  2673                           
  2674                           ;My_I2C.c: 24: SSPBUF = data;
  2675  01077E  C049  FFC9         	movff	I2C_send@data,4041	;volatile
  2676  010782  0012               	return		;funcret
  2677  010784                     __end_of_I2C_send:
  2678                           	opt stack 0
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           intcon	equ	0xFF2
  2684                           intcon2	equ	0xFF1
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postinc1	equ	0xFE6
  2688                           postdec1	equ	0xFE5
  2689                           fsr1h	equ	0xFE2
  2690                           fsr1l	equ	0xFE1
  2691                           indf2	equ	0xFDF
  2692                           postinc2	equ	0xFDE
  2693                           postdec2	equ	0xFDD
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _I2C_idle_check *****************
  2699 ;; Defined at:
  2700 ;;		line 7 in file "../My_library/My_I2C.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  mask            1    wreg     unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  mask            1   16[COMRAM] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      unsigned char 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    2
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_ST7032_task
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text14
  2729  010752                     __ptext14:
  2730                           	opt stack 0
  2731  010752                     _I2C_idle_check:
  2732                           	opt stack 27
  2733                           
  2734                           ;incstack = 0
  2735                           ;I2C_idle_check@mask stored from wreg
  2736  010752  6E4A               	movwf	I2C_idle_check@mask,c
  2737                           
  2738                           ;My_I2C.c: 8: return ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  2739  010754  50C7               	movf	4039,w,c	;volatile
  2740  010756  144A               	andwf	I2C_idle_check@mask,w,c
  2741  010758  6E49               	movwf	??_I2C_idle_check& (0+255),c
  2742  01075A  50C5               	movf	4037,w,c	;volatile
  2743  01075C  0B1F               	andlw	31
  2744  01075E  1049               	iorwf	??_I2C_idle_check,w,c
  2745  010760  0012               	return	
  2746  010762                     __end_of_I2C_idle_check:
  2747                           	opt stack 0
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           intcon	equ	0xFF2
  2753                           intcon2	equ	0xFF1
  2754                           postinc0	equ	0xFEE
  2755                           wreg	equ	0xFE8
  2756                           postinc1	equ	0xFE6
  2757                           postdec1	equ	0xFE5
  2758                           fsr1h	equ	0xFE2
  2759                           fsr1l	equ	0xFE1
  2760                           indf2	equ	0xFDF
  2761                           postinc2	equ	0xFDE
  2762                           postdec2	equ	0xFDD
  2763                           fsr2h	equ	0xFDA
  2764                           fsr2l	equ	0xFD9
  2765                           status	equ	0xFD8
  2766                           
  2767 ;; *************** function _ST7032_puts *****************
  2768 ;; Defined at:
  2769 ;;		line 39 in file "../My_library/My_ST7032.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  2772 ;;		 -> STR_42(8), STR_41(9), 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;		None               void
  2777 ;; Registers used:
  2778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2784 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2787 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2788 ;;Total ram usage:        2 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    5
  2791 ;; This function calls:
  2792 ;;		_ST7032_put
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text15
  2799  010652                     __ptext15:
  2800                           	opt stack 0
  2801  010652                     _ST7032_puts:
  2802                           	opt stack 25
  2803                           
  2804                           ;My_ST7032.c: 40: while (*s) {
  2805                           
  2806                           ;incstack = 0
  2807  010652  D00D               	goto	l7317
  2808  010654                     l7313:
  2809                           
  2810                           ;My_ST7032.c: 41: ST7032_put(*s++);
  2811  010654  C1D1  FFF6         	movff	ST7032_puts@s,tblptrl
  2812  010658  C1D2  FFF7         	movff	ST7032_puts@s+1,tblptrh
  2813  01065C                     	if	0	;tblptru may be non-zero
  2814  01065C                     	endif
  2815  01065C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2816  01065C  0E00               	movlw	low (__mediumconst shr (0+16))
  2817  01065E  6EF8               	movwf	tblptru,c
  2818  010660                     	endif
  2819  010660  0008               	tblrd		*
  2820  010662  50F5               	movf	tablat,w,c
  2821  010664  EC8C  F082         	call	_ST7032_put
  2822  010668  0101               	movlb	1	; () banked
  2823  01066A  4BD1               	infsnz	ST7032_puts@s& (0+255),f,b
  2824  01066C  2BD2               	incf	(ST7032_puts@s+1)& (0+255),f,b
  2825  01066E                     l7317:
  2826  01066E  C1D1  FFF6         	movff	ST7032_puts@s,tblptrl
  2827  010672  C1D2  FFF7         	movff	ST7032_puts@s+1,tblptrh
  2828  010676                     	if	0	;tblptru may be non-zero
  2829  010676                     	endif
  2830  010676                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2831  010676  0E00               	movlw	low (__mediumconst shr (0+16))
  2832  010678  6EF8               	movwf	tblptru,c
  2833  01067A                     	endif
  2834  01067A  0008               	tblrd		*
  2835  01067C  50F5               	movf	tablat,w,c
  2836  01067E  0900               	iorlw	0
  2837  010680  B4D8               	btfsc	status,2,c
  2838  010682  0012               	return	
  2839  010684  D7E7               	goto	l7313
  2840  010686                     __end_of_ST7032_puts:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           intcon	equ	0xFF2
  2847                           intcon2	equ	0xFF1
  2848                           postinc0	equ	0xFEE
  2849                           wreg	equ	0xFE8
  2850                           postinc1	equ	0xFE6
  2851                           postdec1	equ	0xFE5
  2852                           fsr1h	equ	0xFE2
  2853                           fsr1l	equ	0xFE1
  2854                           indf2	equ	0xFDF
  2855                           postinc2	equ	0xFDE
  2856                           postdec2	equ	0xFDD
  2857                           fsr2h	equ	0xFDA
  2858                           fsr2l	equ	0xFD9
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _ST7032_put *****************
  2862 ;; Defined at:
  2863 ;;		line 31 in file "../My_library/My_ST7032.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  c               1    wreg     unsigned char 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  c               1   20[COMRAM] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;		None               void
  2870 ;; Registers used:
  2871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;Total ram usage:        1 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    4
  2884 ;; This function calls:
  2885 ;;		_ringbuf_put
  2886 ;; This function is called by:
  2887 ;;		_ST7032_puts
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text16
  2892  010518                     __ptext16:
  2893                           	opt stack 0
  2894  010518                     _ST7032_put:
  2895                           	opt stack 25
  2896                           
  2897                           ;incstack = 0
  2898                           ;ST7032_put@c stored from wreg
  2899  010518  6E4E               	movwf	ST7032_put@c,c
  2900                           
  2901                           ;My_ST7032.c: 32: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
  2902  01051A  0E30               	movlw	low _lcd_tx
  2903  01051C  6E4B               	movwf	ringbuf_put@rb,c
  2904  01051E  0E00               	movlw	high _lcd_tx
  2905  010520  6E4C               	movwf	ringbuf_put@rb+1,c
  2906  010522  0E7C               	movlw	124
  2907  010524  6E4D               	movwf	ringbuf_put@data,c
  2908  010526  EC01  F081         	call	_ringbuf_put	;wreg free
  2909                           
  2910                           ;My_ST7032.c: 33: ringbuf_put(&lcd_tx, 0b11000000);
  2911  01052A  0E30               	movlw	low _lcd_tx
  2912  01052C  6E4B               	movwf	ringbuf_put@rb,c
  2913  01052E  0E00               	movlw	high _lcd_tx
  2914  010530  6E4C               	movwf	ringbuf_put@rb+1,c
  2915  010532  0EC0               	movlw	192
  2916  010534  6E4D               	movwf	ringbuf_put@data,c
  2917  010536  EC01  F081         	call	_ringbuf_put	;wreg free
  2918                           
  2919                           ;My_ST7032.c: 34: ringbuf_put(&lcd_tx, c);
  2920  01053A  0E30               	movlw	low _lcd_tx
  2921  01053C  6E4B               	movwf	ringbuf_put@rb,c
  2922  01053E  0E00               	movlw	high _lcd_tx
  2923  010540  6E4C               	movwf	ringbuf_put@rb+1,c
  2924  010542  C04E  F04D         	movff	ST7032_put@c,ringbuf_put@data
  2925  010546  EC01  F081         	call	_ringbuf_put	;wreg free
  2926                           
  2927                           ;My_ST7032.c: 35: ringbuf_put(&lcd_tx, 0);
  2928  01054A  0E30               	movlw	low _lcd_tx
  2929  01054C  6E4B               	movwf	ringbuf_put@rb,c
  2930  01054E  0E00               	movlw	high _lcd_tx
  2931  010550  6E4C               	movwf	ringbuf_put@rb+1,c
  2932  010552  0E00               	movlw	0
  2933  010554  6E4D               	movwf	ringbuf_put@data,c
  2934  010556  EC01  F081         	call	_ringbuf_put	;wreg free
  2935                           
  2936                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, 1);
  2937  01055A  0E30               	movlw	low _lcd_tx
  2938  01055C  6E4B               	movwf	ringbuf_put@rb,c
  2939  01055E  0E00               	movlw	high _lcd_tx
  2940  010560  6E4C               	movwf	ringbuf_put@rb+1,c
  2941  010562  0E01               	movlw	1
  2942  010564  6E4D               	movwf	ringbuf_put@data,c
  2943  010566  EC01  F081         	call	_ringbuf_put	;wreg free
  2944  01056A  0012               	return		;funcret
  2945  01056C                     __end_of_ST7032_put:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           intcon	equ	0xFF2
  2952                           intcon2	equ	0xFF1
  2953                           postinc0	equ	0xFEE
  2954                           wreg	equ	0xFE8
  2955                           postinc1	equ	0xFE6
  2956                           postdec1	equ	0xFE5
  2957                           fsr1h	equ	0xFE2
  2958                           fsr1l	equ	0xFE1
  2959                           indf2	equ	0xFDF
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _ST7032_cursor *****************
  2967 ;; Defined at:
  2968 ;;		line 26 in file "../My_library/My_ST7032.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  col             1    wreg     unsigned char 
  2971 ;;  row             1    4[BANK0 ] unsigned char 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  col             1    8[BANK1 ] unsigned char 
  2974 ;;  row_offsets     2    6[BANK1 ] unsigned char [2]
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2984 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;Total ram usage:        4 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    5
  2991 ;; This function calls:
  2992 ;;		_ST7032_command
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text17
  2999  0106E8                     __ptext17:
  3000                           	opt stack 0
  3001  0106E8                     _ST7032_cursor:
  3002                           	opt stack 25
  3003                           
  3004                           ;incstack = 0
  3005                           ;ST7032_cursor@col stored from wreg
  3006  0106E8  0101               	movlb	1	; () banked
  3007  0106EA  6FD3               	movwf	ST7032_cursor@col& (0+255),b
  3008                           
  3009                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
  3010  0106EC  C0F8  F1D1         	movff	ST7032_cursor@F8640,ST7032_cursor@row_offsets
  3011  0106F0  C0F9  F1D2         	movff	ST7032_cursor@F8640+1,ST7032_cursor@row_offsets+1
  3012                           
  3013                           ;My_ST7032.c: 28: ST7032_command(0x80 | (col + row_offsets[row]), 0);
  3014  0106F4  0E00               	movlw	0
  3015  0106F6  6E4E               	movwf	ST7032_command@wait,c
  3016  0106F8  0100               	movlb	0	; () banked
  3017  0106FA  51FF               	movf	ST7032_cursor@row& (0+255),w,b
  3018  0106FC  0D01               	mullw	1
  3019  0106FE  0ED1               	movlw	low ST7032_cursor@row_offsets
  3020  010700  24F3               	addwf	prodl,w,c
  3021  010702  6ED9               	movwf	fsr2l,c
  3022  010704  0E01               	movlw	high ST7032_cursor@row_offsets
  3023  010706  20F4               	addwfc	prodh,w,c
  3024  010708  6EDA               	movwf	fsr2h,c
  3025  01070A  50DF               	movf	indf2,w,c
  3026  01070C  0101               	movlb	1	; () banked
  3027  01070E  25D3               	addwf	ST7032_cursor@col& (0+255),w,b
  3028  010710  0980               	iorlw	128
  3029  010712  ECB6  F082         	call	_ST7032_command
  3030  010716  0012               	return		;funcret
  3031  010718                     __end_of_ST7032_cursor:
  3032                           	opt stack 0
  3033                           tblptru	equ	0xFF8
  3034                           tblptrh	equ	0xFF7
  3035                           tblptrl	equ	0xFF6
  3036                           tablat	equ	0xFF5
  3037                           prodh	equ	0xFF4
  3038                           prodl	equ	0xFF3
  3039                           intcon	equ	0xFF2
  3040                           intcon2	equ	0xFF1
  3041                           postinc0	equ	0xFEE
  3042                           wreg	equ	0xFE8
  3043                           postinc1	equ	0xFE6
  3044                           postdec1	equ	0xFE5
  3045                           fsr1h	equ	0xFE2
  3046                           fsr1l	equ	0xFE1
  3047                           indf2	equ	0xFDF
  3048                           postinc2	equ	0xFDE
  3049                           postdec2	equ	0xFDD
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function _ST7032_command *****************
  3055 ;; Defined at:
  3056 ;;		line 14 in file "../My_library/My_ST7032.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  command         1    wreg     unsigned char 
  3059 ;;  wait            1   20[COMRAM] unsigned char 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  command         1   21[COMRAM] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;		None               void
  3064 ;; Registers used:
  3065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3071 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;Total ram usage:        2 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    4
  3078 ;; This function calls:
  3079 ;;		_ringbuf_put
  3080 ;; This function is called by:
  3081 ;;		_ST7032_clear
  3082 ;;		_ST7032_cursor
  3083 ;;		_ST7032_init
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text18
  3088  01056C                     __ptext18:
  3089                           	opt stack 0
  3090  01056C                     _ST7032_command:
  3091                           	opt stack 24
  3092                           
  3093                           ;incstack = 0
  3094                           ;ST7032_command@command stored from wreg
  3095  01056C  6E4F               	movwf	ST7032_command@command,c
  3096                           
  3097                           ;My_ST7032.c: 15: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
  3098  01056E  0E30               	movlw	low _lcd_tx
  3099  010570  6E4B               	movwf	ringbuf_put@rb,c
  3100  010572  0E00               	movlw	high _lcd_tx
  3101  010574  6E4C               	movwf	ringbuf_put@rb+1,c
  3102  010576  0E7C               	movlw	124
  3103  010578  6E4D               	movwf	ringbuf_put@data,c
  3104  01057A  EC01  F081         	call	_ringbuf_put	;wreg free
  3105                           
  3106                           ;My_ST7032.c: 16: ringbuf_put(&lcd_tx, 0x80);
  3107  01057E  0E30               	movlw	low _lcd_tx
  3108  010580  6E4B               	movwf	ringbuf_put@rb,c
  3109  010582  0E00               	movlw	high _lcd_tx
  3110  010584  6E4C               	movwf	ringbuf_put@rb+1,c
  3111  010586  0E80               	movlw	128
  3112  010588  6E4D               	movwf	ringbuf_put@data,c
  3113  01058A  EC01  F081         	call	_ringbuf_put	;wreg free
  3114                           
  3115                           ;My_ST7032.c: 17: ringbuf_put(&lcd_tx, command);
  3116  01058E  0E30               	movlw	low _lcd_tx
  3117  010590  6E4B               	movwf	ringbuf_put@rb,c
  3118  010592  0E00               	movlw	high _lcd_tx
  3119  010594  6E4C               	movwf	ringbuf_put@rb+1,c
  3120  010596  C04F  F04D         	movff	ST7032_command@command,ringbuf_put@data
  3121  01059A  EC01  F081         	call	_ringbuf_put	;wreg free
  3122                           
  3123                           ;My_ST7032.c: 18: ringbuf_put(&lcd_tx, 0);
  3124  01059E  0E30               	movlw	low _lcd_tx
  3125  0105A0  6E4B               	movwf	ringbuf_put@rb,c
  3126  0105A2  0E00               	movlw	high _lcd_tx
  3127  0105A4  6E4C               	movwf	ringbuf_put@rb+1,c
  3128  0105A6  0E00               	movlw	0
  3129  0105A8  6E4D               	movwf	ringbuf_put@data,c
  3130  0105AA  EC01  F081         	call	_ringbuf_put	;wreg free
  3131                           
  3132                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, wait);
  3133  0105AE  0E30               	movlw	low _lcd_tx
  3134  0105B0  6E4B               	movwf	ringbuf_put@rb,c
  3135  0105B2  0E00               	movlw	high _lcd_tx
  3136  0105B4  6E4C               	movwf	ringbuf_put@rb+1,c
  3137  0105B6  C04E  F04D         	movff	ST7032_command@wait,ringbuf_put@data
  3138  0105BA  EC01  F081         	call	_ringbuf_put	;wreg free
  3139  0105BE  0012               	return		;funcret
  3140  0105C0                     __end_of_ST7032_command:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           intcon	equ	0xFF2
  3149                           intcon2	equ	0xFF1
  3150                           postinc0	equ	0xFEE
  3151                           wreg	equ	0xFE8
  3152                           postinc1	equ	0xFE6
  3153                           postdec1	equ	0xFE5
  3154                           fsr1h	equ	0xFE2
  3155                           fsr1l	equ	0xFE1
  3156                           indf2	equ	0xFDF
  3157                           postinc2	equ	0xFDE
  3158                           postdec2	equ	0xFDD
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           
  3163 ;; *************** function _ringbuf_put *****************
  3164 ;; Defined at:
  3165 ;;		line 20 in file "../My_library/My_ringbuf.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  rb              2   17[COMRAM] PTR struct ringbuf
  3168 ;;		 -> usb_rx(8), uart_rx(8), terminal_task@command(8), lcd_tx(8), 
  3169 ;;  data            1   19[COMRAM] unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3181 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;Total ram usage:        7 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    3
  3188 ;; This function calls:
  3189 ;;		_ringbuf_num
  3190 ;; This function is called by:
  3191 ;;		_ST7032_command
  3192 ;;		_ST7032_put
  3193 ;;		_ST7032_init
  3194 ;;		_ringbuf_put_num
  3195 ;;		_ringbuf_put_str
  3196 ;;		_ST7032_create_char
  3197 ;;		_terminal_task
  3198 ;;		_UART_ISR
  3199 ;;		_USB_CDC_task
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text19
  3204  010202                     __ptext19:
  3205                           	opt stack 0
  3206  010202                     _ringbuf_put:
  3207                           	opt stack 25
  3208                           
  3209                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  3210                           
  3211                           ;incstack = 0
  3212  010202  C04B  F049         	movff	ringbuf_put@rb,ringbuf_num@rb
  3213  010206  C04C  F04A         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  3214  01020A  EC95  F080         	call	_ringbuf_num	;wreg free
  3215  01020E  EE20 F002          	lfsr	2,2
  3216  010212  504B               	movf	ringbuf_put@rb,w,c
  3217  010214  26D9               	addwf	fsr2l,f,c
  3218  010216  504C               	movf	ringbuf_put@rb+1,w,c
  3219  010218  22DA               	addwfc	fsr2h,f,c
  3220  01021A  50DE               	movf	postinc2,w,c
  3221  01021C  5C49               	subwf	?_ringbuf_num,w,c
  3222  01021E  50DE               	movf	postinc2,w,c
  3223  010220  584A               	subwfb	?_ringbuf_num+1,w,c
  3224  010222  B0D8               	btfsc	status,0,c
  3225  010224  0012               	return	
  3226                           
  3227                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
  3228  010226  EE20 F004          	lfsr	2,4
  3229  01022A  504B               	movf	ringbuf_put@rb,w,c
  3230  01022C  26D9               	addwf	fsr2l,f,c
  3231  01022E  504C               	movf	ringbuf_put@rb+1,w,c
  3232  010230  22DA               	addwfc	fsr2h,f,c
  3233  010232  CFDE F0FB          	movff	postinc2,??_ringbuf_put
  3234  010236  CFDD F0FC          	movff	postdec2,??_ringbuf_put+1
  3235  01023A  C04B  FFD9         	movff	ringbuf_put@rb,fsr2l
  3236  01023E  C04C  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  3237  010242  CFDE F0FD          	movff	postinc2,??_ringbuf_put+2
  3238  010246  CFDD F0FE          	movff	postdec2,??_ringbuf_put+3
  3239  01024A  0100               	movlb	0	; () banked
  3240  01024C  51FB               	movf	??_ringbuf_put& (0+255),w,b
  3241  01024E  0100               	movlb	0	; () banked
  3242  010250  25FD               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  3243  010252  6ED9               	movwf	fsr2l,c
  3244  010254  0100               	movlb	0	; () banked
  3245  010256  51FC               	movf	(??_ringbuf_put+1)& (0+255),w,b
  3246  010258  0100               	movlb	0	; () banked
  3247  01025A  21FE               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  3248  01025C  6EDA               	movwf	fsr2h,c
  3249  01025E  C04D  FFDF         	movff	ringbuf_put@data,indf2
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  3253  010262  EE20 F002          	lfsr	2,2
  3254  010266  504B               	movf	ringbuf_put@rb,w,c
  3255  010268  26D9               	addwf	fsr2l,f,c
  3256  01026A  504C               	movf	ringbuf_put@rb+1,w,c
  3257  01026C  22DA               	addwfc	fsr2h,f,c
  3258  01026E  EE10 F004          	lfsr	1,4
  3259  010272  504B               	movf	ringbuf_put@rb,w,c
  3260  010274  26E1               	addwf	fsr1l,f,c
  3261  010276  504C               	movf	ringbuf_put@rb+1,w,c
  3262  010278  22E2               	addwfc	fsr1h,f,c
  3263  01027A  CFE6 F0FD          	movff	postinc1,??_ringbuf_put+2
  3264  01027E  CFE5 F0FE          	movff	postdec1,??_ringbuf_put+3
  3265  010282  0E01               	movlw	1
  3266  010284  0100               	movlb	0	; () banked
  3267  010286  27FD               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  3268  010288  0E00               	movlw	0
  3269  01028A  23FE               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  3270  01028C  50DE               	movf	postinc2,w,c
  3271  01028E  0100               	movlb	0	; () banked
  3272  010290  5DFD               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  3273  010292  50DE               	movf	postinc2,w,c
  3274  010294  0100               	movlb	0	; () banked
  3275  010296  59FE               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  3276  010298  B0D8               	btfsc	status,0,c
  3277  01029A  D00A               	goto	l7205
  3278                           
  3279                           ; BSR set to: 0
  3280  01029C  EE20 F004          	lfsr	2,4
  3281  0102A0  504B               	movf	ringbuf_put@rb,w,c
  3282  0102A2  26D9               	addwf	fsr2l,f,c
  3283  0102A4  504C               	movf	ringbuf_put@rb+1,w,c
  3284  0102A6  22DA               	addwfc	fsr2h,f,c
  3285  0102A8  2ADE               	incf	postinc2,f,c
  3286  0102AA  0E00               	movlw	0
  3287  0102AC  22DD               	addwfc	postdec2,f,c
  3288  0102AE  0012               	return	
  3289  0102B0                     l7205:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;My_ringbuf.c: 24: else rb->head = 0;
  3293  0102B0  EE20 F004          	lfsr	2,4
  3294  0102B4  504B               	movf	ringbuf_put@rb,w,c
  3295  0102B6  26D9               	addwf	fsr2l,f,c
  3296  0102B8  504C               	movf	ringbuf_put@rb+1,w,c
  3297  0102BA  22DA               	addwfc	fsr2h,f,c
  3298  0102BC  0E00               	movlw	0
  3299  0102BE  6EDE               	movwf	postinc2,c
  3300  0102C0  0E00               	movlw	0
  3301  0102C2  6EDD               	movwf	postdec2,c
  3302                           
  3303                           ; BSR set to: 0
  3304  0102C4  0012               	return	
  3305  0102C6                     __end_of_ringbuf_put:
  3306                           	opt stack 0
  3307                           tblptru	equ	0xFF8
  3308                           tblptrh	equ	0xFF7
  3309                           tblptrl	equ	0xFF6
  3310                           tablat	equ	0xFF5
  3311                           prodh	equ	0xFF4
  3312                           prodl	equ	0xFF3
  3313                           intcon	equ	0xFF2
  3314                           intcon2	equ	0xFF1
  3315                           postinc0	equ	0xFEE
  3316                           wreg	equ	0xFE8
  3317                           postinc1	equ	0xFE6
  3318                           postdec1	equ	0xFE5
  3319                           fsr1h	equ	0xFE2
  3320                           fsr1l	equ	0xFE1
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           fsr2h	equ	0xFDA
  3325                           fsr2l	equ	0xFD9
  3326                           status	equ	0xFD8
  3327                           
  3328 ;; *************** function _ringbuf_num *****************
  3329 ;; Defined at:
  3330 ;;		line 12 in file "../My_library/My_ringbuf.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  rb              2   15[COMRAM] PTR struct ringbuf
  3333 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
  3334 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2   15[COMRAM] unsigned int 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Totals:         2       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;Total ram usage:        8 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    2
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_ringbuf_put
  3357 ;;		_ringbuf_pop
  3358 ;;		_ST7032_task
  3359 ;;		_ringbuf_backspace
  3360 ;;		_terminal_task
  3361 ;;		_UART_ISR
  3362 ;;		_UART_task
  3363 ;;		_USB_CDC_task
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text20
  3368  01012A                     __ptext20:
  3369                           	opt stack 0
  3370  01012A                     _ringbuf_num:
  3371                           	opt stack 25
  3372                           
  3373                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  3374                           
  3375                           ;incstack = 0
  3376  01012A  EE20 F006          	lfsr	2,6
  3377  01012E  5049               	movf	ringbuf_num@rb,w,c
  3378  010130  26D9               	addwf	fsr2l,f,c
  3379  010132  504A               	movf	ringbuf_num@rb+1,w,c
  3380  010134  22DA               	addwfc	fsr2h,f,c
  3381  010136  EE10 F004          	lfsr	1,4
  3382  01013A  5049               	movf	ringbuf_num@rb,w,c
  3383  01013C  26E1               	addwf	fsr1l,f,c
  3384  01013E  504A               	movf	ringbuf_num@rb+1,w,c
  3385  010140  22E2               	addwfc	fsr1h,f,c
  3386  010142  50DE               	movf	postinc2,w,c
  3387  010144  5CE6               	subwf	postinc1,w,c
  3388  010146  50DE               	movf	postinc2,w,c
  3389  010148  58E6               	subwfb	postinc1,w,c
  3390  01014A  A0D8               	btfss	status,0,c
  3391  01014C  D024               	goto	l7193
  3392                           
  3393                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  3394  01014E  EE20 F004          	lfsr	2,4
  3395  010152  5049               	movf	ringbuf_num@rb,w,c
  3396  010154  26D9               	addwf	fsr2l,f,c
  3397  010156  504A               	movf	ringbuf_num@rb+1,w,c
  3398  010158  22DA               	addwfc	fsr2h,f,c
  3399  01015A  CFDE F1CB          	movff	postinc2,??_ringbuf_num
  3400  01015E  CFDD F1CC          	movff	postdec2,??_ringbuf_num+1
  3401  010162  EE20 F006          	lfsr	2,6
  3402  010166  5049               	movf	ringbuf_num@rb,w,c
  3403  010168  26D9               	addwf	fsr2l,f,c
  3404  01016A  504A               	movf	ringbuf_num@rb+1,w,c
  3405  01016C  22DA               	addwfc	fsr2h,f,c
  3406  01016E  CFDE F1CD          	movff	postinc2,??_ringbuf_num+2
  3407  010172  CFDD F1CE          	movff	postdec2,??_ringbuf_num+3
  3408  010176  0101               	movlb	1	; () banked
  3409  010178  1FCD               	comf	(??_ringbuf_num+2)& (0+255),f,b
  3410  01017A  1FCE               	comf	(??_ringbuf_num+3)& (0+255),f,b
  3411  01017C  4BCD               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  3412  01017E  2BCE               	incf	(??_ringbuf_num+3)& (0+255),f,b
  3413  010180  0101               	movlb	1	; () banked
  3414  010182  51CB               	movf	??_ringbuf_num& (0+255),w,b
  3415  010184  0101               	movlb	1	; () banked
  3416  010186  25CD               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  3417  010188  6E49               	movwf	?_ringbuf_num,c
  3418  01018A  0101               	movlb	1	; () banked
  3419  01018C  51CC               	movf	(??_ringbuf_num+1)& (0+255),w,b
  3420  01018E  0101               	movlb	1	; () banked
  3421  010190  21CE               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  3422  010192  6E4A               	movwf	?_ringbuf_num+1,c
  3423                           
  3424                           ; BSR set to: 1
  3425                           ;My_ringbuf.c: 15: } else {
  3426                           
  3427                           ; BSR set to: 1
  3428  010194  0012               	return	
  3429  010196                     l7193:
  3430                           
  3431                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  3432  010196  EE20 F004          	lfsr	2,4
  3433  01019A  5049               	movf	ringbuf_num@rb,w,c
  3434  01019C  26D9               	addwf	fsr2l,f,c
  3435  01019E  504A               	movf	ringbuf_num@rb+1,w,c
  3436  0101A0  22DA               	addwfc	fsr2h,f,c
  3437  0101A2  CFDE F1CB          	movff	postinc2,??_ringbuf_num
  3438  0101A6  CFDD F1CC          	movff	postdec2,??_ringbuf_num+1
  3439  0101AA  EE20 F002          	lfsr	2,2
  3440  0101AE  5049               	movf	ringbuf_num@rb,w,c
  3441  0101B0  26D9               	addwf	fsr2l,f,c
  3442  0101B2  504A               	movf	ringbuf_num@rb+1,w,c
  3443  0101B4  22DA               	addwfc	fsr2h,f,c
  3444  0101B6  CFDE F1CD          	movff	postinc2,??_ringbuf_num+2
  3445  0101BA  CFDD F1CE          	movff	postdec2,??_ringbuf_num+3
  3446  0101BE  EE20 F006          	lfsr	2,6
  3447  0101C2  5049               	movf	ringbuf_num@rb,w,c
  3448  0101C4  26D9               	addwf	fsr2l,f,c
  3449  0101C6  504A               	movf	ringbuf_num@rb+1,w,c
  3450  0101C8  22DA               	addwfc	fsr2h,f,c
  3451  0101CA  CFDE F1CF          	movff	postinc2,??_ringbuf_num+4
  3452  0101CE  CFDD F1D0          	movff	postdec2,??_ringbuf_num+5
  3453  0101D2  0101               	movlb	1	; () banked
  3454  0101D4  1FCF               	comf	(??_ringbuf_num+4)& (0+255),f,b
  3455  0101D6  1FD0               	comf	(??_ringbuf_num+5)& (0+255),f,b
  3456  0101D8  4BCF               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  3457  0101DA  2BD0               	incf	(??_ringbuf_num+5)& (0+255),f,b
  3458  0101DC  0101               	movlb	1	; () banked
  3459  0101DE  51CD               	movf	(??_ringbuf_num+2)& (0+255),w,b
  3460  0101E0  0101               	movlb	1	; () banked
  3461  0101E2  27CF               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  3462  0101E4  0101               	movlb	1	; () banked
  3463  0101E6  51CE               	movf	(??_ringbuf_num+3)& (0+255),w,b
  3464  0101E8  0101               	movlb	1	; () banked
  3465  0101EA  23D0               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  3466  0101EC  0101               	movlb	1	; () banked
  3467  0101EE  51CB               	movf	??_ringbuf_num& (0+255),w,b
  3468  0101F0  0101               	movlb	1	; () banked
  3469  0101F2  25CF               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  3470  0101F4  6E49               	movwf	?_ringbuf_num,c
  3471  0101F6  0101               	movlb	1	; () banked
  3472  0101F8  51CC               	movf	(??_ringbuf_num+1)& (0+255),w,b
  3473  0101FA  0101               	movlb	1	; () banked
  3474  0101FC  21D0               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  3475  0101FE  6E4A               	movwf	?_ringbuf_num+1,c
  3476                           
  3477                           ; BSR set to: 1
  3478  010200  0012               	return	
  3479  010202                     __end_of_ringbuf_num:
  3480                           	opt stack 0
  3481                           tblptru	equ	0xFF8
  3482                           tblptrh	equ	0xFF7
  3483                           tblptrl	equ	0xFF6
  3484                           tablat	equ	0xFF5
  3485                           prodh	equ	0xFF4
  3486                           prodl	equ	0xFF3
  3487                           intcon	equ	0xFF2
  3488                           intcon2	equ	0xFF1
  3489                           postinc0	equ	0xFEE
  3490                           wreg	equ	0xFE8
  3491                           postinc1	equ	0xFE6
  3492                           postdec1	equ	0xFE5
  3493                           fsr1h	equ	0xFE2
  3494                           fsr1l	equ	0xFE1
  3495                           indf2	equ	0xFDF
  3496                           postinc2	equ	0xFDE
  3497                           postdec2	equ	0xFDD
  3498                           fsr2h	equ	0xFDA
  3499                           fsr2l	equ	0xFD9
  3500                           status	equ	0xFD8
  3501                           
  3502 ;; *************** function _ISR *****************
  3503 ;; Defined at:
  3504 ;;		line 33 in file "main.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;		None
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;		None               void
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3520 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;Total ram usage:       15 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    1
  3525 ;; This function calls:
  3526 ;;		_I2C_ISR
  3527 ;; This function is called by:
  3528 ;;		Interrupt level 2
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	intcode
  3533  001008                     __pintcode:
  3534                           	opt stack 0
  3535  001008                     _ISR:
  3536                           	opt stack 23
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;incstack = 0
  3540  001008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3541  00100A  CFFA F03B          	movff	pclath,??_ISR+1
  3542  00100E  CFFB F03C          	movff	pclatu,??_ISR+2
  3543  001012  CFE9 F03D          	movff	fsr0l,??_ISR+3
  3544  001016  CFEA F03E          	movff	fsr0h,??_ISR+4
  3545  00101A  CFE1 F03F          	movff	fsr1l,??_ISR+5
  3546  00101E  CFE2 F040          	movff	fsr1h,??_ISR+6
  3547  001022  CFD9 F041          	movff	fsr2l,??_ISR+7
  3548  001026  CFDA F042          	movff	fsr2h,??_ISR+8
  3549  00102A  CFF3 F043          	movff	prodl,??_ISR+9
  3550  00102E  CFF4 F044          	movff	prodh,??_ISR+10
  3551  001032  CFF6 F045          	movff	tblptrl,??_ISR+11
  3552  001036  CFF7 F046          	movff	tblptrh,??_ISR+12
  3553  00103A  CFF8 F047          	movff	tblptru,??_ISR+13
  3554  00103E  CFF5 F048          	movff	tablat,??_ISR+14
  3555                           
  3556                           ;main.c: 34: I2C_ISR();
  3557  001042  EC8C  F083         	call	_I2C_ISR	;wreg free
  3558                           
  3559                           ;main.c: 35: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  3560  001046  B09E               	btfsc	3998,0,c	;volatile
  3561  001048  A09D               	btfss	3997,0,c	;volatile
  3562  00104A  D010               	goto	i2l1458
  3563                           
  3564                           ;main.c: 36: PIR1bits.TMR1IF = 0;
  3565  00104C  909E               	bcf	3998,0,c	;volatile
  3566                           
  3567                           ;main.c: 37: TMR1H = 0xC0;
  3568  00104E  0EC0               	movlw	192
  3569  001050  6ECF               	movwf	4047,c	;volatile
  3570                           
  3571                           ;main.c: 38: one_second_flag = 1;
  3572  001052  0E01               	movlw	1
  3573  001054  6E2E               	movwf	_one_second_flag,c
  3574                           
  3575                           ;main.c: 39: LATAbits.LATA0 = !LATAbits.LATA0;
  3576  001056  B089               	btfsc	3977,0,c	;volatile
  3577  001058  D003               	goto	i2u629_40
  3578  00105A  6A3A               	clrf	??_ISR& (0+255),c
  3579  00105C  2A3A               	incf	??_ISR& (0+255),f,c
  3580  00105E  D001               	goto	i2u630_48
  3581  001060                     i2u629_40:
  3582  001060  6A3A               	clrf	??_ISR& (0+255),c
  3583  001062                     i2u630_48:
  3584  001062  5089               	movf	3977,w,c	;volatile
  3585  001064  183A               	xorwf	??_ISR,w,c
  3586  001066  0BFE               	andlw	-2
  3587  001068  183A               	xorwf	??_ISR,w,c
  3588  00106A  6E89               	movwf	3977,c	;volatile
  3589  00106C                     i2l1458:
  3590  00106C  C048  FFF5         	movff	??_ISR+14,tablat
  3591  001070  C047  FFF8         	movff	??_ISR+13,tblptru
  3592  001074  C046  FFF7         	movff	??_ISR+12,tblptrh
  3593  001078  C045  FFF6         	movff	??_ISR+11,tblptrl
  3594  00107C  C044  FFF4         	movff	??_ISR+10,prodh
  3595  001080  C043  FFF3         	movff	??_ISR+9,prodl
  3596  001084  C042  FFDA         	movff	??_ISR+8,fsr2h
  3597  001088  C041  FFD9         	movff	??_ISR+7,fsr2l
  3598  00108C  C040  FFE2         	movff	??_ISR+6,fsr1h
  3599  001090  C03F  FFE1         	movff	??_ISR+5,fsr1l
  3600  001094  C03E  FFEA         	movff	??_ISR+4,fsr0h
  3601  001098  C03D  FFE9         	movff	??_ISR+3,fsr0l
  3602  00109C  C03C  FFFB         	movff	??_ISR+2,pclatu
  3603  0010A0  C03B  FFFA         	movff	??_ISR+1,pclath
  3604  0010A4  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3605  0010A6  0011               	retfie		f
  3606  0010A8                     __end_of_ISR:
  3607                           	opt stack 0
  3608                           pclatu	equ	0xFFB
  3609                           pclath	equ	0xFFA
  3610                           tblptru	equ	0xFF8
  3611                           tblptrh	equ	0xFF7
  3612                           tblptrl	equ	0xFF6
  3613                           tablat	equ	0xFF5
  3614                           prodh	equ	0xFF4
  3615                           prodl	equ	0xFF3
  3616                           intcon	equ	0xFF2
  3617                           intcon2	equ	0xFF1
  3618                           postinc0	equ	0xFEE
  3619                           fsr0h	equ	0xFEA
  3620                           fsr0l	equ	0xFE9
  3621                           wreg	equ	0xFE8
  3622                           postinc1	equ	0xFE6
  3623                           postdec1	equ	0xFE5
  3624                           fsr1h	equ	0xFE2
  3625                           fsr1l	equ	0xFE1
  3626                           indf2	equ	0xFDF
  3627                           postinc2	equ	0xFDE
  3628                           postdec2	equ	0xFDD
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _I2C_ISR *****************
  3634 ;; Defined at:
  3635 ;;		line 44 in file "../My_library/My_I2C.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;		None               void
  3642 ;; Registers used:
  3643 ;;		wreg, status,2
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_ISR
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text22
  3663  010718                     __ptext22:
  3664                           	opt stack 0
  3665  010718                     _I2C_ISR:
  3666                           	opt stack 23
  3667                           
  3668                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
  3669                           
  3670                           ;incstack = 0
  3671  010718  B69D               	btfsc	3997,3,c	;volatile
  3672  01071A  A69E               	btfss	3998,3,c	;volatile
  3673  01071C  D003               	goto	i2l5909
  3674                           
  3675                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
  3676  01071E  969E               	bcf	3998,3,c	;volatile
  3677                           
  3678                           ;My_I2C.c: 47: I2C_sent_flag = 1;
  3679  010720  0E01               	movlw	1
  3680  010722  6E1F               	movwf	_I2C_sent_flag,c
  3681  010724                     i2l5909:
  3682                           
  3683                           ;My_I2C.c: 48: }
  3684                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
  3685  010724  A6A0               	btfss	4000,3,c	;volatile
  3686  010726  0012               	return	
  3687  010728  A6A1               	btfss	4001,3,c	;volatile
  3688  01072A  0012               	return	
  3689                           
  3690                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
  3691  01072C  96A1               	bcf	4001,3,c	;volatile
  3692                           
  3693                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
  3694  01072E  0E01               	movlw	1
  3695  010730  0100               	movlb	0	; () banked
  3696  010732  6F8F               	movwf	_I2C_cfct_flag& (0+255),b
  3697  010734  0012               	return	
  3698  010736                     __end_of_I2C_ISR:
  3699                           	opt stack 0
  3700                           pclatu	equ	0xFFB
  3701                           pclath	equ	0xFFA
  3702                           tblptru	equ	0xFF8
  3703                           tblptrh	equ	0xFF7
  3704                           tblptrl	equ	0xFF6
  3705                           tablat	equ	0xFF5
  3706                           prodh	equ	0xFF4
  3707                           prodl	equ	0xFF3
  3708                           intcon	equ	0xFF2
  3709                           intcon2	equ	0xFF1
  3710                           postinc0	equ	0xFEE
  3711                           fsr0h	equ	0xFEA
  3712                           fsr0l	equ	0xFE9
  3713                           wreg	equ	0xFE8
  3714                           postinc1	equ	0xFE6
  3715                           postdec1	equ	0xFE5
  3716                           fsr1h	equ	0xFE2
  3717                           fsr1l	equ	0xFE1
  3718                           indf2	equ	0xFDF
  3719                           postinc2	equ	0xFDE
  3720                           postdec2	equ	0xFDD
  3721                           fsr2h	equ	0xFDA
  3722                           fsr2l	equ	0xFD9
  3723                           status	equ	0xFD8
  3724                           pclatu	equ	0xFFB
  3725                           pclath	equ	0xFFA
  3726                           tblptru	equ	0xFF8
  3727                           tblptrh	equ	0xFF7
  3728                           tblptrl	equ	0xFF6
  3729                           tablat	equ	0xFF5
  3730                           prodh	equ	0xFF4
  3731                           prodl	equ	0xFF3
  3732                           intcon	equ	0xFF2
  3733                           intcon2	equ	0xFF1
  3734                           postinc0	equ	0xFEE
  3735                           fsr0h	equ	0xFEA
  3736                           fsr0l	equ	0xFE9
  3737                           wreg	equ	0xFE8
  3738                           postinc1	equ	0xFE6
  3739                           postdec1	equ	0xFE5
  3740                           fsr1h	equ	0xFE2
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           postinc2	equ	0xFDE
  3744                           postdec2	equ	0xFDD
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749                           	psect	rparam
  3750  0000                     pclatu	equ	0xFFB
  3751                           pclath	equ	0xFFA
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           prodh	equ	0xFF4
  3757                           prodl	equ	0xFF3
  3758                           intcon	equ	0xFF2
  3759                           intcon2	equ	0xFF1
  3760                           postinc0	equ	0xFEE
  3761                           fsr0h	equ	0xFEA
  3762                           fsr0l	equ	0xFE9
  3763                           wreg	equ	0xFE8
  3764                           postinc1	equ	0xFE6
  3765                           postdec1	equ	0xFE5
  3766                           fsr1h	equ	0xFE2
  3767                           fsr1l	equ	0xFE1
  3768                           indf2	equ	0xFDF
  3769                           postinc2	equ	0xFDE
  3770                           postdec2	equ	0xFDD
  3771                           fsr2h	equ	0xFDA
  3772                           fsr2l	equ	0xFD9
  3773                           status	equ	0xFD8
  3774                           
  3775                           	psect	temp
  3776  000050                     btemp:
  3777                           	opt stack 0
  3778  000050                     	ds	1
  3779  0000                     int$flags	set	btemp
  3780                           pclatu	equ	0xFFB
  3781                           pclath	equ	0xFFA
  3782                           tblptru	equ	0xFF8
  3783                           tblptrh	equ	0xFF7
  3784                           tblptrl	equ	0xFF6
  3785                           tablat	equ	0xFF5
  3786                           prodh	equ	0xFF4
  3787                           prodl	equ	0xFF3
  3788                           intcon	equ	0xFF2
  3789                           intcon2	equ	0xFF1
  3790                           postinc0	equ	0xFEE
  3791                           fsr0h	equ	0xFEA
  3792                           fsr0l	equ	0xFE9
  3793                           wreg	equ	0xFE8
  3794                           postinc1	equ	0xFE6
  3795                           postdec1	equ	0xFE5
  3796                           fsr1h	equ	0xFE2
  3797                           fsr1l	equ	0xFE1
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           postdec2	equ	0xFDD
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8


Data Sizes:
    Strings     161
    Constant    239
    Data        5
    BSS         2238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      79
    BANK0           160      5     160
    BANK1           256     10     213
    BANK2           256      0     228
    BANK3           256      0     100
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK0[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_42(CODE[8]), STR_41(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK0[8]), uart_tx(BANK0[8]), terminal_task@command(BANK0[8]), lcd_tx(COMRAM[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK0[8]), uart_rx(BANK0[8]), terminal_task@command(BANK0[8]), lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK0[8]), usb_tx(BANK0[8]), uart_rx(BANK0[8]), uart_tx(BANK0[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(COMRAM[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK3[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK2[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK0[8]), usb_tx(BANK0[8]), uart_rx(BANK0[8]), uart_tx(BANK0[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(COMRAM[8]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    _main->_ST7032_task
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _ST7032_command->_ringbuf_put
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ST7032_cursor
    _main->_ST7032_task
    _ST7032_init->_ringbuf_put
    _ST7032_task->_ringbuf_pop
    _ST7032_put->_ringbuf_put
    _ST7032_command->_ringbuf_put

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ST7032_cursor
    _ST7032_task->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   65559
                                              9 BANK1      1     1      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                        _ST7032_task
                          _main_init
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   31405
                           _OSC_init
                        _ST7032_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     169
                                             15 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      30
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   31206
                       _I2C_init_new
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_init                                         6     0      6    1986
                                             15 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _ST7032_clear                                         0     0      0   10197
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (3) _I2C_init_new                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4263
                                             20 COMRAM     2     2      0
                                              4 BANK0      1     1      0
                     _I2C_idle_check
                           _I2C_send
                          _I2C_start
                           _I2C_stop
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                             17 COMRAM     3     1      2
                                              0 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_send                                             1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_idle_check                                       2     2      0      31
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ST7032_puts                                          2     0      2    9160
                                              6 BANK1      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (2) _ST7032_put                                           1     1      0    8857
                                             20 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _ST7032_cursor                                        4     3      1   10534
                                              4 BANK0      1     0      1
                                              6 BANK1      3     3      0
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (3) _ST7032_command                                       2     1      1   10197
                                             20 COMRAM     2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    8826
                                             17 COMRAM     3     0      3
                                              0 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1407
                                             15 COMRAM     2     0      2
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0       0
                                              0 COMRAM    15    15      0
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (8) _I2C_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ST7032_clear
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_cursor
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_puts
     _ST7032_put
       _ringbuf_put
         _ringbuf_num
   _ST7032_task
     _I2C_idle_check
     _I2C_send
     _I2C_start
     _I2C_stop
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _main_init
     _OSC_init
     _ST7032_init
       _I2C_init_new
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _timer0_init
     _timer1_init

 _ISR (ROOT)
   _I2C_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     514      36       39.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      64      12       39.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E4      10       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      D5       7       83.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4F       1       84.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D4       8        0.0%
DATA                 0      0     8E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jan 13 13:59:57 2016

                     _USB_SD_Ptr FE79                 ??_I2C_idle_check 0049  
                             _ms 0074                     __CFG_CP0$OFF 000000  
             __size_of_I2C_start 0004                              l710 0630  
                            l705 06CA                              _BDT 000D00  
                            _ISR 1008                              _UIE 000F36  
                            _UIR 000F62                  __end_of_I2C_ISR 0736  
                            _now 00AF                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                 _USBDeviceState 0024                      ?_ST7032_put 003A  
                           ?_ISR 003A                             l1464 04AC  
                           l3179 06DE                             l7205 02B0  
                           l7313 0654                             l7323 000E  
                           l7317 066E                             l7237 0364  
                           l7245 037C                             l7333 0036  
                           l7239 0378                             l7351 0090  
                           l7327 0028               __CFG_WPFP$PAGE_127 000000  
                           l7193 0196                             l7353 009A  
                           l7361 00DC                             l7345 0064  
                           l5569 0632                             l7371 00FE  
                           l7363 00E2                             l7355 00A4  
                           l7347 007C                             l7349 0086  
                           l7367 00EC                             l7359 00B0  
                           l7375 0108                             STR_1 FFE1  
                           STR_4 FFFB                             STR_7 FFFD  
                           STR_9 FFF9                             u7208 04C0  
                           u7190 04BC                             _UCFG 000F39  
                           _UEP0 000F26                             _UEP1 000F27  
                           _UEIE 000F37                             _UEIR 000F63  
                           _UCON 000F65                  _CDCDataInHandle 0086  
                           _pDst 0088                             _main 04A6  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                    _BaudRateGen 0070                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 0050           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                 __end_of_I2C_send 0784  
                           start 10A8                 __end_of_I2C_stop 078E  
                  __CFG_IESO$OFF 000000                     ?_ST7032_init 003A  
                   ?_ST7032_task 003A                     ?_ST7032_puts 01D1  
                   ___param_bank 000010                            ??_ISR 003A  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                    _writeBuffer 02A4                            ?_main 003A  
                          _ADRES 000FC3                            STR_13 FFF7  
                          STR_30 FFD7                            STR_31 FFF1  
                          STR_15 FFA3                            STR_23 FF5E  
                          STR_32 FFD1                            STR_40 FFC3  
                          STR_24 FFB4                            STR_41 FF9A  
                          STR_25 FF8F                            STR_34 FFEA  
                          STR_42 FFAC                            STR_27 FFEE  
                          STR_19 FFE6                            STR_43 FFBC  
                          STR_36 FFDC                            STR_28 FF83  
                          STR_37 FFF3                            STR_38 FFCA  
                          STR_39 FFF5                            _LATB2 007C52  
                ringbuf_put@data 004D                            _UADDR 000F38  
        ST7032_task@st7032_state 001D                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _USTAT 000F64  
                 __CFG_FCMEN$OFF 000000                            _sd000 FF5A  
                          _sd001 FEC4                            _sd002 FEF8  
       ST7032_cursor@row_offsets 01D1           __size_of_ST7032_cursor 0030  
                __end_of_dpowers FE79                 __end_of_OSC_init 0770  
                          tablat 000FF5                            status 000FD8  
              __end_of_I2C_start 0792            __size_of_I2C_init_new 001C  
                  ?_ST7032_clear 003A                  __initialization 0420  
                   __end_of_main 0518              __size_of_ST7032_put 0054  
          _control_signal_bitmap 0091              ringbuf_init@bufsize 004D  
                      ??_I2C_ISR 003A           UART_buffer_init@uartrx 0200  
         UART_buffer_init@uarttx 07E8                  _one_second_flag 002E  
                         ??_main 01D4                    __activetblptr 000003  
                   _cdc_mem_type 0028                      ST7032_put@c 004E  
                   _I2C_init_new 0736                           _BCL1IF 007D0B  
               _CDCDataOutHandle 0016                           _EECON2 000FA7  
                         _ANCON0 000F48                           _ANCON1 000F49  
                         i2l1458 106C                   __CFG_WDTEN$OFF 000000  
                         i2l5909 0724                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _SSPBUF 000FC9                           _TXREG1 000FAE  
                 __CFG_WPDIS$OFF 000000                   ??_ST7032_clear 0050  
              _shortPacketStatus 002F                   __CFG_XINST$OFF 000000  
        __size_of_ST7032_command 0054                    _ST7032_cursor 06E8  
                   ?_ringbuf_pop 004B                     ?_ringbuf_num 0049  
                   ?_ringbuf_put 004B                     ?_timer0_init 003A  
                   ?_timer1_init 0049                           _lcd_tx 0030  
                         clear_0 0428                           clear_1 043A  
                         clear_2 0446                           clear_3 0452  
                         clear_4 045E                           clear_5 046A  
                         clear_6 0476                  __CFG_CLKOEC$OFF 000000  
                         _usb_rx 00D5                           _usb_tx 00DD  
                   _st7032_state 0092                     __mediumconst FE6E  
                      ?_I2C_send 003A                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_I2C_stop 003A         USB_CDC_buffer_init@rxbuf 0300  
       USB_CDC_buffer_init@txbuf 04C8                      _CtrlTrfData 000D38  
           _controlTransferState 002C             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 049C  
                   __pbssBIGRAMl 04C8                    ___rparam_used 000001  
           __CFG_WPEND$PAGE_WPFP 000000                   ?_ST7032_cursor 00FF  
               terminal_task@op0 0096                 terminal_task@op1 0180  
               terminal_task@op2 0199                 terminal_task@op3 01B2  
                 __pcstackCOMRAM 003A                    __end_of_sd000 FF5E  
                  __end_of_sd001 FEF8                    __end_of_sd002 FF2C  
                   __pidataBANK0 0784             __size_of_ST7032_init 00A0  
           __size_of_ST7032_task 012A             __size_of_ST7032_puts 0034  
                      ?_OSC_init 003A                  __CFG_DSWDTPS$G2 000000  
           terminal_task@command 00E5                    _I2C_cfct_flag 008F  
                     _cdc_notice 0060                       _cdc_rx_len 0029  
                     ??_I2C_send 0049                       _cdc_tx_len 002B  
                   ??_ST7032_put 004E                       ??_I2C_stop 0049  
             __size_of_main_init 0032                       __pbssBANK0 0060  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
                     __pbssBANK3 0300                       __pbssBANK4 0400  
             ST7032_command@wait 004E                      _pBDTEntryIn 0010  
          __end_of_weekday_3char FF48            RTCC_task@prev_halfsec 001C  
                 ST7032_init@buf 0400                     ST7032_puts@s 01D1  
             __end_of_ST7032_put 056C                       ??_OSC_init 0049  
                        _I2C_ISR 0718                       _device_dsc FF48  
                     _ep_data_in 0078                _configDescriptor1 FE81  
             __CFG_OSC$INTOSCPLL 000000             __end_of_ST7032_clear 077C  
         I2C_LCD_SetCursor@F8685 00F6                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                    _I2C_sent_flag 001F  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
                        _UIEbits 000F36                 ST7032_cursor@col 01D3  
           timer1_init@prescaler 004B                          _UIRbits 000F62  
               ST7032_cursor@row 00FF                 __CFG_CFGPLLEN$ON 000000  
                  _cdc_trf_state 002A                  ??_ST7032_cursor 0050  
                        _pCDCDst 007E                          _pCDCSrc 0081  
                        __Hparam 0000                   _ST7032_command 056C  
                        __Lparam 0000                        _I2C_start 078E  
                     _readBuffer 0264                    ?_ringbuf_init 0049  
           __size_of_ringbuf_pop 00BA             __size_of_ringbuf_num 00D8  
           __size_of_ringbuf_put 00C4                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 06B8      epoch_to_caltime@month_cache 00FA  
                        __pcinit 0420        __end_of_configDescriptor1 FEC4  
                        __ramtop 0F00             __size_of_timer0_init 0030  
           __size_of_timer1_init 0044                          __ptext0 04A6  
                        __ptext1 0686                          __ptext2 060E  
                        __ptext3 06B8                          __ptext4 0380  
                        __ptext5 05C0                          __ptext6 0770  
                        __ptext7 0736                          __ptext8 0762  
                        __ptext9 0000                          _inPipes 000A  
    _USBDeferOUTDataStagePackets 0022                        _T0CONbits 000FD5  
               _time_change_flag 0093                     __size_of_ISR 00A0  
                      _T1CONbits 000FCD                          _dpowers FE6F  
                      _T3CONbits 000F79          __size_of_I2C_idle_check 0010  
                      _T5CONbits 000F22                          _uart_rx 00C5  
                        _uart_tx 00CD               __end_of_USB_CD_Ptr FE81  
           end_of_initialization 049C                     _CTMUCONHbits 000FB3  
             __end_of_USB_SD_Ptr FE7F                     _CTMUCONLbits 000FB2  
            _pBDTEntryEP0OutNext 001A  _dummy_encapsulated_cmd_response 00BD  
         __end_of_ST7032_command 05C0                       ?_I2C_start 003A  
                 ??_ringbuf_init 004F                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
     _USBStatusStageEnabledFlag1 0025       _USBStatusStageEnabledFlag2 0026  
                   I2C_send@data 0049                 __CFG_DSBOREN$OFF 000000  
      epoch_to_caltime@day_cache 008A               ST7032_cursor@F8640 00F8  
               __CFG_CPUDIV$OSC1 000000               _BothEP0OutUOWNsSet 001E  
              __size_of_I2C_send 0008                __size_of_I2C_stop 0004  
                      _USTATcopy 0039          timer1_init@clock_select 0049  
                ?_ST7032_command 004E                 __CFG_IOL1WAY$OFF 000000  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0049  
                 ringbuf_pop@ret 004D            ST7032_command@command 004F  
          __size_of_ST7032_clear 000C                __size_of_OSC_init 000E  
               __CFG_DSWDTEN$OFF 000000                _USBBusIsSuspended 0090  
            start_initialization 0420                      __end_of_ISR 10A8  
                    _cdc_data_rx 0100                      _cdc_data_tx 0140  
                  ??_ST7032_init 0050                     _ST7032_clear 0770  
                  ??_ST7032_task 004E                      ??_I2C_start 0049  
                  ??_ST7032_puts 004F           _pBDTEntryEP0OutCurrent 0018  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00F6  
                       ?_I2C_ISR 003A           _USBActiveConfiguration 0038  
                 _I2C_idle_check 0752                      __pbssCOMRAM 0001  
                  __pcstackBANK0 00FB                    __pcstackBANK1 01CB  
           __end_of_ringbuf_init 060E                     _pBDTEntryOut 006A  
                millis_timer@cnt 008C                        __pintcode 1008  
                  __pmediumconst FE6E              __end_of_ST7032_init 0420  
            __end_of_ST7032_task 012A              __end_of_ST7032_puts 0686  
         __end_of_I2C_idle_check 0762                        _main_init 0686  
           __CFG_RTCOSC$T1OSCREF 000000                         _I2C_busy 008E  
                       _I2C_send 077C                         _I2C_stop 078A  
                    _PADCFG1bits 000F3C                    ?_I2C_init_new 003A  
                ST7032_task@data 00FF                      _ep_data_out 007B  
                ST7032_task@wait 0084                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 004B                         _LATAbits 000F89  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
          __end_of_ST7032_cursor 0718                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1                         i2u630_48 1062  
                       _PIR5bits 000F98       epoch_to_caltime@year_cache 0094  
                       i2u629_40 1060                    ??_ringbuf_pop 00FB  
                  ??_ringbuf_num 01CB                    ??_ringbuf_put 00FB  
                       _RCONbits 000FD0                         _UEP0bits 000F26  
     _USBDeferINDataStagePackets 0021                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                    ??_timer0_init 0049  
                  ??_timer1_init 004A                         _SSP1STAT 000FC7  
                       _UCONbits 000F65               I2C_idle_check@mask 004A  
                       _OSC_init 0762                 __size_of_I2C_ISR 001E  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                ?_I2C_idle_check 003A                 __CFG_SOSCSEL$LOW 000000  
                     ?_main_init 003A                     _RemoteWakeup 0020  
                 ??_I2C_init_new 0049                    ringbuf_pop@rb 004B  
                  ringbuf_num@rb 0049                    ringbuf_put@rb 004B  
               ??_ST7032_command 004F                      _INTCON2bits 000FF1  
                      copy_data0 0490               __end_of_device_dsc FF5A  
                       __Hrparam 0000                      _ST7032_init 0380  
                       __Lrparam 0000                      _ST7032_task 0000  
                    _ST7032_puts 0652                         _SetupPkt 000D30  
                  _weekday_3char FF2C              __end_of_ringbuf_pop 0380  
            __end_of_ringbuf_num 0202              __end_of_ringbuf_put 02C6  
                    _line_coding 00ED              __end_of_timer0_init 06E8  
          __size_of_ringbuf_init 004E              __end_of_timer1_init 0652  
           timer0_init@prescaler 004A                         __ptext10 02C6  
                       __ptext11 078A                         __ptext20 012A  
                       __ptext12 078E                         __ptext13 077C  
                       __ptext22 0718                         __ptext14 0752  
                       __ptext15 0652                         __ptext16 0518  
                       __ptext17 06E8                         __ptext18 056C  
                       __ptext19 0202                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5                    __size_of_main 0072  
                       _outPipes 0001                         int$flags 0050  
                   _ringbuf_init 05C0                     _SSP1STATbits 000FC7  
      _USBDeferStatusStagePacket 0023                      ??_main_init 0050  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                     _ST7032_put 0518        terminal_task@command_init 0095  
                       intlevel2 0000                       _RCSTA1bits 000FAC  
                     _OSCCONbits 000FD3             __end_of_I2C_init_new 0752  
                    _ringbuf_pop 02C6                      _ringbuf_num 012A  
                    _ringbuf_put 0202                      _timer0_init 06B8  
                    _timer1_init 060E                       _RTCCFGbits 000F3F  
          _USBAlternateInterface 00F4                  _endpoint_number 002D  
   _USBStatusStageTimeoutCounter 0027                       _USB_CD_Ptr FE7F  
