

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 22:02:31 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	dabs	1,0xD00,48,_BDT
    43                           	dabs	1,0xD38,8,_CtrlTrfData
    44                           	dabs	1,0xD30,8,_SetupPkt
    45  0000                     
    46                           	psect	idataBANK0
    47  010758                     __pidataBANK0:
    48                           	opt stack 0
    49                           
    50                           ;initializer for I2C_LCD_SetCursor@F8685
    51  010758  00                 	db	0
    52  010759  40                 	db	64
    53                           
    54                           ;initializer for ST7032_cursor@F8640
    55  01075A  00                 	db	0
    56  01075B  40                 	db	64
    57                           
    58                           ;initializer for epoch_to_caltime@month_cache
    59  01075C  01                 	db	1
    60                           
    61                           	psect	mediumconst
    62  00FE6E                     __pmediumconst:
    63                           	opt stack 0
    64  00FE6E  00                 	db	0
    65  00FE6F                     _dpowers:
    66                           	opt stack 0
    67  00FE6F  0001               	dw	1
    68  00FE71  000A               	dw	10
    69  00FE73  0064               	dw	100
    70  00FE75  03E8               	dw	1000
    71  00FE77  2710               	dw	10000
    72  00FE79                     __end_of_dpowers:
    73                           	opt stack 0
    74  00FE79                     _USB_SD_Ptr:
    75                           	opt stack 0
    76  00FE79  5A                 	db	low _sd000
    77  00FE7A  FF                 	db	high _sd000
    78  00FE7B  C4                 	db	low _sd001
    79  00FE7C  FE                 	db	high _sd001
    80  00FE7D  F8                 	db	low _sd002
    81  00FE7E  FE                 	db	high _sd002
    82  00FE7F                     __end_of_USB_SD_Ptr:
    83                           	opt stack 0
    84  00FE7F                     _USB_CD_Ptr:
    85                           	opt stack 0
    86  00FE7F  81                 	db	low _configDescriptor1
    87  00FE80  FE                 	db	high _configDescriptor1
    88  00FE81                     __end_of_USB_CD_Ptr:
    89                           	opt stack 0
    90  00FE81                     _configDescriptor1:
    91                           	opt stack 0
    92  00FE81  09                 	db	9
    93  00FE82  02                 	db	2
    94  00FE83  43                 	db	67
    95  00FE84  00                 	db	0
    96  00FE85  02                 	db	2
    97  00FE86  01                 	db	1
    98  00FE87  00                 	db	0
    99  00FE88  C0                 	db	192
   100  00FE89  32                 	db	50
   101  00FE8A  09                 	db	9
   102  00FE8B  04                 	db	4
   103  00FE8C  00                 	db	0
   104  00FE8D  00                 	db	0
   105  00FE8E  01                 	db	1
   106  00FE8F  02                 	db	2
   107  00FE90  02                 	db	2
   108  00FE91  01                 	db	1
   109  00FE92  00                 	db	0
   110  00FE93  05                 	db	5
   111  00FE94  24                 	db	36
   112  00FE95  00                 	db	0
   113  00FE96  10                 	db	16
   114  00FE97  01                 	db	1
   115  00FE98  04                 	db	4
   116  00FE99  24                 	db	36
   117  00FE9A  02                 	db	2
   118  00FE9B  02                 	db	2
   119  00FE9C  05                 	db	5
   120  00FE9D  24                 	db	36
   121  00FE9E  06                 	db	6
   122  00FE9F  00                 	db	0
   123  00FEA0  01                 	db	1
   124  00FEA1  05                 	db	5
   125  00FEA2  24                 	db	36
   126  00FEA3  01                 	db	1
   127  00FEA4  00                 	db	0
   128  00FEA5  01                 	db	1
   129  00FEA6  07                 	db	7
   130  00FEA7  05                 	db	5
   131  00FEA8  81                 	db	129
   132  00FEA9  03                 	db	3
   133  00FEAA  08                 	db	8
   134  00FEAB  00                 	db	0
   135  00FEAC  02                 	db	2
   136  00FEAD  09                 	db	9
   137  00FEAE  04                 	db	4
   138  00FEAF  01                 	db	1
   139  00FEB0  00                 	db	0
   140  00FEB1  02                 	db	2
   141  00FEB2  0A                 	db	10
   142  00FEB3  00                 	db	0
   143  00FEB4  00                 	db	0
   144  00FEB5  00                 	db	0
   145  00FEB6  07                 	db	7
   146  00FEB7  05                 	db	5
   147  00FEB8  02                 	db	2
   148  00FEB9  02                 	db	2
   149  00FEBA  40                 	db	64
   150  00FEBB  00                 	db	0
   151  00FEBC  00                 	db	0
   152  00FEBD  07                 	db	7
   153  00FEBE  05                 	db	5
   154  00FEBF  82                 	db	130
   155  00FEC0  02                 	db	2
   156  00FEC1  40                 	db	64
   157  00FEC2  00                 	db	0
   158  00FEC3  00                 	db	0
   159  00FEC4                     __end_of_configDescriptor1:
   160                           	opt stack 0
   161  00FEC4                     _sd001:
   162                           	opt stack 0
   163  00FEC4  34                 	db	52
   164  00FEC5  03                 	db	3
   165  00FEC6  004D               	dw	77
   166  00FEC8  0069               	dw	105
   167  00FECA  0063               	dw	99
   168  00FECC  0072               	dw	114
   169  00FECE  006F               	dw	111
   170  00FED0  0063               	dw	99
   171  00FED2  0068               	dw	104
   172  00FED4  0069               	dw	105
   173  00FED6  0070               	dw	112
   174  00FED8  0020               	dw	32
   175  00FEDA  0054               	dw	84
   176  00FEDC  0065               	dw	101
   177  00FEDE  0063               	dw	99
   178  00FEE0  0068               	dw	104
   179  00FEE2  006E               	dw	110
   180  00FEE4  006F               	dw	111
   181  00FEE6  006C               	dw	108
   182  00FEE8  006F               	dw	111
   183  00FEEA  0067               	dw	103
   184  00FEEC  0079               	dw	121
   185  00FEEE  0020               	dw	32
   186  00FEF0  0049               	dw	73
   187  00FEF2  006E               	dw	110
   188  00FEF4  0063               	dw	99
   189  00FEF6  002E               	dw	46
   190  00FEF8                     __end_of_sd001:
   191                           	opt stack 0
   192  00FEF8                     _sd002:
   193                           	opt stack 0
   194  00FEF8  34                 	db	52
   195  00FEF9  03                 	db	3
   196  00FEFA  0043               	dw	67
   197  00FEFC  0044               	dw	68
   198  00FEFE  0043               	dw	67
   199  00FF00  0020               	dw	32
   200  00FF02  0052               	dw	82
   201  00FF04  0053               	dw	83
   202  00FF06  002D               	dw	45
   203  00FF08  0032               	dw	50
   204  00FF0A  0033               	dw	51
   205  00FF0C  0032               	dw	50
   206  00FF0E  0020               	dw	32
   207  00FF10  0045               	dw	69
   208  00FF12  006D               	dw	109
   209  00FF14  0075               	dw	117
   210  00FF16  006C               	dw	108
   211  00FF18  0061               	dw	97
   212  00FF1A  0074               	dw	116
   213  00FF1C  0069               	dw	105
   214  00FF1E  006F               	dw	111
   215  00FF20  006E               	dw	110
   216  00FF22  0020               	dw	32
   217  00FF24  0044               	dw	68
   218  00FF26  0065               	dw	101
   219  00FF28  006D               	dw	109
   220  00FF2A  006F               	dw	111
   221  00FF2C                     __end_of_sd002:
   222                           	opt stack 0
   223  00FF2C                     _weekday_3char:
   224                           	opt stack 0
   225  00FF2C  53                 	db	83
   226  00FF2D  55                 	db	85
   227  00FF2E  4E                 	db	78
   228  00FF2F  00                 	db	0
   229  00FF30  4D                 	db	77
   230  00FF31  4F                 	db	79
   231  00FF32  4E                 	db	78
   232  00FF33  00                 	db	0
   233  00FF34  54                 	db	84
   234  00FF35  55                 	db	85
   235  00FF36  45                 	db	69
   236  00FF37  00                 	db	0
   237  00FF38  57                 	db	87
   238  00FF39  45                 	db	69
   239  00FF3A  44                 	db	68
   240  00FF3B  00                 	db	0
   241  00FF3C  54                 	db	84
   242  00FF3D  48                 	db	72
   243  00FF3E  55                 	db	85
   244  00FF3F  00                 	db	0
   245  00FF40  46                 	db	70
   246  00FF41  52                 	db	82
   247  00FF42  49                 	db	73
   248  00FF43  00                 	db	0
   249  00FF44  53                 	db	83
   250  00FF45  41                 	db	65
   251  00FF46  54                 	db	84
   252  00FF47  00                 	db	0
   253  00FF48                     __end_of_weekday_3char:
   254                           	opt stack 0
   255  00FF48                     _device_dsc:
   256                           	opt stack 0
   257  00FF48  12                 	db	18
   258  00FF49  01                 	db	1
   259  00FF4A  0200               	dw	512
   260  00FF4C  02                 	db	2
   261  00FF4D  00                 	db	0
   262  00FF4E  00                 	db	0
   263  00FF4F  08                 	db	8
   264  00FF50  04D8               	dw	1240
   265  00FF52  000A               	dw	10
   266  00FF54  0100               	dw	256
   267  00FF56  01                 	db	1
   268  00FF57  02                 	db	2
   269  00FF58  00                 	db	0
   270  00FF59  01                 	db	1
   271  00FF5A                     __end_of_device_dsc:
   272                           	opt stack 0
   273  00FF5A                     _sd000:
   274                           	opt stack 0
   275  00FF5A  04                 	db	4
   276  00FF5B  03                 	db	3
   277  00FF5C  0409               	dw	1033
   278  00FF5E                     __end_of_sd000:
   279                           	opt stack 0
   280  0000                     _ANCON0	set	3912
   281  0000                     _ANCON1	set	3913
   282  0000                     _PADCFG1bits	set	3900
   283  0000                     _RTCCAL	set	3902
   284  0000                     _RTCCFGbits	set	3903
   285  0000                     _RTCVALH	set	3899
   286  0000                     _RTCVALL	set	3898
   287  0000                     _T5CONbits	set	3874
   288  0000                     _UADDR	set	3896
   289  0000                     _UCFG	set	3897
   290  0000                     _UEIE	set	3895
   291  0000                     _UEP0bits	set	3878
   292  0000                     _UIE	set	3894
   293  0000                     _UIEbits	set	3894
   294  0000                     _UEP0	set	3878
   295  0000                     _UEP1	set	3879
   296  0000                     _ADRES	set	4035
   297  0000                     _ADCON0bits	set	4034
   298  0000                     _ADCON1bits	set	4033
   299  0000                     _BAUDCON1bits	set	3966
   300  0000                     _CTMUCONH	set	4019
   301  0000                     _CTMUCONHbits	set	4019
   302  0000                     _CTMUCONL	set	4018
   303  0000                     _CTMUCONLbits	set	4018
   304  0000                     _CTMUICON	set	4017
   305  0000                     _EECON2	set	4007
   306  0000                     _INTCON2bits	set	4081
   307  0000                     _INTCONbits	set	4082
   308  0000                     _IPR1bits	set	3999
   309  0000                     _IPR2bits	set	4002
   310  0000                     _IPR5bits	set	3993
   311  0000                     _LATAbits	set	3977
   312  0000                     _OSCCONbits	set	4051
   313  0000                     _OSCTUNEbits	set	3995
   314  0000                     _PIE1bits	set	3997
   315  0000                     _PIE2bits	set	4000
   316  0000                     _PIE5bits	set	3985
   317  0000                     _PIR1bits	set	3998
   318  0000                     _PIR2bits	set	4001
   319  0000                     _PIR5bits	set	3992
   320  0000                     _RCONbits	set	4048
   321  0000                     _RCREG1	set	4015
   322  0000                     _RCSTA1bits	set	4012
   323  0000                     _SPBRG1	set	4016
   324  0000                     _SPBRGH1	set	3967
   325  0000                     _SSP1ADD	set	4040
   326  0000                     _SSP1BUF	set	4041
   327  0000                     _SSP1CON1	set	4038
   328  0000                     _SSP1CON1bits	set	4038
   329  0000                     _SSP1CON2	set	4037
   330  0000                     _SSP1CON2bits	set	4037
   331  0000                     _SSP1STAT	set	4039
   332  0000                     _SSP1STATbits	set	4039
   333  0000                     _SSPBUF	set	4041
   334  0000                     _T0CONbits	set	4053
   335  0000                     _T1CONbits	set	4045
   336  0000                     _T3CONbits	set	3961
   337  0000                     _TMR1H	set	4047
   338  0000                     _TRISA	set	3986
   339  0000                     _TRISB	set	3987
   340  0000                     _TRISC	set	3988
   341  0000                     _TXREG1	set	4014
   342  0000                     _TXSTA1bits	set	4013
   343  0000                     _UCON	set	3941
   344  0000                     _UCONbits	set	3941
   345  0000                     _UEIR	set	3939
   346  0000                     _UIR	set	3938
   347  0000                     _UIRbits	set	3938
   348  0000                     _USTAT	set	3940
   349  0000                     _BCL1IF	set	32011
   350  0000                     _LATB2	set	31826
   351  0000                     _SSP1IF	set	31987
   352  00FF5E  09                 	db	9
   353  00FF5F  32                 	db	50	;'2'
   354  00FF60  30                 	db	48	;'0'
   355  00FF61  25                 	db	37
   356  00FF62  30                 	db	48	;'0'
   357  00FF63  32                 	db	50	;'2'
   358  00FF64  64                 	db	100	;'d'
   359  00FF65  2F                 	db	47
   360  00FF66  25                 	db	37
   361  00FF67  30                 	db	48	;'0'
   362  00FF68  32                 	db	50	;'2'
   363  00FF69  64                 	db	100	;'d'
   364  00FF6A  2F                 	db	47
   365  00FF6B  25                 	db	37
   366  00FF6C  30                 	db	48	;'0'
   367  00FF6D  32                 	db	50	;'2'
   368  00FF6E  64                 	db	100	;'d'
   369  00FF6F  28                 	db	40
   370  00FF70  25                 	db	37
   371  00FF71  73                 	db	115	;'s'
   372  00FF72  29                 	db	41
   373  00FF73  25                 	db	37
   374  00FF74  30                 	db	48	;'0'
   375  00FF75  32                 	db	50	;'2'
   376  00FF76  64                 	db	100	;'d'
   377  00FF77  3A                 	db	58	;':'
   378  00FF78  25                 	db	37
   379  00FF79  30                 	db	48	;'0'
   380  00FF7A  32                 	db	50	;'2'
   381  00FF7B  64                 	db	100	;'d'
   382  00FF7C  2D                 	db	45
   383  00FF7D  25                 	db	37
   384  00FF7E  30                 	db	48	;'0'
   385  00FF7F  32                 	db	50	;'2'
   386  00FF80  64                 	db	100	;'d'
   387  00FF81  0A                 	db	10
   388  00FF82  00                 	db	0
   389  00FF83  61                 	db	97	;'a'
   390  00FF84  64                 	db	100	;'d'
   391  00FF85  6A                 	db	106	;'j'
   392  00FF86  75                 	db	117	;'u'
   393  00FF87  73                 	db	115	;'s'
   394  00FF88  74                 	db	116	;'t'
   395  00FF89  5F                 	db	95	;'_'
   396  00FF8A  74                 	db	116	;'t'
   397  00FF8B  69                 	db	105	;'i'
   398  00FF8C  6D                 	db	109	;'m'
   399  00FF8D  65                 	db	101	;'e'
   400  00FF8E  00                 	db	0
   401  00FF8F  70                 	db	112	;'p'
   402  00FF90  72                 	db	114	;'r'
   403  00FF91  69                 	db	105	;'i'
   404  00FF92  6E                 	db	110	;'n'
   405  00FF93  74                 	db	116	;'t'
   406  00FF94  5F                 	db	95	;'_'
   407  00FF95  74                 	db	116	;'t'
   408  00FF96  69                 	db	105	;'i'
   409  00FF97  6D                 	db	109	;'m'
   410  00FF98  65                 	db	101	;'e'
   411  00FF99  00                 	db	0
   412  00FF9A                     STR_41:
   413  00FF9A  31                 	db	49	;'1'
   414  00FF9B  38                 	db	56	;'8'
   415  00FF9C  46                 	db	70	;'F'
   416  00FF9D  32                 	db	50	;'2'
   417  00FF9E  37                 	db	55	;'7'
   418  00FF9F  4A                 	db	74	;'J'
   419  00FFA0  35                 	db	53	;'5'
   420  00FFA1  33                 	db	51	;'3'
   421  00FFA2  00                 	db	0
   422  00FFA3                     STR_15:
   423  00FFA3  20                 	db	32
   424  00FFA4  20                 	db	32
   425  00FFA5  20                 	db	32
   426  00FFA6  20                 	db	32
   427  00FFA7  20                 	db	32
   428  00FFA8  20                 	db	32
   429  00FFA9  20                 	db	32
   430  00FFAA  20                 	db	32
   431  00FFAB  00                 	db	0
   432  00FFAC                     STR_42:
   433  00FFAC  49                 	db	73	;'I'
   434  00FFAD  32                 	db	50	;'2'
   435  00FFAE  43                 	db	67	;'C'
   436  00FFAF  5F                 	db	95	;'_'
   437  00FFB0  6E                 	db	110	;'n'
   438  00FFB1  65                 	db	101	;'e'
   439  00FFB2  77                 	db	119	;'w'
   440  00FFB3  00                 	db	0
   441  00FFB4  09                 	db	9
   442  00FFB5  65                 	db	101	;'e'
   443  00FFB6  72                 	db	114	;'r'
   444  00FFB7  72                 	db	114	;'r'
   445  00FFB8  6F                 	db	111	;'o'
   446  00FFB9  72                 	db	114	;'r'
   447  00FFBA  0A                 	db	10
   448  00FFBB  00                 	db	0
   449  00FFBC                     STR_43:
   450  00FFBC  28                 	db	40
   451  00FFBD  6E                 	db	110	;'n'
   452  00FFBE  75                 	db	117	;'u'
   453  00FFBF  6C                 	db	108	;'l'
   454  00FFC0  6C                 	db	108	;'l'
   455  00FFC1  29                 	db	41
   456  00FFC2  00                 	db	0
   457  00FFC3  73                 	db	115	;'s'
   458  00FFC4  65                 	db	101	;'e'
   459  00FFC5  63                 	db	99	;'c'
   460  00FFC6  6F                 	db	111	;'o'
   461  00FFC7  6E                 	db	110	;'n'
   462  00FFC8  64                 	db	100	;'d'
   463  00FFC9  00                 	db	0
   464  00FFCA  6D                 	db	109	;'m'
   465  00FFCB  69                 	db	105	;'i'
   466  00FFCC  6E                 	db	110	;'n'
   467  00FFCD  75                 	db	117	;'u'
   468  00FFCE  74                 	db	116	;'t'
   469  00FFCF  65                 	db	101	;'e'
   470  00FFD0  00                 	db	0
   471  00FFD1                     STR_32:
   472  00FFD1  6D                 	db	109	;'m'
   473  00FFD2  6F                 	db	111	;'o'
   474  00FFD3  6E                 	db	110	;'n'
   475  00FFD4  74                 	db	116	;'t'
   476  00FFD5  68                 	db	104	;'h'
   477  00FFD6  00                 	db	0
   478  00FFD7  79                 	db	121	;'y'
   479  00FFD8  65                 	db	101	;'e'
   480  00FFD9  61                 	db	97	;'a'
   481  00FFDA  72                 	db	114	;'r'
   482  00FFDB  00                 	db	0
   483  00FFDC  68                 	db	104	;'h'
   484  00FFDD  6F                 	db	111	;'o'
   485  00FFDE  75                 	db	117	;'u'
   486  00FFDF  72                 	db	114	;'r'
   487  00FFE0  00                 	db	0
   488  00FFE1                     STR_1:
   489  00FFE1  25                 	db	37
   490  00FFE2  30                 	db	48	;'0'
   491  00FFE3  32                 	db	50	;'2'
   492  00FFE4  64                 	db	100	;'d'
   493  00FFE5  00                 	db	0
   494  00FFE6                     STR_19:
   495  00FFE6  08                 	db	8
   496  00FFE7  20                 	db	32
   497  00FFE8  08                 	db	8
   498  00FFE9  00                 	db	0
   499  00FFEA                     STR_34:
   500  00FFEA  64                 	db	100	;'d'
   501  00FFEB  61                 	db	97	;'a'
   502  00FFEC  79                 	db	121	;'y'
   503  00FFED  00                 	db	0
   504  00FFEE                     STR_27:
   505  00FFEE  61                 	db	97	;'a'
   506  00FFEF  74                 	db	116	;'t'
   507  00FFF0  00                 	db	0
   508  00FFF1  4D                 	db	77	;'M'
   509  00FFF2  00                 	db	0
   510  00FFF3  6D                 	db	109	;'m'
   511  00FFF4  00                 	db	0
   512  00FFF5  73                 	db	115	;'s'
   513  00FFF6  00                 	db	0
   514  00FFF7  28                 	db	40
   515  00FFF8  00                 	db	0
   516  00FFF9                     STR_9:
   517  00FFF9  2D                 	db	45
   518  00FFFA  00                 	db	0
   519  00FFFB                     STR_4:
   520  00FFFB  2F                 	db	47
   521  00FFFC  00                 	db	0
   522  00FFFD                     STR_7:
   523  00FFFD  3A                 	db	58	;':'
   524  00FFFE  00                 	db	0
   525  0000                     
   526                           ; #config settings
   527  00FFFF  00                 	db	0	; dummy byte at the end
   528  0000                     
   529                           	psect	cinit
   530  010492                     __pcinit:
   531                           	opt stack 0
   532  010492                     start_initialization:
   533                           	opt stack 0
   534  010492                     __initialization:
   535                           	opt stack 0
   536                           
   537                           ; Clear objects allocated to BANK2 (200 bytes)
   538  010492  EE02  F000         	lfsr	0,__pbssBANK2
   539  010496  0EC8               	movlw	200
   540  010498                     clear_0:
   541  010498  6AEE               	clrf	postinc0,c
   542  01049A  06E8               	decf	wreg,f,c
   543  01049C  E1FD               	bnz	clear_0
   544                           
   545                           ; Clear objects allocated to BANK1 (203 bytes)
   546  01049E  EE01  F000         	lfsr	0,__pbssBANK1
   547  0104A2  0ECB               	movlw	203
   548  0104A4                     clear_1:
   549  0104A4  6AEE               	clrf	postinc0,c
   550  0104A6  06E8               	decf	wreg,f,c
   551  0104A8  E1FD               	bnz	clear_1
   552                           
   553                           ; Clear objects allocated to BANK0 (152 bytes)
   554  0104AA  EE00  F060         	lfsr	0,__pbssBANK0
   555  0104AE  0E98               	movlw	152
   556  0104B0                     clear_2:
   557  0104B0  6AEE               	clrf	postinc0,c
   558  0104B2  06E8               	decf	wreg,f,c
   559  0104B4  E1FD               	bnz	clear_2
   560                           
   561                           ; Clear objects allocated to COMRAM (57 bytes)
   562  0104B6  EE00  F001         	lfsr	0,__pbssCOMRAM
   563  0104BA  0E39               	movlw	57
   564  0104BC                     clear_3:
   565  0104BC  6AEE               	clrf	postinc0,c
   566  0104BE  06E8               	decf	wreg,f,c
   567  0104C0  E1FD               	bnz	clear_3
   568                           
   569                           ; Initialize objects allocated to BANK0 (5 bytes)
   570                           ; load TBLPTR registers with __pidataBANK0
   571  0104C2  0E58               	movlw	low __pidataBANK0
   572  0104C4  6EF6               	movwf	tblptrl,c
   573  0104C6  0E07               	movlw	high __pidataBANK0
   574  0104C8  6EF7               	movwf	tblptrh,c
   575  0104CA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   576  0104CC  6EF8               	movwf	tblptru,c
   577  0104CE  EE00  F0F8         	lfsr	0,__pdataBANK0
   578  0104D2  EE10 F005          	lfsr	1,5
   579  0104D6                     copy_data0:
   580  0104D6  0009               	tblrd		*+
   581  0104D8  CFF5 FFEE          	movff	tablat,postinc0
   582  0104DC  50E5               	movf	postdec1,w,c
   583  0104DE  50E1               	movf	fsr1l,w,c
   584  0104E0  E1FA               	bnz	copy_data0
   585  0104E2                     end_of_initialization:
   586                           	opt stack 0
   587  0104E2                     __end_of__initialization:
   588                           	opt stack 0
   589  0104E2  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   590  0104E4  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   591  0104E6  0100               	movlb	0
   592  0104E8  EF10  F082         	goto	_main	;jump to C main() function
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           postdec1	equ	0xFE5
   600                           fsr1l	equ	0xFE1
   601                           
   602                           	psect	bssCOMRAM
   603  000001                     __pbssCOMRAM:
   604                           	opt stack 0
   605  000001                     _outPipes:
   606                           	opt stack 0
   607  000001                     	ds	9
   608  00000A                     _inPipes:
   609                           	opt stack 0
   610  00000A                     	ds	6
   611  000010                     _pBDTEntryIn:
   612                           	opt stack 0
   613  000010                     	ds	6
   614  000016                     _CDCDataOutHandle:
   615                           	opt stack 0
   616  000016                     	ds	2
   617  000018                     _pBDTEntryEP0OutCurrent:
   618                           	opt stack 0
   619  000018                     	ds	2
   620  00001A                     _pBDTEntryEP0OutNext:
   621                           	opt stack 0
   622  00001A                     	ds	2
   623  00001C                     RTCC_task@prev_halfsec:
   624                           	opt stack 0
   625  00001C                     	ds	1
   626  00001D                     ST7032_task@st7032_state:
   627                           	opt stack 0
   628  00001D                     	ds	1
   629  00001E                     _BothEP0OutUOWNsSet:
   630                           	opt stack 0
   631  00001E                     	ds	1
   632  00001F                     _I2C_sent_flag:
   633                           	opt stack 0
   634  00001F                     	ds	1
   635  000020                     _RemoteWakeup:
   636                           	opt stack 0
   637  000020                     	ds	1
   638  000021                     _USBDeferINDataStagePackets:
   639                           	opt stack 0
   640  000021                     	ds	1
   641  000022                     _USBDeferOUTDataStagePackets:
   642                           	opt stack 0
   643  000022                     	ds	1
   644  000023                     _USBDeferStatusStagePacket:
   645                           	opt stack 0
   646  000023                     	ds	1
   647  000024                     _USBDeviceState:
   648                           	opt stack 0
   649  000024                     	ds	1
   650  000025                     _USBStatusStageEnabledFlag1:
   651                           	opt stack 0
   652  000025                     	ds	1
   653  000026                     _USBStatusStageEnabledFlag2:
   654                           	opt stack 0
   655  000026                     	ds	1
   656  000027                     _USBStatusStageTimeoutCounter:
   657                           	opt stack 0
   658  000027                     	ds	1
   659  000028                     _cdc_mem_type:
   660                           	opt stack 0
   661  000028                     	ds	1
   662  000029                     _cdc_rx_len:
   663                           	opt stack 0
   664  000029                     	ds	1
   665  00002A                     _cdc_trf_state:
   666                           	opt stack 0
   667  00002A                     	ds	1
   668  00002B                     _cdc_tx_len:
   669                           	opt stack 0
   670  00002B                     	ds	1
   671  00002C                     _controlTransferState:
   672                           	opt stack 0
   673  00002C                     	ds	1
   674  00002D                     _endpoint_number:
   675                           	opt stack 0
   676  00002D                     	ds	1
   677  00002E                     _one_second_flag:
   678                           	opt stack 0
   679  00002E                     	ds	1
   680  00002F                     _shortPacketStatus:
   681                           	opt stack 0
   682  00002F                     	ds	1
   683  000030                     _lcd_tx:
   684                           	opt stack 0
   685  000030                     	ds	8
   686  000038                     _USBActiveConfiguration:
   687                           	opt stack 0
   688  000038                     	ds	1
   689  000039                     _USTATcopy:
   690                           	opt stack 0
   691  000039                     	ds	1
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           postdec1	equ	0xFE5
   699                           fsr1l	equ	0xFE1
   700                           
   701                           	psect	bssBANK0
   702  000060                     __pbssBANK0:
   703                           	opt stack 0
   704  000060                     _cdc_notice:
   705                           	opt stack 0
   706  000060                     	ds	10
   707  00006A                     _pBDTEntryOut:
   708                           	opt stack 0
   709  00006A                     	ds	6
   710  000070                     _BaudRateGen:
   711                           	opt stack 0
   712  000070                     	ds	4
   713  000074                     _ms:
   714                           	opt stack 0
   715  000074                     	ds	4
   716  000078                     _ep_data_in:
   717                           	opt stack 0
   718  000078                     	ds	3
   719  00007B                     _ep_data_out:
   720                           	opt stack 0
   721  00007B                     	ds	3
   722  00007E                     _pCDCDst:
   723                           	opt stack 0
   724  00007E                     	ds	3
   725  000081                     _pCDCSrc:
   726                           	opt stack 0
   727  000081                     	ds	3
   728  000084                     ST7032_task@wait:
   729                           	opt stack 0
   730  000084                     	ds	2
   731  000086                     USBCBSendResume@delay_count:
   732                           	opt stack 0
   733  000086                     	ds	2
   734  000088                     _CDCDataInHandle:
   735                           	opt stack 0
   736  000088                     	ds	2
   737  00008A                     _pDst:
   738                           	opt stack 0
   739  00008A                     	ds	2
   740  00008C                     epoch_to_caltime@day_cache:
   741                           	opt stack 0
   742  00008C                     	ds	2
   743  00008E                     millis_timer@cnt:
   744                           	opt stack 0
   745  00008E                     	ds	2
   746  000090                     _I2C_busy:
   747                           	opt stack 0
   748  000090                     	ds	1
   749  000091                     _I2C_cfct_flag:
   750                           	opt stack 0
   751  000091                     	ds	1
   752  000092                     _USBBusIsSuspended:
   753                           	opt stack 0
   754  000092                     	ds	1
   755  000093                     _control_signal_bitmap:
   756                           	opt stack 0
   757  000093                     	ds	1
   758  000094                     _st7032_state:
   759                           	opt stack 0
   760  000094                     	ds	1
   761  000095                     _time_change_flag:
   762                           	opt stack 0
   763  000095                     	ds	1
   764  000096                     epoch_to_caltime@year_cache:
   765                           	opt stack 0
   766  000096                     	ds	1
   767  000097                     terminal_task@command_init:
   768                           	opt stack 0
   769  000097                     	ds	1
   770  000098                     terminal_task@op0:
   771                           	opt stack 0
   772  000098                     	ds	25
   773  0000B1                     _now:
   774                           	opt stack 0
   775  0000B1                     	ds	14
   776  0000BF                     _dummy_encapsulated_cmd_response:
   777                           	opt stack 0
   778  0000BF                     	ds	8
   779  0000C7                     _uart_rx:
   780                           	opt stack 0
   781  0000C7                     	ds	8
   782  0000CF                     _uart_tx:
   783                           	opt stack 0
   784  0000CF                     	ds	8
   785  0000D7                     _usb_rx:
   786                           	opt stack 0
   787  0000D7                     	ds	8
   788  0000DF                     _usb_tx:
   789                           	opt stack 0
   790  0000DF                     	ds	8
   791  0000E7                     terminal_task@command:
   792                           	opt stack 0
   793  0000E7                     	ds	8
   794  0000EF                     _line_coding:
   795                           	opt stack 0
   796  0000EF                     	ds	7
   797  0000F6                     _USBAlternateInterface:
   798                           	opt stack 0
   799  0000F6                     	ds	2
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           postdec1	equ	0xFE5
   807                           fsr1l	equ	0xFE1
   808                           
   809                           	psect	dataBANK0
   810  0000F8                     __pdataBANK0:
   811                           	opt stack 0
   812  0000F8                     I2C_LCD_SetCursor@F8685:
   813                           	opt stack 0
   814  0000F8                     	ds	2
   815  0000FA                     ST7032_cursor@F8640:
   816                           	opt stack 0
   817  0000FA                     	ds	2
   818  0000FC                     epoch_to_caltime@month_cache:
   819                           	opt stack 0
   820  0000FC                     	ds	1
   821                           tblptru	equ	0xFF8
   822                           tblptrh	equ	0xFF7
   823                           tblptrl	equ	0xFF6
   824                           tablat	equ	0xFF5
   825                           postinc0	equ	0xFEE
   826                           wreg	equ	0xFE8
   827                           postdec1	equ	0xFE5
   828                           fsr1l	equ	0xFE1
   829                           
   830                           	psect	bssBANK1
   831  000100                     __pbssBANK1:
   832                           	opt stack 0
   833  000100                     _cdc_data_rx:
   834                           	opt stack 0
   835  000100                     	ds	64
   836  000140                     _cdc_data_tx:
   837                           	opt stack 0
   838  000140                     	ds	64
   839  000180                     terminal_task@op1:
   840                           	opt stack 0
   841  000180                     	ds	25
   842  000199                     terminal_task@op2:
   843                           	opt stack 0
   844  000199                     	ds	25
   845  0001B2                     terminal_task@op3:
   846                           	opt stack 0
   847  0001B2                     	ds	25
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           postdec1	equ	0xFE5
   855                           fsr1l	equ	0xFE1
   856                           
   857                           	psect	bssBANK2
   858  000200                     __pbssBANK2:
   859                           	opt stack 0
   860  000200                     ST7032_init@buf:
   861                           	opt stack 0
   862  000200                     	ds	200
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           postdec1	equ	0xFE5
   870                           fsr1l	equ	0xFE1
   871                           
   872                           	psect	cstackBANK1
   873  0001CB                     __pcstackBANK1:
   874                           	opt stack 0
   875  0001CB                     ??_ringbuf_num:
   876                           
   877                           ; 0 bytes @ 0x0
   878  0001CB                     	ds	6
   879  0001D1                     ??_ringbuf_put:
   880  0001D1                     ??_ringbuf_pop:
   881                           
   882                           ; 0 bytes @ 0x6
   883  0001D1                     	ds	4
   884  0001D5                     ST7032_cursor@row_offsets:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0xA
   888  0001D5                     	ds	2
   889  0001D7                     ST7032_cursor@col:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0xC
   893  0001D7                     	ds	1
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           postinc0	equ	0xFEE
   899                           wreg	equ	0xFE8
   900                           postdec1	equ	0xFE5
   901                           fsr1l	equ	0xFE1
   902                           
   903                           	psect	cstackBANK0
   904  0000FD                     __pcstackBANK0:
   905                           	opt stack 0
   906  0000FD                     ST7032_cursor@row:
   907                           	opt stack 0
   908  0000FD                     ST7032_task@data:
   909                           	opt stack 0
   910  0000FD                     ST7032_puts@s:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x0
   914  0000FD                     	ds	2
   915  0000FF                     ??_main:
   916                           
   917                           ; 0 bytes @ 0x2
   918  0000FF                     	ds	1
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           postdec1	equ	0xFE5
   926                           fsr1l	equ	0xFE1
   927                           
   928                           	psect	cstackCOMRAM
   929  00003A                     __pcstackCOMRAM:
   930                           	opt stack 0
   931  00003A                     ??_ISR:
   932  00003A                     
   933                           ; 2 bytes @ 0x0
   934  00003A                     	ds	15
   935  000049                     ??_I2C_idole_check:
   936  000049                     ??_timer0_init:
   937  000049                     ?_ringbuf_num:
   938                           	opt stack 0
   939  000049                     I2C_send@data:
   940                           	opt stack 0
   941  000049                     timer1_init@clock_select:
   942                           	opt stack 0
   943  000049                     ringbuf_init@rb:
   944                           	opt stack 0
   945  000049                     ringbuf_num@rb:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0xF
   949  000049                     	ds	1
   950  00004A                     ??_timer1_init:
   951  00004A                     I2C_idole_check@mask:
   952                           	opt stack 0
   953  00004A                     timer0_init@prescaler:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x10
   957  00004A                     	ds	1
   958  00004B                     timer1_init@prescaler:
   959                           	opt stack 0
   960  00004B                     ringbuf_init@internal_buf:
   961                           	opt stack 0
   962  00004B                     ringbuf_put@rb:
   963                           	opt stack 0
   964  00004B                     ringbuf_pop@rb:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x11
   968  00004B                     	ds	2
   969  00004D                     ringbuf_put@asciicode:
   970                           	opt stack 0
   971  00004D                     ringbuf_pop@ret:
   972                           	opt stack 0
   973  00004D                     ringbuf_init@bufsize:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x13
   977  00004D                     	ds	1
   978  00004E                     ??_ST7032_task:
   979  00004E                     ST7032_command@wait:
   980                           	opt stack 0
   981  00004E                     ST7032_put@c:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x14
   985  00004E                     	ds	1
   986  00004F                     ST7032_command@command:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x15
   990  00004F                     	ds	1
   991  000050                     tblptru	equ	0xFF8
   992                           tblptrh	equ	0xFF7
   993                           tblptrl	equ	0xFF6
   994                           tablat	equ	0xFF5
   995                           postinc0	equ	0xFEE
   996                           wreg	equ	0xFE8
   997                           postdec1	equ	0xFE5
   998                           fsr1l	equ	0xFE1
   999                           
  1000                           ; 0 bytes @ 0x16
  1001 ;;
  1002 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1003 ;;
  1004 ;; *************** function _main *****************
  1005 ;; Defined at:
  1006 ;;		line 57 in file "main.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  2  1423[None  ] int 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1022 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1024 ;;Total ram usage:        1 bytes
  1025 ;; Hardware stack levels required when called:    8
  1026 ;; This function calls:
  1027 ;;		_ST7032_clear
  1028 ;;		_ST7032_cursor
  1029 ;;		_ST7032_puts
  1030 ;;		_ST7032_task
  1031 ;;		_main_init
  1032 ;; This function is called by:
  1033 ;;		Startup code after reset
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text0
  1038  010420                     __ptext0:
  1039                           	opt stack 0
  1040  010420                     _main:
  1041                           	opt stack 23
  1042                           
  1043                           ;main.c: 58: main_init();
  1044                           
  1045                           ;incstack = 0
  1046  010420  EC2D  F083         	call	_main_init	;wreg free
  1047                           
  1048                           ;main.c: 59: INTCONbits.GIE = 1;
  1049  010424  8EF2               	bsf	intcon,7,c	;volatile
  1050  010426                     l1424:
  1051                           
  1052                           ;main.c: 62: ST7032_task();
  1053  010426  EC00  F080         	call	_ST7032_task	;wreg free
  1054                           
  1055                           ;main.c: 64: LATAbits.LATA1 = !LATAbits.LATA1;
  1056  01042A  B289               	btfsc	3977,1,c	;volatile
  1057  01042C  D004               	goto	u7160
  1058  01042E  0100               	movlb	0	; () banked
  1059  010430  6BFF               	clrf	??_main& (0+255),b
  1060  010432  2BFF               	incf	??_main& (0+255),f,b
  1061  010434  D002               	goto	u7178
  1062  010436                     u7160:
  1063  010436  0100               	movlb	0	; () banked
  1064  010438  6BFF               	clrf	??_main& (0+255),b
  1065  01043A                     u7178:
  1066  01043A  0100               	movlb	0	; () banked
  1067  01043C  47FF               	rlncf	??_main& (0+255),f,b
  1068  01043E  5089               	movf	3977,w,c	;volatile
  1069  010440  0100               	movlb	0	; () banked
  1070  010442  19FF               	xorwf	??_main& (0+255),w,b
  1071  010444  0BFD               	andlw	-3
  1072  010446  19FF               	xorwf	??_main& (0+255),w,b
  1073  010448  6E89               	movwf	3977,c	;volatile
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;main.c: 66: if (one_second_flag) {
  1077  01044A  502E               	movf	_one_second_flag,w,c
  1078  01044C  B4D8               	btfsc	status,2,c
  1079  01044E  D7EB               	goto	l1424
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;main.c: 67: one_second_flag = 0;
  1083  010450  0E00               	movlw	0
  1084  010452  6E2E               	movwf	_one_second_flag,c
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;main.c: 68: ST7032_clear();
  1088  010454  ECA2  F083         	call	_ST7032_clear	;wreg free
  1089                           
  1090                           ;main.c: 69: ST7032_cursor(0, 0);
  1091  010458  0E00               	movlw	0
  1092  01045A  0100               	movlb	0	; () banked
  1093  01045C  6FFD               	movwf	ST7032_cursor@row& (0+255),b
  1094  01045E  0E00               	movlw	0
  1095  010460  EC5E  F083         	call	_ST7032_cursor
  1096                           
  1097                           ;main.c: 70: ST7032_puts("18F27J53");
  1098  010464  0E9A               	movlw	low STR_41
  1099  010466  0100               	movlb	0	; () banked
  1100  010468  6FFD               	movwf	ST7032_puts@s& (0+255),b
  1101  01046A  0EFF               	movlw	high STR_41
  1102  01046C  0100               	movlb	0	; () banked
  1103  01046E  6FFE               	movwf	(ST7032_puts@s+1)& (0+255),b
  1104  010470  EC13  F083         	call	_ST7032_puts	;wreg free
  1105                           
  1106                           ;main.c: 71: ST7032_cursor(0, 1);
  1107  010474  0E01               	movlw	1
  1108  010476  0100               	movlb	0	; () banked
  1109  010478  6FFD               	movwf	ST7032_cursor@row& (0+255),b
  1110  01047A  0E00               	movlw	0
  1111  01047C  EC5E  F083         	call	_ST7032_cursor
  1112                           
  1113                           ;main.c: 72: ST7032_puts("I2C_new");
  1114  010480  0EAC               	movlw	low STR_42
  1115  010482  0100               	movlb	0	; () banked
  1116  010484  6FFD               	movwf	ST7032_puts@s& (0+255),b
  1117  010486  0EFF               	movlw	high STR_42
  1118  010488  0100               	movlb	0	; () banked
  1119  01048A  6FFE               	movwf	(ST7032_puts@s+1)& (0+255),b
  1120  01048C  EC13  F083         	call	_ST7032_puts	;wreg free
  1121  010490  D7CA               	goto	l1424
  1122  010492                     __end_of_main:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           intcon	equ	0xFF2
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec1	equ	0xFE5
  1132                           fsr1l	equ	0xFE1
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function _main_init *****************
  1136 ;; Defined at:
  1137 ;;		line 43 in file "main.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;		None               void
  1144 ;; Registers used:
  1145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    7
  1158 ;; This function calls:
  1159 ;;		_OSC_init
  1160 ;;		_ST7032_init
  1161 ;;		_timer0_init
  1162 ;;		_timer1_init
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text1
  1169  01065A                     __ptext1:
  1170                           	opt stack 0
  1171  01065A                     _main_init:
  1172                           	opt stack 23
  1173                           
  1174                           ;main.c: 44: OSC_init();
  1175                           
  1176                           ;incstack = 0
  1177  01065A  EC9B  F083         	call	_OSC_init	;wreg free
  1178                           
  1179                           ;main.c: 45: TRISA = 0b00010000;
  1180  01065E  0E10               	movlw	16
  1181  010660  6E92               	movwf	3986,c	;volatile
  1182                           
  1183                           ;main.c: 46: TRISB = 0b00110001;
  1184  010662  0E31               	movlw	49
  1185  010664  6E93               	movwf	3987,c	;volatile
  1186                           
  1187                           ;main.c: 47: TRISC = 0b10111010;
  1188  010666  0EBA               	movlw	186
  1189  010668  6E94               	movwf	3988,c	;volatile
  1190                           
  1191                           ;main.c: 48: ANCON0 = 0b11111111;
  1192  01066A  010F               	movlb	15	; () banked
  1193  01066C  6948               	setf	72,b	;volatile
  1194                           
  1195                           ; BSR set to: 15
  1196                           ;main.c: 49: ANCON1 = 0b00011111;
  1197  01066E  0E1F               	movlw	31
  1198  010670  010F               	movlb	15	; () banked
  1199  010672  6F49               	movwf	73,b	;volatile
  1200                           
  1201                           ; BSR set to: 15
  1202                           ;main.c: 50: INTCON2bits.RBPU = 0;
  1203  010674  9EF1               	bcf	intcon2,7,c	;volatile
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;main.c: 52: timer0_init(6);
  1207  010676  0E06               	movlw	6
  1208  010678  EC46  F083         	call	_timer0_init
  1209                           
  1210                           ;main.c: 53: timer1_init(0, 2);
  1211  01067C  0E02               	movlw	2
  1212  01067E  6E49               	movwf	timer1_init@clock_select,c
  1213  010680  0E00               	movlw	0
  1214  010682  ECF1  F082         	call	_timer1_init
  1215                           
  1216                           ;main.c: 54: ST7032_init();
  1217  010686  ECC0  F081         	call	_ST7032_init	;wreg free
  1218  01068A  0012               	return		;funcret
  1219  01068C                     __end_of_main_init:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           intcon	equ	0xFF2
  1226                           intcon2	equ	0xFF1
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1l	equ	0xFE1
  1231                           status	equ	0xFD8
  1232                           
  1233 ;; *************** function _timer1_init *****************
  1234 ;; Defined at:
  1235 ;;		line 70 in file "../My_library/My_PIC.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  prescaler       1    wreg     unsigned char 
  1238 ;;  clock_select    1   15[COMRAM] unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  prescaler       1   17[COMRAM] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;		None               void
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1253 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1254 ;;Total ram usage:        3 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    2
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_main_init
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text2
  1265  0105E2                     __ptext2:
  1266                           	opt stack 0
  1267  0105E2                     _timer1_init:
  1268                           	opt stack 27
  1269                           
  1270                           ;incstack = 0
  1271                           ;timer1_init@prescaler stored from wreg
  1272  0105E2  6E4B               	movwf	timer1_init@prescaler,c
  1273                           
  1274                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  1275  0105E4  C049  F04A         	movff	timer1_init@clock_select,??_timer1_init
  1276  0105E8  3A4A               	swapf	??_timer1_init,f,c
  1277  0105EA  464A               	rlncf	??_timer1_init,f,c
  1278  0105EC  464A               	rlncf	??_timer1_init,f,c
  1279  0105EE  50CD               	movf	4045,w,c	;volatile
  1280  0105F0  184A               	xorwf	??_timer1_init,w,c
  1281  0105F2  0B3F               	andlw	-193
  1282  0105F4  184A               	xorwf	??_timer1_init,w,c
  1283  0105F6  6ECD               	movwf	4045,c	;volatile
  1284                           
  1285                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  1286  0105F8  0E02               	movlw	2
  1287  0105FA  1849               	xorwf	timer1_init@clock_select,w,c
  1288  0105FC  A4D8               	btfss	status,2,c
  1289  0105FE  D002               	goto	l710
  1290  010600  86CD               	bsf	4045,3,c	;volatile
  1291  010602  D001               	goto	l5551
  1292  010604                     l710:
  1293                           
  1294                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  1295  010604  96CD               	bcf	4045,3,c	;volatile
  1296  010606                     l5551:
  1297                           
  1298                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  1299  010606  C04B  F04A         	movff	timer1_init@prescaler,??_timer1_init
  1300  01060A  3A4A               	swapf	??_timer1_init,f,c
  1301  01060C  50CD               	movf	4045,w,c	;volatile
  1302  01060E  184A               	xorwf	??_timer1_init,w,c
  1303  010610  0BCF               	andlw	-49
  1304  010612  184A               	xorwf	??_timer1_init,w,c
  1305  010614  6ECD               	movwf	4045,c	;volatile
  1306                           
  1307                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  1308  010616  84CD               	bsf	4045,2,c	;volatile
  1309                           
  1310                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  1311  010618  92CD               	bcf	4045,1,c	;volatile
  1312                           
  1313                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  1314  01061A  80CD               	bsf	4045,0,c	;volatile
  1315                           
  1316                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  1317  01061C  909F               	bcf	3999,0,c	;volatile
  1318                           
  1319                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  1320  01061E  909E               	bcf	3998,0,c	;volatile
  1321                           
  1322                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  1323  010620  809D               	bsf	3997,0,c	;volatile
  1324                           
  1325                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  1326  010622  8CF2               	bsf	intcon,6,c	;volatile
  1327  010624  0012               	return		;funcret
  1328  010626                     __end_of_timer1_init:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           intcon	equ	0xFF2
  1335                           intcon2	equ	0xFF1
  1336                           postinc0	equ	0xFEE
  1337                           wreg	equ	0xFE8
  1338                           postdec1	equ	0xFE5
  1339                           fsr1l	equ	0xFE1
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _timer0_init *****************
  1343 ;; Defined at:
  1344 ;;		line 34 in file "../My_library/My_PIC.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  prescaler       1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  prescaler       1   16[COMRAM] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;		None               void
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1362 ;;Total ram usage:        2 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    2
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_main_init
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text3
  1373  01068C                     __ptext3:
  1374                           	opt stack 0
  1375  01068C                     _timer0_init:
  1376                           	opt stack 27
  1377                           
  1378                           ;incstack = 0
  1379                           ;timer0_init@prescaler stored from wreg
  1380  01068C  6E4A               	movwf	timer0_init@prescaler,c
  1381                           
  1382                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  1383  01068E  8ED5               	bsf	4053,7,c	;volatile
  1384                           
  1385                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  1386  010690  8CD5               	bsf	4053,6,c	;volatile
  1387                           
  1388                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  1389  010692  9AD5               	bcf	4053,5,c	;volatile
  1390                           
  1391                           ;My_PIC.c: 38: if (prescaler == 0) {
  1392  010694  504A               	movf	timer0_init@prescaler,w,c
  1393  010696  A4D8               	btfss	status,2,c
  1394  010698  D002               	goto	l705
  1395                           
  1396                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  1397  01069A  86D5               	bsf	4053,3,c	;volatile
  1398                           
  1399                           ;My_PIC.c: 40: } else {
  1400  01069C  D00A               	goto	l3167
  1401  01069E                     l705:
  1402                           
  1403                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  1404  01069E  96D5               	bcf	4053,3,c	;volatile
  1405                           
  1406                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  1407  0106A0  C04A  F049         	movff	timer0_init@prescaler,??_timer0_init
  1408  0106A4  0EFF               	movlw	255
  1409  0106A6  2649               	addwf	??_timer0_init,f,c
  1410  0106A8  50D5               	movf	4053,w,c	;volatile
  1411  0106AA  1849               	xorwf	??_timer0_init,w,c
  1412  0106AC  0BF8               	andlw	-8
  1413  0106AE  1849               	xorwf	??_timer0_init,w,c
  1414  0106B0  6ED5               	movwf	4053,c	;volatile
  1415  0106B2                     l3167:
  1416                           
  1417                           ;My_PIC.c: 43: }
  1418                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  1419  0106B2  8AF2               	bsf	intcon,5,c	;volatile
  1420                           
  1421                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  1422  0106B4  94F2               	bcf	intcon,2,c	;volatile
  1423                           
  1424                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  1425  0106B6  94F1               	bcf	intcon2,2,c	;volatile
  1426                           
  1427                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  1428  0106B8  8CF2               	bsf	intcon,6,c	;volatile
  1429  0106BA  0012               	return		;funcret
  1430  0106BC                     __end_of_timer0_init:
  1431                           	opt stack 0
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           intcon	equ	0xFF2
  1437                           intcon2	equ	0xFF1
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           postdec1	equ	0xFE5
  1441                           fsr1l	equ	0xFE1
  1442                           status	equ	0xFD8
  1443                           
  1444 ;; *************** function _ST7032_init *****************
  1445 ;; Defined at:
  1446 ;;		line 60 in file "../My_library/My_ST7032.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;		None               void
  1453 ;; Registers used:
  1454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1464 ;;Total ram usage:        0 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    6
  1467 ;; This function calls:
  1468 ;;		_I2C_init_new
  1469 ;;		_ST7032_clear
  1470 ;;		_ST7032_command
  1471 ;;		_ringbuf_init
  1472 ;;		_ringbuf_put
  1473 ;; This function is called by:
  1474 ;;		_main_init
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text4
  1479  010380                     __ptext4:
  1480                           	opt stack 0
  1481  010380                     _ST7032_init:
  1482                           	opt stack 23
  1483                           
  1484                           ;My_ST7032.c: 61: I2C_init_new();
  1485                           
  1486                           ;incstack = 0
  1487  010380  EC85  F083         	call	_I2C_init_new	;wreg free
  1488                           
  1489                           ;My_ST7032.c: 63: static char buf[200];
  1490                           ;My_ST7032.c: 64: ringbuf_init(&lcd_tx, buf, sizeof (buf));
  1491  010384  0E30               	movlw	low _lcd_tx
  1492  010386  6E49               	movwf	ringbuf_init@rb,c
  1493  010388  0E00               	movlw	high _lcd_tx
  1494  01038A  6E4A               	movwf	ringbuf_init@rb+1,c
  1495  01038C  0E00               	movlw	low ST7032_init@buf
  1496  01038E  6E4B               	movwf	ringbuf_init@internal_buf,c
  1497  010390  0E02               	movlw	high ST7032_init@buf
  1498  010392  6E4C               	movwf	ringbuf_init@internal_buf+1,c
  1499  010394  0E00               	movlw	0
  1500  010396  6E4E               	movwf	ringbuf_init@bufsize+1,c
  1501  010398  0EC8               	movlw	200
  1502  01039A  6E4D               	movwf	ringbuf_init@bufsize,c
  1503  01039C  ECCA  F082         	call	_ringbuf_init	;wreg free
  1504                           
  1505                           ;My_ST7032.c: 66: ringbuf_put(&lcd_tx, 0);
  1506  0103A0  0E30               	movlw	low _lcd_tx
  1507  0103A2  6E4B               	movwf	ringbuf_put@rb,c
  1508  0103A4  0E00               	movlw	high _lcd_tx
  1509  0103A6  6E4C               	movwf	ringbuf_put@rb+1,c
  1510  0103A8  0E00               	movlw	0
  1511  0103AA  6E4D               	movwf	ringbuf_put@asciicode,c
  1512  0103AC  EC01  F081         	call	_ringbuf_put	;wreg free
  1513                           
  1514                           ;My_ST7032.c: 67: ringbuf_put(&lcd_tx, 3);
  1515  0103B0  0E30               	movlw	low _lcd_tx
  1516  0103B2  6E4B               	movwf	ringbuf_put@rb,c
  1517  0103B4  0E00               	movlw	high _lcd_tx
  1518  0103B6  6E4C               	movwf	ringbuf_put@rb+1,c
  1519  0103B8  0E03               	movlw	3
  1520  0103BA  6E4D               	movwf	ringbuf_put@asciicode,c
  1521  0103BC  EC01  F081         	call	_ringbuf_put	;wreg free
  1522                           
  1523                           ;My_ST7032.c: 69: ST7032_command(0x38, 1);
  1524  0103C0  0E01               	movlw	1
  1525  0103C2  6E4E               	movwf	ST7032_command@wait,c
  1526  0103C4  0E38               	movlw	56
  1527  0103C6  ECA0  F082         	call	_ST7032_command
  1528                           
  1529                           ;My_ST7032.c: 70: ST7032_command(0x39, 1);
  1530  0103CA  0E01               	movlw	1
  1531  0103CC  6E4E               	movwf	ST7032_command@wait,c
  1532  0103CE  0E39               	movlw	57
  1533  0103D0  ECA0  F082         	call	_ST7032_command
  1534                           
  1535                           ;My_ST7032.c: 71: ST7032_command(0x14, 1);
  1536  0103D4  0E01               	movlw	1
  1537  0103D6  6E4E               	movwf	ST7032_command@wait,c
  1538  0103D8  0E14               	movlw	20
  1539  0103DA  ECA0  F082         	call	_ST7032_command
  1540                           
  1541                           ;My_ST7032.c: 72: ST7032_command(0x70, 1);
  1542  0103DE  0E01               	movlw	1
  1543  0103E0  6E4E               	movwf	ST7032_command@wait,c
  1544  0103E2  0E70               	movlw	112
  1545  0103E4  ECA0  F082         	call	_ST7032_command
  1546                           
  1547                           ;My_ST7032.c: 73: ST7032_command(0x56, 1);
  1548  0103E8  0E01               	movlw	1
  1549  0103EA  6E4E               	movwf	ST7032_command@wait,c
  1550  0103EC  0E56               	movlw	86
  1551  0103EE  ECA0  F082         	call	_ST7032_command
  1552                           
  1553                           ;My_ST7032.c: 74: ST7032_command(0x6C, 3);
  1554  0103F2  0E03               	movlw	3
  1555  0103F4  6E4E               	movwf	ST7032_command@wait,c
  1556  0103F6  0E6C               	movlw	108
  1557  0103F8  ECA0  F082         	call	_ST7032_command
  1558                           
  1559                           ;My_ST7032.c: 75: ST7032_command(0x38, 1);
  1560  0103FC  0E01               	movlw	1
  1561  0103FE  6E4E               	movwf	ST7032_command@wait,c
  1562  010400  0E38               	movlw	56
  1563  010402  ECA0  F082         	call	_ST7032_command
  1564                           
  1565                           ;My_ST7032.c: 76: ST7032_command(0x0C, 1);
  1566  010406  0E01               	movlw	1
  1567  010408  6E4E               	movwf	ST7032_command@wait,c
  1568  01040A  0E0C               	movlw	12
  1569  01040C  ECA0  F082         	call	_ST7032_command
  1570                           
  1571                           ;My_ST7032.c: 77: ST7032_command(0x06, 1);
  1572  010410  0E01               	movlw	1
  1573  010412  6E4E               	movwf	ST7032_command@wait,c
  1574  010414  0E06               	movlw	6
  1575  010416  ECA0  F082         	call	_ST7032_command
  1576                           
  1577                           ;My_ST7032.c: 78: ST7032_clear();
  1578  01041A  ECA2  F083         	call	_ST7032_clear	;wreg free
  1579  01041E  0012               	return		;funcret
  1580  010420                     __end_of_ST7032_init:
  1581                           	opt stack 0
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           intcon	equ	0xFF2
  1587                           intcon2	equ	0xFF1
  1588                           postinc0	equ	0xFEE
  1589                           wreg	equ	0xFE8
  1590                           postdec1	equ	0xFE5
  1591                           fsr1l	equ	0xFE1
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function _ringbuf_init *****************
  1595 ;; Defined at:
  1596 ;;		line 5 in file "../My_library/My_ringbuf.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  rb              2   15[COMRAM] PTR struct ringbuf
  1599 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  1600 ;;  internal_buf    2   17[COMRAM] PTR unsigned char 
  1601 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  1602 ;;  bufsize         2   19[COMRAM] unsigned int 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;		None               void
  1607 ;; Registers used:
  1608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1614 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1617 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1618 ;;Total ram usage:        6 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    2
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_ST7032_init
  1625 ;;		_terminal_task
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text5
  1630  010594                     __ptext5:
  1631                           	opt stack 0
  1632  010594                     _ringbuf_init:
  1633                           	opt stack 26
  1634                           
  1635                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  1636                           
  1637                           ;incstack = 0
  1638  010594  C049  FFD9         	movff	ringbuf_init@rb,fsr2l
  1639  010598  C04A  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1640  01059C  C04B  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1641  0105A0  C04C  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1642                           
  1643                           ;My_ringbuf.c: 7: rb->size = bufsize;
  1644  0105A4  EE20 F002          	lfsr	2,2
  1645  0105A8  5049               	movf	ringbuf_init@rb,w,c
  1646  0105AA  26D9               	addwf	fsr2l,f,c
  1647  0105AC  504A               	movf	ringbuf_init@rb+1,w,c
  1648  0105AE  22DA               	addwfc	fsr2h,f,c
  1649  0105B0  C04D  FFDE         	movff	ringbuf_init@bufsize,postinc2
  1650  0105B4  C04E  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  1651                           
  1652                           ;My_ringbuf.c: 8: rb->head = 0;
  1653  0105B8  EE20 F004          	lfsr	2,4
  1654  0105BC  5049               	movf	ringbuf_init@rb,w,c
  1655  0105BE  26D9               	addwf	fsr2l,f,c
  1656  0105C0  504A               	movf	ringbuf_init@rb+1,w,c
  1657  0105C2  22DA               	addwfc	fsr2h,f,c
  1658  0105C4  0E00               	movlw	0
  1659  0105C6  6EDE               	movwf	postinc2,c
  1660  0105C8  0E00               	movlw	0
  1661  0105CA  6EDD               	movwf	postdec2,c
  1662                           
  1663                           ;My_ringbuf.c: 9: rb->tail = 0;
  1664  0105CC  EE20 F006          	lfsr	2,6
  1665  0105D0  5049               	movf	ringbuf_init@rb,w,c
  1666  0105D2  26D9               	addwf	fsr2l,f,c
  1667  0105D4  504A               	movf	ringbuf_init@rb+1,w,c
  1668  0105D6  22DA               	addwfc	fsr2h,f,c
  1669  0105D8  0E00               	movlw	0
  1670  0105DA  6EDE               	movwf	postinc2,c
  1671  0105DC  0E00               	movlw	0
  1672  0105DE  6EDD               	movwf	postdec2,c
  1673  0105E0  0012               	return		;funcret
  1674  0105E2                     __end_of_ringbuf_init:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           intcon	equ	0xFF2
  1681                           intcon2	equ	0xFF1
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1l	equ	0xFE1
  1686                           postinc2	equ	0xFDE
  1687                           postdec2	equ	0xFDD
  1688                           fsr2h	equ	0xFDA
  1689                           fsr2l	equ	0xFD9
  1690                           status	equ	0xFD8
  1691                           
  1692 ;; *************** function _ST7032_clear *****************
  1693 ;; Defined at:
  1694 ;;		line 24 in file "../My_library/My_ST7032.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;		None               void
  1701 ;; Registers used:
  1702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1712 ;;Total ram usage:        0 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    5
  1715 ;; This function calls:
  1716 ;;		_ST7032_command
  1717 ;; This function is called by:
  1718 ;;		_ST7032_init
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text6
  1724  010744                     __ptext6:
  1725                           	opt stack 0
  1726  010744                     _ST7032_clear:
  1727                           	opt stack 23
  1728                           
  1729                           ;My_ST7032.c: 25: ST7032_command(0x01, 2);
  1730                           
  1731                           ;incstack = 0
  1732  010744  0E02               	movlw	2
  1733  010746  6E4E               	movwf	ST7032_command@wait,c
  1734  010748  0E01               	movlw	1
  1735  01074A  ECA0  F082         	call	_ST7032_command
  1736  01074E  0012               	return		;funcret
  1737  010750                     __end_of_ST7032_clear:
  1738                           	opt stack 0
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           intcon	equ	0xFF2
  1744                           intcon2	equ	0xFF1
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1l	equ	0xFE1
  1749                           postinc2	equ	0xFDE
  1750                           postdec2	equ	0xFDD
  1751                           fsr2h	equ	0xFDA
  1752                           fsr2l	equ	0xFD9
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _I2C_init_new *****************
  1756 ;; Defined at:
  1757 ;;		line 31 in file "../My_library/My_I2C.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;		None               void
  1764 ;; Registers used:
  1765 ;;		wreg, status,2
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    2
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_ST7032_init
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text7
  1786  01070A                     __ptext7:
  1787                           	opt stack 0
  1788  01070A                     _I2C_init_new:
  1789                           	opt stack 26
  1790                           
  1791                           ;My_I2C.c: 32: SSP1STAT = 0b10000000;
  1792                           
  1793                           ;incstack = 0
  1794  01070A  0E80               	movlw	128
  1795  01070C  6EC7               	movwf	4039,c	;volatile
  1796                           
  1797                           ;My_I2C.c: 33: SSP1CON1 = 0b00101000;
  1798  01070E  0E28               	movlw	40
  1799  010710  6EC6               	movwf	4038,c	;volatile
  1800                           
  1801                           ;My_I2C.c: 34: SSP1ADD = 0x13;
  1802  010712  0E13               	movlw	19
  1803  010714  6EC8               	movwf	4040,c	;volatile
  1804                           
  1805                           ;My_I2C.c: 35: PIE1bits.SSP1IE = 1;
  1806  010716  869D               	bsf	3997,3,c	;volatile
  1807                           
  1808                           ;My_I2C.c: 36: IPR1bits.SSP1IP = 0;
  1809  010718  969F               	bcf	3999,3,c	;volatile
  1810                           
  1811                           ;My_I2C.c: 37: PIR1bits.SSP1IF = 0;
  1812  01071A  969E               	bcf	3998,3,c	;volatile
  1813                           
  1814                           ;My_I2C.c: 38: PIE2bits.BCL1IE = 1;
  1815  01071C  86A0               	bsf	4000,3,c	;volatile
  1816                           
  1817                           ;My_I2C.c: 39: IPR2bits.BCL1IP = 0;
  1818  01071E  96A2               	bcf	4002,3,c	;volatile
  1819                           
  1820                           ;My_I2C.c: 40: PIR2bits.BCL1IF = 0;
  1821  010720  96A1               	bcf	4001,3,c	;volatile
  1822                           
  1823                           ;My_I2C.c: 41: INTCONbits.PEIE = 1;
  1824  010722  8CF2               	bsf	intcon,6,c	;volatile
  1825  010724  0012               	return		;funcret
  1826  010726                     __end_of_I2C_init_new:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           intcon	equ	0xFF2
  1833                           intcon2	equ	0xFF1
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           postdec1	equ	0xFE5
  1837                           fsr1l	equ	0xFE1
  1838                           postinc2	equ	0xFDE
  1839                           postdec2	equ	0xFDD
  1840                           fsr2h	equ	0xFDA
  1841                           fsr2l	equ	0xFD9
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _OSC_init *****************
  1845 ;; Defined at:
  1846 ;;		line 8 in file "../My_library/My_PIC.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;		None               void
  1853 ;; Registers used:
  1854 ;;		wreg, status,2
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    2
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_main_init
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text8
  1875  010736                     __ptext8:
  1876                           	opt stack 0
  1877  010736                     _OSC_init:
  1878                           	opt stack 27
  1879                           
  1880                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  1881                           
  1882                           ;incstack = 0
  1883  010736  88D3               	bsf	4051,4,c	;volatile
  1884  010738  8AD3               	bsf	4051,5,c	;volatile
  1885  01073A  8CD3               	bsf	4051,6,c	;volatile
  1886                           
  1887                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  1888  01073C  8C9B               	bsf	3995,6,c	;volatile
  1889                           
  1890                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  1891  01073E  0EFC               	movlw	-4
  1892  010740  16D3               	andwf	4051,f,c	;volatile
  1893  010742  0012               	return		;funcret
  1894  010744                     __end_of_OSC_init:
  1895                           	opt stack 0
  1896                           tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           intcon	equ	0xFF2
  1901                           intcon2	equ	0xFF1
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           postdec1	equ	0xFE5
  1905                           fsr1l	equ	0xFE1
  1906                           postinc2	equ	0xFDE
  1907                           postdec2	equ	0xFDD
  1908                           fsr2h	equ	0xFDA
  1909                           fsr2l	equ	0xFD9
  1910                           status	equ	0xFD8
  1911                           
  1912 ;; *************** function _ST7032_task *****************
  1913 ;; Defined at:
  1914 ;;		line 81 in file "../My_library/My_ST7032.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  data            1    0[BANK0 ] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;		None               void
  1921 ;; Registers used:
  1922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1931 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;Total ram usage:        3 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    4
  1935 ;; This function calls:
  1936 ;;		_I2C_idole_check
  1937 ;;		_I2C_send
  1938 ;;		_I2C_start
  1939 ;;		_I2C_stop
  1940 ;;		_ringbuf_num
  1941 ;;		_ringbuf_pop
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text9
  1948  010000                     __ptext9:
  1949                           	opt stack 0
  1950  010000                     _ST7032_task:
  1951                           	opt stack 26
  1952                           
  1953                           ;My_ST7032.c: 82: if (I2C_idole_check(0x05)) return;
  1954                           
  1955                           ;incstack = 0
  1956  010000  0E05               	movlw	5
  1957  010002  EC93  F083         	call	_I2C_idole_check
  1958  010006  0900               	iorlw	0
  1959  010008  A4D8               	btfss	status,2,c
  1960  01000A  0012               	return	
  1961  01000C  D07D               	goto	l7325
  1962  01000E                     l7273:
  1963                           
  1964                           ;My_ST7032.c: 89: if (ringbuf_num(&lcd_tx)) {
  1965  01000E  0E30               	movlw	low _lcd_tx
  1966  010010  6E49               	movwf	ringbuf_num@rb,c
  1967  010012  0E00               	movlw	high _lcd_tx
  1968  010014  6E4A               	movwf	ringbuf_num@rb+1,c
  1969  010016  EC95  F080         	call	_ringbuf_num	;wreg free
  1970  01001A  5049               	movf	?_ringbuf_num,w,c
  1971  01001C  104A               	iorwf	?_ringbuf_num+1,w,c
  1972  01001E  B4D8               	btfsc	status,2,c
  1973  010020  0012               	return	
  1974                           
  1975                           ;My_ST7032.c: 90: st7032_state = ST7032_START;
  1976  010022  0E01               	movlw	1
  1977  010024  6E1D               	movwf	ST7032_task@st7032_state,c
  1978                           
  1979                           ;My_ST7032.c: 91: }
  1980                           ;My_ST7032.c: 92: break;
  1981  010026  0012               	return	
  1982  010028                     l7277:
  1983                           
  1984                           ;My_ST7032.c: 94: I2C_sent_flag = 1;
  1985  010028  0E01               	movlw	1
  1986  01002A  6E1F               	movwf	_I2C_sent_flag,c
  1987                           
  1988                           ;My_ST7032.c: 95: I2C_start();
  1989  01002C  ECB1  F083         	call	_I2C_start	;wreg free
  1990                           
  1991                           ;My_ST7032.c: 96: st7032_state = ST7032_SEND;
  1992  010030  0E02               	movlw	2
  1993  010032  6E1D               	movwf	ST7032_task@st7032_state,c
  1994                           
  1995                           ;My_ST7032.c: 97: break;
  1996  010034  0012               	return	
  1997  010036                     l7283:
  1998                           
  1999                           ;My_ST7032.c: 99: if (!I2C_sent_flag) return;
  2000  010036  501F               	movf	_I2C_sent_flag,w,c
  2001  010038  B4D8               	btfsc	status,2,c
  2002  01003A  0012               	return	
  2003                           
  2004                           ;My_ST7032.c: 100: uint8_t data = ringbuf_pop(&lcd_tx);
  2005  01003C  0E30               	movlw	low _lcd_tx
  2006  01003E  6E4B               	movwf	ringbuf_pop@rb,c
  2007  010040  0E00               	movlw	high _lcd_tx
  2008  010042  6E4C               	movwf	ringbuf_pop@rb+1,c
  2009  010044  EC63  F081         	call	_ringbuf_pop	;wreg free
  2010  010048  0100               	movlb	0	; () banked
  2011  01004A  6FFD               	movwf	ST7032_task@data& (0+255),b
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;My_ST7032.c: 101: if (data != 0) {
  2015  01004C  0100               	movlb	0	; () banked
  2016  01004E  51FD               	movf	ST7032_task@data& (0+255),w,b
  2017  010050  0100               	movlb	0	; () banked
  2018  010052  B4D8               	btfsc	status,2,c
  2019  010054  D007               	goto	l7295
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;My_ST7032.c: 102: I2C_sent_flag = 0;
  2023  010056  0E00               	movlw	0
  2024  010058  6E1F               	movwf	_I2C_sent_flag,c
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;My_ST7032.c: 103: I2C_send(data);
  2028  01005A  0100               	movlb	0	; () banked
  2029  01005C  51FD               	movf	ST7032_task@data& (0+255),w,b
  2030  01005E  ECA8  F083         	call	_I2C_send
  2031                           
  2032                           ;My_ST7032.c: 104: } else {
  2033  010062  0012               	return	
  2034  010064                     l7295:
  2035                           
  2036                           ;My_ST7032.c: 105: wait = ringbuf_pop(&lcd_tx);
  2037  010064  0E30               	movlw	low _lcd_tx
  2038  010066  6E4B               	movwf	ringbuf_pop@rb,c
  2039  010068  0E00               	movlw	high _lcd_tx
  2040  01006A  6E4C               	movwf	ringbuf_pop@rb+1,c
  2041  01006C  EC63  F081         	call	_ringbuf_pop	;wreg free
  2042  010070  6E4E               	movwf	??_ST7032_task& (0+255),c
  2043  010072  504E               	movf	??_ST7032_task,w,c
  2044  010074  0100               	movlb	0	; () banked
  2045  010076  6F84               	movwf	ST7032_task@wait& (0+255),b
  2046  010078  6B85               	clrf	(ST7032_task@wait+1)& (0+255),b
  2047                           
  2048                           ;My_ST7032.c: 106: switch (wait) {
  2049  01007A  D01A               	goto	l7309
  2050  01007C                     l7297:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;My_ST7032.c: 108: wait = 0;
  2054  01007C  0E00               	movlw	0
  2055  01007E  0100               	movlb	0	; () banked
  2056  010080  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2057  010082  0E00               	movlw	0
  2058  010084  D013               	goto	L4
  2059  010086                     l7299:
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;My_ST7032.c: 111: wait = 2;
  2063  010086  0E00               	movlw	0
  2064  010088  0100               	movlb	0	; () banked
  2065  01008A  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2066  01008C  0E02               	movlw	2
  2067  01008E  D00E               	goto	L4
  2068  010090                     l7301:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;My_ST7032.c: 114: wait = 25;
  2072  010090  0E00               	movlw	0
  2073  010092  0100               	movlb	0	; () banked
  2074  010094  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2075  010096  0E19               	movlw	25
  2076  010098  D009               	goto	L4
  2077  01009A                     l7303:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;My_ST7032.c: 117: wait = 800;
  2081  01009A  0E03               	movlw	3
  2082  01009C  0100               	movlb	0	; () banked
  2083  01009E  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2084  0100A0  0E20               	movlw	32
  2085  0100A2  D004               	goto	L4
  2086  0100A4                     l7305:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;My_ST7032.c: 120: wait = 1;
  2090  0100A4  0E00               	movlw	0
  2091  0100A6  0100               	movlb	0	; () banked
  2092  0100A8  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2093  0100AA  0E01               	movlw	1
  2094  0100AC                     L4:
  2095  0100AC  6F84               	movwf	ST7032_task@wait& (0+255),b
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;My_ST7032.c: 122: }
  2099                           
  2100                           ;My_ST7032.c: 121: break;
  2101  0100AE  D016               	goto	l7311
  2102  0100B0                     l7309:
  2103                           
  2104                           ; BSR set to: 0
  2105  0100B0  C084  F04E         	movff	ST7032_task@wait,??_ST7032_task
  2106  0100B4  C085  F04F         	movff	ST7032_task@wait+1,??_ST7032_task+1
  2107                           
  2108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2109                           ; Switch size 1, requested type "space"
  2110                           ; Number of cases is 1, Range of values is 0 to 0
  2111                           ; switch strategies available:
  2112                           ; Name         Instructions Cycles
  2113                           ; simple_byte            4     3 (average)
  2114                           ;	Chosen strategy is simple_byte
  2115  0100B8  504F               	movf	??_ST7032_task+1,w,c
  2116  0100BA  0A00               	xorlw	0	; case 0
  2117  0100BC  A4D8               	btfss	status,2,c
  2118  0100BE  D7F2               	goto	l7305
  2119                           
  2120                           ; BSR set to: 0
  2121                           ; Switch size 1, requested type "space"
  2122                           ; Number of cases is 4, Range of values is 0 to 3
  2123                           ; switch strategies available:
  2124                           ; Name         Instructions Cycles
  2125                           ; simple_byte           13     7 (average)
  2126                           ;	Chosen strategy is simple_byte
  2127  0100C0  504E               	movf	??_ST7032_task,w,c
  2128  0100C2  0A00               	xorlw	0	; case 0
  2129  0100C4  B4D8               	btfsc	status,2,c
  2130  0100C6  D7DA               	goto	l7297
  2131  0100C8  0A01               	xorlw	1	; case 1
  2132  0100CA  B4D8               	btfsc	status,2,c
  2133  0100CC  D7DC               	goto	l7299
  2134  0100CE  0A03               	xorlw	3	; case 2
  2135  0100D0  B4D8               	btfsc	status,2,c
  2136  0100D2  D7DE               	goto	l7301
  2137  0100D4  0A01               	xorlw	1	; case 3
  2138  0100D6  B4D8               	btfsc	status,2,c
  2139  0100D8  D7E0               	goto	l7303
  2140  0100DA  D7E4               	goto	l7305
  2141  0100DC                     l7311:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;My_ST7032.c: 123: st7032_state = ST7032_STOP;
  2145  0100DC  0E03               	movlw	3
  2146  0100DE  6E1D               	movwf	ST7032_task@st7032_state,c
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;My_ST7032.c: 124: }
  2150                           ;My_ST7032.c: 125: break;
  2151  0100E0  0012               	return	
  2152  0100E2                     l7313:
  2153                           
  2154                           ;My_ST7032.c: 127: I2C_stop();
  2155  0100E2  ECAF  F083         	call	_I2C_stop	;wreg free
  2156                           
  2157                           ;My_ST7032.c: 128: st7032_state = ST7032_WAIT;
  2158  0100E6  0E04               	movlw	4
  2159  0100E8  6E1D               	movwf	ST7032_task@st7032_state,c
  2160                           
  2161                           ;My_ST7032.c: 129: break;
  2162  0100EA  0012               	return	
  2163  0100EC                     l7317:
  2164                           
  2165                           ;My_ST7032.c: 131: if (wait == 0) st7032_state = ST7032_IDOLE;
  2166  0100EC  0100               	movlb	0	; () banked
  2167  0100EE  5184               	movf	ST7032_task@wait& (0+255),w,b
  2168  0100F0  0100               	movlb	0	; () banked
  2169  0100F2  1185               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
  2170  0100F4  A4D8               	btfss	status,2,c
  2171  0100F6  D003               	goto	l7321
  2172                           
  2173                           ; BSR set to: 0
  2174  0100F8  0E00               	movlw	0
  2175  0100FA  6E1D               	movwf	ST7032_task@st7032_state,c
  2176  0100FC  0012               	return	
  2177  0100FE                     l7321:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;My_ST7032.c: 132: else wait--;
  2181  0100FE  0100               	movlb	0	; () banked
  2182  010100  0784               	decf	ST7032_task@wait& (0+255),f,b
  2183  010102  A0D8               	btfss	status,0,c
  2184  010104  0785               	decf	(ST7032_task@wait+1)& (0+255),f,b
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;My_ST7032.c: 134: }
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;My_ST7032.c: 133: break;
  2191  010106  0012               	return	
  2192  010108                     l7325:
  2193  010108  501D               	movf	ST7032_task@st7032_state,w,c
  2194                           
  2195                           ; Switch size 1, requested type "space"
  2196                           ; Number of cases is 5, Range of values is 0 to 4
  2197                           ; switch strategies available:
  2198                           ; Name         Instructions Cycles
  2199                           ; simple_byte           16     9 (average)
  2200                           ;	Chosen strategy is simple_byte
  2201  01010A  0A00               	xorlw	0	; case 0
  2202  01010C  B4D8               	btfsc	status,2,c
  2203  01010E  D77F               	goto	l7273
  2204  010110  0A01               	xorlw	1	; case 1
  2205  010112  B4D8               	btfsc	status,2,c
  2206  010114  D789               	goto	l7277
  2207  010116  0A03               	xorlw	3	; case 2
  2208  010118  B4D8               	btfsc	status,2,c
  2209  01011A  D78D               	goto	l7283
  2210  01011C  0A01               	xorlw	1	; case 3
  2211  01011E  B4D8               	btfsc	status,2,c
  2212  010120  D7E0               	goto	l7313
  2213  010122  0A07               	xorlw	7	; case 4
  2214  010124  A4D8               	btfss	status,2,c
  2215  010126  0012               	return	
  2216  010128  D7E1               	goto	l7317
  2217  01012A                     __end_of_ST7032_task:
  2218                           	opt stack 0
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           intcon	equ	0xFF2
  2224                           intcon2	equ	0xFF1
  2225                           postinc0	equ	0xFEE
  2226                           wreg	equ	0xFE8
  2227                           postdec1	equ	0xFE5
  2228                           fsr1l	equ	0xFE1
  2229                           postinc2	equ	0xFDE
  2230                           postdec2	equ	0xFDD
  2231                           fsr2h	equ	0xFDA
  2232                           fsr2l	equ	0xFD9
  2233                           status	equ	0xFD8
  2234                           
  2235 ;; *************** function _ringbuf_pop *****************
  2236 ;; Defined at:
  2237 ;;		line 45 in file "../My_library/My_ringbuf.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  rb              2   17[COMRAM] PTR struct ringbuf
  2240 ;;		 -> usb_tx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  ret             1   19[COMRAM] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      unsigned char 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Totals:         3       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;Total ram usage:        7 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    3
  2259 ;; This function calls:
  2260 ;;		_ringbuf_num
  2261 ;; This function is called by:
  2262 ;;		_ST7032_task
  2263 ;;		_terminal_task
  2264 ;;		_UART_ISR
  2265 ;;		_USB_task
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text10
  2270  0102C6                     __ptext10:
  2271                           	opt stack 0
  2272  0102C6                     _ringbuf_pop:
  2273                           	opt stack 26
  2274                           
  2275                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  2276                           
  2277                           ;incstack = 0
  2278  0102C6  C04B  F049         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2279  0102CA  C04C  F04A         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2280  0102CE  EC95  F080         	call	_ringbuf_num	;wreg free
  2281  0102D2  5049               	movf	?_ringbuf_num,w,c
  2282  0102D4  104A               	iorwf	?_ringbuf_num+1,w,c
  2283  0102D6  B4D8               	btfsc	status,2,c
  2284  0102D8  D051               	goto	l7195
  2285                           
  2286                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  2287  0102DA  EE20 F006          	lfsr	2,6
  2288  0102DE  504B               	movf	ringbuf_pop@rb,w,c
  2289  0102E0  26D9               	addwf	fsr2l,f,c
  2290  0102E2  504C               	movf	ringbuf_pop@rb+1,w,c
  2291  0102E4  22DA               	addwfc	fsr2h,f,c
  2292  0102E6  CFDE F1D1          	movff	postinc2,??_ringbuf_pop
  2293  0102EA  CFDD F1D2          	movff	postdec2,??_ringbuf_pop+1
  2294  0102EE  C04B  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2295  0102F2  C04C  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2296  0102F6  CFDE F1D3          	movff	postinc2,??_ringbuf_pop+2
  2297  0102FA  CFDD F1D4          	movff	postdec2,??_ringbuf_pop+3
  2298  0102FE  0101               	movlb	1	; () banked
  2299  010300  51D1               	movf	??_ringbuf_pop& (0+255),w,b
  2300  010302  0101               	movlb	1	; () banked
  2301  010304  25D3               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2302  010306  6ED9               	movwf	fsr2l,c
  2303  010308  0101               	movlb	1	; () banked
  2304  01030A  51D2               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2305  01030C  0101               	movlb	1	; () banked
  2306  01030E  21D4               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2307  010310  6EDA               	movwf	fsr2h,c
  2308  010312  50DF               	movf	indf2,w,c
  2309  010314  6E4D               	movwf	ringbuf_pop@ret,c
  2310                           
  2311                           ; BSR set to: 1
  2312                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  2313  010316  EE20 F002          	lfsr	2,2
  2314  01031A  504B               	movf	ringbuf_pop@rb,w,c
  2315  01031C  26D9               	addwf	fsr2l,f,c
  2316  01031E  504C               	movf	ringbuf_pop@rb+1,w,c
  2317  010320  22DA               	addwfc	fsr2h,f,c
  2318  010322  EE10 F006          	lfsr	1,6
  2319  010326  504B               	movf	ringbuf_pop@rb,w,c
  2320  010328  26E1               	addwf	fsr1l,f,c
  2321  01032A  504C               	movf	ringbuf_pop@rb+1,w,c
  2322  01032C  22E2               	addwfc	fsr1h,f,c
  2323  01032E  CFE6 F1D3          	movff	postinc1,??_ringbuf_pop+2
  2324  010332  CFE5 F1D4          	movff	postdec1,??_ringbuf_pop+3
  2325  010336  0E01               	movlw	1
  2326  010338  0101               	movlb	1	; () banked
  2327  01033A  27D3               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2328  01033C  0E00               	movlw	0
  2329  01033E  23D4               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2330  010340  50DE               	movf	postinc2,w,c
  2331  010342  0101               	movlb	1	; () banked
  2332  010344  5DD3               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2333  010346  50DE               	movf	postinc2,w,c
  2334  010348  0101               	movlb	1	; () banked
  2335  01034A  59D4               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2336  01034C  B0D8               	btfsc	status,0,c
  2337  01034E  D00A               	goto	l7187
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;My_ringbuf.c: 49: rb->tail++;
  2341  010350  EE20 F006          	lfsr	2,6
  2342  010354  504B               	movf	ringbuf_pop@rb,w,c
  2343  010356  26D9               	addwf	fsr2l,f,c
  2344  010358  504C               	movf	ringbuf_pop@rb+1,w,c
  2345  01035A  22DA               	addwfc	fsr2h,f,c
  2346  01035C  2ADE               	incf	postinc2,f,c
  2347  01035E  0E00               	movlw	0
  2348  010360  22DD               	addwfc	postdec2,f,c
  2349                           
  2350                           ;My_ringbuf.c: 50: } else {
  2351  010362  D00A               	goto	l7189
  2352  010364                     l7187:
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;My_ringbuf.c: 51: rb->tail = 0;
  2356  010364  EE20 F006          	lfsr	2,6
  2357  010368  504B               	movf	ringbuf_pop@rb,w,c
  2358  01036A  26D9               	addwf	fsr2l,f,c
  2359  01036C  504C               	movf	ringbuf_pop@rb+1,w,c
  2360  01036E  22DA               	addwfc	fsr2h,f,c
  2361  010370  0E00               	movlw	0
  2362  010372  6EDE               	movwf	postinc2,c
  2363  010374  0E00               	movlw	0
  2364  010376  6EDD               	movwf	postdec2,c
  2365  010378                     l7189:
  2366                           
  2367                           ; BSR set to: 1
  2368                           ;My_ringbuf.c: 52: }
  2369                           ;My_ringbuf.c: 53: return ret;
  2370  010378  504D               	movf	ringbuf_pop@ret,w,c
  2371                           
  2372                           ; BSR set to: 1
  2373                           ;My_ringbuf.c: 54: } else {
  2374                           
  2375                           ; BSR set to: 1
  2376  01037A  0012               	return	
  2377  01037C                     l7195:
  2378                           
  2379                           ;My_ringbuf.c: 55: return 0;
  2380  01037C  0E00               	movlw	0
  2381  01037E  0012               	return	
  2382  010380                     __end_of_ringbuf_pop:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           intcon	equ	0xFF2
  2389                           intcon2	equ	0xFF1
  2390                           postinc0	equ	0xFEE
  2391                           wreg	equ	0xFE8
  2392                           postinc1	equ	0xFE6
  2393                           postdec1	equ	0xFE5
  2394                           fsr1h	equ	0xFE2
  2395                           fsr1l	equ	0xFE1
  2396                           indf2	equ	0xFDF
  2397                           postinc2	equ	0xFDE
  2398                           postdec2	equ	0xFDD
  2399                           fsr2h	equ	0xFDA
  2400                           fsr2l	equ	0xFD9
  2401                           status	equ	0xFD8
  2402                           
  2403 ;; *************** function _I2C_stop *****************
  2404 ;; Defined at:
  2405 ;;		line 19 in file "../My_library/My_I2C.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;		None               void
  2412 ;; Registers used:
  2413 ;;		None
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;Total ram usage:        0 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    2
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_ST7032_task
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text11
  2434  01075E                     __ptext11:
  2435                           	opt stack 0
  2436  01075E                     _I2C_stop:
  2437                           	opt stack 27
  2438                           
  2439                           ;My_I2C.c: 20: SSP1CON2bits.PEN = 1;
  2440                           
  2441                           ;incstack = 0
  2442  01075E  84C5               	bsf	4037,2,c	;volatile
  2443  010760  0012               	return		;funcret
  2444  010762                     __end_of_I2C_stop:
  2445                           	opt stack 0
  2446                           tblptru	equ	0xFF8
  2447                           tblptrh	equ	0xFF7
  2448                           tblptrl	equ	0xFF6
  2449                           tablat	equ	0xFF5
  2450                           intcon	equ	0xFF2
  2451                           intcon2	equ	0xFF1
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           postinc1	equ	0xFE6
  2455                           postdec1	equ	0xFE5
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           indf2	equ	0xFDF
  2459                           postinc2	equ	0xFDE
  2460                           postdec2	equ	0xFDD
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function _I2C_start *****************
  2466 ;; Defined at:
  2467 ;;		line 11 in file "../My_library/My_I2C.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;		None               void
  2474 ;; Registers used:
  2475 ;;		None
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    2
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_ST7032_task
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text12
  2496  010762                     __ptext12:
  2497                           	opt stack 0
  2498  010762                     _I2C_start:
  2499                           	opt stack 27
  2500                           
  2501                           ;My_I2C.c: 12: SSP1CON2bits.SEN = 1;
  2502                           
  2503                           ;incstack = 0
  2504  010762  80C5               	bsf	4037,0,c	;volatile
  2505  010764  0012               	return		;funcret
  2506  010766                     __end_of_I2C_start:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           intcon	equ	0xFF2
  2513                           intcon2	equ	0xFF1
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postinc1	equ	0xFE6
  2517                           postdec1	equ	0xFE5
  2518                           fsr1h	equ	0xFE2
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _I2C_send *****************
  2528 ;; Defined at:
  2529 ;;		line 23 in file "../My_library/My_I2C.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  data            1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  data            1   15[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;		None               void
  2536 ;; Registers used:
  2537 ;;		wreg
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;Total ram usage:        1 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    2
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_ST7032_task
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text13
  2558  010750                     __ptext13:
  2559                           	opt stack 0
  2560  010750                     _I2C_send:
  2561                           	opt stack 27
  2562                           
  2563                           ;incstack = 0
  2564                           ;I2C_send@data stored from wreg
  2565  010750  6E49               	movwf	I2C_send@data,c
  2566                           
  2567                           ;My_I2C.c: 24: SSPBUF = data;
  2568  010752  C049  FFC9         	movff	I2C_send@data,4041	;volatile
  2569  010756  0012               	return		;funcret
  2570  010758                     __end_of_I2C_send:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           intcon	equ	0xFF2
  2577                           intcon2	equ	0xFF1
  2578                           postinc0	equ	0xFEE
  2579                           wreg	equ	0xFE8
  2580                           postinc1	equ	0xFE6
  2581                           postdec1	equ	0xFE5
  2582                           fsr1h	equ	0xFE2
  2583                           fsr1l	equ	0xFE1
  2584                           indf2	equ	0xFDF
  2585                           postinc2	equ	0xFDE
  2586                           postdec2	equ	0xFDD
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _I2C_idole_check *****************
  2592 ;; Defined at:
  2593 ;;		line 7 in file "../My_library/My_I2C.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  mask            1    wreg     unsigned char 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  mask            1   16[COMRAM] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      unsigned char 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2611 ;;Total ram usage:        2 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    2
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_ST7032_task
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text14
  2622  010726                     __ptext14:
  2623                           	opt stack 0
  2624  010726                     _I2C_idole_check:
  2625                           	opt stack 27
  2626                           
  2627                           ;incstack = 0
  2628                           ;I2C_idole_check@mask stored from wreg
  2629  010726  6E4A               	movwf	I2C_idole_check@mask,c
  2630                           
  2631                           ;My_I2C.c: 8: return ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  2632  010728  50C7               	movf	4039,w,c	;volatile
  2633  01072A  144A               	andwf	I2C_idole_check@mask,w,c
  2634  01072C  6E49               	movwf	??_I2C_idole_check& (0+255),c
  2635  01072E  50C5               	movf	4037,w,c	;volatile
  2636  010730  0B1F               	andlw	31
  2637  010732  1049               	iorwf	??_I2C_idole_check,w,c
  2638  010734  0012               	return	
  2639  010736                     __end_of_I2C_idole_check:
  2640                           	opt stack 0
  2641                           tblptru	equ	0xFF8
  2642                           tblptrh	equ	0xFF7
  2643                           tblptrl	equ	0xFF6
  2644                           tablat	equ	0xFF5
  2645                           intcon	equ	0xFF2
  2646                           intcon2	equ	0xFF1
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postinc1	equ	0xFE6
  2650                           postdec1	equ	0xFE5
  2651                           fsr1h	equ	0xFE2
  2652                           fsr1l	equ	0xFE1
  2653                           indf2	equ	0xFDF
  2654                           postinc2	equ	0xFDE
  2655                           postdec2	equ	0xFDD
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function _ST7032_puts *****************
  2661 ;; Defined at:
  2662 ;;		line 41 in file "../My_library/My_ST7032.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2665 ;;		 -> STR_42(8), STR_41(9), 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;		None               void
  2670 ;; Registers used:
  2671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;Total ram usage:        2 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    5
  2684 ;; This function calls:
  2685 ;;		_ST7032_put
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text15
  2692  010626                     __ptext15:
  2693                           	opt stack 0
  2694  010626                     _ST7032_puts:
  2695                           	opt stack 25
  2696                           
  2697                           ;My_ST7032.c: 42: while (*s) {
  2698                           
  2699                           ;incstack = 0
  2700  010626  D00D               	goto	l7267
  2701  010628                     l7263:
  2702                           
  2703                           ;My_ST7032.c: 43: ST7032_put(*s++);
  2704  010628  C0FD  FFF6         	movff	ST7032_puts@s,tblptrl
  2705  01062C  C0FE  FFF7         	movff	ST7032_puts@s+1,tblptrh
  2706  010630                     	if	0	;tblptru may be non-zero
  2707  010630                     	endif
  2708  010630                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2709  010630  0E00               	movlw	low (__mediumconst shr (0+16))
  2710  010632  6EF8               	movwf	tblptru,c
  2711  010634                     	endif
  2712  010634  0008               	tblrd		*
  2713  010636  50F5               	movf	tablat,w,c
  2714  010638  EC76  F082         	call	_ST7032_put
  2715  01063C  0100               	movlb	0	; () banked
  2716  01063E  4BFD               	infsnz	ST7032_puts@s& (0+255),f,b
  2717  010640  2BFE               	incf	(ST7032_puts@s+1)& (0+255),f,b
  2718  010642                     l7267:
  2719  010642  C0FD  FFF6         	movff	ST7032_puts@s,tblptrl
  2720  010646  C0FE  FFF7         	movff	ST7032_puts@s+1,tblptrh
  2721  01064A                     	if	0	;tblptru may be non-zero
  2722  01064A                     	endif
  2723  01064A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2724  01064A  0E00               	movlw	low (__mediumconst shr (0+16))
  2725  01064C  6EF8               	movwf	tblptru,c
  2726  01064E                     	endif
  2727  01064E  0008               	tblrd		*
  2728  010650  50F5               	movf	tablat,w,c
  2729  010652  0900               	iorlw	0
  2730  010654  B4D8               	btfsc	status,2,c
  2731  010656  0012               	return	
  2732  010658  D7E7               	goto	l7263
  2733  01065A                     __end_of_ST7032_puts:
  2734                           	opt stack 0
  2735                           tblptru	equ	0xFF8
  2736                           tblptrh	equ	0xFF7
  2737                           tblptrl	equ	0xFF6
  2738                           tablat	equ	0xFF5
  2739                           intcon	equ	0xFF2
  2740                           intcon2	equ	0xFF1
  2741                           postinc0	equ	0xFEE
  2742                           wreg	equ	0xFE8
  2743                           postinc1	equ	0xFE6
  2744                           postdec1	equ	0xFE5
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           indf2	equ	0xFDF
  2748                           postinc2	equ	0xFDE
  2749                           postdec2	equ	0xFDD
  2750                           fsr2h	equ	0xFDA
  2751                           fsr2l	equ	0xFD9
  2752                           status	equ	0xFD8
  2753                           
  2754 ;; *************** function _ST7032_put *****************
  2755 ;; Defined at:
  2756 ;;		line 33 in file "../My_library/My_ST7032.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  c               1    wreg     unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  c               1   20[COMRAM] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;		None               void
  2763 ;; Registers used:
  2764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;Total ram usage:        1 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    4
  2777 ;; This function calls:
  2778 ;;		_ringbuf_put
  2779 ;; This function is called by:
  2780 ;;		_ST7032_puts
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text16
  2785  0104EC                     __ptext16:
  2786                           	opt stack 0
  2787  0104EC                     _ST7032_put:
  2788                           	opt stack 25
  2789                           
  2790                           ;incstack = 0
  2791                           ;ST7032_put@c stored from wreg
  2792  0104EC  6E4E               	movwf	ST7032_put@c,c
  2793                           
  2794                           ;My_ST7032.c: 34: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
  2795  0104EE  0E30               	movlw	low _lcd_tx
  2796  0104F0  6E4B               	movwf	ringbuf_put@rb,c
  2797  0104F2  0E00               	movlw	high _lcd_tx
  2798  0104F4  6E4C               	movwf	ringbuf_put@rb+1,c
  2799  0104F6  0E7C               	movlw	124
  2800  0104F8  6E4D               	movwf	ringbuf_put@asciicode,c
  2801  0104FA  EC01  F081         	call	_ringbuf_put	;wreg free
  2802                           
  2803                           ;My_ST7032.c: 35: ringbuf_put(&lcd_tx, 0b11000000);
  2804  0104FE  0E30               	movlw	low _lcd_tx
  2805  010500  6E4B               	movwf	ringbuf_put@rb,c
  2806  010502  0E00               	movlw	high _lcd_tx
  2807  010504  6E4C               	movwf	ringbuf_put@rb+1,c
  2808  010506  0EC0               	movlw	192
  2809  010508  6E4D               	movwf	ringbuf_put@asciicode,c
  2810  01050A  EC01  F081         	call	_ringbuf_put	;wreg free
  2811                           
  2812                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, c);
  2813  01050E  0E30               	movlw	low _lcd_tx
  2814  010510  6E4B               	movwf	ringbuf_put@rb,c
  2815  010512  0E00               	movlw	high _lcd_tx
  2816  010514  6E4C               	movwf	ringbuf_put@rb+1,c
  2817  010516  C04E  F04D         	movff	ST7032_put@c,ringbuf_put@asciicode
  2818  01051A  EC01  F081         	call	_ringbuf_put	;wreg free
  2819                           
  2820                           ;My_ST7032.c: 37: ringbuf_put(&lcd_tx, 0);
  2821  01051E  0E30               	movlw	low _lcd_tx
  2822  010520  6E4B               	movwf	ringbuf_put@rb,c
  2823  010522  0E00               	movlw	high _lcd_tx
  2824  010524  6E4C               	movwf	ringbuf_put@rb+1,c
  2825  010526  0E00               	movlw	0
  2826  010528  6E4D               	movwf	ringbuf_put@asciicode,c
  2827  01052A  EC01  F081         	call	_ringbuf_put	;wreg free
  2828                           
  2829                           ;My_ST7032.c: 38: ringbuf_put(&lcd_tx, 1);
  2830  01052E  0E30               	movlw	low _lcd_tx
  2831  010530  6E4B               	movwf	ringbuf_put@rb,c
  2832  010532  0E00               	movlw	high _lcd_tx
  2833  010534  6E4C               	movwf	ringbuf_put@rb+1,c
  2834  010536  0E01               	movlw	1
  2835  010538  6E4D               	movwf	ringbuf_put@asciicode,c
  2836  01053A  EC01  F081         	call	_ringbuf_put	;wreg free
  2837  01053E  0012               	return		;funcret
  2838  010540                     __end_of_ST7032_put:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           intcon	equ	0xFF2
  2845                           intcon2	equ	0xFF1
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postinc1	equ	0xFE6
  2849                           postdec1	equ	0xFE5
  2850                           fsr1h	equ	0xFE2
  2851                           fsr1l	equ	0xFE1
  2852                           indf2	equ	0xFDF
  2853                           postinc2	equ	0xFDE
  2854                           postdec2	equ	0xFDD
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _ST7032_cursor *****************
  2860 ;; Defined at:
  2861 ;;		line 28 in file "../My_library/My_ST7032.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  col             1    wreg     unsigned char 
  2864 ;;  row             1    0[BANK0 ] unsigned char 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  col             1   12[BANK1 ] unsigned char 
  2867 ;;  row_offsets     2   10[BANK1 ] unsigned char [2]
  2868 ;; Return value:  Size  Location     Type
  2869 ;;		None               void
  2870 ;; Registers used:
  2871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2877 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;Total ram usage:        4 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    5
  2884 ;; This function calls:
  2885 ;;		_ST7032_command
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text17
  2892  0106BC                     __ptext17:
  2893                           	opt stack 0
  2894  0106BC                     _ST7032_cursor:
  2895                           	opt stack 25
  2896                           
  2897                           ;incstack = 0
  2898                           ;ST7032_cursor@col stored from wreg
  2899  0106BC  0101               	movlb	1	; () banked
  2900  0106BE  6FD7               	movwf	ST7032_cursor@col& (0+255),b
  2901                           
  2902                           ;My_ST7032.c: 29: uint8_t row_offsets[] = {0x00, 0x40};
  2903  0106C0  C0FA  F1D5         	movff	ST7032_cursor@F8640,ST7032_cursor@row_offsets
  2904  0106C4  C0FB  F1D6         	movff	ST7032_cursor@F8640+1,ST7032_cursor@row_offsets+1
  2905                           
  2906                           ;My_ST7032.c: 30: ST7032_command(0x80 | (col + row_offsets[row]), 0);
  2907  0106C8  0E00               	movlw	0
  2908  0106CA  6E4E               	movwf	ST7032_command@wait,c
  2909  0106CC  0100               	movlb	0	; () banked
  2910  0106CE  51FD               	movf	ST7032_cursor@row& (0+255),w,b
  2911  0106D0  0D01               	mullw	1
  2912  0106D2  0ED5               	movlw	low ST7032_cursor@row_offsets
  2913  0106D4  24F3               	addwf	prodl,w,c
  2914  0106D6  6ED9               	movwf	fsr2l,c
  2915  0106D8  0E01               	movlw	high ST7032_cursor@row_offsets
  2916  0106DA  20F4               	addwfc	prodh,w,c
  2917  0106DC  6EDA               	movwf	fsr2h,c
  2918  0106DE  50DF               	movf	indf2,w,c
  2919  0106E0  0101               	movlb	1	; () banked
  2920  0106E2  25D7               	addwf	ST7032_cursor@col& (0+255),w,b
  2921  0106E4  0980               	iorlw	128
  2922  0106E6  ECA0  F082         	call	_ST7032_command
  2923  0106EA  0012               	return		;funcret
  2924  0106EC                     __end_of_ST7032_cursor:
  2925                           	opt stack 0
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           intcon	equ	0xFF2
  2933                           intcon2	equ	0xFF1
  2934                           postinc0	equ	0xFEE
  2935                           wreg	equ	0xFE8
  2936                           postinc1	equ	0xFE6
  2937                           postdec1	equ	0xFE5
  2938                           fsr1h	equ	0xFE2
  2939                           fsr1l	equ	0xFE1
  2940                           indf2	equ	0xFDF
  2941                           postinc2	equ	0xFDE
  2942                           postdec2	equ	0xFDD
  2943                           fsr2h	equ	0xFDA
  2944                           fsr2l	equ	0xFD9
  2945                           status	equ	0xFD8
  2946                           
  2947 ;; *************** function _ST7032_command *****************
  2948 ;; Defined at:
  2949 ;;		line 16 in file "../My_library/My_ST7032.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  command         1    wreg     unsigned char 
  2952 ;;  wait            1   20[COMRAM] unsigned char 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  command         1   21[COMRAM] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;		None               void
  2957 ;; Registers used:
  2958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2964 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2968 ;;Total ram usage:        2 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    4
  2971 ;; This function calls:
  2972 ;;		_ringbuf_put
  2973 ;; This function is called by:
  2974 ;;		_ST7032_clear
  2975 ;;		_ST7032_cursor
  2976 ;;		_ST7032_init
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text18
  2981  010540                     __ptext18:
  2982                           	opt stack 0
  2983  010540                     _ST7032_command:
  2984                           	opt stack 24
  2985                           
  2986                           ;incstack = 0
  2987                           ;ST7032_command@command stored from wreg
  2988  010540  6E4F               	movwf	ST7032_command@command,c
  2989                           
  2990                           ;My_ST7032.c: 17: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
  2991  010542  0E30               	movlw	low _lcd_tx
  2992  010544  6E4B               	movwf	ringbuf_put@rb,c
  2993  010546  0E00               	movlw	high _lcd_tx
  2994  010548  6E4C               	movwf	ringbuf_put@rb+1,c
  2995  01054A  0E7C               	movlw	124
  2996  01054C  6E4D               	movwf	ringbuf_put@asciicode,c
  2997  01054E  EC01  F081         	call	_ringbuf_put	;wreg free
  2998                           
  2999                           ;My_ST7032.c: 18: ringbuf_put(&lcd_tx, 0x80);
  3000  010552  0E30               	movlw	low _lcd_tx
  3001  010554  6E4B               	movwf	ringbuf_put@rb,c
  3002  010556  0E00               	movlw	high _lcd_tx
  3003  010558  6E4C               	movwf	ringbuf_put@rb+1,c
  3004  01055A  0E80               	movlw	128
  3005  01055C  6E4D               	movwf	ringbuf_put@asciicode,c
  3006  01055E  EC01  F081         	call	_ringbuf_put	;wreg free
  3007                           
  3008                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, command);
  3009  010562  0E30               	movlw	low _lcd_tx
  3010  010564  6E4B               	movwf	ringbuf_put@rb,c
  3011  010566  0E00               	movlw	high _lcd_tx
  3012  010568  6E4C               	movwf	ringbuf_put@rb+1,c
  3013  01056A  C04F  F04D         	movff	ST7032_command@command,ringbuf_put@asciicode
  3014  01056E  EC01  F081         	call	_ringbuf_put	;wreg free
  3015                           
  3016                           ;My_ST7032.c: 20: ringbuf_put(&lcd_tx, 0);
  3017  010572  0E30               	movlw	low _lcd_tx
  3018  010574  6E4B               	movwf	ringbuf_put@rb,c
  3019  010576  0E00               	movlw	high _lcd_tx
  3020  010578  6E4C               	movwf	ringbuf_put@rb+1,c
  3021  01057A  0E00               	movlw	0
  3022  01057C  6E4D               	movwf	ringbuf_put@asciicode,c
  3023  01057E  EC01  F081         	call	_ringbuf_put	;wreg free
  3024                           
  3025                           ;My_ST7032.c: 21: ringbuf_put(&lcd_tx, wait);
  3026  010582  0E30               	movlw	low _lcd_tx
  3027  010584  6E4B               	movwf	ringbuf_put@rb,c
  3028  010586  0E00               	movlw	high _lcd_tx
  3029  010588  6E4C               	movwf	ringbuf_put@rb+1,c
  3030  01058A  C04E  F04D         	movff	ST7032_command@wait,ringbuf_put@asciicode
  3031  01058E  EC01  F081         	call	_ringbuf_put	;wreg free
  3032  010592  0012               	return		;funcret
  3033  010594                     __end_of_ST7032_command:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodh	equ	0xFF4
  3040                           prodl	equ	0xFF3
  3041                           intcon	equ	0xFF2
  3042                           intcon2	equ	0xFF1
  3043                           postinc0	equ	0xFEE
  3044                           wreg	equ	0xFE8
  3045                           postinc1	equ	0xFE6
  3046                           postdec1	equ	0xFE5
  3047                           fsr1h	equ	0xFE2
  3048                           fsr1l	equ	0xFE1
  3049                           indf2	equ	0xFDF
  3050                           postinc2	equ	0xFDE
  3051                           postdec2	equ	0xFDD
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8
  3055                           
  3056 ;; *************** function _ringbuf_put *****************
  3057 ;; Defined at:
  3058 ;;		line 20 in file "../My_library/My_ringbuf.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  rb              2   17[COMRAM] PTR struct ringbuf
  3061 ;;		 -> usb_rx(8), uart_rx(8), terminal_task@command(8), lcd_tx(8), 
  3062 ;;  asciicode       1   19[COMRAM] unsigned char 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3074 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;      Totals:         3       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3078 ;;Total ram usage:        7 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    3
  3081 ;; This function calls:
  3082 ;;		_ringbuf_num
  3083 ;; This function is called by:
  3084 ;;		_ST7032_command
  3085 ;;		_ST7032_put
  3086 ;;		_ST7032_init
  3087 ;;		_ringbuf_put_num
  3088 ;;		_ringbuf_put_str
  3089 ;;		_ST7032_create_char
  3090 ;;		_terminal_task
  3091 ;;		_UART_ISR
  3092 ;;		_USB_task
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text19
  3097  010202                     __ptext19:
  3098                           	opt stack 0
  3099  010202                     _ringbuf_put:
  3100                           	opt stack 25
  3101                           
  3102                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  3103                           
  3104                           ;incstack = 0
  3105  010202  C04B  F049         	movff	ringbuf_put@rb,ringbuf_num@rb
  3106  010206  C04C  F04A         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  3107  01020A  EC95  F080         	call	_ringbuf_num	;wreg free
  3108  01020E  EE20 F002          	lfsr	2,2
  3109  010212  504B               	movf	ringbuf_put@rb,w,c
  3110  010214  26D9               	addwf	fsr2l,f,c
  3111  010216  504C               	movf	ringbuf_put@rb+1,w,c
  3112  010218  22DA               	addwfc	fsr2h,f,c
  3113  01021A  50DE               	movf	postinc2,w,c
  3114  01021C  5C49               	subwf	?_ringbuf_num,w,c
  3115  01021E  50DE               	movf	postinc2,w,c
  3116  010220  584A               	subwfb	?_ringbuf_num+1,w,c
  3117  010222  B0D8               	btfsc	status,0,c
  3118  010224  0012               	return	
  3119                           
  3120                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  3121  010226  EE20 F004          	lfsr	2,4
  3122  01022A  504B               	movf	ringbuf_put@rb,w,c
  3123  01022C  26D9               	addwf	fsr2l,f,c
  3124  01022E  504C               	movf	ringbuf_put@rb+1,w,c
  3125  010230  22DA               	addwfc	fsr2h,f,c
  3126  010232  CFDE F1D1          	movff	postinc2,??_ringbuf_put
  3127  010236  CFDD F1D2          	movff	postdec2,??_ringbuf_put+1
  3128  01023A  C04B  FFD9         	movff	ringbuf_put@rb,fsr2l
  3129  01023E  C04C  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  3130  010242  CFDE F1D3          	movff	postinc2,??_ringbuf_put+2
  3131  010246  CFDD F1D4          	movff	postdec2,??_ringbuf_put+3
  3132  01024A  0101               	movlb	1	; () banked
  3133  01024C  51D1               	movf	??_ringbuf_put& (0+255),w,b
  3134  01024E  0101               	movlb	1	; () banked
  3135  010250  25D3               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  3136  010252  6ED9               	movwf	fsr2l,c
  3137  010254  0101               	movlb	1	; () banked
  3138  010256  51D2               	movf	(??_ringbuf_put+1)& (0+255),w,b
  3139  010258  0101               	movlb	1	; () banked
  3140  01025A  21D4               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  3141  01025C  6EDA               	movwf	fsr2h,c
  3142  01025E  C04D  FFDF         	movff	ringbuf_put@asciicode,indf2
  3143                           
  3144                           ; BSR set to: 1
  3145                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  3146  010262  EE20 F002          	lfsr	2,2
  3147  010266  504B               	movf	ringbuf_put@rb,w,c
  3148  010268  26D9               	addwf	fsr2l,f,c
  3149  01026A  504C               	movf	ringbuf_put@rb+1,w,c
  3150  01026C  22DA               	addwfc	fsr2h,f,c
  3151  01026E  EE10 F004          	lfsr	1,4
  3152  010272  504B               	movf	ringbuf_put@rb,w,c
  3153  010274  26E1               	addwf	fsr1l,f,c
  3154  010276  504C               	movf	ringbuf_put@rb+1,w,c
  3155  010278  22E2               	addwfc	fsr1h,f,c
  3156  01027A  CFE6 F1D3          	movff	postinc1,??_ringbuf_put+2
  3157  01027E  CFE5 F1D4          	movff	postdec1,??_ringbuf_put+3
  3158  010282  0E01               	movlw	1
  3159  010284  0101               	movlb	1	; () banked
  3160  010286  27D3               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  3161  010288  0E00               	movlw	0
  3162  01028A  23D4               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  3163  01028C  50DE               	movf	postinc2,w,c
  3164  01028E  0101               	movlb	1	; () banked
  3165  010290  5DD3               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  3166  010292  50DE               	movf	postinc2,w,c
  3167  010294  0101               	movlb	1	; () banked
  3168  010296  59D4               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  3169  010298  B0D8               	btfsc	status,0,c
  3170  01029A  D00A               	goto	l7155
  3171                           
  3172                           ; BSR set to: 1
  3173  01029C  EE20 F004          	lfsr	2,4
  3174  0102A0  504B               	movf	ringbuf_put@rb,w,c
  3175  0102A2  26D9               	addwf	fsr2l,f,c
  3176  0102A4  504C               	movf	ringbuf_put@rb+1,w,c
  3177  0102A6  22DA               	addwfc	fsr2h,f,c
  3178  0102A8  2ADE               	incf	postinc2,f,c
  3179  0102AA  0E00               	movlw	0
  3180  0102AC  22DD               	addwfc	postdec2,f,c
  3181  0102AE  0012               	return	
  3182  0102B0                     l7155:
  3183                           
  3184                           ; BSR set to: 1
  3185                           ;My_ringbuf.c: 24: else rb->head = 0;
  3186  0102B0  EE20 F004          	lfsr	2,4
  3187  0102B4  504B               	movf	ringbuf_put@rb,w,c
  3188  0102B6  26D9               	addwf	fsr2l,f,c
  3189  0102B8  504C               	movf	ringbuf_put@rb+1,w,c
  3190  0102BA  22DA               	addwfc	fsr2h,f,c
  3191  0102BC  0E00               	movlw	0
  3192  0102BE  6EDE               	movwf	postinc2,c
  3193  0102C0  0E00               	movlw	0
  3194  0102C2  6EDD               	movwf	postdec2,c
  3195                           
  3196                           ; BSR set to: 1
  3197  0102C4  0012               	return	
  3198  0102C6                     __end_of_ringbuf_put:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           intcon	equ	0xFF2
  3207                           intcon2	equ	0xFF1
  3208                           postinc0	equ	0xFEE
  3209                           wreg	equ	0xFE8
  3210                           postinc1	equ	0xFE6
  3211                           postdec1	equ	0xFE5
  3212                           fsr1h	equ	0xFE2
  3213                           fsr1l	equ	0xFE1
  3214                           indf2	equ	0xFDF
  3215                           postinc2	equ	0xFDE
  3216                           postdec2	equ	0xFDD
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8
  3220                           
  3221 ;; *************** function _ringbuf_num *****************
  3222 ;; Defined at:
  3223 ;;		line 12 in file "../My_library/My_ringbuf.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  rb              2   15[COMRAM] PTR struct ringbuf
  3226 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  3227 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  2   15[COMRAM] unsigned int 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3242 ;;      Totals:         2       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3243 ;;Total ram usage:        8 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    2
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_ringbuf_put
  3250 ;;		_ringbuf_pop
  3251 ;;		_ST7032_task
  3252 ;;		_ringbuf_backspace
  3253 ;;		_terminal_task
  3254 ;;		_UART_ISR
  3255 ;;		_UART_task
  3256 ;;		_USB_task
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text20
  3261  01012A                     __ptext20:
  3262                           	opt stack 0
  3263  01012A                     _ringbuf_num:
  3264                           	opt stack 25
  3265                           
  3266                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  3267                           
  3268                           ;incstack = 0
  3269  01012A  EE20 F006          	lfsr	2,6
  3270  01012E  5049               	movf	ringbuf_num@rb,w,c
  3271  010130  26D9               	addwf	fsr2l,f,c
  3272  010132  504A               	movf	ringbuf_num@rb+1,w,c
  3273  010134  22DA               	addwfc	fsr2h,f,c
  3274  010136  EE10 F004          	lfsr	1,4
  3275  01013A  5049               	movf	ringbuf_num@rb,w,c
  3276  01013C  26E1               	addwf	fsr1l,f,c
  3277  01013E  504A               	movf	ringbuf_num@rb+1,w,c
  3278  010140  22E2               	addwfc	fsr1h,f,c
  3279  010142  50DE               	movf	postinc2,w,c
  3280  010144  5CE6               	subwf	postinc1,w,c
  3281  010146  50DE               	movf	postinc2,w,c
  3282  010148  58E6               	subwfb	postinc1,w,c
  3283  01014A  A0D8               	btfss	status,0,c
  3284  01014C  D024               	goto	l7143
  3285                           
  3286                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  3287  01014E  EE20 F004          	lfsr	2,4
  3288  010152  5049               	movf	ringbuf_num@rb,w,c
  3289  010154  26D9               	addwf	fsr2l,f,c
  3290  010156  504A               	movf	ringbuf_num@rb+1,w,c
  3291  010158  22DA               	addwfc	fsr2h,f,c
  3292  01015A  CFDE F1CB          	movff	postinc2,??_ringbuf_num
  3293  01015E  CFDD F1CC          	movff	postdec2,??_ringbuf_num+1
  3294  010162  EE20 F006          	lfsr	2,6
  3295  010166  5049               	movf	ringbuf_num@rb,w,c
  3296  010168  26D9               	addwf	fsr2l,f,c
  3297  01016A  504A               	movf	ringbuf_num@rb+1,w,c
  3298  01016C  22DA               	addwfc	fsr2h,f,c
  3299  01016E  CFDE F1CD          	movff	postinc2,??_ringbuf_num+2
  3300  010172  CFDD F1CE          	movff	postdec2,??_ringbuf_num+3
  3301  010176  0101               	movlb	1	; () banked
  3302  010178  1FCD               	comf	(??_ringbuf_num+2)& (0+255),f,b
  3303  01017A  1FCE               	comf	(??_ringbuf_num+3)& (0+255),f,b
  3304  01017C  4BCD               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  3305  01017E  2BCE               	incf	(??_ringbuf_num+3)& (0+255),f,b
  3306  010180  0101               	movlb	1	; () banked
  3307  010182  51CB               	movf	??_ringbuf_num& (0+255),w,b
  3308  010184  0101               	movlb	1	; () banked
  3309  010186  25CD               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  3310  010188  6E49               	movwf	?_ringbuf_num,c
  3311  01018A  0101               	movlb	1	; () banked
  3312  01018C  51CC               	movf	(??_ringbuf_num+1)& (0+255),w,b
  3313  01018E  0101               	movlb	1	; () banked
  3314  010190  21CE               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  3315  010192  6E4A               	movwf	?_ringbuf_num+1,c
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;My_ringbuf.c: 15: } else {
  3319                           
  3320                           ; BSR set to: 1
  3321  010194  0012               	return	
  3322  010196                     l7143:
  3323                           
  3324                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  3325  010196  EE20 F004          	lfsr	2,4
  3326  01019A  5049               	movf	ringbuf_num@rb,w,c
  3327  01019C  26D9               	addwf	fsr2l,f,c
  3328  01019E  504A               	movf	ringbuf_num@rb+1,w,c
  3329  0101A0  22DA               	addwfc	fsr2h,f,c
  3330  0101A2  CFDE F1CB          	movff	postinc2,??_ringbuf_num
  3331  0101A6  CFDD F1CC          	movff	postdec2,??_ringbuf_num+1
  3332  0101AA  EE20 F002          	lfsr	2,2
  3333  0101AE  5049               	movf	ringbuf_num@rb,w,c
  3334  0101B0  26D9               	addwf	fsr2l,f,c
  3335  0101B2  504A               	movf	ringbuf_num@rb+1,w,c
  3336  0101B4  22DA               	addwfc	fsr2h,f,c
  3337  0101B6  CFDE F1CD          	movff	postinc2,??_ringbuf_num+2
  3338  0101BA  CFDD F1CE          	movff	postdec2,??_ringbuf_num+3
  3339  0101BE  EE20 F006          	lfsr	2,6
  3340  0101C2  5049               	movf	ringbuf_num@rb,w,c
  3341  0101C4  26D9               	addwf	fsr2l,f,c
  3342  0101C6  504A               	movf	ringbuf_num@rb+1,w,c
  3343  0101C8  22DA               	addwfc	fsr2h,f,c
  3344  0101CA  CFDE F1CF          	movff	postinc2,??_ringbuf_num+4
  3345  0101CE  CFDD F1D0          	movff	postdec2,??_ringbuf_num+5
  3346  0101D2  0101               	movlb	1	; () banked
  3347  0101D4  1FCF               	comf	(??_ringbuf_num+4)& (0+255),f,b
  3348  0101D6  1FD0               	comf	(??_ringbuf_num+5)& (0+255),f,b
  3349  0101D8  4BCF               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  3350  0101DA  2BD0               	incf	(??_ringbuf_num+5)& (0+255),f,b
  3351  0101DC  0101               	movlb	1	; () banked
  3352  0101DE  51CD               	movf	(??_ringbuf_num+2)& (0+255),w,b
  3353  0101E0  0101               	movlb	1	; () banked
  3354  0101E2  27CF               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  3355  0101E4  0101               	movlb	1	; () banked
  3356  0101E6  51CE               	movf	(??_ringbuf_num+3)& (0+255),w,b
  3357  0101E8  0101               	movlb	1	; () banked
  3358  0101EA  23D0               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  3359  0101EC  0101               	movlb	1	; () banked
  3360  0101EE  51CB               	movf	??_ringbuf_num& (0+255),w,b
  3361  0101F0  0101               	movlb	1	; () banked
  3362  0101F2  25CF               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  3363  0101F4  6E49               	movwf	?_ringbuf_num,c
  3364  0101F6  0101               	movlb	1	; () banked
  3365  0101F8  51CC               	movf	(??_ringbuf_num+1)& (0+255),w,b
  3366  0101FA  0101               	movlb	1	; () banked
  3367  0101FC  21D0               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  3368  0101FE  6E4A               	movwf	?_ringbuf_num+1,c
  3369                           
  3370                           ; BSR set to: 1
  3371  010200  0012               	return	
  3372  010202                     __end_of_ringbuf_num:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           intcon	equ	0xFF2
  3381                           intcon2	equ	0xFF1
  3382                           postinc0	equ	0xFEE
  3383                           wreg	equ	0xFE8
  3384                           postinc1	equ	0xFE6
  3385                           postdec1	equ	0xFE5
  3386                           fsr1h	equ	0xFE2
  3387                           fsr1l	equ	0xFE1
  3388                           indf2	equ	0xFDF
  3389                           postinc2	equ	0xFDE
  3390                           postdec2	equ	0xFDD
  3391                           fsr2h	equ	0xFDA
  3392                           fsr2l	equ	0xFD9
  3393                           status	equ	0xFD8
  3394                           
  3395 ;; *************** function _ISR *****************
  3396 ;; Defined at:
  3397 ;;		line 33 in file "main.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;		None               void
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;Total ram usage:       15 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    1
  3418 ;; This function calls:
  3419 ;;		_I2C_ISR
  3420 ;; This function is called by:
  3421 ;;		Interrupt level 2
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	intcode
  3426  001008                     __pintcode:
  3427                           	opt stack 0
  3428  001008                     _ISR:
  3429                           	opt stack 23
  3430                           
  3431                           ; BSR set to: 1
  3432                           ;incstack = 0
  3433  001008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3434  00100A  CFFA F03B          	movff	pclath,??_ISR+1
  3435  00100E  CFFB F03C          	movff	pclatu,??_ISR+2
  3436  001012  CFE9 F03D          	movff	fsr0l,??_ISR+3
  3437  001016  CFEA F03E          	movff	fsr0h,??_ISR+4
  3438  00101A  CFE1 F03F          	movff	fsr1l,??_ISR+5
  3439  00101E  CFE2 F040          	movff	fsr1h,??_ISR+6
  3440  001022  CFD9 F041          	movff	fsr2l,??_ISR+7
  3441  001026  CFDA F042          	movff	fsr2h,??_ISR+8
  3442  00102A  CFF3 F043          	movff	prodl,??_ISR+9
  3443  00102E  CFF4 F044          	movff	prodh,??_ISR+10
  3444  001032  CFF6 F045          	movff	tblptrl,??_ISR+11
  3445  001036  CFF7 F046          	movff	tblptrh,??_ISR+12
  3446  00103A  CFF8 F047          	movff	tblptru,??_ISR+13
  3447  00103E  CFF5 F048          	movff	tablat,??_ISR+14
  3448                           
  3449                           ;main.c: 34: I2C_ISR();
  3450  001042  EC76  F083         	call	_I2C_ISR	;wreg free
  3451                           
  3452                           ;main.c: 35: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  3453  001046  B09E               	btfsc	3998,0,c	;volatile
  3454  001048  A09D               	btfss	3997,0,c	;volatile
  3455  00104A  D010               	goto	i2l1418
  3456                           
  3457                           ;main.c: 36: PIR1bits.TMR1IF = 0;
  3458  00104C  909E               	bcf	3998,0,c	;volatile
  3459                           
  3460                           ;main.c: 37: TMR1H = 0xC0;
  3461  00104E  0EC0               	movlw	192
  3462  001050  6ECF               	movwf	4047,c	;volatile
  3463                           
  3464                           ;main.c: 38: one_second_flag = 1;
  3465  001052  0E01               	movlw	1
  3466  001054  6E2E               	movwf	_one_second_flag,c
  3467                           
  3468                           ;main.c: 39: LATAbits.LATA0 = !LATAbits.LATA0;
  3469  001056  B089               	btfsc	3977,0,c	;volatile
  3470  001058  D003               	goto	i2u631_40
  3471  00105A  6A3A               	clrf	??_ISR& (0+255),c
  3472  00105C  2A3A               	incf	??_ISR& (0+255),f,c
  3473  00105E  D001               	goto	i2u632_48
  3474  001060                     i2u631_40:
  3475  001060  6A3A               	clrf	??_ISR& (0+255),c
  3476  001062                     i2u632_48:
  3477  001062  5089               	movf	3977,w,c	;volatile
  3478  001064  183A               	xorwf	??_ISR,w,c
  3479  001066  0BFE               	andlw	-2
  3480  001068  183A               	xorwf	??_ISR,w,c
  3481  00106A  6E89               	movwf	3977,c	;volatile
  3482  00106C                     i2l1418:
  3483  00106C  C048  FFF5         	movff	??_ISR+14,tablat
  3484  001070  C047  FFF8         	movff	??_ISR+13,tblptru
  3485  001074  C046  FFF7         	movff	??_ISR+12,tblptrh
  3486  001078  C045  FFF6         	movff	??_ISR+11,tblptrl
  3487  00107C  C044  FFF4         	movff	??_ISR+10,prodh
  3488  001080  C043  FFF3         	movff	??_ISR+9,prodl
  3489  001084  C042  FFDA         	movff	??_ISR+8,fsr2h
  3490  001088  C041  FFD9         	movff	??_ISR+7,fsr2l
  3491  00108C  C040  FFE2         	movff	??_ISR+6,fsr1h
  3492  001090  C03F  FFE1         	movff	??_ISR+5,fsr1l
  3493  001094  C03E  FFEA         	movff	??_ISR+4,fsr0h
  3494  001098  C03D  FFE9         	movff	??_ISR+3,fsr0l
  3495  00109C  C03C  FFFB         	movff	??_ISR+2,pclatu
  3496  0010A0  C03B  FFFA         	movff	??_ISR+1,pclath
  3497  0010A4  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3498  0010A6  0011               	retfie		f
  3499  0010A8                     __end_of_ISR:
  3500                           	opt stack 0
  3501                           pclatu	equ	0xFFB
  3502                           pclath	equ	0xFFA
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           prodh	equ	0xFF4
  3508                           prodl	equ	0xFF3
  3509                           intcon	equ	0xFF2
  3510                           intcon2	equ	0xFF1
  3511                           postinc0	equ	0xFEE
  3512                           fsr0h	equ	0xFEA
  3513                           fsr0l	equ	0xFE9
  3514                           wreg	equ	0xFE8
  3515                           postinc1	equ	0xFE6
  3516                           postdec1	equ	0xFE5
  3517                           fsr1h	equ	0xFE2
  3518                           fsr1l	equ	0xFE1
  3519                           indf2	equ	0xFDF
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526 ;; *************** function _I2C_ISR *****************
  3527 ;; Defined at:
  3528 ;;		line 44 in file "../My_library/My_I2C.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;		None               void
  3535 ;; Registers used:
  3536 ;;		wreg, status,2
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_ISR
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text22
  3556  0106EC                     __ptext22:
  3557                           	opt stack 0
  3558  0106EC                     _I2C_ISR:
  3559                           	opt stack 23
  3560                           
  3561                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
  3562                           
  3563                           ;incstack = 0
  3564  0106EC  B69D               	btfsc	3997,3,c	;volatile
  3565  0106EE  A69E               	btfss	3998,3,c	;volatile
  3566  0106F0  D003               	goto	i2l5889
  3567                           
  3568                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
  3569  0106F2  969E               	bcf	3998,3,c	;volatile
  3570                           
  3571                           ;My_I2C.c: 47: I2C_sent_flag = 1;
  3572  0106F4  0E01               	movlw	1
  3573  0106F6  6E1F               	movwf	_I2C_sent_flag,c
  3574  0106F8                     i2l5889:
  3575                           
  3576                           ;My_I2C.c: 48: }
  3577                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
  3578  0106F8  A6A0               	btfss	4000,3,c	;volatile
  3579  0106FA  0012               	return	
  3580  0106FC  A6A1               	btfss	4001,3,c	;volatile
  3581  0106FE  0012               	return	
  3582                           
  3583                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
  3584  010700  96A1               	bcf	4001,3,c	;volatile
  3585                           
  3586                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
  3587  010702  0E01               	movlw	1
  3588  010704  0100               	movlb	0	; () banked
  3589  010706  6F91               	movwf	_I2C_cfct_flag& (0+255),b
  3590  010708  0012               	return	
  3591  01070A                     __end_of_I2C_ISR:
  3592                           	opt stack 0
  3593                           pclatu	equ	0xFFB
  3594                           pclath	equ	0xFFA
  3595                           tblptru	equ	0xFF8
  3596                           tblptrh	equ	0xFF7
  3597                           tblptrl	equ	0xFF6
  3598                           tablat	equ	0xFF5
  3599                           prodh	equ	0xFF4
  3600                           prodl	equ	0xFF3
  3601                           intcon	equ	0xFF2
  3602                           intcon2	equ	0xFF1
  3603                           postinc0	equ	0xFEE
  3604                           fsr0h	equ	0xFEA
  3605                           fsr0l	equ	0xFE9
  3606                           wreg	equ	0xFE8
  3607                           postinc1	equ	0xFE6
  3608                           postdec1	equ	0xFE5
  3609                           fsr1h	equ	0xFE2
  3610                           fsr1l	equ	0xFE1
  3611                           indf2	equ	0xFDF
  3612                           postinc2	equ	0xFDE
  3613                           postdec2	equ	0xFDD
  3614                           fsr2h	equ	0xFDA
  3615                           fsr2l	equ	0xFD9
  3616                           status	equ	0xFD8
  3617                           pclatu	equ	0xFFB
  3618                           pclath	equ	0xFFA
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           intcon	equ	0xFF2
  3626                           intcon2	equ	0xFF1
  3627                           postinc0	equ	0xFEE
  3628                           fsr0h	equ	0xFEA
  3629                           fsr0l	equ	0xFE9
  3630                           wreg	equ	0xFE8
  3631                           postinc1	equ	0xFE6
  3632                           postdec1	equ	0xFE5
  3633                           fsr1h	equ	0xFE2
  3634                           fsr1l	equ	0xFE1
  3635                           indf2	equ	0xFDF
  3636                           postinc2	equ	0xFDE
  3637                           postdec2	equ	0xFDD
  3638                           fsr2h	equ	0xFDA
  3639                           fsr2l	equ	0xFD9
  3640                           status	equ	0xFD8
  3641                           
  3642                           	psect	rparam
  3643  0000                     pclatu	equ	0xFFB
  3644                           pclath	equ	0xFFA
  3645                           tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           prodh	equ	0xFF4
  3650                           prodl	equ	0xFF3
  3651                           intcon	equ	0xFF2
  3652                           intcon2	equ	0xFF1
  3653                           postinc0	equ	0xFEE
  3654                           fsr0h	equ	0xFEA
  3655                           fsr0l	equ	0xFE9
  3656                           wreg	equ	0xFE8
  3657                           postinc1	equ	0xFE6
  3658                           postdec1	equ	0xFE5
  3659                           fsr1h	equ	0xFE2
  3660                           fsr1l	equ	0xFE1
  3661                           indf2	equ	0xFDF
  3662                           postinc2	equ	0xFDE
  3663                           postdec2	equ	0xFDD
  3664                           fsr2h	equ	0xFDA
  3665                           fsr2l	equ	0xFD9
  3666                           status	equ	0xFD8
  3667                           
  3668                           	psect	temp
  3669  000050                     btemp:
  3670                           	opt stack 0
  3671  000050                     	ds	1
  3672  0000                     int$flags	set	btemp
  3673                           pclatu	equ	0xFFB
  3674                           pclath	equ	0xFFA
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           prodh	equ	0xFF4
  3680                           prodl	equ	0xFF3
  3681                           intcon	equ	0xFF2
  3682                           intcon2	equ	0xFF1
  3683                           postinc0	equ	0xFEE
  3684                           fsr0h	equ	0xFEA
  3685                           fsr0l	equ	0xFE9
  3686                           wreg	equ	0xFE8
  3687                           postinc1	equ	0xFE6
  3688                           postdec1	equ	0xFE5
  3689                           fsr1h	equ	0xFE2
  3690                           fsr1l	equ	0xFE1
  3691                           indf2	equ	0xFDF
  3692                           postinc2	equ	0xFDE
  3693                           postdec2	equ	0xFDD
  3694                           fsr2h	equ	0xFDA
  3695                           fsr2l	equ	0xFD9
  3696                           status	equ	0xFD8


Data Sizes:
    Strings     161
    Constant    239
    Data        5
    BSS         612
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      79
    BANK0           160      3     160
    BANK1           256     13     216
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK0[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_42(CODE[8]), STR_41(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK0[8]), uart_tx(BANK0[8]), terminal_task@command(BANK0[8]), lcd_tx(COMRAM[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK0[8]), uart_rx(BANK0[8]), terminal_task@command(BANK0[8]), lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK0[8]), usb_rx(BANK0[8]), uart_rx(BANK0[8]), uart_tx(BANK0[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(COMRAM[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK2[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(COMRAM[8]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    _main->_ST7032_task
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _ST7032_command->_ringbuf_put
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ST7032_puts

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ST7032_cursor
    _ST7032_init->_ringbuf_put
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _ST7032_put->_ringbuf_put
    _ST7032_command->_ringbuf_put
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   64323
                                              2 BANK0      1     1      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                        _ST7032_task
                          _main_init
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   30169
                           _OSC_init
                        _ST7032_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     169
                                             15 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      30
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   29970
                       _I2C_init_new
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_init                                         6     0      6     750
                                             15 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _ST7032_clear                                         0     0      0   10197
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (3) _I2C_init_new                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4263
                                             20 COMRAM     2     2      0
                                              0 BANK0      1     1      0
                    _I2C_idole_check
                           _I2C_send
                          _I2C_start
                           _I2C_stop
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                             17 COMRAM     3     1      2
                                              6 BANK1      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_send                                             1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_idole_check                                      2     2      0      31
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ST7032_puts                                          2     0      2    9160
                                              0 BANK0      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (2) _ST7032_put                                           1     1      0    8857
                                             20 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _ST7032_cursor                                        4     3      1   10534
                                              0 BANK0      1     0      1
                                             10 BANK1      3     3      0
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (3) _ST7032_command                                       2     1      1   10197
                                             20 COMRAM     2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    8826
                                             17 COMRAM     3     0      3
                                              6 BANK1      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1407
                                             15 COMRAM     2     0      2
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0       0
                                              0 COMRAM    15    15      0
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (8) _I2C_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ST7032_clear
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_cursor
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_puts
     _ST7032_put
       _ringbuf_put
         _ringbuf_num
   _ST7032_task
     _I2C_idole_check
     _I2C_send
     _I2C_start
     _I2C_stop
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _main_init
     _OSC_init
     _ST7032_init
       _I2C_init_new
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _timer0_init
     _timer1_init

 _ISR (ROOT)
   _I2C_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0       0      36        0.0%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      D8       7       84.4%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4F       1       84.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28F       8        0.0%
DATA                 0      0     28F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 22:02:31 2015

                     _USB_SD_Ptr FE79                               _ms 0074  
                   __CFG_CP0$OFF 000000               __size_of_I2C_start 0004  
                            l710 0604                              l705 069E  
                            _BDT 000D00                              _ISR 1008  
                            _UIE 000F36                              _UIR 000F62  
                __end_of_I2C_ISR 070A                              _now 00B1  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                   _USBDeviceState 0024  
                    ?_ST7032_put 003A                             ?_ISR 003A  
                           l1424 0426                             l3167 06B2  
                           l7301 0090                             l7143 0196  
                           l7303 009A                             l7311 00DC  
                           l5551 0606                             l7321 00FE  
                           l7313 00E2                             l7305 00A4  
                           l7155 02B0                             l7317 00EC  
                           l7309 00B0                             l7325 0108  
                           l7263 0628               __CFG_WPFP$PAGE_127 000000  
                           l7273 000E                             l7267 0642  
                           l7187 0364                             l7195 037C  
                           l7283 0036                             l7189 0378  
                           l7277 0028                             l7295 0064  
              ??_I2C_idole_check 0049                             l7297 007C  
                           l7299 0086                             STR_1 FFE1  
                           STR_4 FFFB                             STR_7 FFFD  
                           STR_9 FFF9                             u7160 0436  
                           u7178 043A                             _UCFG 000F39  
                           _UEP0 000F26                             _UEP1 000F27  
                           _UEIE 000F37                             _UEIR 000F63  
                           _UCON 000F65                  _CDCDataInHandle 0088  
                           _pDst 008A                             _main 0420  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                    _BaudRateGen 0070                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 0050           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                 __end_of_I2C_send 0758  
                           start 10A8                 __end_of_I2C_stop 0762  
                  __CFG_IESO$OFF 000000                     ?_ST7032_init 003A  
                   ?_ST7032_task 003A                     ?_ST7032_puts 00FD  
                   ___param_bank 000010                            ??_ISR 003A  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                          ?_main 003A                            _ADRES 000FC3  
                          STR_13 FFF7                            STR_30 FFD7  
                          STR_31 FFF1                            STR_15 FFA3  
                          STR_23 FF5E                            STR_32 FFD1  
                          STR_40 FFC3                            STR_24 FFB4  
                          STR_41 FF9A                            STR_25 FF8F  
                          STR_34 FFEA                            STR_42 FFAC  
                          STR_27 FFEE                            STR_19 FFE6  
                          STR_43 FFBC                            STR_36 FFDC  
                          STR_28 FF83                            STR_37 FFF3  
                          STR_38 FFCA                            STR_39 FFF5  
                          _LATB2 007C52                            _UADDR 000F38  
        ST7032_task@st7032_state 001D                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _USTAT 000F64  
                 __CFG_FCMEN$OFF 000000                            _sd000 FF5A  
                          _sd001 FEC4                            _sd002 FEF8  
       ST7032_cursor@row_offsets 01D5           __size_of_ST7032_cursor 0030  
                __end_of_dpowers FE79                 __end_of_OSC_init 0744  
                          tablat 000FF5                            status 000FD8  
              __end_of_I2C_start 0766            __size_of_I2C_init_new 001C  
                  ?_ST7032_clear 003A                  __initialization 0492  
                   __end_of_main 0492              __size_of_ST7032_put 0054  
          _control_signal_bitmap 0093              ringbuf_init@bufsize 004D  
                      ??_I2C_ISR 003A                  _one_second_flag 002E  
                         ??_main 00FF                    __activetblptr 000003  
                   _cdc_mem_type 0028                      ST7032_put@c 004E  
                   _I2C_init_new 070A                           _BCL1IF 007D0B  
               _CDCDataOutHandle 0016                           _EECON2 000FA7  
                         _ANCON0 000F48                           _ANCON1 000F49  
                         i2l1418 106C                   __CFG_WDTEN$OFF 000000  
                         i2l5889 06F8                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _SSPBUF 000FC9                           _TXREG1 000FAE  
                 __CFG_WPDIS$OFF 000000                   ??_ST7032_clear 0050  
              _shortPacketStatus 002F                   __CFG_XINST$OFF 000000  
        __size_of_ST7032_command 0054                    _ST7032_cursor 06BC  
                   ?_ringbuf_pop 004B                     ?_ringbuf_num 0049  
                   ?_ringbuf_put 004B                     ?_timer0_init 003A  
                   ?_timer1_init 0049                           _lcd_tx 0030  
                         clear_0 0498                           clear_1 04A4  
                         clear_2 04B0                           clear_3 04BC  
                __CFG_CLKOEC$OFF 000000                           _usb_rx 00D7  
                         _usb_tx 00DF                     _st7032_state 0094  
                   __mediumconst FE6E                        ?_I2C_send 003A  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_I2C_stop 003A  
                    _CtrlTrfData 000D38             _controlTransferState 002C  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 04E2                    ___rparam_used 000001  
           __CFG_WPEND$PAGE_WPFP 000000                   ?_ST7032_cursor 00FD  
               terminal_task@op0 0098                 terminal_task@op1 0180  
               terminal_task@op2 0199                 terminal_task@op3 01B2  
                 __pcstackCOMRAM 003A                    __end_of_sd000 FF5E  
                  __end_of_sd001 FEF8                    __end_of_sd002 FF2C  
                   __pidataBANK0 0758             __size_of_ST7032_init 00A0  
           __size_of_ST7032_task 012A             __size_of_ST7032_puts 0034  
                      ?_OSC_init 003A                  __CFG_DSWDTPS$G2 000000  
                _I2C_idole_check 0726             terminal_task@command 00E7  
                  _I2C_cfct_flag 0091                       _cdc_notice 0060  
                     _cdc_rx_len 0029                       ??_I2C_send 0049  
                     _cdc_tx_len 002B                     ??_ST7032_put 004E  
                     ??_I2C_stop 0049               __size_of_main_init 0032  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                     __pbssBANK2 0200               ST7032_command@wait 004E  
                    _pBDTEntryIn 0010            __end_of_weekday_3char FF48  
          RTCC_task@prev_halfsec 001C                   ST7032_init@buf 0200  
                   ST7032_puts@s 00FD               __end_of_ST7032_put 0540  
                     ??_OSC_init 0049                          _I2C_ISR 06EC  
                     _device_dsc FF48                       _ep_data_in 0078  
              _configDescriptor1 FE81               __CFG_OSC$INTOSCPLL 000000  
           __end_of_ST7032_clear 0750           I2C_LCD_SetCursor@F8685 00F8  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                  _I2C_sent_flag 001F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A                          _UIEbits 000F36  
               ST7032_cursor@col 01D7             timer1_init@prescaler 004B  
                        _UIRbits 000F62                 ST7032_cursor@row 00FD  
               __CFG_CFGPLLEN$ON 000000                    _cdc_trf_state 002A  
                ??_ST7032_cursor 0050                          _pCDCDst 007E  
                        _pCDCSrc 0081                          __Hparam 0000  
                 _ST7032_command 0540                          __Lparam 0000  
                      _I2C_start 0762          __end_of_I2C_idole_check 0736  
                  ?_ringbuf_init 0049             __size_of_ringbuf_pop 00BA  
           __size_of_ringbuf_num 00D8             __size_of_ringbuf_put 00C4  
                __CFG_STVREN$OFF 000000                __end_of_main_init 068C  
    epoch_to_caltime@month_cache 00FC                          __pcinit 0492  
      __end_of_configDescriptor1 FEC4                          __ramtop 0F00  
           __size_of_timer0_init 0030             __size_of_timer1_init 0044  
                        __ptext0 0420                          __ptext1 065A  
                        __ptext2 05E2                          __ptext3 068C  
                        __ptext4 0380                          __ptext5 0594  
                        __ptext6 0744                          __ptext7 070A  
                        __ptext8 0736                          __ptext9 0000  
                        _inPipes 000A      _USBDeferOUTDataStagePackets 0022  
                      _T0CONbits 000FD5                 _time_change_flag 0095  
                   __size_of_ISR 00A0                        _T1CONbits 000FCD  
                        _dpowers FE6F                        _T3CONbits 000F79  
                      _T5CONbits 000F22                          _uart_rx 00C7  
                        _uart_tx 00CF               __end_of_USB_CD_Ptr FE81  
           end_of_initialization 04E2                     _CTMUCONHbits 000FB3  
             __end_of_USB_SD_Ptr FE7F                     _CTMUCONLbits 000FB2  
            _pBDTEntryEP0OutNext 001A  _dummy_encapsulated_cmd_response 00BF  
         __end_of_ST7032_command 0594                       ?_I2C_start 003A  
                 ??_ringbuf_init 004F                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
            I2C_idole_check@mask 004A       _USBStatusStageEnabledFlag1 0025  
     _USBStatusStageEnabledFlag2 0026                     I2C_send@data 0049  
               __CFG_DSBOREN$OFF 000000        epoch_to_caltime@day_cache 008C  
             ST7032_cursor@F8640 00FA                 __CFG_CPUDIV$OSC1 000000  
             _BothEP0OutUOWNsSet 001E                __size_of_I2C_send 0008  
              __size_of_I2C_stop 0004                        _USTATcopy 0039  
        timer1_init@clock_select 0049                  ?_ST7032_command 004E  
               __CFG_IOL1WAY$OFF 000000              __CFG_MSSP7B_EN$MSK7 000000  
                 ringbuf_init@rb 0049                 ?_I2C_idole_check 003A  
                 ringbuf_pop@ret 004D            ST7032_command@command 004F  
          __size_of_ST7032_clear 000C                __size_of_OSC_init 000E  
               __CFG_DSWDTEN$OFF 000000                _USBBusIsSuspended 0092  
            start_initialization 0492                      __end_of_ISR 10A8  
                    _cdc_data_rx 0100                      _cdc_data_tx 0140  
                  ??_ST7032_init 0050                     _ST7032_clear 0744  
                  ??_ST7032_task 004E                      ??_I2C_start 0049  
                  ??_ST7032_puts 004F           _pBDTEntryEP0OutCurrent 0018  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00F8  
                       ?_I2C_ISR 003A           _USBActiveConfiguration 0038  
                    __pbssCOMRAM 0001                    __pcstackBANK0 00FD  
                  __pcstackBANK1 01CB             __end_of_ringbuf_init 05E2  
                   _pBDTEntryOut 006A                  millis_timer@cnt 008E  
                      __pintcode 1008                    __pmediumconst FE6E  
            __end_of_ST7032_init 0420              __end_of_ST7032_task 012A  
            __end_of_ST7032_puts 065A       USBCBSendResume@delay_count 0086  
                      _main_init 065A             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_busy 0090                         _I2C_send 0750  
                       _I2C_stop 075E                      _PADCFG1bits 000F3C  
                  ?_I2C_init_new 003A                  ST7032_task@data 00FD  
                    _ep_data_out 007B                  ST7032_task@wait 0084  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 004B  
                       _LATAbits 000F89                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                         _IPR5bits 000F99  
                       _PIE5bits 000F91            __end_of_ST7032_cursor 06EC  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       i2u631_40 1060                         i2u632_48 1062  
                       _PIR5bits 000F98       epoch_to_caltime@year_cache 0096  
                  ??_ringbuf_pop 01D1                    ??_ringbuf_num 01CB  
                  ??_ringbuf_put 01D1                         _RCONbits 000FD0  
                       _UEP0bits 000F26       _USBDeferINDataStagePackets 0021  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0049                    ??_timer1_init 004A  
                       _SSP1STAT 000FC7                         _UCONbits 000F65  
                       _OSC_init 0736                 __size_of_I2C_ISR 001E  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
               __CFG_SOSCSEL$LOW 000000                       ?_main_init 003A  
                   _RemoteWakeup 0020                   ??_I2C_init_new 0049  
                  ringbuf_pop@rb 004B                    ringbuf_num@rb 0049  
                  ringbuf_put@rb 004B                 ??_ST7032_command 004F  
                    _INTCON2bits 000FF1                        copy_data0 04D6  
             __end_of_device_dsc FF5A                         __Hrparam 0000  
                    _ST7032_init 0380                         __Lrparam 0000  
                    _ST7032_task 0000                      _ST7032_puts 0626  
                       _SetupPkt 000D30                    _weekday_3char FF2C  
            __end_of_ringbuf_pop 0380              __end_of_ringbuf_num 0202  
            __end_of_ringbuf_put 02C6                      _line_coding 00EF  
            __end_of_timer0_init 06BC            __size_of_ringbuf_init 004E  
            __end_of_timer1_init 0626             timer0_init@prescaler 004A  
                       __ptext10 02C6                         __ptext11 075E  
                       __ptext20 012A                         __ptext12 0762  
                       __ptext13 0750                         __ptext22 06EC  
                       __ptext14 0726                         __ptext15 0626  
                       __ptext16 04EC                         __ptext17 06BC  
                       __ptext18 0540                         __ptext19 0202  
                   _SSP1CON1bits 000FC6                     _SSP1CON2bits 000FC5  
                  __size_of_main 0072                         _outPipes 0001  
                       int$flags 0050                     _ringbuf_init 0594  
                   _SSP1STATbits 000FC7        _USBDeferStatusStagePacket 0023  
                    ??_main_init 0050         __size_of_I2C_idole_check 0010  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
           ringbuf_put@asciicode 004D                       _ST7032_put 04EC  
      terminal_task@command_init 0097                         intlevel2 0000  
                     _RCSTA1bits 000FAC                       _OSCCONbits 000FD3  
           __end_of_I2C_init_new 0726                      _ringbuf_pop 02C6  
                    _ringbuf_num 012A                      _ringbuf_put 0202  
                    _timer0_init 068C                      _timer1_init 05E2  
                     _RTCCFGbits 000F3F            _USBAlternateInterface 00F6  
                _endpoint_number 002D     _USBStatusStageTimeoutCounter 0027  
                     _USB_CD_Ptr FE7F  
