

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 12 08:32:51 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  0091                     	;# 
    51  0092                     	;# 
    52  0093                     	;# 
    53  0094                     	;# 
    54  0095                     	;# 
    55  0096                     	;# 
    56  0097                     	;# 
    57  0098                     	;# 
    58  0099                     	;# 
    59  009A                     	;# 
    60  009B                     	;# 
    61  009B                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  010C                     	;# 
    66  010D                     	;# 
    67  0111                     	;# 
    68  0112                     	;# 
    69  0113                     	;# 
    70  0114                     	;# 
    71  0115                     	;# 
    72  0116                     	;# 
    73  0117                     	;# 
    74  0118                     	;# 
    75  0119                     	;# 
    76  011A                     	;# 
    77  011B                     	;# 
    78  011D                     	;# 
    79  011E                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  0191                     	;# 
    83  0191                     	;# 
    84  0192                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0194                     	;# 
    89  0195                     	;# 
    90  0196                     	;# 
    91  0199                     	;# 
    92  019A                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019C                     	;# 
    98  019C                     	;# 
    99  019D                     	;# 
   100  019E                     	;# 
   101  019F                     	;# 
   102  020C                     	;# 
   103  020D                     	;# 
   104  0211                     	;# 
   105  0211                     	;# 
   106  0212                     	;# 
   107  0212                     	;# 
   108  0213                     	;# 
   109  0213                     	;# 
   110  0214                     	;# 
   111  0214                     	;# 
   112  0215                     	;# 
   113  0215                     	;# 
   114  0215                     	;# 
   115  0216                     	;# 
   116  0216                     	;# 
   117  0217                     	;# 
   118  0217                     	;# 
   119  0219                     	;# 
   120  021A                     	;# 
   121  021B                     	;# 
   122  021C                     	;# 
   123  021D                     	;# 
   124  021E                     	;# 
   125  021F                     	;# 
   126  0291                     	;# 
   127  0291                     	;# 
   128  0292                     	;# 
   129  0293                     	;# 
   130  0294                     	;# 
   131  0295                     	;# 
   132  0295                     	;# 
   133  0296                     	;# 
   134  0298                     	;# 
   135  0298                     	;# 
   136  0299                     	;# 
   137  029A                     	;# 
   138  029B                     	;# 
   139  029C                     	;# 
   140  029C                     	;# 
   141  029D                     	;# 
   142  029E                     	;# 
   143  029E                     	;# 
   144  0311                     	;# 
   145  0311                     	;# 
   146  0312                     	;# 
   147  0313                     	;# 
   148  0318                     	;# 
   149  0318                     	;# 
   150  0319                     	;# 
   151  031A                     	;# 
   152  0394                     	;# 
   153  0395                     	;# 
   154  0396                     	;# 
   155  039A                     	;# 
   156  039C                     	;# 
   157  039D                     	;# 
   158  039E                     	;# 
   159  039F                     	;# 
   160  0415                     	;# 
   161  0416                     	;# 
   162  0417                     	;# 
   163  041C                     	;# 
   164  041D                     	;# 
   165  041E                     	;# 
   166  0FE4                     	;# 
   167  0FE5                     	;# 
   168  0FE6                     	;# 
   169  0FE7                     	;# 
   170  0FE8                     	;# 
   171  0FE9                     	;# 
   172  0FEA                     	;# 
   173  0FEB                     	;# 
   174  0FED                     	;# 
   175  0FEE                     	;# 
   176  0FEF                     	;# 
   177                           
   178                           	psect	idataBANK0
   179  0253                     __pidataBANK0:	
   180                           
   181                           ;initializer for _p
   182  0253  3403               	retlw	3
   183  0254  349F               	retlw	159
   184  0255  3425               	retlw	37
   185  0256  340D               	retlw	13
   186  0257  3499               	retlw	153
   187  0258  3449               	retlw	73
   188  0259  3441               	retlw	65
   189  025A  341B               	retlw	27
   190  025B  3401               	retlw	1
   191  025C  3409               	retlw	9
   192                           
   193                           ;initializer for _q
   194  025D  3402               	retlw	2
   195  025E  349E               	retlw	158
   196  025F  3424               	retlw	36
   197  0260  340C               	retlw	12
   198  0261  3498               	retlw	152
   199  0262  3448               	retlw	72
   200  0263  3440               	retlw	64
   201  0264  341A               	retlw	26
   202  0265  3400               	retlw	0
   203  0266  3408               	retlw	8
   204                           
   205                           ;initializer for _r
   206  0267  34FF               	retlw	255
   207  0268  349F               	retlw	159
   208  0269  3425               	retlw	37
   209  026A  340D               	retlw	13
   210  026B  3499               	retlw	153
   211  026C  3449               	retlw	73
   212  026D  3441               	retlw	65
   213  026E  341B               	retlw	27
   214  026F  3401               	retlw	1
   215  0270  3409               	retlw	9
   216  000B                     _INTCONbits	set	11
   217  0011                     _PIR1bits	set	17
   218  000C                     _PORTA	set	12
   219  000D                     _PORTB	set	13
   220  0018                     _T1CON	set	24
   221  0017                     _TMR1H	set	23
   222  0016                     _TMR1L	set	22
   223  0064                     _RA4	set	100
   224  0065                     _RA5	set	101
   225  0095                     _OPTION_REG	set	149
   226  0099                     _OSCCON	set	153
   227  0091                     _PIE1bits	set	145
   228  008C                     _TRISA	set	140
   229  008D                     _TRISB	set	141
   230  018C                     _ANSELA	set	396
   231  018D                     _ANSELB	set	397
   232                           
   233                           ; #config settings
   234  0000                     
   235                           	psect	cinit
   236  012B                     start_initialization:	
   237  012B                     __initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  012B  01FC               	clrf	__pbssCOMMON& (0+127)
   241  012C  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   242                           
   243                           ; Clear objects allocated to BANK0
   244  012D  303E               	movlw	low __pbssBANK0
   245  012E  0084               	movwf	4
   246  012F  3000               	movlw	high __pbssBANK0
   247  0130  0085               	movwf	5
   248  0131  300E               	movlw	14
   249  0132  3182  2271  3181   	fcall	clear_ram0
   250                           
   251                           ; Initialize objects allocated to BANK0
   252  0135  3053               	movlw	low __pidataBANK0
   253  0136  0084               	movwf	4
   254  0137  3082               	movlw	(high __pidataBANK0)| (0+128)
   255  0138  0085               	movwf	5
   256  0139  3020               	movlw	low __pdataBANK0
   257  013A  0086               	movwf	6
   258  013B  3000               	movlw	high __pdataBANK0
   259  013C  0087               	movwf	7
   260  013D  301E               	movlw	30
   261  013E  3182  2277         	fcall	init_ram
   262  0140                     end_of_initialization:	
   263                           ;End of C runtime variable initialization code
   264                           
   265  0140                     __end_of__initialization:	
   266  0140  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   267  0141  0020               	movlb	0
   268  0142  3181  2996         	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMMON
   271  007C                     __pbssCOMMON:	
   272  007C                     _j:	
   273  007C                     	ds	1
   274  007D                     _ji:	
   275  007D                     	ds	1
   276                           
   277                           	psect	bssBANK0
   278  003E                     __pbssBANK0:	
   279  003E                     _s:	
   280  003E                     	ds	10
   281  0048                     _cnt1m:	
   282  0048                     	ds	2
   283  004A                     _fu:	
   284  004A                     	ds	1
   285  004B                     _i:	
   286  004B                     	ds	1
   287                           
   288                           	psect	dataBANK0
   289  0020                     __pdataBANK0:	
   290  0020                     _p:	
   291  0020                     	ds	10
   292  002A                     _q:	
   293  002A                     	ds	10
   294  0034                     _r:	
   295  0034                     	ds	10
   296                           
   297                           	psect	clrtext
   298  0271                     clear_ram0:	
   299                           ;	Called with FSR0 containing the base address, and
   300                           ;	WREG with the size to clear
   301                           
   302  0271  0064               	clrwdt	;clear the watchdog before getting into this loop
   303  0272                     clrloop0:	
   304  0272  0180               	clrf	0	;clear RAM location pointed to by FSR
   305  0273  3101               	addfsr 0,1
   306  0274  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   307  0275  2A72               	goto	clrloop0	;have we reached the end yet?
   308  0276  3400               	retlw	0	;all done for this memory range, return
   309                           
   310                           	psect	inittext
   311  0277                     init_ram:	
   312  0277  00FE               	movwf	126
   313  0278                     initloop:	
   314  0278  0012               	moviw fsr0++
   315  0279  001E               	movwi fsr1++
   316  027A  0BFE               	decfsz	126,f
   317  027B  2A78               	goto	initloop
   318  027C  3400               	retlw	0
   319                           
   320                           	psect	cstackCOMMON
   321  0070                     __pcstackCOMMON:	
   322  0070                     ?_isr:	
   323  0070                     ?_main:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?___awmod:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?___lwmod:	
   330                           ; 2 bytes @ 0x0
   331                           
   332  0070                     ___awmod@divisor:	
   333                           ; 2 bytes @ 0x0
   334                           
   335  0070                     ___lwmod@divisor:	
   336                           ; 2 bytes @ 0x0
   337                           
   338                           
   339                           ; 2 bytes @ 0x0
   340  0070                     	ds	2
   341  0072                     ___awmod@dividend:	
   342  0072                     ___lwmod@dividend:	
   343                           ; 2 bytes @ 0x2
   344                           
   345                           
   346                           ; 2 bytes @ 0x2
   347  0072                     	ds	2
   348  0074                     ??___awmod:	
   349  0074                     ??___lwmod:	
   350                           ; 0 bytes @ 0x4
   351                           
   352                           
   353                           ; 0 bytes @ 0x4
   354  0074                     	ds	1
   355  0075                     ___awmod@counter:	
   356  0075                     ___lwmod@counter:	
   357                           ; 1 bytes @ 0x5
   358                           
   359                           
   360                           ; 1 bytes @ 0x5
   361  0075                     	ds	1
   362  0076                     ___awmod@sign:	
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	1
   366  0077                     ?___awdiv:	
   367  0077                     ___awdiv@divisor:	
   368                           ; 2 bytes @ 0x7
   369                           
   370                           
   371                           ; 2 bytes @ 0x7
   372  0077                     	ds	2
   373  0079                     ___awdiv@dividend:	
   374                           
   375                           ; 2 bytes @ 0x9
   376  0079                     	ds	2
   377  007B                     ??___awdiv:	
   378                           
   379                           ; 0 bytes @ 0xB
   380  007B                     	ds	1
   381                           
   382                           	psect	cstackBANK0
   383  004C                     __pcstackBANK0:	
   384  004C                     ___awdiv@counter:	
   385                           
   386                           ; 1 bytes @ 0x0
   387  004C                     	ds	1
   388  004D                     ___awdiv@sign:	
   389                           
   390                           ; 1 bytes @ 0x1
   391  004D                     	ds	1
   392  004E                     ___awdiv@quotient:	
   393                           
   394                           ; 2 bytes @ 0x2
   395  004E                     	ds	2
   396  0050                     ??_isr:	
   397                           
   398                           ; 0 bytes @ 0x4
   399  0050                     	ds	5
   400  0055                     ??_main:	
   401                           
   402                           ; 0 bytes @ 0x9
   403  0055                     	ds	3
   404                           
   405                           	psect	maintext
   406  0196                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 107 in file "PIC16F1827-clock05.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;		None               void
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0
   421 ;; Tracked objects:
   422 ;;		On entry : B1F/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   426 ;;      Params:         0       0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0       0
   428 ;;      Temps:          0       3       0       0       0       0
   429 ;;      Totals:         0       3       0       0       0       0
   430 ;;Total ram usage:        3 bytes
   431 ;; Hardware stack levels required when called:    2
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _main
   441  0196                     _main:	
   442                           
   443                           ;PIC16F1827-clock05.c: 108: OSCCON = 0x00;
   444                           
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg+status,2+status,0]
   447  0196  0021               	movlb	1	; select bank1
   448  0197  0199               	clrf	25	;volatile
   449                           
   450                           ;PIC16F1827-clock05.c: 109: ANSELA = 0x00;
   451  0198  0023               	movlb	3	; select bank3
   452  0199  018C               	clrf	12	;volatile
   453                           
   454                           ;PIC16F1827-clock05.c: 110: ANSELB = 0x00;
   455  019A  018D               	clrf	13	;volatile
   456                           
   457                           ;PIC16F1827-clock05.c: 111: TRISA = 0xF0;
   458  019B  30F0               	movlw	240
   459  019C  0021               	movlb	1	; select bank1
   460  019D  008C               	movwf	12	;volatile
   461                           
   462                           ;PIC16F1827-clock05.c: 112: TRISB = 0x00;
   463  019E  018D               	clrf	13	;volatile
   464                           
   465                           ;PIC16F1827-clock05.c: 114: OPTION_REG = 0b10010011;
   466  019F  3093               	movlw	147
   467  01A0  0095               	movwf	21	;volatile
   468                           
   469                           ;PIC16F1827-clock05.c: 115: INTCONbits.TMR0IE = 1;
   470  01A1  168B               	bsf	11,5	;volatile
   471                           
   472                           ;PIC16F1827-clock05.c: 117: T1CON = 0x01;
   473  01A2  3001               	movlw	1
   474  01A3  0020               	movlb	0	; select bank0
   475  01A4  0098               	movwf	24	;volatile
   476                           
   477                           ;PIC16F1827-clock05.c: 118: TMR1H = 0x00;
   478  01A5  0197               	clrf	23	;volatile
   479                           
   480                           ;PIC16F1827-clock05.c: 119: TMR1L = 0x00;
   481  01A6  0196               	clrf	22	;volatile
   482                           
   483                           ;PIC16F1827-clock05.c: 120: PIE1bits.TMR1IE = 1;
   484  01A7  0021               	movlb	1	; select bank1
   485  01A8  1411               	bsf	17,0	;volatile
   486                           
   487                           ;PIC16F1827-clock05.c: 121: INTCONbits.PEIE = 1;
   488  01A9  170B               	bsf	11,6	;volatile
   489                           
   490                           ;PIC16F1827-clock05.c: 122: INTCONbits.GIE = 1;
   491  01AA  178B               	bsf	11,7	;volatile
   492  01AB                     l983:	
   493                           ;PIC16F1827-clock05.c: 125: while (RA4 == 0) {
   494                           
   495                           ;PIC16F1827-clock05.c: 124: while (1) {
   496                           
   497  01AB  0020               	movlb	0	; select bank0
   498  01AC  1A0C               	btfsc	12,4	;volatile
   499  01AD  29DE               	goto	l993
   500                           
   501                           ;PIC16F1827-clock05.c: 126: if (fu == 59) {
   502  01AE  303B               	movlw	59
   503  01AF  0020               	movlb	0	; select bank0
   504  01B0  064A               	xorwf	_fu,w
   505  01B1  1D03               	btfss	3,2
   506  01B2  29B5               	goto	l979
   507                           
   508                           ;PIC16F1827-clock05.c: 127: fu = 0;
   509  01B3  01CA               	clrf	_fu
   510                           
   511                           ;PIC16F1827-clock05.c: 128: } else {
   512  01B4  29B9               	goto	l981
   513  01B5                     l979:	
   514                           
   515                           ;PIC16F1827-clock05.c: 129: fu++;
   516  01B5  3001               	movlw	1
   517  01B6  00D5               	movwf	??_main
   518  01B7  0855               	movf	??_main,w
   519  01B8  07CA               	addwf	_fu,f
   520  01B9                     l981:	
   521                           
   522                           ;PIC16F1827-clock05.c: 130: }
   523                           ;PIC16F1827-clock05.c: 131: _delay((unsigned long)((200)*(19660800/4000.0)));
   524  01B9  3005               	movlw	5
   525  01BA  00D7               	movwf	??_main+2
   526  01BB  30FD               	movlw	253
   527  01BC  00D6               	movwf	??_main+1
   528  01BD  30AA               	movlw	170
   529  01BE  00D5               	movwf	??_main
   530  01BF                     u817:	
   531  01BF  0BD5               	decfsz	??_main,f
   532  01C0  29BF               	goto	u817
   533  01C1  0BD6               	decfsz	??_main+1,f
   534  01C2  29BF               	goto	u817
   535  01C3  0BD7               	decfsz	??_main+2,f
   536  01C4  29BF               	goto	u817
   537  01C5  3200               	nop2
   538  01C6  29AB               	goto	l983
   539  01C7                     l985:	
   540                           ;PIC16F1827-clock05.c: 132: }
   541                           ;PIC16F1827-clock05.c: 133: while (RA5 == 0) {
   542                           
   543                           
   544                           ;PIC16F1827-clock05.c: 134: if (ji == 23) {
   545  01C7  3017               	movlw	23
   546  01C8  067D               	xorwf	_ji,w
   547  01C9  1D03               	btfss	3,2
   548  01CA  29CD               	goto	l989
   549                           
   550                           ;PIC16F1827-clock05.c: 135: ji = 0;
   551  01CB  01FD               	clrf	_ji
   552                           
   553                           ;PIC16F1827-clock05.c: 136: } else {
   554  01CC  29D1               	goto	l991
   555  01CD                     l989:	
   556                           
   557                           ;PIC16F1827-clock05.c: 137: ji++;
   558  01CD  3001               	movlw	1
   559  01CE  00D5               	movwf	??_main
   560  01CF  0855               	movf	??_main,w
   561  01D0  07FD               	addwf	_ji,f
   562  01D1                     l991:	
   563                           
   564                           ;PIC16F1827-clock05.c: 138: }
   565                           ;PIC16F1827-clock05.c: 139: _delay((unsigned long)((200)*(19660800/4000.0)));
   566  01D1  3005               	movlw	5
   567  01D2  00D7               	movwf	??_main+2
   568  01D3  30FD               	movlw	253
   569  01D4  00D6               	movwf	??_main+1
   570  01D5  30AA               	movlw	170
   571  01D6  00D5               	movwf	??_main
   572  01D7                     u827:	
   573  01D7  0BD5               	decfsz	??_main,f
   574  01D8  29D7               	goto	u827
   575  01D9  0BD6               	decfsz	??_main+1,f
   576  01DA  29D7               	goto	u827
   577  01DB  0BD7               	decfsz	??_main+2,f
   578  01DC  29D7               	goto	u827
   579  01DD  3200               	nop2
   580  01DE                     l993:	
   581  01DE  0020               	movlb	0	; select bank0
   582  01DF  1A8C               	btfsc	12,5	;volatile
   583  01E0  29AB               	goto	l983
   584  01E1  29C7               	goto	l985
   585  01E2                     __end_of_main:	
   586                           
   587                           	psect	intentry
   588  0004                     __pintentry:	
   589 ;; *************** function _isr *****************
   590 ;; Defined at:
   591 ;;		line 42 in file "PIC16F1827-clock05.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;		None               void
   598 ;; Registers used:
   599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   605 ;;      Params:         0       0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0       0
   607 ;;      Temps:          0       5       0       0       0       0
   608 ;;      Totals:         0       5       0       0       0       0
   609 ;;Total ram usage:        5 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; Hardware stack levels required when called:    1
   612 ;; This function calls:
   613 ;;		___awdiv
   614 ;;		___awmod
   615 ;;		___lwmod
   616 ;; This function is called by:
   617 ;;		Interrupt level 1
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621  0004                     _isr:	
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   625  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   626  0005  3180               	pagesel	$
   627  0006  0020               	movlb	0	; select bank0
   628  0007  087F               	movf	127,w
   629  0008  00D4               	movwf	??_isr+4
   630                           
   631                           ;PIC16F1827-clock05.c: 43: if (PIR1bits.TMR1IF == 1) {
   632  0009  1C11               	btfss	17,0	;volatile
   633  000A  2887               	goto	i1l927
   634                           
   635                           ;PIC16F1827-clock05.c: 44: PIR1bits.TMR1IF = 0;
   636  000B  1011               	bcf	17,0	;volatile
   637                           
   638                           ;PIC16F1827-clock05.c: 46: if ((cnt1m % 75) < 38) {
   639  000C  304B               	movlw	75
   640  000D  00F0               	movwf	___lwmod@divisor
   641  000E  3000               	movlw	0
   642  000F  00F1               	movwf	___lwmod@divisor+1
   643  0010  0849               	movf	_cnt1m+1,w
   644  0011  00F3               	movwf	___lwmod@dividend+1
   645  0012  0848               	movf	_cnt1m,w
   646  0013  00F2               	movwf	___lwmod@dividend
   647  0014  3182  2227  3180   	fcall	___lwmod
   648  0017  3000               	movlw	0
   649  0018  0271               	subwf	?___lwmod+1,w
   650  0019  3026               	movlw	38
   651  001A  1903               	skipnz
   652  001B  0270               	subwf	?___lwmod,w
   653  001C  1803               	skipnc
   654  001D  2838               	goto	i1l895
   655                           
   656                           ;PIC16F1827-clock05.c: 47: for (j = 0; j < 10; j++) {
   657  001E  01FC               	clrf	_j
   658  001F  300A               	movlw	10
   659  0020  027C               	subwf	_j,w
   660  0021  1803               	btfsc	3,0
   661  0022  2838               	goto	i1l895
   662  0023                     i1l889:	
   663                           
   664                           ;PIC16F1827-clock05.c: 48: s[j] = q[j];
   665  0023  087C               	movf	_j,w
   666  0024  3E2A               	addlw	(low (_q| 0))& (0+255)
   667  0025  0086               	movwf	6
   668  0026  0187               	clrf	7
   669  0027  0801               	movf	1,w
   670  0028  0020               	movlb	0	; select bank0
   671  0029  00D0               	movwf	??_isr
   672  002A  087C               	movf	_j,w
   673  002B  3E3E               	addlw	(low (_s| 0))& (0+255)
   674  002C  0086               	movwf	6
   675  002D  0187               	clrf	7
   676  002E  0850               	movf	??_isr,w
   677  002F  0081               	movwf	1
   678  0030  3001               	movlw	1
   679  0031  00D0               	movwf	??_isr
   680  0032  0850               	movf	??_isr,w
   681  0033  07FC               	addwf	_j,f
   682  0034  300A               	movlw	10
   683  0035  027C               	subwf	_j,w
   684  0036  1C03               	skipc
   685  0037  2823               	goto	i1l889
   686  0038                     i1l895:	
   687                           
   688                           ;PIC16F1827-clock05.c: 49: }
   689                           ;PIC16F1827-clock05.c: 50: }
   690                           ;PIC16F1827-clock05.c: 51: if ((cnt1m % 75) > 39) {
   691  0038  304B               	movlw	75
   692  0039  00F0               	movwf	___lwmod@divisor
   693  003A  3000               	movlw	0
   694  003B  00F1               	movwf	___lwmod@divisor+1
   695  003C  0020               	movlb	0	; select bank0
   696  003D  0849               	movf	_cnt1m+1,w
   697  003E  00F3               	movwf	___lwmod@dividend+1
   698  003F  0848               	movf	_cnt1m,w
   699  0040  00F2               	movwf	___lwmod@dividend
   700  0041  3182  2227  3180   	fcall	___lwmod
   701  0044  3000               	movlw	0
   702  0045  0271               	subwf	?___lwmod+1,w
   703  0046  3028               	movlw	40
   704  0047  1903               	skipnz
   705  0048  0270               	subwf	?___lwmod,w
   706  0049  1C03               	skipc
   707  004A  2865               	goto	i1l909
   708                           
   709                           ;PIC16F1827-clock05.c: 52: for (j = 0; j < 10; j++) {
   710  004B  01FC               	clrf	_j
   711  004C  300A               	movlw	10
   712  004D  027C               	subwf	_j,w
   713  004E  1803               	btfsc	3,0
   714  004F  2865               	goto	i1l909
   715  0050                     i1l903:	
   716                           
   717                           ;PIC16F1827-clock05.c: 53: s[j] = p[j];
   718  0050  087C               	movf	_j,w
   719  0051  3E20               	addlw	(low (_p| 0))& (0+255)
   720  0052  0086               	movwf	6
   721  0053  0187               	clrf	7
   722  0054  0801               	movf	1,w
   723  0055  0020               	movlb	0	; select bank0
   724  0056  00D0               	movwf	??_isr
   725  0057  087C               	movf	_j,w
   726  0058  3E3E               	addlw	(low (_s| 0))& (0+255)
   727  0059  0086               	movwf	6
   728  005A  0187               	clrf	7
   729  005B  0850               	movf	??_isr,w
   730  005C  0081               	movwf	1
   731  005D  3001               	movlw	1
   732  005E  00D0               	movwf	??_isr
   733  005F  0850               	movf	??_isr,w
   734  0060  07FC               	addwf	_j,f
   735  0061  300A               	movlw	10
   736  0062  027C               	subwf	_j,w
   737  0063  1C03               	skipc
   738  0064  2850               	goto	i1l903
   739  0065                     i1l909:	
   740                           
   741                           ;PIC16F1827-clock05.c: 54: }
   742                           ;PIC16F1827-clock05.c: 55: }
   743                           ;PIC16F1827-clock05.c: 57: cnt1m++;
   744  0065  3001               	movlw	1
   745  0066  0020               	movlb	0	; select bank0
   746  0067  07C8               	addwf	_cnt1m,f
   747  0068  3000               	movlw	0
   748  0069  3DC9               	addwfc	_cnt1m+1,f
   749                           
   750                           ;PIC16F1827-clock05.c: 58: if (cnt1m == 4500) {
   751  006A  3094               	movlw	148
   752  006B  0648               	xorwf	_cnt1m,w
   753  006C  3011               	movlw	17
   754  006D  1903               	skipnz
   755  006E  0649               	xorwf	_cnt1m+1,w
   756  006F  1D03               	btfss	3,2
   757  0070  2887               	goto	i1l927
   758                           
   759                           ;PIC16F1827-clock05.c: 59: cnt1m = 0;
   760  0071  01C8               	clrf	_cnt1m
   761  0072  01C9               	clrf	_cnt1m+1
   762                           
   763                           ;PIC16F1827-clock05.c: 61: if (fu == 59) {
   764  0073  303B               	movlw	59
   765  0074  064A               	xorwf	_fu,w
   766  0075  1D03               	btfss	3,2
   767  0076  2883               	goto	i1l925
   768                           
   769                           ;PIC16F1827-clock05.c: 62: fu = 0;
   770  0077  01CA               	clrf	_fu
   771                           
   772                           ;PIC16F1827-clock05.c: 63: if (ji == 23) {
   773  0078  3017               	movlw	23
   774  0079  067D               	xorwf	_ji,w
   775  007A  1D03               	btfss	3,2
   776  007B  287E               	goto	i1l923
   777                           
   778                           ;PIC16F1827-clock05.c: 64: ji = 0;
   779  007C  01FD               	clrf	_ji
   780                           
   781                           ;PIC16F1827-clock05.c: 65: } else {
   782  007D  2887               	goto	i1l927
   783  007E                     i1l923:	
   784                           
   785                           ;PIC16F1827-clock05.c: 66: ji++;
   786  007E  3001               	movlw	1
   787  007F  00D0               	movwf	??_isr
   788  0080  0850               	movf	??_isr,w
   789  0081  07FD               	addwf	_ji,f
   790                           
   791                           ;PIC16F1827-clock05.c: 67: }
   792                           ;PIC16F1827-clock05.c: 68: } else {
   793  0082  2887               	goto	i1l927
   794  0083                     i1l925:	
   795                           
   796                           ;PIC16F1827-clock05.c: 69: fu++;
   797  0083  3001               	movlw	1
   798  0084  00D0               	movwf	??_isr
   799  0085  0850               	movf	??_isr,w
   800  0086  07CA               	addwf	_fu,f
   801  0087                     i1l927:	
   802                           
   803                           ;PIC16F1827-clock05.c: 70: }
   804                           ;PIC16F1827-clock05.c: 71: }
   805                           ;PIC16F1827-clock05.c: 72: }
   806                           ;PIC16F1827-clock05.c: 74: if (INTCONbits.TMR0IF == 1) {
   807  0087  1D0B               	btfss	11,2	;volatile
   808  0088  2925               	goto	i1l75
   809                           
   810                           ;PIC16F1827-clock05.c: 75: INTCONbits.TMR0IF = 0;
   811  0089  110B               	bcf	11,2	;volatile
   812                           
   813                           ;PIC16F1827-clock05.c: 77: i++;
   814  008A  3001               	movlw	1
   815  008B  00D0               	movwf	??_isr
   816  008C  0850               	movf	??_isr,w
   817  008D  07CB               	addwf	_i,f
   818                           
   819                           ;PIC16F1827-clock05.c: 78: switch (i) {
   820  008E  2917               	goto	i1l955
   821  008F                     i1l933:	
   822                           ;PIC16F1827-clock05.c: 79: case 1:
   823                           
   824                           
   825                           ;PIC16F1827-clock05.c: 80: PORTB = 0xFF;
   826  008F  30FF               	movlw	255
   827  0090  008D               	movwf	13	;volatile
   828                           
   829                           ;PIC16F1827-clock05.c: 81: PORTA = 0x01;
   830  0091  3001               	movlw	1
   831  0092  008C               	movwf	12	;volatile
   832                           
   833                           ;PIC16F1827-clock05.c: 82: PORTB = p[fu % 10];
   834  0093  300A               	movlw	10
   835  0094  00F0               	movwf	___awmod@divisor
   836  0095  3000               	movlw	0
   837  0096  00F1               	movwf	___awmod@divisor+1
   838  0097  084A               	movf	_fu,w
   839  0098  00D0               	movwf	??_isr
   840  0099  01D1               	clrf	??_isr+1
   841  009A  0850               	movf	??_isr,w
   842  009B  00F2               	movwf	___awmod@dividend
   843  009C  0851               	movf	??_isr+1,w
   844  009D  00F3               	movwf	___awmod@dividend+1
   845  009E  3181  21E2  3180   	fcall	___awmod
   846  00A1  0870               	movf	?___awmod,w
   847  00A2  28CC               	goto	L1
   848  00A3                     i1l937:	
   849                           ;PIC16F1827-clock05.c: 84: case 2:
   850                           
   851                           ;PIC16F1827-clock05.c: 83: break;
   852                           
   853                           
   854                           ;PIC16F1827-clock05.c: 85: PORTB = 0xFF;
   855  00A3  30FF               	movlw	255
   856  00A4  008D               	movwf	13	;volatile
   857                           
   858                           ;PIC16F1827-clock05.c: 86: PORTA = 0x02;
   859  00A5  3002               	movlw	2
   860  00A6  008C               	movwf	12	;volatile
   861                           
   862                           ;PIC16F1827-clock05.c: 87: PORTB = p[(fu - (fu % 10)) / 10];
   863  00A7  300A               	movlw	10
   864  00A8  00F7               	movwf	___awdiv@divisor
   865  00A9  3000               	movlw	0
   866  00AA  00F8               	movwf	___awdiv@divisor+1
   867  00AB  300A               	movlw	10
   868  00AC  00F0               	movwf	___awmod@divisor
   869  00AD  3000               	movlw	0
   870  00AE  00F1               	movwf	___awmod@divisor+1
   871  00AF  084A               	movf	_fu,w
   872  00B0  00D0               	movwf	??_isr
   873  00B1  01D1               	clrf	??_isr+1
   874  00B2  0850               	movf	??_isr,w
   875  00B3  00F2               	movwf	___awmod@dividend
   876  00B4  0851               	movf	??_isr+1,w
   877  00B5  00F3               	movwf	___awmod@dividend+1
   878  00B6  3181  21E2  3180   	fcall	___awmod
   879  00B9  0970               	comf	?___awmod,w
   880  00BA  0020               	movlb	0	; select bank0
   881  00BB  00D2               	movwf	??_isr+2
   882  00BC  0971               	comf	?___awmod+1,w
   883  00BD  00D3               	movwf	??_isr+3
   884  00BE  0AD2               	incf	??_isr+2,f
   885  00BF  1903               	skipnz
   886  00C0  0AD3               	incf	??_isr+3,f
   887  00C1  084A               	movf	_fu,w
   888  00C2  0752               	addwf	??_isr+2,w
   889  00C3  00F9               	movwf	___awdiv@dividend
   890  00C4  0853               	movf	??_isr+3,w
   891  00C5  1803               	skipnc
   892  00C6  0A53               	incf	??_isr+3,w
   893  00C7  00FA               	movwf	___awdiv@dividend+1
   894  00C8  3181  2144  3180   	fcall	___awdiv
   895  00CB  0877               	movf	?___awdiv,w
   896  00CC                     L1:	
   897  00CC  3E20               	addlw	(low (_p| 0))& (0+255)
   898  00CD  290D               	goto	L3
   899  00CE                     i1l941:	
   900                           ;PIC16F1827-clock05.c: 89: case 3:
   901                           
   902                           ;PIC16F1827-clock05.c: 88: break;
   903                           
   904                           
   905                           ;PIC16F1827-clock05.c: 90: PORTB = 0xFF;
   906  00CE  30FF               	movlw	255
   907  00CF  008D               	movwf	13	;volatile
   908                           
   909                           ;PIC16F1827-clock05.c: 91: PORTA = 0x04;
   910  00D0  3004               	movlw	4
   911  00D1  008C               	movwf	12	;volatile
   912                           
   913                           ;PIC16F1827-clock05.c: 92: PORTB = s[ji % 10];
   914  00D2  300A               	movlw	10
   915  00D3  00F0               	movwf	___awmod@divisor
   916  00D4  3000               	movlw	0
   917  00D5  00F1               	movwf	___awmod@divisor+1
   918  00D6  087D               	movf	_ji,w
   919  00D7  00D0               	movwf	??_isr
   920  00D8  01D1               	clrf	??_isr+1
   921  00D9  0850               	movf	??_isr,w
   922  00DA  00F2               	movwf	___awmod@dividend
   923  00DB  0851               	movf	??_isr+1,w
   924  00DC  00F3               	movwf	___awmod@dividend+1
   925  00DD  3181  21E2  3180   	fcall	___awmod
   926  00E0  0870               	movf	?___awmod,w
   927  00E1  3E3E               	addlw	(low (_s| 0))& (0+255)
   928  00E2  290D               	goto	L3
   929  00E3                     i1l945:	
   930                           ;PIC16F1827-clock05.c: 94: case 4:
   931                           
   932                           ;PIC16F1827-clock05.c: 93: break;
   933                           
   934                           
   935                           ;PIC16F1827-clock05.c: 95: PORTB = 0xFF;
   936  00E3  30FF               	movlw	255
   937  00E4  008D               	movwf	13	;volatile
   938                           
   939                           ;PIC16F1827-clock05.c: 96: PORTA = 0x08;
   940  00E5  3008               	movlw	8
   941  00E6  008C               	movwf	12	;volatile
   942                           
   943                           ;PIC16F1827-clock05.c: 97: PORTB = r[(ji - (ji % 10)) / 10];
   944  00E7  300A               	movlw	10
   945  00E8  00F7               	movwf	___awdiv@divisor
   946  00E9  3000               	movlw	0
   947  00EA  00F8               	movwf	___awdiv@divisor+1
   948  00EB  300A               	movlw	10
   949  00EC  00F0               	movwf	___awmod@divisor
   950  00ED  3000               	movlw	0
   951  00EE  00F1               	movwf	___awmod@divisor+1
   952  00EF  087D               	movf	_ji,w
   953  00F0  00D0               	movwf	??_isr
   954  00F1  01D1               	clrf	??_isr+1
   955  00F2  0850               	movf	??_isr,w
   956  00F3  00F2               	movwf	___awmod@dividend
   957  00F4  0851               	movf	??_isr+1,w
   958  00F5  00F3               	movwf	___awmod@dividend+1
   959  00F6  3181  21E2  3180   	fcall	___awmod
   960  00F9  0970               	comf	?___awmod,w
   961  00FA  0020               	movlb	0	; select bank0
   962  00FB  00D2               	movwf	??_isr+2
   963  00FC  0971               	comf	?___awmod+1,w
   964  00FD  00D3               	movwf	??_isr+3
   965  00FE  0AD2               	incf	??_isr+2,f
   966  00FF  1903               	skipnz
   967  0100  0AD3               	incf	??_isr+3,f
   968  0101  087D               	movf	_ji,w
   969  0102  0752               	addwf	??_isr+2,w
   970  0103  00F9               	movwf	___awdiv@dividend
   971  0104  0853               	movf	??_isr+3,w
   972  0105  1803               	skipnc
   973  0106  0A53               	incf	??_isr+3,w
   974  0107  00FA               	movwf	___awdiv@dividend+1
   975  0108  3181  2144  3180   	fcall	___awdiv
   976  010B  0877               	movf	?___awdiv,w
   977  010C  3E34               	addlw	(low (_r| 0))& (0+255)
   978  010D                     L3:	
   979  010D  0086               	movwf	6
   980  010E  0187               	clrf	7
   981  010F  0801               	movf	1,w
   982  0110  0020               	movlb	0	; select bank0
   983  0111  008D               	movwf	13	;volatile
   984                           
   985                           ;PIC16F1827-clock05.c: 98: break;
   986  0112  2925               	goto	i1l75
   987  0113                     i1l949:	
   988                           ;PIC16F1827-clock05.c: 99: default:
   989                           
   990                           
   991                           ;PIC16F1827-clock05.c: 100: PORTB = 0xFF;
   992  0113  30FF               	movlw	255
   993  0114  008D               	movwf	13	;volatile
   994                           
   995                           ;PIC16F1827-clock05.c: 101: i = 0;
   996  0115  01CB               	clrf	_i
   997                           
   998                           ;PIC16F1827-clock05.c: 103: }
   999                           
  1000                           ;PIC16F1827-clock05.c: 102: break;
  1001  0116  2925               	goto	i1l75
  1002  0117                     i1l955:	
  1003  0117  084B               	movf	_i,w
  1004                           
  1005                           ; Switch size 1, requested type "space"
  1006                           ; Number of cases is 4, Range of values is 1 to 4
  1007                           ; switch strategies available:
  1008                           ; Name         Instructions Cycles
  1009                           ; simple_byte           13     7 (average)
  1010                           ; direct_byte           17     9 (fixed)
  1011                           ; jumptable            263     9 (fixed)
  1012                           ;	Chosen strategy is simple_byte
  1013  0118  3A01               	xorlw	1	; case 1
  1014  0119  1903               	skipnz
  1015  011A  288F               	goto	i1l933
  1016  011B  3A03               	xorlw	3	; case 2
  1017  011C  1903               	skipnz
  1018  011D  28A3               	goto	i1l937
  1019  011E  3A01               	xorlw	1	; case 3
  1020  011F  1903               	skipnz
  1021  0120  28CE               	goto	i1l941
  1022  0121  3A07               	xorlw	7	; case 4
  1023  0122  1903               	skipnz
  1024  0123  28E3               	goto	i1l945
  1025  0124  2913               	goto	i1l949
  1026  0125                     i1l75:	
  1027  0125  0854               	movf	??_isr+4,w
  1028  0126  00FF               	movwf	127
  1029  0127  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1030  0128  0009               	retfie
  1031  0129                     __end_of_isr:	
  1032                           
  1033                           	psect	text2
  1034  0227                     __ptext2:	
  1035 ;; *************** function ___lwmod *****************
  1036 ;; Defined at:
  1037 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  divisor         2    0[COMMON] unsigned int 
  1040 ;;  dividend        2    2[COMMON] unsigned int 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  counter         1    5[COMMON] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2    0[COMMON] unsigned int 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1052 ;;      Params:         4       0       0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0       0
  1054 ;;      Temps:          1       0       0       0       0       0
  1055 ;;      Totals:         6       0       0       0       0       0
  1056 ;;Total ram usage:        6 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_isr
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function ___lwmod
  1067  0227                     ___lwmod:	
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1071  0227  0870               	movf	___lwmod@divisor,w
  1072  0228  0471               	iorwf	___lwmod@divisor+1,w
  1073  0229  1903               	btfsc	3,2
  1074  022A  2A4E               	goto	i1l873
  1075  022B  01F5               	clrf	___lwmod@counter
  1076  022C  0AF5               	incf	___lwmod@counter,f
  1077  022D                     i1l863:	
  1078  022D  1BF1               	btfsc	___lwmod@divisor+1,7
  1079  022E  2A39               	goto	i1l865
  1080  022F  3001               	movlw	1
  1081  0230                     u61_25:	
  1082  0230  35F0               	lslf	___lwmod@divisor,f
  1083  0231  0DF1               	rlf	___lwmod@divisor+1,f
  1084  0232  0B89               	decfsz	9,f
  1085  0233  2A30               	goto	u61_25
  1086  0234  3001               	movlw	1
  1087  0235  00F4               	movwf	??___lwmod
  1088  0236  0874               	movf	??___lwmod,w
  1089  0237  07F5               	addwf	___lwmod@counter,f
  1090  0238  2A2D               	goto	i1l863
  1091  0239                     i1l865:	
  1092  0239  0871               	movf	___lwmod@divisor+1,w
  1093  023A  0273               	subwf	___lwmod@dividend+1,w
  1094  023B  1D03               	skipz
  1095  023C  2A3F               	goto	u63_25
  1096  023D  0870               	movf	___lwmod@divisor,w
  1097  023E  0272               	subwf	___lwmod@dividend,w
  1098  023F                     u63_25:	
  1099  023F  1C03               	skipc
  1100  0240  2A45               	goto	i1l869
  1101  0241  0870               	movf	___lwmod@divisor,w
  1102  0242  02F2               	subwf	___lwmod@dividend,f
  1103  0243  0871               	movf	___lwmod@divisor+1,w
  1104  0244  3BF3               	subwfb	___lwmod@dividend+1,f
  1105  0245                     i1l869:	
  1106  0245  3001               	movlw	1
  1107  0246                     u64_25:	
  1108  0246  36F1               	lsrf	___lwmod@divisor+1,f
  1109  0247  0CF0               	rrf	___lwmod@divisor,f
  1110  0248  0B89               	decfsz	9,f
  1111  0249  2A46               	goto	u64_25
  1112  024A  3001               	movlw	1
  1113  024B  02F5               	subwf	___lwmod@counter,f
  1114  024C  1D03               	btfss	3,2
  1115  024D  2A39               	goto	i1l865
  1116  024E                     i1l873:	
  1117  024E  0873               	movf	___lwmod@dividend+1,w
  1118  024F  00F1               	movwf	?___lwmod+1
  1119  0250  0872               	movf	___lwmod@dividend,w
  1120  0251  00F0               	movwf	?___lwmod
  1121  0252  0008               	return
  1122  0253                     __end_of___lwmod:	
  1123                           
  1124                           	psect	text3
  1125  01E2                     __ptext3:	
  1126 ;; *************** function ___awmod *****************
  1127 ;; Defined at:
  1128 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  divisor         2    0[COMMON] int 
  1131 ;;  dividend        2    2[COMMON] int 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  sign            1    6[COMMON] unsigned char 
  1134 ;;  counter         1    5[COMMON] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  2    0[COMMON] int 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1144 ;;      Params:         4       0       0       0       0       0
  1145 ;;      Locals:         2       0       0       0       0       0
  1146 ;;      Temps:          1       0       0       0       0       0
  1147 ;;      Totals:         7       0       0       0       0       0
  1148 ;;Total ram usage:        7 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_isr
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function ___awmod
  1159  01E2                     ___awmod:	
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1163  01E2  01F6               	clrf	___awmod@sign
  1164  01E3  1FF3               	btfss	___awmod@dividend+1,7
  1165  01E4  29EC               	goto	i1l825
  1166  01E5  09F2               	comf	___awmod@dividend,f
  1167  01E6  09F3               	comf	___awmod@dividend+1,f
  1168  01E7  0AF2               	incf	___awmod@dividend,f
  1169  01E8  1903               	skipnz
  1170  01E9  0AF3               	incf	___awmod@dividend+1,f
  1171  01EA  01F6               	clrf	___awmod@sign
  1172  01EB  0AF6               	incf	___awmod@sign,f
  1173  01EC                     i1l825:	
  1174  01EC  1FF1               	btfss	___awmod@divisor+1,7
  1175  01ED  29F3               	goto	i1l829
  1176  01EE  09F0               	comf	___awmod@divisor,f
  1177  01EF  09F1               	comf	___awmod@divisor+1,f
  1178  01F0  0AF0               	incf	___awmod@divisor,f
  1179  01F1  1903               	skipnz
  1180  01F2  0AF1               	incf	___awmod@divisor+1,f
  1181  01F3                     i1l829:	
  1182  01F3  0870               	movf	___awmod@divisor,w
  1183  01F4  0471               	iorwf	___awmod@divisor+1,w
  1184  01F5  1903               	btfsc	3,2
  1185  01F6  2A1A               	goto	i1l847
  1186  01F7  01F5               	clrf	___awmod@counter
  1187  01F8  0AF5               	incf	___awmod@counter,f
  1188  01F9                     i1l837:	
  1189  01F9  1BF1               	btfsc	___awmod@divisor+1,7
  1190  01FA  2A05               	goto	i1l839
  1191  01FB  3001               	movlw	1
  1192  01FC                     u54_25:	
  1193  01FC  35F0               	lslf	___awmod@divisor,f
  1194  01FD  0DF1               	rlf	___awmod@divisor+1,f
  1195  01FE  0B89               	decfsz	9,f
  1196  01FF  29FC               	goto	u54_25
  1197  0200  3001               	movlw	1
  1198  0201  00F4               	movwf	??___awmod
  1199  0202  0874               	movf	??___awmod,w
  1200  0203  07F5               	addwf	___awmod@counter,f
  1201  0204  29F9               	goto	i1l837
  1202  0205                     i1l839:	
  1203  0205  0871               	movf	___awmod@divisor+1,w
  1204  0206  0273               	subwf	___awmod@dividend+1,w
  1205  0207  1D03               	skipz
  1206  0208  2A0B               	goto	u56_25
  1207  0209  0870               	movf	___awmod@divisor,w
  1208  020A  0272               	subwf	___awmod@dividend,w
  1209  020B                     u56_25:	
  1210  020B  1C03               	skipc
  1211  020C  2A11               	goto	i1l843
  1212  020D  0870               	movf	___awmod@divisor,w
  1213  020E  02F2               	subwf	___awmod@dividend,f
  1214  020F  0871               	movf	___awmod@divisor+1,w
  1215  0210  3BF3               	subwfb	___awmod@dividend+1,f
  1216  0211                     i1l843:	
  1217  0211  3001               	movlw	1
  1218  0212                     u57_25:	
  1219  0212  36F1               	lsrf	___awmod@divisor+1,f
  1220  0213  0CF0               	rrf	___awmod@divisor,f
  1221  0214  0B89               	decfsz	9,f
  1222  0215  2A12               	goto	u57_25
  1223  0216  3001               	movlw	1
  1224  0217  02F5               	subwf	___awmod@counter,f
  1225  0218  1D03               	btfss	3,2
  1226  0219  2A05               	goto	i1l839
  1227  021A                     i1l847:	
  1228  021A  0876               	movf	___awmod@sign,w
  1229  021B  1903               	btfsc	3,2
  1230  021C  2A22               	goto	i1l851
  1231  021D  09F2               	comf	___awmod@dividend,f
  1232  021E  09F3               	comf	___awmod@dividend+1,f
  1233  021F  0AF2               	incf	___awmod@dividend,f
  1234  0220  1903               	skipnz
  1235  0221  0AF3               	incf	___awmod@dividend+1,f
  1236  0222                     i1l851:	
  1237  0222  0873               	movf	___awmod@dividend+1,w
  1238  0223  00F1               	movwf	?___awmod+1
  1239  0224  0872               	movf	___awmod@dividend,w
  1240  0225  00F0               	movwf	?___awmod
  1241  0226  0008               	return
  1242  0227                     __end_of___awmod:	
  1243                           
  1244                           	psect	text4
  1245  0144                     __ptext4:	
  1246 ;; *************** function ___awdiv *****************
  1247 ;; Defined at:
  1248 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  divisor         2    7[COMMON] int 
  1251 ;;  dividend        2    9[COMMON] int 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  quotient        2    2[BANK0 ] int 
  1254 ;;  sign            1    1[BANK0 ] unsigned char 
  1255 ;;  counter         1    0[BANK0 ] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  2    7[COMMON] int 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1265 ;;      Params:         4       0       0       0       0       0
  1266 ;;      Locals:         0       4       0       0       0       0
  1267 ;;      Temps:          1       0       0       0       0       0
  1268 ;;      Totals:         5       4       0       0       0       0
  1269 ;;Total ram usage:        9 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_isr
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function ___awdiv
  1280  0144                     ___awdiv:	
  1281                           
  1282                           ;incstack = 0
  1283                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1284  0144  0020               	movlb	0	; select bank0
  1285  0145  01CD               	clrf	___awdiv@sign
  1286  0146  1FF8               	btfss	___awdiv@divisor+1,7
  1287  0147  294F               	goto	i1l781
  1288  0148  09F7               	comf	___awdiv@divisor,f
  1289  0149  09F8               	comf	___awdiv@divisor+1,f
  1290  014A  0AF7               	incf	___awdiv@divisor,f
  1291  014B  1903               	skipnz
  1292  014C  0AF8               	incf	___awdiv@divisor+1,f
  1293  014D  01CD               	clrf	___awdiv@sign
  1294  014E  0ACD               	incf	___awdiv@sign,f
  1295  014F                     i1l781:	
  1296  014F  1FFA               	btfss	___awdiv@dividend+1,7
  1297  0150  295A               	goto	i1l787
  1298  0151  09F9               	comf	___awdiv@dividend,f
  1299  0152  09FA               	comf	___awdiv@dividend+1,f
  1300  0153  0AF9               	incf	___awdiv@dividend,f
  1301  0154  1903               	skipnz
  1302  0155  0AFA               	incf	___awdiv@dividend+1,f
  1303  0156  3001               	movlw	1
  1304  0157  00FB               	movwf	??___awdiv
  1305  0158  087B               	movf	??___awdiv,w
  1306  0159  06CD               	xorwf	___awdiv@sign,f
  1307  015A                     i1l787:	
  1308  015A  01CE               	clrf	___awdiv@quotient
  1309  015B  01CF               	clrf	___awdiv@quotient+1
  1310  015C  0877               	movf	___awdiv@divisor,w
  1311  015D  0478               	iorwf	___awdiv@divisor+1,w
  1312  015E  1903               	btfsc	3,2
  1313  015F  2989               	goto	i1l809
  1314  0160  01CC               	clrf	___awdiv@counter
  1315  0161  0ACC               	incf	___awdiv@counter,f
  1316  0162                     i1l797:	
  1317  0162  1BF8               	btfsc	___awdiv@divisor+1,7
  1318  0163  296E               	goto	i1l799
  1319  0164  3001               	movlw	1
  1320  0165                     u44_25:	
  1321  0165  35F7               	lslf	___awdiv@divisor,f
  1322  0166  0DF8               	rlf	___awdiv@divisor+1,f
  1323  0167  0B89               	decfsz	9,f
  1324  0168  2965               	goto	u44_25
  1325  0169  3001               	movlw	1
  1326  016A  00FB               	movwf	??___awdiv
  1327  016B  087B               	movf	??___awdiv,w
  1328  016C  07CC               	addwf	___awdiv@counter,f
  1329  016D  2962               	goto	i1l797
  1330  016E                     i1l799:	
  1331  016E  3001               	movlw	1
  1332  016F                     u46_25:	
  1333  016F  35CE               	lslf	___awdiv@quotient,f
  1334  0170  0DCF               	rlf	___awdiv@quotient+1,f
  1335  0171  0B89               	decfsz	9,f
  1336  0172  296F               	goto	u46_25
  1337  0173  0878               	movf	___awdiv@divisor+1,w
  1338  0174  027A               	subwf	___awdiv@dividend+1,w
  1339  0175  1D03               	skipz
  1340  0176  2979               	goto	u47_25
  1341  0177  0877               	movf	___awdiv@divisor,w
  1342  0178  0279               	subwf	___awdiv@dividend,w
  1343  0179                     u47_25:	
  1344  0179  1C03               	skipc
  1345  017A  2980               	goto	i1l805
  1346  017B  0877               	movf	___awdiv@divisor,w
  1347  017C  02F9               	subwf	___awdiv@dividend,f
  1348  017D  0878               	movf	___awdiv@divisor+1,w
  1349  017E  3BFA               	subwfb	___awdiv@dividend+1,f
  1350  017F  144E               	bsf	___awdiv@quotient,0
  1351  0180                     i1l805:	
  1352  0180  3001               	movlw	1
  1353  0181                     u48_25:	
  1354  0181  36F8               	lsrf	___awdiv@divisor+1,f
  1355  0182  0CF7               	rrf	___awdiv@divisor,f
  1356  0183  0B89               	decfsz	9,f
  1357  0184  2981               	goto	u48_25
  1358  0185  3001               	movlw	1
  1359  0186  02CC               	subwf	___awdiv@counter,f
  1360  0187  1D03               	btfss	3,2
  1361  0188  296E               	goto	i1l799
  1362  0189                     i1l809:	
  1363  0189  084D               	movf	___awdiv@sign,w
  1364  018A  1903               	btfsc	3,2
  1365  018B  2991               	goto	i1l813
  1366  018C  09CE               	comf	___awdiv@quotient,f
  1367  018D  09CF               	comf	___awdiv@quotient+1,f
  1368  018E  0ACE               	incf	___awdiv@quotient,f
  1369  018F  1903               	skipnz
  1370  0190  0ACF               	incf	___awdiv@quotient+1,f
  1371  0191                     i1l813:	
  1372  0191  084F               	movf	___awdiv@quotient+1,w
  1373  0192  00F8               	movwf	?___awdiv+1
  1374  0193  084E               	movf	___awdiv@quotient,w
  1375  0194  00F7               	movwf	?___awdiv
  1376  0195  0008               	return
  1377  0196                     __end_of___awdiv:	
  1378  007E                     btemp	set	126	;btemp
  1379  007E                     int$flags	set	126
  1380  007E                     wtemp	set	126
  1381  007E                     wtemp0	set	126
  1382  0080                     wtemp1	set	128
  1383  0082                     wtemp2	set	130
  1384  0084                     wtemp3	set	132
  1385  0086                     wtemp4	set	134
  1386  0088                     wtemp5	set	136
  1387  007F                     wtemp6	set	127
  1388  007E                     ttemp	set	126
  1389  007E                     ttemp0	set	126
  1390  0081                     ttemp1	set	129
  1391  0084                     ttemp2	set	132
  1392  0087                     ttemp3	set	135
  1393  007F                     ttemp4	set	127
  1394  007E                     ltemp	set	126
  1395  007E                     ltemp0	set	126
  1396  0082                     ltemp1	set	130
  1397  0086                     ltemp2	set	134
  1398  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     12      56
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  5     5      0    1603
                                              4 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     371
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      46       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      46      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 12 08:32:51 2015

                      _i 004B                        _j 007C                        _p 0020  
                      _q 002A                        _r 0034                        _s 003E  
            __CFG_CP$OFF 0000             ___awdiv@sign 004D                       _ji 007D  
                     _fu 004A                      l981 01B9                      l991 01D1  
                    l983 01AB                      l985 01C7                      l993 01DE  
                    l979 01B5                      l989 01CD                      _RA4 0064  
                    _RA5 0065             __CFG_CPD$OFF 0000                      u817 01BF  
                    u827 01D7                      _isr 0004             ___awmod@sign 0076  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     ?_isr 0070                     i1l75 0125  
           __CFG_WRT$OFF 0000                     _main 0196                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   ltemp 007E                     start 0129                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000                    ??_isr 0050  
                  ?_main 0070          __end_of___awdiv 0196            __CFG_WDTE$OFF 0000  
        __end_of___awmod 0227          ___awdiv@divisor 0077                    _T1CON 0018  
        __end_of___lwmod 0253                    i1l813 0191                    i1l805 0180  
                  i1l903 0050                    i1l809 0189                    i1l825 01EC  
                  i1l851 0222                    i1l843 0211                    i1l923 007E  
                  i1l781 014F                    i1l837 01F9                    i1l829 01F3  
                  i1l941 00CE                    i1l933 008F                    i1l925 0083  
                  i1l909 0065                    i1l839 0205                    i1l847 021A  
                  i1l863 022D                    i1l927 0087                    i1l865 0239  
                  i1l873 024E                    i1l945 00E3                    i1l937 00A3  
                  i1l787 015A                    i1l955 0117                    i1l797 0162  
                  i1l869 0245                    i1l949 0113                    i1l799 016E  
                  i1l895 0038                    i1l889 0023          ___awdiv@counter 004C  
                  _TMR1H 0017                    _TMR1L 0016                    _PORTA 000C  
                  _PORTB 000D                    u44_25 0165                    u61_25 0230  
                  u46_25 016F                    u54_25 01FC                    u47_25 0179  
                  u63_25 023F                    u48_25 0181                    u56_25 020B  
                  u64_25 0246                    _TRISA 008C                    _TRISB 008D  
                  u57_25 0212           __CFG_FCMEN$OFF 0000                    _cnt1m 0048  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
         __CFG_MCLRE$OFF 0000          __initialization 012B             __end_of_main 01E2  
                 ??_main 0055           __CFG_PLLEN$OFF 0000         ___awdiv@dividend 0079  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
         __CFG_PWRTE$OFF 0000                ??___awdiv 007B                ??___awmod 0074  
              ??___lwmod 0074         ___awdiv@quotient 004E          ___awmod@divisor 0070  
        ___awmod@counter 0075  __end_of__initialization 0140           __pcstackCOMMON 0070  
           __pidataBANK0 0253               __pbssBANK0 003E               __pmaintext 0196  
             __pintentry 0004                  ___awdiv 0144                  ___awmod 01E2  
                ___lwmod 0227          __CFG_STVREN$OFF 0000                  __ptext2 0227  
                __ptext3 01E2                  __ptext4 0144             __size_of_isr 0125  
       ___awmod@dividend 0072                  clrloop0 0272     end_of_initialization 0140  
                init_ram 0277                  initloop 0278      start_initialization 012B  
            __end_of_isr 0129              __pdataBANK0 0020              __pbssCOMMON 007C  
              ___latbits 0001            __pcstackBANK0 004C                 ?___awdiv 0077  
               ?___awmod 0070                 ?___lwmod 0070                clear_ram0 0271  
               _PIE1bits 0091                 _PIR1bits 0011         __size_of___awdiv 0052  
       __size_of___awmod 0045         __size_of___lwmod 002C            __size_of_main 004C  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
       ___lwmod@dividend 0072        __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
        ___lwmod@divisor 0070          ___lwmod@counter 0075  
