

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Fri Nov 13 09:12:59 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   150                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   151                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   152                           	psect	pa_nodes,global,class=CODE,delta=1
   153                           	dabs	1,0xD00,48,_BDT
   154                           	dabs	1,0xD38,8,_CtrlTrfData
   155                           	dabs	1,0xD30,8,_SetupPkt
   156  0000                     tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           prodh	equ	0xFF4
   161                           prodl	equ	0xFF3
   162                           intcon	equ	0xFF2
   163                           intcon2	equ	0xFF1
   164                           wreg	equ	0xFE8
   165                           indf1	equ	0xFE7
   166                           postinc1	equ	0xFE6
   167                           postdec1	equ	0xFE5
   168                           fsr1h	equ	0xFE2
   169                           fsr1l	equ	0xFE1
   170                           indf2	equ	0xFDF
   171                           postinc2	equ	0xFDE
   172                           postdec2	equ	0xFDD
   173                           plusw2	equ	0xFDB
   174                           fsr2h	equ	0xFDA
   175                           fsr2l	equ	0xFD9
   176                           status	equ	0xFD8
   177                           
   178                           	psect	idataBANK1
   179  0145B0                     __pidataBANK1:
   180                           	opt stack 0
   181                           
   182                           ;initializer for ST7032_cursor@F8592
   183  0145B0  00                 	db	0
   184  0145B1  40                 	db	64
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           prodh	equ	0xFF4
   190                           prodl	equ	0xFF3
   191                           intcon	equ	0xFF2
   192                           intcon2	equ	0xFF1
   193                           wreg	equ	0xFE8
   194                           indf1	equ	0xFE7
   195                           postinc1	equ	0xFE6
   196                           postdec1	equ	0xFE5
   197                           fsr1h	equ	0xFE2
   198                           fsr1l	equ	0xFE1
   199                           indf2	equ	0xFDF
   200                           postinc2	equ	0xFDE
   201                           postdec2	equ	0xFDD
   202                           plusw2	equ	0xFDB
   203                           fsr2h	equ	0xFDA
   204                           fsr2l	equ	0xFD9
   205                           status	equ	0xFD8
   206                           
   207                           	psect	mediumconst
   208  00FA50                     __pmediumconst:
   209                           	opt stack 0
   210  00FA50  00                 	db	0
   211  00FA51                     _dpowers:
   212                           	opt stack 0
   213  00FA51  0001               	dw	1
   214  00FA53  0000               	dw	0
   215  00FA55  000A               	dw	10
   216  00FA57  0000               	dw	0
   217  00FA59  0064               	dw	100
   218  00FA5B  0000               	dw	0
   219  00FA5D  03E8               	dw	1000
   220  00FA5F  0000               	dw	0
   221  00FA61  2710               	dw	10000
   222  00FA63  0000               	dw	0
   223  00FA65  86A0               	dw	34464
   224  00FA67  0001               	dw	1
   225  00FA69  4240               	dw	16960
   226  00FA6B  000F               	dw	15
   227  00FA6D  9680               	dw	38528
   228  00FA6F  0098               	dw	152
   229  00FA71  E100               	dw	57600
   230  00FA73  05F5               	dw	1525
   231  00FA75  CA00               	dw	51712
   232  00FA77  3B9A               	dw	15258
   233  00FA79                     __end_of_dpowers:
   234                           	opt stack 0
   235  00FA79                     _USB_SD_Ptr:
   236                           	opt stack 0
   237  00FA79  E2                 	db	low _sd000
   238  00FA7A  FB                 	db	high _sd000
   239  00FA7B  3C                 	db	low _sd001
   240  00FA7C  FB                 	db	high _sd001
   241  00FA7D  70                 	db	low _sd002
   242  00FA7E  FB                 	db	high _sd002
   243  00FA7F                     __end_of_USB_SD_Ptr:
   244                           	opt stack 0
   245  00FA7F                     _USB_CD_Ptr:
   246                           	opt stack 0
   247  00FA7F  F9                 	db	low _configDescriptor1
   248  00FA80  FA                 	db	high _configDescriptor1
   249  00FA81                     __end_of_USB_CD_Ptr:
   250                           	opt stack 0
   251  00FA81                     display_LCD@port_char:
   252                           	opt stack 0
   253  00FA81  4C                 	db	76
   254  00FA82  45                 	db	69
   255  00FA83  46                 	db	70
   256  00FA84  54                 	db	84
   257  00FA85  20                 	db	32
   258  00FA86  20                 	db	32
   259  00FA87  20                 	db	32
   260  00FA88  50                 	db	80
   261  00FA89  4F                 	db	79
   262  00FA8A  52                 	db	82
   263  00FA8B  54                 	db	84
   264  00FA8C  00                 	db	0
   265  00FA8D  00                 	db	0
   266  00FA8E  00                 	db	0
   267  00FA8F  00                 	db	0
   268  00FA90  00                 	db	0
   269  00FA91  00                 	db	0
   270  00FA92  00                 	db	0
   271  00FA93  00                 	db	0
   272  00FA94  00                 	db	0
   273  00FA95  43                 	db	67
   274  00FA96  45                 	db	69
   275  00FA97  4E                 	db	78
   276  00FA98  54                 	db	84
   277  00FA99  45                 	db	69
   278  00FA9A  52                 	db	82
   279  00FA9B  20                 	db	32
   280  00FA9C  50                 	db	80
   281  00FA9D  4F                 	db	79
   282  00FA9E  52                 	db	82
   283  00FA9F  54                 	db	84
   284  00FAA0  00                 	db	0
   285  00FAA1  00                 	db	0
   286  00FAA2  00                 	db	0
   287  00FAA3  00                 	db	0
   288  00FAA4  00                 	db	0
   289  00FAA5  00                 	db	0
   290  00FAA6  00                 	db	0
   291  00FAA7  00                 	db	0
   292  00FAA8  00                 	db	0
   293  00FAA9  52                 	db	82
   294  00FAAA  49                 	db	73
   295  00FAAB  47                 	db	71
   296  00FAAC  48                 	db	72
   297  00FAAD  54                 	db	84
   298  00FAAE  20                 	db	32
   299  00FAAF  20                 	db	32
   300  00FAB0  50                 	db	80
   301  00FAB1  4F                 	db	79
   302  00FAB2  52                 	db	82
   303  00FAB3  54                 	db	84
   304  00FAB4  00                 	db	0
   305  00FAB5  00                 	db	0
   306  00FAB6  00                 	db	0
   307  00FAB7  00                 	db	0
   308  00FAB8  00                 	db	0
   309  00FAB9  00                 	db	0
   310  00FABA  00                 	db	0
   311  00FABB  00                 	db	0
   312  00FABC  00                 	db	0
   313  00FABD  4C                 	db	76
   314  00FABE  65                 	db	101
   315  00FABF  66                 	db	102
   316  00FAC0  74                 	db	116
   317  00FAC1  20                 	db	32
   318  00FAC2  20                 	db	32
   319  00FAC3  20                 	db	32
   320  00FAC4  50                 	db	80
   321  00FAC5  6F                 	db	111
   322  00FAC6  72                 	db	114
   323  00FAC7  74                 	db	116
   324  00FAC8  00                 	db	0
   325  00FAC9  00                 	db	0
   326  00FACA  00                 	db	0
   327  00FACB  00                 	db	0
   328  00FACC  00                 	db	0
   329  00FACD  00                 	db	0
   330  00FACE  00                 	db	0
   331  00FACF  00                 	db	0
   332  00FAD0  00                 	db	0
   333  00FAD1  43                 	db	67
   334  00FAD2  65                 	db	101
   335  00FAD3  6E                 	db	110
   336  00FAD4  74                 	db	116
   337  00FAD5  65                 	db	101
   338  00FAD6  72                 	db	114
   339  00FAD7  20                 	db	32
   340  00FAD8  50                 	db	80
   341  00FAD9  6F                 	db	111
   342  00FADA  72                 	db	114
   343  00FADB  74                 	db	116
   344  00FADC  00                 	db	0
   345  00FADD  00                 	db	0
   346  00FADE  00                 	db	0
   347  00FADF  00                 	db	0
   348  00FAE0  00                 	db	0
   349  00FAE1  00                 	db	0
   350  00FAE2  00                 	db	0
   351  00FAE3  00                 	db	0
   352  00FAE4  00                 	db	0
   353  00FAE5  52                 	db	82
   354  00FAE6  69                 	db	105
   355  00FAE7  67                 	db	103
   356  00FAE8  68                 	db	104
   357  00FAE9  74                 	db	116
   358  00FAEA  20                 	db	32
   359  00FAEB  20                 	db	32
   360  00FAEC  50                 	db	80
   361  00FAED  6F                 	db	111
   362  00FAEE  72                 	db	114
   363  00FAEF  74                 	db	116
   364  00FAF0  00                 	db	0
   365  00FAF1  00                 	db	0
   366  00FAF2  00                 	db	0
   367  00FAF3  00                 	db	0
   368  00FAF4  00                 	db	0
   369  00FAF5  00                 	db	0
   370  00FAF6  00                 	db	0
   371  00FAF7  00                 	db	0
   372  00FAF8  00                 	db	0
   373  00FAF9                     __end_ofdisplay_LCD@port_char:
   374                           	opt stack 0
   375  00FAF9                     _configDescriptor1:
   376                           	opt stack 0
   377  00FAF9  09                 	db	9
   378  00FAFA  02                 	db	2
   379  00FAFB  43                 	db	67
   380  00FAFC  00                 	db	0
   381  00FAFD  02                 	db	2
   382  00FAFE  01                 	db	1
   383  00FAFF  00                 	db	0
   384  00FB00  C0                 	db	192
   385  00FB01  32                 	db	50
   386  00FB02  09                 	db	9
   387  00FB03  04                 	db	4
   388  00FB04  00                 	db	0
   389  00FB05  00                 	db	0
   390  00FB06  01                 	db	1
   391  00FB07  02                 	db	2
   392  00FB08  02                 	db	2
   393  00FB09  01                 	db	1
   394  00FB0A  00                 	db	0
   395  00FB0B  05                 	db	5
   396  00FB0C  24                 	db	36
   397  00FB0D  00                 	db	0
   398  00FB0E  10                 	db	16
   399  00FB0F  01                 	db	1
   400  00FB10  04                 	db	4
   401  00FB11  24                 	db	36
   402  00FB12  02                 	db	2
   403  00FB13  02                 	db	2
   404  00FB14  05                 	db	5
   405  00FB15  24                 	db	36
   406  00FB16  06                 	db	6
   407  00FB17  00                 	db	0
   408  00FB18  01                 	db	1
   409  00FB19  05                 	db	5
   410  00FB1A  24                 	db	36
   411  00FB1B  01                 	db	1
   412  00FB1C  00                 	db	0
   413  00FB1D  01                 	db	1
   414  00FB1E  07                 	db	7
   415  00FB1F  05                 	db	5
   416  00FB20  81                 	db	129
   417  00FB21  03                 	db	3
   418  00FB22  08                 	db	8
   419  00FB23  00                 	db	0
   420  00FB24  02                 	db	2
   421  00FB25  09                 	db	9
   422  00FB26  04                 	db	4
   423  00FB27  01                 	db	1
   424  00FB28  00                 	db	0
   425  00FB29  02                 	db	2
   426  00FB2A  0A                 	db	10
   427  00FB2B  00                 	db	0
   428  00FB2C  00                 	db	0
   429  00FB2D  00                 	db	0
   430  00FB2E  07                 	db	7
   431  00FB2F  05                 	db	5
   432  00FB30  02                 	db	2
   433  00FB31  02                 	db	2
   434  00FB32  40                 	db	64
   435  00FB33  00                 	db	0
   436  00FB34  00                 	db	0
   437  00FB35  07                 	db	7
   438  00FB36  05                 	db	5
   439  00FB37  82                 	db	130
   440  00FB38  02                 	db	2
   441  00FB39  40                 	db	64
   442  00FB3A  00                 	db	0
   443  00FB3B  00                 	db	0
   444  00FB3C                     __end_of_configDescriptor1:
   445                           	opt stack 0
   446  00FB3C                     _sd001:
   447                           	opt stack 0
   448  00FB3C  34                 	db	52
   449  00FB3D  03                 	db	3
   450  00FB3E  004D               	dw	77
   451  00FB40  0069               	dw	105
   452  00FB42  0063               	dw	99
   453  00FB44  0072               	dw	114
   454  00FB46  006F               	dw	111
   455  00FB48  0063               	dw	99
   456  00FB4A  0068               	dw	104
   457  00FB4C  0069               	dw	105
   458  00FB4E  0070               	dw	112
   459  00FB50  0020               	dw	32
   460  00FB52  0054               	dw	84
   461  00FB54  0065               	dw	101
   462  00FB56  0063               	dw	99
   463  00FB58  0068               	dw	104
   464  00FB5A  006E               	dw	110
   465  00FB5C  006F               	dw	111
   466  00FB5E  006C               	dw	108
   467  00FB60  006F               	dw	111
   468  00FB62  0067               	dw	103
   469  00FB64  0079               	dw	121
   470  00FB66  0020               	dw	32
   471  00FB68  0049               	dw	73
   472  00FB6A  006E               	dw	110
   473  00FB6C  0063               	dw	99
   474  00FB6E  002E               	dw	46
   475  00FB70                     __end_of_sd001:
   476                           	opt stack 0
   477  00FB70                     _sd002:
   478                           	opt stack 0
   479  00FB70  34                 	db	52
   480  00FB71  03                 	db	3
   481  00FB72  0043               	dw	67
   482  00FB74  0044               	dw	68
   483  00FB76  0043               	dw	67
   484  00FB78  0020               	dw	32
   485  00FB7A  0052               	dw	82
   486  00FB7C  0053               	dw	83
   487  00FB7E  002D               	dw	45
   488  00FB80  0032               	dw	50
   489  00FB82  0033               	dw	51
   490  00FB84  0032               	dw	50
   491  00FB86  0020               	dw	32
   492  00FB88  0045               	dw	69
   493  00FB8A  006D               	dw	109
   494  00FB8C  0075               	dw	117
   495  00FB8E  006C               	dw	108
   496  00FB90  0061               	dw	97
   497  00FB92  0074               	dw	116
   498  00FB94  0069               	dw	105
   499  00FB96  006F               	dw	111
   500  00FB98  006E               	dw	110
   501  00FB9A  0020               	dw	32
   502  00FB9C  0044               	dw	68
   503  00FB9E  0065               	dw	101
   504  00FBA0  006D               	dw	109
   505  00FBA2  006F               	dw	111
   506  00FBA4                     __end_of_sd002:
   507                           	opt stack 0
   508  00FBA4                     _weekday_3char:
   509                           	opt stack 0
   510  00FBA4  53                 	db	83
   511  00FBA5  55                 	db	85
   512  00FBA6  4E                 	db	78
   513  00FBA7  00                 	db	0
   514  00FBA8  4D                 	db	77
   515  00FBA9  4F                 	db	79
   516  00FBAA  4E                 	db	78
   517  00FBAB  00                 	db	0
   518  00FBAC  54                 	db	84
   519  00FBAD  55                 	db	85
   520  00FBAE  45                 	db	69
   521  00FBAF  00                 	db	0
   522  00FBB0  57                 	db	87
   523  00FBB1  45                 	db	69
   524  00FBB2  44                 	db	68
   525  00FBB3  00                 	db	0
   526  00FBB4  54                 	db	84
   527  00FBB5  48                 	db	72
   528  00FBB6  55                 	db	85
   529  00FBB7  00                 	db	0
   530  00FBB8  46                 	db	70
   531  00FBB9  52                 	db	82
   532  00FBBA  49                 	db	73
   533  00FBBB  00                 	db	0
   534  00FBBC  53                 	db	83
   535  00FBBD  41                 	db	65
   536  00FBBE  54                 	db	84
   537  00FBBF  00                 	db	0
   538  00FBC0                     __end_of_weekday_3char:
   539                           	opt stack 0
   540  00FBC0                     _device_dsc:
   541                           	opt stack 0
   542  00FBC0  12                 	db	18
   543  00FBC1  01                 	db	1
   544  00FBC2  0200               	dw	512
   545  00FBC4  02                 	db	2
   546  00FBC5  00                 	db	0
   547  00FBC6  00                 	db	0
   548  00FBC7  08                 	db	8
   549  00FBC8  04D8               	dw	1240
   550  00FBCA  000A               	dw	10
   551  00FBCC  0100               	dw	256
   552  00FBCE  01                 	db	1
   553  00FBCF  02                 	db	2
   554  00FBD0  00                 	db	0
   555  00FBD1  01                 	db	1
   556  00FBD2                     __end_of_device_dsc:
   557                           	opt stack 0
   558  00FBD2                     display_LCD@onoff:
   559                           	opt stack 0
   560  00FBD2  20                 	db	32
   561  00FBD3  4F                 	db	79
   562  00FBD4  46                 	db	70
   563  00FBD5  46                 	db	70
   564  00FBD6  00                 	db	0
   565  00FBD7  20                 	db	32
   566  00FBD8  4F                 	db	79
   567  00FBD9  4E                 	db	78
   568  00FBDA  20                 	db	32
   569  00FBDB  00                 	db	0
   570  00FBDC                     __end_ofdisplay_LCD@onoff:
   571                           	opt stack 0
   572  00FBDC                     data_out@p:
   573                           	opt stack 0
   574  00FBDC  4C                 	db	76
   575  00FBDD  00                 	db	0
   576  00FBDE  43                 	db	67
   577  00FBDF  00                 	db	0
   578  00FBE0  52                 	db	82
   579  00FBE1  00                 	db	0
   580  00FBE2                     __end_ofdata_out@p:
   581                           	opt stack 0
   582  00FBE2                     _sd000:
   583                           	opt stack 0
   584  00FBE2  04                 	db	4
   585  00FBE3  03                 	db	3
   586  00FBE4  0409               	dw	1033
   587  00FBE6                     __end_of_sd000:
   588                           	opt stack 0
   589  0000                     _ANCON0	set	3912
   590  0000                     _ANCON1	set	3913
   591  0000                     _PADCFG1bits	set	3900
   592  0000                     _RTCCAL	set	3902
   593  0000                     _RTCCFGbits	set	3903
   594  0000                     _RTCVALH	set	3899
   595  0000                     _RTCVALL	set	3898
   596  0000                     _UADDR	set	3896
   597  0000                     _UCFG	set	3897
   598  0000                     _UEIE	set	3895
   599  0000                     _UEP0bits	set	3878
   600  0000                     _UIE	set	3894
   601  0000                     _UIEbits	set	3894
   602  0000                     _UEP0	set	3878
   603  0000                     _UEP1	set	3879
   604  0000                     _ADRES	set	4035
   605  0000                     _ADCON0bits	set	4034
   606  0000                     _ADCON1bits	set	4033
   607  0000                     _CTMUCONH	set	4019
   608  0000                     _CTMUCONHbits	set	4019
   609  0000                     _CTMUCONL	set	4018
   610  0000                     _CTMUCONLbits	set	4018
   611  0000                     _CTMUICON	set	4017
   612  0000                     _EECON2	set	4007
   613  0000                     _INTCON2bits	set	4081
   614  0000                     _INTCONbits	set	4082
   615  0000                     _IPR1bits	set	3999
   616  0000                     _IPR2bits	set	4002
   617  0000                     _OSCCONbits	set	4051
   618  0000                     _OSCTUNEbits	set	3995
   619  0000                     _PIE1bits	set	3997
   620  0000                     _PIE2bits	set	4000
   621  0000                     _PIR1bits	set	3998
   622  0000                     _PIR2bits	set	4001
   623  0000                     _RCONbits	set	4048
   624  0000                     _SSP1ADD	set	4040
   625  0000                     _SSP1BUF	set	4041
   626  0000                     _SSP1CON1	set	4038
   627  0000                     _SSP1CON2	set	4037
   628  0000                     _SSP1CON2bits	set	4037
   629  0000                     _SSP1STAT	set	4039
   630  0000                     _T0CONbits	set	4053
   631  0000                     _T1CONbits	set	4045
   632  0000                     _T3CONbits	set	3961
   633  0000                     _TMR1H	set	4047
   634  0000                     _TRISA	set	3986
   635  0000                     _TRISB	set	3987
   636  0000                     _TRISC	set	3988
   637  0000                     _UCON	set	3941
   638  0000                     _UCONbits	set	3941
   639  0000                     _UEIR	set	3939
   640  0000                     _UIR	set	3938
   641  0000                     _UIRbits	set	3938
   642  0000                     _USTAT	set	3940
   643  0000                     _LATA5	set	31821
   644  0000                     _LATA6	set	31822
   645  0000                     _LATA7	set	31823
   646  0000                     _LATB2	set	31826
   647  0000                     _LATB6	set	31830
   648  0000                     _LATB7	set	31831
   649  0000                     _LATC2	set	31834
   650  00FBE6                     STR_13:
   651  00FBE6  09                 	db	9
   652  00FBE7  2A                 	db	42
   653  00FBE8  2A                 	db	42
   654  00FBE9  2A                 	db	42
   655  00FBEA  2A                 	db	42
   656  00FBEB  2A                 	db	42
   657  00FBEC  2A                 	db	42
   658  00FBED  2A                 	db	42
   659  00FBEE  2A                 	db	42
   660  00FBEF  2A                 	db	42
   661  00FBF0  2A                 	db	42
   662  00FBF1  2A                 	db	42
   663  00FBF2  2A                 	db	42
   664  00FBF3  2A                 	db	42
   665  00FBF4  2A                 	db	42
   666  00FBF5  2A                 	db	42
   667  00FBF6  2A                 	db	42
   668  00FBF7  2A                 	db	42
   669  00FBF8  2A                 	db	42
   670  00FBF9  2A                 	db	42
   671  00FBFA  2A                 	db	42
   672  00FBFB  2A                 	db	42
   673  00FBFC  2A                 	db	42
   674  00FBFD  2A                 	db	42
   675  00FBFE  2A                 	db	42
   676  00FBFF  2A                 	db	42
   677  00FC00  2A                 	db	42
   678  00FC01  2A                 	db	42
   679  00FC02  2A                 	db	42
   680  00FC03  2A                 	db	42
   681  00FC04  0A                 	db	10
   682  00FC05  09                 	db	9
   683  00FC06  2A                 	db	42
   684  00FC07  2A                 	db	42
   685  00FC08  2A                 	db	42
   686  00FC09  2A                 	db	42
   687  00FC0A  20                 	db	32
   688  00FC0B  43                 	db	67	;'C'
   689  00FC0C  68                 	db	104	;'h'
   690  00FC0D  61                 	db	97	;'a'
   691  00FC0E  72                 	db	114	;'r'
   692  00FC0F  67                 	db	103	;'g'
   693  00FC10  65                 	db	101	;'e'
   694  00FC11  20                 	db	32
   695  00FC12  53                 	db	83	;'S'
   696  00FC13  74                 	db	116	;'t'
   697  00FC14  61                 	db	97	;'a'
   698  00FC15  74                 	db	116	;'t'
   699  00FC16  69                 	db	105	;'i'
   700  00FC17  6F                 	db	111	;'o'
   701  00FC18  6E                 	db	110	;'n'
   702  00FC19  20                 	db	32
   703  00FC1A  36                 	db	54	;'6'
   704  00FC1B  2E                 	db	46
   705  00FC1C  31                 	db	49	;'1'
   706  00FC1D  32                 	db	50	;'2'
   707  00FC1E  20                 	db	32
   708  00FC1F  2A                 	db	42
   709  00FC20  2A                 	db	42
   710  00FC21  2A                 	db	42
   711  00FC22  2A                 	db	42
   712  00FC23  0A                 	db	10
   713  00FC24  09                 	db	9
   714  00FC25  2A                 	db	42
   715  00FC26  2A                 	db	42
   716  00FC27  2A                 	db	42
   717  00FC28  2A                 	db	42
   718  00FC29  20                 	db	32
   719  00FC2A  4D                 	db	77	;'M'
   720  00FC2B  61                 	db	97	;'a'
   721  00FC2C  64                 	db	100	;'d'
   722  00FC2D  65                 	db	101	;'e'
   723  00FC2E  20                 	db	32
   724  00FC2F  62                 	db	98	;'b'
   725  00FC30  79                 	db	121	;'y'
   726  00FC31  20                 	db	32
   727  00FC32  40                 	db	64	;'@'
   728  00FC33  52                 	db	82	;'R'
   729  00FC34  79                 	db	121	;'y'
   730  00FC35  6F                 	db	111	;'o'
   731  00FC36  6B                 	db	107	;'k'
   732  00FC37  65                 	db	101	;'e'
   733  00FC38  72                 	db	114	;'r'
   734  00FC39  69                 	db	105	;'i'
   735  00FC3A  31                 	db	49	;'1'
   736  00FC3B  34                 	db	52	;'4'
   737  00FC3C  20                 	db	32
   738  00FC3D  20                 	db	32
   739  00FC3E  2A                 	db	42
   740  00FC3F  2A                 	db	42
   741  00FC40  2A                 	db	42
   742  00FC41  2A                 	db	42
   743  00FC42  0A                 	db	10
   744  00FC43  09                 	db	9
   745  00FC44  2A                 	db	42
   746  00FC45  2A                 	db	42
   747  00FC46  2A                 	db	42
   748  00FC47  2A                 	db	42
   749  00FC48  2A                 	db	42
   750  00FC49  2A                 	db	42
   751  00FC4A  2A                 	db	42
   752  00FC4B  2A                 	db	42
   753  00FC4C  2A                 	db	42
   754  00FC4D  2A                 	db	42
   755  00FC4E  2A                 	db	42
   756  00FC4F  2A                 	db	42
   757  00FC50  2A                 	db	42
   758  00FC51  2A                 	db	42
   759  00FC52  2A                 	db	42
   760  00FC53  2A                 	db	42
   761  00FC54  2A                 	db	42
   762  00FC55  2A                 	db	42
   763  00FC56  2A                 	db	42
   764  00FC57  2A                 	db	42
   765  00FC58  2A                 	db	42
   766  00FC59  2A                 	db	42
   767  00FC5A  2A                 	db	42
   768  00FC5B  2A                 	db	42
   769  00FC5C  2A                 	db	42
   770  00FC5D  2A                 	db	42
   771  00FC5E  2A                 	db	42
   772  00FC5F  2A                 	db	42
   773  00FC60  2A                 	db	42
   774  00FC61  0A                 	db	10
   775  00FC62  0A                 	db	10
   776  00FC63  09                 	db	9
   777  00FC64  70                 	db	112	;'p'
   778  00FC65  72                 	db	114	;'r'
   779  00FC66  69                 	db	105	;'i'
   780  00FC67  6E                 	db	110	;'n'
   781  00FC68  74                 	db	116	;'t'
   782  00FC69  5F                 	db	95	;'_'
   783  00FC6A  74                 	db	116	;'t'
   784  00FC6B  69                 	db	105	;'i'
   785  00FC6C  6D                 	db	109	;'m'
   786  00FC6D  65                 	db	101	;'e'
   787  00FC6E  28                 	db	40
   788  00FC6F  74                 	db	116	;'t'
   789  00FC70  29                 	db	41
   790  00FC71  0A                 	db	10
   791  00FC72  09                 	db	9
   792  00FC73  61                 	db	97	;'a'
   793  00FC74  64                 	db	100	;'d'
   794  00FC75  6A                 	db	106	;'j'
   795  00FC76  75                 	db	117	;'u'
   796  00FC77  73                 	db	115	;'s'
   797  00FC78  74                 	db	116	;'t'
   798  00FC79  5F                 	db	95	;'_'
   799  00FC7A  74                 	db	116	;'t'
   800  00FC7B  69                 	db	105	;'i'
   801  00FC7C  6D                 	db	109	;'m'
   802  00FC7D  65                 	db	101	;'e'
   803  00FC7E  28                 	db	40
   804  00FC7F  61                 	db	97	;'a'
   805  00FC80  74                 	db	116	;'t'
   806  00FC81  29                 	db	41
   807  00FC82  20                 	db	32
   808  00FC83  5B                 	db	91	;'['
   809  00FC84  68                 	db	104	;'h'
   810  00FC85  61                 	db	97	;'a'
   811  00FC86  6E                 	db	110	;'n'
   812  00FC87  64                 	db	100	;'d'
   813  00FC88  3A                 	db	58	;':'
   814  00FC89  79                 	db	121	;'y'
   815  00FC8A  2C                 	db	44
   816  00FC8B  4D                 	db	77	;'M'
   817  00FC8C  2C                 	db	44
   818  00FC8D  64                 	db	100	;'d'
   819  00FC8E  2C                 	db	44
   820  00FC8F  68                 	db	104	;'h'
   821  00FC90  2C                 	db	44
   822  00FC91  6D                 	db	109	;'m'
   823  00FC92  2C                 	db	44
   824  00FC93  73                 	db	115	;'s'
   825  00FC94  5D                 	db	93	;']'
   826  00FC95  20                 	db	32
   827  00FC96  5B                 	db	91	;'['
   828  00FC97  76                 	db	118	;'v'
   829  00FC98  61                 	db	97	;'a'
   830  00FC99  6C                 	db	108	;'l'
   831  00FC9A  75                 	db	117	;'u'
   832  00FC9B  65                 	db	101	;'e'
   833  00FC9C  28                 	db	40
   834  00FC9D  64                 	db	100	;'d'
   835  00FC9E  65                 	db	101	;'e'
   836  00FC9F  63                 	db	99	;'c'
   837  00FCA0  69                 	db	105	;'i'
   838  00FCA1  6D                 	db	109	;'m'
   839  00FCA2  61                 	db	97	;'a'
   840  00FCA3  6C                 	db	108	;'l'
   841  00FCA4  29                 	db	41
   842  00FCA5  5D                 	db	93	;']'
   843  00FCA6  0A                 	db	10
   844  00FCA7  09                 	db	9
   845  00FCA8  73                 	db	115	;'s'
   846  00FCA9  65                 	db	101	;'e'
   847  00FCAA  74                 	db	116	;'t'
   848  00FCAB  74                 	db	116	;'t'
   849  00FCAC  69                 	db	105	;'i'
   850  00FCAD  6E                 	db	110	;'n'
   851  00FCAE  67                 	db	103	;'g'
   852  00FCAF  73                 	db	115	;'s'
   853  00FCB0  28                 	db	40
   854  00FCB1  73                 	db	115	;'s'
   855  00FCB2  65                 	db	101	;'e'
   856  00FCB3  74                 	db	116	;'t'
   857  00FCB4  29                 	db	41
   858  00FCB5  20                 	db	32
   859  00FCB6  5B                 	db	91	;'['
   860  00FCB7  70                 	db	112	;'p'
   861  00FCB8  6F                 	db	111	;'o'
   862  00FCB9  72                 	db	114	;'r'
   863  00FCBA  74                 	db	116	;'t'
   864  00FCBB  3A                 	db	58	;':'
   865  00FCBC  6C                 	db	108	;'l'
   866  00FCBD  65                 	db	101	;'e'
   867  00FCBE  66                 	db	102	;'f'
   868  00FCBF  74                 	db	116	;'t'
   869  00FCC0  28                 	db	40
   870  00FCC1  6C                 	db	108	;'l'
   871  00FCC2  29                 	db	41
   872  00FCC3  2C                 	db	44
   873  00FCC4  63                 	db	99	;'c'
   874  00FCC5  65                 	db	101	;'e'
   875  00FCC6  6E                 	db	110	;'n'
   876  00FCC7  74                 	db	116	;'t'
   877  00FCC8  65                 	db	101	;'e'
   878  00FCC9  72                 	db	114	;'r'
   879  00FCCA  28                 	db	40
   880  00FCCB  63                 	db	99	;'c'
   881  00FCCC  29                 	db	41
   882  00FCCD  2C                 	db	44
   883  00FCCE  72                 	db	114	;'r'
   884  00FCCF  69                 	db	105	;'i'
   885  00FCD0  67                 	db	103	;'g'
   886  00FCD1  68                 	db	104	;'h'
   887  00FCD2  74                 	db	116	;'t'
   888  00FCD3  28                 	db	40
   889  00FCD4  72                 	db	114	;'r'
   890  00FCD5  29                 	db	41
   891  00FCD6  5D                 	db	93	;']'
   892  00FCD7  0A                 	db	10
   893  00FCD8  09                 	db	9
   894  00FCD9  09                 	db	9
   895  00FCDA  5B                 	db	91	;'['
   896  00FCDB  61                 	db	97	;'a'
   897  00FCDC  75                 	db	117	;'u'
   898  00FCDD  74                 	db	116	;'t'
   899  00FCDE  6F                 	db	111	;'o'
   900  00FCDF  5F                 	db	95	;'_'
   901  00FCE0  73                 	db	115	;'s'
   902  00FCE1  74                 	db	116	;'t'
   903  00FCE2  6F                 	db	111	;'o'
   904  00FCE3  70                 	db	112	;'p'
   905  00FCE4  28                 	db	40
   906  00FCE5  61                 	db	97	;'a'
   907  00FCE6  73                 	db	115	;'s'
   908  00FCE7  29                 	db	41
   909  00FCE8  2C                 	db	44
   910  00FCE9  61                 	db	97	;'a'
   911  00FCEA  6C                 	db	108	;'l'
   912  00FCEB  77                 	db	119	;'w'
   913  00FCEC  61                 	db	97	;'a'
   914  00FCED  79                 	db	121	;'y'
   915  00FCEE  73                 	db	115	;'s'
   916  00FCEF  5F                 	db	95	;'_'
   917  00FCF0  6F                 	db	111	;'o'
   918  00FCF1  6E                 	db	110	;'n'
   919  00FCF2  28                 	db	40
   920  00FCF3  61                 	db	97	;'a'
   921  00FCF4  6F                 	db	111	;'o'
   922  00FCF5  29                 	db	41
   923  00FCF6  2C                 	db	44
   924  00FCF7  69                 	db	105	;'i'
   925  00FCF8  6E                 	db	110	;'n'
   926  00FCF9  74                 	db	116	;'t'
   927  00FCFA  65                 	db	101	;'e'
   928  00FCFB  67                 	db	103	;'g'
   929  00FCFC  72                 	db	114	;'r'
   930  00FCFD  61                 	db	97	;'a'
   931  00FCFE  74                 	db	116	;'t'
   932  00FCFF  69                 	db	105	;'i'
   933  00FD00  6E                 	db	110	;'n'
   934  00FD01  67                 	db	103	;'g'
   935  00FD02  5F                 	db	95	;'_'
   936  00FD03  72                 	db	114	;'r'
   937  00FD04  65                 	db	101	;'e'
   938  00FD05  73                 	db	115	;'s'
   939  00FD06  65                 	db	101	;'e'
   940  00FD07  74                 	db	116	;'t'
   941  00FD08  28                 	db	40
   942  00FD09  69                 	db	105	;'i'
   943  00FD0A  72                 	db	114	;'r'
   944  00FD0B  29                 	db	41
   945  00FD0C  5D                 	db	93	;']'
   946  00FD0D  0A                 	db	10
   947  00FD0E  09                 	db	9
   948  00FD0F  6F                 	db	111	;'o'
   949  00FD10  75                 	db	117	;'u'
   950  00FD11  74                 	db	116	;'t'
   951  00FD12  70                 	db	112	;'p'
   952  00FD13  75                 	db	117	;'u'
   953  00FD14  74                 	db	116	;'t'
   954  00FD15  5F                 	db	95	;'_'
   955  00FD16  64                 	db	100	;'d'
   956  00FD17  61                 	db	97	;'a'
   957  00FD18  74                 	db	116	;'t'
   958  00FD19  61                 	db	97	;'a'
   959  00FD1A  28                 	db	40
   960  00FD1B  6F                 	db	111	;'o'
   961  00FD1C  64                 	db	100	;'d'
   962  00FD1D  29                 	db	41
   963  00FD1E  20                 	db	32
   964  00FD1F  3C                 	db	60	;'<'
   965  00FD20  2D                 	db	45
   966  00FD21  20                 	db	32
   967  00FD22  73                 	db	115	;'s'
   968  00FD23  74                 	db	116	;'t'
   969  00FD24  6F                 	db	111	;'o'
   970  00FD25  70                 	db	112	;'p'
   971  00FD26  70                 	db	112	;'p'
   972  00FD27  65                 	db	101	;'e'
   973  00FD28  64                 	db	100	;'d'
   974  00FD29  20                 	db	32
   975  00FD2A  62                 	db	98	;'b'
   976  00FD2B  79                 	db	121	;'y'
   977  00FD2C  20                 	db	32
   978  00FD2D  70                 	db	112	;'p'
   979  00FD2E  72                 	db	114	;'r'
   980  00FD2F  65                 	db	101	;'e'
   981  00FD30  73                 	db	115	;'s'
   982  00FD31  73                 	db	115	;'s'
   983  00FD32  69                 	db	105	;'i'
   984  00FD33  6E                 	db	110	;'n'
   985  00FD34  67                 	db	103	;'g'
   986  00FD35  20                 	db	32
   987  00FD36  74                 	db	116	;'t'
   988  00FD37  68                 	db	104	;'h'
   989  00FD38  65                 	db	101	;'e'
   990  00FD39  20                 	db	32
   991  00FD3A  45                 	db	69	;'E'
   992  00FD3B  6E                 	db	110	;'n'
   993  00FD3C  74                 	db	116	;'t'
   994  00FD3D  65                 	db	101	;'e'
   995  00FD3E  72                 	db	114	;'r'
   996  00FD3F  20                 	db	32
   997  00FD40  6B                 	db	107	;'k'
   998  00FD41  65                 	db	101	;'e'
   999  00FD42  79                 	db	121	;'y'
  1000  00FD43  0A                 	db	10
  1001  00FD44  09                 	db	9
  1002  00FD45  74                 	db	116	;'t'
  1003  00FD46  6F                 	db	111	;'o'
  1004  00FD47  75                 	db	117	;'u'
  1005  00FD48  63                 	db	99	;'c'
  1006  00FD49  68                 	db	104	;'h'
  1007  00FD4A  20                 	db	32
  1008  00FD4B  5B                 	db	91	;'['
  1009  00FD4C  72                 	db	114	;'r'
  1010  00FD4D  65                 	db	101	;'e'
  1011  00FD4E  73                 	db	115	;'s'
  1012  00FD4F  65                 	db	101	;'e'
  1013  00FD50  74                 	db	116	;'t'
  1014  00FD51  28                 	db	40
  1015  00FD52  72                 	db	114	;'r'
  1016  00FD53  29                 	db	41
  1017  00FD54  2C                 	db	44
  1018  00FD55  69                 	db	105	;'i'
  1019  00FD56  6E                 	db	110	;'n'
  1020  00FD57  69                 	db	105	;'i'
  1021  00FD58  74                 	db	116	;'t'
  1022  00FD59  69                 	db	105	;'i'
  1023  00FD5A  61                 	db	97	;'a'
  1024  00FD5B  6C                 	db	108	;'l'
  1025  00FD5C  69                 	db	105	;'i'
  1026  00FD5D  7A                 	db	122	;'z'
  1027  00FD5E  65                 	db	101	;'e'
  1028  00FD5F  28                 	db	40
  1029  00FD60  69                 	db	105	;'i'
  1030  00FD61  6E                 	db	110	;'n'
  1031  00FD62  69                 	db	105	;'i'
  1032  00FD63  74                 	db	116	;'t'
  1033  00FD64  29                 	db	41
  1034  00FD65  5D                 	db	93	;']'
  1035  00FD66  20                 	db	32
  1036  00FD67  5B                 	db	91	;'['
  1037  00FD68  76                 	db	118	;'v'
  1038  00FD69  61                 	db	97	;'a'
  1039  00FD6A  6C                 	db	108	;'l'
  1040  00FD6B  75                 	db	117	;'u'
  1041  00FD6C  65                 	db	101	;'e'
  1042  00FD6D  28                 	db	40
  1043  00FD6E  25                 	db	37
  1044  00FD6F  29                 	db	41
  1045  00FD70  5D                 	db	93	;']'
  1046  00FD71  0A                 	db	10
  1047  00FD72  0A                 	db	10
  1048  00FD73  09                 	db	9
  1049  00FD74  66                 	db	102	;'f'
  1050  00FD75  6F                 	db	111	;'o'
  1051  00FD76  72                 	db	114	;'r'
  1052  00FD77  20                 	db	32
  1053  00FD78  44                 	db	68	;'D'
  1054  00FD79  65                 	db	101	;'e'
  1055  00FD7A  76                 	db	118	;'v'
  1056  00FD7B  65                 	db	101	;'e'
  1057  00FD7C  6C                 	db	108	;'l'
  1058  00FD7D  6F                 	db	111	;'o'
  1059  00FD7E  70                 	db	112	;'p'
  1060  00FD7F  70                 	db	112	;'p'
  1061  00FD80  65                 	db	101	;'e'
  1062  00FD81  72                 	db	114	;'r'
  1063  00FD82  0A                 	db	10
  1064  00FD83  09                 	db	9
  1065  00FD84  52                 	db	82	;'R'
  1066  00FD85  45                 	db	69	;'E'
  1067  00FD86  53                 	db	83	;'S'
  1068  00FD87  45                 	db	69	;'E'
  1069  00FD88  54                 	db	84	;'T'
  1070  00FD89  28                 	db	40
  1071  00FD8A  29                 	db	41
  1072  00FD8B  3B                 	db	59	;';'
  1073  00FD8C  0A                 	db	10
  1074  00FD8D  09                 	db	9
  1075  00FD8E  62                 	db	98	;'b'
  1076  00FD8F  6F                 	db	111	;'o'
  1077  00FD90  6F                 	db	111	;'o'
  1078  00FD91  74                 	db	116	;'t'
  1079  00FD92  6C                 	db	108	;'l'
  1080  00FD93  6F                 	db	111	;'o'
  1081  00FD94  61                 	db	97	;'a'
  1082  00FD95  64                 	db	100	;'d'
  1083  00FD96  0A                 	db	10
  1084  00FD97  00                 	db	0
  1085  00FD98                     STR_100:
  1086  00FD98  09                 	db	9
  1087  00FD99  32                 	db	50	;'2'
  1088  00FD9A  30                 	db	48	;'0'
  1089  00FD9B  25                 	db	37
  1090  00FD9C  30                 	db	48	;'0'
  1091  00FD9D  32                 	db	50	;'2'
  1092  00FD9E  64                 	db	100	;'d'
  1093  00FD9F  2F                 	db	47
  1094  00FDA0  25                 	db	37
  1095  00FDA1  30                 	db	48	;'0'
  1096  00FDA2  32                 	db	50	;'2'
  1097  00FDA3  64                 	db	100	;'d'
  1098  00FDA4  2F                 	db	47
  1099  00FDA5  25                 	db	37
  1100  00FDA6  30                 	db	48	;'0'
  1101  00FDA7  32                 	db	50	;'2'
  1102  00FDA8  64                 	db	100	;'d'
  1103  00FDA9  28                 	db	40
  1104  00FDAA  25                 	db	37
  1105  00FDAB  73                 	db	115	;'s'
  1106  00FDAC  29                 	db	41
  1107  00FDAD  25                 	db	37
  1108  00FDAE  30                 	db	48	;'0'
  1109  00FDAF  32                 	db	50	;'2'
  1110  00FDB0  64                 	db	100	;'d'
  1111  00FDB1  3A                 	db	58	;':'
  1112  00FDB2  25                 	db	37
  1113  00FDB3  30                 	db	48	;'0'
  1114  00FDB4  32                 	db	50	;'2'
  1115  00FDB5  64                 	db	100	;'d'
  1116  00FDB6  2D                 	db	45
  1117  00FDB7  25                 	db	37
  1118  00FDB8  30                 	db	48	;'0'
  1119  00FDB9  32                 	db	50	;'2'
  1120  00FDBA  64                 	db	100	;'d'
  1121  00FDBB  0A                 	db	10
  1122  00FDBC  00                 	db	0
  1123  00FDBD                     STR_23:
  1124  00FDBD  09                 	db	9
  1125  00FDBE  69                 	db	105	;'i'
  1126  00FDBF  6E                 	db	110	;'n'
  1127  00FDC0  76                 	db	118	;'v'
  1128  00FDC1  61                 	db	97	;'a'
  1129  00FDC2  6C                 	db	108	;'l'
  1130  00FDC3  69                 	db	105	;'i'
  1131  00FDC4  64                 	db	100	;'d'
  1132  00FDC5  20                 	db	32
  1133  00FDC6  64                 	db	100	;'d'
  1134  00FDC7  61                 	db	97	;'a'
  1135  00FDC8  74                 	db	116	;'t'
  1136  00FDC9  61                 	db	97	;'a'
  1137  00FDCA  0A                 	db	10
  1138  00FDCB  09                 	db	9
  1139  00FDCC  69                 	db	105	;'i'
  1140  00FDCD  6E                 	db	110	;'n'
  1141  00FDCE  69                 	db	105	;'i'
  1142  00FDCF  74                 	db	116	;'t'
  1143  00FDD0  69                 	db	105	;'i'
  1144  00FDD1  61                 	db	97	;'a'
  1145  00FDD2  6C                 	db	108	;'l'
  1146  00FDD3  69                 	db	105	;'i'
  1147  00FDD4  7A                 	db	122	;'z'
  1148  00FDD5  69                 	db	105	;'i'
  1149  00FDD6  6E                 	db	110	;'n'
  1150  00FDD7  67                 	db	103	;'g'
  1151  00FDD8  20                 	db	32
  1152  00FDD9  66                 	db	102	;'f'
  1153  00FDDA  61                 	db	97	;'a'
  1154  00FDDB  69                 	db	105	;'i'
  1155  00FDDC  6C                 	db	108	;'l'
  1156  00FDDD  65                 	db	101	;'e'
  1157  00FDDE  64                 	db	100	;'d'
  1158  00FDDF  0A                 	db	10
  1159  00FDE0  00                 	db	0
  1160  00FDE1                     STR_27:
  1161  00FDE1  32                 	db	50	;'2'
  1162  00FDE2  30                 	db	48	;'0'
  1163  00FDE3  25                 	db	37
  1164  00FDE4  30                 	db	48	;'0'
  1165  00FDE5  32                 	db	50	;'2'
  1166  00FDE6  64                 	db	100	;'d'
  1167  00FDE7  2F                 	db	47
  1168  00FDE8  25                 	db	37
  1169  00FDE9  30                 	db	48	;'0'
  1170  00FDEA  32                 	db	50	;'2'
  1171  00FDEB  64                 	db	100	;'d'
  1172  00FDEC  2F                 	db	47
  1173  00FDED  25                 	db	37
  1174  00FDEE  30                 	db	48	;'0'
  1175  00FDEF  32                 	db	50	;'2'
  1176  00FDF0  64                 	db	100	;'d'
  1177  00FDF1  2D                 	db	45
  1178  00FDF2  25                 	db	37
  1179  00FDF3  30                 	db	48	;'0'
  1180  00FDF4  32                 	db	50	;'2'
  1181  00FDF5  64                 	db	100	;'d'
  1182  00FDF6  3A                 	db	58	;':'
  1183  00FDF7  25                 	db	37
  1184  00FDF8  30                 	db	48	;'0'
  1185  00FDF9  32                 	db	50	;'2'
  1186  00FDFA  64                 	db	100	;'d'
  1187  00FDFB  2D                 	db	45
  1188  00FDFC  25                 	db	37
  1189  00FDFD  30                 	db	48	;'0'
  1190  00FDFE  32                 	db	50	;'2'
  1191  00FDFF  64                 	db	100	;'d'
  1192  00FE00  00                 	db	0
  1193  00FE01                     STR_33:
  1194  00FE01  25                 	db	37
  1195  00FE02  30                 	db	48	;'0'
  1196  00FE03  32                 	db	50	;'2'
  1197  00FE04  6C                 	db	108	;'l'
  1198  00FE05  64                 	db	100	;'d'
  1199  00FE06  64                 	db	100	;'d'
  1200  00FE07  20                 	db	32
  1201  00FE08  25                 	db	37
  1202  00FE09  30                 	db	48	;'0'
  1203  00FE0A  32                 	db	50	;'2'
  1204  00FE0B  6C                 	db	108	;'l'
  1205  00FE0C  64                 	db	100	;'d'
  1206  00FE0D  68                 	db	104	;'h'
  1207  00FE0E  20                 	db	32
  1208  00FE0F  25                 	db	37
  1209  00FE10  30                 	db	48	;'0'
  1210  00FE11  32                 	db	50	;'2'
  1211  00FE12  6C                 	db	108	;'l'
  1212  00FE13  64                 	db	100	;'d'
  1213  00FE14  6D                 	db	109	;'m'
  1214  00FE15  20                 	db	32
  1215  00FE16  25                 	db	37
  1216  00FE17  30                 	db	48	;'0'
  1217  00FE18  32                 	db	50	;'2'
  1218  00FE19  6C                 	db	108	;'l'
  1219  00FE1A  64                 	db	100	;'d'
  1220  00FE1B  73                 	db	115	;'s'
  1221  00FE1C  00                 	db	0
  1222  00FE1D                     STR_22:
  1223  00FE1D  09                 	db	9
  1224  00FE1E  69                 	db	105	;'i'
  1225  00FE1F  6E                 	db	110	;'n'
  1226  00FE20  69                 	db	105	;'i'
  1227  00FE21  74                 	db	116	;'t'
  1228  00FE22  69                 	db	105	;'i'
  1229  00FE23  61                 	db	97	;'a'
  1230  00FE24  6C                 	db	108	;'l'
  1231  00FE25  69                 	db	105	;'i'
  1232  00FE26  7A                 	db	122	;'z'
  1233  00FE27  69                 	db	105	;'i'
  1234  00FE28  6E                 	db	110	;'n'
  1235  00FE29  67                 	db	103	;'g'
  1236  00FE2A  20                 	db	32
  1237  00FE2B  63                 	db	99	;'c'
  1238  00FE2C  6F                 	db	111	;'o'
  1239  00FE2D  6D                 	db	109	;'m'
  1240  00FE2E  70                 	db	112	;'p'
  1241  00FE2F  6C                 	db	108	;'l'
  1242  00FE30  65                 	db	101	;'e'
  1243  00FE31  74                 	db	116	;'t'
  1244  00FE32  65                 	db	101	;'e'
  1245  00FE33  0A                 	db	10
  1246  00FE34  00                 	db	0
  1247  00FE35                     STR_28:
  1248  00FE35  20                 	db	32
  1249  00FE36  25                 	db	37
  1250  00FE37  73                 	db	115	;'s'
  1251  00FE38  3A                 	db	58	;':'
  1252  00FE39  25                 	db	37
  1253  00FE3A  30                 	db	48	;'0'
  1254  00FE3B  31                 	db	49	;'1'
  1255  00FE3C  64                 	db	100	;'d'
  1256  00FE3D  2E                 	db	46
  1257  00FE3E  25                 	db	37
  1258  00FE3F  30                 	db	48	;'0'
  1259  00FE40  33                 	db	51	;'3'
  1260  00FE41  64                 	db	100	;'d'
  1261  00FE42  41                 	db	65	;'A'
  1262  00FE43  2C                 	db	44
  1263  00FE44  25                 	db	37
  1264  00FE45  30                 	db	48	;'0'
  1265  00FE46  36                 	db	54	;'6'
  1266  00FE47  6C                 	db	108	;'l'
  1267  00FE48  64                 	db	100	;'d'
  1268  00FE49  6D                 	db	109	;'m'
  1269  00FE4A  41                 	db	65	;'A'
  1270  00FE4B  68                 	db	104	;'h'
  1271  00FE4C  00                 	db	0
  1272  00FE4D                     STR_26:
  1273  00FE4D  09                 	db	9
  1274  00FE4E  73                 	db	115	;'s'
  1275  00FE4F  65                 	db	101	;'e'
  1276  00FE50  74                 	db	116	;'t'
  1277  00FE51  69                 	db	105	;'i'
  1278  00FE52  6E                 	db	110	;'n'
  1279  00FE53  67                 	db	103	;'g'
  1280  00FE54  20                 	db	32
  1281  00FE55  63                 	db	99	;'c'
  1282  00FE56  6F                 	db	111	;'o'
  1283  00FE57  6D                 	db	109	;'m'
  1284  00FE58  70                 	db	112	;'p'
  1285  00FE59  6C                 	db	108	;'l'
  1286  00FE5A  65                 	db	101	;'e'
  1287  00FE5B  74                 	db	116	;'t'
  1288  00FE5C  65                 	db	101	;'e'
  1289  00FE5D  0A                 	db	10
  1290  00FE5E  00                 	db	0
  1291  00FE5F                     STR_65:
  1292  00FE5F  3C                 	db	60	;'<'
  1293  00FE60  2D                 	db	45
  1294  00FE61  20                 	db	32
  1295  00FE62  20                 	db	32
  1296  00FE63  20                 	db	32
  1297  00FE64  53                 	db	83	;'S'
  1298  00FE65  65                 	db	101	;'e'
  1299  00FE66  6C                 	db	108	;'l'
  1300  00FE67  65                 	db	101	;'e'
  1301  00FE68  63                 	db	99	;'c'
  1302  00FE69  74                 	db	116	;'t'
  1303  00FE6A  20                 	db	32
  1304  00FE6B  20                 	db	32
  1305  00FE6C  20                 	db	32
  1306  00FE6D  2D                 	db	45
  1307  00FE6E  3E                 	db	62	;'>'
  1308  00FE6F  00                 	db	0
  1309  00FE70                     STR_71:
  1310  00FE70  54                 	db	84	;'T'
  1311  00FE71  6F                 	db	111	;'o'
  1312  00FE72  67                 	db	103	;'g'
  1313  00FE73  67                 	db	103	;'g'
  1314  00FE74  6C                 	db	108	;'l'
  1315  00FE75  65                 	db	101	;'e'
  1316  00FE76  20                 	db	32
  1317  00FE77  41                 	db	65	;'A'
  1318  00FE78  75                 	db	117	;'u'
  1319  00FE79  74                 	db	116	;'t'
  1320  00FE7A  6F                 	db	111	;'o'
  1321  00FE7B  20                 	db	32
  1322  00FE7C  53                 	db	83	;'S'
  1323  00FE7D  74                 	db	116	;'t'
  1324  00FE7E  6F                 	db	111	;'o'
  1325  00FE7F  70                 	db	112	;'p'
  1326  00FE80  00                 	db	0
  1327  00FE81                     STR_42:
  1328  00FE81  4C                 	db	76	;'L'
  1329  00FE82  65                 	db	101	;'e'
  1330  00FE83  66                 	db	102	;'f'
  1331  00FE84  74                 	db	116	;'t'
  1332  00FE85  20                 	db	32
  1333  00FE86  43                 	db	67	;'C'
  1334  00FE87  65                 	db	101	;'e'
  1335  00FE88  6E                 	db	110	;'n'
  1336  00FE89  74                 	db	116	;'t'
  1337  00FE8A  72                 	db	114	;'r'
  1338  00FE8B  20                 	db	32
  1339  00FE8C  52                 	db	82	;'R'
  1340  00FE8D  69                 	db	105	;'i'
  1341  00FE8E  67                 	db	103	;'g'
  1342  00FE8F  68                 	db	104	;'h'
  1343  00FE90  74                 	db	116	;'t'
  1344  00FE91  00                 	db	0
  1345  00FE92                     STR_5:
  1346  00FE92  43                 	db	67	;'C'
  1347  00FE93  68                 	db	104	;'h'
  1348  00FE94  61                 	db	97	;'a'
  1349  00FE95  72                 	db	114	;'r'
  1350  00FE96  67                 	db	103	;'g'
  1351  00FE97  65                 	db	101	;'e'
  1352  00FE98  20                 	db	32
  1353  00FE99  53                 	db	83	;'S'
  1354  00FE9A  74                 	db	116	;'t'
  1355  00FE9B  61                 	db	97	;'a'
  1356  00FE9C  74                 	db	116	;'t'
  1357  00FE9D  69                 	db	105	;'i'
  1358  00FE9E  6F                 	db	111	;'o'
  1359  00FE9F  6E                 	db	110	;'n'
  1360  00FEA0  20                 	db	32
  1361  00FEA1  36                 	db	54	;'6'
  1362  00FEA2  00                 	db	0
  1363  00FEA3                     STR_69:
  1364  00FEA3  41                 	db	65	;'A'
  1365  00FEA4  64                 	db	100	;'d'
  1366  00FEA5  6A                 	db	106	;'j'
  1367  00FEA6  75                 	db	117	;'u'
  1368  00FEA7  73                 	db	115	;'s'
  1369  00FEA8  74                 	db	116	;'t'
  1370  00FEA9  20                 	db	32
  1371  00FEAA  74                 	db	116	;'t'
  1372  00FEAB  68                 	db	104	;'h'
  1373  00FEAC  65                 	db	101	;'e'
  1374  00FEAD  20                 	db	32
  1375  00FEAE  54                 	db	84	;'T'
  1376  00FEAF  69                 	db	105	;'i'
  1377  00FEB0  6D                 	db	109	;'m'
  1378  00FEB1  65                 	db	101	;'e'
  1379  00FEB2  00                 	db	0
  1380  00FEB3                     STR_73:
  1381  00FEB3  54                 	db	84	;'T'
  1382  00FEB4  6F                 	db	111	;'o'
  1383  00FEB5  67                 	db	103	;'g'
  1384  00FEB6  67                 	db	103	;'g'
  1385  00FEB7  6C                 	db	108	;'l'
  1386  00FEB8  65                 	db	101	;'e'
  1387  00FEB9  20                 	db	32
  1388  00FEBA  4C                 	db	76	;'L'
  1389  00FEBB  45                 	db	69	;'E'
  1390  00FEBC  44                 	db	68	;'D'
  1391  00FEBD  20                 	db	32
  1392  00FEBE  4C                 	db	76	;'L'
  1393  00FEBF  61                 	db	97	;'a'
  1394  00FEC0  6D                 	db	109	;'m'
  1395  00FEC1  70                 	db	112	;'p'
  1396  00FEC2  00                 	db	0
  1397  00FEC3                     STR_10:
  1398  00FEC3  42                 	db	66	;'B'
  1399  00FEC4  6F                 	db	111	;'o'
  1400  00FEC5  6F                 	db	111	;'o'
  1401  00FEC6  74                 	db	116	;'t'
  1402  00FEC7  6C                 	db	108	;'l'
  1403  00FEC8  6F                 	db	111	;'o'
  1404  00FEC9  61                 	db	97	;'a'
  1405  00FECA  64                 	db	100	;'d'
  1406  00FECB  65                 	db	101	;'e'
  1407  00FECC  72                 	db	114	;'r'
  1408  00FECD  20                 	db	32
  1409  00FECE  6D                 	db	109	;'m'
  1410  00FECF  6F                 	db	111	;'o'
  1411  00FED0  64                 	db	100	;'d'
  1412  00FED1  65                 	db	101	;'e'
  1413  00FED2  00                 	db	0
  1414  00FED3                     STR_75:
  1415  00FED3  49                 	db	73	;'I'
  1416  00FED4  6E                 	db	110	;'n'
  1417  00FED5  74                 	db	116	;'t'
  1418  00FED6  65                 	db	101	;'e'
  1419  00FED7  67                 	db	103	;'g'
  1420  00FED8  72                 	db	114	;'r'
  1421  00FED9  61                 	db	97	;'a'
  1422  00FEDA  74                 	db	116	;'t'
  1423  00FEDB  20                 	db	32
  1424  00FEDC  52                 	db	82	;'R'
  1425  00FEDD  65                 	db	101	;'e'
  1426  00FEDE  73                 	db	115	;'s'
  1427  00FEDF  65                 	db	101	;'e'
  1428  00FEE0  74                 	db	116	;'t'
  1429  00FEE1  00                 	db	0
  1430  00FEE2                     STR_7:
  1431  00FEE2  43                 	db	67	;'C'
  1432  00FEE3  68                 	db	104	;'h'
  1433  00FEE4  61                 	db	97	;'a'
  1434  00FEE5  72                 	db	114	;'r'
  1435  00FEE6  67                 	db	103	;'g'
  1436  00FEE7  65                 	db	101	;'e'
  1437  00FEE8  20                 	db	32
  1438  00FEE9  53                 	db	83	;'S'
  1439  00FEEA  74                 	db	116	;'t'
  1440  00FEEB  61                 	db	97	;'a'
  1441  00FEEC  74                 	db	116	;'t'
  1442  00FEED  69                 	db	105	;'i'
  1443  00FEEE  6F                 	db	111	;'o'
  1444  00FEEF  6E                 	db	110	;'n'
  1445  00FEF0  00                 	db	0
  1446  00FEF1                     STR_8:
  1447  00FEF1  57                 	db	87	;'W'
  1448  00FEF2  65                 	db	101	;'e'
  1449  00FEF3  6C                 	db	108	;'l'
  1450  00FEF4  63                 	db	99	;'c'
  1451  00FEF5  6F                 	db	111	;'o'
  1452  00FEF6  6D                 	db	109	;'m'
  1453  00FEF7  65                 	db	101	;'e'
  1454  00FEF8  20                 	db	32
  1455  00FEF9  62                 	db	98	;'b'
  1456  00FEFA  61                 	db	97	;'a'
  1457  00FEFB  63                 	db	99	;'c'
  1458  00FEFC  6B                 	db	107	;'k'
  1459  00FEFD  21                 	db	33
  1460  00FEFE  00                 	db	0
  1461  00FEFF                     STR_35:
  1462  00FEFF  4D                 	db	77	;'M'
  1463  00FF00  61                 	db	97	;'a'
  1464  00FF01  64                 	db	100	;'d'
  1465  00FF02  65                 	db	101	;'e'
  1466  00FF03  20                 	db	32
  1467  00FF04  62                 	db	98	;'b'
  1468  00FF05  79                 	db	121	;'y'
  1469  00FF06  20                 	db	32
  1470  00FF07  4B                 	db	75	;'K'
  1471  00FF08  45                 	db	69	;'E'
  1472  00FF09  52                 	db	82	;'R'
  1473  00FF0A  49                 	db	73	;'I'
  1474  00FF0B  00                 	db	0
  1475  00FF0C                     STR_6:
  1476  00FF0C  53                 	db	83	;'S'
  1477  00FF0D  4C                 	db	76	;'L'
  1478  00FF0E  45                 	db	69	;'E'
  1479  00FF0F  45                 	db	69	;'E'
  1480  00FF10  50                 	db	80	;'P'
  1481  00FF11  49                 	db	73	;'I'
  1482  00FF12  4E                 	db	78	;'N'
  1483  00FF13  47                 	db	71	;'G'
  1484  00FF14  20                 	db	32
  1485  00FF15  4E                 	db	78	;'N'
  1486  00FF16  4F                 	db	79	;'O'
  1487  00FF17  57                 	db	87	;'W'
  1488  00FF18  00                 	db	0
  1489  00FF19                     STR_105:
  1490  00FF19  61                 	db	97	;'a'
  1491  00FF1A  64                 	db	100	;'d'
  1492  00FF1B  6A                 	db	106	;'j'
  1493  00FF1C  75                 	db	117	;'u'
  1494  00FF1D  73                 	db	115	;'s'
  1495  00FF1E  74                 	db	116	;'t'
  1496  00FF1F  5F                 	db	95	;'_'
  1497  00FF20  74                 	db	116	;'t'
  1498  00FF21  69                 	db	105	;'i'
  1499  00FF22  6D                 	db	109	;'m'
  1500  00FF23  65                 	db	101	;'e'
  1501  00FF24  00                 	db	0
  1502  00FF25                     STR_9:
  1503  00FF25  50                 	db	80	;'P'
  1504  00FF26  49                 	db	73	;'I'
  1505  00FF27  43                 	db	67	;'C'
  1506  00FF28  31                 	db	49	;'1'
  1507  00FF29  38                 	db	56	;'8'
  1508  00FF2A  46                 	db	70	;'F'
  1509  00FF2B  32                 	db	50	;'2'
  1510  00FF2C  37                 	db	55	;'7'
  1511  00FF2D  4A                 	db	74	;'J'
  1512  00FF2E  35                 	db	53	;'5'
  1513  00FF2F  33                 	db	51	;'3'
  1514  00FF30  00                 	db	0
  1515  00FF31                     STR_17:
  1516  00FF31  6F                 	db	111	;'o'
  1517  00FF32  75                 	db	117	;'u'
  1518  00FF33  74                 	db	116	;'t'
  1519  00FF34  70                 	db	112	;'p'
  1520  00FF35  75                 	db	117	;'u'
  1521  00FF36  74                 	db	116	;'t'
  1522  00FF37  5F                 	db	95	;'_'
  1523  00FF38  64                 	db	100	;'d'
  1524  00FF39  61                 	db	97	;'a'
  1525  00FF3A  74                 	db	116	;'t'
  1526  00FF3B  61                 	db	97	;'a'
  1527  00FF3C  00                 	db	0
  1528  00FF3D                     STR_102:
  1529  00FF3D  70                 	db	112	;'p'
  1530  00FF3E  72                 	db	114	;'r'
  1531  00FF3F  69                 	db	105	;'i'
  1532  00FF40  6E                 	db	110	;'n'
  1533  00FF41  74                 	db	116	;'t'
  1534  00FF42  5F                 	db	95	;'_'
  1535  00FF43  74                 	db	116	;'t'
  1536  00FF44  69                 	db	105	;'i'
  1537  00FF45  6D                 	db	109	;'m'
  1538  00FF46  65                 	db	101	;'e'
  1539  00FF47  00                 	db	0
  1540  00FF48                     STR_31:
  1541  00FF48  25                 	db	37
  1542  00FF49  30                 	db	48	;'0'
  1543  00FF4A  31                 	db	49	;'1'
  1544  00FF4B  64                 	db	100	;'d'
  1545  00FF4C  2E                 	db	46
  1546  00FF4D  25                 	db	37
  1547  00FF4E  30                 	db	48	;'0'
  1548  00FF4F  33                 	db	51	;'3'
  1549  00FF50  64                 	db	100	;'d'
  1550  00FF51  41                 	db	65	;'A'
  1551  00FF52  00                 	db	0
  1552  00FF53                     STR_20:
  1553  00FF53  69                 	db	105	;'i'
  1554  00FF54  6E                 	db	110	;'n'
  1555  00FF55  69                 	db	105	;'i'
  1556  00FF56  74                 	db	116	;'t'
  1557  00FF57  69                 	db	105	;'i'
  1558  00FF58  61                 	db	97	;'a'
  1559  00FF59  6C                 	db	108	;'l'
  1560  00FF5A  69                 	db	105	;'i'
  1561  00FF5B  7A                 	db	122	;'z'
  1562  00FF5C  65                 	db	101	;'e'
  1563  00FF5D  00                 	db	0
  1564  00FF5E                     STR_92:
  1565  00FF5E  20                 	db	32
  1566  00FF5F  20                 	db	32
  1567  00FF60  20                 	db	32
  1568  00FF61  20                 	db	32
  1569  00FF62  20                 	db	32
  1570  00FF63  20                 	db	32
  1571  00FF64  20                 	db	32
  1572  00FF65  20                 	db	32
  1573  00FF66  00                 	db	0
  1574  00FF67                     STR_64:
  1575  00FF67  53                 	db	83	;'S'
  1576  00FF68  65                 	db	101	;'e'
  1577  00FF69  74                 	db	116	;'t'
  1578  00FF6A  74                 	db	116	;'t'
  1579  00FF6B  69                 	db	105	;'i'
  1580  00FF6C  6E                 	db	110	;'n'
  1581  00FF6D  67                 	db	103	;'g'
  1582  00FF6E  73                 	db	115	;'s'
  1583  00FF6F  00                 	db	0
  1584  00FF70                     STR_14:
  1585  00FF70  52                 	db	82	;'R'
  1586  00FF71  45                 	db	69	;'E'
  1587  00FF72  53                 	db	83	;'S'
  1588  00FF73  45                 	db	69	;'E'
  1589  00FF74  54                 	db	84	;'T'
  1590  00FF75  28                 	db	40
  1591  00FF76  29                 	db	41
  1592  00FF77  3B                 	db	59	;';'
  1593  00FF78  00                 	db	0
  1594  00FF79                     STR_15:
  1595  00FF79  62                 	db	98	;'b'
  1596  00FF7A  6F                 	db	111	;'o'
  1597  00FF7B  6F                 	db	111	;'o'
  1598  00FF7C  74                 	db	116	;'t'
  1599  00FF7D  6C                 	db	108	;'l'
  1600  00FF7E  6F                 	db	111	;'o'
  1601  00FF7F  61                 	db	97	;'a'
  1602  00FF80  64                 	db	100	;'d'
  1603  00FF81  00                 	db	0
  1604  00FF82                     STR_101:
  1605  00FF82  09                 	db	9
  1606  00FF83  65                 	db	101	;'e'
  1607  00FF84  72                 	db	114	;'r'
  1608  00FF85  72                 	db	114	;'r'
  1609  00FF86  6F                 	db	111	;'o'
  1610  00FF87  72                 	db	114	;'r'
  1611  00FF88  0A                 	db	10
  1612  00FF89  00                 	db	0
  1613  00FF8A                     STR_118:
  1614  00FF8A  28                 	db	40
  1615  00FF8B  6E                 	db	110	;'n'
  1616  00FF8C  75                 	db	117	;'u'
  1617  00FF8D  6C                 	db	108	;'l'
  1618  00FF8E  6C                 	db	108	;'l'
  1619  00FF8F  29                 	db	41
  1620  00FF90  00                 	db	0
  1621  00FF91                     STR_117:
  1622  00FF91  73                 	db	115	;'s'
  1623  00FF92  65                 	db	101	;'e'
  1624  00FF93  63                 	db	99	;'c'
  1625  00FF94  6F                 	db	111	;'o'
  1626  00FF95  6E                 	db	110	;'n'
  1627  00FF96  64                 	db	100	;'d'
  1628  00FF97  00                 	db	0
  1629  00FF98                     STR_115:
  1630  00FF98  6D                 	db	109	;'m'
  1631  00FF99  69                 	db	105	;'i'
  1632  00FF9A  6E                 	db	110	;'n'
  1633  00FF9B  75                 	db	117	;'u'
  1634  00FF9C  74                 	db	116	;'t'
  1635  00FF9D  65                 	db	101	;'e'
  1636  00FF9E  00                 	db	0
  1637  00FF9F                     STR_109:
  1638  00FF9F  6D                 	db	109	;'m'
  1639  00FFA0  6F                 	db	111	;'o'
  1640  00FFA1  6E                 	db	110	;'n'
  1641  00FFA2  74                 	db	116	;'t'
  1642  00FFA3  68                 	db	104	;'h'
  1643  00FFA4  00                 	db	0
  1644  00FFA5                     STR_57:
  1645  00FFA5  20                 	db	32
  1646  00FFA6  20                 	db	32
  1647  00FFA7  30                 	db	48	;'0'
  1648  00FFA8  20                 	db	32
  1649  00FFA9  20                 	db	32
  1650  00FFAA  00                 	db	0
  1651  00FFAB                     STR_40:
  1652  00FFAB  20                 	db	32
  1653  00FFAC  4F                 	db	79	;'O'
  1654  00FFAD  4E                 	db	78	;'N'
  1655  00FFAE  20                 	db	32
  1656  00FFAF  20                 	db	32
  1657  00FFB0  00                 	db	0
  1658  00FFB1                     STR_41:
  1659  00FFB1  20                 	db	32
  1660  00FFB2  4F                 	db	79	;'O'
  1661  00FFB3  46                 	db	70	;'F'
  1662  00FFB4  46                 	db	70	;'F'
  1663  00FFB5  20                 	db	32
  1664  00FFB6  00                 	db	0
  1665  00FFB7                     STR_56:
  1666  00FFB7  20                 	db	32
  1667  00FFB8  79                 	db	121	;'y'
  1668  00FFB9  65                 	db	101	;'e'
  1669  00FFBA  74                 	db	116	;'t'
  1670  00FFBB  20                 	db	32
  1671  00FFBC  00                 	db	0
  1672  00FFBD                     STR_30:
  1673  00FFBD  25                 	db	37
  1674  00FFBE  73                 	db	115	;'s'
  1675  00FFBF  20                 	db	32
  1676  00FFC0  25                 	db	37
  1677  00FFC1  73                 	db	115	;'s'
  1678  00FFC2  00                 	db	0
  1679  00FFC3                     STR_19:
  1680  00FFC3  74                 	db	116	;'t'
  1681  00FFC4  6F                 	db	111	;'o'
  1682  00FFC5  75                 	db	117	;'u'
  1683  00FFC6  63                 	db	99	;'c'
  1684  00FFC7  68                 	db	104	;'h'
  1685  00FFC8  00                 	db	0
  1686  00FFC9                     STR_24:
  1687  00FFC9  72                 	db	114	;'r'
  1688  00FFCA  65                 	db	101	;'e'
  1689  00FFCB  73                 	db	115	;'s'
  1690  00FFCC  65                 	db	101	;'e'
  1691  00FFCD  74                 	db	116	;'t'
  1692  00FFCE  00                 	db	0
  1693  00FFCF                     STR_107:
  1694  00FFCF  79                 	db	121	;'y'
  1695  00FFD0  65                 	db	101	;'e'
  1696  00FFD1  61                 	db	97	;'a'
  1697  00FFD2  72                 	db	114	;'r'
  1698  00FFD3  00                 	db	0
  1699  00FFD4                     STR_113:
  1700  00FFD4  68                 	db	104	;'h'
  1701  00FFD5  6F                 	db	111	;'o'
  1702  00FFD6  75                 	db	117	;'u'
  1703  00FFD7  72                 	db	114	;'r'
  1704  00FFD8  00                 	db	0
  1705  00FFD9                     STR_11:
  1706  00FFD9  68                 	db	104	;'h'
  1707  00FFDA  65                 	db	101	;'e'
  1708  00FFDB  6C                 	db	108	;'l'
  1709  00FFDC  70                 	db	112	;'p'
  1710  00FFDD  00                 	db	0
  1711  00FFDE                     STR_21:
  1712  00FFDE  69                 	db	105	;'i'
  1713  00FFDF  6E                 	db	110	;'n'
  1714  00FFE0  69                 	db	105	;'i'
  1715  00FFE1  74                 	db	116	;'t'
  1716  00FFE2  00                 	db	0
  1717  00FFE3                     STR_96:
  1718  00FFE3  08                 	db	8
  1719  00FFE4  20                 	db	32
  1720  00FFE5  08                 	db	8
  1721  00FFE6  00                 	db	0
  1722  00FFE7                     STR_111:
  1723  00FFE7  64                 	db	100	;'d'
  1724  00FFE8  61                 	db	97	;'a'
  1725  00FFE9  79                 	db	121	;'y'
  1726  00FFEA  00                 	db	0
  1727  00FFEB                     STR_104:
  1728  00FFEB  61                 	db	97	;'a'
  1729  00FFEC  74                 	db	116	;'t'
  1730  00FFED  00                 	db	0
  1731  00FFEE                     STR_16:
  1732  00FFEE  6F                 	db	111	;'o'
  1733  00FFEF  64                 	db	100	;'d'
  1734  00FFF0  00                 	db	0
  1735  00FFF1                     STR_108:
  1736  00FFF1  4D                 	db	77	;'M'
  1737  00FFF2  00                 	db	0
  1738  00FFF3                     STR_114:
  1739  00FFF3  6D                 	db	109	;'m'
  1740  00FFF4  00                 	db	0
  1741  00FFF5                     STR_90:
  1742  00FFF5  28                 	db	40
  1743  00FFF6  00                 	db	0
  1744  00FFF7                     STR_86:
  1745  00FFF7  2D                 	db	45
  1746  00FFF8  00                 	db	0
  1747  00FFF9                     STR_81:
  1748  00FFF9  2F                 	db	47
  1749  00FFFA  00                 	db	0
  1750  00FFFB                     STR_84:
  1751  00FFFB  3A                 	db	58	;':'
  1752  00FFFC  00                 	db	0
  1753  00FFFD                     STR_12:
  1754  00FFFD  3F                 	db	63	;'?'
  1755  00FFFE  00                 	db	0
  1756  0000                     
  1757                           ; #config settings
  1758  00FFFF  00                 	db	0	; dummy byte at the end
  1759  0000                     tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           intcon2	equ	0xFF1
  1767                           wreg	equ	0xFE8
  1768                           indf1	equ	0xFE7
  1769                           postinc1	equ	0xFE6
  1770                           postdec1	equ	0xFE5
  1771                           fsr1h	equ	0xFE2
  1772                           fsr1l	equ	0xFE1
  1773                           indf2	equ	0xFDF
  1774                           postinc2	equ	0xFDE
  1775                           postdec2	equ	0xFDD
  1776                           plusw2	equ	0xFDB
  1777                           fsr2h	equ	0xFDA
  1778                           fsr2l	equ	0xFD9
  1779                           status	equ	0xFD8
  1780                           
  1781                           	psect	cinit
  1782  0134F8                     __pcinit:
  1783                           	opt stack 0
  1784  0134F8                     start_initialization:
  1785                           	opt stack 0
  1786  0134F8                     __initialization:
  1787                           	opt stack 0
  1788                           
  1789                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1790  0134F8  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
  1791  0134FC  EE17 F0D0          	lfsr	1,2000
  1792  013500                     clear_0:
  1793  013500  6AEE               	clrf	postinc0,c
  1794  013502  50E5               	movf	postdec1,w,c
  1795  013504  50E1               	movf	fsr1l,w,c
  1796  013506  E1FC               	bnz	clear_0
  1797  013508  50E2               	movf	fsr1h,w,c
  1798  01350A  E1FA               	bnz	clear_0
  1799                           
  1800                           ; Clear objects allocated to BANK4 (200 bytes)
  1801  01350C  EE04  F000         	lfsr	0,__pbssBANK4
  1802  013510  0EC8               	movlw	200
  1803  013512                     clear_1:
  1804  013512  6AEE               	clrf	postinc0,c
  1805  013514  06E8               	decf	wreg,f,c
  1806  013516  E1FD               	bnz	clear_1
  1807                           
  1808                           ; Clear objects allocated to BANK3 (228 bytes)
  1809  013518  EE03  F000         	lfsr	0,__pbssBANK3
  1810  01351C  0EE4               	movlw	228
  1811  01351E                     clear_2:
  1812  01351E  6AEE               	clrf	postinc0,c
  1813  013520  06E8               	decf	wreg,f,c
  1814  013522  E1FD               	bnz	clear_2
  1815                           
  1816                           ; Clear objects allocated to BANK2 (204 bytes)
  1817  013524  EE02  F000         	lfsr	0,__pbssBANK2
  1818  013528  0ECC               	movlw	204
  1819  01352A                     clear_3:
  1820  01352A  6AEE               	clrf	postinc0,c
  1821  01352C  06E8               	decf	wreg,f,c
  1822  01352E  E1FD               	bnz	clear_3
  1823                           
  1824                           ; Clear objects allocated to BANK1 (148 bytes)
  1825  013530  EE01  F000         	lfsr	0,__pbssBANK1
  1826  013534  0E94               	movlw	148
  1827  013536                     clear_4:
  1828  013536  6AEE               	clrf	postinc0,c
  1829  013538  06E8               	decf	wreg,f,c
  1830  01353A  E1FD               	bnz	clear_4
  1831                           
  1832                           ; Clear objects allocated to BANK0 (3 bytes)
  1833  01353C  0100               	movlb	0
  1834  01353E  6BED               	clrf	(__pbssBANK0+2)& (0+255),b
  1835  013540  6BEC               	clrf	(__pbssBANK0+1)& (0+255),b
  1836  013542  6BEB               	clrf	__pbssBANK0& (0+255),b
  1837                           
  1838                           ; Clear objects allocated to COMRAM (42 bytes)
  1839  013544  EE00  F001         	lfsr	0,__pbssCOMRAM
  1840  013548  0E2A               	movlw	42
  1841  01354A                     clear_5:
  1842  01354A  6AEE               	clrf	postinc0,c
  1843  01354C  06E8               	decf	wreg,f,c
  1844  01354E  E1FD               	bnz	clear_5
  1845                           
  1846                           ; Initialize objects allocated to BANK1 (2 bytes)
  1847                           ; load TBLPTR registers with __pidataBANK1
  1848  013550  0EB0               	movlw	low __pidataBANK1
  1849  013552  6EF6               	movwf	tblptrl,c
  1850  013554  0E45               	movlw	high __pidataBANK1
  1851  013556  6EF7               	movwf	tblptrh,c
  1852  013558  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1853  01355A  6EF8               	movwf	tblptru,c
  1854  01355C  0009               	tblrd		*+	;fetch initializer
  1855  01355E  CFF5 F1FD          	movff	tablat,__pdataBANK1
  1856  013562  0009               	tblrd		*+	;fetch initializer
  1857  013564  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  1858  013568                     end_of_initialization:
  1859                           	opt stack 0
  1860  013568                     __end_of__initialization:
  1861                           	opt stack 0
  1862  013568  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1863  01356A  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1864  01356C  0100               	movlb	0
  1865  01356E  EFD4  F09B         	goto	_main	;jump to C main() function
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           prodh	equ	0xFF4
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           intcon2	equ	0xFF1
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           indf1	equ	0xFE7
  1877                           postinc1	equ	0xFE6
  1878                           postdec1	equ	0xFE5
  1879                           fsr1h	equ	0xFE2
  1880                           fsr1l	equ	0xFE1
  1881                           indf2	equ	0xFDF
  1882                           postinc2	equ	0xFDE
  1883                           postdec2	equ	0xFDD
  1884                           plusw2	equ	0xFDB
  1885                           fsr2h	equ	0xFDA
  1886                           fsr2l	equ	0xFD9
  1887                           status	equ	0xFD8
  1888                           
  1889                           	psect	bssCOMRAM
  1890  000001                     __pbssCOMRAM:
  1891                           	opt stack 0
  1892  000001                     _outPipes:
  1893                           	opt stack 0
  1894  000001                     	ds	9
  1895  00000A                     _inPipes:
  1896                           	opt stack 0
  1897  00000A                     	ds	6
  1898  000010                     _pBDTEntryIn:
  1899                           	opt stack 0
  1900  000010                     	ds	6
  1901  000016                     _pBDTEntryEP0OutCurrent:
  1902                           	opt stack 0
  1903  000016                     	ds	2
  1904  000018                     _pBDTEntryEP0OutNext:
  1905                           	opt stack 0
  1906  000018                     	ds	2
  1907  00001A                     _USBDeferStatusStagePacket:
  1908                           	opt stack 0
  1909  00001A                     	ds	1
  1910  00001B                     _USBDeviceState:
  1911                           	opt stack 0
  1912  00001B                     	ds	1
  1913  00001C                     _USBStatusStageTimeoutCounter:
  1914                           	opt stack 0
  1915  00001C                     	ds	1
  1916  00001D                     _cdc_rx_len:
  1917                           	opt stack 0
  1918  00001D                     	ds	1
  1919  00001E                     _cdc_trf_state:
  1920                           	opt stack 0
  1921  00001E                     	ds	1
  1922  00001F                     _cdc_tx_len:
  1923                           	opt stack 0
  1924  00001F                     	ds	1
  1925  000020                     _controlTransferState:
  1926                           	opt stack 0
  1927  000020                     	ds	1
  1928  000021                     _data_item:
  1929                           	opt stack 0
  1930  000021                     	ds	1
  1931  000022                     _endpoint_number:
  1932                           	opt stack 0
  1933  000022                     	ds	1
  1934  000023                     _print_port:
  1935                           	opt stack 0
  1936  000023                     	ds	1
  1937  000024                     _shortPacketStatus:
  1938                           	opt stack 0
  1939  000024                     	ds	1
  1940  000025                     _ctmu_m:
  1941                           	opt stack 0
  1942  000025                     	ds	4
  1943  000029                     _USBActiveConfiguration:
  1944                           	opt stack 0
  1945  000029                     	ds	1
  1946  00002A                     _USTATcopy:
  1947                           	opt stack 0
  1948  00002A                     	ds	1
  1949                           tblptru	equ	0xFF8
  1950                           tblptrh	equ	0xFF7
  1951                           tblptrl	equ	0xFF6
  1952                           tablat	equ	0xFF5
  1953                           prodh	equ	0xFF4
  1954                           prodl	equ	0xFF3
  1955                           intcon	equ	0xFF2
  1956                           intcon2	equ	0xFF1
  1957                           postinc0	equ	0xFEE
  1958                           wreg	equ	0xFE8
  1959                           indf1	equ	0xFE7
  1960                           postinc1	equ	0xFE6
  1961                           postdec1	equ	0xFE5
  1962                           fsr1h	equ	0xFE2
  1963                           fsr1l	equ	0xFE1
  1964                           indf2	equ	0xFDF
  1965                           postinc2	equ	0xFDE
  1966                           postdec2	equ	0xFDD
  1967                           plusw2	equ	0xFDB
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972                           	psect	bssBANK0
  1973  0000EB                     __pbssBANK0:
  1974                           	opt stack 0
  1975  0000EB                     _ctmu_ratio:
  1976                           	opt stack 0
  1977  0000EB                     	ds	1
  1978  0000EC                     _print_item:
  1979                           	opt stack 0
  1980  0000EC                     	ds	1
  1981  0000ED                     _settings_item:
  1982                           	opt stack 0
  1983  0000ED                     	ds	1
  1984                           tblptru	equ	0xFF8
  1985                           tblptrh	equ	0xFF7
  1986                           tblptrl	equ	0xFF6
  1987                           tablat	equ	0xFF5
  1988                           prodh	equ	0xFF4
  1989                           prodl	equ	0xFF3
  1990                           intcon	equ	0xFF2
  1991                           intcon2	equ	0xFF1
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           indf1	equ	0xFE7
  1995                           postinc1	equ	0xFE6
  1996                           postdec1	equ	0xFE5
  1997                           fsr1h	equ	0xFE2
  1998                           fsr1l	equ	0xFE1
  1999                           indf2	equ	0xFDF
  2000                           postinc2	equ	0xFDE
  2001                           postdec2	equ	0xFDD
  2002                           plusw2	equ	0xFDB
  2003                           fsr2h	equ	0xFDA
  2004                           fsr2l	equ	0xFD9
  2005                           status	equ	0xFD8
  2006                           
  2007                           	psect	bssBANK1
  2008  000100                     __pbssBANK1:
  2009                           	opt stack 0
  2010  000100                     _pBDTEntryOut:
  2011                           	opt stack 0
  2012  000100                     	ds	6
  2013  000106                     LED_indicator@cnt:
  2014                           	opt stack 0
  2015  000106                     	ds	3
  2016  000109                     _ep_data_in:
  2017                           	opt stack 0
  2018  000109                     	ds	3
  2019  00010C                     _ep_data_out:
  2020                           	opt stack 0
  2021  00010C                     	ds	3
  2022  00010F                     _pCDCDst:
  2023                           	opt stack 0
  2024  00010F                     	ds	3
  2025  000112                     _pCDCSrc:
  2026                           	opt stack 0
  2027  000112                     	ds	3
  2028  000115                     ST7032_task@wait:
  2029                           	opt stack 0
  2030  000115                     	ds	2
  2031  000117                     _CDCDataInHandle:
  2032                           	opt stack 0
  2033  000117                     	ds	2
  2034  000119                     _CDCDataOutHandle:
  2035                           	opt stack 0
  2036  000119                     	ds	2
  2037  00011B                     _ctmu_value_m:
  2038                           	opt stack 0
  2039  00011B                     	ds	2
  2040  00011D                     _pDst:
  2041                           	opt stack 0
  2042  00011D                     	ds	2
  2043  00011F                     millis_timer@cnt:
  2044                           	opt stack 0
  2045  00011F                     	ds	2
  2046  000121                     ISR@cnt:
  2047                           	opt stack 0
  2048  000121                     	ds	1
  2049  000122                     ISR@cnt_t1:
  2050                           	opt stack 0
  2051  000122                     	ds	1
  2052  000123                     RTCC_task@prev_halfsec:
  2053                           	opt stack 0
  2054  000123                     	ds	1
  2055  000124                     ST7032_task@st7032_state:
  2056                           	opt stack 0
  2057  000124                     	ds	1
  2058  000125                     _BothEP0OutUOWNsSet:
  2059                           	opt stack 0
  2060  000125                     	ds	1
  2061  000126                     _RemoteWakeup:
  2062                           	opt stack 0
  2063  000126                     	ds	1
  2064  000127                     _USBBusIsSuspended:
  2065                           	opt stack 0
  2066  000127                     	ds	1
  2067  000128                     _USBDeferINDataStagePackets:
  2068                           	opt stack 0
  2069  000128                     	ds	1
  2070  000129                     _USBDeferOUTDataStagePackets:
  2071                           	opt stack 0
  2072  000129                     	ds	1
  2073  00012A                     _USBStatusStageEnabledFlag1:
  2074                           	opt stack 0
  2075  00012A                     	ds	1
  2076  00012B                     _USBStatusStageEnabledFlag2:
  2077                           	opt stack 0
  2078  00012B                     	ds	1
  2079  00012C                     _cdc_mem_type:
  2080                           	opt stack 0
  2081  00012C                     	ds	1
  2082  00012D                     _ctmu_sampling_flag:
  2083                           	opt stack 0
  2084  00012D                     	ds	1
  2085  00012E                     _cut_time_flag:
  2086                           	opt stack 0
  2087  00012E                     	ds	1
  2088  00012F                     _display_flag:
  2089                           	opt stack 0
  2090  00012F                     	ds	1
  2091  000130                     _integrate_flag:
  2092                           	opt stack 0
  2093  000130                     	ds	1
  2094  000131                     _settings_flag:
  2095                           	opt stack 0
  2096  000131                     	ds	1
  2097  000132                     _st7032_flag:
  2098                           	opt stack 0
  2099  000132                     	ds	1
  2100  000133                     _terminal_data_out:
  2101                           	opt stack 0
  2102  000133                     	ds	1
  2103  000134                     _terminal_data_out_flag:
  2104                           	opt stack 0
  2105  000134                     	ds	1
  2106  000135                     _time_change_flag:
  2107                           	opt stack 0
  2108  000135                     	ds	1
  2109  000136                     settings_adjust_time@state:
  2110                           	opt stack 0
  2111  000136                     	ds	1
  2112  000137                     settings_auto_stop@state:
  2113                           	opt stack 0
  2114  000137                     	ds	1
  2115  000138                     settings_integrating_reset@state:
  2116                           	opt stack 0
  2117  000138                     	ds	1
  2118  000139                     settings_led_indicator@state:
  2119                           	opt stack 0
  2120  000139                     	ds	1
  2121  00013A                     settings_task@settings_state:
  2122                           	opt stack 0
  2123  00013A                     	ds	1
  2124  00013B                     sleep_task@sleep_flag:
  2125                           	opt stack 0
  2126  00013B                     	ds	1
  2127  00013C                     terminal_task@command_init:
  2128                           	opt stack 0
  2129  00013C                     	ds	1
  2130  00013D                     _port:
  2131                           	opt stack 0
  2132  00013D                     	ds	69
  2133  000182                     _lcd_tx:
  2134                           	opt stack 0
  2135  000182                     	ds	8
  2136  00018A                     terminal_task@command:
  2137                           	opt stack 0
  2138  00018A                     	ds	8
  2139  000192                     _USBAlternateInterface:
  2140                           	opt stack 0
  2141  000192                     	ds	2
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           intcon	equ	0xFF2
  2149                           intcon2	equ	0xFF1
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           indf1	equ	0xFE7
  2153                           postinc1	equ	0xFE6
  2154                           postdec1	equ	0xFE5
  2155                           fsr1h	equ	0xFE2
  2156                           fsr1l	equ	0xFE1
  2157                           indf2	equ	0xFDF
  2158                           postinc2	equ	0xFDE
  2159                           postdec2	equ	0xFDD
  2160                           plusw2	equ	0xFDB
  2161                           fsr2h	equ	0xFDA
  2162                           fsr2l	equ	0xFD9
  2163                           status	equ	0xFD8
  2164                           
  2165                           	psect	dataBANK1
  2166  0001FD                     __pdataBANK1:
  2167                           	opt stack 0
  2168  0001FD                     ST7032_cursor@F8592:
  2169                           	opt stack 0
  2170  0001FD                     	ds	2
  2171                           tblptru	equ	0xFF8
  2172                           tblptrh	equ	0xFF7
  2173                           tblptrl	equ	0xFF6
  2174                           tablat	equ	0xFF5
  2175                           prodh	equ	0xFF4
  2176                           prodl	equ	0xFF3
  2177                           intcon	equ	0xFF2
  2178                           intcon2	equ	0xFF1
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           indf1	equ	0xFE7
  2182                           postinc1	equ	0xFE6
  2183                           postdec1	equ	0xFE5
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           indf2	equ	0xFDF
  2187                           postinc2	equ	0xFDE
  2188                           postdec2	equ	0xFDD
  2189                           plusw2	equ	0xFDB
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194                           	psect	bssBANK2
  2195  000200                     __pbssBANK2:
  2196                           	opt stack 0
  2197  000200                     LED_indicator@cntf:
  2198                           	opt stack 0
  2199  000200                     	ds	3
  2200  000203                     _display_char:
  2201                           	opt stack 0
  2202  000203                     	ds	40
  2203  00022B                     terminal_task@op0:
  2204                           	opt stack 0
  2205  00022B                     	ds	25
  2206  000244                     terminal_task@op1:
  2207                           	opt stack 0
  2208  000244                     	ds	25
  2209  00025D                     terminal_task@op2:
  2210                           	opt stack 0
  2211  00025D                     	ds	25
  2212  000276                     terminal_task@op3:
  2213                           	opt stack 0
  2214  000276                     	ds	25
  2215  00028F                     _now:
  2216                           	opt stack 0
  2217  00028F                     	ds	14
  2218  00029D                     _dummy_encapsulated_cmd_response:
  2219                           	opt stack 0
  2220  00029D                     	ds	8
  2221  0002A5                     _uart_rx:
  2222                           	opt stack 0
  2223  0002A5                     	ds	8
  2224  0002AD                     _uart_tx:
  2225                           	opt stack 0
  2226  0002AD                     	ds	8
  2227  0002B5                     _usb_rx:
  2228                           	opt stack 0
  2229  0002B5                     	ds	8
  2230  0002BD                     _usb_tx:
  2231                           	opt stack 0
  2232  0002BD                     	ds	8
  2233  0002C5                     _line_coding:
  2234                           	opt stack 0
  2235  0002C5                     	ds	7
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           intcon	equ	0xFF2
  2243                           intcon2	equ	0xFF1
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           indf1	equ	0xFE7
  2247                           postinc1	equ	0xFE6
  2248                           postdec1	equ	0xFE5
  2249                           fsr1h	equ	0xFE2
  2250                           fsr1l	equ	0xFE1
  2251                           indf2	equ	0xFDF
  2252                           postinc2	equ	0xFDE
  2253                           postdec2	equ	0xFDD
  2254                           plusw2	equ	0xFDB
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259                           	psect	bssBANK3
  2260  000300                     __pbssBANK3:
  2261                           	opt stack 0
  2262  000300                     hardware_init@usbrx:
  2263                           	opt stack 0
  2264  000300                     	ds	100
  2265  000364                     _cdc_data_rx:
  2266                           	opt stack 0
  2267  000364                     	ds	64
  2268  0003A4                     _cdc_data_tx:
  2269                           	opt stack 0
  2270  0003A4                     	ds	64
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           prodh	equ	0xFF4
  2276                           prodl	equ	0xFF3
  2277                           intcon	equ	0xFF2
  2278                           intcon2	equ	0xFF1
  2279                           postinc0	equ	0xFEE
  2280                           wreg	equ	0xFE8
  2281                           indf1	equ	0xFE7
  2282                           postinc1	equ	0xFE6
  2283                           postdec1	equ	0xFE5
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           postdec2	equ	0xFDD
  2289                           plusw2	equ	0xFDB
  2290                           fsr2h	equ	0xFDA
  2291                           fsr2l	equ	0xFD9
  2292                           status	equ	0xFD8
  2293                           
  2294                           	psect	bssBANK4
  2295  000400                     __pbssBANK4:
  2296                           	opt stack 0
  2297  000400                     ST7032_init@buf:
  2298                           	opt stack 0
  2299  000400                     	ds	200
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           intcon	equ	0xFF2
  2307                           intcon2	equ	0xFF1
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           indf1	equ	0xFE7
  2311                           postinc1	equ	0xFE6
  2312                           postdec1	equ	0xFE5
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           indf2	equ	0xFDF
  2316                           postinc2	equ	0xFDE
  2317                           postdec2	equ	0xFDD
  2318                           plusw2	equ	0xFDB
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323                           	psect	bssBIGRAMl
  2324  0004C8                     __pbssBIGRAMl:
  2325                           	opt stack 0
  2326  0004C8                     hardware_init@usbtx:
  2327                           	opt stack 0
  2328  0004C8                     	ds	2000
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           intcon	equ	0xFF2
  2336                           intcon2	equ	0xFF1
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           indf1	equ	0xFE7
  2340                           postinc1	equ	0xFE6
  2341                           postdec1	equ	0xFE5
  2342                           fsr1h	equ	0xFE2
  2343                           fsr1l	equ	0xFE1
  2344                           indf2	equ	0xFDF
  2345                           postinc2	equ	0xFDE
  2346                           postdec2	equ	0xFDD
  2347                           plusw2	equ	0xFDB
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8
  2351                           
  2352                           	psect	cstackBANK1
  2353  000194                     __pcstackBANK1:
  2354                           	opt stack 0
  2355  000194                     display_LCD@str:
  2356                           	opt stack 0
  2357  000194                     terminal_task@buf:
  2358                           	opt stack 0
  2359                           
  2360                           ; 100 bytes @ 0x0
  2361  000194                     	ds	40
  2362  0001BC                     display_LCD@str_575:
  2363                           	opt stack 0
  2364                           
  2365                           ; 20 bytes @ 0x28
  2366  0001BC                     	ds	20
  2367  0001D0                     _display_LCD$7095:
  2368                           	opt stack 0
  2369                           
  2370                           ; 4 bytes @ 0x3C
  2371  0001D0                     	ds	4
  2372  0001D4                     _display_LCD$7096:
  2373                           	opt stack 0
  2374                           
  2375                           ; 4 bytes @ 0x40
  2376  0001D4                     	ds	4
  2377  0001D8                     _display_LCD$7097:
  2378                           	opt stack 0
  2379                           
  2380                           ; 4 bytes @ 0x44
  2381  0001D8                     	ds	4
  2382  0001DC                     _display_LCD$7098:
  2383                           	opt stack 0
  2384                           
  2385                           ; 4 bytes @ 0x48
  2386  0001DC                     	ds	4
  2387  0001E0                     _display_LCD$7099:
  2388                           	opt stack 0
  2389                           
  2390                           ; 4 bytes @ 0x4C
  2391  0001E0                     	ds	24
  2392  0001F8                     _terminal_task$7100:
  2393                           	opt stack 0
  2394                           
  2395                           ; 2 bytes @ 0x64
  2396  0001F8                     	ds	2
  2397  0001FA                     terminal_task@i_3830:
  2398                           	opt stack 0
  2399                           
  2400                           ; 1 bytes @ 0x66
  2401  0001FA                     	ds	1
  2402  0001FB                     terminal_task@ascii:
  2403                           	opt stack 0
  2404                           
  2405                           ; 1 bytes @ 0x67
  2406  0001FB                     	ds	1
  2407  0001FC                     terminal_task@i:
  2408                           	opt stack 0
  2409                           
  2410                           ; 1 bytes @ 0x68
  2411  0001FC                     	ds	1
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           intcon	equ	0xFF2
  2419                           intcon2	equ	0xFF1
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           indf1	equ	0xFE7
  2423                           postinc1	equ	0xFE6
  2424                           postdec1	equ	0xFE5
  2425                           fsr1h	equ	0xFE2
  2426                           fsr1l	equ	0xFE1
  2427                           indf2	equ	0xFDF
  2428                           postinc2	equ	0xFDE
  2429                           postdec2	equ	0xFDD
  2430                           plusw2	equ	0xFDB
  2431                           fsr2h	equ	0xFDA
  2432                           fsr2l	equ	0xFD9
  2433                           status	equ	0xFD8
  2434                           
  2435                           	psect	cstackBANK0
  2436  000060                     __pcstackBANK0:
  2437                           	opt stack 0
  2438  000060                     ??_timer0_init:
  2439  000060                     ??_timer3_init:
  2440  000060                     ??_isdigit:
  2441  000060                     ??_x_to_d:
  2442  000060                     ?_ADC:
  2443                           	opt stack 0
  2444  000060                     ?_strcmp:
  2445                           	opt stack 0
  2446  000060                     ?_ringbuf_num:
  2447                           	opt stack 0
  2448  000060                     ?_USBTransferOnePacket:
  2449                           	opt stack 0
  2450  000060                     ?___awmod:
  2451                           	opt stack 0
  2452  000060                     ?___lwmod:
  2453                           	opt stack 0
  2454  000060                     ?___lldiv:
  2455                           	opt stack 0
  2456  000060                     OUT@value:
  2457                           	opt stack 0
  2458  000060                     ANALOG_IN@b:
  2459                           	opt stack 0
  2460  000060                     LED_output@value:
  2461                           	opt stack 0
  2462  000060                     timer1_init@clock_select:
  2463                           	opt stack 0
  2464  000060                     ADC_init@p_ref:
  2465                           	opt stack 0
  2466  000060                     _is_usb_available$4449:
  2467                           	opt stack 0
  2468  000060                     USBTransferOnePacket@dir:
  2469                           	opt stack 0
  2470  000060                     putUSBUSART@length:
  2471                           	opt stack 0
  2472  000060                     ___lbdiv@divisor:
  2473                           	opt stack 0
  2474  000060                     ___lbmod@divisor:
  2475                           	opt stack 0
  2476  000060                     display@str0:
  2477                           	opt stack 0
  2478  000060                     ringbuf_init@rb:
  2479                           	opt stack 0
  2480  000060                     ringbuf_num@rb:
  2481                           	opt stack 0
  2482  000060                     ringbuf_delete@rb:
  2483                           	opt stack 0
  2484  000060                     RTCC_adjust_time_toggle@tm:
  2485                           	opt stack 0
  2486  000060                     RTCC_adjust_time_cursor@tm:
  2487                           	opt stack 0
  2488  000060                     ___awmod@dividend:
  2489                           	opt stack 0
  2490  000060                     ___lwmod@dividend:
  2491                           	opt stack 0
  2492  000060                     memset@p1:
  2493                           	opt stack 0
  2494  000060                     strcat@to:
  2495                           	opt stack 0
  2496  000060                     strcmp@s1:
  2497                           	opt stack 0
  2498  000060                     strcpy@to:
  2499                           	opt stack 0
  2500  000060                     ___lldiv@dividend:
  2501                           	opt stack 0
  2502                           
  2503                           ; 4 bytes @ 0x0
  2504  000060                     	ds	1
  2505  000061                     ??_timer1_init:
  2506  000061                     OUT@b:
  2507                           	opt stack 0
  2508  000061                     LED_output@b:
  2509                           	opt stack 0
  2510  000061                     timer0_init@prescaler:
  2511                           	opt stack 0
  2512  000061                     timer3_init@prescaler:
  2513                           	opt stack 0
  2514  000061                     x_to_d@hex:
  2515                           	opt stack 0
  2516  000061                     putUSBUSART@data:
  2517                           	opt stack 0
  2518  000061                     _isdigit$6567:
  2519                           	opt stack 0
  2520  000061                     ___lbdiv@dividend:
  2521                           	opt stack 0
  2522  000061                     ___lbmod@dividend:
  2523                           	opt stack 0
  2524  000061                     USBTransferOnePacket@data:
  2525                           	opt stack 0
  2526                           
  2527                           ; 2 bytes @ 0x1
  2528  000061                     	ds	1
  2529  000062                     ??_ADC:
  2530  000062                     ??_ringbuf_num:
  2531  000062                     integrate_time@i:
  2532                           	opt stack 0
  2533  000062                     timer1_init@prescaler:
  2534                           	opt stack 0
  2535  000062                     isdigit@c:
  2536                           	opt stack 0
  2537  000062                     ___lbdiv@counter:
  2538                           	opt stack 0
  2539  000062                     ___lbmod@counter:
  2540                           	opt stack 0
  2541  000062                     display@str1:
  2542                           	opt stack 0
  2543  000062                     ringbuf_init@internal_buf:
  2544                           	opt stack 0
  2545  000062                     RTCC_to_caltime@tm:
  2546                           	opt stack 0
  2547  000062                     ___awmod@divisor:
  2548                           	opt stack 0
  2549  000062                     ___lwmod@divisor:
  2550                           	opt stack 0
  2551  000062                     memset@c:
  2552                           	opt stack 0
  2553  000062                     strcat@from:
  2554                           	opt stack 0
  2555  000062                     strcmp@s2:
  2556                           	opt stack 0
  2557  000062                     strcpy@from:
  2558                           	opt stack 0
  2559                           
  2560                           ; 2 bytes @ 0x2
  2561  000062                     	ds	1
  2562  000063                     ADC@ch:
  2563                           	opt stack 0
  2564  000063                     USBTransferOnePacket@len:
  2565                           	opt stack 0
  2566  000063                     ___lbdiv@quotient:
  2567                           	opt stack 0
  2568  000063                     ___lbmod@rem:
  2569                           	opt stack 0
  2570                           
  2571                           ; 1 bytes @ 0x3
  2572  000063                     	ds	1
  2573  000064                     ??_strcmp:
  2574  000064                     display@item:
  2575                           	opt stack 0
  2576  000064                     d_to_x@dec:
  2577                           	opt stack 0
  2578  000064                     USBTransferOnePacket@ep:
  2579                           	opt stack 0
  2580  000064                     ___awmod@counter:
  2581                           	opt stack 0
  2582  000064                     ___lwmod@counter:
  2583                           	opt stack 0
  2584  000064                     ringbuf_init@bufsize:
  2585                           	opt stack 0
  2586  000064                     memset@n:
  2587                           	opt stack 0
  2588  000064                     strcat@cp:
  2589                           	opt stack 0
  2590  000064                     strcpy@cp:
  2591                           	opt stack 0
  2592  000064                     ___lldiv@divisor:
  2593                           	opt stack 0
  2594                           
  2595                           ; 4 bytes @ 0x4
  2596  000064                     	ds	1
  2597  000065                     display@i:
  2598                           	opt stack 0
  2599  000065                     ___awmod@sign:
  2600                           	opt stack 0
  2601  000065                     caltime_to_RTCC@tm:
  2602                           	opt stack 0
  2603  000065                     USBTransferOnePacket@handle:
  2604                           	opt stack 0
  2605                           
  2606                           ; 2 bytes @ 0x5
  2607  000065                     	ds	1
  2608  000066                     ??_settings_auto_stop:
  2609  000066                     ??_settings_led_indicator:
  2610  000066                     port_button_task@i:
  2611                           	opt stack 0
  2612  000066                     month_length@month:
  2613                           	opt stack 0
  2614  000066                     strcmp@r:
  2615                           	opt stack 0
  2616  000066                     memset@p:
  2617                           	opt stack 0
  2618                           
  2619                           ; 2 bytes @ 0x6
  2620  000066                     	ds	1
  2621  000067                     ??_month_length:
  2622  000067                     getsUSBUSART@len:
  2623                           	opt stack 0
  2624  000067                     _CDCTxService$6314:
  2625                           	opt stack 0
  2626  000067                     settings_auto_stop@str:
  2627                           	opt stack 0
  2628  000067                     settings_led_indicator@str:
  2629                           	opt stack 0
  2630                           
  2631                           ; 20 bytes @ 0x7
  2632  000067                     	ds	1
  2633  000068                     USBDeviceInit@i:
  2634                           	opt stack 0
  2635  000068                     ringbuf_put@rb:
  2636                           	opt stack 0
  2637  000068                     ringbuf_pop@rb:
  2638                           	opt stack 0
  2639  000068                     ringbuf_backspace@rb:
  2640                           	opt stack 0
  2641  000068                     ___lldiv@quotient:
  2642                           	opt stack 0
  2643                           
  2644                           ; 4 bytes @ 0x8
  2645  000068                     	ds	1
  2646  000069                     getsUSBUSART@buffer:
  2647                           	opt stack 0
  2648  000069                     CDCTxService@i:
  2649                           	opt stack 0
  2650                           
  2651                           ; 1 bytes @ 0x9
  2652  000069                     	ds	1
  2653  00006A                     ??_ringbuf_pop:
  2654  00006A                     ??_ringbuf_backspace:
  2655  00006A                     ringbuf_put@asciicode:
  2656                           	opt stack 0
  2657  00006A                     CDCTxService@byte_to_send:
  2658                           	opt stack 0
  2659  00006A                     _getsUSBUSART$6266:
  2660                           	opt stack 0
  2661  00006A                     settings_integrating_reset@str:
  2662                           	opt stack 0
  2663                           
  2664                           ; 20 bytes @ 0xA
  2665  00006A                     	ds	1
  2666  00006B                     ??_ringbuf_put:
  2667  00006B                     month_length@year:
  2668                           	opt stack 0
  2669  00006B                     put_string_usb@len:
  2670                           	opt stack 0
  2671                           
  2672                           ; 2 bytes @ 0xB
  2673  00006B                     	ds	1
  2674  00006C                     ?_get_string_usb:
  2675                           	opt stack 0
  2676  00006C                     ___lldiv@counter:
  2677                           	opt stack 0
  2678  00006C                     get_string_usb@len:
  2679                           	opt stack 0
  2680                           
  2681                           ; 2 bytes @ 0xC
  2682  00006C                     	ds	1
  2683  00006D                     ??_integrate_current:
  2684  00006D                     ?_CTMU_read:
  2685                           	opt stack 0
  2686  00006D                     ?___lmul:
  2687                           	opt stack 0
  2688  00006D                     ?___llmod:
  2689                           	opt stack 0
  2690  00006D                     put_string_usb@s:
  2691                           	opt stack 0
  2692  00006D                     ___lmul@multiplier:
  2693                           	opt stack 0
  2694  00006D                     ___llmod@dividend:
  2695                           	opt stack 0
  2696                           
  2697                           ; 4 bytes @ 0xD
  2698  00006D                     	ds	1
  2699  00006E                     ringbuf_pop@ret:
  2700                           	opt stack 0
  2701  00006E                     get_string_usb@rx_len:
  2702                           	opt stack 0
  2703                           
  2704                           ; 2 bytes @ 0xE
  2705  00006E                     	ds	1
  2706  00006F                     ??_CTMU_read:
  2707  00006F                     ??_ST7032_task:
  2708  00006F                     integrate_current@i:
  2709                           	opt stack 0
  2710  00006F                     ST7032_command@wait:
  2711                           	opt stack 0
  2712  00006F                     ST7032_put@c:
  2713                           	opt stack 0
  2714  00006F                     ringbuf_put_str@rb:
  2715                           	opt stack 0
  2716                           
  2717                           ; 2 bytes @ 0xF
  2718  00006F                     	ds	1
  2719  000070                     CTMU_read@ch:
  2720                           	opt stack 0
  2721  000070                     ST7032_command@command:
  2722                           	opt stack 0
  2723  000070                     get_string_usb@s:
  2724                           	opt stack 0
  2725  000070                     ST7032_puts@s:
  2726                           	opt stack 0
  2727                           
  2728                           ; 2 bytes @ 0x10
  2729  000070                     	ds	1
  2730  000071                     ST7032_cursor@row:
  2731                           	opt stack 0
  2732  000071                     ST7032_task@data:
  2733                           	opt stack 0
  2734  000071                     ringbuf_put_str@str:
  2735                           	opt stack 0
  2736  000071                     USB_task@rx_len:
  2737                           	opt stack 0
  2738  000071                     CTMU_read@sum:
  2739                           	opt stack 0
  2740  000071                     ___lmul@multiplicand:
  2741                           	opt stack 0
  2742  000071                     ___llmod@divisor:
  2743                           	opt stack 0
  2744                           
  2745                           ; 4 bytes @ 0x11
  2746  000071                     	ds	1
  2747  000072                     ST7032_cursor@row_offsets:
  2748                           	opt stack 0
  2749                           
  2750                           ; 2 bytes @ 0x12
  2751  000072                     	ds	1
  2752  000073                     USB_task@data:
  2753                           	opt stack 0
  2754                           
  2755                           ; 1 bytes @ 0x13
  2756  000073                     	ds	1
  2757  000074                     ST7032_cursor@col:
  2758                           	opt stack 0
  2759                           
  2760                           ; 1 bytes @ 0x14
  2761  000074                     	ds	1
  2762  000075                     sleep_task@i:
  2763                           	opt stack 0
  2764  000075                     CTMU_read@i:
  2765                           	opt stack 0
  2766  000075                     ___llmod@counter:
  2767                           	opt stack 0
  2768  000075                     ___lmul@product:
  2769                           	opt stack 0
  2770                           
  2771                           ; 4 bytes @ 0x15
  2772  000075                     	ds	1
  2773  000076                     ?___wmul:
  2774                           	opt stack 0
  2775  000076                     ___wmul@multiplier:
  2776                           	opt stack 0
  2777                           
  2778                           ; 2 bytes @ 0x16
  2779  000076                     	ds	2
  2780  000078                     ___wmul@multiplicand:
  2781                           	opt stack 0
  2782                           
  2783                           ; 2 bytes @ 0x18
  2784  000078                     	ds	1
  2785  000079                     ?_get_quot_rem:
  2786                           	opt stack 0
  2787  000079                     get_quot_rem@div:
  2788                           	opt stack 0
  2789  000079                     caltime_to_epoch@tm:
  2790                           	opt stack 0
  2791                           
  2792                           ; 2 bytes @ 0x19
  2793  000079                     	ds	1
  2794  00007A                     ___wmul@product:
  2795                           	opt stack 0
  2796                           
  2797                           ; 2 bytes @ 0x1A
  2798  00007A                     	ds	1
  2799  00007B                     ??_caltime_to_epoch:
  2800  00007B                     settings_auto_stop@str_1310:
  2801                           	opt stack 0
  2802  00007B                     settings_led_indicator@str_1327:
  2803                           	opt stack 0
  2804                           
  2805                           ; 20 bytes @ 0x1B
  2806  00007B                     	ds	1
  2807  00007C                     ??_Auto_cut:
  2808  00007C                     ?_atoi:
  2809                           	opt stack 0
  2810  00007C                     ?___lwdiv:
  2811                           	opt stack 0
  2812  00007C                     atoi@s:
  2813                           	opt stack 0
  2814  00007C                     ___lwdiv@dividend:
  2815                           	opt stack 0
  2816                           
  2817                           ; 2 bytes @ 0x1C
  2818  00007C                     	ds	1
  2819  00007D                     get_quot_rem@num:
  2820                           	opt stack 0
  2821                           
  2822                           ; 4 bytes @ 0x1D
  2823  00007D                     	ds	1
  2824  00007E                     ??_atoi:
  2825  00007E                     Auto_cut@i:
  2826                           	opt stack 0
  2827  00007E                     ___lwdiv@divisor:
  2828                           	opt stack 0
  2829  00007E                     settings_integrating_reset@str_1344:
  2830                           	opt stack 0
  2831                           
  2832                           ; 20 bytes @ 0x1E
  2833  00007E                     	ds	1
  2834  00007F                     caltime_to_epoch@year:
  2835                           	opt stack 0
  2836                           
  2837                           ; 1 bytes @ 0x1F
  2838  00007F                     	ds	1
  2839  000080                     caltime_to_epoch@month_2763:
  2840                           	opt stack 0
  2841  000080                     atoi@sign:
  2842                           	opt stack 0
  2843  000080                     ___lwdiv@counter:
  2844                           	opt stack 0
  2845                           
  2846                           ; 1 bytes @ 0x20
  2847  000080                     	ds	1
  2848  000081                     get_quot_rem@quot:
  2849                           	opt stack 0
  2850  000081                     atoi@a:
  2851                           	opt stack 0
  2852  000081                     ___lwdiv@quotient:
  2853                           	opt stack 0
  2854  000081                     caltime_to_epoch@epoch:
  2855                           	opt stack 0
  2856                           
  2857                           ; 4 bytes @ 0x21
  2858  000081                     	ds	1
  2859  000082                     epoch_to_caltime@tm:
  2860                           	opt stack 0
  2861                           
  2862                           ; 2 bytes @ 0x22
  2863  000082                     	ds	1
  2864  000083                     ?_sprintf:
  2865                           	opt stack 0
  2866  000083                     ctmu_set_ratio@percentage:
  2867                           	opt stack 0
  2868  000083                     button_timer_interrupt@bt:
  2869                           	opt stack 0
  2870  000083                     ringbuf_put_num@rb:
  2871                           	opt stack 0
  2872  000083                     sprintf@sp:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x23
  2876  000083                     	ds	1
  2877  000084                     ??_epoch_to_caltime:
  2878  000084                     software_init@i:
  2879                           	opt stack 0
  2880                           
  2881                           ; 1 bytes @ 0x24
  2882  000084                     	ds	1
  2883  000085                     button_timer_interrupt@sw_value:
  2884                           	opt stack 0
  2885  000085                     caltime_to_epoch@month:
  2886                           	opt stack 0
  2887  000085                     ringbuf_put_num@value:
  2888                           	opt stack 0
  2889  000085                     sprintf@f:
  2890                           	opt stack 0
  2891                           
  2892                           ; 2 bytes @ 0x25
  2893  000085                     	ds	1
  2894  000086                     RTCC_from_RTCC@tm:
  2895                           	opt stack 0
  2896                           
  2897                           ; 2 bytes @ 0x26
  2898  000086                     	ds	1
  2899  000087                     ringbuf_put_num@digits:
  2900                           	opt stack 0
  2901  000087                     epoch_to_caltime@day:
  2902                           	opt stack 0
  2903                           
  2904                           ; 2 bytes @ 0x27
  2905  000087                     	ds	1
  2906  000088                     ringbuf_put_num@i:
  2907                           	opt stack 0
  2908                           
  2909                           ; 1 bytes @ 0x28
  2910  000088                     	ds	1
  2911  000089                     epoch_to_caltime@year:
  2912                           	opt stack 0
  2913  000089                     ringbuf_put_num@temp:
  2914                           	opt stack 0
  2915                           
  2916                           ; 2 bytes @ 0x29
  2917  000089                     	ds	1
  2918  00008A                     epoch_to_caltime@month:
  2919                           	opt stack 0
  2920                           
  2921                           ; 1 bytes @ 0x2A
  2922  00008A                     	ds	1
  2923  00008B                     epoch_to_caltime@num:
  2924                           	opt stack 0
  2925                           
  2926                           ; 4 bytes @ 0x2B
  2927  00008B                     	ds	4
  2928  00008F                     settings_auto_stop@strp:
  2929                           	opt stack 0
  2930  00008F                     settings_led_indicator@strp:
  2931                           	opt stack 0
  2932  00008F                     RTCC_from_caltime@tm:
  2933                           	opt stack 0
  2934  00008F                     RTCC_from_epoch@tm:
  2935                           	opt stack 0
  2936                           
  2937                           ; 2 bytes @ 0x2F
  2938  00008F                     	ds	1
  2939  000090                     settings_auto_stop@strp_1311:
  2940                           	opt stack 0
  2941  000090                     settings_led_indicator@strp_1328:
  2942                           	opt stack 0
  2943                           
  2944                           ; 1 bytes @ 0x30
  2945  000090                     	ds	1
  2946  000091                     settings_auto_stop@i:
  2947                           	opt stack 0
  2948  000091                     settings_led_indicator@i:
  2949                           	opt stack 0
  2950  000091                     RTCC_adjust_time_inc@tm:
  2951                           	opt stack 0
  2952  000091                     RTCC_adjust_time_dec@tm:
  2953                           	opt stack 0
  2954                           
  2955                           ; 2 bytes @ 0x31
  2956  000091                     	ds	1
  2957  000092                     settings_auto_stop@i_1312:
  2958                           	opt stack 0
  2959  000092                     settings_led_indicator@i_1329:
  2960                           	opt stack 0
  2961  000092                     settings_integrating_reset@strp:
  2962                           	opt stack 0
  2963                           
  2964                           ; 1 bytes @ 0x32
  2965  000092                     	ds	1
  2966  000093                     ??_RTCC_adjust_time_inc:
  2967  000093                     ??_RTCC_adjust_time_dec:
  2968  000093                     settings_auto_stop@j:
  2969                           	opt stack 0
  2970  000093                     settings_led_indicator@j:
  2971                           	opt stack 0
  2972  000093                     settings_integrating_reset@strp_1345:
  2973                           	opt stack 0
  2974                           
  2975                           ; 1 bytes @ 0x33
  2976  000093                     	ds	1
  2977  000094                     settings_integrating_reset@i:
  2978                           	opt stack 0
  2979                           
  2980                           ; 1 bytes @ 0x34
  2981  000094                     	ds	1
  2982  000095                     settings_integrating_reset@i_1346:
  2983                           	opt stack 0
  2984                           
  2985                           ; 1 bytes @ 0x35
  2986  000095                     	ds	1
  2987  000096                     settings_integrating_reset@j:
  2988                           	opt stack 0
  2989                           
  2990                           ; 1 bytes @ 0x36
  2991  000096                     	ds	1
  2992  000097                     ??_sprintf:
  2993  000097                     RTCC_adjust_time_inc@i_2943:
  2994                           	opt stack 0
  2995  000097                     RTCC_adjust_time_dec@i_2973:
  2996                           	opt stack 0
  2997                           
  2998                           ; 1 bytes @ 0x37
  2999  000097                     	ds	1
  3000  000098                     RTCC_adjust_time_inc@i:
  3001                           	opt stack 0
  3002  000098                     RTCC_adjust_time_dec@i:
  3003                           	opt stack 0
  3004                           
  3005                           ; 1 bytes @ 0x38
  3006  000098                     	ds	1
  3007  000099                     settings_task@item_change_flag:
  3008                           	opt stack 0
  3009                           
  3010                           ; 1 bytes @ 0x39
  3011  000099                     	ds	2
  3012  00009B                     sprintf@prec:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x3B
  3016  00009B                     	ds	2
  3017  00009D                     sprintf@cp:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x3D
  3021  00009D                     	ds	2
  3022  00009F                     sprintf@ap:
  3023                           	opt stack 0
  3024                           
  3025                           ; 1 bytes @ 0x3F
  3026  00009F                     	ds	1
  3027  0000A0                     sprintf@len:
  3028                           	opt stack 0
  3029                           
  3030                           ; 2 bytes @ 0x40
  3031  0000A0                     	ds	2
  3032  0000A2                     sprintf@val:
  3033                           	opt stack 0
  3034                           
  3035                           ; 4 bytes @ 0x42
  3036  0000A2                     	ds	4
  3037  0000A6                     sprintf@flag:
  3038                           	opt stack 0
  3039                           
  3040                           ; 1 bytes @ 0x46
  3041  0000A6                     	ds	1
  3042  0000A7                     sprintf@c:
  3043                           	opt stack 0
  3044                           
  3045                           ; 1 bytes @ 0x47
  3046  0000A7                     	ds	1
  3047  0000A8                     sprintf@width:
  3048                           	opt stack 0
  3049                           
  3050                           ; 2 bytes @ 0x48
  3051  0000A8                     	ds	2
  3052  0000AA                     data_out@tx:
  3053                           	opt stack 0
  3054  0000AA                     display_dec@str:
  3055                           	opt stack 0
  3056  0000AA                     print_time@tx:
  3057                           	opt stack 0
  3058                           
  3059                           ; 2 bytes @ 0x4A
  3060  0000AA                     	ds	2
  3061  0000AC                     display_dec@dec:
  3062                           	opt stack 0
  3063  0000AC                     data_out@str:
  3064                           	opt stack 0
  3065  0000AC                     print_time@str:
  3066                           	opt stack 0
  3067                           
  3068                           ; 30 bytes @ 0x4C
  3069  0000AC                     	ds	1
  3070  0000AD                     display_dec@edit:
  3071                           	opt stack 0
  3072                           
  3073                           ; 1 bytes @ 0x4D
  3074  0000AD                     	ds	1
  3075  0000AE                     display_dec@s:
  3076                           	opt stack 0
  3077                           
  3078                           ; 4 bytes @ 0x4E
  3079  0000AE                     	ds	4
  3080  0000B2                     display_time_1602@tm:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x52
  3084  0000B2                     	ds	2
  3085  0000B4                     display_time_1602@line0:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x54
  3089  0000B4                     	ds	2
  3090  0000B6                     display_time_1602@line1:
  3091                           	opt stack 0
  3092                           
  3093                           ; 2 bytes @ 0x56
  3094  0000B6                     	ds	2
  3095  0000B8                     ??_display_LCD:
  3096  0000B8                     
  3097                           ; 0 bytes @ 0x58
  3098  0000B8                     	ds	18
  3099  0000CA                     data_out@i:
  3100                           	opt stack 0
  3101  0000CA                     terminal_at_hand@tx:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x6A
  3105  0000CA                     	ds	1
  3106  0000CB                     
  3107                           ; 0 bytes @ 0x6B
  3108  0000CB                     	ds	1
  3109  0000CC                     terminal_at_hand@hand:
  3110                           	opt stack 0
  3111                           
  3112                           ; 2 bytes @ 0x6C
  3113  0000CC                     	ds	2
  3114  0000CE                     terminal_at_hand@min:
  3115                           	opt stack 0
  3116                           
  3117                           ; 1 bytes @ 0x6E
  3118  0000CE                     	ds	1
  3119  0000CF                     terminal_at_hand@max:
  3120                           	opt stack 0
  3121                           
  3122                           ; 1 bytes @ 0x6F
  3123  0000CF                     	ds	1
  3124  0000D0                     terminal_at_hand@value:
  3125                           	opt stack 0
  3126                           
  3127                           ; 1 bytes @ 0x70
  3128  0000D0                     	ds	1
  3129  0000D1                     terminal_time@tx:
  3130                           	opt stack 0
  3131                           
  3132                           ; 2 bytes @ 0x71
  3133  0000D1                     	ds	2
  3134  0000D3                     terminal_time@op0:
  3135                           	opt stack 0
  3136                           
  3137                           ; 2 bytes @ 0x73
  3138  0000D3                     	ds	2
  3139  0000D5                     terminal_time@op1:
  3140                           	opt stack 0
  3141                           
  3142                           ; 2 bytes @ 0x75
  3143  0000D5                     	ds	2
  3144  0000D7                     terminal_time@op2:
  3145                           	opt stack 0
  3146                           
  3147                           ; 2 bytes @ 0x77
  3148  0000D7                     	ds	2
  3149  0000D9                     _terminal_time$7101:
  3150                           	opt stack 0
  3151                           
  3152                           ; 1 bytes @ 0x79
  3153  0000D9                     	ds	1
  3154  0000DA                     terminal_operation@tx:
  3155                           	opt stack 0
  3156                           
  3157                           ; 2 bytes @ 0x7A
  3158  0000DA                     	ds	2
  3159  0000DC                     terminal_operation@op0:
  3160                           	opt stack 0
  3161                           
  3162                           ; 2 bytes @ 0x7C
  3163  0000DC                     	ds	2
  3164  0000DE                     terminal_operation@op1:
  3165                           	opt stack 0
  3166                           
  3167                           ; 2 bytes @ 0x7E
  3168  0000DE                     	ds	2
  3169  0000E0                     terminal_operation@op2:
  3170                           	opt stack 0
  3171                           
  3172                           ; 2 bytes @ 0x80
  3173  0000E0                     	ds	2
  3174  0000E2                     terminal_operation@op3:
  3175                           	opt stack 0
  3176                           
  3177                           ; 2 bytes @ 0x82
  3178  0000E2                     	ds	2
  3179  0000E4                     terminal_operation@percentage:
  3180                           	opt stack 0
  3181                           
  3182                           ; 1 bytes @ 0x84
  3183  0000E4                     	ds	1
  3184  0000E5                     terminal_task@tx:
  3185                           	opt stack 0
  3186                           
  3187                           ; 2 bytes @ 0x85
  3188  0000E5                     	ds	2
  3189  0000E7                     terminal_task@rx:
  3190                           	opt stack 0
  3191                           
  3192                           ; 2 bytes @ 0x87
  3193  0000E7                     	ds	2
  3194  0000E9                     ??_terminal_task:
  3195                           
  3196                           ; 0 bytes @ 0x89
  3197  0000E9                     	ds	2
  3198  0000EB                     tblptru	equ	0xFF8
  3199                           tblptrh	equ	0xFF7
  3200                           tblptrl	equ	0xFF6
  3201                           tablat	equ	0xFF5
  3202                           prodh	equ	0xFF4
  3203                           prodl	equ	0xFF3
  3204                           intcon	equ	0xFF2
  3205                           intcon2	equ	0xFF1
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           indf1	equ	0xFE7
  3209                           postinc1	equ	0xFE6
  3210                           postdec1	equ	0xFE5
  3211                           fsr1h	equ	0xFE2
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           plusw2	equ	0xFDB
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8
  3220                           
  3221                           ; 0 bytes @ 0x8B
  3222                           
  3223                           	psect	cstackCOMRAM
  3224  00002B                     __pcstackCOMRAM:
  3225                           	opt stack 0
  3226  00002B                     ??_USBStdGetDscHandler:
  3227  00002B                     ?i2_USBTransferOnePacket:
  3228                           	opt stack 0
  3229  00002B                     ?i2___lwdiv:
  3230                           	opt stack 0
  3231  00002B                     USBConfigureEndpoint@direction:
  3232                           	opt stack 0
  3233  00002B                     USBCtrlTrfTxService@byteToSend:
  3234                           	opt stack 0
  3235  00002B                     USBCtrlTrfRxService@i:
  3236                           	opt stack 0
  3237  00002B                     i2LED_output@value:
  3238                           	opt stack 0
  3239  00002B                     i2USBTransferOnePacket@dir:
  3240                           	opt stack 0
  3241  00002B                     USBStdGetStatusHandler@p:
  3242                           	opt stack 0
  3243  00002B                     i2___lwdiv@dividend:
  3244                           	opt stack 0
  3245  00002B                     i2memset@p1:
  3246                           	opt stack 0
  3247                           
  3248                           ; 2 bytes @ 0x0
  3249  00002B                     	ds	1
  3250  00002C                     ??_USBConfigureEndpoint:
  3251  00002C                     USBCtrlTrfRxService@byteToRead:
  3252                           	opt stack 0
  3253  00002C                     USBCtrlTrfInHandler@lastDTS:
  3254                           	opt stack 0
  3255  00002C                     i2LED_output@b:
  3256                           	opt stack 0
  3257  00002C                     i2USBTransferOnePacket@data:
  3258                           	opt stack 0
  3259                           
  3260                           ; 2 bytes @ 0x1
  3261  00002C                     	ds	1
  3262  00002D                     i2___lwdiv@divisor:
  3263                           	opt stack 0
  3264  00002D                     i2memset@c:
  3265                           	opt stack 0
  3266                           
  3267                           ; 2 bytes @ 0x2
  3268  00002D                     	ds	1
  3269  00002E                     i2USBTransferOnePacket@len:
  3270                           	opt stack 0
  3271                           
  3272                           ; 1 bytes @ 0x3
  3273  00002E                     	ds	1
  3274  00002F                     i2USBTransferOnePacket@ep:
  3275                           	opt stack 0
  3276  00002F                     i2___lwdiv@quotient:
  3277                           	opt stack 0
  3278  00002F                     i2memset@n:
  3279                           	opt stack 0
  3280                           
  3281                           ; 2 bytes @ 0x4
  3282  00002F                     	ds	1
  3283  000030                     USBConfigureEndpoint@EPNum:
  3284                           	opt stack 0
  3285  000030                     i2USBTransferOnePacket@handle:
  3286                           	opt stack 0
  3287                           
  3288                           ; 2 bytes @ 0x5
  3289  000030                     	ds	1
  3290  000031                     i2___lwdiv@counter:
  3291                           	opt stack 0
  3292  000031                     USBConfigureEndpoint@handle:
  3293                           	opt stack 0
  3294  000031                     i2memset@p:
  3295                           	opt stack 0
  3296                           
  3297                           ; 2 bytes @ 0x6
  3298  000031                     	ds	1
  3299  000032                     ??_LED_indicator:
  3300                           
  3301                           ; 0 bytes @ 0x7
  3302  000032                     	ds	1
  3303  000033                     USBEnableEndpoint@options:
  3304                           	opt stack 0
  3305  000033                     i2USBDeviceInit@i:
  3306                           	opt stack 0
  3307                           
  3308                           ; 1 bytes @ 0x8
  3309  000033                     	ds	1
  3310  000034                     USBEnableEndpoint@p:
  3311                           	opt stack 0
  3312                           
  3313                           ; 2 bytes @ 0x9
  3314  000034                     	ds	1
  3315  000035                     LED_indicator@i:
  3316                           	opt stack 0
  3317                           
  3318                           ; 1 bytes @ 0xA
  3319  000035                     	ds	1
  3320  000036                     USBEnableEndpoint@ep:
  3321                           	opt stack 0
  3322                           
  3323                           ; 1 bytes @ 0xB
  3324  000036                     	ds	1
  3325  000037                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3326                           	opt stack 0
  3327                           
  3328                           ; 2 bytes @ 0xC
  3329  000037                     	ds	2
  3330  000039                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3331                           	opt stack 0
  3332                           
  3333                           ; 2 bytes @ 0xE
  3334  000039                     	ds	2
  3335  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3336                           	opt stack 0
  3337                           
  3338                           ; 2 bytes @ 0x10
  3339  00003B                     	ds	2
  3340  00003D                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3341                           
  3342                           ; 0 bytes @ 0x12
  3343  00003D                     	ds	2
  3344  00003F                     ??_USBStdFeatureReqHandler:
  3345  00003F                     USBStdSetCfgHandler@i:
  3346                           	opt stack 0
  3347                           
  3348                           ; 1 bytes @ 0x14
  3349  00003F                     	ds	2
  3350  000041                     USBStdFeatureReqHandler@pUEP:
  3351                           	opt stack 0
  3352                           
  3353                           ; 2 bytes @ 0x16
  3354  000041                     	ds	2
  3355  000043                     USBStdFeatureReqHandler@current_ep_data:
  3356                           	opt stack 0
  3357                           
  3358                           ; 1 bytes @ 0x18
  3359  000043                     	ds	1
  3360  000044                     USBStdFeatureReqHandler@p:
  3361                           	opt stack 0
  3362                           
  3363                           ; 2 bytes @ 0x19
  3364  000044                     	ds	2
  3365  000046                     ??_USBCtrlEPService:
  3366  000046                     
  3367                           ; 0 bytes @ 0x1B
  3368  000046                     	ds	2
  3369  000048                     USBCtrlEPService@setup_cnt:
  3370                           	opt stack 0
  3371                           
  3372                           ; 1 bytes @ 0x1D
  3373  000048                     	ds	1
  3374  000049                     USBDeviceTasks@i:
  3375                           	opt stack 0
  3376                           
  3377                           ; 1 bytes @ 0x1E
  3378  000049                     	ds	1
  3379  00004A                     ??_ISR:
  3380                           
  3381                           ; 0 bytes @ 0x1F
  3382  00004A                     	ds	10
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           prodh	equ	0xFF4
  3388                           prodl	equ	0xFF3
  3389                           intcon	equ	0xFF2
  3390                           intcon2	equ	0xFF1
  3391                           postinc0	equ	0xFEE
  3392                           wreg	equ	0xFE8
  3393                           indf1	equ	0xFE7
  3394                           postinc1	equ	0xFE6
  3395                           postdec1	equ	0xFE5
  3396                           fsr1h	equ	0xFE2
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           plusw2	equ	0xFDB
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;;
  3407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3408 ;;
  3409 ;; *************** function _main *****************
  3410 ;; Defined at:
  3411 ;;		line 129 in file "main.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  2  425[None  ] int 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : F/1
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3429 ;;Total ram usage:        0 bytes
  3430 ;; Hardware stack levels required when called:   20
  3431 ;; This function calls:
  3432 ;;		_RTCC_task
  3433 ;;		_ST7032_task
  3434 ;;		_USB_task
  3435 ;;		_bootload
  3436 ;;		_ctmu_task
  3437 ;;		_hardware_init
  3438 ;;		_normal_task
  3439 ;;		_sleep_task
  3440 ;;		_software_init
  3441 ;;		_terminal_task
  3442 ;; This function is called by:
  3443 ;;		Startup code after reset
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text0
  3448  0137A8                     __ptext0:
  3449                           	opt stack 0
  3450  0137A8                     _main:
  3451                           	opt stack 11
  3452                           
  3453                           ;main.c: 131: hardware_init();
  3454                           
  3455                           ;incstack = 0
  3456  0137A8  ECBD  F099         	call	_hardware_init	;wreg free
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;main.c: 133: software_init();
  3460  0137AC  EC99  F09C         	call	_software_init	;wreg free
  3461  0137B0                     l11770:
  3462                           
  3463                           ; BSR set to: 1
  3464                           ;main.c: 135: INTCONbits.GIE = 1;
  3465  0137B0  8EF2               	bsf	intcon,7,c	;volatile
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;main.c: 139: INTCONbits.GIE = 0;
  3469  0137B2  9EF2               	bcf	intcon,7,c	;volatile
  3470                           
  3471                           ; BSR set to: 1
  3472                           ;main.c: 140: RTCC_task();
  3473  0137B4  ECD7  F0A0         	call	_RTCC_task	;wreg free
  3474                           
  3475                           ;main.c: 141: INTCONbits.GIE = 1;
  3476  0137B8  8EF2               	bsf	intcon,7,c	;volatile
  3477                           
  3478                           ;main.c: 142: INTCONbits.GIE = 0;
  3479  0137BA  9EF2               	bcf	intcon,7,c	;volatile
  3480                           
  3481                           ;main.c: 143: ST7032_task();
  3482  0137BC  EC86  F08E         	call	_ST7032_task	;wreg free
  3483                           
  3484                           ;main.c: 144: INTCONbits.GIE = 1;
  3485  0137C0  8EF2               	bsf	intcon,7,c	;volatile
  3486                           
  3487                           ;main.c: 145: INTCONbits.GIE = 0;
  3488  0137C2  9EF2               	bcf	intcon,7,c	;volatile
  3489                           
  3490                           ;main.c: 146: USB_task();
  3491  0137C4  ECF7  F09C         	call	_USB_task	;wreg free
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;main.c: 147: INTCONbits.GIE = 1;
  3495  0137C8  8EF2               	bsf	intcon,7,c	;volatile
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;main.c: 148: INTCONbits.GIE = 0;
  3499  0137CA  9EF2               	bcf	intcon,7,c	;volatile
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;main.c: 149: terminal_task(&usb_tx, &usb_rx);
  3503  0137CC  0EBD               	movlw	low _usb_tx
  3504  0137CE  6FE5               	movwf	terminal_task@tx& (0+255),b
  3505  0137D0  0E02               	movlw	high _usb_tx
  3506  0137D2  6FE6               	movwf	(terminal_task@tx+1)& (0+255),b
  3507  0137D4  0EB5               	movlw	low _usb_rx
  3508  0137D6  6FE7               	movwf	terminal_task@rx& (0+255),b
  3509  0137D8  0E02               	movlw	high _usb_rx
  3510  0137DA  6FE8               	movwf	(terminal_task@rx+1)& (0+255),b
  3511  0137DC  EC25  F083         	call	_terminal_task	;wreg free
  3512                           
  3513                           ;main.c: 150: INTCONbits.GIE = 1;
  3514  0137E0  8EF2               	bsf	intcon,7,c	;volatile
  3515                           
  3516                           ;main.c: 151: INTCONbits.GIE = 0;
  3517  0137E2  9EF2               	bcf	intcon,7,c	;volatile
  3518                           
  3519                           ;main.c: 152: normal_task();
  3520  0137E4  ECF6  F098         	call	_normal_task	;wreg free
  3521                           
  3522                           ;main.c: 153: INTCONbits.GIE = 1;
  3523  0137E8  8EF2               	bsf	intcon,7,c	;volatile
  3524                           
  3525                           ;main.c: 155: INTCONbits.GIE = 0;
  3526  0137EA  9EF2               	bcf	intcon,7,c	;volatile
  3527                           
  3528                           ;main.c: 156: ctmu_task();
  3529  0137EC  ECC9  F0A2         	call	_ctmu_task	;wreg free
  3530                           
  3531                           ;main.c: 157: if (ctmu_m.flag.pressing &&
  3532                           ;main.c: 158: port[0].ctmu.flag.pressing &&
  3533                           ;main.c: 159: port[1].ctmu.flag.pressing &&
  3534                           ;main.c: 160: port[2].ctmu.flag.pressing) {
  3535  0137F0  A028               	btfss	_ctmu_m+3,0,c
  3536  0137F2  D007               	goto	l11816
  3537  0137F4  0101               	movlb	1	; () banked
  3538  0137F6  B140               	btfsc	(_port+3)& (0+255),0,b
  3539                           
  3540                           ; BSR set to: 1
  3541  0137F8  A157               	btfss	(_port+26)& (0+255),0,b
  3542  0137FA  D003               	goto	l11816
  3543                           
  3544                           ; BSR set to: 1
  3545  0137FC  B16E               	btfsc	(_port+49)& (0+255),0,b
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;main.c: 161: bootload();
  3549  0137FE  EC8C  F0A0         	call	_bootload	;wreg free
  3550  013802                     l11816:
  3551                           
  3552                           ;main.c: 162: }
  3553                           ;main.c: 163: INTCONbits.GIE = 1;
  3554  013802  8EF2               	bsf	intcon,7,c	;volatile
  3555                           
  3556                           ;main.c: 165: INTCONbits.GIE = 0;
  3557  013804  9EF2               	bcf	intcon,7,c	;volatile
  3558                           
  3559                           ;main.c: 166: sleep_task();
  3560  013806  EC15  F094         	call	_sleep_task	;wreg free
  3561  01380A  D7D2               	goto	l11770
  3562  01380C                     __end_of_main:
  3563                           	opt stack 0
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           prodh	equ	0xFF4
  3569                           prodl	equ	0xFF3
  3570                           intcon	equ	0xFF2
  3571                           intcon2	equ	0xFF1
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           indf1	equ	0xFE7
  3575                           postinc1	equ	0xFE6
  3576                           postdec1	equ	0xFE5
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           indf2	equ	0xFDF
  3580                           postinc2	equ	0xFDE
  3581                           postdec2	equ	0xFDD
  3582                           plusw2	equ	0xFDB
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8
  3586                           
  3587 ;; *************** function _terminal_task *****************
  3588 ;; Defined at:
  3589 ;;		line 8 in file "../My_library/My_terminal.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  tx              2  133[BANK0 ] PTR struct ringbuf
  3592 ;;		 -> usb_tx(8), 
  3593 ;;  rx              2  135[BANK0 ] PTR struct ringbuf
  3594 ;;		 -> usb_rx(8), 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  i               1  102[BANK1 ] unsigned char 
  3597 ;;  i               1  104[BANK1 ] unsigned char 
  3598 ;;  ascii           1  103[BANK1 ] unsigned char 
  3599 ;;  buf           100    0[BANK1 ] unsigned char [100]
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : F/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3610 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;      Totals:         0       6     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;Total ram usage:      111 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:   19
  3616 ;; This function calls:
  3617 ;;		_ringbuf_backspace
  3618 ;;		_ringbuf_delete
  3619 ;;		_ringbuf_init
  3620 ;;		_ringbuf_num
  3621 ;;		_ringbuf_pop
  3622 ;;		_ringbuf_put
  3623 ;;		_ringbuf_put_num
  3624 ;;		_ringbuf_put_str
  3625 ;;		_terminal_operation
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text1
  3632  01064A                     __ptext1:
  3633                           	opt stack 0
  3634  01064A                     _terminal_task:
  3635                           	opt stack 11
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;My_terminal.c: 9: static ringbuf_t command;
  3639                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3640                           ;My_terminal.c: 11: if (command_init == 0) {
  3641                           
  3642                           ; BSR set to: 1
  3643                           ;incstack = 0
  3644  01064A  0101               	movlb	1	; () banked
  3645  01064C  513C               	movf	terminal_task@command_init& (0+255),w,b
  3646  01064E  E10D               	bnz	l11702
  3647                           
  3648                           ; BSR set to: 1
  3649                           ;My_terminal.c: 12: command_init = 1;
  3650  010650  0E01               	movlw	1
  3651  010652  6F3C               	movwf	terminal_task@command_init& (0+255),b
  3652                           
  3653                           ; BSR set to: 1
  3654                           ;My_terminal.c: 13: char buf[100];
  3655                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3656  010654  0E8A               	movlw	low terminal_task@command
  3657  010656  0100               	movlb	0	; () banked
  3658  010658  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3659  01065A  0E01               	movlw	high terminal_task@command
  3660  01065C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3661  01065E  0E94               	movlw	low terminal_task@buf
  3662  010660  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3663  010662  0E01               	movlw	high terminal_task@buf
  3664  010664  D909               	call	PL332	;call to abstracted procedure
  3665  010666  EC1E  F0A0         	call	_ringbuf_init	;wreg free
  3666  01066A                     l11702:
  3667                           
  3668                           ;My_terminal.c: 15: }
  3669                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3670  01066A  C0E7  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3671  01066E  C0E8  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3672  010672  ECDE  F097         	call	_ringbuf_num	;wreg free
  3673  010676  5160               	movf	?_ringbuf_num& (0+255),w,b
  3674  010678  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3675  01067A  B4D8               	btfsc	status,2,c
  3676  01067C  0012               	return	
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3680  01067E  C0E7  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3681  010682  C0E8  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3682  010686  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3683  01068A  0101               	movlb	1	; () banked
  3684  01068C  6FFB               	movwf	terminal_task@ascii& (0+255),b
  3685                           
  3686                           ;My_terminal.c: 18: switch (ascii) {
  3687  01068E  D0C5               	goto	l11764
  3688  010690                     l11706:
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3692  010690  D8DE               	call	PL204	;call to abstracted procedure
  3693  010692  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
  3694  010694  ECC5  F093         	call	_ringbuf_put	;wreg free
  3695                           
  3696                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3697  010698  D8E0               	call	PL218	;call to abstracted procedure
  3698  01069A  0E09               	movlw	9
  3699  01069C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3700  01069E  ECC5  F093         	call	_ringbuf_put	;wreg free
  3701                           
  3702                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3703  0106A2  0E8A               	movlw	low terminal_task@command
  3704  0106A4  D8F2               	call	PL364	;call to abstracted procedure
  3705  0106A6  ECDE  F097         	call	_ringbuf_num	;wreg free
  3706  0106AA  0EFF               	movlw	255
  3707  0106AC  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3708  0106AE  0101               	movlb	1	; () banked
  3709  0106B0  6FF8               	movwf	_terminal_task$7100& (0+255),b
  3710  0106B2  0EFF               	movlw	255
  3711  0106B4  0100               	movlb	0	; () banked
  3712  0106B6  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3713  0106B8  0101               	movlb	1	; () banked
  3714  0106BA  6FF9               	movwf	(_terminal_task$7100+1)& (0+255),b
  3715                           
  3716                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3717  0106BC  C0E5  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3718  0106C0  C0E6  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3719  0106C4  C1F8  F085         	movff	_terminal_task$7100,ringbuf_put_num@value
  3720  0106C8  C1F9  F086         	movff	_terminal_task$7100+1,ringbuf_put_num@value+1
  3721  0106CC  0E02               	movlw	2
  3722  0106CE  0100               	movlb	0	; () banked
  3723  0106D0  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3724  0106D2  EC06  F09C         	call	_ringbuf_put_num	;wreg free
  3725                           
  3726                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3727  0106D6  D8C1               	call	PL218	;call to abstracted procedure
  3728  0106D8  0E0A               	movlw	10
  3729  0106DA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3730  0106DC  ECC5  F093         	call	_ringbuf_put	;wreg free
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;My_terminal.c: 24: static char op0[25];
  3734                           ;My_terminal.c: 25: static char op1[25];
  3735                           ;My_terminal.c: 26: static char op2[25];
  3736                           ;My_terminal.c: 27: static char op3[25];
  3737                           ;My_terminal.c: 28: uint8_t i;
  3738                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3739  0106E0  0101               	movlb	1	; () banked
  3740  0106E2  6BFC               	clrf	terminal_task@i& (0+255),b
  3741  0106E4  D001               	goto	l11712
  3742  0106E6                     l11710:
  3743                           
  3744                           ; BSR set to: 1
  3745  0106E6  2BFC               	incf	terminal_task@i& (0+255),f,b
  3746  0106E8                     l11712:
  3747                           
  3748                           ; BSR set to: 1
  3749  0106E8  D8A3               	call	PL122	;call to abstracted procedure
  3750  0106EA  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3751  0106EE  6FE9               	movwf	??_terminal_task& (0+255),b
  3752  0106F0  0E2B               	movlw	low terminal_task@op0
  3753  0106F2  D8B8               	call	PL226	;call to abstracted procedure
  3754  0106F4  0E02               	movlw	high terminal_task@op0
  3755  0106F6  D8BB               	call	PL236	;call to abstracted procedure
  3756  0106F8  E1F6               	bnz	l11710
  3757                           
  3758                           ; BSR set to: 1
  3759                           ;My_terminal.c: 30: op0[i] = '\0';
  3760  0106FA  0E2B               	movlw	low terminal_task@op0
  3761  0106FC  25FC               	addwf	terminal_task@i& (0+255),w,b
  3762  0106FE  6ED9               	movwf	fsr2l,c
  3763  010700  6ADA               	clrf	fsr2h,c
  3764  010702  0E02               	movlw	high terminal_task@op0
  3765                           
  3766                           ; BSR set to: 1
  3767                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3768  010704  D8BE               	call	PL350	;call to abstracted procedure
  3769  010706  D001               	goto	l11720
  3770  010708                     l11718:
  3771                           
  3772                           ; BSR set to: 1
  3773  010708  2BFC               	incf	terminal_task@i& (0+255),f,b
  3774  01070A                     l11720:
  3775                           
  3776                           ; BSR set to: 1
  3777  01070A  D892               	call	PL122	;call to abstracted procedure
  3778  01070C  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3779  010710  6FE9               	movwf	??_terminal_task& (0+255),b
  3780  010712  0E44               	movlw	low terminal_task@op1
  3781  010714  D8A7               	call	PL226	;call to abstracted procedure
  3782  010716  0E02               	movlw	high terminal_task@op1
  3783  010718  D8AA               	call	PL236	;call to abstracted procedure
  3784  01071A  E1F6               	bnz	l11718
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;My_terminal.c: 32: op1[i] = '\0';
  3788  01071C  0E44               	movlw	low terminal_task@op1
  3789  01071E  25FC               	addwf	terminal_task@i& (0+255),w,b
  3790  010720  6ED9               	movwf	fsr2l,c
  3791  010722  6ADA               	clrf	fsr2h,c
  3792  010724  0E02               	movlw	high terminal_task@op1
  3793                           
  3794                           ; BSR set to: 1
  3795                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3796  010726  D8AD               	call	PL350	;call to abstracted procedure
  3797  010728  D001               	goto	l11728
  3798  01072A                     l11726:
  3799                           
  3800                           ; BSR set to: 1
  3801  01072A  2BFC               	incf	terminal_task@i& (0+255),f,b
  3802  01072C                     l11728:
  3803                           
  3804                           ; BSR set to: 1
  3805  01072C  D881               	call	PL122	;call to abstracted procedure
  3806  01072E  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3807  010732  6FE9               	movwf	??_terminal_task& (0+255),b
  3808  010734  0E5D               	movlw	low terminal_task@op2
  3809  010736  D896               	call	PL226	;call to abstracted procedure
  3810  010738  0E02               	movlw	high terminal_task@op2
  3811  01073A  D899               	call	PL236	;call to abstracted procedure
  3812  01073C  E1F6               	bnz	l11726
  3813                           
  3814                           ; BSR set to: 1
  3815                           ;My_terminal.c: 34: op2[i] = '\0';
  3816  01073E  0E5D               	movlw	low terminal_task@op2
  3817  010740  25FC               	addwf	terminal_task@i& (0+255),w,b
  3818  010742  6ED9               	movwf	fsr2l,c
  3819  010744  6ADA               	clrf	fsr2h,c
  3820  010746  0E02               	movlw	high terminal_task@op2
  3821                           
  3822                           ; BSR set to: 1
  3823                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3824  010748  D89C               	call	PL350	;call to abstracted procedure
  3825  01074A  D001               	goto	l11736
  3826  01074C                     l11734:
  3827                           
  3828                           ; BSR set to: 1
  3829  01074C  2BFC               	incf	terminal_task@i& (0+255),f,b
  3830  01074E                     l11736:
  3831                           
  3832                           ; BSR set to: 1
  3833  01074E  D870               	call	PL122	;call to abstracted procedure
  3834  010750  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3835  010754  6FE9               	movwf	??_terminal_task& (0+255),b
  3836  010756  0E76               	movlw	low terminal_task@op3
  3837  010758  D885               	call	PL226	;call to abstracted procedure
  3838  01075A  0E02               	movlw	high terminal_task@op3
  3839  01075C  D888               	call	PL236	;call to abstracted procedure
  3840  01075E  E1F6               	bnz	l11734
  3841                           
  3842                           ; BSR set to: 1
  3843                           ;My_terminal.c: 36: op3[i] = '\0';
  3844  010760  0E76               	movlw	low terminal_task@op3
  3845  010762  25FC               	addwf	terminal_task@i& (0+255),w,b
  3846  010764  6ED9               	movwf	fsr2l,c
  3847  010766  6ADA               	clrf	fsr2h,c
  3848  010768  0E02               	movlw	high terminal_task@op3
  3849  01076A  22DA               	addwfc	fsr2h,f,c
  3850  01076C  6ADF               	clrf	indf2,c
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3854  01076E  C0E5  F0DA         	movff	terminal_task@tx,terminal_operation@tx
  3855  010772  C0E6  F0DB         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3856  010776  0E2B               	movlw	low terminal_task@op0
  3857  010778  0100               	movlb	0	; () banked
  3858  01077A  6FDC               	movwf	terminal_operation@op0& (0+255),b
  3859  01077C  0E02               	movlw	high terminal_task@op0
  3860  01077E  6FDD               	movwf	(terminal_operation@op0+1)& (0+255),b
  3861  010780  0E44               	movlw	low terminal_task@op1
  3862  010782  6FDE               	movwf	terminal_operation@op1& (0+255),b
  3863  010784  0E02               	movlw	high terminal_task@op1
  3864  010786  6FDF               	movwf	(terminal_operation@op1+1)& (0+255),b
  3865  010788  0E5D               	movlw	low terminal_task@op2
  3866  01078A  6FE0               	movwf	terminal_operation@op2& (0+255),b
  3867  01078C  0E02               	movlw	high terminal_task@op2
  3868  01078E  6FE1               	movwf	(terminal_operation@op2+1)& (0+255),b
  3869  010790  0E76               	movlw	low terminal_task@op3
  3870  010792  6FE2               	movwf	terminal_operation@op3& (0+255),b
  3871  010794  0E02               	movlw	high terminal_task@op3
  3872  010796  6FE3               	movwf	(terminal_operation@op3+1)& (0+255),b
  3873  010798  EF6D  F085         	goto	_terminal_operation	;wreg free
  3874  01079C                     l11742:
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3878  01079C  D858               	call	PL204	;call to abstracted procedure
  3879  01079E  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
  3880  0107A0  ECC5  F093         	call	_ringbuf_put	;wreg free
  3881                           
  3882                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3883  0107A4  D85A               	call	PL218	;call to abstracted procedure
  3884  0107A6  0E20               	movlw	32
  3885  0107A8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3886  0107AA  EFC5  F093         	goto	_ringbuf_put	;wreg free
  3887  0107AE                     l11744:
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3891  0107AE  0E8A               	movlw	low terminal_task@command
  3892  0107B0  0100               	movlb	0	; () banked
  3893  0107B2  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3894  0107B4  0E01               	movlw	high terminal_task@command
  3895  0107B6  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3896  0107B8  EC69  F09C         	call	_ringbuf_backspace	;wreg free
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3900  0107BC  D83F               	call	PL190	;call to abstracted procedure
  3901  0107BE  EFD9  F09D         	goto	l9736	;wreg free
  3902  0107C2                     l1224:
  3903                           
  3904                           ; BSR set to: 1
  3905                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3906  0107C2  6BFA               	clrf	terminal_task@i_3830& (0+255),b
  3907  0107C4  D005               	goto	l11752
  3908  0107C6                     l11748:
  3909                           
  3910                           ; BSR set to: 0
  3911  0107C6  D83A               	call	PL190	;call to abstracted procedure
  3912  0107C8  ECC6  F09D         	call	_ringbuf_put_str	;wreg free
  3913  0107CC  0101               	movlb	1	; () banked
  3914  0107CE  2BFA               	incf	terminal_task@i_3830& (0+255),f,b
  3915  0107D0                     l11752:
  3916                           
  3917                           ; BSR set to: 1
  3918  0107D0  0E8A               	movlw	low terminal_task@command
  3919  0107D2  0100               	movlb	0	; () banked
  3920  0107D4  D85A               	call	PL364	;call to abstracted procedure
  3921  0107D6  ECDE  F097         	call	_ringbuf_num	;wreg free
  3922  0107DA  0101               	movlb	1	; () banked
  3923  0107DC  51FA               	movf	terminal_task@i_3830& (0+255),w,b
  3924  0107DE  0100               	movlb	0	; () banked
  3925  0107E0  6FE9               	movwf	??_terminal_task& (0+255),b
  3926  0107E2  6BEA               	clrf	(??_terminal_task+1)& (0+255),b
  3927  0107E4  5160               	movf	?_ringbuf_num& (0+255),w,b
  3928  0107E6  5DE9               	subwf	??_terminal_task& (0+255),w,b
  3929  0107E8  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3930  0107EA  59EA               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3931  0107EC  E3EC               	bnc	l11748
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3935  0107EE  0E8A               	movlw	low terminal_task@command
  3936  0107F0  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3937  0107F2  0E01               	movlw	high terminal_task@command
  3938  0107F4  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3939  0107F6  EFAC  F0A1         	goto	_ringbuf_delete	;wreg free
  3940  0107FA                     l11756:
  3941                           
  3942                           ; BSR set to: 1
  3943                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3944  0107FA  0E1F               	movlw	31
  3945  0107FC  65FB               	cpfsgt	terminal_task@ascii& (0+255),b
  3946  0107FE  0C1F               	retlw	31
  3947                           
  3948                           ; BSR set to: 1
  3949  010800  0E7F               	movlw	127
  3950  010802  61FB               	cpfslt	terminal_task@ascii& (0+255),b
  3951  010804  0C7F               	retlw	127
  3952                           
  3953                           ; BSR set to: 1
  3954                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  3955  010806  D823               	call	PL204	;call to abstracted procedure
  3956  010808  C1FB  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  3957  01080C  ECC5  F093         	call	_ringbuf_put	;wreg free
  3958                           
  3959                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  3960  010810  D824               	call	PL218	;call to abstracted procedure
  3961  010812  C1FB  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  3962  010816  EFC5  F093         	goto	_ringbuf_put	;wreg free
  3963  01081A                     l11764:
  3964                           
  3965                           ; BSR set to: 1
  3966  01081A  51FB               	movf	terminal_task@ascii& (0+255),w,b
  3967                           
  3968                           ; Switch size 1, requested type "space"
  3969                           ; Number of cases is 4, Range of values is 8 to 127
  3970                           ; switch strategies available:
  3971                           ; Name         Instructions Cycles
  3972                           ; simple_byte           13     7 (average)
  3973                           ;	Chosen strategy is simple_byte
  3974  01081C  0A08               	xorlw	8	; case 8
  3975  01081E  E0C7               	bz	l11744
  3976  010820  0A05               	xorlw	5	; case 13
  3977  010822  E101 D735          	bz	l11706
  3978  010826  0A2D               	xorlw	45	; case 32
  3979  010828  E0B9               	bz	l11742
  3980  01082A  0A5F               	xorlw	95	; case 127
  3981  01082C  E0CA               	bz	l1224
  3982  01082E  D7E5               	goto	l11756
  3983  010830                     __end_of_terminal_task:
  3984                           	opt stack 0
  3985  010830                     PL122:
  3986                           	opt stack 11
  3987  010830  0E8A               	movlw	low terminal_task@command
  3988  010832  0100               	movlb	0	; () banked
  3989  010834  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3990  010836  0E01               	movlw	high terminal_task@command
  3991  010838  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3992  01083A  0012               	return	
  3993  01083C                     __end_ofPL122:
  3994                           	opt stack 0
  3995  01083C                     PL190:
  3996                           	opt stack 11
  3997  01083C  C0E5  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3998  010840  C0E6  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3999  010844  0EE3               	movlw	low STR_96
  4000  010846  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4001  010848  0EFF               	movlw	high STR_96
  4002  01084A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4003  01084C  0012               	return	
  4004  01084E                     __end_ofPL190:
  4005                           	opt stack 0
  4006  01084E                     PL204:
  4007                           	opt stack 11
  4008  01084E  0E8A               	movlw	low terminal_task@command
  4009  010850  0100               	movlb	0	; () banked
  4010  010852  6F68               	movwf	ringbuf_put@rb& (0+255),b
  4011  010854  0E01               	movlw	high terminal_task@command
  4012  010856  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4013  010858  0012               	return	
  4014  01085A                     __end_ofPL204:
  4015                           	opt stack 0
  4016  01085A                     PL218:
  4017                           	opt stack 11
  4018  01085A  C0E5  F068         	movff	terminal_task@tx,ringbuf_put@rb
  4019  01085E  C0E6  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  4020  010862  0012               	return	
  4021  010864                     __end_ofPL218:
  4022                           	opt stack 0
  4023  010864                     PL226:
  4024                           	opt stack 11
  4025  010864  0101               	movlb	1	; () banked
  4026  010866  25FC               	addwf	terminal_task@i& (0+255),w,b
  4027  010868  6ED9               	movwf	fsr2l,c
  4028  01086A  6ADA               	clrf	fsr2h,c
  4029  01086C  0012               	return	
  4030  01086E                     __end_ofPL226:
  4031                           	opt stack 0
  4032  01086E                     PL236:
  4033                           	opt stack 11
  4034  01086E  22DA               	addwfc	fsr2h,f,c
  4035  010870  C0E9  FFDF         	movff	??_terminal_task,indf2
  4036  010874  50DF               	movf	indf2,w,c
  4037  010876  0012               	return	
  4038  010878                     __end_ofPL236:
  4039                           	opt stack 0
  4040  010878                     PL332:
  4041                           	opt stack 14
  4042  010878  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4043  01087A  6B65               	clrf	(ringbuf_init@bufsize+1)& (0+255),b
  4044  01087C  0E64               	movlw	100
  4045  01087E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4046  010880  0C64               	retlw	100
  4047  010882                     __end_ofPL332:
  4048                           	opt stack 0
  4049  010882                     PL350:
  4050                           	opt stack 11
  4051  010882  22DA               	addwfc	fsr2h,f,c
  4052  010884  6ADF               	clrf	indf2,c
  4053  010886  6BFC               	clrf	terminal_task@i& (0+255),b
  4054  010888  0012               	return	
  4055  01088A                     __end_ofPL350:
  4056                           	opt stack 0
  4057  01088A                     PL364:
  4058                           	opt stack 11
  4059  01088A  6F60               	movwf	ringbuf_num@rb& (0+255),b
  4060  01088C  0E01               	movlw	high terminal_task@command
  4061  01088E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  4062  010890  0012               	return	
  4063  010892                     __end_ofPL364:
  4064                           	opt stack 0
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           prodh	equ	0xFF4
  4070                           prodl	equ	0xFF3
  4071                           intcon	equ	0xFF2
  4072                           intcon2	equ	0xFF1
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           indf1	equ	0xFE7
  4076                           postinc1	equ	0xFE6
  4077                           postdec1	equ	0xFE5
  4078                           fsr1h	equ	0xFE2
  4079                           fsr1l	equ	0xFE1
  4080                           indf2	equ	0xFDF
  4081                           postinc2	equ	0xFDE
  4082                           postdec2	equ	0xFDD
  4083                           plusw2	equ	0xFDB
  4084                           fsr2h	equ	0xFDA
  4085                           fsr2l	equ	0xFD9
  4086                           status	equ	0xFD8
  4087                           
  4088 ;; *************** function _terminal_operation *****************
  4089 ;; Defined at:
  4090 ;;		line 200 in file "ChargeStation_task.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  tx              2  122[BANK0 ] PTR struct ringbuf
  4093 ;;		 -> usb_tx(8), 
  4094 ;;  op0             2  124[BANK0 ] PTR unsigned char 
  4095 ;;		 -> terminal_task@op0(25), 
  4096 ;;  op1             2  126[BANK0 ] PTR unsigned char 
  4097 ;;		 -> terminal_task@op1(25), 
  4098 ;;  op2             2  128[BANK0 ] PTR unsigned char 
  4099 ;;		 -> terminal_task@op2(25), 
  4100 ;;  op3             2  130[BANK0 ] PTR unsigned char 
  4101 ;;		 -> terminal_task@op3(25), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  percentage      1  132[BANK0 ] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : F/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4113 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;Total ram usage:       11 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:   18
  4120 ;; This function calls:
  4121 ;;		_atoi
  4122 ;;		_bootload
  4123 ;;		_ctmu_set_ratio
  4124 ;;		_ringbuf_put_str
  4125 ;;		_strcmp
  4126 ;;		_terminal_time
  4127 ;; This function is called by:
  4128 ;;		_terminal_task
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text2
  4133  010ADA                     __ptext2:
  4134                           	opt stack 0
  4135  010ADA                     _terminal_operation:
  4136                           	opt stack 0
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4140                           
  4141                           ;incstack = 0
  4142  010ADA  D8C9               	call	PL94	;call to abstracted procedure
  4143  010ADC  0ED9               	movlw	low STR_11
  4144  010ADE  6F62               	movwf	strcmp@s2& (0+255),b
  4145  010AE0  0EFF               	movlw	high STR_11
  4146  010AE2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4147  010AE4  EC3A  F09F         	call	_strcmp	;wreg free
  4148  010AE8  5160               	movf	?_strcmp& (0+255),w,b
  4149  010AEA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4150  010AEC  E00A               	bz	l11206
  4151                           
  4152                           ; BSR set to: 0
  4153  010AEE  D8BF               	call	PL94	;call to abstracted procedure
  4154  010AF0  0EFD               	movlw	low STR_12
  4155  010AF2  6F62               	movwf	strcmp@s2& (0+255),b
  4156  010AF4  0EFF               	movlw	high STR_12
  4157  010AF6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4158  010AF8  EC3A  F09F         	call	_strcmp	;wreg free
  4159  010AFC  5160               	movf	?_strcmp& (0+255),w,b
  4160  010AFE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4161  010B00  E107               	bnz	l11208
  4162  010B02                     l11206:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4166                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4167                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4168                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4169                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4170                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4171                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4172                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4173  010B02  D8BA               	call	PL224	;call to abstracted procedure
  4174  010B04  0EE6               	movlw	low STR_13
  4175  010B06  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4176  010B08  0EFB               	movlw	high STR_13
  4177  010B0A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4178  010B0C  ECC6  F09D         	call	_ringbuf_put_str	;wreg free
  4179  010B10                     l11208:
  4180                           
  4181                           ;ChargeStation_task.c: 216: }
  4182                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4183  010B10  C0DA  F0D1         	movff	terminal_operation@tx,terminal_time@tx
  4184  010B14  C0DB  F0D2         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4185  010B18  C0DC  F0D3         	movff	terminal_operation@op0,terminal_time@op0
  4186  010B1C  C0DD  F0D4         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4187  010B20  C0DE  F0D5         	movff	terminal_operation@op1,terminal_time@op1
  4188  010B24  C0DF  F0D6         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4189  010B28  C0E0  F0D7         	movff	terminal_operation@op2,terminal_time@op2
  4190  010B2C  C0E1  F0D8         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4191  010B30  EC49  F084         	call	_terminal_time	;wreg free
  4192                           
  4193                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4194  010B34  D89C               	call	PL94	;call to abstracted procedure
  4195  010B36  0E70               	movlw	low STR_14
  4196  010B38  0100               	movlb	0	; () banked
  4197  010B3A  6F62               	movwf	strcmp@s2& (0+255),b
  4198  010B3C  0EFF               	movlw	high STR_14
  4199  010B3E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4200  010B40  EC3A  F09F         	call	_strcmp	;wreg free
  4201  010B44  5160               	movf	?_strcmp& (0+255),w,b
  4202  010B46  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4203  010B48  E101               	bnz	l11214
  4204                           
  4205                           ; BSR set to: 0
  4206  010B4A  00FF               	reset		;# 
  4207  010B4C                     l11214:
  4208                           
  4209                           ;ChargeStation_task.c: 220: }
  4210                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4211  010B4C  D890               	call	PL94	;call to abstracted procedure
  4212  010B4E  0E79               	movlw	low STR_15
  4213  010B50  0100               	movlb	0	; () banked
  4214  010B52  6F62               	movwf	strcmp@s2& (0+255),b
  4215  010B54  0EFF               	movlw	high STR_15
  4216  010B56  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4217  010B58  EC3A  F09F         	call	_strcmp	;wreg free
  4218  010B5C  5160               	movf	?_strcmp& (0+255),w,b
  4219  010B5E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4220  010B60  E102               	bnz	l11218
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;ChargeStation_task.c: 222: bootload();
  4224  010B62  EC8C  F0A0         	call	_bootload	;wreg free
  4225  010B66                     l11218:
  4226                           
  4227                           ;ChargeStation_task.c: 223: }
  4228                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4229  010B66  D883               	call	PL94	;call to abstracted procedure
  4230  010B68  0EEE               	movlw	low STR_16
  4231  010B6A  0100               	movlb	0	; () banked
  4232  010B6C  6F62               	movwf	strcmp@s2& (0+255),b
  4233  010B6E  0EFF               	movlw	high STR_16
  4234  010B70  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4235  010B72  EC3A  F09F         	call	_strcmp	;wreg free
  4236  010B76  5160               	movf	?_strcmp& (0+255),w,b
  4237  010B78  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4238  010B7A  E00A               	bz	l11222
  4239                           
  4240                           ; BSR set to: 0
  4241  010B7C  D878               	call	PL94	;call to abstracted procedure
  4242  010B7E  0E31               	movlw	low STR_17
  4243  010B80  6F62               	movwf	strcmp@s2& (0+255),b
  4244  010B82  0EFF               	movlw	high STR_17
  4245  010B84  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4246  010B86  EC3A  F09F         	call	_strcmp	;wreg free
  4247  010B8A  5160               	movf	?_strcmp& (0+255),w,b
  4248  010B8C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4249  010B8E  E103               	bnz	l11224
  4250  010B90                     l11222:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4254  010B90  0E01               	movlw	1
  4255  010B92  0101               	movlb	1	; () banked
  4256  010B94  6F33               	movwf	_terminal_data_out& (0+255),b
  4257  010B96                     l11224:
  4258                           
  4259                           ;ChargeStation_task.c: 226: }
  4260                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4261  010B96  D86B               	call	PL94	;call to abstracted procedure
  4262  010B98  0EE6               	movlw	low (STR_96+3)
  4263  010B9A  0100               	movlb	0	; () banked
  4264  010B9C  6F62               	movwf	strcmp@s2& (0+255),b
  4265  010B9E  0EFF               	movlw	high (STR_96+3)
  4266  010BA0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4267  010BA2  EC3A  F09F         	call	_strcmp	;wreg free
  4268  010BA6  5160               	movf	?_strcmp& (0+255),w,b
  4269  010BA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4270  010BAA  E102               	bnz	l11228
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4274  010BAC  0101               	movlb	1	; () banked
  4275  010BAE  6B33               	clrf	_terminal_data_out& (0+255),b
  4276  010BB0                     l11228:
  4277                           
  4278                           ;ChargeStation_task.c: 229: }
  4279                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4280  010BB0  D85E               	call	PL94	;call to abstracted procedure
  4281  010BB2  0EC3               	movlw	low STR_19
  4282  010BB4  0100               	movlb	0	; () banked
  4283  010BB6  6F62               	movwf	strcmp@s2& (0+255),b
  4284  010BB8  0EFF               	movlw	high STR_19
  4285  010BBA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4286  010BBC  EC3A  F09F         	call	_strcmp	;wreg free
  4287  010BC0  5160               	movf	?_strcmp& (0+255),w,b
  4288  010BC2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4289  010BC4  A4D8               	btfss	status,2,c
  4290  010BC6  0012               	return	
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4294  010BC8  D85C               	call	PL242	;call to abstracted procedure
  4295  010BCA  0E53               	movlw	low STR_20
  4296  010BCC  6F62               	movwf	strcmp@s2& (0+255),b
  4297  010BCE  0EFF               	movlw	high STR_20
  4298  010BD0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4299  010BD2  EC3A  F09F         	call	_strcmp	;wreg free
  4300  010BD6  5160               	movf	?_strcmp& (0+255),w,b
  4301  010BD8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4302  010BDA  E00A               	bz	l11234
  4303                           
  4304                           ; BSR set to: 0
  4305  010BDC  D852               	call	PL242	;call to abstracted procedure
  4306  010BDE  0EDE               	movlw	low STR_21
  4307  010BE0  6F62               	movwf	strcmp@s2& (0+255),b
  4308  010BE2  0EFF               	movlw	high STR_21
  4309  010BE4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4310  010BE6  EC3A  F09F         	call	_strcmp	;wreg free
  4311  010BEA  5160               	movf	?_strcmp& (0+255),w,b
  4312  010BEC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4313  010BEE  E11F               	bnz	l11246
  4314  010BF0                     l11234:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4318  010BF0  C0E0  F07C         	movff	terminal_operation@op2,atoi@s
  4319  010BF4  C0E1  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4320  010BF8  ECB1  F094         	call	_atoi	;wreg free
  4321  010BFC  517C               	movf	?_atoi& (0+255),w,b
  4322  010BFE  6FE4               	movwf	terminal_operation@percentage& (0+255),b
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4326  010C00  0E65               	movlw	101
  4327  010C02  61E4               	cpfslt	terminal_operation@percentage& (0+255),b
  4328  010C04  D00D               	goto	l11244
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4332  010C06  C0E4  F0EB         	movff	terminal_operation@percentage,_ctmu_ratio
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4336  010C0A  51EB               	movf	_ctmu_ratio& (0+255),w,b
  4337  010C0C  EC25  F093         	call	_ctmu_set_ratio
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4341  010C10  D833               	call	PL224	;call to abstracted procedure
  4342  010C12  0E1D               	movlw	low STR_22
  4343  010C14  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4344  010C16  0EFE               	movlw	high STR_22
  4345  010C18  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4346  010C1A  ECC6  F09D         	call	_ringbuf_put_str	;wreg free
  4347                           
  4348                           ;ChargeStation_task.c: 237: } else {
  4349  010C1E  D007               	goto	l11246
  4350  010C20                     l11244:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4354  010C20  D82B               	call	PL224	;call to abstracted procedure
  4355  010C22  0EBD               	movlw	low STR_23
  4356  010C24  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4357  010C26  0EFD               	movlw	high STR_23
  4358  010C28  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4359  010C2A  ECC6  F09D         	call	_ringbuf_put_str	;wreg free
  4360  010C2E                     l11246:
  4361                           
  4362                           ;ChargeStation_task.c: 239: }
  4363                           ;ChargeStation_task.c: 240: }
  4364                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4365  010C2E  D829               	call	PL242	;call to abstracted procedure
  4366  010C30  0EC9               	movlw	low STR_24
  4367  010C32  0100               	movlb	0	; () banked
  4368  010C34  6F62               	movwf	strcmp@s2& (0+255),b
  4369  010C36  0EFF               	movlw	high STR_24
  4370  010C38  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4371  010C3A  EC3A  F09F         	call	_strcmp	;wreg free
  4372  010C3E  5160               	movf	?_strcmp& (0+255),w,b
  4373  010C40  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4374  010C42  E00B               	bz	l11250
  4375                           
  4376                           ; BSR set to: 0
  4377  010C44  D81E               	call	PL242	;call to abstracted procedure
  4378  010C46  0ED2               	movlw	low (STR_107+3)
  4379  010C48  6F62               	movwf	strcmp@s2& (0+255),b
  4380  010C4A  0EFF               	movlw	high (STR_107+3)
  4381  010C4C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4382  010C4E  EC3A  F09F         	call	_strcmp	;wreg free
  4383  010C52  5160               	movf	?_strcmp& (0+255),w,b
  4384  010C54  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4385  010C56  A4D8               	btfss	status,2,c
  4386  010C58  0012               	return	
  4387  010C5A                     l11250:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4391  010C5A  51EB               	movf	_ctmu_ratio& (0+255),w,b
  4392  010C5C  EC25  F093         	call	_ctmu_set_ratio
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4396  010C60  D80B               	call	PL224	;call to abstracted procedure
  4397  010C62  0E4D               	movlw	low STR_26
  4398  010C64  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4399  010C66  0EFE               	movlw	high STR_26
  4400  010C68  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4401  010C6A  EFD9  F09D         	goto	l9736	;wreg free
  4402  010C6E                     __end_of_terminal_operation:
  4403                           	opt stack 0
  4404  010C6E                     PL94:
  4405                           	opt stack 11
  4406  010C6E  C0DC  F060         	movff	terminal_operation@op0,strcmp@s1
  4407  010C72  C0DD  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4408  010C76  0012               	return	
  4409  010C78                     __end_ofPL94:
  4410                           	opt stack 0
  4411  010C78                     PL224:
  4412                           	opt stack 11
  4413  010C78  C0DA  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4414  010C7C  C0DB  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4415  010C80  0012               	return	
  4416  010C82                     __end_ofPL224:
  4417                           	opt stack 0
  4418  010C82                     PL242:
  4419                           	opt stack 11
  4420  010C82  C0DE  F060         	movff	terminal_operation@op1,strcmp@s1
  4421  010C86  C0DF  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4422  010C8A  0012               	return	
  4423  010C8C                     __end_ofPL242:
  4424                           	opt stack 0
  4425                           tblptru	equ	0xFF8
  4426                           tblptrh	equ	0xFF7
  4427                           tblptrl	equ	0xFF6
  4428                           tablat	equ	0xFF5
  4429                           prodh	equ	0xFF4
  4430                           prodl	equ	0xFF3
  4431                           intcon	equ	0xFF2
  4432                           intcon2	equ	0xFF1
  4433                           postinc0	equ	0xFEE
  4434                           wreg	equ	0xFE8
  4435                           indf1	equ	0xFE7
  4436                           postinc1	equ	0xFE6
  4437                           postdec1	equ	0xFE5
  4438                           fsr1h	equ	0xFE2
  4439                           fsr1l	equ	0xFE1
  4440                           indf2	equ	0xFDF
  4441                           postinc2	equ	0xFDE
  4442                           postdec2	equ	0xFDD
  4443                           plusw2	equ	0xFDB
  4444                           fsr2h	equ	0xFDA
  4445                           fsr2l	equ	0xFD9
  4446                           status	equ	0xFD8
  4447                           
  4448 ;; *************** function _terminal_time *****************
  4449 ;; Defined at:
  4450 ;;		line 93 in file "../My_library/My_terminal.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  tx              2  113[BANK0 ] PTR struct ringbuf
  4453 ;;		 -> usb_tx(8), 
  4454 ;;  op0             2  115[BANK0 ] PTR unsigned char 
  4455 ;;		 -> terminal_task@op0(25), 
  4456 ;;  op1             2  117[BANK0 ] PTR unsigned char 
  4457 ;;		 -> terminal_task@op1(25), 
  4458 ;;  op2             2  119[BANK0 ] PTR unsigned char 
  4459 ;;		 -> terminal_task@op2(25), 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;		None               void
  4464 ;; Registers used:
  4465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4471 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4474 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4475 ;;Total ram usage:        9 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:   17
  4478 ;; This function calls:
  4479 ;;		_atoi
  4480 ;;		_month_length
  4481 ;;		_print_time
  4482 ;;		_strcmp
  4483 ;;		_terminal_at_hand
  4484 ;; This function is called by:
  4485 ;;		_terminal_operation
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text3
  4490  010892                     __ptext3:
  4491                           	opt stack 0
  4492  010892                     _terminal_time:
  4493                           	opt stack 0
  4494                           
  4495                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4496                           
  4497                           ;incstack = 0
  4498  010892  D91E               	call	PL220	;call to abstracted procedure
  4499  010894  0E3D               	movlw	low STR_102
  4500  010896  0100               	movlb	0	; () banked
  4501  010898  6F62               	movwf	strcmp@s2& (0+255),b
  4502  01089A  0EFF               	movlw	high STR_102
  4503  01089C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4504  01089E  EC3A  F09F         	call	_strcmp	;wreg free
  4505  0108A2  5160               	movf	?_strcmp& (0+255),w,b
  4506  0108A4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4507  0108A6  E00A               	bz	l10374
  4508                           
  4509                           ; BSR set to: 0
  4510  0108A8  D913               	call	PL220	;call to abstracted procedure
  4511  0108AA  0EEC               	movlw	low (STR_104+1)
  4512  0108AC  6F62               	movwf	strcmp@s2& (0+255),b
  4513  0108AE  0EFF               	movlw	high (STR_104+1)
  4514  0108B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4515  0108B2  EC3A  F09F         	call	_strcmp	;wreg free
  4516  0108B6  5160               	movf	?_strcmp& (0+255),w,b
  4517  0108B8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4518  0108BA  E106               	bnz	l10376
  4519  0108BC                     l10374:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;My_terminal.c: 95: print_time(tx);
  4523  0108BC  C0D1  F0AA         	movff	terminal_time@tx,print_time@tx
  4524  0108C0  C0D2  F0AB         	movff	terminal_time@tx+1,print_time@tx+1
  4525  0108C4  EC24  F09D         	call	_print_time	;wreg free
  4526  0108C8                     l10376:
  4527                           
  4528                           ;My_terminal.c: 96: }
  4529                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4530  0108C8  D903               	call	PL220	;call to abstracted procedure
  4531  0108CA  0EEB               	movlw	low STR_104
  4532  0108CC  0100               	movlb	0	; () banked
  4533  0108CE  6F62               	movwf	strcmp@s2& (0+255),b
  4534  0108D0  0EFF               	movlw	high STR_104
  4535  0108D2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4536  0108D4  EC3A  F09F         	call	_strcmp	;wreg free
  4537  0108D8  5160               	movf	?_strcmp& (0+255),w,b
  4538  0108DA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4539  0108DC  E00B               	bz	l10380
  4540                           
  4541                           ; BSR set to: 0
  4542  0108DE  D8F8               	call	PL220	;call to abstracted procedure
  4543  0108E0  0E19               	movlw	low STR_105
  4544  0108E2  6F62               	movwf	strcmp@s2& (0+255),b
  4545  0108E4  0EFF               	movlw	high STR_105
  4546  0108E6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4547  0108E8  EC3A  F09F         	call	_strcmp	;wreg free
  4548  0108EC  5160               	movf	?_strcmp& (0+255),w,b
  4549  0108EE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4550  0108F0  A4D8               	btfss	status,2,c
  4551  0108F2  0012               	return	
  4552  0108F4                     l10380:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4556  0108F4  D8DA               	call	PL62	;call to abstracted procedure
  4557  0108F6  0EE9               	movlw	low (STR_111+2)
  4558  0108F8  6F62               	movwf	strcmp@s2& (0+255),b
  4559  0108FA  0EFF               	movlw	high (STR_111+2)
  4560  0108FC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4561  0108FE  EC3A  F09F         	call	_strcmp	;wreg free
  4562  010902  5160               	movf	?_strcmp& (0+255),w,b
  4563  010904  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4564  010906  E00A               	bz	l10384
  4565                           
  4566                           ; BSR set to: 0
  4567  010908  D8D0               	call	PL62	;call to abstracted procedure
  4568  01090A  0ECF               	movlw	low STR_107
  4569  01090C  6F62               	movwf	strcmp@s2& (0+255),b
  4570  01090E  0EFF               	movlw	high STR_107
  4571  010910  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4572  010912  EC3A  F09F         	call	_strcmp	;wreg free
  4573  010916  5160               	movf	?_strcmp& (0+255),w,b
  4574  010918  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4575  01091A  E10E               	bnz	l10386
  4576  01091C                     l10384:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4580  01091C  D8D1               	call	PL148	;call to abstracted procedure
  4581  01091E  0E99               	movlw	low (_now+10)
  4582  010920  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4583  010922  0E02               	movlw	high (_now+10)
  4584  010924  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4585  010926  6BCE               	clrf	terminal_at_hand@min& (0+255),b
  4586  010928  0E63               	movlw	99
  4587  01092A  D8C4               	call	PL106	;call to abstracted procedure
  4588  01092C  ECB1  F094         	call	_atoi	;wreg free
  4589  010930  517C               	movf	?_atoi& (0+255),w,b
  4590  010932  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4591  010934  EC12  F09E         	call	_terminal_at_hand	;wreg free
  4592  010938                     l10386:
  4593                           
  4594                           ;My_terminal.c: 100: }
  4595                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4596  010938  D8B8               	call	PL62	;call to abstracted procedure
  4597  01093A  0EF1               	movlw	low STR_108
  4598  01093C  0100               	movlb	0	; () banked
  4599  01093E  6F62               	movwf	strcmp@s2& (0+255),b
  4600  010940  0EFF               	movlw	high STR_108
  4601  010942  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4602  010944  EC3A  F09F         	call	_strcmp	;wreg free
  4603  010948  5160               	movf	?_strcmp& (0+255),w,b
  4604  01094A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4605  01094C  E00A               	bz	l10390
  4606                           
  4607                           ; BSR set to: 0
  4608  01094E  D8AD               	call	PL62	;call to abstracted procedure
  4609  010950  0E9F               	movlw	low STR_109
  4610  010952  6F62               	movwf	strcmp@s2& (0+255),b
  4611  010954  0EFF               	movlw	high STR_109
  4612  010956  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4613  010958  EC3A  F09F         	call	_strcmp	;wreg free
  4614  01095C  5160               	movf	?_strcmp& (0+255),w,b
  4615  01095E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4616  010960  E10F               	bnz	l10392
  4617  010962                     l10390:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4621  010962  D8AE               	call	PL148	;call to abstracted procedure
  4622  010964  0E98               	movlw	low (_now+9)
  4623  010966  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4624  010968  0E02               	movlw	high (_now+9)
  4625  01096A  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4626  01096C  0E01               	movlw	1
  4627  01096E  6FCE               	movwf	terminal_at_hand@min& (0+255),b
  4628  010970  0E0C               	movlw	12
  4629  010972  D8A0               	call	PL106	;call to abstracted procedure
  4630  010974  ECB1  F094         	call	_atoi	;wreg free
  4631  010978  517C               	movf	?_atoi& (0+255),w,b
  4632  01097A  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4633  01097C  EC12  F09E         	call	_terminal_at_hand	;wreg free
  4634  010980                     l10392:
  4635                           
  4636                           ;My_terminal.c: 103: }
  4637                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4638  010980  D894               	call	PL62	;call to abstracted procedure
  4639  010982  0EFF               	movlw	low (STR_27+30)
  4640  010984  0100               	movlb	0	; () banked
  4641  010986  6F62               	movwf	strcmp@s2& (0+255),b
  4642  010988  0EFD               	movlw	high (STR_27+30)
  4643  01098A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4644  01098C  EC3A  F09F         	call	_strcmp	;wreg free
  4645  010990  5160               	movf	?_strcmp& (0+255),w,b
  4646  010992  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4647  010994  E00A               	bz	l10396
  4648                           
  4649                           ; BSR set to: 0
  4650  010996  D889               	call	PL62	;call to abstracted procedure
  4651  010998  0EE7               	movlw	low STR_111
  4652  01099A  6F62               	movwf	strcmp@s2& (0+255),b
  4653  01099C  0EFF               	movlw	high STR_111
  4654  01099E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4655  0109A0  EC3A  F09F         	call	_strcmp	;wreg free
  4656  0109A4  5160               	movf	?_strcmp& (0+255),w,b
  4657  0109A6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4658  0109A8  E11A               	bnz	l10400
  4659  0109AA                     l10396:
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4663  0109AA  C298  F066         	movff	_now+9,month_length@month
  4664  0109AE  0102               	movlb	2	; () banked
  4665  0109B0  5199               	movf	(_now+10)& (0+255),w,b
  4666  0109B2  EC3E  F09A         	call	_month_length
  4667  0109B6  6FD9               	movwf	_terminal_time$7101& (0+255),b
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4671  0109B8  D883               	call	PL148	;call to abstracted procedure
  4672  0109BA  0E97               	movlw	low (_now+8)
  4673  0109BC  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4674  0109BE  0E02               	movlw	high (_now+8)
  4675  0109C0  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4676  0109C2  0E01               	movlw	1
  4677  0109C4  6FCE               	movwf	terminal_at_hand@min& (0+255),b
  4678  0109C6  C0D9  F0CF         	movff	_terminal_time$7101,terminal_at_hand@max
  4679  0109CA  C0D7  F07C         	movff	terminal_time@op2,atoi@s
  4680  0109CE  C0D8  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4681  0109D2  ECB1  F094         	call	_atoi	;wreg free
  4682  0109D6  517C               	movf	?_atoi& (0+255),w,b
  4683  0109D8  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4684  0109DA  EC12  F09E         	call	_terminal_at_hand	;wreg free
  4685  0109DE                     l10400:
  4686                           
  4687                           ;My_terminal.c: 106: }
  4688                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4689  0109DE  D865               	call	PL62	;call to abstracted procedure
  4690  0109E0  0E4B               	movlw	low (STR_28+22)
  4691  0109E2  0100               	movlb	0	; () banked
  4692  0109E4  6F62               	movwf	strcmp@s2& (0+255),b
  4693  0109E6  0EFE               	movlw	high (STR_28+22)
  4694  0109E8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4695  0109EA  EC3A  F09F         	call	_strcmp	;wreg free
  4696  0109EE  5160               	movf	?_strcmp& (0+255),w,b
  4697  0109F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4698  0109F2  E00A               	bz	l10404
  4699                           
  4700                           ; BSR set to: 0
  4701  0109F4  D85A               	call	PL62	;call to abstracted procedure
  4702  0109F6  0ED4               	movlw	low STR_113
  4703  0109F8  6F62               	movwf	strcmp@s2& (0+255),b
  4704  0109FA  0EFF               	movlw	high STR_113
  4705  0109FC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4706  0109FE  EC3A  F09F         	call	_strcmp	;wreg free
  4707  010A02  5160               	movf	?_strcmp& (0+255),w,b
  4708  010A04  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4709  010A06  E10E               	bnz	l10406
  4710  010A08                     l10404:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4714  010A08  D85B               	call	PL148	;call to abstracted procedure
  4715  010A0A  0E95               	movlw	low (_now+6)
  4716  010A0C  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4717  010A0E  0E02               	movlw	high (_now+6)
  4718  010A10  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4719  010A12  6BCE               	clrf	terminal_at_hand@min& (0+255),b
  4720  010A14  0E17               	movlw	23
  4721  010A16  D84E               	call	PL106	;call to abstracted procedure
  4722  010A18  ECB1  F094         	call	_atoi	;wreg free
  4723  010A1C  517C               	movf	?_atoi& (0+255),w,b
  4724  010A1E  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4725  010A20  EC12  F09E         	call	_terminal_at_hand	;wreg free
  4726  010A24                     l10406:
  4727                           
  4728                           ;My_terminal.c: 109: }
  4729                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4730  010A24  D842               	call	PL62	;call to abstracted procedure
  4731  010A26  0EF3               	movlw	low STR_114
  4732  010A28  0100               	movlb	0	; () banked
  4733  010A2A  6F62               	movwf	strcmp@s2& (0+255),b
  4734  010A2C  0EFF               	movlw	high STR_114
  4735  010A2E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4736  010A30  EC3A  F09F         	call	_strcmp	;wreg free
  4737  010A34  5160               	movf	?_strcmp& (0+255),w,b
  4738  010A36  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4739  010A38  E00A               	bz	l10410
  4740                           
  4741                           ; BSR set to: 0
  4742  010A3A  D837               	call	PL62	;call to abstracted procedure
  4743  010A3C  0E98               	movlw	low STR_115
  4744  010A3E  6F62               	movwf	strcmp@s2& (0+255),b
  4745  010A40  0EFF               	movlw	high STR_115
  4746  010A42  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4747  010A44  EC3A  F09F         	call	_strcmp	;wreg free
  4748  010A48  5160               	movf	?_strcmp& (0+255),w,b
  4749  010A4A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4750  010A4C  E10C               	bnz	l10412
  4751  010A4E                     l10410:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4755  010A4E  D838               	call	PL148	;call to abstracted procedure
  4756  010A50  0E94               	movlw	low (_now+5)
  4757  010A52  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4758  010A54  0E02               	movlw	high (_now+5)
  4759  010A56  D839               	call	PL184	;call to abstracted procedure
  4760  010A58  D82D               	call	PL106	;call to abstracted procedure
  4761  010A5A  ECB1  F094         	call	_atoi	;wreg free
  4762  010A5E  517C               	movf	?_atoi& (0+255),w,b
  4763  010A60  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4764  010A62  EC12  F09E         	call	_terminal_at_hand	;wreg free
  4765  010A66                     l10412:
  4766                           
  4767                           ;My_terminal.c: 112: }
  4768                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4769  010A66  D821               	call	PL62	;call to abstracted procedure
  4770  010A68  0EC1               	movlw	low (STR_30+4)
  4771  010A6A  0100               	movlb	0	; () banked
  4772  010A6C  6F62               	movwf	strcmp@s2& (0+255),b
  4773  010A6E  0EFF               	movlw	high (STR_30+4)
  4774  010A70  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4775  010A72  EC3A  F09F         	call	_strcmp	;wreg free
  4776  010A76  5160               	movf	?_strcmp& (0+255),w,b
  4777  010A78  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4778  010A7A  E00B               	bz	l10416
  4779                           
  4780                           ; BSR set to: 0
  4781  010A7C  D816               	call	PL62	;call to abstracted procedure
  4782  010A7E  0E91               	movlw	low STR_117
  4783  010A80  6F62               	movwf	strcmp@s2& (0+255),b
  4784  010A82  0EFF               	movlw	high STR_117
  4785  010A84  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4786  010A86  EC3A  F09F         	call	_strcmp	;wreg free
  4787  010A8A  5160               	movf	?_strcmp& (0+255),w,b
  4788  010A8C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4789  010A8E  A4D8               	btfss	status,2,c
  4790  010A90  0012               	return	
  4791  010A92                     l10416:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4795  010A92  D816               	call	PL148	;call to abstracted procedure
  4796  010A94  0E93               	movlw	low (_now+4)
  4797  010A96  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4798  010A98  0E02               	movlw	high (_now+4)
  4799  010A9A  D817               	call	PL184	;call to abstracted procedure
  4800  010A9C  D80B               	call	PL106	;call to abstracted procedure
  4801  010A9E  ECB1  F094         	call	_atoi	;wreg free
  4802  010AA2  517C               	movf	?_atoi& (0+255),w,b
  4803  010AA4  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4804  010AA6  EF12  F09E         	goto	_terminal_at_hand	;wreg free
  4805  010AAA                     __end_of_terminal_time:
  4806                           	opt stack 0
  4807  010AAA                     PL62:
  4808                           	opt stack 11
  4809  010AAA  C0D5  F060         	movff	terminal_time@op1,strcmp@s1
  4810  010AAE  C0D6  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4811  010AB2  0012               	return	
  4812  010AB4                     __end_ofPL62:
  4813                           	opt stack 0
  4814  010AB4                     PL106:
  4815                           	opt stack 11
  4816  010AB4  6FCF               	movwf	terminal_at_hand@max& (0+255),b
  4817  010AB6  C0D7  F07C         	movff	terminal_time@op2,atoi@s
  4818  010ABA  C0D8  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4819  010ABE  0012               	return	
  4820  010AC0                     __end_ofPL106:
  4821                           	opt stack 0
  4822  010AC0                     PL148:
  4823                           	opt stack 11
  4824  010AC0  C0D1  F0CA         	movff	terminal_time@tx,terminal_at_hand@tx
  4825  010AC4  C0D2  F0CB         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4826  010AC8  0012               	return	
  4827  010ACA                     __end_ofPL148:
  4828                           	opt stack 0
  4829  010ACA                     PL184:
  4830                           	opt stack 11
  4831  010ACA  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4832  010ACC  6BCE               	clrf	terminal_at_hand@min& (0+255),b
  4833  010ACE  0C3B               	retlw	59
  4834  010AD0                     __end_ofPL184:
  4835                           	opt stack 0
  4836  010AD0                     PL220:
  4837                           	opt stack 11
  4838  010AD0  C0D3  F060         	movff	terminal_time@op0,strcmp@s1
  4839  010AD4  C0D4  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4840  010AD8  0012               	return	
  4841  010ADA                     __end_ofPL220:
  4842                           	opt stack 0
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           intcon2	equ	0xFF1
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           indf1	equ	0xFE7
  4854                           postinc1	equ	0xFE6
  4855                           postdec1	equ	0xFE5
  4856                           fsr1h	equ	0xFE2
  4857                           fsr1l	equ	0xFE1
  4858                           indf2	equ	0xFDF
  4859                           postinc2	equ	0xFDE
  4860                           postdec2	equ	0xFDD
  4861                           plusw2	equ	0xFDB
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           status	equ	0xFD8
  4865                           
  4866 ;; *************** function _terminal_at_hand *****************
  4867 ;; Defined at:
  4868 ;;		line 82 in file "../My_library/My_terminal.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  tx              2  106[BANK0 ] PTR struct ringbuf
  4871 ;;		 -> usb_tx(8), 
  4872 ;;  hand            2  108[BANK0 ] PTR unsigned char 
  4873 ;;		 -> now(14), 
  4874 ;;  min             1  110[BANK0 ] unsigned char 
  4875 ;;  max             1  111[BANK0 ] unsigned char 
  4876 ;;  value           1  112[BANK0 ] unsigned char 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;		None               void
  4881 ;; Registers used:
  4882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : F/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4888 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4891 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4892 ;;Total ram usage:        7 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:   16
  4895 ;; This function calls:
  4896 ;;		_RTCC_from_caltime
  4897 ;;		_print_time
  4898 ;;		_ringbuf_put_str
  4899 ;; This function is called by:
  4900 ;;		_terminal_time
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text4
  4905  013C24                     __ptext4:
  4906                           	opt stack 0
  4907  013C24                     _terminal_at_hand:
  4908                           	opt stack 11
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4912                           
  4913                           ;incstack = 0
  4914  013C24  51CE               	movf	terminal_at_hand@min& (0+255),w,b
  4915  013C26  5DD0               	subwf	terminal_at_hand@value& (0+255),w,b
  4916  013C28  E318               	bnc	l10268
  4917                           
  4918                           ; BSR set to: 0
  4919  013C2A  51D0               	movf	terminal_at_hand@value& (0+255),w,b
  4920  013C2C  5DCF               	subwf	terminal_at_hand@max& (0+255),w,b
  4921  013C2E  E315               	bnc	l10268
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;My_terminal.c: 84: *hand = value;
  4925  013C30  C0CC  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4926  013C34  C0CD  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4927  013C38  C0D0  FFDF         	movff	terminal_at_hand@value,indf2
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4931  013C3C  0E8F               	movlw	low _now
  4932  013C3E  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4933  013C40  0E02               	movlw	high _now
  4934  013C42  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4935  013C44  EC9A  F0A1         	call	_RTCC_from_caltime	;wreg free
  4936                           
  4937                           ; BSR set to: 15
  4938                           ;My_terminal.c: 86: time_change_flag = 1;
  4939  013C48  0E01               	movlw	1
  4940  013C4A  0101               	movlb	1	; () banked
  4941  013C4C  6F35               	movwf	_time_change_flag& (0+255),b
  4942                           
  4943                           ; BSR set to: 1
  4944                           ;My_terminal.c: 87: print_time(tx);
  4945  013C4E  C0CA  F0AA         	movff	terminal_at_hand@tx,print_time@tx
  4946  013C52  C0CB  F0AB         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4947  013C56  EF24  F09D         	goto	_print_time	;wreg free
  4948  013C5A                     l10268:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4952  013C5A  C0CA  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4953  013C5E  C0CB  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4954  013C62  0E82               	movlw	low STR_101
  4955  013C64  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4956  013C66  0EFF               	movlw	high STR_101
  4957  013C68  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4958  013C6A  EFD9  F09D         	goto	l9736	;wreg free
  4959  013C6E                     __end_of_terminal_at_hand:
  4960                           	opt stack 0
  4961                           tblptru	equ	0xFF8
  4962                           tblptrh	equ	0xFF7
  4963                           tblptrl	equ	0xFF6
  4964                           tablat	equ	0xFF5
  4965                           prodh	equ	0xFF4
  4966                           prodl	equ	0xFF3
  4967                           intcon	equ	0xFF2
  4968                           intcon2	equ	0xFF1
  4969                           postinc0	equ	0xFEE
  4970                           wreg	equ	0xFE8
  4971                           indf1	equ	0xFE7
  4972                           postinc1	equ	0xFE6
  4973                           postdec1	equ	0xFE5
  4974                           fsr1h	equ	0xFE2
  4975                           fsr1l	equ	0xFE1
  4976                           indf2	equ	0xFDF
  4977                           postinc2	equ	0xFDE
  4978                           postdec2	equ	0xFDD
  4979                           plusw2	equ	0xFDB
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function _print_time *****************
  4985 ;; Defined at:
  4986 ;;		line 68 in file "../My_library/My_terminal.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  tx              2   74[BANK0 ] PTR struct ringbuf
  4989 ;;		 -> usb_tx(8), 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  str            30   76[BANK0 ] unsigned char [30]
  4992 ;; Return value:  Size  Location     Type
  4993 ;;		None               void
  4994 ;; Registers used:
  4995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : E/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5001 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5004 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;Total ram usage:       32 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:   15
  5008 ;; This function calls:
  5009 ;;		_RTCC_from_RTCC
  5010 ;;		_ringbuf_put_str
  5011 ;;		_sprintf
  5012 ;; This function is called by:
  5013 ;;		_terminal_at_hand
  5014 ;;		_terminal_time
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text5
  5019  013A48                     __ptext5:
  5020                           	opt stack 0
  5021  013A48                     _print_time:
  5022                           	opt stack 0
  5023                           
  5024                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5025                           
  5026                           ;incstack = 0
  5027  013A48  ECC0  F09D         	call	PL208	;call to abstracted procedure
  5028  013A4C  EC92  F0A2         	call	_RTCC_from_RTCC	;wreg free
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;My_terminal.c: 70: char str[30];
  5032                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5033                           ;My_terminal.c: 72: now.YY,
  5034                           ;My_terminal.c: 73: now.MM,
  5035                           ;My_terminal.c: 74: now.DD,
  5036                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5037                           ;My_terminal.c: 76: now.hh,
  5038                           ;My_terminal.c: 77: now.mm,
  5039                           ;My_terminal.c: 78: now.ss);
  5040  013A50  0EAC               	movlw	low print_time@str
  5041  013A52  6F83               	movwf	sprintf@sp& (0+255),b
  5042  013A54  6B84               	clrf	(sprintf@sp+1)& (0+255),b
  5043  013A56  0E98               	movlw	low STR_100
  5044  013A58  6F85               	movwf	sprintf@f& (0+255),b
  5045  013A5A  0EFD               	movlw	high STR_100
  5046  013A5C  EC60  F08E         	call	PL138	;call to abstracted procedure
  5047  013A60  0102               	movlb	2	; () banked
  5048  013A62  5196               	movf	(_now+7)& (0+255),w,b
  5049  013A64  0D04               	mullw	4
  5050  013A66  0EA4               	movlw	low _weekday_3char
  5051  013A68  24F3               	addwf	prodl,w,c
  5052  013A6A  0100               	movlb	0	; () banked
  5053  013A6C  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5054  013A6E  0EFB               	movlw	high _weekday_3char
  5055  013A70  20F4               	addwfc	prodh,w,c
  5056  013A72  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5057  013A74  C295  F08F         	movff	_now+6,?_sprintf+12
  5058  013A78  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5059  013A7A  C294  F091         	movff	_now+5,?_sprintf+14
  5060  013A7E  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5061  013A80  C293  F093         	movff	_now+4,?_sprintf+16
  5062  013A84  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5063  013A86  EC00  F080         	call	_sprintf	;wreg free
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5067  013A8A  C0AA  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5068  013A8E  C0AB  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5069  013A92  0EAC               	movlw	low print_time@str
  5070  013A94  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5071  013A96  6B72               	clrf	(ringbuf_put_str@str+1)& (0+255),b
  5072  013A98  EFD9  F09D         	goto	l9736	;wreg free
  5073  013A9C                     __end_of_print_time:
  5074                           	opt stack 0
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           prodh	equ	0xFF4
  5080                           prodl	equ	0xFF3
  5081                           intcon	equ	0xFF2
  5082                           intcon2	equ	0xFF1
  5083                           postinc0	equ	0xFEE
  5084                           wreg	equ	0xFE8
  5085                           indf1	equ	0xFE7
  5086                           postinc1	equ	0xFE6
  5087                           postdec1	equ	0xFE5
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           indf2	equ	0xFDF
  5091                           postinc2	equ	0xFDE
  5092                           postdec2	equ	0xFDD
  5093                           plusw2	equ	0xFDB
  5094                           fsr2h	equ	0xFDA
  5095                           fsr2l	equ	0xFD9
  5096                           status	equ	0xFD8
  5097                           
  5098 ;; *************** function _RTCC_from_caltime *****************
  5099 ;; Defined at:
  5100 ;;		line 205 in file "../My_library/My_RTCC.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  tm              2   47[BANK0 ] PTR struct .
  5103 ;;		 -> now(14), 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : F/0
  5112 ;;		On exit  : F/F
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;Total ram usage:        2 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:   14
  5122 ;; This function calls:
  5123 ;;		_caltime_to_RTCC
  5124 ;;		_caltime_to_epoch
  5125 ;;		_epoch_to_caltime
  5126 ;; This function is called by:
  5127 ;;		_terminal_at_hand
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text6
  5132  014334                     __ptext6:
  5133                           	opt stack 0
  5134  014334                     _RTCC_from_caltime:
  5135                           	opt stack 12
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;My_RTCC.c: 206: caltime_to_epoch(tm);
  5139                           
  5140                           ;incstack = 0
  5141  014334  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5142  014338  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5143  01433C  ECA0  F08A         	call	_caltime_to_epoch	;wreg free
  5144                           
  5145                           ;My_RTCC.c: 207: epoch_to_caltime(tm);
  5146  014340  C08F  F082         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5147  014344  C090  F083         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5148  014348  EC82  F08D         	call	_epoch_to_caltime	;wreg free
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;My_RTCC.c: 208: caltime_to_RTCC(tm);
  5152  01434C  C08F  F065         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5153  014350  C090  F066         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5154  014354  EF77  F096         	goto	_caltime_to_RTCC	;wreg free
  5155  014358                     __end_of_RTCC_from_caltime:
  5156                           	opt stack 0
  5157                           tblptru	equ	0xFF8
  5158                           tblptrh	equ	0xFF7
  5159                           tblptrl	equ	0xFF6
  5160                           tablat	equ	0xFF5
  5161                           prodh	equ	0xFF4
  5162                           prodl	equ	0xFF3
  5163                           intcon	equ	0xFF2
  5164                           intcon2	equ	0xFF1
  5165                           postinc0	equ	0xFEE
  5166                           wreg	equ	0xFE8
  5167                           indf1	equ	0xFE7
  5168                           postinc1	equ	0xFE6
  5169                           postdec1	equ	0xFE5
  5170                           fsr1h	equ	0xFE2
  5171                           fsr1l	equ	0xFE1
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           plusw2	equ	0xFDB
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _strcmp *****************
  5181 ;; Defined at:
  5182 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5185 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5186 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5187 ;;		 -> STR_117(7), STR_116(2), STR_115(7), STR_114(2), 
  5188 ;;		 -> STR_113(5), STR_112(2), STR_111(4), STR_110(2), 
  5189 ;;		 -> STR_109(6), STR_108(2), STR_107(5), STR_106(2), 
  5190 ;;		 -> STR_105(12), STR_104(3), STR_103(2), STR_102(11), 
  5191 ;;		 -> STR_25(2), STR_24(6), STR_21(5), STR_20(11), 
  5192 ;;		 -> STR_19(6), STR_18(1), STR_17(12), STR_16(3), 
  5193 ;;		 -> STR_15(9), STR_14(9), STR_12(2), STR_11(5), 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  r               1    6[BANK0 ] char 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  2    0[BANK0 ] int 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5200 ;; Tracked objects:
  5201 ;;		On entry : F/0
  5202 ;;		On exit  : F/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5207 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5208 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5209 ;;Total ram usage:        7 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:   11
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_terminal_operation
  5216 ;;		_terminal_time
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text7
  5221  013E74                     __ptext7:
  5222                           	opt stack 0
  5223  013E74                     _strcmp:
  5224                           	opt stack 16
  5225                           
  5226                           ; BSR set to: 0
  5227                           
  5228                           ; BSR set to: 15
  5229                           ;incstack = 0
  5230  013E74  D004               	goto	l10036
  5231  013E76                     l10034:
  5232                           
  5233                           ; BSR set to: 0
  5234  013E76  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5235  013E78  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5236  013E7A  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5237  013E7C  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5238  013E7E                     l10036:
  5239                           
  5240                           ; BSR set to: 0
  5241  013E7E  C062  FFF6         	movff	strcmp@s2,tblptrl
  5242  013E82  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5243  013E86                     	if	0	;tblptru may be non-zero
  5244  013E86                     	endif
  5245  013E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5246  013E86  0E00               	movlw	low (__mediumconst shr (0+16))
  5247  013E88  6EF8               	movwf	tblptru,c
  5248  013E8A                     	endif
  5249  013E8A  0008               	tblrd		*
  5250  013E8C  CFF5 F064          	movff	tablat,??_strcmp
  5251  013E90  D80E               	call	PL278	;call to abstracted procedure
  5252  013E92  6F65               	movwf	(??_strcmp+1)& (0+255),b
  5253  013E94  5164               	movf	??_strcmp& (0+255),w,b
  5254  013E96  5D65               	subwf	(??_strcmp+1)& (0+255),w,b
  5255  013E98  6F66               	movwf	strcmp@r& (0+255),b
  5256  013E9A  5166               	movf	strcmp@r& (0+255),w,b
  5257  013E9C  E102               	bnz	l10040
  5258                           
  5259                           ; BSR set to: 0
  5260  013E9E  D807               	call	PL278	;call to abstracted procedure
  5261  013EA0  E1EA               	bnz	l10034
  5262  013EA2                     l10040:
  5263                           
  5264                           ; BSR set to: 0
  5265  013EA2  5166               	movf	strcmp@r& (0+255),w,b
  5266  013EA4  6F60               	movwf	?_strcmp& (0+255),b
  5267  013EA6  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5268  013EA8  BF60               	btfsc	?_strcmp& (0+255),7,b
  5269  013EAA  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5270                           
  5271                           ; BSR set to: 0
  5272  013EAC  0012               	return		;funcret
  5273  013EAE                     __end_of_strcmp:
  5274                           	opt stack 0
  5275  013EAE                     PL278:
  5276                           	opt stack 16
  5277  013EAE  C060  FFD9         	movff	strcmp@s1,fsr2l
  5278  013EB2  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5279  013EB6  50DF               	movf	indf2,w,c
  5280  013EB8  0012               	return	
  5281  013EBA                     __end_ofPL278:
  5282                           	opt stack 0
  5283                           tblptru	equ	0xFF8
  5284                           tblptrh	equ	0xFF7
  5285                           tblptrl	equ	0xFF6
  5286                           tablat	equ	0xFF5
  5287                           prodh	equ	0xFF4
  5288                           prodl	equ	0xFF3
  5289                           intcon	equ	0xFF2
  5290                           intcon2	equ	0xFF1
  5291                           postinc0	equ	0xFEE
  5292                           wreg	equ	0xFE8
  5293                           indf1	equ	0xFE7
  5294                           postinc1	equ	0xFE6
  5295                           postdec1	equ	0xFE5
  5296                           fsr1h	equ	0xFE2
  5297                           fsr1l	equ	0xFE1
  5298                           indf2	equ	0xFDF
  5299                           postinc2	equ	0xFDE
  5300                           postdec2	equ	0xFDD
  5301                           plusw2	equ	0xFDB
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8
  5305                           
  5306 ;; *************** function _atoi *****************
  5307 ;; Defined at:
  5308 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5311 ;;		 -> terminal_task@op2(25), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  a               2   33[BANK0 ] int 
  5314 ;;  sign            1   32[BANK0 ] unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  2   28[BANK0 ] int 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : F/0
  5321 ;;		On exit  : F/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5327 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;Total ram usage:        7 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:   12
  5331 ;; This function calls:
  5332 ;;		___wmul
  5333 ;;		_isdigit
  5334 ;; This function is called by:
  5335 ;;		_terminal_operation
  5336 ;;		_terminal_time
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text8
  5341  012962                     __ptext8:
  5342                           	opt stack 0
  5343  012962                     _atoi:
  5344                           	opt stack 15
  5345                           
  5346                           ; BSR set to: 0
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;incstack = 0
  5350  012962  D002               	goto	l10048
  5351  012964                     l10046:
  5352                           
  5353                           ; BSR set to: 0
  5354  012964  4B7C               	infsnz	atoi@s& (0+255),f,b
  5355  012966  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5356  012968                     l10048:
  5357                           
  5358                           ; BSR set to: 0
  5359  012968  D844               	call	PL128	;call to abstracted procedure
  5360  01296A  0E20               	movlw	32
  5361  01296C  18DE               	xorwf	postinc2,w,c
  5362  01296E  E0FA               	bz	l10046
  5363                           
  5364                           ; BSR set to: 0
  5365  012970  D840               	call	PL128	;call to abstracted procedure
  5366  012972  0E09               	movlw	9
  5367  012974  18DE               	xorwf	postinc2,w,c
  5368  012976  E0F6               	bz	l10046
  5369                           
  5370                           ; BSR set to: 0
  5371  012978  6B81               	clrf	atoi@a& (0+255),b
  5372  01297A  6B82               	clrf	(atoi@a+1)& (0+255),b
  5373  01297C  6B80               	clrf	atoi@sign& (0+255),b
  5374                           
  5375                           ; BSR set to: 0
  5376  01297E  D839               	call	PL128	;call to abstracted procedure
  5377  012980  0E2D               	movlw	45
  5378  012982  18DE               	xorwf	postinc2,w,c
  5379  012984  E102               	bnz	l10056
  5380                           
  5381                           ; BSR set to: 0
  5382  012986  2B80               	incf	atoi@sign& (0+255),f,b
  5383  012988  D004               	goto	l10058
  5384  01298A                     l10056:
  5385                           
  5386                           ; BSR set to: 0
  5387  01298A  D833               	call	PL128	;call to abstracted procedure
  5388  01298C  0E2B               	movlw	43
  5389  01298E  18DE               	xorwf	postinc2,w,c
  5390  012990  E117               	bnz	l10064
  5391  012992                     l10058:
  5392                           
  5393                           ; BSR set to: 0
  5394  012992  4B7C               	infsnz	atoi@s& (0+255),f,b
  5395  012994  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5396  012996  D014               	goto	l10064
  5397  012998                     l10060:
  5398                           
  5399                           ; BSR set to: 0
  5400  012998  C081  F076         	movff	atoi@a,___wmul@multiplier
  5401  01299C  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5402  0129A0  ECA0  F081         	call	PL352	;call to abstracted procedure
  5403  0129A4  EC87  F0A1         	call	___wmul	;wreg free
  5404  0129A8  D824               	call	PL128	;call to abstracted procedure
  5405  0129AA  50DF               	movf	indf2,w,c
  5406  0129AC  2776               	addwf	?___wmul& (0+255),f,b
  5407  0129AE  0E00               	movlw	0
  5408  0129B0  2377               	addwfc	(?___wmul+1)& (0+255),f,b
  5409  0129B2  0ED0               	movlw	208
  5410  0129B4  2576               	addwf	?___wmul& (0+255),w,b
  5411  0129B6  6F81               	movwf	atoi@a& (0+255),b
  5412  0129B8  0EFF               	movlw	255
  5413  0129BA  2177               	addwfc	(?___wmul+1)& (0+255),w,b
  5414  0129BC  6F82               	movwf	(atoi@a+1)& (0+255),b
  5415  0129BE  D7E9               	goto	l10058
  5416  0129C0                     l10064:
  5417                           
  5418                           ; BSR set to: 0
  5419  0129C0  D818               	call	PL128	;call to abstracted procedure
  5420  0129C2  50DF               	movf	indf2,w,c
  5421  0129C4  EC51  F0A2         	call	_isdigit
  5422  0129C8  E2E7               	bc	l10060
  5423                           
  5424                           ; BSR set to: 0
  5425  0129CA  5180               	movf	atoi@sign& (0+255),w,b
  5426  0129CC  E00D               	bz	l2156
  5427                           
  5428                           ; BSR set to: 0
  5429  0129CE  C081  F07E         	movff	atoi@a,??_atoi
  5430  0129D2  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5431  0129D6  1F7E               	comf	??_atoi& (0+255),f,b
  5432  0129D8  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5433  0129DA  4B7E               	infsnz	??_atoi& (0+255),f,b
  5434  0129DC  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5435  0129DE  C07E  F07C         	movff	??_atoi,?_atoi
  5436  0129E2  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5437  0129E6  0012               	return	
  5438  0129E8                     l2156:
  5439                           
  5440                           ; BSR set to: 0
  5441  0129E8  C081  F07C         	movff	atoi@a,?_atoi
  5442  0129EC  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5443                           
  5444                           ; BSR set to: 0
  5445  0129F0  0012               	return		;funcret
  5446  0129F2                     __end_of_atoi:
  5447                           	opt stack 0
  5448  0129F2                     PL128:
  5449                           	opt stack 15
  5450  0129F2  C07C  FFD9         	movff	atoi@s,fsr2l
  5451  0129F6  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5452  0129FA  0012               	return	
  5453  0129FC                     __end_ofPL128:
  5454                           	opt stack 0
  5455                           tblptru	equ	0xFF8
  5456                           tblptrh	equ	0xFF7
  5457                           tblptrl	equ	0xFF6
  5458                           tablat	equ	0xFF5
  5459                           prodh	equ	0xFF4
  5460                           prodl	equ	0xFF3
  5461                           intcon	equ	0xFF2
  5462                           intcon2	equ	0xFF1
  5463                           postinc0	equ	0xFEE
  5464                           wreg	equ	0xFE8
  5465                           indf1	equ	0xFE7
  5466                           postinc1	equ	0xFE6
  5467                           postdec1	equ	0xFE5
  5468                           fsr1h	equ	0xFE2
  5469                           fsr1l	equ	0xFE1
  5470                           indf2	equ	0xFDF
  5471                           postinc2	equ	0xFDE
  5472                           postdec2	equ	0xFDD
  5473                           plusw2	equ	0xFDB
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _bootload *****************
  5479 ;; Defined at:
  5480 ;;		line 191 in file "ChargeStation_task.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;		None               void
  5487 ;; Registers used:
  5488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : E/1
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:   15
  5501 ;; This function calls:
  5502 ;;		_ST7032_clear
  5503 ;;		_ST7032_cursor
  5504 ;;		_ST7032_puts
  5505 ;; This function is called by:
  5506 ;;		_terminal_operation
  5507 ;;		_main
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text9
  5512  014118                     __ptext9:
  5513                           	opt stack 0
  5514  014118                     _bootload:
  5515                           	opt stack 13
  5516                           
  5517                           ;ChargeStation_task.c: 192: ST7032_clear();
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;incstack = 0
  5521  014118  ECD0  F0A2         	call	_ST7032_clear	;wreg free
  5522                           
  5523                           ;ChargeStation_task.c: 193: ST7032_cursor(0, 0);
  5524  01411C  0E00               	movlw	0
  5525  01411E  6B71               	clrf	ST7032_cursor@row& (0+255),b
  5526  014120  EC11  F0A2         	call	_ST7032_cursor
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;ChargeStation_task.c: 194: ST7032_puts("PIC18F27J53");
  5530  014124  0E25               	movlw	low STR_9
  5531  014126  6F70               	movwf	ST7032_puts@s& (0+255),b
  5532  014128  0EFF               	movlw	high STR_9
  5533  01412A  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5534  01412C  ECC0  F09F         	call	_ST7032_puts	;wreg free
  5535                           
  5536                           ;ChargeStation_task.c: 195: ST7032_cursor(0, 1);
  5537  014130  EC0D  F083         	call	PL176	;call to abstracted procedure
  5538  014134  EC11  F0A2         	call	_ST7032_cursor
  5539                           
  5540                           ;ChargeStation_task.c: 196: ST7032_puts("Bootloader mode");
  5541  014138  0EC3               	movlw	low STR_10
  5542  01413A  6F70               	movwf	ST7032_puts@s& (0+255),b
  5543  01413C  0EFE               	movlw	high STR_10
  5544  01413E  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5545  014140  ECC0  F09F         	call	_ST7032_puts	;wreg free
  5546  014144  EF0E F000          	goto	28	;# 
  5547  014148  0012               	return		;funcret
  5548  01414A                     __end_of_bootload:
  5549                           	opt stack 0
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           prodh	equ	0xFF4
  5555                           prodl	equ	0xFF3
  5556                           intcon	equ	0xFF2
  5557                           intcon2	equ	0xFF1
  5558                           postinc0	equ	0xFEE
  5559                           wreg	equ	0xFE8
  5560                           indf1	equ	0xFE7
  5561                           postinc1	equ	0xFE6
  5562                           postdec1	equ	0xFE5
  5563                           fsr1h	equ	0xFE2
  5564                           fsr1l	equ	0xFE1
  5565                           indf2	equ	0xFDF
  5566                           postinc2	equ	0xFDE
  5567                           postdec2	equ	0xFDD
  5568                           plusw2	equ	0xFDB
  5569                           fsr2h	equ	0xFDA
  5570                           fsr2l	equ	0xFD9
  5571                           status	equ	0xFD8
  5572                           
  5573 ;; *************** function _ringbuf_put_num *****************
  5574 ;; Defined at:
  5575 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5578 ;;		 -> usb_tx(8), 
  5579 ;;  value           2   37[BANK0 ] const unsigned int 
  5580 ;;  digits          1   39[BANK0 ] unsigned char 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  i               1   40[BANK0 ] unsigned char 
  5583 ;;  temp            2   41[BANK0 ] unsigned int 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : F/0
  5590 ;;		On exit  : F/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5593 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5594 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5596 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5597 ;;Total ram usage:        8 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:   13
  5600 ;; This function calls:
  5601 ;;		___lwdiv
  5602 ;;		___lwmod
  5603 ;;		_ringbuf_put
  5604 ;; This function is called by:
  5605 ;;		_terminal_task
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text10
  5610  01380C                     __ptext10:
  5611                           	opt stack 0
  5612  01380C                     _ringbuf_put_num:
  5613                           	opt stack 16
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;My_ringbuf.c: 29: while (digits--) {
  5617                           
  5618                           ;incstack = 0
  5619  01380C  D02D               	goto	l11420
  5620  01380E                     l821:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5624  01380E  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5625  013812  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5626                           
  5627                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5628  013816  6B88               	clrf	ringbuf_put_num@i& (0+255),b
  5629  013818  D00E               	goto	l11414
  5630  01381A                     l11410:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;My_ringbuf.c: 32: temp /= 10;
  5634  01381A  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5635  01381E  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5636  013822  6B7F               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5637  013824  0E0A               	movlw	10
  5638  013826  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5639  013828  ECA6  F09E         	call	___lwdiv	;wreg free
  5640  01382C  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5641  013830  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5642                           
  5643                           ; BSR set to: 0
  5644  013834  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5645  013836                     l11414:
  5646                           
  5647                           ; BSR set to: 0
  5648  013836  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5649  013838  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5650  01383A  E3EF               	bnc	l11410
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;My_ringbuf.c: 33: }
  5654                           ;My_ringbuf.c: 34: temp %= 10;
  5655  01383C  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5656  013840  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5657  013844  6B63               	clrf	(___lwmod@divisor+1)& (0+255),b
  5658  013846  0E0A               	movlw	10
  5659  013848  6F62               	movwf	___lwmod@divisor& (0+255),b
  5660  01384A  ECFF  F09F         	call	___lwmod	;wreg free
  5661  01384E  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5662  013852  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5666  013856  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5667  01385A  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5668  01385E  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5669  013860  0F30               	addlw	48
  5670  013862  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5671  013864  ECC5  F093         	call	_ringbuf_put	;wreg free
  5672  013868                     l11420:
  5673                           
  5674                           ; BSR set to: 0
  5675  013868  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5676  01386A  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5677  01386C  E1D0               	bnz	l821
  5678                           
  5679                           ; BSR set to: 0
  5680  01386E  0012               	return		;funcret
  5681  013870                     __end_of_ringbuf_put_num:
  5682                           	opt stack 0
  5683                           tblptru	equ	0xFF8
  5684                           tblptrh	equ	0xFF7
  5685                           tblptrl	equ	0xFF6
  5686                           tablat	equ	0xFF5
  5687                           prodh	equ	0xFF4
  5688                           prodl	equ	0xFF3
  5689                           intcon	equ	0xFF2
  5690                           intcon2	equ	0xFF1
  5691                           postinc0	equ	0xFEE
  5692                           wreg	equ	0xFE8
  5693                           indf1	equ	0xFE7
  5694                           postinc1	equ	0xFE6
  5695                           postdec1	equ	0xFE5
  5696                           fsr1h	equ	0xFE2
  5697                           fsr1l	equ	0xFE1
  5698                           indf2	equ	0xFDF
  5699                           postinc2	equ	0xFDE
  5700                           postdec2	equ	0xFDD
  5701                           plusw2	equ	0xFDB
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _ringbuf_delete *****************
  5707 ;; Defined at:
  5708 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5711 ;;		 -> terminal_task@command(8), 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;		None               void
  5716 ;; Registers used:
  5717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : F/0
  5720 ;;		On exit  : F/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5727 ;;Total ram usage:        2 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:   11
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_terminal_task
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text11
  5738  014358                     __ptext11:
  5739                           	opt stack 0
  5740  014358                     _ringbuf_delete:
  5741                           	opt stack 18
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;incstack = 0
  5748  014358  EE20 F006          	lfsr	2,6
  5749  01435C  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5750  01435E  26D9               	addwf	fsr2l,f,c
  5751  014360  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5752  014362  22DA               	addwfc	fsr2h,f,c
  5753  014364  EE10 F004          	lfsr	1,4
  5754  014368  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5755  01436A  26E1               	addwf	fsr1l,f,c
  5756  01436C  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5757  01436E  22E2               	addwfc	fsr1h,f,c
  5758  014370  CFDE FFE6          	movff	postinc2,postinc1
  5759  014374  CFDD FFE5          	movff	postdec2,postdec1
  5760                           
  5761                           ; BSR set to: 0
  5762  014378  0012               	return		;funcret
  5763  01437A                     __end_of_ringbuf_delete:
  5764                           	opt stack 0
  5765                           tblptru	equ	0xFF8
  5766                           tblptrh	equ	0xFF7
  5767                           tblptrl	equ	0xFF6
  5768                           tablat	equ	0xFF5
  5769                           prodh	equ	0xFF4
  5770                           prodl	equ	0xFF3
  5771                           intcon	equ	0xFF2
  5772                           intcon2	equ	0xFF1
  5773                           postinc0	equ	0xFEE
  5774                           wreg	equ	0xFE8
  5775                           indf1	equ	0xFE7
  5776                           postinc1	equ	0xFE6
  5777                           postdec1	equ	0xFE5
  5778                           fsr1h	equ	0xFE2
  5779                           fsr1l	equ	0xFE1
  5780                           indf2	equ	0xFDF
  5781                           postinc2	equ	0xFDE
  5782                           postdec2	equ	0xFDD
  5783                           plusw2	equ	0xFDB
  5784                           fsr2h	equ	0xFDA
  5785                           fsr2l	equ	0xFD9
  5786                           status	equ	0xFD8
  5787                           
  5788 ;; *************** function _ringbuf_backspace *****************
  5789 ;; Defined at:
  5790 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5793 ;;		 -> terminal_task@command(8), 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;		None               void
  5798 ;; Registers used:
  5799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : F/0
  5802 ;;		On exit  : F/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5807 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;Total ram usage:        6 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:   12
  5812 ;; This function calls:
  5813 ;;		_ringbuf_num
  5814 ;; This function is called by:
  5815 ;;		_terminal_task
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text12
  5820  0138D2                     __ptext12:
  5821                           	opt stack 0
  5822  0138D2                     _ringbuf_backspace:
  5823                           	opt stack 17
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;incstack = 0
  5830  0138D2  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5831  0138D6  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5832  0138DA  ECDE  F097         	call	_ringbuf_num	;wreg free
  5833  0138DE  5160               	movf	?_ringbuf_num& (0+255),w,b
  5834  0138E0  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5835  0138E2  B4D8               	btfsc	status,2,c
  5836  0138E4  0012               	return	
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5840  0138E6  D81E               	call	PL166	;call to abstracted procedure
  5841  0138E8  50DE               	movf	postinc2,w,c
  5842  0138EA  10DE               	iorwf	postinc2,w,c
  5843  0138EC  E005               	bz	l11448
  5844                           
  5845                           ; BSR set to: 0
  5846  0138EE  D81A               	call	PL166	;call to abstracted procedure
  5847  0138F0  06DE               	decf	postinc2,f,c
  5848  0138F2  0E00               	movlw	0
  5849  0138F4  5ADD               	subwfb	postdec2,f,c
  5850  0138F6  0C00               	retlw	0
  5851  0138F8                     l11448:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5855  0138F8  696A               	setf	??_ringbuf_backspace& (0+255),b
  5856  0138FA  696B               	setf	(??_ringbuf_backspace+1)& (0+255),b
  5857  0138FC  EE20 F002          	lfsr	2,2
  5858  013900  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5859  013902  26D9               	addwf	fsr2l,f,c
  5860  013904  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5861  013906  22DA               	addwfc	fsr2h,f,c
  5862  013908  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5863  01390C  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5864  013910  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5865  013912  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5866  013914  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5867  013916  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5868  013918  D805               	call	PL166	;call to abstracted procedure
  5869  01391A  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5870  01391E  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5871                           
  5872                           ; BSR set to: 0
  5873  013922  0012               	return		;funcret
  5874  013924                     __end_of_ringbuf_backspace:
  5875                           	opt stack 0
  5876  013924                     PL166:
  5877                           	opt stack 17
  5878  013924  EE20 F004          	lfsr	2,4
  5879  013928  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5880  01392A  26D9               	addwf	fsr2l,f,c
  5881  01392C  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5882  01392E  22DA               	addwfc	fsr2h,f,c
  5883  013930  0012               	return	
  5884  013932                     __end_ofPL166:
  5885                           	opt stack 0
  5886                           tblptru	equ	0xFF8
  5887                           tblptrh	equ	0xFF7
  5888                           tblptrl	equ	0xFF6
  5889                           tablat	equ	0xFF5
  5890                           prodh	equ	0xFF4
  5891                           prodl	equ	0xFF3
  5892                           intcon	equ	0xFF2
  5893                           intcon2	equ	0xFF1
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           indf1	equ	0xFE7
  5897                           postinc1	equ	0xFE6
  5898                           postdec1	equ	0xFE5
  5899                           fsr1h	equ	0xFE2
  5900                           fsr1l	equ	0xFE1
  5901                           indf2	equ	0xFDF
  5902                           postinc2	equ	0xFDE
  5903                           postdec2	equ	0xFDD
  5904                           plusw2	equ	0xFDB
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           
  5909 ;; *************** function _software_init *****************
  5910 ;; Defined at:
  5911 ;;		line 108 in file "main.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  i               1   36[BANK0 ] unsigned char 
  5916 ;; Return value:  Size  Location     Type
  5917 ;;		None               void
  5918 ;; Registers used:
  5919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : F/0
  5922 ;;		On exit  : F/1
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5929 ;;Total ram usage:        1 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:   14
  5932 ;; This function calls:
  5933 ;;		_LED_output
  5934 ;;		_OUT
  5935 ;;		_ctmu_set_ratio
  5936 ;;		_display
  5937 ;; This function is called by:
  5938 ;;		_main
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text13
  5943  013932                     __ptext13:
  5944                           	opt stack 0
  5945  013932                     _software_init:
  5946                           	opt stack 16
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;main.c: 110: ctmu_ratio = 90;
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;incstack = 0
  5953  013932  0E5A               	movlw	90
  5954  013934  6FEB               	movwf	_ctmu_ratio& (0+255),b
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;main.c: 111: ctmu_set_ratio(ctmu_ratio);
  5958  013936  51EB               	movf	_ctmu_ratio& (0+255),w,b
  5959  013938  EC25  F093         	call	_ctmu_set_ratio
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;main.c: 114: display(LOGO, "Charge Station", "Made by KERI");
  5963  01393C  0EE2               	movlw	low STR_7
  5964  01393E  6F60               	movwf	display@str0& (0+255),b
  5965  013940  0EFE               	movlw	high STR_7
  5966  013942  6F61               	movwf	(display@str0+1)& (0+255),b
  5967  013944  0EFF               	movlw	low STR_35
  5968  013946  6F62               	movwf	display@str1& (0+255),b
  5969  013948  0EFE               	movlw	high STR_35
  5970  01394A  6F63               	movwf	(display@str1+1)& (0+255),b
  5971  01394C  0E00               	movlw	0
  5972  01394E  EC5C  F090         	call	_display
  5973                           
  5974                           ; BSR set to: 1
  5975                           ;main.c: 117: for (uint8_t i = 0; i < 3; i++) {
  5976  013952  0100               	movlb	0	; () banked
  5977  013954  6B84               	clrf	software_init@i& (0+255),b
  5978  013956                     l11604:
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;main.c: 118: OUT(i, 0);
  5982  013956  6B60               	clrf	OUT@value& (0+255),b
  5983  013958  5184               	movf	software_init@i& (0+255),w,b
  5984  01395A  EC81  F09E         	call	_OUT
  5985                           
  5986                           ;main.c: 119: LED_output(i, 0);
  5987  01395E  0100               	movlb	0	; () banked
  5988  013960  6B60               	clrf	LED_output@value& (0+255),b
  5989  013962  5184               	movf	software_init@i& (0+255),w,b
  5990  013964  EC37  F09E         	call	_LED_output
  5991                           
  5992                           ;main.c: 120: port[i].cut_cnt = 0;
  5993  013968  0100               	movlb	0	; () banked
  5994  01396A  5184               	movf	software_init@i& (0+255),w,b
  5995  01396C  ECCC  F092         	call	PL52	;call to abstracted procedure
  5996  013970  6ADE               	clrf	postinc2,c
  5997  013972  6ADD               	clrf	postdec2,c
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;main.c: 121: port[i].flag.auto_cut_ON = 1;
  6001  013974  5184               	movf	software_init@i& (0+255),w,b
  6002  013976  ECEE  F08C         	call	PL4	;call to abstracted procedure
  6003  01397A  80DF               	bsf	indf2,0,c
  6004                           
  6005                           ; BSR set to: 1
  6006                           ;main.c: 122: port[i].flag.led_indicator_ON = 1;
  6007  01397C  5184               	movf	software_init@i& (0+255),w,b
  6008  01397E  ECEE  F08C         	call	PL4	;call to abstracted procedure
  6009  013982  82DF               	bsf	indf2,1,c
  6010                           
  6011                           ; BSR set to: 1
  6012  013984  2B84               	incf	software_init@i& (0+255),f,b
  6013                           
  6014                           ; BSR set to: 0
  6015  013986  0E02               	movlw	2
  6016  013988  6584               	cpfsgt	software_init@i& (0+255),b
  6017  01398A  D7E5               	goto	l11604
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;main.c: 123: }
  6021                           ;main.c: 126: settings_flag = 0;
  6022  01398C  0101               	movlb	1	; () banked
  6023  01398E  6B31               	clrf	_settings_flag& (0+255),b
  6024                           
  6025                           ; BSR set to: 1
  6026  013990  0012               	return		;funcret
  6027  013992                     __end_of_software_init:
  6028                           	opt stack 0
  6029                           tblptru	equ	0xFF8
  6030                           tblptrh	equ	0xFF7
  6031                           tblptrl	equ	0xFF6
  6032                           tablat	equ	0xFF5
  6033                           prodh	equ	0xFF4
  6034                           prodl	equ	0xFF3
  6035                           intcon	equ	0xFF2
  6036                           intcon2	equ	0xFF1
  6037                           postinc0	equ	0xFEE
  6038                           wreg	equ	0xFE8
  6039                           indf1	equ	0xFE7
  6040                           postinc1	equ	0xFE6
  6041                           postdec1	equ	0xFE5
  6042                           fsr1h	equ	0xFE2
  6043                           fsr1l	equ	0xFE1
  6044                           indf2	equ	0xFDF
  6045                           postinc2	equ	0xFDE
  6046                           postdec2	equ	0xFDD
  6047                           plusw2	equ	0xFDB
  6048                           fsr2h	equ	0xFDA
  6049                           fsr2l	equ	0xFD9
  6050                           status	equ	0xFD8
  6051                           
  6052 ;; *************** function _ctmu_set_ratio *****************
  6053 ;; Defined at:
  6054 ;;		line 14 in file "ctmu.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  percentage      1    wreg     unsigned char 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  percentage      1   35[BANK0 ] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;		None               void
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : F/0
  6065 ;;		On exit  : F/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6072 ;;Total ram usage:        1 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:   13
  6075 ;; This function calls:
  6076 ;;		_CTMU_read
  6077 ;;		___lwdiv
  6078 ;;		___wmul
  6079 ;; This function is called by:
  6080 ;;		_terminal_operation
  6081 ;;		_software_init
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text14
  6086  01264A                     __ptext14:
  6087                           	opt stack 0
  6088  01264A                     _ctmu_set_ratio:
  6089                           	opt stack 15
  6090                           
  6091                           ; BSR set to: 1
  6092                           ;incstack = 0
  6093                           ;ctmu_set_ratio@percentage stored from wreg
  6094  01264A  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6095                           
  6096                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6097  01264C  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6098  012650  0100               	movlb	0	; () banked
  6099  012652  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6100  012654  0E00               	movlw	0
  6101  012656  ECBF  F096         	call	_CTMU_read
  6102  01265A  D842               	call	PL212	;call to abstracted procedure
  6103  01265C  EC87  F0A1         	call	___wmul	;wreg free
  6104  012660  D837               	call	PL80	;call to abstracted procedure
  6105  012662  ECA6  F09E         	call	___lwdiv	;wreg free
  6106  012666  C07C  F141         	movff	?___lwdiv,_port+4
  6107  01266A  C07D  F142         	movff	?___lwdiv+1,_port+5
  6108                           
  6109                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6110  01266E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6111  012672  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6112  012674  0E01               	movlw	1
  6113  012676  ECBF  F096         	call	_CTMU_read
  6114  01267A  D832               	call	PL212	;call to abstracted procedure
  6115  01267C  EC87  F0A1         	call	___wmul	;wreg free
  6116  012680  D827               	call	PL80	;call to abstracted procedure
  6117  012682  ECA6  F09E         	call	___lwdiv	;wreg free
  6118  012686  C07C  F158         	movff	?___lwdiv,_port+27
  6119  01268A  C07D  F159         	movff	?___lwdiv+1,_port+28
  6120                           
  6121                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6122  01268E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6123  012692  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6124  012694  0E02               	movlw	2
  6125  012696  ECBF  F096         	call	_CTMU_read
  6126  01269A  D822               	call	PL212	;call to abstracted procedure
  6127  01269C  EC87  F0A1         	call	___wmul	;wreg free
  6128  0126A0  D817               	call	PL80	;call to abstracted procedure
  6129  0126A2  ECA6  F09E         	call	___lwdiv	;wreg free
  6130  0126A6  C07C  F16F         	movff	?___lwdiv,_port+50
  6131  0126AA  C07D  F170         	movff	?___lwdiv+1,_port+51
  6132                           
  6133                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6134  0126AE  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6135  0126B2  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6136  0126B4  0E03               	movlw	3
  6137  0126B6  ECBF  F096         	call	_CTMU_read
  6138  0126BA  D812               	call	PL212	;call to abstracted procedure
  6139  0126BC  EC87  F0A1         	call	___wmul	;wreg free
  6140  0126C0  D807               	call	PL80	;call to abstracted procedure
  6141  0126C2  ECA6  F09E         	call	___lwdiv	;wreg free
  6142  0126C6  C07C  F11B         	movff	?___lwdiv,_ctmu_value_m
  6143  0126CA  C07D  F11C         	movff	?___lwdiv+1,_ctmu_value_m+1
  6144                           
  6145                           ; BSR set to: 0
  6146  0126CE  0012               	return		;funcret
  6147  0126D0                     __end_of_ctmu_set_ratio:
  6148                           	opt stack 0
  6149  0126D0                     PL80:
  6150                           	opt stack 15
  6151  0126D0  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6152  0126D4  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6153  0126D8  6B7F               	clrf	(___lwdiv@divisor+1)& (0+255),b
  6154  0126DA  0E64               	movlw	100
  6155  0126DC  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6156  0126DE  0C64               	retlw	100
  6157  0126E0                     __end_ofPL80:
  6158                           	opt stack 0
  6159  0126E0                     PL212:
  6160                           	opt stack 15
  6161  0126E0  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6162  0126E4  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6163  0126E8  0012               	return	
  6164  0126EA                     __end_ofPL212:
  6165                           	opt stack 0
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           intcon	equ	0xFF2
  6173                           intcon2	equ	0xFF1
  6174                           postinc0	equ	0xFEE
  6175                           wreg	equ	0xFE8
  6176                           indf1	equ	0xFE7
  6177                           postinc1	equ	0xFE6
  6178                           postdec1	equ	0xFE5
  6179                           fsr1h	equ	0xFE2
  6180                           fsr1l	equ	0xFE1
  6181                           indf2	equ	0xFDF
  6182                           postinc2	equ	0xFDE
  6183                           postdec2	equ	0xFDD
  6184                           plusw2	equ	0xFDB
  6185                           fsr2h	equ	0xFDA
  6186                           fsr2l	equ	0xFD9
  6187                           status	equ	0xFD8
  6188                           
  6189 ;; *************** function _sleep_task *****************
  6190 ;; Defined at:
  6191 ;;		line 164 in file "ChargeStation_task.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  i               1   21[BANK0 ] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;		None               void
  6198 ;; Registers used:
  6199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : F/1
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6208 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6209 ;;Total ram usage:        1 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:   15
  6212 ;; This function calls:
  6213 ;;		_ADC
  6214 ;;		_LED_output
  6215 ;;		_OUT
  6216 ;;		_ST7032_clear
  6217 ;;		_ST7032_cursor
  6218 ;;		_ST7032_puts
  6219 ;;		_display
  6220 ;; This function is called by:
  6221 ;;		_main
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text15
  6226  01282A                     __ptext15:
  6227                           	opt stack 0
  6228  01282A                     _sleep_task:
  6229                           	opt stack 15
  6230                           
  6231                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6232                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;incstack = 0
  6236  01282A  0E0C               	movlw	12
  6237  01282C  EC20  F0A1         	call	_ADC
  6238  012830  0E08               	movlw	8
  6239  012832  0100               	movlb	0	; () banked
  6240  012834  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6241  012836  E243               	bc	l11558
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6245  012838  0E01               	movlw	1
  6246  01283A  0101               	movlb	1	; () banked
  6247  01283C  6F3B               	movwf	sleep_task@sleep_flag& (0+255),b
  6248                           
  6249                           ; BSR set to: 1
  6250                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6251  01283E  9EF2               	bcf	intcon,7,c	;volatile
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6255  012840  0100               	movlb	0	; () banked
  6256  012842  6B75               	clrf	sleep_task@i& (0+255),b
  6257  012844                     l11540:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6261  012844  6B60               	clrf	OUT@value& (0+255),b
  6262  012846  5175               	movf	sleep_task@i& (0+255),w,b
  6263  012848  EC81  F09E         	call	_OUT
  6264                           
  6265                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6266  01284C  0100               	movlb	0	; () banked
  6267  01284E  6B60               	clrf	LED_output@value& (0+255),b
  6268  012850  5175               	movf	sleep_task@i& (0+255),w,b
  6269  012852  EC37  F09E         	call	_LED_output
  6270  012856  0100               	movlb	0	; () banked
  6271  012858  2B75               	incf	sleep_task@i& (0+255),f,b
  6272                           
  6273                           ; BSR set to: 0
  6274  01285A  0E02               	movlw	2
  6275  01285C  6575               	cpfsgt	sleep_task@i& (0+255),b
  6276  01285E  D7F2               	goto	l11540
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;ChargeStation_task.c: 172: }
  6280                           ;ChargeStation_task.c: 173: ST7032_clear();
  6281  012860  ECD0  F0A2         	call	_ST7032_clear	;wreg free
  6282                           
  6283                           ;ChargeStation_task.c: 174: ST7032_cursor(0, 0);
  6284  012864  0E00               	movlw	0
  6285  012866  6B71               	clrf	ST7032_cursor@row& (0+255),b
  6286  012868  EC11  F0A2         	call	_ST7032_cursor
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;ChargeStation_task.c: 175: ST7032_puts("Charge Station 6");
  6290  01286C  0E92               	movlw	low STR_5
  6291  01286E  6F70               	movwf	ST7032_puts@s& (0+255),b
  6292  012870  0EFE               	movlw	high STR_5
  6293  012872  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6294  012874  ECC0  F09F         	call	_ST7032_puts	;wreg free
  6295                           
  6296                           ;ChargeStation_task.c: 176: ST7032_cursor(0, 1);
  6297  012878  EC0D  F083         	call	PL176	;call to abstracted procedure
  6298  01287C  EC11  F0A2         	call	_ST7032_cursor
  6299                           
  6300                           ;ChargeStation_task.c: 177: ST7032_puts("SLEEPING NOW");
  6301  012880  0E0C               	movlw	low STR_6
  6302  012882  6F70               	movwf	ST7032_puts@s& (0+255),b
  6303  012884  0EFF               	movlw	high STR_6
  6304  012886  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6305  012888  ECC0  F09F         	call	_ST7032_puts	;wreg free
  6306  01288C  D018               	goto	l11558
  6307  01288E                     l11552:
  6308                           
  6309                           ; BSR set to: 1
  6310                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6311  01288E  0E0C               	movlw	12
  6312  012890  EC20  F0A1         	call	_ADC
  6313  012894  0100               	movlb	0	; () banked
  6314  012896  0560               	decf	?_ADC& (0+255),w,b
  6315  012898  0E08               	movlw	8
  6316  01289A  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6317  01289C  E30E               	bnc	l144
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6321  01289E  0101               	movlb	1	; () banked
  6322  0128A0  6B3B               	clrf	sleep_task@sleep_flag& (0+255),b
  6323                           
  6324                           ; BSR set to: 1
  6325                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6326  0128A2  0EE2               	movlw	low STR_7
  6327  0128A4  0100               	movlb	0	; () banked
  6328  0128A6  6F60               	movwf	display@str0& (0+255),b
  6329  0128A8  0EFE               	movlw	high STR_7
  6330  0128AA  6F61               	movwf	(display@str0+1)& (0+255),b
  6331  0128AC  0EF1               	movlw	low STR_8
  6332  0128AE  6F62               	movwf	display@str1& (0+255),b
  6333  0128B0  0EFE               	movlw	high STR_8
  6334  0128B2  6F63               	movwf	(display@str1+1)& (0+255),b
  6335  0128B4  0E00               	movlw	0
  6336  0128B6  EF5C  F090         	goto	_display
  6337  0128BA                     l144:
  6338                           
  6339                           ; BSR set to: 0
  6340  0128BA  0003               	sleep		;# 
  6341                           
  6342                           ;ChargeStation_task.c: 186: __nop();
  6343  0128BC  F000               	nop	
  6344  0128BE                     l11558:
  6345  0128BE  0101               	movlb	1	; () banked
  6346  0128C0  513B               	movf	sleep_task@sleep_flag& (0+255),w,b
  6347  0128C2  E1E5               	bnz	l11552
  6348                           
  6349                           ; BSR set to: 1
  6350  0128C4  0012               	return		;funcret
  6351  0128C6                     __end_of_sleep_task:
  6352                           	opt stack 0
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           intcon	equ	0xFF2
  6360                           intcon2	equ	0xFF1
  6361                           postinc0	equ	0xFEE
  6362                           wreg	equ	0xFE8
  6363                           indf1	equ	0xFE7
  6364                           postinc1	equ	0xFE6
  6365                           postdec1	equ	0xFE5
  6366                           fsr1h	equ	0xFE2
  6367                           fsr1l	equ	0xFE1
  6368                           indf2	equ	0xFDF
  6369                           postinc2	equ	0xFDE
  6370                           postdec2	equ	0xFDD
  6371                           plusw2	equ	0xFDB
  6372                           fsr2h	equ	0xFDA
  6373                           fsr2l	equ	0xFD9
  6374                           status	equ	0xFD8
  6375                           
  6376 ;; *************** function _normal_task *****************
  6377 ;; Defined at:
  6378 ;;		line 121 in file "ChargeStation_task.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;		None               void
  6385 ;; Registers used:
  6386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:   18
  6399 ;; This function calls:
  6400 ;;		_Auto_cut
  6401 ;;		_data_out
  6402 ;;		_display
  6403 ;;		_display_LCD
  6404 ;;		_integrate_current
  6405 ;;		_integrate_time
  6406 ;;		_port_button_task
  6407 ;;		_settings_task
  6408 ;; This function is called by:
  6409 ;;		_main
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text16
  6414  0131EC                     __ptext16:
  6415                           	opt stack 0
  6416  0131EC                     _normal_task:
  6417                           	opt stack 12
  6418                           
  6419                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6420                           
  6421                           ; BSR set to: 1
  6422                           ;incstack = 0
  6423  0131EC  0101               	movlb	1	; () banked
  6424  0131EE  5131               	movf	_settings_flag& (0+255),w,b
  6425  0131F0  E003               	bz	l124
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;ChargeStation_task.c: 124: settings_task();
  6429  0131F2  EC59  F089         	call	_settings_task	;wreg free
  6430                           
  6431                           ;ChargeStation_task.c: 125: } else {
  6432  0131F6  D010               	goto	l11496
  6433  0131F8                     l124:
  6434                           
  6435                           ; BSR set to: 1
  6436                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6437  0131F8  A027               	btfss	_ctmu_m+2,0,c
  6438  0131FA  D006               	goto	l11488
  6439                           
  6440                           ; BSR set to: 1
  6441                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6442  0131FC  6A27               	clrf	_ctmu_m+2,c
  6443  0131FE  6A28               	clrf	_ctmu_m+3,c
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6447  013200  ECD8  F095         	call	PL16	;call to abstracted procedure
  6448  013204  EC5C  F090         	call	_display
  6449  013208                     l11488:
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;ChargeStation_task.c: 129: }
  6453                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6454  013208  A428               	btfss	_ctmu_m+3,2,c
  6455  01320A  D004               	goto	l11494
  6456                           
  6457                           ; BSR set to: 1
  6458                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6459  01320C  6A27               	clrf	_ctmu_m+2,c
  6460  01320E  6A28               	clrf	_ctmu_m+3,c
  6461                           
  6462                           ; BSR set to: 1
  6463                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6464  013210  0E01               	movlw	1
  6465  013212  6F31               	movwf	_settings_flag& (0+255),b
  6466  013214                     l11494:
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;ChargeStation_task.c: 133: }
  6470                           ;ChargeStation_task.c: 134: port_button_task();
  6471  013214  ECC2  F090         	call	_port_button_task	;wreg free
  6472  013218                     l11496:
  6473                           
  6474                           ;ChargeStation_task.c: 135: }
  6475                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6476  013218  0101               	movlb	1	; () banked
  6477  01321A  512E               	movf	_cut_time_flag& (0+255),w,b
  6478  01321C  E003               	bz	l11502
  6479                           
  6480                           ; BSR set to: 1
  6481                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6482  01321E  6B2E               	clrf	_cut_time_flag& (0+255),b
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;ChargeStation_task.c: 139: Auto_cut();
  6486  013220  EC82  F092         	call	_Auto_cut	;wreg free
  6487  013224                     l11502:
  6488                           
  6489                           ;ChargeStation_task.c: 140: }
  6490                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6491  013224  0101               	movlb	1	; () banked
  6492  013226  5130               	movf	_integrate_flag& (0+255),w,b
  6493  013228  E005               	bz	l11508
  6494                           
  6495                           ; BSR set to: 1
  6496                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6497  01322A  6B30               	clrf	_integrate_flag& (0+255),b
  6498                           
  6499                           ; BSR set to: 1
  6500                           ;ChargeStation_task.c: 144: integrate_current();
  6501  01322C  EC39  F099         	call	_integrate_current	;wreg free
  6502                           
  6503                           ;ChargeStation_task.c: 145: integrate_time();
  6504  013230  ECA0  F09F         	call	_integrate_time	;wreg free
  6505  013234                     l11508:
  6506                           
  6507                           ;ChargeStation_task.c: 146: }
  6508                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6509  013234  0101               	movlb	1	; () banked
  6510  013236  5135               	movf	_time_change_flag& (0+255),w,b
  6511  013238  E007               	bz	l130
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6515  01323A  6B35               	clrf	_time_change_flag& (0+255),b
  6516                           
  6517                           ; BSR set to: 1
  6518                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6519  01323C  0100               	movlb	0	; () banked
  6520  01323E  05EC               	decf	_print_item& (0+255),w,b
  6521  013240  E103               	bnz	l130
  6522                           
  6523                           ; BSR set to: 0
  6524  013242  0E01               	movlw	1
  6525  013244  0101               	movlb	1	; () banked
  6526  013246  6F2F               	movwf	_display_flag& (0+255),b
  6527  013248                     l130:
  6528                           
  6529                           ;ChargeStation_task.c: 151: }
  6530                           ;ChargeStation_task.c: 153: if (display_flag) {
  6531  013248  0101               	movlb	1	; () banked
  6532  01324A  512F               	movf	_display_flag& (0+255),w,b
  6533  01324C  E003               	bz	l11520
  6534                           
  6535                           ; BSR set to: 1
  6536                           ;ChargeStation_task.c: 154: display_flag = 0;
  6537  01324E  6B2F               	clrf	_display_flag& (0+255),b
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;ChargeStation_task.c: 155: display_LCD();
  6541  013250  ECA4  F081         	call	_display_LCD	;wreg free
  6542  013254                     l11520:
  6543                           
  6544                           ;ChargeStation_task.c: 156: }
  6545                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6546  013254  0101               	movlb	1	; () banked
  6547  013256  5133               	movf	_terminal_data_out& (0+255),w,b
  6548  013258  B4D8               	btfsc	status,2,c
  6549  01325A  0012               	return	
  6550                           
  6551                           ; BSR set to: 1
  6552  01325C  5134               	movf	_terminal_data_out_flag& (0+255),w,b
  6553  01325E  B4D8               	btfsc	status,2,c
  6554  013260  0012               	return	
  6555                           
  6556                           ; BSR set to: 1
  6557                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6558  013262  6B34               	clrf	_terminal_data_out_flag& (0+255),b
  6559                           
  6560                           ; BSR set to: 1
  6561                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6562  013264  0EBD               	movlw	low _usb_tx
  6563  013266  0100               	movlb	0	; () banked
  6564  013268  6FAA               	movwf	data_out@tx& (0+255),b
  6565  01326A  0E02               	movlw	high _usb_tx
  6566  01326C  6FAB               	movwf	(data_out@tx+1)& (0+255),b
  6567  01326E  EF08  F08E         	goto	_data_out	;wreg free
  6568  013272                     __end_of_normal_task:
  6569                           	opt stack 0
  6570                           tblptru	equ	0xFF8
  6571                           tblptrh	equ	0xFF7
  6572                           tblptrl	equ	0xFF6
  6573                           tablat	equ	0xFF5
  6574                           prodh	equ	0xFF4
  6575                           prodl	equ	0xFF3
  6576                           intcon	equ	0xFF2
  6577                           intcon2	equ	0xFF1
  6578                           postinc0	equ	0xFEE
  6579                           wreg	equ	0xFE8
  6580                           indf1	equ	0xFE7
  6581                           postinc1	equ	0xFE6
  6582                           postdec1	equ	0xFE5
  6583                           fsr1h	equ	0xFE2
  6584                           fsr1l	equ	0xFE1
  6585                           indf2	equ	0xFDF
  6586                           postinc2	equ	0xFDE
  6587                           postdec2	equ	0xFDD
  6588                           plusw2	equ	0xFDB
  6589                           fsr2h	equ	0xFDA
  6590                           fsr2l	equ	0xFD9
  6591                           status	equ	0xFD8
  6592                           
  6593 ;; *************** function _settings_task *****************
  6594 ;; Defined at:
  6595 ;;		line 193 in file "settings.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;		None               void
  6602 ;; Registers used:
  6603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : F/1
  6606 ;;		On exit  : E/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6613 ;;Total ram usage:        1 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:   17
  6616 ;; This function calls:
  6617 ;;		_display
  6618 ;;		_settings_adjust_time
  6619 ;;		_settings_auto_stop
  6620 ;;		_settings_integrating_reset
  6621 ;;		_settings_led_indicator
  6622 ;; This function is called by:
  6623 ;;		_normal_task
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text17
  6628  0112B2                     __ptext17:
  6629                           	opt stack 0
  6630  0112B2                     _settings_task:
  6631                           	opt stack 12
  6632                           
  6633                           ; BSR set to: 1
  6634                           ;settings.c: 194: static uint8_t settings_state = 0;
  6635                           ;settings.c: 195: switch (settings_state) {
  6636                           
  6637                           ;incstack = 0
  6638  0112B2  D091               	goto	l11128
  6639  0112B4                     l540:
  6640                           
  6641                           ; BSR set to: 1
  6642                           ;settings.c: 197: settings_item = SELECT;
  6643  0112B4  0100               	movlb	0	; () banked
  6644  0112B6  6BED               	clrf	_settings_item& (0+255),b
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6648  0112B8  D897               	call	PL136	;call to abstracted procedure
  6649  0112BA  D89B               	call	PL274	;call to abstracted procedure
  6650  0112BC  EC5C  F090         	call	_display
  6651                           
  6652                           ; BSR set to: 1
  6653                           ;settings.c: 199: settings_state += 1;
  6654  0112C0  2B3A               	incf	settings_task@settings_state& (0+255),f,b
  6655                           
  6656                           ;settings.c: 200: break;
  6657  0112C2  0012               	return	
  6658  0112C4                     l542:
  6659                           
  6660                           ; BSR set to: 1
  6661                           ;settings.c: 202: {
  6662                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6663  0112C4  0100               	movlb	0	; () banked
  6664  0112C6  6B99               	clrf	settings_task@item_change_flag& (0+255),b
  6665                           
  6666                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6667  0112C8  0101               	movlb	1	; () banked
  6668  0112CA  A16D               	btfss	(_port+48)& (0+255),0,b
  6669  0112CC  D00B               	goto	l11064
  6670                           
  6671                           ; BSR set to: 1
  6672                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6673  0112CE  6B6D               	clrf	(_port+48)& (0+255),b
  6674  0112D0  6B6E               	clrf	(_port+49)& (0+255),b
  6675                           
  6676                           ; BSR set to: 1
  6677                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6678  0112D2  0E04               	movlw	4
  6679  0112D4  0100               	movlb	0	; () banked
  6680  0112D6  19ED               	xorwf	_settings_item& (0+255),w,b
  6681  0112D8  E102               	bnz	l11060
  6682                           
  6683                           ; BSR set to: 0
  6684  0112DA  6BED               	clrf	_settings_item& (0+255),b
  6685  0112DC  D001               	goto	l11062
  6686  0112DE                     l11060:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;settings.c: 207: else settings_item++;
  6690  0112DE  2BED               	incf	_settings_item& (0+255),f,b
  6691  0112E0                     l11062:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;settings.c: 208: item_change_flag = 1;
  6695  0112E0  0E01               	movlw	1
  6696  0112E2  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6697  0112E4                     l11064:
  6698                           
  6699                           ;settings.c: 209: }
  6700                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6701  0112E4  0101               	movlb	1	; () banked
  6702  0112E6  A13F               	btfss	(_port+2)& (0+255),0,b
  6703  0112E8  D00B               	goto	l11076
  6704                           
  6705                           ; BSR set to: 1
  6706                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6707  0112EA  6B3F               	clrf	(_port+2)& (0+255),b
  6708  0112EC  6B40               	clrf	(_port+3)& (0+255),b
  6709                           
  6710                           ; BSR set to: 1
  6711                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  6712  0112EE  0100               	movlb	0	; () banked
  6713  0112F0  51ED               	movf	_settings_item& (0+255),w,b
  6714  0112F2  E103               	bnz	l11072
  6715                           
  6716                           ; BSR set to: 0
  6717  0112F4  0E04               	movlw	4
  6718  0112F6  6FED               	movwf	_settings_item& (0+255),b
  6719  0112F8  D001               	goto	l11074
  6720  0112FA                     l11072:
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;settings.c: 213: else settings_item--;
  6724  0112FA  07ED               	decf	_settings_item& (0+255),f,b
  6725  0112FC                     l11074:
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;settings.c: 214: item_change_flag = 1;
  6729  0112FC  0E01               	movlw	1
  6730  0112FE  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6731  011300                     l11076:
  6732                           
  6733                           ;settings.c: 215: }
  6734                           ;settings.c: 216: if (item_change_flag) {
  6735  011300  0100               	movlb	0	; () banked
  6736  011302  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  6737  011304  E12A               	bnz	l11092
  6738  011306  D033               	goto	l549
  6739  011308                     l11080:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  6743  011308  D86F               	call	PL136	;call to abstracted procedure
  6744  01130A  D873               	call	PL274	;call to abstracted procedure
  6745  01130C  EC5C  F090         	call	_display
  6746                           
  6747                           ;settings.c: 220: break;
  6748  011310  D02E               	goto	l549
  6749  011312                     l11082:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  6753  011312  D86A               	call	PL136	;call to abstracted procedure
  6754  011314  0EA3               	movlw	low STR_69
  6755  011316  6F62               	movwf	display@str1& (0+255),b
  6756  011318  0EFE               	movlw	high STR_69
  6757  01131A  6F63               	movwf	(display@str1+1)& (0+255),b
  6758  01131C  0E03               	movlw	3
  6759  01131E  EC5C  F090         	call	_display
  6760                           
  6761                           ;settings.c: 223: break;
  6762  011322  D025               	goto	l549
  6763  011324                     l11084:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  6767  011324  D861               	call	PL136	;call to abstracted procedure
  6768  011326  0E70               	movlw	low STR_71
  6769  011328  6F62               	movwf	display@str1& (0+255),b
  6770  01132A  0EFE               	movlw	high STR_71
  6771  01132C  6F63               	movwf	(display@str1+1)& (0+255),b
  6772  01132E  0E03               	movlw	3
  6773  011330  EC5C  F090         	call	_display
  6774                           
  6775                           ;settings.c: 226: break;
  6776  011334  D01C               	goto	l549
  6777  011336                     l11086:
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  6781  011336  D858               	call	PL136	;call to abstracted procedure
  6782  011338  0EB3               	movlw	low STR_73
  6783  01133A  6F62               	movwf	display@str1& (0+255),b
  6784  01133C  0EFE               	movlw	high STR_73
  6785  01133E  6F63               	movwf	(display@str1+1)& (0+255),b
  6786  011340  0E03               	movlw	3
  6787  011342  EC5C  F090         	call	_display
  6788                           
  6789                           ;settings.c: 229: break;
  6790  011346  D013               	goto	l549
  6791  011348                     l11088:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  6795  011348  D84F               	call	PL136	;call to abstracted procedure
  6796  01134A  0ED3               	movlw	low STR_75
  6797  01134C  6F62               	movwf	display@str1& (0+255),b
  6798  01134E  0EFE               	movlw	high STR_75
  6799  011350  6F63               	movwf	(display@str1+1)& (0+255),b
  6800  011352  0E03               	movlw	3
  6801  011354  EC5C  F090         	call	_display
  6802                           
  6803                           ;settings.c: 232: break;
  6804  011358  D00A               	goto	l549
  6805  01135A                     l11092:
  6806                           
  6807                           ; BSR set to: 0
  6808  01135A  51ED               	movf	_settings_item& (0+255),w,b
  6809                           
  6810                           ; Switch size 1, requested type "space"
  6811                           ; Number of cases is 5, Range of values is 0 to 4
  6812                           ; switch strategies available:
  6813                           ; Name         Instructions Cycles
  6814                           ; simple_byte           16     9 (average)
  6815                           ;	Chosen strategy is simple_byte
  6816  01135C  E0D5               	bz	l11080
  6817  01135E  0A01               	xorlw	1	; case 1
  6818  011360  E0D8               	bz	l11082
  6819  011362  0A03               	xorlw	3	; case 2
  6820  011364  E0DF               	bz	l11084
  6821  011366  0A01               	xorlw	1	; case 3
  6822  011368  E0E6               	bz	l11086
  6823  01136A  0A07               	xorlw	7	; case 4
  6824  01136C  E0ED               	bz	l11088
  6825  01136E                     l549:
  6826                           
  6827                           ;settings.c: 234: }
  6828                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  6829  01136E  0101               	movlb	1	; () banked
  6830  011370  A156               	btfss	(_port+25)& (0+255),0,b
  6831  011372  D003               	goto	l11098
  6832                           
  6833                           ; BSR set to: 1
  6834                           ;settings.c: 236: port[1].ctmu.flags = 0;
  6835  011374  6B56               	clrf	(_port+25)& (0+255),b
  6836  011376  6B57               	clrf	(_port+26)& (0+255),b
  6837                           
  6838                           ; BSR set to: 1
  6839                           ;settings.c: 237: settings_state += 1;
  6840  011378  2B3A               	incf	settings_task@settings_state& (0+255),f,b
  6841  01137A                     l11098:
  6842                           
  6843                           ; BSR set to: 1
  6844                           ;settings.c: 238: }
  6845                           ;settings.c: 239: if (ctmu_m.flag.press) {
  6846  01137A  A027               	btfss	_ctmu_m+2,0,c
  6847  01137C  0012               	return	
  6848                           
  6849                           ; BSR set to: 1
  6850                           ;settings.c: 240: ctmu_m.flags = 0;
  6851  01137E  6A27               	clrf	_ctmu_m+2,c
  6852  011380  6A28               	clrf	_ctmu_m+3,c
  6853                           
  6854                           ;settings.c: 241: settings_state = 0;
  6855  011382  6B3A               	clrf	settings_task@settings_state& (0+255),b
  6856                           
  6857                           ;settings.c: 242: settings_flag = 0;
  6858  011384  6B31               	clrf	_settings_flag& (0+255),b
  6859                           
  6860                           ; BSR set to: 1
  6861                           ;settings.c: 243: display(PRINT_TIME, "", "");
  6862  011386  ECD8  F095         	call	PL16	;call to abstracted procedure
  6863  01138A  EF5C  F090         	goto	_display
  6864  01138E                     l11104:
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;settings.c: 250: settings_state = 1;
  6868  01138E  0E01               	movlw	1
  6869  011390  0101               	movlb	1	; () banked
  6870  011392  6F3A               	movwf	settings_task@settings_state& (0+255),b
  6871                           
  6872                           ;settings.c: 251: break;
  6873  011394  0C01               	retlw	1
  6874  011396                     l11106:
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;settings.c: 253: if (settings_adjust_time()) {
  6878  011396  EC97  F095         	call	_settings_adjust_time	;wreg free
  6879  01139A  0900               	iorlw	0
  6880  01139C  B4D8               	btfsc	status,2,c
  6881  01139E  0012               	return	
  6882  0113A0                     l11108:
  6883                           
  6884                           ;settings.c: 254: settings_state = 0;
  6885  0113A0  0101               	movlb	1	; () banked
  6886  0113A2  6B3A               	clrf	settings_task@settings_state& (0+255),b
  6887  0113A4  0012               	return	
  6888  0113A6                     l11110:
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;settings.c: 258: if (settings_auto_stop()) {
  6892  0113A6  ECF6  F08C         	call	_settings_auto_stop	;wreg free
  6893  0113AA                     L1:
  6894  0113AA  0900               	iorlw	0
  6895  0113AC  E1F9               	bnz	l11108
  6896  0113AE  0012               	return	
  6897  0113B0                     l11114:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;settings.c: 263: if (settings_led_indicator()) {
  6901  0113B0  EC6A  F08C         	call	_settings_led_indicator	;wreg free
  6902  0113B4  D7FA               	goto	L1
  6903  0113B6                     l11118:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;settings.c: 268: if (settings_integrating_reset()) {
  6907  0113B6  EC3F  F08B         	call	_settings_integrating_reset	;wreg free
  6908  0113BA  D7F7               	goto	L1
  6909  0113BC                     l11124:
  6910                           
  6911                           ; BSR set to: 1
  6912  0113BC  0100               	movlb	0	; () banked
  6913  0113BE  51ED               	movf	_settings_item& (0+255),w,b
  6914                           
  6915                           ; Switch size 1, requested type "space"
  6916                           ; Number of cases is 5, Range of values is 0 to 4
  6917                           ; switch strategies available:
  6918                           ; Name         Instructions Cycles
  6919                           ; simple_byte           16     9 (average)
  6920                           ;	Chosen strategy is simple_byte
  6921  0113C0  E0E6               	bz	l11104
  6922  0113C2  0A01               	xorlw	1	; case 1
  6923  0113C4  E0E8               	bz	l11106
  6924  0113C6  0A03               	xorlw	3	; case 2
  6925  0113C8  E0EE               	bz	l11110
  6926  0113CA  0A01               	xorlw	1	; case 3
  6927  0113CC  E0F1               	bz	l11114
  6928  0113CE  0A07               	xorlw	7	; case 4
  6929  0113D0  A4D8               	btfss	status,2,c
  6930  0113D2  0012               	return	
  6931  0113D4  D7F0               	goto	l11118
  6932  0113D6                     l11128:
  6933                           
  6934                           ; BSR set to: 1
  6935  0113D6  513A               	movf	settings_task@settings_state& (0+255),w,b
  6936                           
  6937                           ; Switch size 1, requested type "space"
  6938                           ; Number of cases is 3, Range of values is 0 to 2
  6939                           ; switch strategies available:
  6940                           ; Name         Instructions Cycles
  6941                           ; simple_byte           10     6 (average)
  6942                           ;	Chosen strategy is simple_byte
  6943  0113D8  E101 D76C          	bz	l540
  6944  0113DC  0A01               	xorlw	1	; case 1
  6945  0113DE  E101 D771          	bz	l542
  6946  0113E2  0A03               	xorlw	3	; case 2
  6947  0113E4  E0EB               	bz	l11124
  6948  0113E6  0012               	return		;funcret
  6949  0113E8                     __end_of_settings_task:
  6950                           	opt stack 0
  6951  0113E8                     PL136:
  6952                           	opt stack 12
  6953  0113E8  0E67               	movlw	low STR_64
  6954  0113EA  6F60               	movwf	display@str0& (0+255),b
  6955  0113EC  0EFF               	movlw	high STR_64
  6956  0113EE  6F61               	movwf	(display@str0+1)& (0+255),b
  6957  0113F0  0012               	return	
  6958  0113F2                     __end_ofPL136:
  6959                           	opt stack 0
  6960  0113F2                     PL274:
  6961                           	opt stack 12
  6962  0113F2  0E5F               	movlw	low STR_65
  6963  0113F4  6F62               	movwf	display@str1& (0+255),b
  6964  0113F6  0EFE               	movlw	high STR_65
  6965  0113F8  6F63               	movwf	(display@str1+1)& (0+255),b
  6966  0113FA  0C03               	retlw	3
  6967  0113FC                     __end_ofPL274:
  6968                           	opt stack 0
  6969                           tblptru	equ	0xFF8
  6970                           tblptrh	equ	0xFF7
  6971                           tblptrl	equ	0xFF6
  6972                           tablat	equ	0xFF5
  6973                           prodh	equ	0xFF4
  6974                           prodl	equ	0xFF3
  6975                           intcon	equ	0xFF2
  6976                           intcon2	equ	0xFF1
  6977                           postinc0	equ	0xFEE
  6978                           wreg	equ	0xFE8
  6979                           indf1	equ	0xFE7
  6980                           postinc1	equ	0xFE6
  6981                           postdec1	equ	0xFE5
  6982                           fsr1h	equ	0xFE2
  6983                           fsr1l	equ	0xFE1
  6984                           indf2	equ	0xFDF
  6985                           postinc2	equ	0xFDE
  6986                           postdec2	equ	0xFDD
  6987                           plusw2	equ	0xFDB
  6988                           fsr2h	equ	0xFDA
  6989                           fsr2l	equ	0xFD9
  6990                           status	equ	0xFD8
  6991                           
  6992 ;; *************** function _settings_led_indicator *****************
  6993 ;; Defined at:
  6994 ;;		line 96 in file "settings.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;		None
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  i               1   50[BANK0 ] unsigned char 
  6999 ;;  str            20   27[BANK0 ] unsigned char [20]
  7000 ;;  strp            1   48[BANK0 ] PTR unsigned char 
  7001 ;;		 -> settings_led_indicator@str_1327(20), 
  7002 ;;  i               1   49[BANK0 ] unsigned char 
  7003 ;;  j               1   51[BANK0 ] unsigned char 
  7004 ;;  str            20    7[BANK0 ] unsigned char [20]
  7005 ;;  strp            1   47[BANK0 ] PTR unsigned char 
  7006 ;;		 -> settings_led_indicator@str(20), 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      unsigned char 
  7009 ;; Registers used:
  7010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7011 ;; Tracked objects:
  7012 ;;		On entry : E/0
  7013 ;;		On exit  : E/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7017 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7019 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7020 ;;Total ram usage:       46 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; Hardware stack levels required when called:   12
  7023 ;; This function calls:
  7024 ;;		_LED_output
  7025 ;;		_display
  7026 ;;		_strcpy
  7027 ;; This function is called by:
  7028 ;;		_settings_task
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text18
  7033  0118D4                     __ptext18:
  7034                           	opt stack 0
  7035  0118D4                     _settings_led_indicator:
  7036                           	opt stack 16
  7037                           
  7038                           ;settings.c: 97: static uint8_t state = 0;
  7039                           ;settings.c: 98: switch (state) {
  7040                           
  7041                           ;incstack = 0
  7042  0118D4  D072               	goto	l10640
  7043  0118D6                     l10580:
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;settings.c: 100: {
  7047                           ;settings.c: 101: char str[20];
  7048                           ;settings.c: 102: char *strp;
  7049                           ;settings.c: 103: strp = str;
  7050  0118D6  0E67               	movlw	low settings_led_indicator@str
  7051  0118D8  0100               	movlb	0	; () banked
  7052  0118DA  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7056  0118DC  6B91               	clrf	settings_led_indicator@i& (0+255),b
  7057  0118DE                     l10586:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7061  0118DE  5191               	movf	settings_led_indicator@i& (0+255),w,b
  7062  0118E0  D87D               	call	PL4	;call to abstracted procedure
  7063  0118E2  A2DF               	btfss	indf2,1,c
  7064  0118E4  D007               	goto	l10590
  7065                           
  7066                           ; BSR set to: 1
  7067  0118E6  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7068  0118EA  EC74  F08D         	call	PL100	;call to abstracted procedure
  7069  0118EE  ECA5  F0A0         	call	_strcpy	;wreg free
  7070  0118F2  D006               	goto	l10592
  7071  0118F4                     l10590:
  7072                           
  7073                           ; BSR set to: 1
  7074                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7075  0118F4  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7076  0118F8  EC7B  F08D         	call	PL102	;call to abstracted procedure
  7077  0118FC  ECA5  F0A0         	call	_strcpy	;wreg free
  7078  011900                     l10592:
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;settings.c: 107: strp += 5;
  7082  011900  0E05               	movlw	5
  7083  011902  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7084                           
  7085                           ; BSR set to: 0
  7086  011904  2B91               	incf	settings_led_indicator@i& (0+255),f,b
  7087                           
  7088                           ; BSR set to: 0
  7089  011906  0E02               	movlw	2
  7090  011908  6591               	cpfsgt	settings_led_indicator@i& (0+255),b
  7091  01190A  D7E9               	goto	l10586
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;settings.c: 108: }
  7095                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7096  01190C  ECC4  F08B         	call	PL262	;call to abstracted procedure
  7097  011910  0E67               	movlw	low settings_led_indicator@str
  7098  011912  ECD5  F08B         	call	PL300	;call to abstracted procedure
  7099  011916  EC5C  F090         	call	_display
  7100                           
  7101                           ; BSR set to: 1
  7102                           ;settings.c: 110: state = 1;
  7103  01191A  0E01               	movlw	1
  7104  01191C  6F39               	movwf	settings_led_indicator@state& (0+255),b
  7105                           
  7106                           ;settings.c: 111: }
  7107                           ;settings.c: 112: break;
  7108  01191E  D052               	goto	l501
  7109  011920                     l502:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7113  011920  0100               	movlb	0	; () banked
  7114  011922  6B93               	clrf	settings_led_indicator@j& (0+255),b
  7115  011924                     l10606:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7119  011924  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7120  011926  ECAF  F08B         	call	PL26	;call to abstracted procedure
  7121  01192A  A0DF               	btfss	indf2,0,c
  7122  01192C  D040               	goto	l10634
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7126  01192E  0100               	movlb	0	; () banked
  7127  011930  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7128  011932  ECAF  F08B         	call	PL26	;call to abstracted procedure
  7129  011936  6ADE               	clrf	postinc2,c
  7130  011938  6ADD               	clrf	postdec2,c
  7131                           
  7132                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7133  01193A  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7134  01193C  D84F               	call	PL4	;call to abstracted procedure
  7135  01193E  B2DF               	btfsc	indf2,1,c
  7136  011940  D003               	goto	u11350
  7137  011942  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7138  011944  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7139  011946  D002               	goto	u11368
  7140  011948                     u11350:
  7141  011948  0100               	movlb	0	; () banked
  7142  01194A  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7143  01194C                     u11368:
  7144  01194C  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7145  01194E  D846               	call	PL4	;call to abstracted procedure
  7146  011950  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7147  011952  50DF               	movf	223,w,c
  7148  011954  0100               	movlb	0	; () banked
  7149  011956  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7150  011958  0BFD               	andlw	-3
  7151  01195A  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7152  01195C  6EDF               	movwf	223,c
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;settings.c: 118: LED_output(j, 0);
  7156  01195E  6B60               	clrf	LED_output@value& (0+255),b
  7157  011960  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7158  011962  EC37  F09E         	call	_LED_output
  7159                           
  7160                           ;settings.c: 119: char str[20];
  7161                           ;settings.c: 120: char *strp;
  7162                           ;settings.c: 121: strp = str;
  7163  011966  0E7B               	movlw	low settings_led_indicator@str_1327
  7164  011968  0100               	movlb	0	; () banked
  7165  01196A  6F90               	movwf	settings_led_indicator@strp_1328& (0+255),b
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7169  01196C  6B92               	clrf	settings_led_indicator@i_1329& (0+255),b
  7170  01196E                     l10620:
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7174  01196E  5192               	movf	settings_led_indicator@i_1329& (0+255),w,b
  7175  011970  D835               	call	PL4	;call to abstracted procedure
  7176  011972  A2DF               	btfss	indf2,1,c
  7177  011974  D007               	goto	l10624
  7178                           
  7179                           ; BSR set to: 1
  7180  011976  C090  F060         	movff	settings_led_indicator@strp_1328,strcpy@to
  7181  01197A  EC74  F08D         	call	PL100	;call to abstracted procedure
  7182  01197E  ECA5  F0A0         	call	_strcpy	;wreg free
  7183  011982  D006               	goto	l10626
  7184  011984                     l10624:
  7185                           
  7186                           ; BSR set to: 1
  7187                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7188  011984  C090  F060         	movff	settings_led_indicator@strp_1328,strcpy@to
  7189  011988  EC7B  F08D         	call	PL102	;call to abstracted procedure
  7190  01198C  ECA5  F0A0         	call	_strcpy	;wreg free
  7191  011990                     l10626:
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;settings.c: 125: strp += 5;
  7195  011990  0E05               	movlw	5
  7196  011992  2790               	addwf	settings_led_indicator@strp_1328& (0+255),f,b
  7197                           
  7198                           ; BSR set to: 0
  7199  011994  2B92               	incf	settings_led_indicator@i_1329& (0+255),f,b
  7200                           
  7201                           ; BSR set to: 0
  7202  011996  0E02               	movlw	2
  7203  011998  6592               	cpfsgt	settings_led_indicator@i_1329& (0+255),b
  7204  01199A  D7E9               	goto	l10620
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;settings.c: 126: }
  7208                           ;settings.c: 127: display(SETTINGS, "", str);
  7209  01199C  0EE6               	movlw	low (STR_96+3)
  7210  01199E  6F60               	movwf	display@str0& (0+255),b
  7211  0119A0  0EFF               	movlw	high (STR_96+3)
  7212  0119A2  6F61               	movwf	(display@str0+1)& (0+255),b
  7213  0119A4  0E7B               	movlw	low settings_led_indicator@str_1327
  7214  0119A6  ECD5  F08B         	call	PL300	;call to abstracted procedure
  7215  0119AA  EC5C  F090         	call	_display
  7216  0119AE                     l10634:
  7217                           
  7218                           ; BSR set to: 1
  7219  0119AE  0100               	movlb	0	; () banked
  7220  0119B0  2B93               	incf	settings_led_indicator@j& (0+255),f,b
  7221                           
  7222                           ; BSR set to: 0
  7223  0119B2  0E02               	movlw	2
  7224  0119B4  6593               	cpfsgt	settings_led_indicator@j& (0+255),b
  7225  0119B6  D7B6               	goto	l10606
  7226  0119B8  D005               	goto	l501
  7227  0119BA                     l10640:
  7228  0119BA  0101               	movlb	1	; () banked
  7229  0119BC  5139               	movf	settings_led_indicator@state& (0+255),w,b
  7230                           
  7231                           ; Switch size 1, requested type "space"
  7232                           ; Number of cases is 2, Range of values is 0 to 1
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte            7     4 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  0119BE  E08B               	bz	l10580
  7238  0119C0  0A01               	xorlw	1	; case 1
  7239  0119C2  E0AE               	bz	l502
  7240  0119C4                     l501:
  7241                           
  7242                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7243  0119C4  A027               	btfss	_ctmu_m+2,0,c
  7244  0119C6  0C00               	retlw	0
  7245                           
  7246                           ;settings.c: 135: ctmu_m.flags = 0;
  7247  0119C8  6A27               	clrf	_ctmu_m+2,c
  7248  0119CA  6A28               	clrf	_ctmu_m+3,c
  7249                           
  7250                           ;settings.c: 136: state = 0;
  7251  0119CC  0101               	movlb	1	; () banked
  7252  0119CE  6B39               	clrf	settings_led_indicator@state& (0+255),b
  7253                           
  7254                           ;settings.c: 137: settings_flag = 0;
  7255  0119D0  6B31               	clrf	_settings_flag& (0+255),b
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7259  0119D2  ECD8  F095         	call	PL16	;call to abstracted procedure
  7260  0119D6  EC5C  F090         	call	_display
  7261                           
  7262                           ; BSR set to: 1
  7263                           ;settings.c: 139: return 1;
  7264  0119DA  0C01               	retlw	1
  7265  0119DC                     __end_of_settings_led_indicator:
  7266                           	opt stack 0
  7267  0119DC                     PL4:
  7268                           	opt stack 16
  7269  0119DC  0D17               	mullw	23
  7270  0119DE  0E53               	movlw	low (_port+22)
  7271  0119E0  24F3               	addwf	prodl,w,c
  7272  0119E2  6ED9               	movwf	fsr2l,c
  7273  0119E4  0E01               	movlw	high (_port+22)
  7274  0119E6  20F4               	addwfc	prodh,w,c
  7275  0119E8  6EDA               	movwf	fsr2h,c
  7276  0119EA  0012               	return	
  7277  0119EC                     __end_ofPL4:
  7278                           	opt stack 0
  7279                           tblptru	equ	0xFF8
  7280                           tblptrh	equ	0xFF7
  7281                           tblptrl	equ	0xFF6
  7282                           tablat	equ	0xFF5
  7283                           prodh	equ	0xFF4
  7284                           prodl	equ	0xFF3
  7285                           intcon	equ	0xFF2
  7286                           intcon2	equ	0xFF1
  7287                           postinc0	equ	0xFEE
  7288                           wreg	equ	0xFE8
  7289                           indf1	equ	0xFE7
  7290                           postinc1	equ	0xFE6
  7291                           postdec1	equ	0xFE5
  7292                           fsr1h	equ	0xFE2
  7293                           fsr1l	equ	0xFE1
  7294                           indf2	equ	0xFDF
  7295                           postinc2	equ	0xFDE
  7296                           postdec2	equ	0xFDD
  7297                           plusw2	equ	0xFDB
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function _settings_integrating_reset *****************
  7303 ;; Defined at:
  7304 ;;		line 144 in file "settings.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  i               1   53[BANK0 ] unsigned char 
  7309 ;;  str            20   30[BANK0 ] unsigned char [20]
  7310 ;;  strp            1   51[BANK0 ] PTR unsigned char 
  7311 ;;		 -> settings_integrating_reset@str_1344(20), 
  7312 ;;  i               1   52[BANK0 ] unsigned char 
  7313 ;;  j               1   54[BANK0 ] unsigned char 
  7314 ;;  str            20   10[BANK0 ] unsigned char [20]
  7315 ;;  strp            1   50[BANK0 ] PTR unsigned char 
  7316 ;;		 -> settings_integrating_reset@str(20), 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      unsigned char 
  7319 ;; Registers used:
  7320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : E/0
  7323 ;;		On exit  : E/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7327 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7328 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7329 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7330 ;;Total ram usage:       49 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:   12
  7333 ;; This function calls:
  7334 ;;		_display
  7335 ;;		_strcpy
  7336 ;; This function is called by:
  7337 ;;		_settings_task
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text19
  7342  01167E                     __ptext19:
  7343                           	opt stack 0
  7344  01167E                     _settings_integrating_reset:
  7345                           	opt stack 16
  7346                           
  7347                           ;settings.c: 145: static uint8_t state = 0;
  7348                           ;settings.c: 146: switch (state) {
  7349                           
  7350                           ;incstack = 0
  7351  01167E  D05E               	goto	l10714
  7352  011680                     l10656:
  7353                           
  7354                           ; BSR set to: 1
  7355                           ;settings.c: 148: {
  7356                           ;settings.c: 149: char str[20];
  7357                           ;settings.c: 150: char *strp;
  7358                           ;settings.c: 151: strp = str;
  7359  011680  0E6A               	movlw	low settings_integrating_reset@str
  7360  011682  0100               	movlb	0	; () banked
  7361  011684  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7365  011686  6B94               	clrf	settings_integrating_reset@i& (0+255),b
  7366  011688                     l10662:
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7370  011688  5194               	movf	settings_integrating_reset@i& (0+255),w,b
  7371  01168A  D871               	call	PL42	;call to abstracted procedure
  7372  01168C  D891               	call	PL304	;call to abstracted procedure
  7373  01168E  E006               	bz	l10666
  7374                           
  7375                           ; BSR set to: 0
  7376  011690  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7377  011694  D884               	call	PL290	;call to abstracted procedure
  7378  011696  ECA5  F0A0         	call	_strcpy	;wreg free
  7379  01169A  D005               	goto	l10668
  7380  01169C                     l10666:
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7384  01169C  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7385  0116A0  D878               	call	PL284	;call to abstracted procedure
  7386  0116A2  ECA5  F0A0         	call	_strcpy	;wreg free
  7387  0116A6                     l10668:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;settings.c: 155: strp += 5;
  7391  0116A6  0E05               	movlw	5
  7392  0116A8  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7393                           
  7394                           ; BSR set to: 0
  7395  0116AA  2B94               	incf	settings_integrating_reset@i& (0+255),f,b
  7396                           
  7397                           ; BSR set to: 0
  7398  0116AC  0E02               	movlw	2
  7399  0116AE  6594               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7400  0116B0  D7EB               	goto	l10662
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;settings.c: 156: }
  7404                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7405  0116B2  D86A               	call	PL262	;call to abstracted procedure
  7406  0116B4  0E6A               	movlw	low settings_integrating_reset@str
  7407  0116B6  D879               	call	PL300	;call to abstracted procedure
  7408  0116B8  EC5C  F090         	call	_display
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;settings.c: 158: state = 1;
  7412  0116BC  0E01               	movlw	1
  7413  0116BE  6F38               	movwf	settings_integrating_reset@state& (0+255),b
  7414                           
  7415                           ;settings.c: 159: }
  7416                           ;settings.c: 160: break;
  7417  0116C0  D042               	goto	l523
  7418  0116C2                     l524:
  7419                           
  7420                           ; BSR set to: 1
  7421                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  7422  0116C2  0100               	movlb	0	; () banked
  7423  0116C4  6B96               	clrf	settings_integrating_reset@j& (0+255),b
  7424  0116C6                     l10682:
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  7428  0116C6  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7429  0116C8  D84A               	call	PL26	;call to abstracted procedure
  7430  0116CA  A0DF               	btfss	indf2,0,c
  7431  0116CC  D031               	goto	l10708
  7432                           
  7433                           ; BSR set to: 1
  7434                           ;settings.c: 164: port[j].ctmu.flags = 0;
  7435  0116CE  0100               	movlb	0	; () banked
  7436  0116D0  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7437  0116D2  D845               	call	PL26	;call to abstracted procedure
  7438  0116D4  6ADE               	clrf	postinc2,c
  7439  0116D6  6ADD               	clrf	postdec2,c
  7440                           
  7441                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  7442  0116D8  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7443  0116DA  EC75  F099         	call	PL114	;call to abstracted procedure
  7444  0116DE  EC90  F095         	call	PL76	;call to abstracted procedure
  7445                           
  7446                           ;settings.c: 166: port[j].integrated_current = 0;
  7447  0116E2  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7448  0116E4  D844               	call	PL42	;call to abstracted procedure
  7449  0116E6  D84B               	call	PL174	;call to abstracted procedure
  7450                           
  7451                           ;settings.c: 167: port[j].integrated_time = 0;
  7452  0116E8  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7453  0116EA  ECB2  F09F         	call	PL44	;call to abstracted procedure
  7454  0116EE  D847               	call	PL174	;call to abstracted procedure
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;settings.c: 168: char str[20];
  7458                           ;settings.c: 169: char *strp;
  7459                           ;settings.c: 170: strp = str;
  7460  0116F0  0E7E               	movlw	low settings_integrating_reset@str_1344
  7461  0116F2  6F93               	movwf	settings_integrating_reset@strp_1345& (0+255),b
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  7465  0116F4  6B95               	clrf	settings_integrating_reset@i_1346& (0+255),b
  7466  0116F6                     l10694:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  7470  0116F6  5195               	movf	settings_integrating_reset@i_1346& (0+255),w,b
  7471  0116F8  D83A               	call	PL42	;call to abstracted procedure
  7472  0116FA  D85A               	call	PL304	;call to abstracted procedure
  7473  0116FC  E006               	bz	l10698
  7474                           
  7475                           ; BSR set to: 0
  7476  0116FE  C093  F060         	movff	settings_integrating_reset@strp_1345,strcpy@to
  7477  011702  D84D               	call	PL290	;call to abstracted procedure
  7478  011704  ECA5  F0A0         	call	_strcpy	;wreg free
  7479  011708  D005               	goto	l10700
  7480  01170A                     l10698:
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;settings.c: 173: else strcpy(strp, "  0  ");
  7484  01170A  C093  F060         	movff	settings_integrating_reset@strp_1345,strcpy@to
  7485  01170E  D841               	call	PL284	;call to abstracted procedure
  7486  011710  ECA5  F0A0         	call	_strcpy	;wreg free
  7487  011714                     l10700:
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;settings.c: 174: strp += 5;
  7491  011714  0E05               	movlw	5
  7492  011716  2793               	addwf	settings_integrating_reset@strp_1345& (0+255),f,b
  7493                           
  7494                           ; BSR set to: 0
  7495  011718  2B95               	incf	settings_integrating_reset@i_1346& (0+255),f,b
  7496                           
  7497                           ; BSR set to: 0
  7498  01171A  0E02               	movlw	2
  7499  01171C  6595               	cpfsgt	settings_integrating_reset@i_1346& (0+255),b
  7500  01171E  D7EB               	goto	l10694
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;settings.c: 175: }
  7504                           ;settings.c: 176: display(SETTINGS, "", str);
  7505  011720  0EE6               	movlw	low (STR_96+3)
  7506  011722  6F60               	movwf	display@str0& (0+255),b
  7507  011724  0EFF               	movlw	high (STR_96+3)
  7508  011726  6F61               	movwf	(display@str0+1)& (0+255),b
  7509  011728  0E7E               	movlw	low settings_integrating_reset@str_1344
  7510  01172A  D83F               	call	PL300	;call to abstracted procedure
  7511  01172C  EC5C  F090         	call	_display
  7512  011730                     l10708:
  7513                           
  7514                           ; BSR set to: 1
  7515  011730  0100               	movlb	0	; () banked
  7516  011732  2B96               	incf	settings_integrating_reset@j& (0+255),f,b
  7517                           
  7518                           ; BSR set to: 0
  7519  011734  0E02               	movlw	2
  7520  011736  6596               	cpfsgt	settings_integrating_reset@j& (0+255),b
  7521  011738  D7C6               	goto	l10682
  7522  01173A  D005               	goto	l523
  7523  01173C                     l10714:
  7524  01173C  0101               	movlb	1	; () banked
  7525  01173E  5138               	movf	settings_integrating_reset@state& (0+255),w,b
  7526                           
  7527                           ; Switch size 1, requested type "space"
  7528                           ; Number of cases is 2, Range of values is 0 to 1
  7529                           ; switch strategies available:
  7530                           ; Name         Instructions Cycles
  7531                           ; simple_byte            7     4 (average)
  7532                           ;	Chosen strategy is simple_byte
  7533  011740  E09F               	bz	l10656
  7534  011742  0A01               	xorlw	1	; case 1
  7535  011744  E0BE               	bz	l524
  7536  011746                     l523:
  7537                           
  7538                           ;settings.c: 183: if (ctmu_m.flag.press) {
  7539  011746  A027               	btfss	_ctmu_m+2,0,c
  7540  011748  0C00               	retlw	0
  7541                           
  7542                           ;settings.c: 184: ctmu_m.flags = 0;
  7543  01174A  6A27               	clrf	_ctmu_m+2,c
  7544  01174C  6A28               	clrf	_ctmu_m+3,c
  7545                           
  7546                           ;settings.c: 185: state = 0;
  7547  01174E  0101               	movlb	1	; () banked
  7548  011750  6B38               	clrf	settings_integrating_reset@state& (0+255),b
  7549                           
  7550                           ;settings.c: 186: settings_flag = 0;
  7551  011752  6B31               	clrf	_settings_flag& (0+255),b
  7552                           
  7553                           ; BSR set to: 1
  7554                           ;settings.c: 187: display(PRINT_TIME, "", "");
  7555  011754  ECD8  F095         	call	PL16	;call to abstracted procedure
  7556  011758  EC5C  F090         	call	_display
  7557                           
  7558                           ; BSR set to: 1
  7559                           ;settings.c: 188: return 1;
  7560  01175C  0C01               	retlw	1
  7561  01175E                     __end_of_settings_integrating_reset:
  7562                           	opt stack 0
  7563  01175E                     PL26:
  7564                           	opt stack 16
  7565  01175E  0D17               	mullw	23
  7566  011760  0E3F               	movlw	low (_port+2)
  7567  011762  24F3               	addwf	prodl,w,c
  7568  011764  6ED9               	movwf	fsr2l,c
  7569  011766  0E01               	movlw	high (_port+2)
  7570  011768  20F4               	addwfc	prodh,w,c
  7571  01176A  6EDA               	movwf	fsr2h,c
  7572  01176C  0012               	return	
  7573  01176E                     __end_ofPL26:
  7574                           	opt stack 0
  7575  01176E                     PL42:
  7576                           	opt stack 16
  7577  01176E  0D17               	mullw	23
  7578  011770  0E49               	movlw	low (_port+12)
  7579  011772  24F3               	addwf	prodl,w,c
  7580  011774  6ED9               	movwf	fsr2l,c
  7581  011776  0E01               	movlw	high (_port+12)
  7582  011778  20F4               	addwfc	prodh,w,c
  7583  01177A  6EDA               	movwf	fsr2h,c
  7584  01177C  0012               	return	
  7585  01177E                     __end_ofPL42:
  7586                           	opt stack 0
  7587  01177E                     PL174:
  7588                           	opt stack 16
  7589  01177E  6ADE               	clrf	postinc2,c
  7590  011780  6ADE               	clrf	postinc2,c
  7591  011782  6ADE               	clrf	postinc2,c
  7592  011784  6ADD               	clrf	postdec2,c
  7593  011786  0012               	return	
  7594  011788                     __end_ofPL174:
  7595                           	opt stack 0
  7596  011788                     PL262:
  7597                           	opt stack 16
  7598  011788  0E81               	movlw	low STR_42
  7599  01178A  6F60               	movwf	display@str0& (0+255),b
  7600  01178C  0EFE               	movlw	high STR_42
  7601  01178E  6F61               	movwf	(display@str0+1)& (0+255),b
  7602  011790  0012               	return	
  7603  011792                     __end_ofPL262:
  7604                           	opt stack 0
  7605  011792                     PL284:
  7606                           	opt stack 16
  7607  011792  6B61               	clrf	(strcpy@to+1)& (0+255),b
  7608  011794  0EA5               	movlw	low STR_57
  7609  011796  6F62               	movwf	strcpy@from& (0+255),b
  7610  011798  0EFF               	movlw	high STR_57
  7611  01179A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7612  01179C  0012               	return	
  7613  01179E                     __end_ofPL284:
  7614                           	opt stack 0
  7615  01179E                     PL290:
  7616                           	opt stack 16
  7617  01179E  6B61               	clrf	(strcpy@to+1)& (0+255),b
  7618  0117A0  0EB7               	movlw	low STR_56
  7619  0117A2  6F62               	movwf	strcpy@from& (0+255),b
  7620  0117A4  0EFF               	movlw	high STR_56
  7621  0117A6  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7622  0117A8  0012               	return	
  7623  0117AA                     __end_ofPL290:
  7624                           	opt stack 0
  7625  0117AA                     PL300:
  7626                           	opt stack 16
  7627  0117AA  6F62               	movwf	display@str1& (0+255),b
  7628  0117AC  6B63               	clrf	(display@str1+1)& (0+255),b
  7629  0117AE  0C03               	retlw	3
  7630  0117B0                     __end_ofPL300:
  7631                           	opt stack 0
  7632  0117B0                     PL304:
  7633                           	opt stack 16
  7634  0117B0  50DE               	movf	postinc2,w,c
  7635  0117B2  10DE               	iorwf	postinc2,w,c
  7636  0117B4  10DE               	iorwf	postinc2,w,c
  7637  0117B6  10DE               	iorwf	postinc2,w,c
  7638  0117B8  0012               	return	
  7639  0117BA                     __end_ofPL304:
  7640                           	opt stack 0
  7641                           tblptru	equ	0xFF8
  7642                           tblptrh	equ	0xFF7
  7643                           tblptrl	equ	0xFF6
  7644                           tablat	equ	0xFF5
  7645                           prodh	equ	0xFF4
  7646                           prodl	equ	0xFF3
  7647                           intcon	equ	0xFF2
  7648                           intcon2	equ	0xFF1
  7649                           postinc0	equ	0xFEE
  7650                           wreg	equ	0xFE8
  7651                           indf1	equ	0xFE7
  7652                           postinc1	equ	0xFE6
  7653                           postdec1	equ	0xFE5
  7654                           fsr1h	equ	0xFE2
  7655                           fsr1l	equ	0xFE1
  7656                           indf2	equ	0xFDF
  7657                           postinc2	equ	0xFDE
  7658                           postdec2	equ	0xFDD
  7659                           plusw2	equ	0xFDB
  7660                           fsr2h	equ	0xFDA
  7661                           fsr2l	equ	0xFD9
  7662                           status	equ	0xFD8
  7663                           
  7664 ;; *************** function _settings_auto_stop *****************
  7665 ;; Defined at:
  7666 ;;		line 49 in file "settings.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  i               1   50[BANK0 ] unsigned char 
  7671 ;;  str            20   27[BANK0 ] unsigned char [20]
  7672 ;;  strp            1   48[BANK0 ] PTR unsigned char 
  7673 ;;		 -> settings_auto_stop@str_1310(20), 
  7674 ;;  i               1   49[BANK0 ] unsigned char 
  7675 ;;  j               1   51[BANK0 ] unsigned char 
  7676 ;;  str            20    7[BANK0 ] unsigned char [20]
  7677 ;;  strp            1   47[BANK0 ] PTR unsigned char 
  7678 ;;		 -> settings_auto_stop@str(20), 
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  1    wreg      unsigned char 
  7681 ;; Registers used:
  7682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : E/0
  7685 ;;		On exit  : E/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7691 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7692 ;;Total ram usage:       46 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:   12
  7695 ;; This function calls:
  7696 ;;		_display
  7697 ;;		_strcpy
  7698 ;; This function is called by:
  7699 ;;		_settings_task
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text20
  7704  0119EC                     __ptext20:
  7705                           	opt stack 0
  7706  0119EC                     _settings_auto_stop:
  7707                           	opt stack 16
  7708                           
  7709                           ;settings.c: 50: static uint8_t state = 0;
  7710                           ;settings.c: 51: switch (state) {
  7711                           
  7712                           ;incstack = 0
  7713  0119EC  D06C               	goto	l10564
  7714  0119EE                     l10506:
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;settings.c: 53: {
  7718                           ;settings.c: 54: char str[20];
  7719                           ;settings.c: 55: char *strp;
  7720                           ;settings.c: 56: strp = str;
  7721  0119EE  0E67               	movlw	low settings_auto_stop@str
  7722  0119F0  0100               	movlb	0	; () banked
  7723  0119F2  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  7727  0119F4  6B91               	clrf	settings_auto_stop@i& (0+255),b
  7728  0119F6                     l10512:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  7732  0119F6  5191               	movf	settings_auto_stop@i& (0+255),w,b
  7733  0119F8  ECEE  F08C         	call	PL4	;call to abstracted procedure
  7734  0119FC  A0DF               	btfss	indf2,0,c
  7735  0119FE  D006               	goto	l10516
  7736                           
  7737                           ; BSR set to: 1
  7738  011A00  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  7739  011A04  D871               	call	PL100	;call to abstracted procedure
  7740  011A06  ECA5  F0A0         	call	_strcpy	;wreg free
  7741  011A0A  D005               	goto	l10518
  7742  011A0C                     l10516:
  7743                           
  7744                           ; BSR set to: 1
  7745                           ;settings.c: 59: else strcpy(strp, " OFF ");
  7746  011A0C  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  7747  011A10  D872               	call	PL102	;call to abstracted procedure
  7748  011A12  ECA5  F0A0         	call	_strcpy	;wreg free
  7749  011A16                     l10518:
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;settings.c: 60: strp += 5;
  7753  011A16  0E05               	movlw	5
  7754  011A18  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  7755                           
  7756                           ; BSR set to: 0
  7757  011A1A  2B91               	incf	settings_auto_stop@i& (0+255),f,b
  7758                           
  7759                           ; BSR set to: 0
  7760  011A1C  0E02               	movlw	2
  7761  011A1E  6591               	cpfsgt	settings_auto_stop@i& (0+255),b
  7762  011A20  D7EA               	goto	l10512
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;settings.c: 61: }
  7766                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  7767  011A22  ECC4  F08B         	call	PL262	;call to abstracted procedure
  7768  011A26  0E67               	movlw	low settings_auto_stop@str
  7769  011A28  ECD5  F08B         	call	PL300	;call to abstracted procedure
  7770  011A2C  EC5C  F090         	call	_display
  7771                           
  7772                           ; BSR set to: 1
  7773                           ;settings.c: 63: state = 1;
  7774  011A30  0E01               	movlw	1
  7775  011A32  6F37               	movwf	settings_auto_stop@state& (0+255),b
  7776                           
  7777                           ;settings.c: 64: }
  7778                           ;settings.c: 65: break;
  7779  011A34  D04D               	goto	l479
  7780  011A36                     l480:
  7781                           
  7782                           ; BSR set to: 1
  7783                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  7784  011A36  0100               	movlb	0	; () banked
  7785  011A38  6B93               	clrf	settings_auto_stop@j& (0+255),b
  7786  011A3A                     l10532:
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  7790  011A3A  5193               	movf	settings_auto_stop@j& (0+255),w,b
  7791  011A3C  ECAF  F08B         	call	PL26	;call to abstracted procedure
  7792  011A40  A0DF               	btfss	indf2,0,c
  7793  011A42  D03B               	goto	l10558
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;settings.c: 69: port[j].ctmu.flags = 0;
  7797  011A44  0100               	movlb	0	; () banked
  7798  011A46  5193               	movf	settings_auto_stop@j& (0+255),w,b
  7799  011A48  ECAF  F08B         	call	PL26	;call to abstracted procedure
  7800  011A4C  6ADE               	clrf	postinc2,c
  7801  011A4E  6ADD               	clrf	postdec2,c
  7802                           
  7803                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  7804  011A50  5193               	movf	settings_auto_stop@j& (0+255),w,b
  7805  011A52  ECEE  F08C         	call	PL4	;call to abstracted procedure
  7806  011A56  B0DF               	btfsc	indf2,0,c
  7807  011A58  D003               	goto	u11260
  7808  011A5A  6B66               	clrf	??_settings_auto_stop& (0+255),b
  7809  011A5C  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  7810  011A5E  D002               	goto	u11278
  7811  011A60                     u11260:
  7812  011A60  0100               	movlb	0	; () banked
  7813  011A62  6B66               	clrf	??_settings_auto_stop& (0+255),b
  7814  011A64                     u11278:
  7815  011A64  5193               	movf	settings_auto_stop@j& (0+255),w,b
  7816  011A66  ECEE  F08C         	call	PL4	;call to abstracted procedure
  7817  011A6A  50DF               	movf	223,w,c
  7818  011A6C  0100               	movlb	0	; () banked
  7819  011A6E  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  7820  011A70  0BFE               	andlw	-2
  7821  011A72  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  7822  011A74  6EDF               	movwf	223,c
  7823                           
  7824                           ; BSR set to: 1
  7825                           ;settings.c: 71: char str[20];
  7826                           ;settings.c: 72: char *strp;
  7827                           ;settings.c: 73: strp = str;
  7828  011A76  0E7B               	movlw	low settings_auto_stop@str_1310
  7829  011A78  6F90               	movwf	settings_auto_stop@strp_1311& (0+255),b
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  7833  011A7A  6B92               	clrf	settings_auto_stop@i_1312& (0+255),b
  7834  011A7C                     l10544:
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  7838  011A7C  5192               	movf	settings_auto_stop@i_1312& (0+255),w,b
  7839  011A7E  ECEE  F08C         	call	PL4	;call to abstracted procedure
  7840  011A82  A0DF               	btfss	indf2,0,c
  7841  011A84  D006               	goto	l10548
  7842                           
  7843                           ; BSR set to: 1
  7844  011A86  C090  F060         	movff	settings_auto_stop@strp_1311,strcpy@to
  7845  011A8A  D82E               	call	PL100	;call to abstracted procedure
  7846  011A8C  ECA5  F0A0         	call	_strcpy	;wreg free
  7847  011A90  D005               	goto	l10550
  7848  011A92                     l10548:
  7849                           
  7850                           ; BSR set to: 1
  7851                           ;settings.c: 76: else strcpy(strp, " OFF ");
  7852  011A92  C090  F060         	movff	settings_auto_stop@strp_1311,strcpy@to
  7853  011A96  D82F               	call	PL102	;call to abstracted procedure
  7854  011A98  ECA5  F0A0         	call	_strcpy	;wreg free
  7855  011A9C                     l10550:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;settings.c: 77: strp += 5;
  7859  011A9C  0E05               	movlw	5
  7860  011A9E  2790               	addwf	settings_auto_stop@strp_1311& (0+255),f,b
  7861                           
  7862                           ; BSR set to: 0
  7863  011AA0  2B92               	incf	settings_auto_stop@i_1312& (0+255),f,b
  7864                           
  7865                           ; BSR set to: 0
  7866  011AA2  0E02               	movlw	2
  7867  011AA4  6592               	cpfsgt	settings_auto_stop@i_1312& (0+255),b
  7868  011AA6  D7EA               	goto	l10544
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;settings.c: 78: }
  7872                           ;settings.c: 79: display(SETTINGS, "", str);
  7873  011AA8  0EE6               	movlw	low (STR_96+3)
  7874  011AAA  6F60               	movwf	display@str0& (0+255),b
  7875  011AAC  0EFF               	movlw	high (STR_96+3)
  7876  011AAE  6F61               	movwf	(display@str0+1)& (0+255),b
  7877  011AB0  0E7B               	movlw	low settings_auto_stop@str_1310
  7878  011AB2  ECD5  F08B         	call	PL300	;call to abstracted procedure
  7879  011AB6  EC5C  F090         	call	_display
  7880  011ABA                     l10558:
  7881                           
  7882                           ; BSR set to: 1
  7883  011ABA  0100               	movlb	0	; () banked
  7884  011ABC  2B93               	incf	settings_auto_stop@j& (0+255),f,b
  7885                           
  7886                           ; BSR set to: 0
  7887  011ABE  0E02               	movlw	2
  7888  011AC0  6593               	cpfsgt	settings_auto_stop@j& (0+255),b
  7889  011AC2  D7BB               	goto	l10532
  7890  011AC4  D005               	goto	l479
  7891  011AC6                     l10564:
  7892  011AC6  0101               	movlb	1	; () banked
  7893  011AC8  5137               	movf	settings_auto_stop@state& (0+255),w,b
  7894                           
  7895                           ; Switch size 1, requested type "space"
  7896                           ; Number of cases is 2, Range of values is 0 to 1
  7897                           ; switch strategies available:
  7898                           ; Name         Instructions Cycles
  7899                           ; simple_byte            7     4 (average)
  7900                           ;	Chosen strategy is simple_byte
  7901  011ACA  E091               	bz	l10506
  7902  011ACC  0A01               	xorlw	1	; case 1
  7903  011ACE  E0B3               	bz	l480
  7904  011AD0                     l479:
  7905                           
  7906                           ;settings.c: 86: if (ctmu_m.flag.press) {
  7907  011AD0  A027               	btfss	_ctmu_m+2,0,c
  7908  011AD2  0C00               	retlw	0
  7909                           
  7910                           ;settings.c: 87: ctmu_m.flags = 0;
  7911  011AD4  6A27               	clrf	_ctmu_m+2,c
  7912  011AD6  6A28               	clrf	_ctmu_m+3,c
  7913                           
  7914                           ;settings.c: 88: state = 0;
  7915  011AD8  0101               	movlb	1	; () banked
  7916  011ADA  6B37               	clrf	settings_auto_stop@state& (0+255),b
  7917                           
  7918                           ;settings.c: 89: settings_flag = 0;
  7919  011ADC  6B31               	clrf	_settings_flag& (0+255),b
  7920                           
  7921                           ; BSR set to: 1
  7922                           ;settings.c: 90: display(PRINT_TIME, "", "");
  7923  011ADE  ECD8  F095         	call	PL16	;call to abstracted procedure
  7924  011AE2  EC5C  F090         	call	_display
  7925                           
  7926                           ; BSR set to: 1
  7927                           ;settings.c: 91: return 1;
  7928  011AE6  0C01               	retlw	1
  7929  011AE8                     __end_of_settings_auto_stop:
  7930                           	opt stack 0
  7931  011AE8                     PL100:
  7932                           	opt stack 16
  7933  011AE8  0100               	movlb	0	; () banked
  7934  011AEA  6B61               	clrf	(strcpy@to+1)& (0+255),b
  7935  011AEC  0EAB               	movlw	low STR_40
  7936  011AEE  6F62               	movwf	strcpy@from& (0+255),b
  7937  011AF0  0EFF               	movlw	high STR_40
  7938  011AF2  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7939  011AF4  0012               	return	
  7940  011AF6                     __end_ofPL100:
  7941                           	opt stack 0
  7942  011AF6                     PL102:
  7943                           	opt stack 16
  7944  011AF6  0100               	movlb	0	; () banked
  7945  011AF8  6B61               	clrf	(strcpy@to+1)& (0+255),b
  7946  011AFA  0EB1               	movlw	low STR_41
  7947  011AFC  6F62               	movwf	strcpy@from& (0+255),b
  7948  011AFE  0EFF               	movlw	high STR_41
  7949  011B00  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7950  011B02  0012               	return	
  7951  011B04                     __end_ofPL102:
  7952                           	opt stack 0
  7953                           tblptru	equ	0xFF8
  7954                           tblptrh	equ	0xFF7
  7955                           tblptrl	equ	0xFF6
  7956                           tablat	equ	0xFF5
  7957                           prodh	equ	0xFF4
  7958                           prodl	equ	0xFF3
  7959                           intcon	equ	0xFF2
  7960                           intcon2	equ	0xFF1
  7961                           postinc0	equ	0xFEE
  7962                           wreg	equ	0xFE8
  7963                           indf1	equ	0xFE7
  7964                           postinc1	equ	0xFE6
  7965                           postdec1	equ	0xFE5
  7966                           fsr1h	equ	0xFE2
  7967                           fsr1l	equ	0xFE1
  7968                           indf2	equ	0xFDF
  7969                           postinc2	equ	0xFDE
  7970                           postdec2	equ	0xFDD
  7971                           plusw2	equ	0xFDB
  7972                           fsr2h	equ	0xFDA
  7973                           fsr2l	equ	0xFD9
  7974                           status	equ	0xFD8
  7975                           
  7976 ;; *************** function _settings_adjust_time *****************
  7977 ;; Defined at:
  7978 ;;		line 13 in file "settings.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;		None
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      unsigned char 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : E/0
  7989 ;;		On exit  : F/1
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;Total ram usage:        0 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:   16
  7999 ;; This function calls:
  8000 ;;		_RTCC_adjust_time_cursor
  8001 ;;		_RTCC_adjust_time_dec
  8002 ;;		_RTCC_adjust_time_inc
  8003 ;;		_RTCC_adjust_time_toggle
  8004 ;;		_display
  8005 ;; This function is called by:
  8006 ;;		_settings_task
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text21
  8011  012B2E                     __ptext21:
  8012                           	opt stack 0
  8013  012B2E                     _settings_adjust_time:
  8014                           	opt stack 12
  8015                           
  8016                           ;settings.c: 14: static uint8_t state = 0;
  8017                           ;settings.c: 15: switch (state) {
  8018                           
  8019                           ;incstack = 0
  8020  012B2E  D02E               	goto	l10490
  8021  012B30                     l10466:
  8022                           
  8023                           ; BSR set to: 1
  8024                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8025  012B30  D83F               	call	PL16	;call to abstracted procedure
  8026  012B32  EC5C  F090         	call	_display
  8027                           
  8028                           ; BSR set to: 1
  8029                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8030  012B36  0E8F               	movlw	low _now
  8031  012B38  0100               	movlb	0	; () banked
  8032  012B3A  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8033  012B3C  0E02               	movlw	high _now
  8034  012B3E  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8035  012B40  EC01  F0A2         	call	_RTCC_adjust_time_toggle	;wreg free
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;settings.c: 19: state = 1;
  8039  012B44  0E01               	movlw	1
  8040  012B46  0101               	movlb	1	; () banked
  8041  012B48  6F36               	movwf	settings_adjust_time@state& (0+255),b
  8042                           
  8043                           ;settings.c: 20: break;
  8044  012B4A  D025               	goto	l461
  8045  012B4C                     l462:
  8046                           
  8047                           ; BSR set to: 1
  8048                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8049  012B4C  A156               	btfss	(_port+25)& (0+255),0,b
  8050  012B4E  D008               	goto	l10476
  8051                           
  8052                           ; BSR set to: 1
  8053                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8054  012B50  9156               	bcf	(_port+25)& (0+255),0,b
  8055                           
  8056                           ; BSR set to: 1
  8057                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8058  012B52  0E8F               	movlw	low _now
  8059  012B54  0100               	movlb	0	; () banked
  8060  012B56  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8061  012B58  0E02               	movlw	high _now
  8062  012B5A  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8063  012B5C  EC6C  F09B         	call	_RTCC_adjust_time_cursor	;wreg free
  8064  012B60                     l10476:
  8065                           
  8066                           ;settings.c: 25: }
  8067                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8068  012B60  0101               	movlb	1	; () banked
  8069  012B62  A16D               	btfss	(_port+48)& (0+255),0,b
  8070  012B64  D008               	goto	l10482
  8071                           
  8072                           ; BSR set to: 1
  8073                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8074  012B66  916D               	bcf	(_port+48)& (0+255),0,b
  8075                           
  8076                           ; BSR set to: 1
  8077                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8078  012B68  0E8F               	movlw	low _now
  8079  012B6A  0100               	movlb	0	; () banked
  8080  012B6C  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8081  012B6E  0E02               	movlw	high _now
  8082  012B70  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8083  012B72  ECFE  F089         	call	_RTCC_adjust_time_inc	;wreg free
  8084  012B76                     l10482:
  8085                           
  8086                           ; BSR set to: 1
  8087                           ;settings.c: 29: }
  8088                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8089  012B76  A13F               	btfss	(_port+2)& (0+255),0,b
  8090  012B78  D00E               	goto	l461
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8094  012B7A  913F               	bcf	(_port+2)& (0+255),0,b
  8095                           
  8096                           ; BSR set to: 1
  8097                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8098  012B7C  0E8F               	movlw	low _now
  8099  012B7E  0100               	movlb	0	; () banked
  8100  012B80  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8101  012B82  0E02               	movlw	high _now
  8102  012B84  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8103  012B86  ECE8  F087         	call	_RTCC_adjust_time_dec	;wreg free
  8104  012B8A  D005               	goto	l461
  8105  012B8C                     l10490:
  8106  012B8C  0101               	movlb	1	; () banked
  8107  012B8E  5136               	movf	settings_adjust_time@state& (0+255),w,b
  8108                           
  8109                           ; Switch size 1, requested type "space"
  8110                           ; Number of cases is 2, Range of values is 0 to 1
  8111                           ; switch strategies available:
  8112                           ; Name         Instructions Cycles
  8113                           ; simple_byte            7     4 (average)
  8114                           ;	Chosen strategy is simple_byte
  8115  012B90  E0CF               	bz	l10466
  8116  012B92  0A01               	xorlw	1	; case 1
  8117  012B94  E0DB               	bz	l462
  8118  012B96                     l461:
  8119                           
  8120                           ; BSR set to: 1
  8121                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8122  012B96  A027               	btfss	_ctmu_m+2,0,c
  8123  012B98  0C00               	retlw	0
  8124                           
  8125                           ; BSR set to: 1
  8126                           ;settings.c: 39: ctmu_m.flags = 0;
  8127  012B9A  6A27               	clrf	_ctmu_m+2,c
  8128  012B9C  6A28               	clrf	_ctmu_m+3,c
  8129                           
  8130                           ;settings.c: 40: now.edit.flags = 0;
  8131  012B9E  0102               	movlb	2	; () banked
  8132  012BA0  6B9C               	clrf	(_now+13)& (0+255),b
  8133                           
  8134                           ;settings.c: 41: state = 0;
  8135  012BA2  0101               	movlb	1	; () banked
  8136  012BA4  6B36               	clrf	settings_adjust_time@state& (0+255),b
  8137                           
  8138                           ;settings.c: 42: settings_flag = 0;
  8139  012BA6  6B31               	clrf	_settings_flag& (0+255),b
  8140                           
  8141                           ; BSR set to: 1
  8142                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8143  012BA8  D803               	call	PL16	;call to abstracted procedure
  8144  012BAA  EC5C  F090         	call	_display
  8145                           
  8146                           ; BSR set to: 1
  8147                           ;settings.c: 44: return 1;
  8148  012BAE  0C01               	retlw	1
  8149  012BB0                     __end_of_settings_adjust_time:
  8150                           	opt stack 0
  8151  012BB0                     PL16:
  8152                           	opt stack 12
  8153  012BB0  0EE6               	movlw	low (STR_96+3)
  8154  012BB2  0100               	movlb	0	; () banked
  8155  012BB4  6F60               	movwf	display@str0& (0+255),b
  8156  012BB6  0EFF               	movlw	high (STR_96+3)
  8157  012BB8  6F61               	movwf	(display@str0+1)& (0+255),b
  8158  012BBA  0EE6               	movlw	low (STR_96+3)
  8159  012BBC  6F62               	movwf	display@str1& (0+255),b
  8160  012BBE  0EFF               	movlw	high (STR_96+3)
  8161  012BC0  6F63               	movwf	(display@str1+1)& (0+255),b
  8162  012BC2  0C01               	retlw	1
  8163  012BC4                     __end_ofPL16:
  8164                           	opt stack 0
  8165                           tblptru	equ	0xFF8
  8166                           tblptrh	equ	0xFF7
  8167                           tblptrl	equ	0xFF6
  8168                           tablat	equ	0xFF5
  8169                           prodh	equ	0xFF4
  8170                           prodl	equ	0xFF3
  8171                           intcon	equ	0xFF2
  8172                           intcon2	equ	0xFF1
  8173                           postinc0	equ	0xFEE
  8174                           wreg	equ	0xFE8
  8175                           indf1	equ	0xFE7
  8176                           postinc1	equ	0xFE6
  8177                           postdec1	equ	0xFE5
  8178                           fsr1h	equ	0xFE2
  8179                           fsr1l	equ	0xFE1
  8180                           indf2	equ	0xFDF
  8181                           postinc2	equ	0xFDE
  8182                           postdec2	equ	0xFDD
  8183                           plusw2	equ	0xFDB
  8184                           fsr2h	equ	0xFDA
  8185                           fsr2l	equ	0xFD9
  8186                           status	equ	0xFD8
  8187                           
  8188 ;; *************** function _RTCC_adjust_time_toggle *****************
  8189 ;; Defined at:
  8190 ;;		line 269 in file "../My_library/My_RTCC.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  tm              2    0[BANK0 ] PTR struct .
  8193 ;;		 -> now(14), 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;		None               void
  8198 ;; Registers used:
  8199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : F/0
  8202 ;;		On exit  : F/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;Total ram usage:        2 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:   11
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_settings_adjust_time
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text22
  8220  014402                     __ptext22:
  8221                           	opt stack 0
  8222  014402                     _RTCC_adjust_time_toggle:
  8223                           	opt stack 0
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;My_RTCC.c: 270: if (tm->edit.flags) {
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;incstack = 0
  8230  014402  D808               	call	PL150	;call to abstracted procedure
  8231  014404  50DF               	movf	indf2,w,c
  8232  014406  E003               	bz	l10112
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;My_RTCC.c: 271: tm->edit.flags = 0;
  8236  014408  D805               	call	PL150	;call to abstracted procedure
  8237  01440A  6ADF               	clrf	indf2,c
  8238                           
  8239                           ;My_RTCC.c: 272: } else {
  8240  01440C  0C00               	retlw	0
  8241  01440E                     l10112:
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;My_RTCC.c: 273: tm->edit.flag.ss = 1;
  8245  01440E  D802               	call	PL150	;call to abstracted procedure
  8246  014410  80DF               	bsf	indf2,0,c
  8247                           
  8248                           ; BSR set to: 0
  8249  014412  0012               	return		;funcret
  8250  014414                     __end_of_RTCC_adjust_time_toggle:
  8251                           	opt stack 0
  8252  014414                     PL150:
  8253                           	opt stack 16
  8254  014414  EE20 F00D          	lfsr	2,13
  8255  014418  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  8256  01441A  26D9               	addwf	fsr2l,f,c
  8257  01441C  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  8258  01441E  22DA               	addwfc	fsr2h,f,c
  8259  014420  0012               	return	
  8260  014422                     __end_ofPL150:
  8261                           	opt stack 0
  8262                           tblptru	equ	0xFF8
  8263                           tblptrh	equ	0xFF7
  8264                           tblptrl	equ	0xFF6
  8265                           tablat	equ	0xFF5
  8266                           prodh	equ	0xFF4
  8267                           prodl	equ	0xFF3
  8268                           intcon	equ	0xFF2
  8269                           intcon2	equ	0xFF1
  8270                           postinc0	equ	0xFEE
  8271                           wreg	equ	0xFE8
  8272                           indf1	equ	0xFE7
  8273                           postinc1	equ	0xFE6
  8274                           postdec1	equ	0xFE5
  8275                           fsr1h	equ	0xFE2
  8276                           fsr1l	equ	0xFE1
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           plusw2	equ	0xFDB
  8281                           fsr2h	equ	0xFDA
  8282                           fsr2l	equ	0xFD9
  8283                           status	equ	0xFD8
  8284                           
  8285 ;; *************** function _RTCC_adjust_time_inc *****************
  8286 ;; Defined at:
  8287 ;;		line 287 in file "../My_library/My_RTCC.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;  tm              2   49[BANK0 ] PTR struct .
  8290 ;;		 -> now(14), 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  i               1   55[BANK0 ] unsigned char 
  8293 ;;  i               1   56[BANK0 ] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;		None               void
  8296 ;; Registers used:
  8297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : F/0
  8300 ;;		On exit  : F/1
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8304 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8305 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8306 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8307 ;;Total ram usage:        8 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:   15
  8310 ;; This function calls:
  8311 ;;		_RTCC_from_RTCC
  8312 ;;		_RTCC_from_epoch
  8313 ;;		___lmul
  8314 ;;		_month_length
  8315 ;; This function is called by:
  8316 ;;		_settings_adjust_time
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text23
  8321  0113FC                     __ptext23:
  8322                           	opt stack 0
  8323  0113FC                     _RTCC_adjust_time_inc:
  8324                           	opt stack 12
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;My_RTCC.c: 288: RTCC_from_RTCC(tm);
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;incstack = 0
  8331  0113FC  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  8332  011400  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  8333  011404  EC92  F0A2         	call	_RTCC_from_RTCC	;wreg free
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;My_RTCC.c: 289: if (tm->edit.flag.ss) tm->epoch += 1;
  8337  011408  D87E               	call	PL56	;call to abstracted procedure
  8338  01140A  A0DF               	btfss	indf2,0,c
  8339  01140C  D003               	goto	l984
  8340                           
  8341                           ; BSR set to: 0
  8342  01140E  D893               	call	PL84	;call to abstracted procedure
  8343  011410  ECBA  F09F         	call	PL296	;call to abstracted procedure
  8344  011414                     l984:
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;My_RTCC.c: 290: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  8348  011414  D878               	call	PL56	;call to abstracted procedure
  8349  011416  A2DF               	btfss	indf2,1,c
  8350  011418  D007               	goto	l10148
  8351                           
  8352                           ; BSR set to: 0
  8353  01141A  0E3C               	movlw	60
  8354  01141C  D88C               	call	PL84	;call to abstracted procedure
  8355  01141E  26DE               	addwf	postinc2,f,c
  8356  011420  0E00               	movlw	0
  8357  011422  22DE               	addwfc	postinc2,f,c
  8358  011424  22DE               	addwfc	postinc2,f,c
  8359  011426  22DE               	addwfc	postinc2,f,c
  8360  011428                     l10148:
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;My_RTCC.c: 291: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  8364  011428  D86E               	call	PL56	;call to abstracted procedure
  8365  01142A  A4DF               	btfss	indf2,2,c
  8366  01142C  D008               	goto	l10152
  8367                           
  8368                           ; BSR set to: 0
  8369  01142E  D883               	call	PL84	;call to abstracted procedure
  8370  011430  0E10               	movlw	16
  8371  011432  26DE               	addwf	postinc2,f,c
  8372  011434  0E0E               	movlw	14
  8373  011436  22DE               	addwfc	postinc2,f,c
  8374  011438  0E00               	movlw	0
  8375  01143A  22DE               	addwfc	postinc2,f,c
  8376  01143C  22DE               	addwfc	postinc2,f,c
  8377  01143E                     l10152:
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;My_RTCC.c: 292: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  8381  01143E  D863               	call	PL56	;call to abstracted procedure
  8382  011440  A6DF               	btfss	indf2,3,c
  8383  011442  D009               	goto	l10156
  8384                           
  8385                           ; BSR set to: 0
  8386  011444  D878               	call	PL84	;call to abstracted procedure
  8387  011446  0E80               	movlw	128
  8388  011448  26DE               	addwf	postinc2,f,c
  8389  01144A  0E51               	movlw	81
  8390  01144C  22DE               	addwfc	postinc2,f,c
  8391  01144E  0E01               	movlw	1
  8392  011450  22DE               	addwfc	postinc2,f,c
  8393  011452  0E00               	movlw	0
  8394  011454  22DE               	addwfc	postinc2,f,c
  8395  011456                     l10156:
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;My_RTCC.c: 293: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  8399  011456  D857               	call	PL56	;call to abstracted procedure
  8400  011458  A8DF               	btfss	indf2,4,c
  8401  01145A  D010               	goto	l10160
  8402                           
  8403                           ; BSR set to: 0
  8404  01145C  EE20 F009          	lfsr	2,9
  8405  011460  D859               	call	PL64	;call to abstracted procedure
  8406  011462  6F66               	movwf	month_length@month& (0+255),b
  8407  011464  EE20 F00A          	lfsr	2,10
  8408  011468  D855               	call	PL64	;call to abstracted procedure
  8409  01146A  EC3E  F09A         	call	_month_length
  8410  01146E  EC68  F088         	call	PL8	;call to abstracted procedure
  8411  011472  ECEC  F09D         	call	___lmul	;wreg free
  8412  011476  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  8413  01147A  D852               	call	PL74	;call to abstracted procedure
  8414  01147C                     l10160:
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;My_RTCC.c: 294: if (tm->edit.flag.YY) {
  8418  01147C  D844               	call	PL56	;call to abstracted procedure
  8419  01147E  AADF               	btfss	indf2,5,c
  8420  011480  D035               	goto	l10182
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;My_RTCC.c: 295: for (uint8_t i = tm->MM; i <= 12; i++) {
  8424  011482  EE20 F009          	lfsr	2,9
  8425  011486  D846               	call	PL64	;call to abstracted procedure
  8426  011488  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  8427  01148A                     l10164:
  8428                           
  8429                           ; BSR set to: 0
  8430  01148A  0E0C               	movlw	12
  8431  01148C  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  8432  01148E  D001               	goto	l10168
  8433  011490  D010               	goto	l10174
  8434  011492                     l10168:
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;My_RTCC.c: 296: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  8438  011492  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  8439  011496  EE20 F00A          	lfsr	2,10
  8440  01149A  D83C               	call	PL64	;call to abstracted procedure
  8441  01149C  EC3E  F09A         	call	_month_length
  8442  0114A0  EC68  F088         	call	PL8	;call to abstracted procedure
  8443  0114A4  ECEC  F09D         	call	___lmul	;wreg free
  8444  0114A8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  8445  0114AC  D839               	call	PL74	;call to abstracted procedure
  8446                           
  8447                           ; BSR set to: 0
  8448  0114AE  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  8449  0114B0  D7EC               	goto	l10164
  8450  0114B2                     l10174:
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;My_RTCC.c: 297: }
  8454                           ;My_RTCC.c: 298: for (uint8_t i = 1; i < tm->MM; i++) {
  8455  0114B2  0E01               	movlw	1
  8456  0114B4  6F97               	movwf	RTCC_adjust_time_inc@i_2943& (0+255),b
  8457  0114B6  D011               	goto	l10180
  8458  0114B8                     l10176:
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;My_RTCC.c: 299: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  8462  0114B8  C097  F066         	movff	RTCC_adjust_time_inc@i_2943,month_length@month
  8463  0114BC  EE20 F00A          	lfsr	2,10
  8464  0114C0  D829               	call	PL64	;call to abstracted procedure
  8465  0114C2  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  8466  0114C4  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  8467  0114C6  EC3E  F09A         	call	_month_length
  8468  0114CA  EC68  F088         	call	PL8	;call to abstracted procedure
  8469  0114CE  ECEC  F09D         	call	___lmul	;wreg free
  8470  0114D2  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  8471  0114D6  D824               	call	PL74	;call to abstracted procedure
  8472                           
  8473                           ; BSR set to: 0
  8474  0114D8  2B97               	incf	RTCC_adjust_time_inc@i_2943& (0+255),f,b
  8475  0114DA                     l10180:
  8476                           
  8477                           ; BSR set to: 0
  8478  0114DA  EE20 F009          	lfsr	2,9
  8479  0114DE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  8480  0114E0  26D9               	addwf	fsr2l,f,c
  8481  0114E2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  8482  0114E4  22DA               	addwfc	fsr2h,f,c
  8483  0114E6  50DE               	movf	postinc2,w,c
  8484  0114E8  5D97               	subwf	RTCC_adjust_time_inc@i_2943& (0+255),w,b
  8485  0114EA  E3E6               	bnc	l10176
  8486  0114EC                     l10182:
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;My_RTCC.c: 300: }
  8490                           ;My_RTCC.c: 301: }
  8491                           ;My_RTCC.c: 303: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  8492  0114EC  D824               	call	PL84	;call to abstracted procedure
  8493  0114EE  EC91  F088         	call	PL182	;call to abstracted procedure
  8494  0114F2  E303               	bnc	l10186
  8495                           
  8496                           ; BSR set to: 0
  8497  0114F4  D820               	call	PL84	;call to abstracted procedure
  8498  0114F6  ECF2  F08D         	call	PL192	;call to abstracted procedure
  8499  0114FA                     l10186:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;My_RTCC.c: 304: RTCC_from_epoch(&now);
  8503  0114FA  EC9E  F088         	call	PL342	;call to abstracted procedure
  8504  0114FE  EC86  F0A2         	call	_RTCC_from_epoch	;wreg free
  8505                           
  8506                           ; BSR set to: 15
  8507                           ;My_RTCC.c: 305: time_change_flag = 1;
  8508                           
  8509                           ; BSR set to: 1
  8510  011502  EF9A  F088         	goto	PL340	;call to abstracted procedure
  8511  011506                     __end_of_RTCC_adjust_time_inc:
  8512                           	opt stack 0
  8513  011506                     PL56:
  8514                           	opt stack 12
  8515  011506  EE20 F00D          	lfsr	2,13
  8516  01150A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  8517  01150C  26D9               	addwf	fsr2l,f,c
  8518  01150E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  8519  011510  22DA               	addwfc	fsr2h,f,c
  8520  011512  0012               	return	
  8521  011514                     __end_ofPL56:
  8522                           	opt stack 0
  8523  011514                     PL64:
  8524                           	opt stack 12
  8525  011514  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  8526  011516  26D9               	addwf	fsr2l,f,c
  8527  011518  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  8528  01151A  22DA               	addwfc	fsr2h,f,c
  8529  01151C  50DF               	movf	indf2,w,c
  8530  01151E  0012               	return	
  8531  011520                     __end_ofPL64:
  8532                           	opt stack 0
  8533  011520                     PL74:
  8534                           	opt stack 12
  8535  011520  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  8536  011524  516D               	movf	?___lmul& (0+255),w,b
  8537  011526  26DE               	addwf	postinc2,f,c
  8538  011528  516E               	movf	(?___lmul+1)& (0+255),w,b
  8539  01152A  22DE               	addwfc	postinc2,f,c
  8540  01152C  516F               	movf	(?___lmul+2)& (0+255),w,b
  8541  01152E  22DE               	addwfc	postinc2,f,c
  8542  011530  5170               	movf	(?___lmul+3)& (0+255),w,b
  8543  011532  22DE               	addwfc	postinc2,f,c
  8544  011534  0012               	return	
  8545  011536                     __end_ofPL74:
  8546                           	opt stack 0
  8547  011536                     PL84:
  8548                           	opt stack 12
  8549  011536  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  8550  01153A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  8551  01153E  0012               	return	
  8552  011540                     __end_ofPL84:
  8553                           	opt stack 0
  8554                           tblptru	equ	0xFF8
  8555                           tblptrh	equ	0xFF7
  8556                           tblptrl	equ	0xFF6
  8557                           tablat	equ	0xFF5
  8558                           prodh	equ	0xFF4
  8559                           prodl	equ	0xFF3
  8560                           intcon	equ	0xFF2
  8561                           intcon2	equ	0xFF1
  8562                           postinc0	equ	0xFEE
  8563                           wreg	equ	0xFE8
  8564                           indf1	equ	0xFE7
  8565                           postinc1	equ	0xFE6
  8566                           postdec1	equ	0xFE5
  8567                           fsr1h	equ	0xFE2
  8568                           fsr1l	equ	0xFE1
  8569                           indf2	equ	0xFDF
  8570                           postinc2	equ	0xFDE
  8571                           postdec2	equ	0xFDD
  8572                           plusw2	equ	0xFDB
  8573                           fsr2h	equ	0xFDA
  8574                           fsr2l	equ	0xFD9
  8575                           status	equ	0xFD8
  8576                           
  8577 ;; *************** function _RTCC_adjust_time_dec *****************
  8578 ;; Defined at:
  8579 ;;		line 308 in file "../My_library/My_RTCC.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  tm              2   49[BANK0 ] PTR struct .
  8582 ;;		 -> now(14), 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  i               1   55[BANK0 ] unsigned char 
  8585 ;;  i               1   56[BANK0 ] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;		None               void
  8588 ;; Registers used:
  8589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : F/0
  8592 ;;		On exit  : F/1
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8599 ;;Total ram usage:        8 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:   15
  8602 ;; This function calls:
  8603 ;;		_RTCC_from_RTCC
  8604 ;;		_RTCC_from_epoch
  8605 ;;		___lmul
  8606 ;;		_month_length
  8607 ;; This function is called by:
  8608 ;;		_settings_adjust_time
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text24
  8613  010FD0                     __ptext24:
  8614                           	opt stack 0
  8615  010FD0                     _RTCC_adjust_time_dec:
  8616                           	opt stack 12
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;My_RTCC.c: 309: RTCC_from_RTCC(tm);
  8620                           
  8621                           ; BSR set to: 1
  8622                           ;incstack = 0
  8623  010FD0  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  8624  010FD4  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  8625  010FD8  EC92  F0A2         	call	_RTCC_from_RTCC	;wreg free
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;My_RTCC.c: 310: if (tm->edit.flag.ss) tm->epoch -= 1;
  8629  010FDC  D885               	call	PL54	;call to abstracted procedure
  8630  010FDE  A0DF               	btfss	indf2,0,c
  8631  010FE0  D003               	goto	l999
  8632                           
  8633                           ; BSR set to: 0
  8634  010FE2  D89A               	call	PL86	;call to abstracted procedure
  8635  010FE4  06DE               	decf	postinc2,f,c
  8636  010FE6  D8AF               	call	PL346	;call to abstracted procedure
  8637  010FE8                     l999:
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;My_RTCC.c: 311: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  8641  010FE8  D87F               	call	PL54	;call to abstracted procedure
  8642  010FEA  A2DF               	btfss	indf2,1,c
  8643  010FEC  D004               	goto	l10198
  8644                           
  8645                           ; BSR set to: 0
  8646  010FEE  0E3C               	movlw	60
  8647  010FF0  D893               	call	PL86	;call to abstracted procedure
  8648  010FF2  5EDE               	subwf	postinc2,f,c
  8649  010FF4  D8A8               	call	PL346	;call to abstracted procedure
  8650  010FF6                     l10198:
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;My_RTCC.c: 312: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  8654  010FF6  D878               	call	PL54	;call to abstracted procedure
  8655  010FF8  A4DF               	btfss	indf2,2,c
  8656  010FFA  D008               	goto	l10202
  8657                           
  8658                           ; BSR set to: 0
  8659  010FFC  D88D               	call	PL86	;call to abstracted procedure
  8660  010FFE  0E10               	movlw	16
  8661  011000  5EDE               	subwf	postinc2,f,c
  8662  011002  0E0E               	movlw	14
  8663  011004  5ADE               	subwfb	postinc2,f,c
  8664  011006  0E00               	movlw	0
  8665  011008  5ADE               	subwfb	postinc2,f,c
  8666  01100A  5ADE               	subwfb	postinc2,f,c
  8667  01100C                     l10202:
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;My_RTCC.c: 313: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  8671  01100C  D86D               	call	PL54	;call to abstracted procedure
  8672  01100E  A6DF               	btfss	indf2,3,c
  8673  011010  D009               	goto	l10206
  8674                           
  8675                           ; BSR set to: 0
  8676  011012  D882               	call	PL86	;call to abstracted procedure
  8677  011014  0E80               	movlw	128
  8678  011016  5EDE               	subwf	postinc2,f,c
  8679  011018  0E51               	movlw	81
  8680  01101A  5ADE               	subwfb	postinc2,f,c
  8681  01101C  0E01               	movlw	1
  8682  01101E  5ADE               	subwfb	postinc2,f,c
  8683  011020  0E00               	movlw	0
  8684  011022  5ADE               	subwfb	postinc2,f,c
  8685  011024                     l10206:
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;My_RTCC.c: 314: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  8689  011024  D861               	call	PL54	;call to abstracted procedure
  8690  011026  A8DF               	btfss	indf2,4,c
  8691  011028  D00F               	goto	l10210
  8692                           
  8693                           ; BSR set to: 0
  8694  01102A  EE20 F009          	lfsr	2,9
  8695  01102E  D863               	call	PL60	;call to abstracted procedure
  8696  011030  6F66               	movwf	month_length@month& (0+255),b
  8697  011032  EE20 F00A          	lfsr	2,10
  8698  011036  D85F               	call	PL60	;call to abstracted procedure
  8699  011038  EC3E  F09A         	call	_month_length
  8700  01103C  D849               	call	PL8	;call to abstracted procedure
  8701  01103E  ECEC  F09D         	call	___lmul	;wreg free
  8702  011042  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  8703  011046  D85D               	call	PL68	;call to abstracted procedure
  8704  011048                     l10210:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;My_RTCC.c: 315: if (tm->edit.flag.YY) {
  8708  011048  D84F               	call	PL54	;call to abstracted procedure
  8709  01104A  AADF               	btfss	indf2,5,c
  8710  01104C  D031               	goto	l10232
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;My_RTCC.c: 316: for (uint8_t i = tm->MM; i >= 1; i--) {
  8714  01104E  EE20 F009          	lfsr	2,9
  8715  011052  D851               	call	PL60	;call to abstracted procedure
  8716  011054  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  8717  011056                     l10214:
  8718                           
  8719                           ; BSR set to: 0
  8720  011056  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  8721  011058  E00F               	bz	l10224
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;My_RTCC.c: 317: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  8725  01105A  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  8726  01105E  EE20 F00A          	lfsr	2,10
  8727  011062  D849               	call	PL60	;call to abstracted procedure
  8728  011064  EC3E  F09A         	call	_month_length
  8729  011068  D833               	call	PL8	;call to abstracted procedure
  8730  01106A  ECEC  F09D         	call	___lmul	;wreg free
  8731  01106E  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  8732  011072  D847               	call	PL68	;call to abstracted procedure
  8733                           
  8734                           ; BSR set to: 0
  8735  011074  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  8736  011076  D7EF               	goto	l10214
  8737  011078                     l10224:
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;My_RTCC.c: 318: }
  8741                           ;My_RTCC.c: 319: for (uint8_t i = 12; i > tm->MM; i--) {
  8742  011078  0E0C               	movlw	12
  8743  01107A  6F97               	movwf	RTCC_adjust_time_dec@i_2973& (0+255),b
  8744  01107C  D010               	goto	l10230
  8745  01107E                     l10226:
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;My_RTCC.c: 320: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  8749  01107E  C097  F066         	movff	RTCC_adjust_time_dec@i_2973,month_length@month
  8750  011082  EE20 F00A          	lfsr	2,10
  8751  011086  D837               	call	PL60	;call to abstracted procedure
  8752  011088  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  8753  01108A  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  8754  01108C  EC3E  F09A         	call	_month_length
  8755  011090  D81F               	call	PL8	;call to abstracted procedure
  8756  011092  ECEC  F09D         	call	___lmul	;wreg free
  8757  011096  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  8758  01109A  D833               	call	PL68	;call to abstracted procedure
  8759                           
  8760                           ; BSR set to: 0
  8761  01109C  0797               	decf	RTCC_adjust_time_dec@i_2973& (0+255),f,b
  8762  01109E                     l10230:
  8763                           
  8764                           ; BSR set to: 0
  8765  01109E  EE20 F009          	lfsr	2,9
  8766  0110A2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  8767  0110A4  26D9               	addwf	fsr2l,f,c
  8768  0110A6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  8769  0110A8  22DA               	addwfc	fsr2h,f,c
  8770  0110AA  5197               	movf	RTCC_adjust_time_dec@i_2973& (0+255),w,b
  8771  0110AC  5CDE               	subwf	postinc2,w,c
  8772  0110AE  E3E7               	bnc	l10226
  8773  0110B0                     l10232:
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;My_RTCC.c: 321: }
  8777                           ;My_RTCC.c: 322: }
  8778                           ;My_RTCC.c: 324: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  8779  0110B0  D833               	call	PL86	;call to abstracted procedure
  8780  0110B2  D837               	call	PL182	;call to abstracted procedure
  8781  0110B4  E309               	bnc	l10236
  8782                           
  8783                           ; BSR set to: 0
  8784  0110B6  D830               	call	PL86	;call to abstracted procedure
  8785  0110B8  0E80               	movlw	128
  8786  0110BA  26DE               	addwf	postinc2,f,c
  8787  0110BC  0E13               	movlw	19
  8788  0110BE  22DE               	addwfc	postinc2,f,c
  8789  0110C0  0E19               	movlw	25
  8790  0110C2  22DE               	addwfc	postinc2,f,c
  8791  0110C4  0EBC               	movlw	188
  8792  0110C6  22DE               	addwfc	postinc2,f,c
  8793  0110C8                     l10236:
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;My_RTCC.c: 325: RTCC_from_epoch(&now);
  8797  0110C8  D839               	call	PL342	;call to abstracted procedure
  8798  0110CA  EC86  F0A2         	call	_RTCC_from_epoch	;wreg free
  8799                           
  8800                           ; BSR set to: 15
  8801                           ;My_RTCC.c: 326: time_change_flag = 1;
  8802                           
  8803                           ; BSR set to: 1
  8804  0110CE  D032               	goto	PL340	;call to abstracted procedure
  8805  0110D0                     __end_of_RTCC_adjust_time_dec:
  8806                           	opt stack 0
  8807  0110D0                     PL8:
  8808                           	opt stack 12
  8809  0110D0  6F6D               	movwf	___lmul@multiplier& (0+255),b
  8810  0110D2  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  8811  0110D4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  8812  0110D6  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  8813  0110D8  0E80               	movlw	128
  8814  0110DA  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8815  0110DC  0E51               	movlw	81
  8816  0110DE  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8817  0110E0  0E01               	movlw	1
  8818  0110E2  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8819  0110E4  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8820  0110E6  0C01               	retlw	1
  8821  0110E8                     __end_ofPL8:
  8822                           	opt stack 0
  8823  0110E8                     PL54:
  8824                           	opt stack 12
  8825  0110E8  EE20 F00D          	lfsr	2,13
  8826  0110EC  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  8827  0110EE  26D9               	addwf	fsr2l,f,c
  8828  0110F0  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  8829  0110F2  22DA               	addwfc	fsr2h,f,c
  8830  0110F4  0012               	return	
  8831  0110F6                     __end_ofPL54:
  8832                           	opt stack 0
  8833  0110F6                     PL60:
  8834                           	opt stack 12
  8835  0110F6  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  8836  0110F8  26D9               	addwf	fsr2l,f,c
  8837  0110FA  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  8838  0110FC  22DA               	addwfc	fsr2h,f,c
  8839  0110FE  50DF               	movf	indf2,w,c
  8840  011100  0012               	return	
  8841  011102                     __end_ofPL60:
  8842                           	opt stack 0
  8843  011102                     PL68:
  8844                           	opt stack 12
  8845  011102  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  8846  011106  516D               	movf	?___lmul& (0+255),w,b
  8847  011108  5EDE               	subwf	postinc2,f,c
  8848  01110A  516E               	movf	(?___lmul+1)& (0+255),w,b
  8849  01110C  5ADE               	subwfb	postinc2,f,c
  8850  01110E  516F               	movf	(?___lmul+2)& (0+255),w,b
  8851  011110  5ADE               	subwfb	postinc2,f,c
  8852  011112  5170               	movf	(?___lmul+3)& (0+255),w,b
  8853  011114  5ADE               	subwfb	postinc2,f,c
  8854  011116  0012               	return	
  8855  011118                     __end_ofPL68:
  8856                           	opt stack 0
  8857  011118                     PL86:
  8858                           	opt stack 12
  8859  011118  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  8860  01111C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  8861  011120  0012               	return	
  8862  011122                     __end_ofPL86:
  8863                           	opt stack 0
  8864  011122                     PL182:
  8865                           	opt stack 12
  8866  011122  0E80               	movlw	128
  8867  011124  5CDE               	subwf	postinc2,w,c
  8868  011126  0E13               	movlw	19
  8869  011128  58DE               	subwfb	postinc2,w,c
  8870  01112A  0E19               	movlw	25
  8871  01112C  58DE               	subwfb	postinc2,w,c
  8872  01112E  0EBC               	movlw	188
  8873  011130  58DE               	subwfb	postinc2,w,c
  8874  011132  0012               	return	
  8875  011134                     __end_ofPL182:
  8876                           	opt stack 0
  8877  011134                     PL340:
  8878                           	opt stack 12
  8879  011134  0E01               	movlw	1
  8880  011136  0101               	movlb	1	; () banked
  8881  011138  6F35               	movwf	_time_change_flag& (0+255),b
  8882  01113A  0C01               	retlw	1	;funcret
  8883  01113C                     __end_ofPL340:
  8884                           	opt stack 0
  8885  01113C                     PL342:
  8886                           	opt stack 12
  8887  01113C  0E8F               	movlw	low _now
  8888  01113E  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  8889  011140  0E02               	movlw	high _now
  8890  011142  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  8891  011144  0012               	return	
  8892  011146                     __end_ofPL342:
  8893                           	opt stack 0
  8894  011146                     PL346:
  8895                           	opt stack 12
  8896  011146  0E00               	movlw	0
  8897  011148  5ADE               	subwfb	postinc2,f,c
  8898  01114A  5ADE               	subwfb	postinc2,f,c
  8899  01114C  5ADE               	subwfb	postinc2,f,c
  8900  01114E  0C00               	retlw	0
  8901  011150                     __end_ofPL346:
  8902                           	opt stack 0
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           prodh	equ	0xFF4
  8908                           prodl	equ	0xFF3
  8909                           intcon	equ	0xFF2
  8910                           intcon2	equ	0xFF1
  8911                           postinc0	equ	0xFEE
  8912                           wreg	equ	0xFE8
  8913                           indf1	equ	0xFE7
  8914                           postinc1	equ	0xFE6
  8915                           postdec1	equ	0xFE5
  8916                           fsr1h	equ	0xFE2
  8917                           fsr1l	equ	0xFE1
  8918                           indf2	equ	0xFDF
  8919                           postinc2	equ	0xFDE
  8920                           postdec2	equ	0xFDD
  8921                           plusw2	equ	0xFDB
  8922                           fsr2h	equ	0xFDA
  8923                           fsr2l	equ	0xFD9
  8924                           status	equ	0xFD8
  8925                           
  8926 ;; *************** function _RTCC_adjust_time_cursor *****************
  8927 ;; Defined at:
  8928 ;;		line 277 in file "../My_library/My_RTCC.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  tm              2    0[BANK0 ] PTR struct .
  8931 ;;		 -> now(14), 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;		None               void
  8936 ;; Registers used:
  8937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : F/0
  8940 ;;		On exit  : F/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8946 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8947 ;;Total ram usage:        2 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; Hardware stack levels required when called:   11
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_settings_adjust_time
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text25
  8958  0136D8                     __ptext25:
  8959                           	opt stack 0
  8960  0136D8                     _RTCC_adjust_time_cursor:
  8961                           	opt stack 0
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;My_RTCC.c: 278: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
  8965                           
  8966                           ; BSR set to: 1
  8967                           ;incstack = 0
  8968  0136D8  D82C               	call	PL20	;call to abstracted procedure
  8969  0136DA  A0DF               	btfss	indf2,0,c
  8970  0136DC  D004               	goto	l10118
  8971                           
  8972                           ; BSR set to: 0
  8973  0136DE  D829               	call	PL20	;call to abstracted procedure
  8974  0136E0  0E02               	movlw	2
  8975  0136E2  6EDF               	movwf	indf2,c
  8976  0136E4  0C02               	retlw	2
  8977  0136E6                     l10118:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;My_RTCC.c: 279: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
  8981  0136E6  D825               	call	PL20	;call to abstracted procedure
  8982  0136E8  A2DF               	btfss	indf2,1,c
  8983  0136EA  D004               	goto	l10122
  8984                           
  8985                           ; BSR set to: 0
  8986  0136EC  D822               	call	PL20	;call to abstracted procedure
  8987  0136EE  0E04               	movlw	4
  8988  0136F0  6EDF               	movwf	indf2,c
  8989  0136F2  0C04               	retlw	4
  8990  0136F4                     l10122:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;My_RTCC.c: 280: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
  8994  0136F4  D81E               	call	PL20	;call to abstracted procedure
  8995  0136F6  A4DF               	btfss	indf2,2,c
  8996  0136F8  D004               	goto	l10126
  8997                           
  8998                           ; BSR set to: 0
  8999  0136FA  D81B               	call	PL20	;call to abstracted procedure
  9000  0136FC  0E08               	movlw	8
  9001  0136FE  6EDF               	movwf	indf2,c
  9002  013700  0C08               	retlw	8
  9003  013702                     l10126:
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;My_RTCC.c: 281: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
  9007  013702  D817               	call	PL20	;call to abstracted procedure
  9008  013704  A6DF               	btfss	indf2,3,c
  9009  013706  D004               	goto	l10130
  9010                           
  9011                           ; BSR set to: 0
  9012  013708  D814               	call	PL20	;call to abstracted procedure
  9013  01370A  0E10               	movlw	16
  9014  01370C  6EDF               	movwf	indf2,c
  9015  01370E  0C10               	retlw	16
  9016  013710                     l10130:
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;My_RTCC.c: 282: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
  9020  013710  D810               	call	PL20	;call to abstracted procedure
  9021  013712  A8DF               	btfss	indf2,4,c
  9022  013714  D004               	goto	l10134
  9023                           
  9024                           ; BSR set to: 0
  9025  013716  D80D               	call	PL20	;call to abstracted procedure
  9026  013718  0E20               	movlw	32
  9027  01371A  6EDF               	movwf	indf2,c
  9028  01371C  0C20               	retlw	32
  9029  01371E                     l10134:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;My_RTCC.c: 283: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
  9033  01371E  D809               	call	PL20	;call to abstracted procedure
  9034  013720  AADF               	btfss	indf2,5,c
  9035  013722  D004               	goto	l10138
  9036                           
  9037                           ; BSR set to: 0
  9038  013724  D806               	call	PL20	;call to abstracted procedure
  9039  013726  0E01               	movlw	1
  9040  013728  6EDF               	movwf	indf2,c
  9041  01372A  0C01               	retlw	1
  9042  01372C                     l10138:
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;My_RTCC.c: 284: else tm->edit.flags = 0x00;
  9046  01372C  D802               	call	PL20	;call to abstracted procedure
  9047  01372E  6ADF               	clrf	indf2,c
  9048                           
  9049                           ; BSR set to: 0
  9050  013730  0C00               	retlw	0	;funcret
  9051  013732                     __end_of_RTCC_adjust_time_cursor:
  9052                           	opt stack 0
  9053  013732                     PL20:
  9054                           	opt stack 16
  9055  013732  EE20 F00D          	lfsr	2,13
  9056  013736  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
  9057  013738  26D9               	addwf	fsr2l,f,c
  9058  01373A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
  9059  01373C  22DA               	addwfc	fsr2h,f,c
  9060  01373E  0012               	return	
  9061  013740                     __end_ofPL20:
  9062                           	opt stack 0
  9063                           tblptru	equ	0xFF8
  9064                           tblptrh	equ	0xFF7
  9065                           tblptrl	equ	0xFF6
  9066                           tablat	equ	0xFF5
  9067                           prodh	equ	0xFF4
  9068                           prodl	equ	0xFF3
  9069                           intcon	equ	0xFF2
  9070                           intcon2	equ	0xFF1
  9071                           postinc0	equ	0xFEE
  9072                           wreg	equ	0xFE8
  9073                           indf1	equ	0xFE7
  9074                           postinc1	equ	0xFE6
  9075                           postdec1	equ	0xFE5
  9076                           fsr1h	equ	0xFE2
  9077                           fsr1l	equ	0xFE1
  9078                           indf2	equ	0xFDF
  9079                           postinc2	equ	0xFDE
  9080                           postdec2	equ	0xFDD
  9081                           plusw2	equ	0xFDB
  9082                           fsr2h	equ	0xFDA
  9083                           fsr2l	equ	0xFD9
  9084                           status	equ	0xFD8
  9085                           
  9086 ;; *************** function _port_button_task *****************
  9087 ;; Defined at:
  9088 ;;		line 82 in file "ChargeStation_task.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;		None
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  i               1    6[BANK0 ] unsigned char 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;		None               void
  9095 ;; Registers used:
  9096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9097 ;; Tracked objects:
  9098 ;;		On entry : F/1
  9099 ;;		On exit  : F/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9106 ;;Total ram usage:        1 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:   12
  9109 ;; This function calls:
  9110 ;;		_LED_output
  9111 ;;		_OUT
  9112 ;;		_display
  9113 ;; This function is called by:
  9114 ;;		_normal_task
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text26
  9119  012184                     __ptext26:
  9120                           	opt stack 0
  9121  012184                     _port_button_task:
  9122                           	opt stack 17
  9123                           
  9124                           ; BSR set to: 1
  9125                           ;ChargeStation_task.c: 83: uint8_t i;
  9126                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;incstack = 0
  9130  012184  0100               	movlb	0	; () banked
  9131  012186  6B66               	clrf	port_button_task@i& (0+255),b
  9132  012188                     l11010:
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
  9136  012188  5166               	movf	port_button_task@i& (0+255),w,b
  9137  01218A  0D17               	mullw	23
  9138  01218C  0E40               	movlw	low (_port+3)
  9139  01218E  24F3               	addwf	prodl,w,c
  9140  012190  6ED9               	movwf	fsr2l,c
  9141  012192  0E01               	movlw	high (_port+3)
  9142  012194  20F4               	addwfc	prodh,w,c
  9143  012196  6EDA               	movwf	fsr2h,c
  9144  012198  A0DF               	btfss	indf2,0,c
  9145  01219A  D007               	goto	l11014
  9146                           
  9147                           ; BSR set to: 1
  9148                           ;ChargeStation_task.c: 87: LED_output(i, 1);
  9149  01219C  0E01               	movlw	1
  9150  01219E  0100               	movlb	0	; () banked
  9151  0121A0  6F60               	movwf	LED_output@value& (0+255),b
  9152  0121A2  5166               	movf	port_button_task@i& (0+255),w,b
  9153  0121A4  EC37  F09E         	call	_LED_output
  9154                           
  9155                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
  9156  0121A8  D00F               	goto	l11020
  9157  0121AA                     l11014:
  9158                           
  9159                           ; BSR set to: 1
  9160  0121AA  0100               	movlb	0	; () banked
  9161  0121AC  5166               	movf	port_button_task@i& (0+255),w,b
  9162  0121AE  ECEE  F08C         	call	PL4	;call to abstracted procedure
  9163  0121B2  B2DF               	btfsc	indf2,1,c
  9164  0121B4  D009               	goto	l11020
  9165                           
  9166                           ; BSR set to: 1
  9167  0121B6  5166               	movf	port_button_task@i& (0+255),w,b
  9168  0121B8  ECEE  F08C         	call	PL4	;call to abstracted procedure
  9169  0121BC  A6DF               	btfss	indf2,3,c
  9170  0121BE  D004               	goto	l11020
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;ChargeStation_task.c: 89: LED_output(i, 0);
  9174  0121C0  6B60               	clrf	LED_output@value& (0+255),b
  9175  0121C2  5166               	movf	port_button_task@i& (0+255),w,b
  9176  0121C4  EC37  F09E         	call	_LED_output
  9177  0121C8                     l11020:
  9178                           
  9179                           ;ChargeStation_task.c: 90: }
  9180                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
  9181  0121C8  0100               	movlb	0	; () banked
  9182  0121CA  5166               	movf	port_button_task@i& (0+255),w,b
  9183  0121CC  ECAF  F08B         	call	PL26	;call to abstracted procedure
  9184  0121D0  A0DF               	btfss	indf2,0,c
  9185  0121D2  D034               	goto	l11044
  9186                           
  9187                           ; BSR set to: 1
  9188                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
  9189  0121D4  5166               	movf	port_button_task@i& (0+255),w,b
  9190  0121D6  ECAF  F08B         	call	PL26	;call to abstracted procedure
  9191  0121DA  6ADE               	clrf	postinc2,c
  9192  0121DC  6ADD               	clrf	postdec2,c
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;ChargeStation_task.c: 94: LED_output(i, 0);
  9196  0121DE  6B60               	clrf	LED_output@value& (0+255),b
  9197  0121E0  5166               	movf	port_button_task@i& (0+255),w,b
  9198  0121E2  EC37  F09E         	call	_LED_output
  9199                           
  9200                           ;ChargeStation_task.c: 97: if (print_port == i) {
  9201  0121E6  0100               	movlb	0	; () banked
  9202  0121E8  5166               	movf	port_button_task@i& (0+255),w,b
  9203  0121EA  1823               	xorwf	_print_port,w,c
  9204  0121EC  E008               	bz	l11036
  9205  0121EE  D00D               	goto	l113
  9206  0121F0                     l11030:
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
  9210  0121F0  0E01               	movlw	1
  9211  0121F2  D001               	goto	L2
  9212  0121F4                     l11032:
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
  9216  0121F4  0E02               	movlw	2
  9217  0121F6                     L2:
  9218  0121F6  6E21               	movwf	_data_item,c
  9219                           
  9220                           ;ChargeStation_task.c: 104: break;
  9221  0121F8  D00A               	goto	l11038
  9222  0121FA                     l119:
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;ChargeStation_task.c: 107: data_item = CURRENT;
  9226  0121FA  6A21               	clrf	_data_item,c
  9227                           
  9228                           ;ChargeStation_task.c: 108: break;
  9229  0121FC  D008               	goto	l11038
  9230  0121FE                     l11036:
  9231                           
  9232                           ; BSR set to: 0
  9233  0121FE  5021               	movf	_data_item,w,c
  9234                           
  9235                           ; Switch size 1, requested type "space"
  9236                           ; Number of cases is 3, Range of values is 0 to 2
  9237                           ; switch strategies available:
  9238                           ; Name         Instructions Cycles
  9239                           ; simple_byte           10     6 (average)
  9240                           ;	Chosen strategy is simple_byte
  9241  012200  E0F7               	bz	l11030
  9242  012202  0A01               	xorlw	1	; case 1
  9243  012204  E0F7               	bz	l11032
  9244  012206  0A03               	xorlw	3	; case 2
  9245  012208  D7F8               	goto	l119
  9246  01220A                     l113:
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;ChargeStation_task.c: 111: print_port = i;
  9250  01220A  C066  F023         	movff	port_button_task@i,_print_port
  9251  01220E                     l11038:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;ChargeStation_task.c: 112: }
  9255                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
  9256  01220E  0EE6               	movlw	low (STR_96+3)
  9257  012210  6F60               	movwf	display@str0& (0+255),b
  9258  012212  0EFF               	movlw	high (STR_96+3)
  9259  012214  6F61               	movwf	(display@str0+1)& (0+255),b
  9260  012216  0EE6               	movlw	low (STR_96+3)
  9261  012218  6F62               	movwf	display@str1& (0+255),b
  9262  01221A  0EFF               	movlw	high (STR_96+3)
  9263  01221C  6F63               	movwf	(display@str1+1)& (0+255),b
  9264  01221E  0E02               	movlw	2
  9265  012220  EC5C  F090         	call	_display
  9266                           
  9267                           ; BSR set to: 1
  9268                           ;ChargeStation_task.c: 115: OUT(i, 1);
  9269  012224  0E01               	movlw	1
  9270  012226  0100               	movlb	0	; () banked
  9271  012228  6F60               	movwf	OUT@value& (0+255),b
  9272  01222A  5166               	movf	port_button_task@i& (0+255),w,b
  9273  01222C  EC81  F09E         	call	_OUT
  9274                           
  9275                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
  9276  012230  0100               	movlb	0	; () banked
  9277  012232  5166               	movf	port_button_task@i& (0+255),w,b
  9278  012234  ECCC  F092         	call	PL52	;call to abstracted procedure
  9279  012238  6ADE               	clrf	postinc2,c
  9280  01223A  6ADD               	clrf	postdec2,c
  9281  01223C                     l11044:
  9282  01223C  0100               	movlb	0	; () banked
  9283  01223E  2B66               	incf	port_button_task@i& (0+255),f,b
  9284                           
  9285                           ; BSR set to: 0
  9286  012240  0E02               	movlw	2
  9287  012242  6566               	cpfsgt	port_button_task@i& (0+255),b
  9288  012244  D7A1               	goto	l11010
  9289  012246  0C02               	retlw	2
  9290  012248                     __end_of_port_button_task:
  9291                           	opt stack 0
  9292                           tblptru	equ	0xFF8
  9293                           tblptrh	equ	0xFF7
  9294                           tblptrl	equ	0xFF6
  9295                           tablat	equ	0xFF5
  9296                           prodh	equ	0xFF4
  9297                           prodl	equ	0xFF3
  9298                           intcon	equ	0xFF2
  9299                           intcon2	equ	0xFF1
  9300                           postinc0	equ	0xFEE
  9301                           wreg	equ	0xFE8
  9302                           indf1	equ	0xFE7
  9303                           postinc1	equ	0xFE6
  9304                           postdec1	equ	0xFE5
  9305                           fsr1h	equ	0xFE2
  9306                           fsr1l	equ	0xFE1
  9307                           indf2	equ	0xFDF
  9308                           postinc2	equ	0xFDE
  9309                           postdec2	equ	0xFDD
  9310                           plusw2	equ	0xFDB
  9311                           fsr2h	equ	0xFDA
  9312                           fsr2l	equ	0xFD9
  9313                           status	equ	0xFD8
  9314                           
  9315 ;; *************** function _display *****************
  9316 ;; Defined at:
  9317 ;;		line 15 in file "LCD_print.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  item            1    wreg     enum E8527
  9320 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
  9321 ;;		 -> STR_76(1), STR_74(9), STR_72(9), STR_70(9), 
  9322 ;;		 -> STR_68(9), STR_66(9), STR_64(9), STR_62(1), 
  9323 ;;		 -> STR_61(1), STR_58(17), STR_54(1), STR_53(1), 
  9324 ;;		 -> STR_50(17), STR_46(1), STR_45(1), STR_42(17), 
  9325 ;;		 -> STR_38(1), STR_36(1), STR_34(15), STR_7(15), 
  9326 ;;		 -> STR_3(1), STR_1(1), 
  9327 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
  9328 ;;		 -> STR_77(1), STR_75(15), STR_73(16), STR_71(17), 
  9329 ;;		 -> STR_69(16), STR_67(17), STR_65(17), STR_63(1), 
  9330 ;;		 -> settings_integrating_reset@str_1344(20), settings_integrating_reset@str(20), STR_55(1), settings_led_indicator@s
      +tr_1327(20), 
  9331 ;;		 -> settings_led_indicator@str(20), STR_47(1), settings_auto_stop@str_1310(20), settings_auto_stop@str(20), 
  9332 ;;		 -> STR_39(1), STR_37(1), STR_35(13), STR_8(14), 
  9333 ;;		 -> STR_4(1), STR_2(1), 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  item            1    4[BANK0 ] enum E8527
  9336 ;;  i               1    5[BANK0 ] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;		None               void
  9339 ;; Registers used:
  9340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9341 ;; Tracked objects:
  9342 ;;		On entry : F/0
  9343 ;;		On exit  : F/1
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;Total ram usage:        6 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:   11
  9353 ;; This function calls:
  9354 ;;		Nothing
  9355 ;; This function is called by:
  9356 ;;		_port_button_task
  9357 ;;		_normal_task
  9358 ;;		_sleep_task
  9359 ;;		_software_init
  9360 ;;		_settings_adjust_time
  9361 ;;		_settings_auto_stop
  9362 ;;		_settings_led_indicator
  9363 ;;		_settings_integrating_reset
  9364 ;;		_settings_task
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text27
  9369  0120B8                     __ptext27:
  9370                           	opt stack 0
  9371  0120B8                     _display:
  9372                           	opt stack 18
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;incstack = 0
  9376                           ;display@item stored from wreg
  9377  0120B8  6F64               	movwf	display@item& (0+255),b
  9378                           
  9379                           ;LCD_print.c: 16: print_item = item;
  9380  0120BA  C064  F0EC         	movff	display@item,_print_item
  9381                           
  9382                           ;LCD_print.c: 17: uint8_t i;
  9383                           ;LCD_print.c: 18: if (*str0) {
  9384  0120BE  D84E               	call	PL154	;call to abstracted procedure
  9385  0120C0  D841               	call	PL124	;call to abstracted procedure
  9386  0120C2  E012               	bz	l10002
  9387                           
  9388                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
  9389  0120C4  0100               	movlb	0	; () banked
  9390  0120C6  6B65               	clrf	display@i& (0+255),b
  9391  0120C8  D00A               	goto	l9998
  9392  0120CA                     l9992:
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
  9396  0120CA  D848               	call	PL154	;call to abstracted procedure
  9397  0120CC  0E00               	movlw	low (__mediumconst shr (0+16))
  9398  0120CE  6EF8               	movwf	tblptru,c
  9399  0120D0                     	endif
  9400  0120D0  D852               	call	PL248	;call to abstracted procedure
  9401  0120D2  0008               	tblrd		*
  9402  0120D4  CFF5 FFDF          	movff	tablat,indf2
  9403                           
  9404                           ; BSR set to: 0
  9405  0120D8  4B60               	infsnz	display@str0& (0+255),f,b
  9406  0120DA  2B61               	incf	(display@str0+1)& (0+255),f,b
  9407                           
  9408                           ; BSR set to: 0
  9409  0120DC  2B65               	incf	display@i& (0+255),f,b
  9410  0120DE                     l9998:
  9411                           
  9412                           ; BSR set to: 0
  9413  0120DE  D83E               	call	PL154	;call to abstracted procedure
  9414  0120E0  D831               	call	PL124	;call to abstracted procedure
  9415  0120E2  E1F3               	bnz	l9992
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;LCD_print.c: 21: }
  9419                           ;LCD_print.c: 22: display_char[0][i] = '\0';
  9420  0120E4  D848               	call	PL248	;call to abstracted procedure
  9421  0120E6  6ADF               	clrf	indf2,c
  9422  0120E8                     l10002:
  9423                           
  9424                           ;LCD_print.c: 23: }
  9425                           ;LCD_print.c: 24: if (*str1) {
  9426  0120E8  D832               	call	PL152	;call to abstracted procedure
  9427  0120EA  0E0E               	movlw	(high __ramtop+-1)
  9428  0120EC  64F7               	cpfsgt	tblptrh,c
  9429  0120EE  D003               	bra	u10387
  9430  0120F0  0008               	tblrd		*
  9431  0120F2  50F5               	movf	tablat,w,c
  9432  0120F4  D002               	bra	u10380
  9433  0120F6                     u10387:
  9434  0120F6  ECD4  F08F         	call	PL24	;call to abstracted procedure
  9435  0120FA                     u10380:
  9436  0120FA  0900               	iorlw	0
  9437  0120FC  E01F               	bz	l10016
  9438                           
  9439                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
  9440  0120FE  0100               	movlb	0	; () banked
  9441  012100  6B65               	clrf	display@i& (0+255),b
  9442  012102  D00F               	goto	l10012
  9443  012104                     l10006:
  9444                           
  9445                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
  9446  012104  D824               	call	PL152	;call to abstracted procedure
  9447  012106  D82F               	call	PL244	;call to abstracted procedure
  9448  012108  0E0E               	movlw	(high __ramtop+-1)
  9449  01210A  64F7               	cpfsgt	tblptrh,c
  9450  01210C  D003               	bra	u10407
  9451  01210E  0008               	tblrd		*
  9452  012110  50F5               	movf	tablat,w,c
  9453  012112  D002               	bra	u10400
  9454  012114                     u10407:
  9455  012114  ECD4  F08F         	call	PL24	;call to abstracted procedure
  9456  012118                     u10400:
  9457  012118  6EDF               	movwf	indf2,c
  9458  01211A  0100               	movlb	0	; () banked
  9459  01211C  4B62               	infsnz	display@str1& (0+255),f,b
  9460  01211E  2B63               	incf	(display@str1+1)& (0+255),f,b
  9461                           
  9462                           ; BSR set to: 0
  9463  012120  2B65               	incf	display@i& (0+255),f,b
  9464  012122                     l10012:
  9465                           
  9466                           ; BSR set to: 0
  9467  012122  D815               	call	PL152	;call to abstracted procedure
  9468  012124  0E0E               	movlw	(high __ramtop+-1)
  9469  012126  64F7               	cpfsgt	tblptrh,c
  9470  012128  D003               	bra	u10417
  9471  01212A  0008               	tblrd		*
  9472  01212C  50F5               	movf	tablat,w,c
  9473  01212E  D002               	bra	u10410
  9474  012130                     u10417:
  9475  012130  ECD4  F08F         	call	PL24	;call to abstracted procedure
  9476  012134                     u10410:
  9477  012134  0900               	iorlw	0
  9478  012136  E1E6               	bnz	l10006
  9479                           
  9480                           ;LCD_print.c: 27: }
  9481                           ;LCD_print.c: 28: display_char[1][i] = '\0';
  9482  012138  D816               	call	PL244	;call to abstracted procedure
  9483  01213A  6ADF               	clrf	indf2,c
  9484  01213C                     l10016:
  9485                           
  9486                           ;LCD_print.c: 29: }
  9487                           ;LCD_print.c: 30: display_flag = 1;
  9488  01213C  0E01               	movlw	1
  9489  01213E  0101               	movlb	1	; () banked
  9490  012140  6F2F               	movwf	_display_flag& (0+255),b
  9491                           
  9492                           ; BSR set to: 1
  9493  012142  0C01               	retlw	1	;funcret
  9494  012144                     __end_of_display:
  9495                           	opt stack 0
  9496  012144                     PL124:
  9497                           	opt stack 18
  9498  012144  0E00               	movlw	low (__mediumconst shr (0+16))
  9499  012146  6EF8               	movwf	tblptru,c
  9500  012148                     	endif
  9501  012148  0008               	tblrd		*
  9502  01214A  50F5               	movf	tablat,w,c
  9503  01214C  0012               	return	
  9504  01214E                     __end_ofPL124:
  9505                           	opt stack 0
  9506  01214E                     PL152:
  9507                           	opt stack 18
  9508  01214E  C062  FFF6         	movff	display@str1,tblptrl
  9509  012152  C063  FFF7         	movff	display@str1+1,tblptrh
  9510  012156  0E00               	movlw	low (__mediumconst shr (0+16))
  9511  012158  6EF8               	movwf	tblptru,c
  9512  01215A  0012               	return	
  9513  01215C                     __end_ofPL152:
  9514                           	opt stack 0
  9515  01215C                     PL154:
  9516                           	opt stack 18
  9517  01215C  C060  FFF6         	movff	display@str0,tblptrl
  9518  012160  C061  FFF7         	movff	display@str0+1,tblptrh
  9519  012164                     	if	0	;tblptru may be non-zero
  9520  012164                     	endif
  9521  012164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9522  012164  0012               	return	
  9523  012166                     __end_ofPL154:
  9524                           	opt stack 0
  9525  012166                     PL244:
  9526                           	opt stack 18
  9527  012166  0E17               	movlw	low (_display_char+20)
  9528  012168  0100               	movlb	0	; () banked
  9529  01216A  2565               	addwf	display@i& (0+255),w,b
  9530  01216C  6ED9               	movwf	fsr2l,c
  9531  01216E  6ADA               	clrf	fsr2h,c
  9532  012170  0E02               	movlw	high (_display_char+20)
  9533  012172  22DA               	addwfc	fsr2h,f,c
  9534  012174  0012               	return	
  9535  012176                     __end_ofPL244:
  9536                           	opt stack 0
  9537  012176                     PL248:
  9538                           	opt stack 18
  9539  012176  0E03               	movlw	low _display_char
  9540  012178  2565               	addwf	display@i& (0+255),w,b
  9541  01217A  6ED9               	movwf	fsr2l,c
  9542  01217C  6ADA               	clrf	fsr2h,c
  9543  01217E  0E02               	movlw	high _display_char
  9544  012180  22DA               	addwfc	fsr2h,f,c
  9545  012182  0012               	return	
  9546  012184                     __end_ofPL248:
  9547                           	opt stack 0
  9548                           tblptru	equ	0xFF8
  9549                           tblptrh	equ	0xFF7
  9550                           tblptrl	equ	0xFF6
  9551                           tablat	equ	0xFF5
  9552                           prodh	equ	0xFF4
  9553                           prodl	equ	0xFF3
  9554                           intcon	equ	0xFF2
  9555                           intcon2	equ	0xFF1
  9556                           postinc0	equ	0xFEE
  9557                           wreg	equ	0xFE8
  9558                           indf1	equ	0xFE7
  9559                           postinc1	equ	0xFE6
  9560                           postdec1	equ	0xFE5
  9561                           fsr1h	equ	0xFE2
  9562                           fsr1l	equ	0xFE1
  9563                           indf2	equ	0xFDF
  9564                           postinc2	equ	0xFDE
  9565                           postdec2	equ	0xFDD
  9566                           plusw2	equ	0xFDB
  9567                           fsr2h	equ	0xFDA
  9568                           fsr2l	equ	0xFD9
  9569                           status	equ	0xFD8
  9570                           
  9571 ;; *************** function _LED_output *****************
  9572 ;; Defined at:
  9573 ;;		line 36 in file "io.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  b               1    wreg     unsigned char 
  9576 ;;  value           1    0[BANK0 ] unsigned char 
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;  b               1    1[BANK0 ] unsigned char 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;		None               void
  9581 ;; Registers used:
  9582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9583 ;; Tracked objects:
  9584 ;;		On entry : F/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9588 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9591 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9592 ;;Total ram usage:        2 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:   11
  9595 ;; This function calls:
  9596 ;;		Nothing
  9597 ;; This function is called by:
  9598 ;;		_port_button_task
  9599 ;;		_sleep_task
  9600 ;;		_software_init
  9601 ;;		_settings_led_indicator
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text28
  9606  013C6E                     __ptext28:
  9607                           	opt stack 0
  9608  013C6E                     _LED_output:
  9609                           	opt stack 18
  9610                           
  9611                           ; BSR set to: 1
  9612                           ;incstack = 0
  9613                           ;LED_output@b stored from wreg
  9614  013C6E  6F61               	movwf	LED_output@b& (0+255),b
  9615                           
  9616                           ;io.c: 37: port[b].flag.led_flag = value;
  9617  013C70  0100               	movlb	0	; () banked
  9618  013C72  5161               	movf	LED_output@b& (0+255),w,b
  9619  013C74  ECEE  F08C         	call	PL4	;call to abstracted procedure
  9620  013C78  B160               	btfsc	LED_output@value& (0+255),0,b
  9621  013C7A  D002               	bra	u10295
  9622  013C7C  96DF               	bcf	indf2,3,c
  9623  013C7E  D001               	bra	u10296
  9624  013C80                     u10295:
  9625  013C80  86DF               	bsf	indf2,3,c
  9626  013C82                     u10296:
  9627                           
  9628                           ;io.c: 38: switch (b) {
  9629  013C82  D012               	goto	l9984
  9630  013C84                     l292:
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;io.c: 40: LATB7 = value;
  9634  013C84  A160               	btfss	LED_output@value& (0+255),0,b
  9635  013C86  D002               	goto	u10300
  9636  013C88  8E8A               	bsf	3978,7,c	;volatile
  9637  013C8A  0012               	return	
  9638  013C8C                     u10300:
  9639  013C8C  9E8A               	bcf	3978,7,c	;volatile
  9640                           
  9641                           ;io.c: 41: break;
  9642  013C8E  0012               	return	
  9643  013C90                     l294:
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;io.c: 43: LATB6 = value;
  9647  013C90  A160               	btfss	LED_output@value& (0+255),0,b
  9648  013C92  D002               	goto	u10320
  9649  013C94  8C8A               	bsf	3978,6,c	;volatile
  9650  013C96  0012               	return	
  9651  013C98                     u10320:
  9652  013C98  9C8A               	bcf	3978,6,c	;volatile
  9653                           
  9654                           ;io.c: 44: break;
  9655  013C9A  0012               	return	
  9656  013C9C                     l295:
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;io.c: 46: LATC2 = value;
  9660  013C9C  A160               	btfss	LED_output@value& (0+255),0,b
  9661  013C9E  D002               	goto	u10340
  9662  013CA0  848B               	bsf	3979,2,c	;volatile
  9663  013CA2  0012               	return	
  9664  013CA4                     u10340:
  9665  013CA4  948B               	bcf	3979,2,c	;volatile
  9666                           
  9667                           ;io.c: 47: break;
  9668  013CA6  0012               	return	
  9669  013CA8                     l9984:
  9670                           
  9671                           ; BSR set to: 1
  9672  013CA8  0100               	movlb	0	; () banked
  9673  013CAA  5161               	movf	LED_output@b& (0+255),w,b
  9674                           
  9675                           ; Switch size 1, requested type "space"
  9676                           ; Number of cases is 3, Range of values is 0 to 2
  9677                           ; switch strategies available:
  9678                           ; Name         Instructions Cycles
  9679                           ; simple_byte           10     6 (average)
  9680                           ;	Chosen strategy is simple_byte
  9681  013CAC  E0EB               	bz	l292
  9682  013CAE  0A01               	xorlw	1	; case 1
  9683  013CB0  E0EF               	bz	l294
  9684  013CB2  0A03               	xorlw	3	; case 2
  9685  013CB4  E0F3               	bz	l295
  9686  013CB6  0012               	return		;funcret
  9687  013CB8                     __end_of_LED_output:
  9688                           	opt stack 0
  9689                           tblptru	equ	0xFF8
  9690                           tblptrh	equ	0xFF7
  9691                           tblptrl	equ	0xFF6
  9692                           tablat	equ	0xFF5
  9693                           prodh	equ	0xFF4
  9694                           prodl	equ	0xFF3
  9695                           intcon	equ	0xFF2
  9696                           intcon2	equ	0xFF1
  9697                           postinc0	equ	0xFEE
  9698                           wreg	equ	0xFE8
  9699                           indf1	equ	0xFE7
  9700                           postinc1	equ	0xFE6
  9701                           postdec1	equ	0xFE5
  9702                           fsr1h	equ	0xFE2
  9703                           fsr1l	equ	0xFE1
  9704                           indf2	equ	0xFDF
  9705                           postinc2	equ	0xFDE
  9706                           postdec2	equ	0xFDD
  9707                           plusw2	equ	0xFDB
  9708                           fsr2h	equ	0xFDA
  9709                           fsr2l	equ	0xFD9
  9710                           status	equ	0xFD8
  9711                           
  9712 ;; *************** function _integrate_time *****************
  9713 ;; Defined at:
  9714 ;;		line 76 in file "ChargeStation_task.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;		None
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;  i               1    2[BANK0 ] unsigned char 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;		None               void
  9721 ;; Registers used:
  9722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9723 ;; Tracked objects:
  9724 ;;		On entry : F/0
  9725 ;;		On exit  : F/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9731 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9732 ;;Total ram usage:        3 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:   11
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		_normal_task
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text29
  9743  013F40                     __ptext29:
  9744                           	opt stack 0
  9745  013F40                     _integrate_time:
  9746                           	opt stack 18
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
  9750                           
  9751                           ;incstack = 0
  9752  013F40  6B62               	clrf	integrate_time@i& (0+255),b
  9753  013F42                     l10996:
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
  9757  013F42  5162               	movf	integrate_time@i& (0+255),w,b
  9758  013F44  ECE9  F082         	call	PL18	;call to abstracted procedure
  9759  013F48  0E01               	movlw	1
  9760  013F4A  50DB               	movf	plusw2,w,c
  9761  013F4C  E103               	bnz	u11840
  9762  013F4E  0E65               	movlw	101
  9763  013F50  5CDE               	subwf	postinc2,w,c
  9764  013F52  E303               	bnc	l11000
  9765  013F54                     u11840:
  9766                           
  9767                           ; BSR set to: 0
  9768  013F54  5162               	movf	integrate_time@i& (0+255),w,b
  9769  013F56  D806               	call	PL44	;call to abstracted procedure
  9770  013F58  D80D               	call	PL296	;call to abstracted procedure
  9771  013F5A                     l11000:
  9772                           
  9773                           ; BSR set to: 0
  9774  013F5A  2B62               	incf	integrate_time@i& (0+255),f,b
  9775                           
  9776                           ; BSR set to: 0
  9777  013F5C  0E02               	movlw	2
  9778  013F5E  6562               	cpfsgt	integrate_time@i& (0+255),b
  9779  013F60  D7F0               	goto	l10996
  9780  013F62  0C02               	retlw	2
  9781  013F64                     __end_of_integrate_time:
  9782                           	opt stack 0
  9783  013F64                     PL44:
  9784                           	opt stack 16
  9785  013F64  0D17               	mullw	23
  9786  013F66  0E4D               	movlw	low (_port+16)
  9787  013F68  24F3               	addwf	prodl,w,c
  9788  013F6A  6ED9               	movwf	fsr2l,c
  9789  013F6C  0E01               	movlw	high (_port+16)
  9790  013F6E  20F4               	addwfc	prodh,w,c
  9791  013F70  6EDA               	movwf	fsr2h,c
  9792  013F72  0012               	return	
  9793  013F74                     __end_ofPL44:
  9794                           	opt stack 0
  9795  013F74                     PL296:
  9796                           	opt stack 12
  9797  013F74  2ADE               	incf	postinc2,f,c
  9798  013F76  0E00               	movlw	0
  9799  013F78  22DE               	addwfc	postinc2,f,c
  9800  013F7A  22DE               	addwfc	postinc2,f,c
  9801  013F7C  22DE               	addwfc	postinc2,f,c
  9802  013F7E  0C00               	retlw	0
  9803  013F80                     __end_ofPL296:
  9804                           	opt stack 0
  9805                           tblptru	equ	0xFF8
  9806                           tblptrh	equ	0xFF7
  9807                           tblptrl	equ	0xFF6
  9808                           tablat	equ	0xFF5
  9809                           prodh	equ	0xFF4
  9810                           prodl	equ	0xFF3
  9811                           intcon	equ	0xFF2
  9812                           intcon2	equ	0xFF1
  9813                           postinc0	equ	0xFEE
  9814                           wreg	equ	0xFE8
  9815                           indf1	equ	0xFE7
  9816                           postinc1	equ	0xFE6
  9817                           postdec1	equ	0xFE5
  9818                           fsr1h	equ	0xFE2
  9819                           fsr1l	equ	0xFE1
  9820                           indf2	equ	0xFDF
  9821                           postinc2	equ	0xFDE
  9822                           postdec2	equ	0xFDD
  9823                           plusw2	equ	0xFDB
  9824                           fsr2h	equ	0xFDA
  9825                           fsr2l	equ	0xFD9
  9826                           status	equ	0xFD8
  9827                           
  9828 ;; *************** function _integrate_current *****************
  9829 ;; Defined at:
  9830 ;;		line 67 in file "ChargeStation_task.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  i               1   15[BANK0 ] unsigned char 
  9835 ;; Return value:  Size  Location     Type
  9836 ;;		None               void
  9837 ;; Registers used:
  9838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9839 ;; Tracked objects:
  9840 ;;		On entry : F/1
  9841 ;;		On exit  : F/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9847 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9848 ;;Total ram usage:        3 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:   12
  9851 ;; This function calls:
  9852 ;;		___lldiv
  9853 ;; This function is called by:
  9854 ;;		_normal_task
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text30
  9859  013272                     __ptext30:
  9860                           	opt stack 0
  9861  013272                     _integrate_current:
  9862                           	opt stack 17
  9863                           
  9864                           ; BSR set to: 1
  9865                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;incstack = 0
  9869  013272  0100               	movlb	0	; () banked
  9870  013274  6B6F               	clrf	integrate_current@i& (0+255),b
  9871  013276                     l10980:
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
  9875  013276  516F               	movf	integrate_current@i& (0+255),w,b
  9876  013278  ECE9  F082         	call	PL18	;call to abstracted procedure
  9877  01327C  0E01               	movlw	1
  9878  01327E  50DB               	movf	plusw2,w,c
  9879  013280  E103               	bnz	u11820
  9880  013282  0E65               	movlw	101
  9881  013284  5CDE               	subwf	postinc2,w,c
  9882  013286  E32C               	bnc	l10986
  9883  013288                     u11820:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
  9887  013288  516F               	movf	integrate_current@i& (0+255),w,b
  9888  01328A  ECE9  F082         	call	PL18	;call to abstracted procedure
  9889  01328E  CFDE F06D          	movff	postinc2,??_integrate_current
  9890  013292  CFDD F06E          	movff	postdec2,??_integrate_current+1
  9891  013296  516F               	movf	integrate_current@i& (0+255),w,b
  9892  013298  D828               	call	PL114	;call to abstracted procedure
  9893  01329A  20F4               	addwfc	prodh,w,c
  9894  01329C  6EDA               	movwf	fsr2h,c
  9895  01329E  516D               	movf	??_integrate_current& (0+255),w,b
  9896  0132A0  26DE               	addwf	postinc2,f,c
  9897  0132A2  516E               	movf	(??_integrate_current+1)& (0+255),w,b
  9898  0132A4  22DE               	addwfc	postinc2,f,c
  9899  0132A6  0E00               	movlw	0
  9900  0132A8  22DE               	addwfc	postinc2,f,c
  9901  0132AA  22DE               	addwfc	postinc2,f,c
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
  9905  0132AC  516F               	movf	integrate_current@i& (0+255),w,b
  9906  0132AE  D81D               	call	PL114	;call to abstracted procedure
  9907  0132B0  20F4               	addwfc	prodh,w,c
  9908  0132B2  6EDA               	movwf	fsr2h,c
  9909  0132B4  CFDE F060          	movff	postinc2,___lldiv@dividend
  9910  0132B8  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  9911  0132BC  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  9912  0132C0  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  9913  0132C4  0E10               	movlw	16
  9914  0132C6  EC11  F083         	call	PL206	;call to abstracted procedure
  9915  0132CA  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  9916  0132CC  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  9917  0132CE  EC31  F09B         	call	___lldiv	;wreg free
  9918  0132D2  516F               	movf	integrate_current@i& (0+255),w,b
  9919  0132D4  ECB7  F08B         	call	PL42	;call to abstracted procedure
  9920  0132D8  ECD7  F097         	call	PL252	;call to abstracted procedure
  9921  0132DC  C063  FFDE         	movff	?___lldiv+3,postinc2
  9922  0132E0                     l10986:
  9923                           
  9924                           ; BSR set to: 0
  9925  0132E0  2B6F               	incf	integrate_current@i& (0+255),f,b
  9926                           
  9927                           ; BSR set to: 0
  9928  0132E2  0E02               	movlw	2
  9929  0132E4  656F               	cpfsgt	integrate_current@i& (0+255),b
  9930  0132E6  D7C7               	goto	l10980
  9931  0132E8  0C02               	retlw	2
  9932  0132EA                     __end_of_integrate_current:
  9933                           	opt stack 0
  9934  0132EA                     PL114:
  9935                           	opt stack 16
  9936  0132EA  0D17               	mullw	23
  9937  0132EC  0E45               	movlw	low (_port+8)
  9938  0132EE  24F3               	addwf	prodl,w,c
  9939  0132F0  6ED9               	movwf	fsr2l,c
  9940  0132F2  0E01               	movlw	high (_port+8)
  9941  0132F4  0012               	return	
  9942  0132F6                     __end_ofPL114:
  9943                           	opt stack 0
  9944                           tblptru	equ	0xFF8
  9945                           tblptrh	equ	0xFF7
  9946                           tblptrl	equ	0xFF6
  9947                           tablat	equ	0xFF5
  9948                           prodh	equ	0xFF4
  9949                           prodl	equ	0xFF3
  9950                           intcon	equ	0xFF2
  9951                           intcon2	equ	0xFF1
  9952                           postinc0	equ	0xFEE
  9953                           wreg	equ	0xFE8
  9954                           indf1	equ	0xFE7
  9955                           postinc1	equ	0xFE6
  9956                           postdec1	equ	0xFE5
  9957                           fsr1h	equ	0xFE2
  9958                           fsr1l	equ	0xFE1
  9959                           indf2	equ	0xFDF
  9960                           postinc2	equ	0xFDE
  9961                           postdec2	equ	0xFDD
  9962                           plusw2	equ	0xFDB
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function _display_LCD *****************
  9968 ;; Defined at:
  9969 ;;		line 33 in file "LCD_print.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;  str            20   40[BANK1 ] unsigned char [20]
  9974 ;;  str            40    0[BANK1 ] unsigned char [20][2]
  9975 ;; Return value:  Size  Location     Type
  9976 ;;		None               void
  9977 ;; Registers used:
  9978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9979 ;; Tracked objects:
  9980 ;;		On entry : F/1
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9985 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9986 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9987 ;;      Totals:         0       4      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9988 ;;Total ram usage:       84 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:   16
  9991 ;; This function calls:
  9992 ;;		_ST7032_clear
  9993 ;;		_ST7032_cursor
  9994 ;;		_ST7032_puts
  9995 ;;		___lldiv
  9996 ;;		___llmod
  9997 ;;		___lwdiv
  9998 ;;		___lwmod
  9999 ;;		_display_time_1602
 10000 ;;		_sprintf
 10001 ;; This function is called by:
 10002 ;;		_normal_task
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text31
 10007  010348                     __ptext31:
 10008                           	opt stack 0
 10009  010348                     _display_LCD:
 10010                           	opt stack 13
 10011                           
 10012                           ; BSR set to: 1
 10013                           ;LCD_print.c: 34: ST7032_clear();
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;incstack = 0
 10017  010348  ECD0  F0A2         	call	_ST7032_clear	;wreg free
 10018                           
 10019                           ;LCD_print.c: 35: switch (print_item) {
 10020  01034C  D135               	goto	l11180
 10021  01034E                     l11132:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;LCD_print.c: 37: case SETTINGS:
 10025                           ;LCD_print.c: 38: ST7032_cursor(0, 0);
 10026  01034E  0E00               	movlw	0
 10027  010350  6B71               	clrf	ST7032_cursor@row& (0+255),b
 10028  010352  EC11  F0A2         	call	_ST7032_cursor
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;LCD_print.c: 39: ST7032_puts(display_char[0]);
 10032  010356  0E03               	movlw	low _display_char
 10033  010358  6F70               	movwf	ST7032_puts@s& (0+255),b
 10034  01035A  0E02               	movlw	high _display_char
 10035  01035C  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 10036  01035E  ECC0  F09F         	call	_ST7032_puts	;wreg free
 10037                           
 10038                           ;LCD_print.c: 40: ST7032_cursor(0, 1);
 10039  010362  D95B               	call	PL176	;call to abstracted procedure
 10040  010364  EC11  F0A2         	call	_ST7032_cursor
 10041                           
 10042                           ;LCD_print.c: 41: ST7032_puts(display_char[1]);
 10043  010368  0E17               	movlw	low (_display_char+20)
 10044  01036A  6F70               	movwf	ST7032_puts@s& (0+255),b
 10045  01036C  0E02               	movlw	high (_display_char+20)
 10046  01036E  D121               	goto	L4
 10047  010370                     l11138:
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;LCD_print.c: 44: {
 10051                           ;LCD_print.c: 45: char str[2][20];
 10052                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 10053  010370  0E8F               	movlw	low _now
 10054  010372  6FB2               	movwf	display_time_1602@tm& (0+255),b
 10055  010374  0E02               	movlw	high _now
 10056  010376  6FB3               	movwf	(display_time_1602@tm+1)& (0+255),b
 10057  010378  0E94               	movlw	low display_LCD@str
 10058  01037A  6FB4               	movwf	display_time_1602@line0& (0+255),b
 10059  01037C  0E01               	movlw	high display_LCD@str
 10060  01037E  6FB5               	movwf	(display_time_1602@line0+1)& (0+255),b
 10061  010380  0EA8               	movlw	low (display_LCD@str+20)
 10062  010382  6FB6               	movwf	display_time_1602@line1& (0+255),b
 10063  010384  0E01               	movlw	high (display_LCD@str+20)
 10064  010386  6FB7               	movwf	(display_time_1602@line1+1)& (0+255),b
 10065  010388  EC46  F086         	call	_display_time_1602	;wreg free
 10066                           
 10067                           ;LCD_print.c: 47: ST7032_cursor(0, 0);
 10068  01038C  0E00               	movlw	0
 10069  01038E  0100               	movlb	0	; () banked
 10070  010390  6B71               	clrf	ST7032_cursor@row& (0+255),b
 10071  010392  EC11  F0A2         	call	_ST7032_cursor
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;LCD_print.c: 48: ST7032_puts(str[0]);
 10075  010396  0E94               	movlw	low display_LCD@str
 10076  010398  6F70               	movwf	ST7032_puts@s& (0+255),b
 10077  01039A  0E01               	movlw	high display_LCD@str
 10078  01039C  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 10079  01039E  ECC0  F09F         	call	_ST7032_puts	;wreg free
 10080                           
 10081                           ;LCD_print.c: 49: ST7032_cursor(0, 1);
 10082  0103A2  D93B               	call	PL176	;call to abstracted procedure
 10083  0103A4  EC11  F0A2         	call	_ST7032_cursor
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;LCD_print.c: 50: ST7032_puts(str[1]);
 10087  0103A8  0EA8               	movlw	low (display_LCD@str+20)
 10088  0103AA  6F70               	movwf	ST7032_puts@s& (0+255),b
 10089  0103AC  0E01               	movlw	high (display_LCD@str+20)
 10090  0103AE  D101               	goto	L4
 10091  0103B0                     l11148:
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;LCD_print.c: 54: {
 10095                           ;LCD_print.c: 55: char str[20];
 10096                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 10097                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 10098                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 10099                           ;LCD_print.c: 59: };
 10100                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 10101                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 10102                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 10103  0103B0  D947               	call	PL336	;call to abstracted procedure
 10104  0103B2  0EBD               	movlw	low STR_30
 10105  0103B4  6F85               	movwf	sprintf@f& (0+255),b
 10106  0103B6  0EFF               	movlw	high STR_30
 10107  0103B8  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10108  0103BA  5023               	movf	_print_port,w,c
 10109  0103BC  ECEE  F08C         	call	PL4	;call to abstracted procedure
 10110  0103C0  0E01               	movlw	1
 10111  0103C2  A0DF               	btfss	indf2,0,c
 10112  0103C4  0E00               	movlw	0
 10113  0103C6  0D3C               	mullw	60
 10114  0103C8  0E81               	movlw	low display_LCD@port_char
 10115  0103CA  0100               	movlb	0	; () banked
 10116  0103CC  6FB8               	movwf	??_display_LCD& (0+255),b
 10117  0103CE  0EFA               	movlw	high display_LCD@port_char
 10118  0103D0  6FB9               	movwf	(??_display_LCD+1)& (0+255),b
 10119  0103D2  50F3               	movf	prodl,w,c
 10120  0103D4  27B8               	addwf	??_display_LCD& (0+255),f,b
 10121  0103D6  50F4               	movf	prodh,w,c
 10122  0103D8  23B9               	addwfc	(??_display_LCD+1)& (0+255),f,b
 10123  0103DA  5023               	movf	_print_port,w,c
 10124  0103DC  0D14               	mullw	20
 10125  0103DE  50F3               	movf	prodl,w,c
 10126  0103E0  25B8               	addwf	??_display_LCD& (0+255),w,b
 10127  0103E2  6F87               	movwf	(?_sprintf+4)& (0+255),b
 10128  0103E4  50F4               	movf	prodh,w,c
 10129  0103E6  21B9               	addwfc	(??_display_LCD+1)& (0+255),w,b
 10130  0103E8  6F88               	movwf	(?_sprintf+5)& (0+255),b
 10131  0103EA  5023               	movf	_print_port,w,c
 10132  0103EC  D8F2               	call	PL18	;call to abstracted procedure
 10133  0103EE  0E01               	movlw	1
 10134  0103F0  50DB               	movf	plusw2,w,c
 10135  0103F2  E103               	bnz	u12041
 10136  0103F4  0E65               	movlw	101
 10137  0103F6  5CDE               	subwf	postinc2,w,c
 10138  0103F8  E302               	bnc	u12040
 10139  0103FA                     u12041:
 10140  0103FA  0E01               	movlw	1
 10141  0103FC  D001               	goto	u12050
 10142  0103FE                     u12040:
 10143  0103FE  0E00               	movlw	0
 10144  010400                     u12050:
 10145  010400  0D05               	mullw	5
 10146  010402  0ED2               	movlw	low display_LCD@onoff
 10147  010404  24F3               	addwf	prodl,w,c
 10148  010406  6F89               	movwf	(?_sprintf+6)& (0+255),b
 10149  010408  0EFB               	movlw	high display_LCD@onoff
 10150  01040A  20F4               	addwfc	prodh,w,c
 10151  01040C  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 10152  01040E  EC00  F080         	call	_sprintf	;wreg free
 10153                           
 10154                           ; BSR set to: 0
 10155                           ;LCD_print.c: 63: ST7032_cursor(0, 0);
 10156  010412  0E00               	movlw	0
 10157  010414  6B71               	clrf	ST7032_cursor@row& (0+255),b
 10158  010416  EC11  F0A2         	call	_ST7032_cursor
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;LCD_print.c: 64: ST7032_puts(str);
 10162  01041A  0EBC               	movlw	low display_LCD@str_575
 10163  01041C  6F70               	movwf	ST7032_puts@s& (0+255),b
 10164  01041E  0E01               	movlw	high display_LCD@str_575
 10165  010420  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 10166  010422  ECC0  F09F         	call	_ST7032_puts	;wreg free
 10167                           
 10168                           ;LCD_print.c: 65: switch (data_item) {
 10169  010426  D0B6               	goto	l11172
 10170  010428                     l11154:
 10171                           
 10172                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 10173  010428  D905               	call	PL294	;call to abstracted procedure
 10174  01042A  0E48               	movlw	low STR_31
 10175  01042C  6F85               	movwf	sprintf@f& (0+255),b
 10176  01042E  0EFF               	movlw	high STR_31
 10177  010430  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10178  010432  5023               	movf	_print_port,w,c
 10179  010434  D8CE               	call	PL18	;call to abstracted procedure
 10180  010436  EC6B  F08E         	call	PL188	;call to abstracted procedure
 10181  01043A  ECA6  F09E         	call	___lwdiv	;wreg free
 10182  01043E  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 10183  010442  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 10184  010446  5023               	movf	_print_port,w,c
 10185  010448  D8C4               	call	PL18	;call to abstracted procedure
 10186  01044A  EC74  F08E         	call	PL194	;call to abstracted procedure
 10187  01044E  ECFF  F09F         	call	___lwmod	;wreg free
 10188  010452  C060  F089         	movff	?___lwmod,?_sprintf+6
 10189  010456  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 10190  01045A  EC00  F080         	call	_sprintf	;wreg free
 10191                           
 10192                           ;LCD_print.c: 68: break;
 10193  01045E  D0A3               	goto	l11174
 10194  010460                     l11156:
 10195                           
 10196                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 10197  010460  D8E9               	call	PL294	;call to abstracted procedure
 10198  010462  0E44               	movlw	low (STR_28+15)
 10199  010464  6F85               	movwf	sprintf@f& (0+255),b
 10200  010466  0EFE               	movlw	high (STR_28+15)
 10201  010468  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10202  01046A  5023               	movf	_print_port,w,c
 10203  01046C  ECB7  F08B         	call	PL42	;call to abstracted procedure
 10204  010470  CFDE F087          	movff	postinc2,?_sprintf+4
 10205  010474  CFDE F088          	movff	postinc2,?_sprintf+5
 10206  010478  CFDE F089          	movff	postinc2,?_sprintf+6
 10207  01047C  CFDE F08A          	movff	postinc2,?_sprintf+7
 10208  010480  EC00  F080         	call	_sprintf	;wreg free
 10209                           
 10210                           ;LCD_print.c: 71: break;
 10211  010484  D090               	goto	l11174
 10212  010486                     l11158:
 10213                           
 10214                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10215                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10216                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10217                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10218                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10219  010486  0E10               	movlw	16
 10220  010488  0100               	movlb	0	; () banked
 10221  01048A  D8CB               	call	PL206	;call to abstracted procedure
 10222  01048C  D8AA               	call	PL28	;call to abstracted procedure
 10223  01048E  EC31  F09B         	call	___lldiv	;wreg free
 10224  010492  C060  F1D0         	movff	?___lldiv,_display_LCD$7095
 10225  010496  C061  F1D1         	movff	?___lldiv+1,_display_LCD$7095+1
 10226  01049A  C062  F1D2         	movff	?___lldiv+2,_display_LCD$7095+2
 10227  01049E  C063  F1D3         	movff	?___lldiv+3,_display_LCD$7095+3
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10231                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10232                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10233                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10234                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10235  0104A2  C1D0  F060         	movff	_display_LCD$7095,___lldiv@dividend
 10236  0104A6  C1D1  F061         	movff	_display_LCD$7095+1,___lldiv@dividend+1
 10237  0104AA  C1D2  F062         	movff	_display_LCD$7095+2,___lldiv@dividend+2
 10238  0104AE  C1D3  F063         	movff	_display_LCD$7095+3,___lldiv@dividend+3
 10239  0104B2  0E18               	movlw	24
 10240  0104B4  ECD2  F097         	call	PL238	;call to abstracted procedure
 10241  0104B8  EC31  F09B         	call	___lldiv	;wreg free
 10242  0104BC  C060  F1D4         	movff	?___lldiv,_display_LCD$7096
 10243  0104C0  C061  F1D5         	movff	?___lldiv+1,_display_LCD$7096+1
 10244  0104C4  C062  F1D6         	movff	?___lldiv+2,_display_LCD$7096+2
 10245  0104C8  C063  F1D7         	movff	?___lldiv+3,_display_LCD$7096+3
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10249                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10250                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10251                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10252                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10253  0104CC  0E10               	movlw	16
 10254  0104CE  D8A9               	call	PL206	;call to abstracted procedure
 10255  0104D0  D888               	call	PL28	;call to abstracted procedure
 10256  0104D2  EC31  F09B         	call	___lldiv	;wreg free
 10257  0104D6  D898               	call	PL90	;call to abstracted procedure
 10258  0104D8  0E18               	movlw	24
 10259  0104DA  D8A7               	call	PL210	;call to abstracted procedure
 10260  0104DC  EC38  F09C         	call	___llmod	;wreg free
 10261  0104E0  C06D  F1D8         	movff	?___llmod,_display_LCD$7097
 10262  0104E4  C06E  F1D9         	movff	?___llmod+1,_display_LCD$7097+1
 10263  0104E8  C06F  F1DA         	movff	?___llmod+2,_display_LCD$7097+2
 10264  0104EC  C070  F1DB         	movff	?___llmod+3,_display_LCD$7097+3
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10268                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10269                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10270                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10271                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10272  0104F0  0E3C               	movlw	60
 10273  0104F2  6F64               	movwf	___lldiv@divisor& (0+255),b
 10274  0104F4  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 10275  0104F6  D875               	call	PL28	;call to abstracted procedure
 10276  0104F8  EC31  F09B         	call	___lldiv	;wreg free
 10277  0104FC  D885               	call	PL90	;call to abstracted procedure
 10278  0104FE  0E3C               	movlw	60
 10279  010500  D894               	call	PL210	;call to abstracted procedure
 10280  010502  EC38  F09C         	call	___llmod	;wreg free
 10281  010506  C06D  F1DC         	movff	?___llmod,_display_LCD$7098
 10282  01050A  C06E  F1DD         	movff	?___llmod+1,_display_LCD$7098+1
 10283  01050E  C06F  F1DE         	movff	?___llmod+2,_display_LCD$7098+2
 10284  010512  C070  F1DF         	movff	?___llmod+3,_display_LCD$7098+3
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10288                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10289                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10290                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10291                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10292  010516  5023               	movf	_print_port,w,c
 10293  010518  ECB2  F09F         	call	PL44	;call to abstracted procedure
 10294  01051C  CFDE F06D          	movff	postinc2,___llmod@dividend
 10295  010520  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 10296  010524  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 10297  010528  CFDE F070          	movff	postinc2,___llmod@dividend+3
 10298  01052C  0E3C               	movlw	60
 10299  01052E  D87D               	call	PL210	;call to abstracted procedure
 10300  010530  EC38  F09C         	call	___llmod	;wreg free
 10301  010534  C06D  F1E0         	movff	?___llmod,_display_LCD$7099
 10302  010538  C06E  F1E1         	movff	?___llmod+1,_display_LCD$7099+1
 10303  01053C  C06F  F1E2         	movff	?___llmod+2,_display_LCD$7099+2
 10304  010540  C070  F1E3         	movff	?___llmod+3,_display_LCD$7099+3
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10308                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10309                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10310                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10311                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10312  010544  D87D               	call	PL336	;call to abstracted procedure
 10313  010546  0E01               	movlw	low STR_33
 10314  010548  6F85               	movwf	sprintf@f& (0+255),b
 10315  01054A  0EFE               	movlw	high STR_33
 10316  01054C  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10317  01054E  C1D4  F087         	movff	_display_LCD$7096,?_sprintf+4
 10318  010552  C1D5  F088         	movff	_display_LCD$7096+1,?_sprintf+5
 10319  010556  C1D6  F089         	movff	_display_LCD$7096+2,?_sprintf+6
 10320  01055A  C1D7  F08A         	movff	_display_LCD$7096+3,?_sprintf+7
 10321  01055E  C1D8  F08B         	movff	_display_LCD$7097,?_sprintf+8
 10322  010562  C1D9  F08C         	movff	_display_LCD$7097+1,?_sprintf+9
 10323  010566  C1DA  F08D         	movff	_display_LCD$7097+2,?_sprintf+10
 10324  01056A  C1DB  F08E         	movff	_display_LCD$7097+3,?_sprintf+11
 10325  01056E  C1DC  F08F         	movff	_display_LCD$7098,?_sprintf+12
 10326  010572  C1DD  F090         	movff	_display_LCD$7098+1,?_sprintf+13
 10327  010576  C1DE  F091         	movff	_display_LCD$7098+2,?_sprintf+14
 10328  01057A  C1DF  F092         	movff	_display_LCD$7098+3,?_sprintf+15
 10329  01057E  C1E0  F093         	movff	_display_LCD$7099,?_sprintf+16
 10330  010582  C1E1  F094         	movff	_display_LCD$7099+1,?_sprintf+17
 10331  010586  C1E2  F095         	movff	_display_LCD$7099+2,?_sprintf+18
 10332  01058A  C1E3  F096         	movff	_display_LCD$7099+3,?_sprintf+19
 10333  01058E  EC00  F080         	call	_sprintf	;wreg free
 10334                           
 10335                           ;LCD_print.c: 78: break;
 10336  010592  D009               	goto	l11174
 10337  010594                     l11172:
 10338  010594  5021               	movf	_data_item,w,c
 10339                           
 10340                           ; Switch size 1, requested type "space"
 10341                           ; Number of cases is 3, Range of values is 0 to 2
 10342                           ; switch strategies available:
 10343                           ; Name         Instructions Cycles
 10344                           ; simple_byte           10     6 (average)
 10345                           ;	Chosen strategy is simple_byte
 10346  010596  E101 D747          	bz	l11154
 10347  01059A  0A01               	xorlw	1	; case 1
 10348  01059C  E101 D760          	bz	l11156
 10349  0105A0  0A03               	xorlw	3	; case 2
 10350  0105A2  E101 D770          	bz	l11158
 10351  0105A6                     l11174:
 10352                           
 10353                           ;LCD_print.c: 80: ST7032_cursor(0, 1);
 10354  0105A6  D839               	call	PL176	;call to abstracted procedure
 10355  0105A8  EC11  F0A2         	call	_ST7032_cursor
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;LCD_print.c: 81: ST7032_puts(str);
 10359  0105AC  0EBC               	movlw	low display_LCD@str_575
 10360  0105AE  6F70               	movwf	ST7032_puts@s& (0+255),b
 10361  0105B0  0E01               	movlw	high display_LCD@str_575
 10362  0105B2                     L4:
 10363  0105B2  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 10364  0105B4  EFCD  F09F         	goto	l10030	;wreg free
 10365  0105B8                     l11180:
 10366                           
 10367                           ; BSR set to: 0
 10368  0105B8  51EC               	movf	_print_item& (0+255),w,b
 10369                           
 10370                           ; Switch size 1, requested type "space"
 10371                           ; Number of cases is 4, Range of values is 0 to 3
 10372                           ; switch strategies available:
 10373                           ; Name         Instructions Cycles
 10374                           ; simple_byte           13     7 (average)
 10375                           ;	Chosen strategy is simple_byte
 10376  0105BA  E101 D6C8          	bz	l11132
 10377  0105BE  0A01               	xorlw	1	; case 1
 10378  0105C0  E101 D6D6          	bz	l11138
 10379  0105C4  0A03               	xorlw	3	; case 2
 10380  0105C6  E101 D6F3          	bz	l11148
 10381  0105CA  0A01               	xorlw	1	; case 3
 10382  0105CC  E101 D6BF          	bz	l11132
 10383  0105D0  0012               	return		;funcret
 10384  0105D2                     __end_of_display_LCD:
 10385                           	opt stack 0
 10386  0105D2                     PL18:
 10387                           	opt stack 18
 10388  0105D2  0D17               	mullw	23
 10389  0105D4  0E43               	movlw	low (_port+6)
 10390  0105D6  24F3               	addwf	prodl,w,c
 10391  0105D8  6ED9               	movwf	fsr2l,c
 10392  0105DA  0E01               	movlw	high (_port+6)
 10393  0105DC  20F4               	addwfc	prodh,w,c
 10394  0105DE  6EDA               	movwf	fsr2h,c
 10395  0105E0  0012               	return	
 10396  0105E2                     __end_ofPL18:
 10397                           	opt stack 0
 10398  0105E2                     PL28:
 10399                           	opt stack 13
 10400  0105E2  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 10401  0105E4  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 10402  0105E6  5023               	movf	_print_port,w,c
 10403  0105E8  0D17               	mullw	23
 10404  0105EA  0E4D               	movlw	low (_port+16)
 10405  0105EC  24F3               	addwf	prodl,w,c
 10406  0105EE  6ED9               	movwf	fsr2l,c
 10407  0105F0  0E01               	movlw	high (_port+16)
 10408  0105F2  20F4               	addwfc	prodh,w,c
 10409  0105F4  6EDA               	movwf	fsr2h,c
 10410  0105F6  CFDE F060          	movff	postinc2,___lldiv@dividend
 10411  0105FA  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 10412  0105FE  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 10413  010602  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 10414  010606  0012               	return	
 10415  010608                     __end_ofPL28:
 10416                           	opt stack 0
 10417  010608                     PL90:
 10418                           	opt stack 13
 10419  010608  C060  F06D         	movff	?___lldiv,___llmod@dividend
 10420  01060C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 10421  010610  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 10422  010614  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 10423  010618  0012               	return	
 10424  01061A                     __end_ofPL90:
 10425                           	opt stack 0
 10426  01061A                     PL176:
 10427                           	opt stack 15
 10428  01061A  0E01               	movlw	1
 10429  01061C  0100               	movlb	0	; () banked
 10430  01061E  6F71               	movwf	ST7032_cursor@row& (0+255),b
 10431  010620  0C00               	retlw	0
 10432  010622                     __end_ofPL176:
 10433                           	opt stack 0
 10434  010622                     PL206:
 10435                           	opt stack 17
 10436  010622  6F64               	movwf	___lldiv@divisor& (0+255),b
 10437  010624  0E0E               	movlw	14
 10438  010626  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 10439  010628  0C0E               	retlw	14
 10440  01062A                     __end_ofPL206:
 10441                           	opt stack 0
 10442  01062A                     PL210:
 10443                           	opt stack 13
 10444  01062A  6F71               	movwf	___llmod@divisor& (0+255),b
 10445  01062C  6B72               	clrf	(___llmod@divisor+1)& (0+255),b
 10446  01062E  6B73               	clrf	(___llmod@divisor+2)& (0+255),b
 10447  010630  6B74               	clrf	(___llmod@divisor+3)& (0+255),b
 10448  010632  0012               	return	
 10449  010634                     __end_ofPL210:
 10450                           	opt stack 0
 10451  010634                     PL294:
 10452                           	opt stack 13
 10453  010634  0EBC               	movlw	low display_LCD@str_575
 10454  010636  0100               	movlb	0	; () banked
 10455  010638  6F83               	movwf	sprintf@sp& (0+255),b
 10456  01063A  0E01               	movlw	high display_LCD@str_575
 10457  01063C  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 10458  01063E  0012               	return	
 10459  010640                     __end_ofPL294:
 10460                           	opt stack 0
 10461  010640                     PL336:
 10462                           	opt stack 13
 10463  010640  0EBC               	movlw	low display_LCD@str_575
 10464  010642  6F83               	movwf	sprintf@sp& (0+255),b
 10465  010644  0E01               	movlw	high display_LCD@str_575
 10466  010646  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 10467  010648  0012               	return	
 10468  01064A                     __end_ofPL336:
 10469                           	opt stack 0
 10470                           tblptru	equ	0xFF8
 10471                           tblptrh	equ	0xFF7
 10472                           tblptrl	equ	0xFF6
 10473                           tablat	equ	0xFF5
 10474                           prodh	equ	0xFF4
 10475                           prodl	equ	0xFF3
 10476                           intcon	equ	0xFF2
 10477                           intcon2	equ	0xFF1
 10478                           postinc0	equ	0xFEE
 10479                           wreg	equ	0xFE8
 10480                           indf1	equ	0xFE7
 10481                           postinc1	equ	0xFE6
 10482                           postdec1	equ	0xFE5
 10483                           fsr1h	equ	0xFE2
 10484                           fsr1l	equ	0xFE1
 10485                           indf2	equ	0xFDF
 10486                           postinc2	equ	0xFDE
 10487                           postdec2	equ	0xFDD
 10488                           plusw2	equ	0xFDB
 10489                           fsr2h	equ	0xFDA
 10490                           fsr2l	equ	0xFD9
 10491                           status	equ	0xFD8
 10492                           
 10493 ;; *************** function _display_time_1602 *****************
 10494 ;; Defined at:
 10495 ;;		line 244 in file "../My_library/My_RTCC.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;  tm              2   82[BANK0 ] PTR struct .
 10498 ;;		 -> now(14), 
 10499 ;;  line0           2   84[BANK0 ] PTR unsigned char 
 10500 ;;		 -> display_LCD@str(40), 
 10501 ;;  line1           2   86[BANK0 ] PTR unsigned char 
 10502 ;;		 -> display_LCD@str(40), 
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;		None
 10505 ;; Return value:  Size  Location     Type
 10506 ;;		None               void
 10507 ;; Registers used:
 10508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10509 ;; Tracked objects:
 10510 ;;		On entry : F/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10514 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10517 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10518 ;;Total ram usage:        6 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:   15
 10521 ;; This function calls:
 10522 ;;		_RTCC_from_RTCC
 10523 ;;		_display_dec
 10524 ;;		_strcat
 10525 ;;		_strcpy
 10526 ;; This function is called by:
 10527 ;;		_display_LCD
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           	psect	text32
 10532  010C8C                     __ptext32:
 10533                           	opt stack 0
 10534  010C8C                     _display_time_1602:
 10535                           	opt stack 13
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;My_RTCC.c: 245: RTCC_from_RTCC(&now);
 10539                           
 10540                           ;incstack = 0
 10541  010C8C  0E8F               	movlw	low _now
 10542  010C8E  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 10543  010C90  0E02               	movlw	high _now
 10544  010C92  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 10545  010C94  EC92  F0A2         	call	_RTCC_from_RTCC	;wreg free
 10546                           
 10547                           ; BSR set to: 0
 10548                           ;My_RTCC.c: 247: strcpy(line0, "");
 10549  010C98  C0B4  F060         	movff	display_time_1602@line0,strcpy@to
 10550  010C9C  C0B5  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 10551  010CA0  0EE6               	movlw	low (STR_96+3)
 10552  010CA2  6F62               	movwf	strcpy@from& (0+255),b
 10553  010CA4  0EFF               	movlw	high (STR_96+3)
 10554  010CA6  6F63               	movwf	(strcpy@from+1)& (0+255),b
 10555  010CA8  ECA5  F0A0         	call	_strcpy	;wreg free
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;My_RTCC.c: 248: display_dec(line0, 20, tm->edit.flag.YY);
 10559  010CAC  C0B4  F0AA         	movff	display_time_1602@line0,display_dec@str
 10560  010CB0  C0B5  F0AB         	movff	display_time_1602@line0+1,display_dec@str+1
 10561  010CB4  0E14               	movlw	20
 10562  010CB6  6FAC               	movwf	display_dec@dec& (0+255),b
 10563  010CB8  EE20 F00D          	lfsr	2,13
 10564  010CBC  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10565  010CBE  26D9               	addwf	fsr2l,f,c
 10566  010CC0  51B3               	movf	(display_time_1602@tm+1)& (0+255),w,b
 10567  010CC2  22DA               	addwfc	fsr2h,f,c
 10568  010CC4  0E00               	movlw	0
 10569  010CC6  D8B4               	call	PL366	;call to abstracted procedure
 10570  010CC8  EC5C  F09E         	call	_display_dec	;wreg free
 10571                           
 10572                           ;My_RTCC.c: 249: display_dec(line0, tm->YY, tm->edit.flag.YY);
 10573  010CCC  D89B               	call	PL200	;call to abstracted procedure
 10574  010CCE  EE20 F00A          	lfsr	2,10
 10575  010CD2  D881               	call	PL12	;call to abstracted procedure
 10576  010CD4  D8AD               	call	PL366	;call to abstracted procedure
 10577  010CD6  EC5C  F09E         	call	_display_dec	;wreg free
 10578                           
 10579                           ;My_RTCC.c: 250: strcat(line0, "/");
 10580  010CDA  D88F               	call	PL180	;call to abstracted procedure
 10581  010CDC  D8A3               	call	PL292	;call to abstracted procedure
 10582  010CDE  EC77  F09D         	call	_strcat	;wreg free
 10583                           
 10584                           ;My_RTCC.c: 251: display_dec(line0, tm->MM, tm->edit.flag.MM);
 10585  010CE2  D890               	call	PL200	;call to abstracted procedure
 10586  010CE4  EE20 F009          	lfsr	2,9
 10587  010CE8  D876               	call	PL12	;call to abstracted procedure
 10588  010CEA  B8DF               	btfsc	indf2,4,c
 10589  010CEC  0E01               	movlw	1
 10590  010CEE  6FAD               	movwf	display_dec@edit& (0+255),b
 10591  010CF0  EC5C  F09E         	call	_display_dec	;wreg free
 10592                           
 10593                           ;My_RTCC.c: 252: strcat(line0, "/");
 10594  010CF4  D882               	call	PL180	;call to abstracted procedure
 10595  010CF6  D896               	call	PL292	;call to abstracted procedure
 10596  010CF8  EC77  F09D         	call	_strcat	;wreg free
 10597                           
 10598                           ;My_RTCC.c: 253: display_dec(line0, tm->DD, tm->edit.flag.DD);
 10599  010CFC  D883               	call	PL200	;call to abstracted procedure
 10600  010CFE  EE20 F008          	lfsr	2,8
 10601  010D02  D869               	call	PL12	;call to abstracted procedure
 10602  010D04  B6DF               	btfsc	indf2,3,c
 10603  010D06  0E01               	movlw	1
 10604  010D08  6FAD               	movwf	display_dec@edit& (0+255),b
 10605  010D0A  EC5C  F09E         	call	_display_dec	;wreg free
 10606                           
 10607                           ;My_RTCC.c: 254: strcat(line0, "(");
 10608  010D0E  D875               	call	PL180	;call to abstracted procedure
 10609  010D10  0EF5               	movlw	low STR_90
 10610  010D12  0100               	movlb	0	; () banked
 10611  010D14  6F62               	movwf	strcat@from& (0+255),b
 10612  010D16  0EFF               	movlw	high STR_90
 10613  010D18  6F63               	movwf	(strcat@from+1)& (0+255),b
 10614  010D1A  EC77  F09D         	call	_strcat	;wreg free
 10615                           
 10616                           ;My_RTCC.c: 255: strcat(line0, weekday_3char[tm->EE]);
 10617  010D1E  D86D               	call	PL180	;call to abstracted procedure
 10618  010D20  0100               	movlb	0	; () banked
 10619  010D22  EE20 F007          	lfsr	2,7
 10620  010D26  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10621  010D28  D863               	call	PL14	;call to abstracted procedure
 10622  010D2A  0D04               	mullw	4
 10623  010D2C  0EA4               	movlw	low _weekday_3char
 10624  010D2E  24F3               	addwf	prodl,w,c
 10625  010D30  6F62               	movwf	strcat@from& (0+255),b
 10626  010D32  0EFB               	movlw	high _weekday_3char
 10627  010D34  20F4               	addwfc	prodh,w,c
 10628  010D36  6F63               	movwf	(strcat@from+1)& (0+255),b
 10629  010D38  EC77  F09D         	call	_strcat	;wreg free
 10630                           
 10631                           ;My_RTCC.c: 256: strcat(line0, ")");
 10632  010D3C  D85E               	call	PL180	;call to abstracted procedure
 10633  010D3E  0E8F               	movlw	low (STR_118+5)
 10634  010D40  0100               	movlb	0	; () banked
 10635  010D42  6F62               	movwf	strcat@from& (0+255),b
 10636  010D44  0EFF               	movlw	high (STR_118+5)
 10637  010D46  6F63               	movwf	(strcat@from+1)& (0+255),b
 10638  010D48  EC77  F09D         	call	_strcat	;wreg free
 10639                           
 10640                           ;My_RTCC.c: 258: strcpy(line1, "        ");
 10641  010D4C  C0B6  F060         	movff	display_time_1602@line1,strcpy@to
 10642  010D50  C0B7  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 10643  010D54  0E5E               	movlw	low STR_92
 10644  010D56  0100               	movlb	0	; () banked
 10645  010D58  6F62               	movwf	strcpy@from& (0+255),b
 10646  010D5A  0EFF               	movlw	high STR_92
 10647  010D5C  6F63               	movwf	(strcpy@from+1)& (0+255),b
 10648  010D5E  ECA5  F0A0         	call	_strcpy	;wreg free
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;My_RTCC.c: 259: display_dec(line1, tm->hh, tm->edit.flag.hh);
 10652  010D62  D856               	call	PL260	;call to abstracted procedure
 10653  010D64  EE20 F006          	lfsr	2,6
 10654  010D68  D836               	call	PL12	;call to abstracted procedure
 10655  010D6A  B4DF               	btfsc	indf2,2,c
 10656  010D6C  0E01               	movlw	1
 10657  010D6E  6FAD               	movwf	display_dec@edit& (0+255),b
 10658  010D70  EC5C  F09E         	call	_display_dec	;wreg free
 10659                           
 10660                           ;My_RTCC.c: 260: if (tm->colon) strcat(line1, ":");
 10661  010D74  0100               	movlb	0	; () banked
 10662  010D76  EE20 F00B          	lfsr	2,11
 10663  010D7A  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10664  010D7C  D839               	call	PL14	;call to abstracted procedure
 10665  010D7E  E008               	bz	l10450
 10666                           
 10667                           ; BSR set to: 0
 10668  010D80  D84C               	call	PL268	;call to abstracted procedure
 10669  010D82  0EFB               	movlw	low STR_84
 10670  010D84  6F62               	movwf	strcat@from& (0+255),b
 10671  010D86  0EFF               	movlw	high STR_84
 10672  010D88  6F63               	movwf	(strcat@from+1)& (0+255),b
 10673  010D8A  EC77  F09D         	call	_strcat	;wreg free
 10674  010D8E  D007               	goto	l10452
 10675  010D90                     l10450:
 10676                           
 10677                           ; BSR set to: 0
 10678                           ;My_RTCC.c: 261: else strcat(line1, " ");
 10679  010D90  D844               	call	PL268	;call to abstracted procedure
 10680  010D92  0E65               	movlw	low (STR_92+7)
 10681  010D94  6F62               	movwf	strcat@from& (0+255),b
 10682  010D96  0EFF               	movlw	high (STR_92+7)
 10683  010D98  6F63               	movwf	(strcat@from+1)& (0+255),b
 10684  010D9A  EC77  F09D         	call	_strcat	;wreg free
 10685  010D9E                     l10452:
 10686                           
 10687                           ;My_RTCC.c: 262: display_dec(line1, tm->mm, tm->edit.flag.mm);
 10688  010D9E  D838               	call	PL260	;call to abstracted procedure
 10689  010DA0  0100               	movlb	0	; () banked
 10690  010DA2  EE20 F005          	lfsr	2,5
 10691  010DA6  D817               	call	PL12	;call to abstracted procedure
 10692  010DA8  B2DF               	btfsc	indf2,1,c
 10693  010DAA  0E01               	movlw	1
 10694  010DAC  6FAD               	movwf	display_dec@edit& (0+255),b
 10695  010DAE  EC5C  F09E         	call	_display_dec	;wreg free
 10696                           
 10697                           ;My_RTCC.c: 263: strcat(line1, "-");
 10698  010DB2  D833               	call	PL268	;call to abstracted procedure
 10699  010DB4  0EF7               	movlw	low STR_86
 10700  010DB6  0100               	movlb	0	; () banked
 10701  010DB8  6F62               	movwf	strcat@from& (0+255),b
 10702  010DBA  0EFF               	movlw	high STR_86
 10703  010DBC  6F63               	movwf	(strcat@from+1)& (0+255),b
 10704  010DBE  EC77  F09D         	call	_strcat	;wreg free
 10705                           
 10706                           ;My_RTCC.c: 264: display_dec(line1, tm->ss, tm->edit.flag.ss);
 10707  010DC2  D826               	call	PL260	;call to abstracted procedure
 10708  010DC4  0100               	movlb	0	; () banked
 10709  010DC6  EE20 F004          	lfsr	2,4
 10710  010DCA  D805               	call	PL12	;call to abstracted procedure
 10711  010DCC  B0DF               	btfsc	indf2,0,c
 10712  010DCE  0E01               	movlw	1
 10713  010DD0  6FAD               	movwf	display_dec@edit& (0+255),b
 10714  010DD2  EF5C  F09E         	goto	_display_dec	;wreg free
 10715  010DD6                     __end_of_display_time_1602:
 10716                           	opt stack 0
 10717  010DD6                     PL12:
 10718                           	opt stack 13
 10719  010DD6  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10720  010DD8  26D9               	addwf	fsr2l,f,c
 10721  010DDA  51B3               	movf	(display_time_1602@tm+1)& (0+255),w,b
 10722  010DDC  22DA               	addwfc	fsr2h,f,c
 10723  010DDE  50DF               	movf	indf2,w,c
 10724  010DE0  6FAC               	movwf	display_dec@dec& (0+255),b
 10725  010DE2  EE20 F00D          	lfsr	2,13
 10726  010DE6  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10727  010DE8  26D9               	addwf	fsr2l,f,c
 10728  010DEA  51B3               	movf	(display_time_1602@tm+1)& (0+255),w,b
 10729  010DEC  22DA               	addwfc	fsr2h,f,c
 10730  010DEE  0C00               	retlw	0
 10731  010DF0                     __end_ofPL12:
 10732                           	opt stack 0
 10733  010DF0                     PL14:
 10734                           	opt stack 13
 10735  010DF0  26D9               	addwf	fsr2l,f,c
 10736  010DF2  51B3               	movf	(display_time_1602@tm+1)& (0+255),w,b
 10737  010DF4  22DA               	addwfc	fsr2h,f,c
 10738  010DF6  50DF               	movf	indf2,w,c
 10739  010DF8  0012               	return	
 10740  010DFA                     __end_ofPL14:
 10741                           	opt stack 0
 10742  010DFA                     PL180:
 10743                           	opt stack 13
 10744  010DFA  C0B4  F060         	movff	display_time_1602@line0,strcat@to
 10745  010DFE  C0B5  F061         	movff	display_time_1602@line0+1,strcat@to+1
 10746  010E02  0012               	return	
 10747  010E04                     __end_ofPL180:
 10748                           	opt stack 0
 10749  010E04                     PL200:
 10750                           	opt stack 13
 10751  010E04  C0B4  F0AA         	movff	display_time_1602@line0,display_dec@str
 10752  010E08  C0B5  F0AB         	movff	display_time_1602@line0+1,display_dec@str+1
 10753  010E0C  0100               	movlb	0	; () banked
 10754  010E0E  0012               	return	
 10755  010E10                     __end_ofPL200:
 10756                           	opt stack 0
 10757  010E10                     PL260:
 10758                           	opt stack 13
 10759  010E10  C0B6  F0AA         	movff	display_time_1602@line1,display_dec@str
 10760  010E14  C0B7  F0AB         	movff	display_time_1602@line1+1,display_dec@str+1
 10761  010E18  0012               	return	
 10762  010E1A                     __end_ofPL260:
 10763                           	opt stack 0
 10764  010E1A                     PL268:
 10765                           	opt stack 13
 10766  010E1A  C0B6  F060         	movff	display_time_1602@line1,strcat@to
 10767  010E1E  C0B7  F061         	movff	display_time_1602@line1+1,strcat@to+1
 10768  010E22  0012               	return	
 10769  010E24                     __end_ofPL268:
 10770                           	opt stack 0
 10771  010E24                     PL292:
 10772                           	opt stack 13
 10773  010E24  0EF9               	movlw	low STR_81
 10774  010E26  0100               	movlb	0	; () banked
 10775  010E28  6F62               	movwf	strcat@from& (0+255),b
 10776  010E2A  0EFF               	movlw	high STR_81
 10777  010E2C  6F63               	movwf	(strcat@from+1)& (0+255),b
 10778  010E2E  0012               	return	
 10779  010E30                     __end_ofPL292:
 10780                           	opt stack 0
 10781  010E30                     PL366:
 10782                           	opt stack 13
 10783  010E30  BADF               	btfsc	indf2,5,c
 10784  010E32  0E01               	movlw	1
 10785  010E34  6FAD               	movwf	display_dec@edit& (0+255),b
 10786  010E36  0012               	return	
 10787  010E38                     __end_ofPL366:
 10788                           	opt stack 0
 10789                           tblptru	equ	0xFF8
 10790                           tblptrh	equ	0xFF7
 10791                           tblptrl	equ	0xFF6
 10792                           tablat	equ	0xFF5
 10793                           prodh	equ	0xFF4
 10794                           prodl	equ	0xFF3
 10795                           intcon	equ	0xFF2
 10796                           intcon2	equ	0xFF1
 10797                           postinc0	equ	0xFEE
 10798                           wreg	equ	0xFE8
 10799                           indf1	equ	0xFE7
 10800                           postinc1	equ	0xFE6
 10801                           postdec1	equ	0xFE5
 10802                           fsr1h	equ	0xFE2
 10803                           fsr1l	equ	0xFE1
 10804                           indf2	equ	0xFDF
 10805                           postinc2	equ	0xFDE
 10806                           postdec2	equ	0xFDD
 10807                           plusw2	equ	0xFDB
 10808                           fsr2h	equ	0xFDA
 10809                           fsr2l	equ	0xFD9
 10810                           status	equ	0xFD8
 10811                           
 10812 ;; *************** function _strcpy *****************
 10813 ;; Defined at:
 10814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  to              2    0[BANK0 ] PTR unsigned char 
 10817 ;;		 -> settings_integrating_reset@str_1344(20), settings_integrating_reset@str(20), settings_led_indicator@str_1327(20)
      +, settings_led_indicator@str(20), 
 10818 ;;		 -> settings_auto_stop@str_1310(20), settings_auto_stop@str(20), display_LCD@str(40), 
 10819 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 10820 ;;		 -> STR_92(9), STR_87(1), STR_83(1), STR_80(1), 
 10821 ;;		 -> STR_60(6), STR_59(6), STR_57(6), STR_56(6), 
 10822 ;;		 -> STR_52(6), STR_51(6), STR_49(6), STR_48(6), 
 10823 ;;		 -> STR_44(6), STR_43(6), STR_41(6), STR_40(6), 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 10826 ;;		 -> settings_integrating_reset@str_1344(20), settings_integrating_reset@str(20), settings_led_indicator@str_1327(20)
      +, settings_led_indicator@str(20), 
 10827 ;;		 -> settings_auto_stop@str_1310(20), settings_auto_stop@str(20), display_LCD@str(40), 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  2    0[BANK0 ] PTR unsigned char 
 10830 ;; Registers used:
 10831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10832 ;; Tracked objects:
 10833 ;;		On entry : F/0
 10834 ;;		On exit  : F/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10838 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10840 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;Total ram usage:        6 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:   11
 10844 ;; This function calls:
 10845 ;;		Nothing
 10846 ;; This function is called by:
 10847 ;;		_settings_auto_stop
 10848 ;;		_settings_led_indicator
 10849 ;;		_settings_integrating_reset
 10850 ;;		_display_time_1602
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text33
 10855  01414A                     __ptext33:
 10856                           	opt stack 0
 10857  01414A                     _strcpy:
 10858                           	opt stack 16
 10859                           
 10860                           ; BSR set to: 0
 10861                           
 10862                           ;incstack = 0
 10863  01414A  C060  F064         	movff	strcpy@to,strcpy@cp
 10864  01414E  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 10865  014152  D004               	goto	l10244
 10866  014154                     l10242:
 10867                           
 10868                           ; BSR set to: 0
 10869  014154  4B64               	infsnz	strcpy@cp& (0+255),f,b
 10870  014156  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 10871  014158  4B62               	infsnz	strcpy@from& (0+255),f,b
 10872  01415A  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 10873  01415C                     l10244:
 10874                           
 10875                           ; BSR set to: 0
 10876  01415C  C062  FFF6         	movff	strcpy@from,tblptrl
 10877  014160  C063  FFF7         	movff	strcpy@from+1,tblptrh
 10878  014164                     	if	0	;tblptru may be non-zero
 10879  014164                     	endif
 10880  014164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10881  014164  0E00               	movlw	low (__mediumconst shr (0+16))
 10882  014166  6EF8               	movwf	tblptru,c
 10883  014168                     	endif
 10884  014168  C064  FFD9         	movff	strcpy@cp,fsr2l
 10885  01416C  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 10886  014170  0008               	tblrd		*
 10887  014172  CFF5 FFDF          	movff	tablat,indf2
 10888  014176  50DF               	movf	indf2,w,c
 10889  014178  E1ED               	bnz	l10242
 10890                           
 10891                           ; BSR set to: 0
 10892  01417A  0012               	return		;funcret
 10893  01417C                     __end_of_strcpy:
 10894                           	opt stack 0
 10895                           tblptru	equ	0xFF8
 10896                           tblptrh	equ	0xFF7
 10897                           tblptrl	equ	0xFF6
 10898                           tablat	equ	0xFF5
 10899                           prodh	equ	0xFF4
 10900                           prodl	equ	0xFF3
 10901                           intcon	equ	0xFF2
 10902                           intcon2	equ	0xFF1
 10903                           postinc0	equ	0xFEE
 10904                           wreg	equ	0xFE8
 10905                           indf1	equ	0xFE7
 10906                           postinc1	equ	0xFE6
 10907                           postdec1	equ	0xFE5
 10908                           fsr1h	equ	0xFE2
 10909                           fsr1l	equ	0xFE1
 10910                           indf2	equ	0xFDF
 10911                           postinc2	equ	0xFDE
 10912                           postdec2	equ	0xFDD
 10913                           plusw2	equ	0xFDB
 10914                           fsr2h	equ	0xFDA
 10915                           fsr2l	equ	0xFD9
 10916                           status	equ	0xFD8
 10917                           
 10918 ;; *************** function _display_dec *****************
 10919 ;; Defined at:
 10920 ;;		line 218 in file "../My_library/My_RTCC.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  str             2   74[BANK0 ] PTR unsigned char 
 10923 ;;		 -> display_LCD@str(40), 
 10924 ;;  dec             1   76[BANK0 ] unsigned char 
 10925 ;;  edit            1   77[BANK0 ] unsigned char 
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;  s               4   78[BANK0 ] unsigned char [4]
 10928 ;; Return value:  Size  Location     Type
 10929 ;;		None               void
 10930 ;; Registers used:
 10931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10932 ;; Tracked objects:
 10933 ;;		On entry : F/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10937 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10938 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10940 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10941 ;;Total ram usage:        8 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; Hardware stack levels required when called:   13
 10944 ;; This function calls:
 10945 ;;		_sprintf
 10946 ;;		_strcat
 10947 ;; This function is called by:
 10948 ;;		_display_time_1602
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952                           	psect	text34
 10953  013CB8                     __ptext34:
 10954                           	opt stack 0
 10955  013CB8                     _display_dec:
 10956                           	opt stack 14
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;My_RTCC.c: 219: char s[4];
 10960                           ;My_RTCC.c: 220: sprintf(s, "%02d", dec);
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;incstack = 0
 10964  013CB8  0EAE               	movlw	low display_dec@s
 10965  013CBA  6F83               	movwf	sprintf@sp& (0+255),b
 10966  013CBC  6B84               	clrf	(sprintf@sp+1)& (0+255),b
 10967  013CBE  0EFC               	movlw	low (STR_27+27)
 10968  013CC0  6F85               	movwf	sprintf@f& (0+255),b
 10969  013CC2  0EFD               	movlw	high (STR_27+27)
 10970  013CC4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10971  013CC6  C0AC  F087         	movff	display_dec@dec,?_sprintf+4
 10972  013CCA  6B88               	clrf	(?_sprintf+5)& (0+255),b
 10973  013CCC  EC00  F080         	call	_sprintf	;wreg free
 10974                           
 10975                           ; BSR set to: 0
 10976                           ;My_RTCC.c: 221: if (edit && now.halfsec)strcat(str, "  ");
 10977  013CD0  51AD               	movf	display_dec@edit& (0+255),w,b
 10978  013CD2  E00B               	bz	l10254
 10979                           
 10980                           ; BSR set to: 0
 10981  013CD4  0102               	movlb	2	; () banked
 10982  013CD6  519B               	movf	(_now+12)& (0+255),w,b
 10983  013CD8  E008               	bz	l10254
 10984                           
 10985                           ; BSR set to: 2
 10986  013CDA  D80E               	call	PL314	;call to abstracted procedure
 10987  013CDC  0E64               	movlw	low (STR_92+6)
 10988  013CDE  0100               	movlb	0	; () banked
 10989  013CE0  6F62               	movwf	strcat@from& (0+255),b
 10990  013CE2  0EFF               	movlw	high (STR_92+6)
 10991  013CE4  6F63               	movwf	(strcat@from+1)& (0+255),b
 10992  013CE6  EF77  F09D         	goto	_strcat	;wreg free
 10993  013CEA                     l10254:
 10994                           
 10995                           ;My_RTCC.c: 222: else strcat(str, s);
 10996  013CEA  D806               	call	PL314	;call to abstracted procedure
 10997  013CEC  0EAE               	movlw	low display_dec@s
 10998  013CEE  0100               	movlb	0	; () banked
 10999  013CF0  6F62               	movwf	strcat@from& (0+255),b
 11000  013CF2  6B63               	clrf	(strcat@from+1)& (0+255),b
 11001  013CF4  EF77  F09D         	goto	_strcat	;wreg free
 11002  013CF8                     __end_of_display_dec:
 11003                           	opt stack 0
 11004  013CF8                     PL314:
 11005                           	opt stack 14
 11006  013CF8  C0AA  F060         	movff	display_dec@str,strcat@to
 11007  013CFC  C0AB  F061         	movff	display_dec@str+1,strcat@to+1
 11008  013D00  0012               	return	
 11009  013D02                     __end_ofPL314:
 11010                           	opt stack 0
 11011                           tblptru	equ	0xFF8
 11012                           tblptrh	equ	0xFF7
 11013                           tblptrl	equ	0xFF6
 11014                           tablat	equ	0xFF5
 11015                           prodh	equ	0xFF4
 11016                           prodl	equ	0xFF3
 11017                           intcon	equ	0xFF2
 11018                           intcon2	equ	0xFF1
 11019                           postinc0	equ	0xFEE
 11020                           wreg	equ	0xFE8
 11021                           indf1	equ	0xFE7
 11022                           postinc1	equ	0xFE6
 11023                           postdec1	equ	0xFE5
 11024                           fsr1h	equ	0xFE2
 11025                           fsr1l	equ	0xFE1
 11026                           indf2	equ	0xFDF
 11027                           postinc2	equ	0xFDE
 11028                           postdec2	equ	0xFDD
 11029                           plusw2	equ	0xFDB
 11030                           fsr2h	equ	0xFDA
 11031                           fsr2l	equ	0xFD9
 11032                           status	equ	0xFD8
 11033                           
 11034 ;; *************** function _strcat *****************
 11035 ;; Defined at:
 11036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;  to              2    0[BANK0 ] PTR unsigned char 
 11039 ;;		 -> display_LCD@str(40), 
 11040 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 11041 ;;		 -> STR_95(2), STR_94(2), STR_93(2), STR_91(2), 
 11042 ;;		 -> weekday_3char(28), STR_90(2), STR_89(2), STR_88(2), 
 11043 ;;		 -> STR_86(2), STR_85(2), STR_84(2), STR_82(2), 
 11044 ;;		 -> STR_81(2), STR_79(3), display_dec@s(4), 
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 11047 ;;		 -> display_LCD@str(40), 
 11048 ;; Return value:  Size  Location     Type
 11049 ;;                  2    0[BANK0 ] PTR unsigned char 
 11050 ;; Registers used:
 11051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11052 ;; Tracked objects:
 11053 ;;		On entry : F/0
 11054 ;;		On exit  : 0/0
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11058 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11060 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11061 ;;Total ram usage:        6 bytes
 11062 ;; Hardware stack levels used:    1
 11063 ;; Hardware stack levels required when called:   11
 11064 ;; This function calls:
 11065 ;;		Nothing
 11066 ;; This function is called by:
 11067 ;;		_display_dec
 11068 ;;		_display_time_1602
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072                           	psect	text35
 11073  013AEE                     __ptext35:
 11074                           	opt stack 0
 11075  013AEE                     _strcat:
 11076                           	opt stack 16
 11077                           
 11078                           ; BSR set to: 0
 11079                           
 11080                           ;incstack = 0
 11081  013AEE  C060  F064         	movff	strcat@to,strcat@cp
 11082  013AF2  C061  F065         	movff	strcat@to+1,strcat@cp+1
 11083  013AF6  D002               	goto	l9964
 11084  013AF8                     l9962:
 11085                           
 11086                           ; BSR set to: 0
 11087  013AF8  4B64               	infsnz	strcat@cp& (0+255),f,b
 11088  013AFA  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 11089  013AFC                     l9964:
 11090                           
 11091                           ; BSR set to: 0
 11092  013AFC  D81B               	call	PL312	;call to abstracted procedure
 11093  013AFE  50DF               	movf	indf2,w,c
 11094  013B00  E006               	bz	l9968
 11095  013B02  D7FA               	goto	l9962
 11096  013B04                     l9966:
 11097  013B04  0100               	movlb	0	; () banked
 11098  013B06  4B64               	infsnz	strcat@cp& (0+255),f,b
 11099  013B08  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 11100  013B0A  4B62               	infsnz	strcat@from& (0+255),f,b
 11101  013B0C  2B63               	incf	(strcat@from+1)& (0+255),f,b
 11102  013B0E                     l9968:
 11103                           
 11104                           ; BSR set to: 0
 11105  013B0E  C062  FFF6         	movff	strcat@from,tblptrl
 11106  013B12  C063  FFF7         	movff	strcat@from+1,tblptrh
 11107  013B16  0E00               	movlw	low (__mediumconst shr (0+16))
 11108  013B18  6EF8               	movwf	tblptru,c
 11109  013B1A  D80C               	call	PL312	;call to abstracted procedure
 11110  013B1C  0E0E               	movlw	(high __ramtop+-1)
 11111  013B1E  64F7               	cpfsgt	tblptrh,c
 11112  013B20  D003               	bra	u10277
 11113  013B22  0008               	tblrd		*
 11114  013B24  50F5               	movf	tablat,w,c
 11115  013B26  D002               	bra	u10270
 11116  013B28                     u10277:
 11117  013B28  ECD4  F08F         	call	PL24	;call to abstracted procedure
 11118  013B2C                     u10270:
 11119  013B2C  6EDF               	movwf	indf2,c
 11120  013B2E  50DF               	movf	indf2,w,c
 11121  013B30  E1E9               	bnz	l9966
 11122  013B32  0012               	return		;funcret
 11123  013B34                     __end_of_strcat:
 11124                           	opt stack 0
 11125  013B34                     PL312:
 11126                           	opt stack 16
 11127  013B34  C064  FFD9         	movff	strcat@cp,fsr2l
 11128  013B38  C065  FFDA         	movff	strcat@cp+1,fsr2h
 11129  013B3C  0012               	return	
 11130  013B3E                     __end_ofPL312:
 11131                           	opt stack 0
 11132                           tblptru	equ	0xFF8
 11133                           tblptrh	equ	0xFF7
 11134                           tblptrl	equ	0xFF6
 11135                           tablat	equ	0xFF5
 11136                           prodh	equ	0xFF4
 11137                           prodl	equ	0xFF3
 11138                           intcon	equ	0xFF2
 11139                           intcon2	equ	0xFF1
 11140                           postinc0	equ	0xFEE
 11141                           wreg	equ	0xFE8
 11142                           indf1	equ	0xFE7
 11143                           postinc1	equ	0xFE6
 11144                           postdec1	equ	0xFE5
 11145                           fsr1h	equ	0xFE2
 11146                           fsr1l	equ	0xFE1
 11147                           indf2	equ	0xFDF
 11148                           postinc2	equ	0xFDE
 11149                           postdec2	equ	0xFDD
 11150                           plusw2	equ	0xFDB
 11151                           fsr2h	equ	0xFDA
 11152                           fsr2l	equ	0xFD9
 11153                           status	equ	0xFD8
 11154                           
 11155 ;; *************** function _ST7032_puts *****************
 11156 ;; Defined at:
 11157 ;;		line 43 in file "../My_library/My_ST7032.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 11160 ;;		 -> display_LCD@str_575(20), display_LCD@str(40), display_char(40), STR_10(16), 
 11161 ;;		 -> STR_9(12), STR_6(13), STR_5(17), 
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;		None
 11164 ;; Return value:  Size  Location     Type
 11165 ;;		None               void
 11166 ;; Registers used:
 11167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11168 ;; Tracked objects:
 11169 ;;		On entry : F/0
 11170 ;;		On exit  : 0/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11177 ;;Total ram usage:        2 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; Hardware stack levels required when called:   14
 11180 ;; This function calls:
 11181 ;;		_ST7032_put
 11182 ;; This function is called by:
 11183 ;;		_sleep_task
 11184 ;;		_bootload
 11185 ;;		_display_LCD
 11186 ;; This function uses a non-reentrant model
 11187 ;;
 11188                           
 11189                           	psect	text36
 11190  013F80                     __ptext36:
 11191                           	opt stack 0
 11192  013F80                     _ST7032_puts:
 11193                           	opt stack 13
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;My_ST7032.c: 44: while (*s) {
 11197                           
 11198                           ;incstack = 0
 11199  013F80  D00C               	goto	l10030
 11200  013F82                     l10026:
 11201                           
 11202                           ;My_ST7032.c: 45: ST7032_put(*s++);
 11203  013F82  D816               	call	PL230	;call to abstracted procedure
 11204  013F84  64F7               	cpfsgt	tblptrh,c
 11205  013F86  D003               	bra	u10437
 11206  013F88  0008               	tblrd		*
 11207  013F8A  50F5               	movf	tablat,w,c
 11208  013F8C  D002               	bra	u10430
 11209  013F8E                     u10437:
 11210  013F8E  ECD4  F08F         	call	PL24	;call to abstracted procedure
 11211  013F92                     u10430:
 11212  013F92  ECE0  F09F         	call	_ST7032_put
 11213                           
 11214                           ; BSR set to: 0
 11215  013F96  4B70               	infsnz	ST7032_puts@s& (0+255),f,b
 11216  013F98  2B71               	incf	(ST7032_puts@s+1)& (0+255),f,b
 11217  013F9A                     l10030:
 11218                           
 11219                           ; BSR set to: 0
 11220  013F9A  D80A               	call	PL230	;call to abstracted procedure
 11221  013F9C  64F7               	cpfsgt	tblptrh,c
 11222  013F9E  D003               	bra	u10447
 11223  013FA0  0008               	tblrd		*
 11224  013FA2  50F5               	movf	tablat,w,c
 11225  013FA4  D002               	bra	u10440
 11226  013FA6                     u10447:
 11227  013FA6  ECD4  F08F         	call	PL24	;call to abstracted procedure
 11228  013FAA                     u10440:
 11229  013FAA  0900               	iorlw	0
 11230  013FAC  E1EA               	bnz	l10026
 11231  013FAE  0012               	return		;funcret
 11232  013FB0                     __end_of_ST7032_puts:
 11233                           	opt stack 0
 11234  013FB0                     PL230:
 11235                           	opt stack 13
 11236  013FB0  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 11237  013FB4  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 11238  013FB8  0E00               	movlw	low (__mediumconst shr (0+16))
 11239  013FBA  6EF8               	movwf	tblptru,c
 11240  013FBC  0E0E               	movlw	(high __ramtop+-1)
 11241  013FBE  0012               	return	
 11242  013FC0                     __end_ofPL230:
 11243                           	opt stack 0
 11244                           tblptru	equ	0xFF8
 11245                           tblptrh	equ	0xFF7
 11246                           tblptrl	equ	0xFF6
 11247                           tablat	equ	0xFF5
 11248                           prodh	equ	0xFF4
 11249                           prodl	equ	0xFF3
 11250                           intcon	equ	0xFF2
 11251                           intcon2	equ	0xFF1
 11252                           postinc0	equ	0xFEE
 11253                           wreg	equ	0xFE8
 11254                           indf1	equ	0xFE7
 11255                           postinc1	equ	0xFE6
 11256                           postdec1	equ	0xFE5
 11257                           fsr1h	equ	0xFE2
 11258                           fsr1l	equ	0xFE1
 11259                           indf2	equ	0xFDF
 11260                           postinc2	equ	0xFDE
 11261                           postdec2	equ	0xFDD
 11262                           plusw2	equ	0xFDB
 11263                           fsr2h	equ	0xFDA
 11264                           fsr2l	equ	0xFD9
 11265                           status	equ	0xFD8
 11266                           
 11267 ;; *************** function _ST7032_put *****************
 11268 ;; Defined at:
 11269 ;;		line 35 in file "../My_library/My_ST7032.c"
 11270 ;; Parameters:    Size  Location     Type
 11271 ;;  c               1    wreg     unsigned char 
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;  c               1   15[BANK0 ] unsigned char 
 11274 ;; Return value:  Size  Location     Type
 11275 ;;		None               void
 11276 ;; Registers used:
 11277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11278 ;; Tracked objects:
 11279 ;;		On entry : 0/0
 11280 ;;		On exit  : F/0
 11281 ;;		Unchanged: 0/0
 11282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11286 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11287 ;;Total ram usage:        1 bytes
 11288 ;; Hardware stack levels used:    1
 11289 ;; Hardware stack levels required when called:   13
 11290 ;; This function calls:
 11291 ;;		_ringbuf_put
 11292 ;; This function is called by:
 11293 ;;		_ST7032_puts
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text37
 11298  013FC0                     __ptext37:
 11299                           	opt stack 0
 11300  013FC0                     _ST7032_put:
 11301                           	opt stack 13
 11302                           
 11303                           ;incstack = 0
 11304                           ;ST7032_put@c stored from wreg
 11305  013FC0  0100               	movlb	0	; () banked
 11306  013FC2  6F6F               	movwf	ST7032_put@c& (0+255),b
 11307                           
 11308                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 11309  013FC4  D817               	call	PL72	;call to abstracted procedure
 11310  013FC6  0E7C               	movlw	124
 11311  013FC8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 11312  013FCA  ECC5  F093         	call	_ringbuf_put	;wreg free
 11313                           
 11314                           ;My_ST7032.c: 37: ringbuf_put(&lcd_tx, 0b11000000);
 11315  013FCE  D812               	call	PL72	;call to abstracted procedure
 11316  013FD0  0EC0               	movlw	192
 11317  013FD2  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 11318  013FD4  ECC5  F093         	call	_ringbuf_put	;wreg free
 11319                           
 11320                           ;My_ST7032.c: 38: ringbuf_put(&lcd_tx, c);
 11321  013FD8  D80D               	call	PL72	;call to abstracted procedure
 11322  013FDA  C06F  F06A         	movff	ST7032_put@c,ringbuf_put@asciicode
 11323  013FDE  ECC5  F093         	call	_ringbuf_put	;wreg free
 11324                           
 11325                           ;My_ST7032.c: 39: ringbuf_put(&lcd_tx, 0);
 11326  013FE2  D808               	call	PL72	;call to abstracted procedure
 11327  013FE4  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
 11328  013FE6  ECC5  F093         	call	_ringbuf_put	;wreg free
 11329                           
 11330                           ;My_ST7032.c: 40: ringbuf_put(&lcd_tx, 1);
 11331  013FEA  D804               	call	PL72	;call to abstracted procedure
 11332  013FEC  0E01               	movlw	1
 11333  013FEE  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 11334  013FF0  EFC5  F093         	goto	_ringbuf_put	;wreg free
 11335  013FF4                     __end_of_ST7032_put:
 11336                           	opt stack 0
 11337  013FF4                     PL72:
 11338                           	opt stack 13
 11339  013FF4  0E82               	movlw	low _lcd_tx
 11340  013FF6  6F68               	movwf	ringbuf_put@rb& (0+255),b
 11341  013FF8  0E01               	movlw	high _lcd_tx
 11342  013FFA  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 11343  013FFC  0012               	return	
 11344  013FFE                     __end_ofPL72:
 11345                           	opt stack 0
 11346                           tblptru	equ	0xFF8
 11347                           tblptrh	equ	0xFF7
 11348                           tblptrl	equ	0xFF6
 11349                           tablat	equ	0xFF5
 11350                           prodh	equ	0xFF4
 11351                           prodl	equ	0xFF3
 11352                           intcon	equ	0xFF2
 11353                           intcon2	equ	0xFF1
 11354                           postinc0	equ	0xFEE
 11355                           wreg	equ	0xFE8
 11356                           indf1	equ	0xFE7
 11357                           postinc1	equ	0xFE6
 11358                           postdec1	equ	0xFE5
 11359                           fsr1h	equ	0xFE2
 11360                           fsr1l	equ	0xFE1
 11361                           indf2	equ	0xFDF
 11362                           postinc2	equ	0xFDE
 11363                           postdec2	equ	0xFDD
 11364                           plusw2	equ	0xFDB
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _ST7032_cursor *****************
 11370 ;; Defined at:
 11371 ;;		line 30 in file "../My_library/My_ST7032.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;  col             1    wreg     unsigned char 
 11374 ;;  row             1   17[BANK0 ] unsigned char 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  col             1   20[BANK0 ] unsigned char 
 11377 ;;  row_offsets     2   18[BANK0 ] unsigned char [2]
 11378 ;; Return value:  Size  Location     Type
 11379 ;;		None               void
 11380 ;; Registers used:
 11381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11382 ;; Tracked objects:
 11383 ;;		On entry : F/0
 11384 ;;		On exit  : F/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11387 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11388 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11390 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11391 ;;Total ram usage:        4 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:   14
 11394 ;; This function calls:
 11395 ;;		_ST7032_command
 11396 ;; This function is called by:
 11397 ;;		_sleep_task
 11398 ;;		_bootload
 11399 ;;		_display_LCD
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           	psect	text38
 11404  014422                     __ptext38:
 11405                           	opt stack 0
 11406  014422                     _ST7032_cursor:
 11407                           	opt stack 13
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;incstack = 0
 11411                           ;ST7032_cursor@col stored from wreg
 11412  014422  6F74               	movwf	ST7032_cursor@col& (0+255),b
 11413                           
 11414                           ;My_ST7032.c: 31: uint8_t row_offsets[] = {0x00, 0x40};
 11415  014424  C1FD  F072         	movff	ST7032_cursor@F8592,ST7032_cursor@row_offsets
 11416  014428  C1FE  F073         	movff	ST7032_cursor@F8592+1,ST7032_cursor@row_offsets+1
 11417                           
 11418                           ;My_ST7032.c: 32: ST7032_command(0x80 | (col + row_offsets[row]), 0);
 11419  01442C  0100               	movlb	0	; () banked
 11420  01442E  6B6F               	clrf	ST7032_command@wait& (0+255),b
 11421  014430  5171               	movf	ST7032_cursor@row& (0+255),w,b
 11422  014432  0F72               	addlw	low ST7032_cursor@row_offsets
 11423  014434  6ED9               	movwf	fsr2l,c
 11424  014436  6ADA               	clrf	fsr2h,c
 11425  014438  50DF               	movf	indf2,w,c
 11426  01443A  2574               	addwf	ST7032_cursor@col& (0+255),w,b
 11427  01443C  0980               	iorlw	128
 11428  01443E  EF7F  F09F         	goto	_ST7032_command
 11429  014442                     __end_of_ST7032_cursor:
 11430                           	opt stack 0
 11431                           tblptru	equ	0xFF8
 11432                           tblptrh	equ	0xFF7
 11433                           tblptrl	equ	0xFF6
 11434                           tablat	equ	0xFF5
 11435                           prodh	equ	0xFF4
 11436                           prodl	equ	0xFF3
 11437                           intcon	equ	0xFF2
 11438                           intcon2	equ	0xFF1
 11439                           postinc0	equ	0xFEE
 11440                           wreg	equ	0xFE8
 11441                           indf1	equ	0xFE7
 11442                           postinc1	equ	0xFE6
 11443                           postdec1	equ	0xFE5
 11444                           fsr1h	equ	0xFE2
 11445                           fsr1l	equ	0xFE1
 11446                           indf2	equ	0xFDF
 11447                           postinc2	equ	0xFDE
 11448                           postdec2	equ	0xFDD
 11449                           plusw2	equ	0xFDB
 11450                           fsr2h	equ	0xFDA
 11451                           fsr2l	equ	0xFD9
 11452                           status	equ	0xFD8
 11453                           
 11454 ;; *************** function _data_out *****************
 11455 ;; Defined at:
 11456 ;;		line 248 in file "ChargeStation_task.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;  tx              2   74[BANK0 ] PTR struct ringbuf
 11459 ;;		 -> usb_tx(8), 
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;  i               1  106[BANK0 ] unsigned char 
 11462 ;;  str            30   76[BANK0 ] unsigned char [30]
 11463 ;; Return value:  Size  Location     Type
 11464 ;;		None               void
 11465 ;; Registers used:
 11466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11467 ;; Tracked objects:
 11468 ;;		On entry : F/0
 11469 ;;		On exit  : 0/0
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11473 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11475 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;Total ram usage:       33 bytes
 11477 ;; Hardware stack levels used:    1
 11478 ;; Hardware stack levels required when called:   14
 11479 ;; This function calls:
 11480 ;;		___lwdiv
 11481 ;;		___lwmod
 11482 ;;		_ringbuf_put_str
 11483 ;;		_sprintf
 11484 ;; This function is called by:
 11485 ;;		_normal_task
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text39
 11490  011C10                     __ptext39:
 11491                           	opt stack 0
 11492  011C10                     _data_out:
 11493                           	opt stack 15
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;ChargeStation_task.c: 249: char str[30];
 11497                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 11498                           ;ChargeStation_task.c: 251: now.YY,
 11499                           ;ChargeStation_task.c: 252: now.MM,
 11500                           ;ChargeStation_task.c: 253: now.DD,
 11501                           ;ChargeStation_task.c: 254: now.hh,
 11502                           ;ChargeStation_task.c: 255: now.mm,
 11503                           ;ChargeStation_task.c: 256: now.ss
 11504                           ;ChargeStation_task.c: 257: );
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;incstack = 0
 11508  011C10  0EAC               	movlw	low data_out@str
 11509  011C12  6F83               	movwf	sprintf@sp& (0+255),b
 11510  011C14  6B84               	clrf	(sprintf@sp+1)& (0+255),b
 11511  011C16  0EE1               	movlw	low STR_27
 11512  011C18  6F85               	movwf	sprintf@f& (0+255),b
 11513  011C1A  0EFD               	movlw	high STR_27
 11514  011C1C  D851               	call	PL138	;call to abstracted procedure
 11515  011C1E  C295  F08D         	movff	_now+6,?_sprintf+10
 11516  011C22  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 11517  011C24  C294  F08F         	movff	_now+5,?_sprintf+12
 11518  011C28  6B90               	clrf	(?_sprintf+13)& (0+255),b
 11519  011C2A  C293  F091         	movff	_now+4,?_sprintf+14
 11520  011C2E  6B92               	clrf	(?_sprintf+15)& (0+255),b
 11521  011C30  EC00  F080         	call	_sprintf	;wreg free
 11522                           
 11523                           ; BSR set to: 0
 11524                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 11525  011C34  D862               	call	PL258	;call to abstracted procedure
 11526  011C36  D866               	call	PL362	;call to abstracted procedure
 11527  011C38  ECC6  F09D         	call	_ringbuf_put_str	;wreg free
 11528                           
 11529                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 11530  011C3C  0100               	movlb	0	; () banked
 11531  011C3E  6BCA               	clrf	data_out@i& (0+255),b
 11532  011C40                     l11192:
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 11536                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 11537                           ;ChargeStation_task.c: 262: p[i],
 11538                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 11539                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 11540                           ;ChargeStation_task.c: 265: port[i].integrated_current
 11541                           ;ChargeStation_task.c: 266: );
 11542  011C40  0EAC               	movlw	low data_out@str
 11543  011C42  6F83               	movwf	sprintf@sp& (0+255),b
 11544  011C44  6B84               	clrf	(sprintf@sp+1)& (0+255),b
 11545  011C46  0E35               	movlw	low STR_28
 11546  011C48  6F85               	movwf	sprintf@f& (0+255),b
 11547  011C4A  0EFE               	movlw	high STR_28
 11548  011C4C  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11549  011C4E  51CA               	movf	data_out@i& (0+255),w,b
 11550  011C50  0D02               	mullw	2
 11551  011C52  0EDC               	movlw	low data_out@p
 11552  011C54  24F3               	addwf	prodl,w,c
 11553  011C56  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11554  011C58  0EFB               	movlw	high data_out@p
 11555  011C5A  20F4               	addwfc	prodh,w,c
 11556  011C5C  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11557  011C5E  51CA               	movf	data_out@i& (0+255),w,b
 11558  011C60  ECE9  F082         	call	PL18	;call to abstracted procedure
 11559  011C64  D838               	call	PL188	;call to abstracted procedure
 11560  011C66  ECA6  F09E         	call	___lwdiv	;wreg free
 11561  011C6A  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 11562  011C6E  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 11563  011C72  51CA               	movf	data_out@i& (0+255),w,b
 11564  011C74  ECE9  F082         	call	PL18	;call to abstracted procedure
 11565  011C78  D837               	call	PL194	;call to abstracted procedure
 11566  011C7A  ECFF  F09F         	call	___lwmod	;wreg free
 11567  011C7E  C060  F08B         	movff	?___lwmod,?_sprintf+8
 11568  011C82  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 11569  011C86  51CA               	movf	data_out@i& (0+255),w,b
 11570  011C88  ECB7  F08B         	call	PL42	;call to abstracted procedure
 11571  011C8C  CFDE F08D          	movff	postinc2,?_sprintf+10
 11572  011C90  CFDE F08E          	movff	postinc2,?_sprintf+11
 11573  011C94  CFDE F08F          	movff	postinc2,?_sprintf+12
 11574  011C98  CFDE F090          	movff	postinc2,?_sprintf+13
 11575  011C9C  EC00  F080         	call	_sprintf	;wreg free
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 11579  011CA0  D82C               	call	PL258	;call to abstracted procedure
 11580  011CA2  D830               	call	PL362	;call to abstracted procedure
 11581  011CA4  ECC6  F09D         	call	_ringbuf_put_str	;wreg free
 11582  011CA8  0100               	movlb	0	; () banked
 11583  011CAA  2BCA               	incf	data_out@i& (0+255),f,b
 11584                           
 11585                           ; BSR set to: 0
 11586  011CAC  0E02               	movlw	2
 11587  011CAE  65CA               	cpfsgt	data_out@i& (0+255),b
 11588  011CB0  D7C7               	goto	l11192
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;ChargeStation_task.c: 268: }
 11592                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 11593  011CB2  D823               	call	PL258	;call to abstracted procedure
 11594  011CB4  0EBB               	movlw	low (STR_100+35)
 11595  011CB6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 11596  011CB8  0EFD               	movlw	high (STR_100+35)
 11597  011CBA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11598  011CBC  EFD9  F09D         	goto	l9736	;wreg free
 11599  011CC0                     __end_of_data_out:
 11600                           	opt stack 0
 11601  011CC0                     PL138:
 11602                           	opt stack 11
 11603  011CC0  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11604  011CC2  C299  F087         	movff	_now+10,?_sprintf+4
 11605  011CC6  6B88               	clrf	(?_sprintf+5)& (0+255),b
 11606  011CC8  C298  F089         	movff	_now+9,?_sprintf+6
 11607  011CCC  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 11608  011CCE  C297  F08B         	movff	_now+8,?_sprintf+8
 11609  011CD2  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 11610  011CD4  0012               	return	
 11611  011CD6                     __end_ofPL138:
 11612                           	opt stack 0
 11613  011CD6                     PL188:
 11614                           	opt stack 13
 11615  011CD6  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11616  011CDA  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11617  011CDE  0E03               	movlw	3
 11618  011CE0  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11619  011CE2  0EE8               	movlw	232
 11620  011CE4  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11621  011CE6  0CE8               	retlw	232
 11622  011CE8                     __end_ofPL188:
 11623                           	opt stack 0
 11624  011CE8                     PL194:
 11625                           	opt stack 13
 11626  011CE8  CFDE F060          	movff	postinc2,___lwmod@dividend
 11627  011CEC  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11628  011CF0  0E03               	movlw	3
 11629  011CF2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11630  011CF4  0EE8               	movlw	232
 11631  011CF6  6F62               	movwf	___lwmod@divisor& (0+255),b
 11632  011CF8  0CE8               	retlw	232
 11633  011CFA                     __end_ofPL194:
 11634                           	opt stack 0
 11635  011CFA                     PL258:
 11636                           	opt stack 15
 11637  011CFA  C0AA  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 11638  011CFE  C0AB  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 11639  011D02  0012               	return	
 11640  011D04                     __end_ofPL258:
 11641                           	opt stack 0
 11642  011D04                     PL362:
 11643                           	opt stack 15
 11644  011D04  0EAC               	movlw	low data_out@str
 11645  011D06  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 11646  011D08  6B72               	clrf	(ringbuf_put_str@str+1)& (0+255),b
 11647  011D0A  0012               	return	
 11648  011D0C                     __end_ofPL362:
 11649                           	opt stack 0
 11650                           tblptru	equ	0xFF8
 11651                           tblptrh	equ	0xFF7
 11652                           tblptrl	equ	0xFF6
 11653                           tablat	equ	0xFF5
 11654                           prodh	equ	0xFF4
 11655                           prodl	equ	0xFF3
 11656                           intcon	equ	0xFF2
 11657                           intcon2	equ	0xFF1
 11658                           postinc0	equ	0xFEE
 11659                           wreg	equ	0xFE8
 11660                           indf1	equ	0xFE7
 11661                           postinc1	equ	0xFE6
 11662                           postdec1	equ	0xFE5
 11663                           fsr1h	equ	0xFE2
 11664                           fsr1l	equ	0xFE1
 11665                           indf2	equ	0xFDF
 11666                           postinc2	equ	0xFDE
 11667                           postdec2	equ	0xFDD
 11668                           plusw2	equ	0xFDB
 11669                           fsr2h	equ	0xFDA
 11670                           fsr2l	equ	0xFD9
 11671                           status	equ	0xFD8
 11672                           
 11673 ;; *************** function _sprintf *****************
 11674 ;; Defined at:
 11675 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 11678 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), display_LCD@str_575(20), 
 11679 ;;		 -> data_out@str(30), 
 11680 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 11681 ;;		 -> STR_100(37), STR_98(5), STR_78(5), STR_33(28), 
 11682 ;;		 -> STR_32(9), STR_31(11), STR_30(6), STR_28(24), 
 11683 ;;		 -> STR_27(32), 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  val             4   66[BANK0 ] unsigned long 
 11686 ;;  tmpval          4    0        struct .
 11687 ;;  width           2   72[BANK0 ] int 
 11688 ;;  len             2   64[BANK0 ] unsigned int 
 11689 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 11690 ;;		 -> STR_118(7), weekday_3char(28), display_LCD@onoff(10), display_LCD@port_char(120), 
 11691 ;;		 -> data_out@p(6), sp__ADC(2), 
 11692 ;;  prec            2   59[BANK0 ] int 
 11693 ;;  c               1   71[BANK0 ] char 
 11694 ;;  flag            1   70[BANK0 ] unsigned char 
 11695 ;;  ap              1   63[BANK0 ] PTR void [1]
 11696 ;;		 -> ?_sprintf(2), 
 11697 ;; Return value:  Size  Location     Type
 11698 ;;                  2   35[BANK0 ] int 
 11699 ;; Registers used:
 11700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11701 ;; Tracked objects:
 11702 ;;		On entry : F/0
 11703 ;;		On exit  : F/0
 11704 ;;		Unchanged: 0/0
 11705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11706 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11707 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11709 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11710 ;;Total ram usage:       39 bytes
 11711 ;; Hardware stack levels used:    1
 11712 ;; Hardware stack levels required when called:   12
 11713 ;; This function calls:
 11714 ;;		___lldiv
 11715 ;;		___llmod
 11716 ;;		___wmul
 11717 ;;		_isdigit
 11718 ;; This function is called by:
 11719 ;;		_data_out
 11720 ;;		_display_LCD
 11721 ;;		_display_dec
 11722 ;;		_print_time
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           	psect	text40
 11727  010000                     __ptext40:
 11728                           	opt stack 0
 11729  010000                     _sprintf:
 11730                           	opt stack 13
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;doprnt.c: 494: va_list ap;
 11734                           ;doprnt.c: 499: signed char c;
 11735                           ;doprnt.c: 501: int width;
 11736                           ;doprnt.c: 504: int prec;
 11737                           ;doprnt.c: 508: unsigned char flag;
 11738                           ;doprnt.c: 523: union {
 11739                           ;doprnt.c: 524: unsigned long vd;
 11740                           ;doprnt.c: 525: double integ;
 11741                           ;doprnt.c: 526: } tmpval;
 11742                           ;doprnt.c: 528: unsigned long val;
 11743                           ;doprnt.c: 529: unsigned len;
 11744                           ;doprnt.c: 530: const char * cp;
 11745                           ;doprnt.c: 533: *ap = __va_start();
 11746                           
 11747                           ;incstack = 0
 11748  010000  0E87               	movlw	low (?_sprintf+4)
 11749  010002  6F9F               	movwf	sprintf@ap& (0+255),b
 11750                           
 11751                           ;doprnt.c: 536: while(c = *f++) {
 11752  010004  D16C               	goto	l9878
 11753  010006                     l9740:
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;doprnt.c: 538: if(c != '%')
 11757  010006  0E25               	movlw	37
 11758  010008  19A7               	xorwf	sprintf@c& (0+255),w,b
 11759  01000A  E006               	bz	l1928
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;doprnt.c: 540: {
 11763                           ;doprnt.c: 541: ((*sp++ = (c)));
 11764  01000C  D979               	call	PL88	;call to abstracted procedure
 11765  01000E  C0A7  FFDF         	movff	sprintf@c,indf2
 11766                           
 11767                           ; BSR set to: 0
 11768  010012  4B83               	infsnz	sprintf@sp& (0+255),f,b
 11769  010014  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 11770                           
 11771                           ;doprnt.c: 542: continue;
 11772  010016  D163               	goto	l9878
 11773  010018                     l1928:
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;doprnt.c: 543: }
 11777                           ;doprnt.c: 546: width = 0;
 11778  010018  6BA8               	clrf	sprintf@width& (0+255),b
 11779  01001A  6BA9               	clrf	(sprintf@width+1)& (0+255),b
 11780                           
 11781                           ;doprnt.c: 548: flag = 0;
 11782  01001C  6BA6               	clrf	sprintf@flag& (0+255),b
 11783  01001E  D003               	goto	l9750
 11784  010020                     l9746:
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;doprnt.c: 580: flag |= 0x04;
 11788  010020  85A6               	bsf	sprintf@flag& (0+255),2,b
 11789                           
 11790                           ;doprnt.c: 581: f++;
 11791  010022  4B85               	infsnz	sprintf@f& (0+255),f,b
 11792  010024  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 11793  010026                     l9750:
 11794                           
 11795                           ; BSR set to: 0
 11796  010026  D963               	call	PL58	;call to abstracted procedure
 11797                           
 11798                           ; Switch size 1, requested type "space"
 11799                           ; Number of cases is 1, Range of values is 48 to 48
 11800                           ; switch strategies available:
 11801                           ; Name         Instructions Cycles
 11802                           ; simple_byte            4     3 (average)
 11803                           ;	Chosen strategy is simple_byte
 11804  010028  0A30               	xorlw	48	; case 48
 11805  01002A  E0FA               	bz	l9746
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11809  01002C  D960               	call	PL58	;call to abstracted procedure
 11810  01002E  EC51  F0A2         	call	_isdigit
 11811  010032  E201 D089          	bnc	l9800
 11812                           
 11813                           ; BSR set to: 0
 11814                           ;doprnt.c: 598: width = 0;
 11815  010036  6BA8               	clrf	sprintf@width& (0+255),b
 11816  010038  6BA9               	clrf	(sprintf@width+1)& (0+255),b
 11817  01003A                     l9756:
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;doprnt.c: 600: width *= 10;
 11821  01003A  C0A8  F076         	movff	sprintf@width,___wmul@multiplier
 11822  01003E  C0A9  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 11823  010042  D97E               	call	PL352	;call to abstracted procedure
 11824  010044  EC87  F0A1         	call	___wmul	;wreg free
 11825  010048  C076  F0A8         	movff	?___wmul,sprintf@width
 11826  01004C  C077  F0A9         	movff	?___wmul+1,sprintf@width+1
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;doprnt.c: 601: width += *f++ - '0';
 11830  010050  0ED0               	movlw	208
 11831  010052  6F97               	movwf	??_sprintf& (0+255),b
 11832  010054  6998               	setf	(??_sprintf+1)& (0+255),b
 11833  010056  D94B               	call	PL58	;call to abstracted procedure
 11834  010058  6F99               	movwf	(??_sprintf+2)& (0+255),b
 11835  01005A  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 11836  01005C  5197               	movf	??_sprintf& (0+255),w,b
 11837  01005E  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 11838  010060  5198               	movf	(??_sprintf+1)& (0+255),w,b
 11839  010062  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 11840  010064  5199               	movf	(??_sprintf+2)& (0+255),w,b
 11841  010066  27A8               	addwf	sprintf@width& (0+255),f,b
 11842  010068  519A               	movf	(??_sprintf+3)& (0+255),w,b
 11843  01006A  23A9               	addwfc	(sprintf@width+1)& (0+255),f,b
 11844                           
 11845                           ; BSR set to: 0
 11846  01006C  4B85               	infsnz	sprintf@f& (0+255),f,b
 11847  01006E  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11851  010070  D93E               	call	PL58	;call to abstracted procedure
 11852  010072  EC51  F0A2         	call	_isdigit
 11853  010076  E368               	bnc	l9800
 11854  010078  D7E0               	goto	l9756
 11855  01007A                     l9764:
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;doprnt.c: 643: flag |= 0x10;
 11859  01007A  89A6               	bsf	sprintf@flag& (0+255),4,b
 11860                           
 11861                           ;doprnt.c: 644: goto loop;
 11862  01007C  D065               	goto	l9800
 11863  01007E                     l9766:
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 11867  01007E  519F               	movf	sprintf@ap& (0+255),w,b
 11868  010080  6ED9               	movwf	fsr2l,c
 11869  010082  6ADA               	clrf	fsr2h,c
 11870  010084  CFDE F09D          	movff	postinc2,sprintf@cp
 11871  010088  CFDD F09E          	movff	postdec2,sprintf@cp+1
 11872                           
 11873                           ; BSR set to: 0
 11874  01008C  0E02               	movlw	2
 11875  01008E  279F               	addwf	sprintf@ap& (0+255),f,b
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;doprnt.c: 740: if(!cp)
 11879  010090  519D               	movf	sprintf@cp& (0+255),w,b
 11880  010092  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 11881  010094  E104               	bnz	l9774
 11882                           
 11883                           ; BSR set to: 0
 11884                           ;doprnt.c: 741: cp = "(null)";
 11885  010096  0E8A               	movlw	low STR_118
 11886  010098  6F9D               	movwf	sprintf@cp& (0+255),b
 11887  01009A  0EFF               	movlw	high STR_118
 11888  01009C  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 11889  01009E                     l9774:
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;doprnt.c: 745: len = 0;
 11893  01009E  6BA0               	clrf	sprintf@len& (0+255),b
 11894  0100A0  6BA1               	clrf	(sprintf@len+1)& (0+255),b
 11895                           
 11896                           ;doprnt.c: 746: while(cp[len])
 11897  0100A2  D003               	goto	l9778
 11898  0100A4                     l9776:
 11899                           
 11900                           ;doprnt.c: 747: len++;
 11901  0100A4  0100               	movlb	0	; () banked
 11902  0100A6  4BA0               	infsnz	sprintf@len& (0+255),f,b
 11903  0100A8  2BA1               	incf	(sprintf@len+1)& (0+255),f,b
 11904  0100AA                     l9778:
 11905                           
 11906                           ; BSR set to: 0
 11907  0100AA  51A0               	movf	sprintf@len& (0+255),w,b
 11908  0100AC  259D               	addwf	sprintf@cp& (0+255),w,b
 11909  0100AE  6F97               	movwf	??_sprintf& (0+255),b
 11910  0100B0  51A1               	movf	(sprintf@len+1)& (0+255),w,b
 11911  0100B2  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 11912  0100B4  6F98               	movwf	(??_sprintf+1)& (0+255),b
 11913  0100B6  C097  FFF6         	movff	??_sprintf,tblptrl
 11914  0100BA  C098  FFF7         	movff	??_sprintf+1,tblptrh
 11915  0100BE  0E00               	movlw	low (__mediumconst shr (0+16))
 11916  0100C0  6EF8               	movwf	tblptru,c
 11917  0100C2  0E0E               	movlw	(high __ramtop+-1)
 11918  0100C4  64F7               	cpfsgt	tblptrh,c
 11919  0100C6  D003               	bra	u10007
 11920  0100C8  0008               	tblrd		*
 11921  0100CA  50F5               	movf	tablat,w,c
 11922  0100CC  D002               	bra	u10000
 11923  0100CE                     u10007:
 11924  0100CE  ECD4  F08F         	call	PL24	;call to abstracted procedure
 11925  0100D2                     u10000:
 11926  0100D2  0900               	iorlw	0
 11927  0100D4  E1E7               	bnz	l9776
 11928                           
 11929                           ;doprnt.c: 757: if(width > len)
 11930  0100D6  0100               	movlb	0	; () banked
 11931  0100D8  51A8               	movf	sprintf@width& (0+255),w,b
 11932  0100DA  5DA0               	subwf	sprintf@len& (0+255),w,b
 11933  0100DC  51A9               	movf	(sprintf@width+1)& (0+255),w,b
 11934  0100DE  59A1               	subwfb	(sprintf@len+1)& (0+255),w,b
 11935  0100E0  E205               	bc	l1951
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;doprnt.c: 758: width -= len;
 11939  0100E2  51A0               	movf	sprintf@len& (0+255),w,b
 11940  0100E4  5FA8               	subwf	sprintf@width& (0+255),f,b
 11941  0100E6  51A1               	movf	(sprintf@len+1)& (0+255),w,b
 11942  0100E8  5BA9               	subwfb	(sprintf@width+1)& (0+255),f,b
 11943  0100EA  D008               	goto	l9788
 11944  0100EC                     l1951:
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;doprnt.c: 759: else
 11948                           ;doprnt.c: 760: width = 0;
 11949  0100EC  6BA8               	clrf	sprintf@width& (0+255),b
 11950  0100EE  6BA9               	clrf	(sprintf@width+1)& (0+255),b
 11951  0100F0  D005               	goto	l9788
 11952  0100F2                     l9784:
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;doprnt.c: 765: ((*sp++ = (' ')));
 11956  0100F2  D906               	call	PL88	;call to abstracted procedure
 11957  0100F4  0E20               	movlw	32
 11958  0100F6  6EDF               	movwf	indf2,c
 11959                           
 11960                           ; BSR set to: 0
 11961  0100F8  4B83               	infsnz	sprintf@sp& (0+255),f,b
 11962  0100FA  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 11963  0100FC                     l9788:
 11964                           
 11965                           ; BSR set to: 0
 11966  0100FC  07A8               	decf	sprintf@width& (0+255),f,b
 11967  0100FE  A0D8               	btfss	status,0,c
 11968  010100  07A9               	decf	(sprintf@width+1)& (0+255),f,b
 11969  010102  29A8               	incf	sprintf@width& (0+255),w,b
 11970  010104  E1F6               	bnz	l9784
 11971  010106  29A9               	incf	(sprintf@width+1)& (0+255),w,b
 11972  010108  E016               	bz	l9796
 11973  01010A  D7F3               	goto	l9784
 11974  01010C                     l9790:
 11975                           
 11976                           ; BSR set to: 0
 11977                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 11978  01010C  C09D  FFF6         	movff	sprintf@cp,tblptrl
 11979  010110  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 11980  010114  0E00               	movlw	low (__mediumconst shr (0+16))
 11981  010116  6EF8               	movwf	tblptru,c
 11982  010118  D8F3               	call	PL88	;call to abstracted procedure
 11983  01011A  0E0E               	movlw	(high __ramtop+-1)
 11984  01011C  64F7               	cpfsgt	tblptrh,c
 11985  01011E  D003               	bra	u10047
 11986  010120  0008               	tblrd		*
 11987  010122  50F5               	movf	tablat,w,c
 11988  010124  D002               	bra	u10040
 11989  010126                     u10047:
 11990  010126  ECD4  F08F         	call	PL24	;call to abstracted procedure
 11991  01012A                     u10040:
 11992  01012A  6EDF               	movwf	indf2,c
 11993  01012C  0100               	movlb	0	; () banked
 11994  01012E  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 11995  010130  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 11996                           
 11997                           ; BSR set to: 0
 11998  010132  4B83               	infsnz	sprintf@sp& (0+255),f,b
 11999  010134  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12000  010136                     l9796:
 12001                           
 12002                           ; BSR set to: 0
 12003  010136  07A0               	decf	sprintf@len& (0+255),f,b
 12004  010138  A0D8               	btfss	status,0,c
 12005  01013A  07A1               	decf	(sprintf@len+1)& (0+255),f,b
 12006  01013C  29A0               	incf	sprintf@len& (0+255),w,b
 12007  01013E  E1E6               	bnz	l9790
 12008  010140  29A1               	incf	(sprintf@len+1)& (0+255),w,b
 12009  010142  E101 D0CC          	bz	l9878
 12010  010146  D7E2               	goto	l9790
 12011  010148                     l9800:
 12012                           
 12013                           ; BSR set to: 0
 12014  010148  C085  FFF6         	movff	sprintf@f,tblptrl
 12015  01014C  D8DE               	call	PL146	;call to abstracted procedure
 12016                           
 12017                           ; Switch size 1, requested type "space"
 12018                           ; Number of cases is 5, Range of values is 0 to 115
 12019                           ; switch strategies available:
 12020                           ; Name         Instructions Cycles
 12021                           ; simple_byte           16     9 (average)
 12022                           ;	Chosen strategy is simple_byte
 12023  01014E  E101 D0CB          	bz	l9880
 12024  010152  0A64               	xorlw	100	; case 100
 12025  010154  E007               	bz	l1945
 12026  010156  0A0D               	xorlw	13	; case 105
 12027  010158  E005               	bz	l1945
 12028  01015A  0A05               	xorlw	5	; case 108
 12029  01015C  E08E               	bz	l9764
 12030  01015E  0A1F               	xorlw	31	; case 115
 12031  010160  E08E               	bz	l9766
 12032  010162  D0BD               	goto	l9878
 12033  010164                     l1945:
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;doprnt.c: 1253: {
 12037                           ;doprnt.c: 1255: if(flag & 0x10)
 12038  010164  A9A6               	btfss	sprintf@flag& (0+255),4,b
 12039  010166  D009               	goto	l9806
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 12043  010168  D8E0               	call	PL282	;call to abstracted procedure
 12044  01016A  CFDE F0A3          	movff	postinc2,sprintf@val+1
 12045  01016E  CFDE F0A4          	movff	postinc2,sprintf@val+2
 12046  010172  CFDE F0A5          	movff	postinc2,sprintf@val+3
 12047                           
 12048                           ; BSR set to: 0
 12049  010176  0E04               	movlw	4
 12050  010178  D009               	goto	L5
 12051  01017A                     l9806:
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;doprnt.c: 1257: else
 12055                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 12056  01017A  D8D7               	call	PL282	;call to abstracted procedure
 12057  01017C  CFDD F0A3          	movff	postdec2,sprintf@val+1
 12058  010180  0E00               	movlw	0
 12059  010182  BFA3               	btfsc	(sprintf@val+1)& (0+255),7,b
 12060  010184  0EFF               	movlw	-1
 12061  010186  6FA4               	movwf	(sprintf@val+2)& (0+255),b
 12062  010188  6FA5               	movwf	(sprintf@val+3)& (0+255),b
 12063                           
 12064                           ; BSR set to: 0
 12065  01018A  0E02               	movlw	2
 12066  01018C                     L5:
 12067  01018C  279F               	addwf	sprintf@ap& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;doprnt.c: 1261: if((long)val < 0) {
 12071  01018E  AFA5               	btfss	(sprintf@val+3)& (0+255),7,b
 12072  010190  D00A               	goto	l9816
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;doprnt.c: 1262: flag |= 0x03;
 12076  010192  0E03               	movlw	3
 12077  010194  13A6               	iorwf	sprintf@flag& (0+255),f,b
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;doprnt.c: 1263: val = -val;
 12081  010196  1FA5               	comf	(sprintf@val+3)& (0+255),f,b
 12082  010198  1FA4               	comf	(sprintf@val+2)& (0+255),f,b
 12083  01019A  1FA3               	comf	(sprintf@val+1)& (0+255),f,b
 12084  01019C  6DA2               	negf	sprintf@val& (0+255),b
 12085  01019E  0E00               	movlw	0
 12086  0101A0  23A3               	addwfc	(sprintf@val+1)& (0+255),f,b
 12087  0101A2  23A4               	addwfc	(sprintf@val+2)& (0+255),f,b
 12088  0101A4  23A5               	addwfc	(sprintf@val+3)& (0+255),f,b
 12089  0101A6                     l9816:
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;doprnt.c: 1264: }
 12093                           ;doprnt.c: 1266: }
 12094                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12095  0101A6  0E01               	movlw	1
 12096  0101A8  6FA7               	movwf	sprintf@c& (0+255),b
 12097  0101AA                     l9822:
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;doprnt.c: 1306: if(val < dpowers[c])
 12101  0101AA  51A7               	movf	sprintf@c& (0+255),w,b
 12102  0101AC  0D04               	mullw	4
 12103  0101AE  0E51               	movlw	low _dpowers
 12104  0101B0  24F3               	addwf	prodl,w,c
 12105  0101B2  6EF6               	movwf	tblptrl,c
 12106  0101B4  0EFA               	movlw	high _dpowers
 12107  0101B6  20F4               	addwfc	prodh,w,c
 12108  0101B8  ECE7  F08F         	call	PL130	;call to abstracted procedure
 12109  0101BC  50F5               	movf	tablat,w,c
 12110  0101BE  5DA2               	subwf	sprintf@val& (0+255),w,b
 12111  0101C0  0009               	tblrd		*+
 12112  0101C2  50F5               	movf	tablat,w,c
 12113  0101C4  59A3               	subwfb	(sprintf@val+1)& (0+255),w,b
 12114  0101C6  0009               	tblrd		*+
 12115  0101C8  50F5               	movf	tablat,w,c
 12116  0101CA  59A4               	subwfb	(sprintf@val+2)& (0+255),w,b
 12117  0101CC  0009               	tblrd		*+
 12118  0101CE  50F5               	movf	tablat,w,c
 12119  0101D0  59A5               	subwfb	(sprintf@val+3)& (0+255),w,b
 12120  0101D2  E304               	bnc	l9830
 12121                           
 12122                           ; BSR set to: 0
 12123  0101D4  2BA7               	incf	sprintf@c& (0+255),f,b
 12124                           
 12125                           ; BSR set to: 0
 12126  0101D6  0E0A               	movlw	10
 12127  0101D8  19A7               	xorwf	sprintf@c& (0+255),w,b
 12128  0101DA  E1E7               	bnz	l9822
 12129  0101DC                     l9830:
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;doprnt.c: 1345: if(width && flag & 0x03)
 12133  0101DC  51A8               	movf	sprintf@width& (0+255),w,b
 12134  0101DE  11A9               	iorwf	(sprintf@width+1)& (0+255),w,b
 12135  0101E0  E005               	bz	l9836
 12136                           
 12137                           ; BSR set to: 0
 12138  0101E2  D89E               	call	PL270	;call to abstracted procedure
 12139  0101E4  E003               	bz	l9836
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;doprnt.c: 1346: width--;
 12143  0101E6  07A8               	decf	sprintf@width& (0+255),f,b
 12144  0101E8  A0D8               	btfss	status,0,c
 12145  0101EA  07A9               	decf	(sprintf@width+1)& (0+255),f,b
 12146  0101EC                     l9836:
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;doprnt.c: 1381: if(width > c)
 12150  0101EC  0E80               	movlw	128
 12151  0101EE  BFA7               	btfsc	sprintf@c& (0+255),7,b
 12152  0101F0  0E7F               	movlw	127
 12153  0101F2  6F97               	movwf	??_sprintf& (0+255),b
 12154  0101F4  51A8               	movf	sprintf@width& (0+255),w,b
 12155  0101F6  5DA7               	subwf	sprintf@c& (0+255),w,b
 12156  0101F8  51A9               	movf	(sprintf@width+1)& (0+255),w,b
 12157  0101FA  0A80               	xorlw	128
 12158  0101FC  5997               	subwfb	??_sprintf& (0+255),w,b
 12159  0101FE  E207               	bc	l1967
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;doprnt.c: 1382: width -= c;
 12163  010200  51A7               	movf	sprintf@c& (0+255),w,b
 12164  010202  5FA8               	subwf	sprintf@width& (0+255),f,b
 12165  010204  0E00               	movlw	0
 12166  010206  BFA7               	btfsc	sprintf@c& (0+255),7,b
 12167  010208  0EFF               	movlw	255
 12168  01020A  5BA9               	subwfb	(sprintf@width+1)& (0+255),f,b
 12169  01020C  D002               	goto	l1968
 12170  01020E                     l1967:
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;doprnt.c: 1383: else
 12174                           ;doprnt.c: 1384: width = 0;
 12175  01020E  6BA8               	clrf	sprintf@width& (0+255),b
 12176  010210  6BA9               	clrf	(sprintf@width+1)& (0+255),b
 12177  010212                     l1968:
 12178                           
 12179                           ; BSR set to: 0
 12180                           ;doprnt.c: 1387: if(flag & 0x04) {
 12181  010212  A5A6               	btfss	sprintf@flag& (0+255),2,b
 12182  010214  D010               	goto	l9854
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;doprnt.c: 1392: if(flag & 0x03)
 12186  010216  D884               	call	PL270	;call to abstracted procedure
 12187  010218  E005               	bz	l9846
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 12191  01021A  D872               	call	PL88	;call to abstracted procedure
 12192  01021C  0E2D               	movlw	45
 12193  01021E  6EDF               	movwf	indf2,c
 12194                           
 12195                           ; BSR set to: 0
 12196  010220  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12197  010222  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12198  010224                     l9846:
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;doprnt.c: 1415: if(width)
 12202  010224  51A8               	movf	sprintf@width& (0+255),w,b
 12203  010226  11A9               	iorwf	(sprintf@width+1)& (0+255),w,b
 12204  010228  E018               	bz	l9868
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 12208  01022A  D86A               	call	PL88	;call to abstracted procedure
 12209  01022C  0E30               	movlw	48
 12210                           
 12211                           ; BSR set to: 0
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;doprnt.c: 1418: while(--width);
 12215  01022E  D883               	call	PL338	;call to abstracted procedure
 12216  010230  A0D8               	btfss	status,0,c
 12217  010232  07A9               	decf	(sprintf@width+1)& (0+255),f,b
 12218  010234  D7F7               	goto	l9846
 12219  010236                     l9854:
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;doprnt.c: 1422: {
 12223                           ;doprnt.c: 1424: if(width
 12224                           ;doprnt.c: 1428: )
 12225  010236  51A8               	movf	sprintf@width& (0+255),w,b
 12226  010238  11A9               	iorwf	(sprintf@width+1)& (0+255),w,b
 12227  01023A  E008               	bz	l9862
 12228  01023C                     l9856:
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 12232  01023C  D861               	call	PL88	;call to abstracted procedure
 12233  01023E  0E20               	movlw	32
 12234                           
 12235                           ; BSR set to: 0
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;doprnt.c: 1431: while(--width);
 12239  010240  D87A               	call	PL338	;call to abstracted procedure
 12240  010242  A0D8               	btfss	status,0,c
 12241  010244  07A9               	decf	(sprintf@width+1)& (0+255),f,b
 12242  010246  51A8               	movf	sprintf@width& (0+255),w,b
 12243  010248  11A9               	iorwf	(sprintf@width+1)& (0+255),w,b
 12244  01024A  E1F8               	bnz	l9856
 12245  01024C                     l9862:
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;doprnt.c: 1438: if(flag & 0x03)
 12249  01024C  D869               	call	PL270	;call to abstracted procedure
 12250  01024E  E005               	bz	l9868
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 12254  010250  D857               	call	PL88	;call to abstracted procedure
 12255  010252  0E2D               	movlw	45
 12256  010254  6EDF               	movwf	indf2,c
 12257                           
 12258                           ; BSR set to: 0
 12259  010256  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12260  010258  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12261  01025A                     l9868:
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;doprnt.c: 1469: }
 12265                           ;doprnt.c: 1472: prec = c;
 12266  01025A  51A7               	movf	sprintf@c& (0+255),w,b
 12267  01025C  6F9B               	movwf	sprintf@prec& (0+255),b
 12268  01025E  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 12269  010260  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 12270  010262  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 12271                           
 12272                           ;doprnt.c: 1474: while(prec--) {
 12273  010264  D035               	goto	l9876
 12274  010266                     l9870:
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;doprnt.c: 1478: {
 12278                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12279  010266  C09B  F097         	movff	sprintf@prec,??_sprintf
 12280  01026A  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 12281  01026E  90D8               	bcf	status,0,c
 12282  010270  3797               	rlcf	??_sprintf& (0+255),f,b
 12283  010272  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 12284  010274  90D8               	bcf	status,0,c
 12285  010276  3797               	rlcf	??_sprintf& (0+255),f,b
 12286  010278  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 12287  01027A  0E51               	movlw	low _dpowers
 12288  01027C  2597               	addwf	??_sprintf& (0+255),w,b
 12289  01027E  6EF6               	movwf	tblptrl,c
 12290  010280  0EFA               	movlw	high _dpowers
 12291  010282  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 12292  010284  ECE7  F08F         	call	PL130	;call to abstracted procedure
 12293  010288  CFF5 F064          	movff	tablat,___lldiv@divisor
 12294  01028C  0009               	tblrd		*+
 12295  01028E  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 12296  010292  0009               	tblrd		*+
 12297  010294  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 12298  010298  000A               	tblrd		*-
 12299  01029A  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 12300  01029E  C0A2  F060         	movff	sprintf@val,___lldiv@dividend
 12301  0102A2  C0A3  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 12302  0102A6  C0A4  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 12303  0102AA  C0A5  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 12304  0102AE  EC31  F09B         	call	___lldiv	;wreg free
 12305  0102B2  EC04  F083         	call	PL90	;call to abstracted procedure
 12306  0102B6  0E0A               	movlw	10
 12307  0102B8  EC15  F083         	call	PL210	;call to abstracted procedure
 12308  0102BC  EC38  F09C         	call	___llmod	;wreg free
 12309  0102C0  516D               	movf	?___llmod& (0+255),w,b
 12310  0102C2  0F30               	addlw	48
 12311  0102C4  6FA7               	movwf	sprintf@c& (0+255),b
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;doprnt.c: 1523: }
 12315                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12316  0102C6  D81C               	call	PL88	;call to abstracted procedure
 12317  0102C8  C0A7  FFDF         	movff	sprintf@c,indf2
 12318                           
 12319                           ; BSR set to: 0
 12320  0102CC  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12321  0102CE  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12322  0102D0                     l9876:
 12323                           
 12324                           ; BSR set to: 0
 12325  0102D0  079B               	decf	sprintf@prec& (0+255),f,b
 12326  0102D2  A0D8               	btfss	status,0,c
 12327  0102D4  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 12328  0102D6  299B               	incf	sprintf@prec& (0+255),w,b
 12329  0102D8  E1C6               	bnz	l9870
 12330  0102DA  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 12331  0102DC  E1C4               	bnz	l9870
 12332  0102DE                     l9878:
 12333                           
 12334                           ; BSR set to: 0
 12335  0102DE  C085  FFF6         	movff	sprintf@f,tblptrl
 12336  0102E2  D813               	call	PL146	;call to abstracted procedure
 12337  0102E4  E001 D68F          	bnz	l9740
 12338  0102E8                     l9880:
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;doprnt.c: 1538: *sp = 0;
 12342  0102E8  D80B               	call	PL88	;call to abstracted procedure
 12343  0102EA  6ADF               	clrf	indf2,c
 12344                           
 12345                           ; BSR set to: 0
 12346  0102EC  0C00               	retlw	0	;funcret
 12347  0102EE                     __end_of_sprintf:
 12348                           	opt stack 0
 12349  0102EE                     PL58:
 12350                           	opt stack 13
 12351  0102EE  C085  FFF6         	movff	sprintf@f,tblptrl
 12352  0102F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 12353  0102F6                     	if	0	;tblptru may be non-zero
 12354  0102F6                     	endif
 12355  0102F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12356  0102F6  0E00               	movlw	low (__mediumconst shr (0+16))
 12357  0102F8  6EF8               	movwf	tblptru,c
 12358  0102FA                     	endif
 12359  0102FA  0008               	tblrd		*
 12360  0102FC  50F5               	movf	tablat,w,c
 12361  0102FE  0012               	return	
 12362  010300                     __end_ofPL58:
 12363                           	opt stack 0
 12364  010300                     PL88:
 12365                           	opt stack 13
 12366  010300  C083  FFD9         	movff	sprintf@sp,fsr2l
 12367  010304  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12368  010308  0012               	return	
 12369  01030A                     __end_ofPL88:
 12370                           	opt stack 0
 12371  01030A                     PL146:
 12372                           	opt stack 13
 12373  01030A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 12374  01030E  4B85               	infsnz	sprintf@f& (0+255),f,b
 12375  010310  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 12376  010312                     	if	0	;tblptru may be non-zero
 12377  010312                     	endif
 12378  010312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12379  010312  0E00               	movlw	low (__mediumconst shr (0+16))
 12380  010314  6EF8               	movwf	tblptru,c
 12381  010316                     	endif
 12382  010316  0008               	tblrd		*
 12383  010318  CFF5 F0A7          	movff	tablat,sprintf@c
 12384  01031C  51A7               	movf	sprintf@c& (0+255),w,b
 12385  01031E  0012               	return	
 12386  010320                     __end_ofPL146:
 12387                           	opt stack 0
 12388  010320                     PL270:
 12389                           	opt stack 13
 12390  010320  C0A6  F097         	movff	sprintf@flag,??_sprintf
 12391  010324  0E03               	movlw	3
 12392  010326  1797               	andwf	??_sprintf& (0+255),f,b
 12393  010328  0C03               	retlw	3
 12394  01032A                     __end_ofPL270:
 12395                           	opt stack 0
 12396  01032A                     PL282:
 12397                           	opt stack 13
 12398  01032A  519F               	movf	sprintf@ap& (0+255),w,b
 12399  01032C  6ED9               	movwf	fsr2l,c
 12400  01032E  6ADA               	clrf	fsr2h,c
 12401  010330  CFDE F0A2          	movff	postinc2,sprintf@val
 12402  010334  0012               	return	
 12403  010336                     __end_ofPL282:
 12404                           	opt stack 0
 12405  010336                     PL338:
 12406                           	opt stack 13
 12407  010336  6EDF               	movwf	indf2,c
 12408  010338  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12409  01033A  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12410  01033C  07A8               	decf	sprintf@width& (0+255),f,b
 12411  01033E  0012               	return	
 12412  010340                     __end_ofPL338:
 12413                           	opt stack 0
 12414  010340                     PL352:
 12415                           	opt stack 15
 12416  010340  6B79               	clrf	(___wmul@multiplicand+1)& (0+255),b
 12417  010342  0E0A               	movlw	10
 12418  010344  6F78               	movwf	___wmul@multiplicand& (0+255),b
 12419  010346  0C0A               	retlw	10
 12420  010348                     __end_ofPL352:
 12421                           	opt stack 0
 12422                           tblptru	equ	0xFF8
 12423                           tblptrh	equ	0xFF7
 12424                           tblptrl	equ	0xFF6
 12425                           tablat	equ	0xFF5
 12426                           prodh	equ	0xFF4
 12427                           prodl	equ	0xFF3
 12428                           intcon	equ	0xFF2
 12429                           intcon2	equ	0xFF1
 12430                           postinc0	equ	0xFEE
 12431                           wreg	equ	0xFE8
 12432                           indf1	equ	0xFE7
 12433                           postinc1	equ	0xFE6
 12434                           postdec1	equ	0xFE5
 12435                           fsr1h	equ	0xFE2
 12436                           fsr1l	equ	0xFE1
 12437                           indf2	equ	0xFDF
 12438                           postinc2	equ	0xFDE
 12439                           postdec2	equ	0xFDD
 12440                           plusw2	equ	0xFDB
 12441                           fsr2h	equ	0xFDA
 12442                           fsr2l	equ	0xFD9
 12443                           status	equ	0xFD8
 12444                           
 12445 ;; *************** function _isdigit *****************
 12446 ;; Defined at:
 12447 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 12448 ;; Parameters:    Size  Location     Type
 12449 ;;  c               1    wreg     unsigned char 
 12450 ;; Auto vars:     Size  Location     Type
 12451 ;;  c               1    2[BANK0 ] unsigned char 
 12452 ;; Return value:  Size  Location     Type
 12453 ;;		None               void
 12454 ;; Registers used:
 12455 ;;		wreg, status,2, status,0
 12456 ;; Tracked objects:
 12457 ;;		On entry : F/0
 12458 ;;		On exit  : F/0
 12459 ;;		Unchanged: 0/0
 12460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12462 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12464 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12465 ;;Total ram usage:        3 bytes
 12466 ;; Hardware stack levels used:    1
 12467 ;; Hardware stack levels required when called:   11
 12468 ;; This function calls:
 12469 ;;		Nothing
 12470 ;; This function is called by:
 12471 ;;		_sprintf
 12472 ;;		_atoi
 12473 ;; This function uses a non-reentrant model
 12474 ;;
 12475                           
 12476                           	psect	text41
 12477  0144A2                     __ptext41:
 12478                           	opt stack 0
 12479  0144A2                     _isdigit:
 12480                           	opt stack 13
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;incstack = 0
 12484                           ;isdigit@c stored from wreg
 12485  0144A2  6F62               	movwf	isdigit@c& (0+255),b
 12486  0144A4  0100               	movlb	0	; () banked
 12487  0144A6  6B61               	clrf	_isdigit$6567& (0+255),b
 12488                           
 12489                           ; BSR set to: 0
 12490  0144A8  0E3A               	movlw	58
 12491  0144AA  6162               	cpfslt	isdigit@c& (0+255),b
 12492  0144AC  D005               	goto	l9704
 12493                           
 12494                           ; BSR set to: 0
 12495  0144AE  0E2F               	movlw	47
 12496  0144B0  6562               	cpfsgt	isdigit@c& (0+255),b
 12497  0144B2  D002               	goto	l9704
 12498                           
 12499                           ; BSR set to: 0
 12500  0144B4  0E01               	movlw	1
 12501  0144B6  6F61               	movwf	_isdigit$6567& (0+255),b
 12502  0144B8                     l9704:
 12503                           
 12504                           ; BSR set to: 0
 12505  0144B8  C061  F060         	movff	_isdigit$6567,??_isdigit
 12506  0144BC  3160               	rrcf	??_isdigit& (0+255),w,b
 12507                           
 12508                           ; BSR set to: 0
 12509  0144BE  0012               	return		;funcret
 12510  0144C0                     __end_of_isdigit:
 12511                           	opt stack 0
 12512                           tblptru	equ	0xFF8
 12513                           tblptrh	equ	0xFF7
 12514                           tblptrl	equ	0xFF6
 12515                           tablat	equ	0xFF5
 12516                           prodh	equ	0xFF4
 12517                           prodl	equ	0xFF3
 12518                           intcon	equ	0xFF2
 12519                           intcon2	equ	0xFF1
 12520                           postinc0	equ	0xFEE
 12521                           wreg	equ	0xFE8
 12522                           indf1	equ	0xFE7
 12523                           postinc1	equ	0xFE6
 12524                           postdec1	equ	0xFE5
 12525                           fsr1h	equ	0xFE2
 12526                           fsr1l	equ	0xFE1
 12527                           indf2	equ	0xFDF
 12528                           postinc2	equ	0xFDE
 12529                           postdec2	equ	0xFDD
 12530                           plusw2	equ	0xFDB
 12531                           fsr2h	equ	0xFDA
 12532                           fsr2l	equ	0xFD9
 12533                           status	equ	0xFD8
 12534                           
 12535 ;; *************** function ___llmod *****************
 12536 ;; Defined at:
 12537 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 12538 ;; Parameters:    Size  Location     Type
 12539 ;;  dividend        4   13[BANK0 ] unsigned long 
 12540 ;;  divisor         4   17[BANK0 ] unsigned long 
 12541 ;; Auto vars:     Size  Location     Type
 12542 ;;  counter         1   21[BANK0 ] unsigned char 
 12543 ;; Return value:  Size  Location     Type
 12544 ;;                  4   13[BANK0 ] unsigned long 
 12545 ;; Registers used:
 12546 ;;		wreg, status,2, status,0
 12547 ;; Tracked objects:
 12548 ;;		On entry : F/0
 12549 ;;		On exit  : F/0
 12550 ;;		Unchanged: 0/0
 12551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12552 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12555 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12556 ;;Total ram usage:        9 bytes
 12557 ;; Hardware stack levels used:    1
 12558 ;; Hardware stack levels required when called:   11
 12559 ;; This function calls:
 12560 ;;		Nothing
 12561 ;; This function is called by:
 12562 ;;		_display_LCD
 12563 ;;		_sprintf
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567                           	psect	text42
 12568  013870                     __ptext42:
 12569                           	opt stack 0
 12570  013870                     ___llmod:
 12571                           	opt stack 13
 12572                           
 12573                           ; BSR set to: 0
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;incstack = 0
 12577  013870  5171               	movf	___llmod@divisor& (0+255),w,b
 12578  013872  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12579  013874  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12580  013876  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12581  013878  E023               	bz	l2363
 12582                           
 12583                           ; BSR set to: 0
 12584  01387A  0E01               	movlw	1
 12585  01387C  6F75               	movwf	___llmod@counter& (0+255),b
 12586  01387E  D006               	goto	l9720
 12587  013880                     l9718:
 12588                           
 12589                           ; BSR set to: 0
 12590  013880  90D8               	bcf	status,0,c
 12591  013882  3771               	rlcf	___llmod@divisor& (0+255),f,b
 12592  013884  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12593  013886  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12594  013888  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12595  01388A  2B75               	incf	___llmod@counter& (0+255),f,b
 12596  01388C                     l9720:
 12597                           
 12598                           ; BSR set to: 0
 12599  01388C  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12600  01388E  D7F8               	goto	l9718
 12601  013890                     l9722:
 12602                           
 12603                           ; BSR set to: 0
 12604  013890  5171               	movf	___llmod@divisor& (0+255),w,b
 12605  013892  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 12606  013894  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 12607  013896  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12608  013898  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 12609  01389A  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12610  01389C  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 12611  01389E  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12612  0138A0  E308               	bnc	l9726
 12613                           
 12614                           ; BSR set to: 0
 12615  0138A2  5171               	movf	___llmod@divisor& (0+255),w,b
 12616  0138A4  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 12617  0138A6  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 12618  0138A8  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12619  0138AA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 12620  0138AC  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12621  0138AE  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 12622  0138B0  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12623  0138B2                     l9726:
 12624                           
 12625                           ; BSR set to: 0
 12626  0138B2  90D8               	bcf	status,0,c
 12627  0138B4  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12628  0138B6  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12629  0138B8  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12630  0138BA  3371               	rrcf	___llmod@divisor& (0+255),f,b
 12631                           
 12632                           ; BSR set to: 0
 12633  0138BC  2F75               	decfsz	___llmod@counter& (0+255),f,b
 12634  0138BE  D7E8               	goto	l9722
 12635  0138C0                     l2363:
 12636                           
 12637                           ; BSR set to: 0
 12638  0138C0  C06D  F06D         	movff	___llmod@dividend,?___llmod
 12639  0138C4  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 12640  0138C8  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 12641  0138CC  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 12642                           
 12643                           ; BSR set to: 0
 12644  0138D0  0012               	return		;funcret
 12645  0138D2                     __end_of___llmod:
 12646                           	opt stack 0
 12647                           tblptru	equ	0xFF8
 12648                           tblptrh	equ	0xFF7
 12649                           tblptrl	equ	0xFF6
 12650                           tablat	equ	0xFF5
 12651                           prodh	equ	0xFF4
 12652                           prodl	equ	0xFF3
 12653                           intcon	equ	0xFF2
 12654                           intcon2	equ	0xFF1
 12655                           postinc0	equ	0xFEE
 12656                           wreg	equ	0xFE8
 12657                           indf1	equ	0xFE7
 12658                           postinc1	equ	0xFE6
 12659                           postdec1	equ	0xFE5
 12660                           fsr1h	equ	0xFE2
 12661                           fsr1l	equ	0xFE1
 12662                           indf2	equ	0xFDF
 12663                           postinc2	equ	0xFDE
 12664                           postdec2	equ	0xFDD
 12665                           plusw2	equ	0xFDB
 12666                           fsr2h	equ	0xFDA
 12667                           fsr2l	equ	0xFD9
 12668                           status	equ	0xFD8
 12669                           
 12670 ;; *************** function _ringbuf_put_str *****************
 12671 ;; Defined at:
 12672 ;;		line 39 in file "../My_library/My_ringbuf.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 12675 ;;		 -> usb_tx(8), 
 12676 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 12677 ;;		 -> STR_101(8), print_time@str(30), STR_99(3), print_time_dec@str(10), 
 12678 ;;		 -> STR_97(4), STR_96(4), STR_29(2), data_out@str(30), 
 12679 ;;		 -> STR_26(18), STR_23(36), STR_22(24), STR_13(434), 
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;		None
 12682 ;; Return value:  Size  Location     Type
 12683 ;;		None               void
 12684 ;; Registers used:
 12685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12686 ;; Tracked objects:
 12687 ;;		On entry : F/0
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12694 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12695 ;;Total ram usage:        4 bytes
 12696 ;; Hardware stack levels used:    1
 12697 ;; Hardware stack levels required when called:   13
 12698 ;; This function calls:
 12699 ;;		_ringbuf_put
 12700 ;; This function is called by:
 12701 ;;		_terminal_operation
 12702 ;;		_data_out
 12703 ;;		_terminal_task
 12704 ;;		_print_time
 12705 ;;		_terminal_at_hand
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           	psect	text43
 12710  013B8C                     __ptext43:
 12711                           	opt stack 0
 12712  013B8C                     _ringbuf_put_str:
 12713                           	opt stack 13
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;My_ringbuf.c: 40: while (*str) {
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;incstack = 0
 12720  013B8C  D012               	goto	l9736
 12721  013B8E                     l9732:
 12722                           
 12723                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 12724  013B8E  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 12725  013B92  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 12726  013B96  D818               	call	PL228	;call to abstracted procedure
 12727  013B98  64F7               	cpfsgt	tblptrh,c
 12728  013B9A  D003               	bra	u9937
 12729  013B9C  0008               	tblrd		*
 12730  013B9E  50F5               	movf	tablat,w,c
 12731  013BA0  D002               	bra	u9930
 12732  013BA2                     u9937:
 12733  013BA2  ECD4  F08F         	call	PL24	;call to abstracted procedure
 12734  013BA6                     u9930:
 12735  013BA6  0100               	movlb	0	; () banked
 12736  013BA8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12737  013BAA  ECC5  F093         	call	_ringbuf_put	;wreg free
 12738                           
 12739                           ; BSR set to: 0
 12740  013BAE  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 12741  013BB0  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 12742  013BB2                     l9736:
 12743                           
 12744                           ; BSR set to: 0
 12745  013BB2  D80A               	call	PL228	;call to abstracted procedure
 12746  013BB4  64F7               	cpfsgt	tblptrh,c
 12747  013BB6  D003               	bra	u9947
 12748  013BB8  0008               	tblrd		*
 12749  013BBA  50F5               	movf	tablat,w,c
 12750  013BBC  D002               	bra	u9940
 12751  013BBE                     u9947:
 12752  013BBE  ECD4  F08F         	call	PL24	;call to abstracted procedure
 12753  013BC2                     u9940:
 12754  013BC2  0900               	iorlw	0
 12755  013BC4  E1E4               	bnz	l9732
 12756  013BC6  0012               	return		;funcret
 12757  013BC8                     __end_of_ringbuf_put_str:
 12758                           	opt stack 0
 12759  013BC8                     PL228:
 12760                           	opt stack 13
 12761  013BC8  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 12762  013BCC  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 12763  013BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 12764  013BD2  6EF8               	movwf	tblptru,c
 12765  013BD4  0E0E               	movlw	(high __ramtop+-1)
 12766  013BD6  0012               	return	
 12767  013BD8                     __end_ofPL228:
 12768                           	opt stack 0
 12769                           tblptru	equ	0xFF8
 12770                           tblptrh	equ	0xFF7
 12771                           tblptrl	equ	0xFF6
 12772                           tablat	equ	0xFF5
 12773                           prodh	equ	0xFF4
 12774                           prodl	equ	0xFF3
 12775                           intcon	equ	0xFF2
 12776                           intcon2	equ	0xFF1
 12777                           postinc0	equ	0xFEE
 12778                           wreg	equ	0xFE8
 12779                           indf1	equ	0xFE7
 12780                           postinc1	equ	0xFE6
 12781                           postdec1	equ	0xFE5
 12782                           fsr1h	equ	0xFE2
 12783                           fsr1l	equ	0xFE1
 12784                           indf2	equ	0xFDF
 12785                           postinc2	equ	0xFDE
 12786                           postdec2	equ	0xFDD
 12787                           plusw2	equ	0xFDB
 12788                           fsr2h	equ	0xFDA
 12789                           fsr2l	equ	0xFD9
 12790                           status	equ	0xFD8
 12791                           
 12792 ;; *************** function ___lwmod *****************
 12793 ;; Defined at:
 12794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  dividend        2    0[BANK0 ] unsigned int 
 12797 ;;  divisor         2    2[BANK0 ] unsigned int 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;  counter         1    4[BANK0 ] unsigned char 
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  2    0[BANK0 ] unsigned int 
 12802 ;; Registers used:
 12803 ;;		wreg, status,2, status,0
 12804 ;; Tracked objects:
 12805 ;;		On entry : F/0
 12806 ;;		On exit  : F/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12812 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12813 ;;Total ram usage:        5 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:   11
 12816 ;; This function calls:
 12817 ;;		Nothing
 12818 ;; This function is called by:
 12819 ;;		_data_out
 12820 ;;		_display_LCD
 12821 ;;		_ringbuf_put_num
 12822 ;; This function uses a non-reentrant model
 12823 ;;
 12824                           
 12825                           	psect	text44
 12826  013FFE                     __ptext44:
 12827                           	opt stack 0
 12828  013FFE                     ___lwmod:
 12829                           	opt stack 17
 12830                           
 12831                           ; BSR set to: 0
 12832                           
 12833                           ;incstack = 0
 12834  013FFE  5162               	movf	___lwmod@divisor& (0+255),w,b
 12835  014000  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 12836  014002  E017               	bz	l2416
 12837                           
 12838                           ; BSR set to: 0
 12839  014004  0E01               	movlw	1
 12840  014006  6F64               	movwf	___lwmod@counter& (0+255),b
 12841  014008  D004               	goto	l10942
 12842  01400A                     l10940:
 12843                           
 12844                           ; BSR set to: 0
 12845  01400A  90D8               	bcf	status,0,c
 12846  01400C  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 12847  01400E  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 12848  014010  2B64               	incf	___lwmod@counter& (0+255),f,b
 12849  014012                     l10942:
 12850                           
 12851                           ; BSR set to: 0
 12852  014012  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 12853  014014  D7FA               	goto	l10940
 12854  014016                     l10944:
 12855                           
 12856                           ; BSR set to: 0
 12857  014016  5162               	movf	___lwmod@divisor& (0+255),w,b
 12858  014018  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 12859  01401A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12860  01401C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 12861  01401E  E304               	bnc	l10948
 12862                           
 12863                           ; BSR set to: 0
 12864  014020  5162               	movf	___lwmod@divisor& (0+255),w,b
 12865  014022  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 12866  014024  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12867  014026  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 12868  014028                     l10948:
 12869                           
 12870                           ; BSR set to: 0
 12871  014028  90D8               	bcf	status,0,c
 12872  01402A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 12873  01402C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 12874                           
 12875                           ; BSR set to: 0
 12876  01402E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 12877  014030  D7F2               	goto	l10944
 12878  014032                     l2416:
 12879                           
 12880                           ; BSR set to: 0
 12881  014032  C060  F060         	movff	___lwmod@dividend,?___lwmod
 12882  014036  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 12883                           
 12884                           ; BSR set to: 0
 12885  01403A  0012               	return		;funcret
 12886  01403C                     __end_of___lwmod:
 12887                           	opt stack 0
 12888                           tblptru	equ	0xFF8
 12889                           tblptrh	equ	0xFF7
 12890                           tblptrl	equ	0xFF6
 12891                           tablat	equ	0xFF5
 12892                           prodh	equ	0xFF4
 12893                           prodl	equ	0xFF3
 12894                           intcon	equ	0xFF2
 12895                           intcon2	equ	0xFF1
 12896                           postinc0	equ	0xFEE
 12897                           wreg	equ	0xFE8
 12898                           indf1	equ	0xFE7
 12899                           postinc1	equ	0xFE6
 12900                           postdec1	equ	0xFE5
 12901                           fsr1h	equ	0xFE2
 12902                           fsr1l	equ	0xFE1
 12903                           indf2	equ	0xFDF
 12904                           postinc2	equ	0xFDE
 12905                           postdec2	equ	0xFDD
 12906                           plusw2	equ	0xFDB
 12907                           fsr2h	equ	0xFDA
 12908                           fsr2l	equ	0xFD9
 12909                           status	equ	0xFD8
 12910                           
 12911 ;; *************** function _Auto_cut *****************
 12912 ;; Defined at:
 12913 ;;		line 49 in file "ChargeStation_task.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;		None
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;  i               1   30[BANK0 ] unsigned char 
 12918 ;; Return value:  Size  Location     Type
 12919 ;;		None               void
 12920 ;; Registers used:
 12921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12922 ;; Tracked objects:
 12923 ;;		On entry : F/1
 12924 ;;		On exit  : F/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12930 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12931 ;;Total ram usage:        3 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:   12
 12934 ;; This function calls:
 12935 ;;		_ADC
 12936 ;;		_ANALOG_IN
 12937 ;;		_OUT
 12938 ;;		___wmul
 12939 ;; This function is called by:
 12940 ;;		_normal_task
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           	psect	text45
 12945  012504                     __ptext45:
 12946                           	opt stack 0
 12947  012504                     _Auto_cut:
 12948                           	opt stack 17
 12949                           
 12950                           ; BSR set to: 1
 12951                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;incstack = 0
 12955  012504  0100               	movlb	0	; () banked
 12956  012506  6B7E               	clrf	Auto_cut@i& (0+255),b
 12957  012508                     l10958:
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 12961  012508  517E               	movf	Auto_cut@i& (0+255),w,b
 12962  01250A  EC6E  F0A2         	call	_ANALOG_IN
 12963  01250E  EC20  F0A1         	call	_ADC
 12964  012512  C060  F076         	movff	?_ADC,___wmul@multiplier
 12965  012516  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 12966  01251A  0100               	movlb	0	; () banked
 12967  01251C  6B79               	clrf	(___wmul@multiplicand+1)& (0+255),b
 12968  01251E  0E0D               	movlw	13
 12969  012520  6F78               	movwf	___wmul@multiplicand& (0+255),b
 12970  012522  EC87  F0A1         	call	___wmul	;wreg free
 12971  012526  0E04               	movlw	4
 12972  012528  6F7C               	movwf	??_Auto_cut& (0+255),b
 12973  01252A                     u11775:
 12974  01252A  90D8               	bcf	status,0,c
 12975  01252C  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 12976  01252E  3376               	rrcf	?___wmul& (0+255),f,b
 12977  012530  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 12978  012532  D7FB               	goto	u11775
 12979  012534  517E               	movf	Auto_cut@i& (0+255),w,b
 12980  012536  ECE9  F082         	call	PL18	;call to abstracted procedure
 12981  01253A  C076  FFDE         	movff	?___wmul,postinc2
 12982  01253E  C077  FFDD         	movff	?___wmul+1,postdec2
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 12986  012542  517E               	movf	Auto_cut@i& (0+255),w,b
 12987  012544  ECEE  F08C         	call	PL4	;call to abstracted procedure
 12988  012548  A0DF               	btfss	indf2,0,c
 12989  01254A  D020               	goto	l10970
 12990                           
 12991                           ; BSR set to: 1
 12992                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 12993  01254C  0100               	movlb	0	; () banked
 12994  01254E  517E               	movf	Auto_cut@i& (0+255),w,b
 12995  012550  ECE9  F082         	call	PL18	;call to abstracted procedure
 12996  012554  0E01               	movlw	1
 12997  012556  50DB               	movf	plusw2,w,c
 12998  012558  E115               	bnz	l10968
 12999  01255A  0E64               	movlw	100
 13000  01255C  5CDE               	subwf	postinc2,w,c
 13001  01255E  E212               	bc	l10968
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 13005  012560  517E               	movf	Auto_cut@i& (0+255),w,b
 13006  012562  D81A               	call	PL52	;call to abstracted procedure
 13007  012564  2ADE               	incf	postinc2,f,c
 13008  012566  0E00               	movlw	0
 13009  012568  22DD               	addwfc	postdec2,f,c
 13010                           
 13011                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 13012  01256A  517E               	movf	Auto_cut@i& (0+255),w,b
 13013  01256C  D815               	call	PL52	;call to abstracted procedure
 13014  01256E  0E01               	movlw	1
 13015  012570  50DB               	movf	plusw2,w,c
 13016  012572  E103               	bnz	u11800
 13017  012574  0E07               	movlw	7
 13018  012576  5CDE               	subwf	postinc2,w,c
 13019  012578  E309               	bnc	l10970
 13020  01257A                     u11800:
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;ChargeStation_task.c: 57: OUT(i, 0);
 13024  01257A  6B60               	clrf	OUT@value& (0+255),b
 13025  01257C  517E               	movf	Auto_cut@i& (0+255),w,b
 13026  01257E  EC81  F09E         	call	_OUT
 13027  012582  D004               	goto	l10970
 13028  012584                     l10968:
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 13032  012584  517E               	movf	Auto_cut@i& (0+255),w,b
 13033  012586  D808               	call	PL52	;call to abstracted procedure
 13034  012588  6ADE               	clrf	postinc2,c
 13035  01258A  6ADD               	clrf	postdec2,c
 13036  01258C                     l10970:
 13037  01258C  0100               	movlb	0	; () banked
 13038  01258E  2B7E               	incf	Auto_cut@i& (0+255),f,b
 13039                           
 13040                           ; BSR set to: 0
 13041  012590  0E02               	movlw	2
 13042  012592  657E               	cpfsgt	Auto_cut@i& (0+255),b
 13043  012594  D7B9               	goto	l10958
 13044  012596  0C02               	retlw	2
 13045  012598                     __end_of_Auto_cut:
 13046                           	opt stack 0
 13047  012598                     PL52:
 13048                           	opt stack 16
 13049  012598  0D17               	mullw	23
 13050  01259A  0E51               	movlw	low (_port+20)
 13051  01259C  24F3               	addwf	prodl,w,c
 13052  01259E  6ED9               	movwf	fsr2l,c
 13053  0125A0  0E01               	movlw	high (_port+20)
 13054  0125A2  20F4               	addwfc	prodh,w,c
 13055  0125A4  6EDA               	movwf	fsr2h,c
 13056  0125A6  0012               	return	
 13057  0125A8                     __end_ofPL52:
 13058                           	opt stack 0
 13059                           tblptru	equ	0xFF8
 13060                           tblptrh	equ	0xFF7
 13061                           tblptrl	equ	0xFF6
 13062                           tablat	equ	0xFF5
 13063                           prodh	equ	0xFF4
 13064                           prodl	equ	0xFF3
 13065                           intcon	equ	0xFF2
 13066                           intcon2	equ	0xFF1
 13067                           postinc0	equ	0xFEE
 13068                           wreg	equ	0xFE8
 13069                           indf1	equ	0xFE7
 13070                           postinc1	equ	0xFE6
 13071                           postdec1	equ	0xFE5
 13072                           fsr1h	equ	0xFE2
 13073                           fsr1l	equ	0xFE1
 13074                           indf2	equ	0xFDF
 13075                           postinc2	equ	0xFDE
 13076                           postdec2	equ	0xFDD
 13077                           plusw2	equ	0xFDB
 13078                           fsr2h	equ	0xFDA
 13079                           fsr2l	equ	0xFD9
 13080                           status	equ	0xFD8
 13081                           
 13082 ;; *************** function ___wmul *****************
 13083 ;; Defined at:
 13084 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 13085 ;; Parameters:    Size  Location     Type
 13086 ;;  multiplier      2   22[BANK0 ] unsigned int 
 13087 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 13088 ;; Auto vars:     Size  Location     Type
 13089 ;;  product         2   26[BANK0 ] unsigned int 
 13090 ;; Return value:  Size  Location     Type
 13091 ;;                  2   22[BANK0 ] unsigned int 
 13092 ;; Registers used:
 13093 ;;		wreg, status,2, status,0, prodl, prodh
 13094 ;; Tracked objects:
 13095 ;;		On entry : F/0
 13096 ;;		On exit  : F/0
 13097 ;;		Unchanged: 0/0
 13098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13100 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13102 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13103 ;;Total ram usage:        6 bytes
 13104 ;; Hardware stack levels used:    1
 13105 ;; Hardware stack levels required when called:   11
 13106 ;; This function calls:
 13107 ;;		Nothing
 13108 ;; This function is called by:
 13109 ;;		_Auto_cut
 13110 ;;		_ctmu_set_ratio
 13111 ;;		_sprintf
 13112 ;;		_atoi
 13113 ;; This function uses a non-reentrant model
 13114 ;;
 13115                           
 13116                           	psect	text46
 13117  01430E                     __ptext46:
 13118                           	opt stack 0
 13119  01430E                     ___wmul:
 13120                           	opt stack 13
 13121                           
 13122                           ; BSR set to: 0
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;incstack = 0
 13126  01430E  5176               	movf	___wmul@multiplier& (0+255),w,b
 13127  014310  0378               	mulwf	___wmul@multiplicand& (0+255),b
 13128  014312  CFF3 F07A          	movff	prodl,___wmul@product
 13129  014316  CFF4 F07B          	movff	prodh,___wmul@product+1
 13130  01431A  5176               	movf	___wmul@multiplier& (0+255),w,b
 13131  01431C  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13132  01431E  50F3               	movf	prodl,w,c
 13133  014320  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 13134  014322  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13135  014324  0378               	mulwf	___wmul@multiplicand& (0+255),b
 13136  014326  50F3               	movf	prodl,w,c
 13137  014328  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 13138                           
 13139                           ; BSR set to: 0
 13140  01432A  C07A  F076         	movff	___wmul@product,?___wmul
 13141  01432E  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 13142                           
 13143                           ; BSR set to: 0
 13144  014332  0012               	return		;funcret
 13145  014334                     __end_of___wmul:
 13146                           	opt stack 0
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           intcon2	equ	0xFF1
 13155                           postinc0	equ	0xFEE
 13156                           wreg	equ	0xFE8
 13157                           indf1	equ	0xFE7
 13158                           postinc1	equ	0xFE6
 13159                           postdec1	equ	0xFE5
 13160                           fsr1h	equ	0xFE2
 13161                           fsr1l	equ	0xFE1
 13162                           indf2	equ	0xFDF
 13163                           postinc2	equ	0xFDE
 13164                           postdec2	equ	0xFDD
 13165                           plusw2	equ	0xFDB
 13166                           fsr2h	equ	0xFDA
 13167                           fsr2l	equ	0xFD9
 13168                           status	equ	0xFD8
 13169                           
 13170 ;; *************** function _OUT *****************
 13171 ;; Defined at:
 13172 ;;		line 7 in file "io.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;  b               1    wreg     unsigned char 
 13175 ;;  value           1    0[BANK0 ] unsigned char 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  b               1    1[BANK0 ] unsigned char 
 13178 ;; Return value:  Size  Location     Type
 13179 ;;		None               void
 13180 ;; Registers used:
 13181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13182 ;; Tracked objects:
 13183 ;;		On entry : F/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13187 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;Total ram usage:        2 bytes
 13192 ;; Hardware stack levels used:    1
 13193 ;; Hardware stack levels required when called:   11
 13194 ;; This function calls:
 13195 ;;		Nothing
 13196 ;; This function is called by:
 13197 ;;		_Auto_cut
 13198 ;;		_port_button_task
 13199 ;;		_sleep_task
 13200 ;;		_software_init
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204                           	psect	text47
 13205  013D02                     __ptext47:
 13206                           	opt stack 0
 13207  013D02                     _OUT:
 13208                           	opt stack 18
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;incstack = 0
 13212                           ;OUT@b stored from wreg
 13213  013D02  6F61               	movwf	OUT@b& (0+255),b
 13214                           
 13215                           ;io.c: 8: port[b].flag.out_flag = value;
 13216  013D04  0100               	movlb	0	; () banked
 13217  013D06  5161               	movf	OUT@b& (0+255),w,b
 13218  013D08  ECEE  F08C         	call	PL4	;call to abstracted procedure
 13219  013D0C  B160               	btfsc	OUT@value& (0+255),0,b
 13220  013D0E  D002               	bra	u10955
 13221  013D10  94DF               	bcf	indf2,2,c
 13222  013D12  D001               	bra	u10956
 13223  013D14                     u10955:
 13224  013D14  84DF               	bsf	indf2,2,c
 13225  013D16                     u10956:
 13226                           
 13227                           ;io.c: 9: switch (b) {
 13228  013D16  D012               	goto	l10362
 13229  013D18                     l276:
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;io.c: 11: LATA5 = value;
 13233  013D18  A160               	btfss	OUT@value& (0+255),0,b
 13234  013D1A  D002               	goto	u10960
 13235  013D1C  8A89               	bsf	3977,5,c	;volatile
 13236  013D1E  0012               	return	
 13237  013D20                     u10960:
 13238  013D20  9A89               	bcf	3977,5,c	;volatile
 13239                           
 13240                           ;io.c: 12: break;
 13241  013D22  0012               	return	
 13242  013D24                     l278:
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;io.c: 14: LATA6 = value;
 13246  013D24  A160               	btfss	OUT@value& (0+255),0,b
 13247  013D26  D002               	goto	u10980
 13248  013D28  8C89               	bsf	3977,6,c	;volatile
 13249  013D2A  0012               	return	
 13250  013D2C                     u10980:
 13251  013D2C  9C89               	bcf	3977,6,c	;volatile
 13252                           
 13253                           ;io.c: 15: break;
 13254  013D2E  0012               	return	
 13255  013D30                     l279:
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;io.c: 17: LATA7 = value;
 13259  013D30  A160               	btfss	OUT@value& (0+255),0,b
 13260  013D32  D002               	goto	u11000
 13261  013D34  8E89               	bsf	3977,7,c	;volatile
 13262  013D36  0012               	return	
 13263  013D38                     u11000:
 13264  013D38  9E89               	bcf	3977,7,c	;volatile
 13265                           
 13266                           ;io.c: 18: break;
 13267  013D3A  0012               	return	
 13268  013D3C                     l10362:
 13269                           
 13270                           ; BSR set to: 1
 13271  013D3C  0100               	movlb	0	; () banked
 13272  013D3E  5161               	movf	OUT@b& (0+255),w,b
 13273                           
 13274                           ; Switch size 1, requested type "space"
 13275                           ; Number of cases is 3, Range of values is 0 to 2
 13276                           ; switch strategies available:
 13277                           ; Name         Instructions Cycles
 13278                           ; simple_byte           10     6 (average)
 13279                           ;	Chosen strategy is simple_byte
 13280  013D40  E0EB               	bz	l276
 13281  013D42  0A01               	xorlw	1	; case 1
 13282  013D44  E0EF               	bz	l278
 13283  013D46  0A03               	xorlw	3	; case 2
 13284  013D48  E0F3               	bz	l279
 13285  013D4A  0012               	return		;funcret
 13286  013D4C                     __end_of_OUT:
 13287                           	opt stack 0
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           intcon2	equ	0xFF1
 13296                           postinc0	equ	0xFEE
 13297                           wreg	equ	0xFE8
 13298                           indf1	equ	0xFE7
 13299                           postinc1	equ	0xFE6
 13300                           postdec1	equ	0xFE5
 13301                           fsr1h	equ	0xFE2
 13302                           fsr1l	equ	0xFE1
 13303                           indf2	equ	0xFDF
 13304                           postinc2	equ	0xFDE
 13305                           postdec2	equ	0xFDD
 13306                           plusw2	equ	0xFDB
 13307                           fsr2h	equ	0xFDA
 13308                           fsr2l	equ	0xFD9
 13309                           status	equ	0xFD8
 13310                           
 13311 ;; *************** function _ANALOG_IN *****************
 13312 ;; Defined at:
 13313 ;;		line 23 in file "io.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;  b               1    wreg     unsigned char 
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;  b               1    0[BANK0 ] unsigned char 
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      unsigned char 
 13320 ;; Registers used:
 13321 ;;		wreg, status,2, status,0
 13322 ;; Tracked objects:
 13323 ;;		On entry : F/0
 13324 ;;		On exit  : F/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13330 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13331 ;;Total ram usage:        1 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:   11
 13334 ;; This function calls:
 13335 ;;		Nothing
 13336 ;; This function is called by:
 13337 ;;		_Auto_cut
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text48
 13342  0144DC                     __ptext48:
 13343                           	opt stack 0
 13344  0144DC                     _ANALOG_IN:
 13345                           	opt stack 17
 13346                           
 13347                           ;incstack = 0
 13348                           ;ANALOG_IN@b stored from wreg
 13349  0144DC  6F60               	movwf	ANALOG_IN@b& (0+255),b
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;io.c: 30: return 10;
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;io.c: 28: return 9;
 13356                           
 13357                           ; BSR set to: 0
 13358                           ;io.c: 26: return 8;
 13359                           
 13360                           ;io.c: 24: switch (b) {
 13361  0144DE  0100               	movlb	0	; () banked
 13362  0144E0  5160               	movf	ANALOG_IN@b& (0+255),w,b
 13363                           
 13364                           ; Switch size 1, requested type "space"
 13365                           ; Number of cases is 3, Range of values is 0 to 2
 13366                           ; switch strategies available:
 13367                           ; Name         Instructions Cycles
 13368                           ; simple_byte           10     6 (average)
 13369                           ;	Chosen strategy is simple_byte
 13370  0144E2  B4D8               	btfsc	status,2,c
 13371  0144E4  0C08               	retlw	8
 13372  0144E6  0A01               	xorlw	1	; case 1
 13373  0144E8  B4D8               	btfsc	status,2,c
 13374  0144EA  0C09               	retlw	9
 13375  0144EC  0A03               	xorlw	3	; case 2
 13376  0144EE  B4D8               	btfsc	status,2,c
 13377  0144F0  0C0A               	retlw	10
 13378                           
 13379                           ; BSR set to: 0
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;io.c: 32: return 0;
 13383  0144F2  0C00               	retlw	0	;funcret
 13384  0144F4                     __end_of_ANALOG_IN:
 13385                           	opt stack 0
 13386                           tblptru	equ	0xFF8
 13387                           tblptrh	equ	0xFF7
 13388                           tblptrl	equ	0xFF6
 13389                           tablat	equ	0xFF5
 13390                           prodh	equ	0xFF4
 13391                           prodl	equ	0xFF3
 13392                           intcon	equ	0xFF2
 13393                           intcon2	equ	0xFF1
 13394                           postinc0	equ	0xFEE
 13395                           wreg	equ	0xFE8
 13396                           indf1	equ	0xFE7
 13397                           postinc1	equ	0xFE6
 13398                           postdec1	equ	0xFE5
 13399                           fsr1h	equ	0xFE2
 13400                           fsr1l	equ	0xFE1
 13401                           indf2	equ	0xFDF
 13402                           postinc2	equ	0xFDE
 13403                           postdec2	equ	0xFDD
 13404                           plusw2	equ	0xFDB
 13405                           fsr2h	equ	0xFDA
 13406                           fsr2l	equ	0xFD9
 13407                           status	equ	0xFD8
 13408                           
 13409 ;; *************** function _ADC *****************
 13410 ;; Defined at:
 13411 ;;		line 156 in file "../My_library/My_PIC.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;  ch              1    wreg     unsigned char 
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;  ch              1    3[BANK0 ] unsigned char 
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  2    0[BANK0 ] unsigned int 
 13418 ;; Registers used:
 13419 ;;		wreg, status,2, status,0
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13428 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13429 ;;Total ram usage:        4 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:   11
 13432 ;; This function calls:
 13433 ;;		Nothing
 13434 ;; This function is called by:
 13435 ;;		_Auto_cut
 13436 ;;		_sleep_task
 13437 ;; This function uses a non-reentrant model
 13438 ;;
 13439                           
 13440                           	psect	text49
 13441  014240                     __ptext49:
 13442                           	opt stack 0
 13443  014240                     _ADC:
 13444                           	opt stack 18
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;incstack = 0
 13448                           ;ADC@ch stored from wreg
 13449  014240  0100               	movlb	0	; () banked
 13450  014242  6F63               	movwf	ADC@ch& (0+255),b
 13451                           
 13452                           ;My_PIC.c: 157: ADCON0bits.CHS = ch;
 13453  014244  C063  F062         	movff	ADC@ch,??_ADC
 13454  014248  4762               	rlncf	??_ADC& (0+255),f,b
 13455  01424A  4762               	rlncf	??_ADC& (0+255),f,b
 13456  01424C  50C2               	movf	4034,w,c	;volatile
 13457  01424E  1962               	xorwf	??_ADC& (0+255),w,b
 13458  014250  0BC3               	andlw	-61
 13459  014252  1962               	xorwf	??_ADC& (0+255),w,b
 13460  014254  6EC2               	movwf	4034,c	;volatile
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;My_PIC.c: 158: ADCON0bits.ADON = 1;
 13464  014256  80C2               	bsf	4034,0,c	;volatile
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;My_PIC.c: 160: PIR1bits.ADIF = 0;
 13468  014258  9C9E               	bcf	3998,6,c	;volatile
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;My_PIC.c: 161: ADCON0bits.GO_nDONE = 1;
 13472  01425A  82C2               	bsf	4034,1,c	;volatile
 13473  01425C                     l771:
 13474  01425C  AC9E               	btfss	3998,6,c	;volatile
 13475  01425E  D7FE               	goto	l771
 13476                           
 13477                           ;My_PIC.c: 163: return ADRES;
 13478  014260  CFC3 F060          	movff	4035,?_ADC	;volatile
 13479  014264  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 13480  014268  0012               	return		;funcret
 13481  01426A                     __end_of_ADC:
 13482                           	opt stack 0
 13483                           tblptru	equ	0xFF8
 13484                           tblptrh	equ	0xFF7
 13485                           tblptrl	equ	0xFF6
 13486                           tablat	equ	0xFF5
 13487                           prodh	equ	0xFF4
 13488                           prodl	equ	0xFF3
 13489                           intcon	equ	0xFF2
 13490                           intcon2	equ	0xFF1
 13491                           postinc0	equ	0xFEE
 13492                           wreg	equ	0xFE8
 13493                           indf1	equ	0xFE7
 13494                           postinc1	equ	0xFE6
 13495                           postdec1	equ	0xFE5
 13496                           fsr1h	equ	0xFE2
 13497                           fsr1l	equ	0xFE1
 13498                           indf2	equ	0xFDF
 13499                           postinc2	equ	0xFDE
 13500                           postdec2	equ	0xFDD
 13501                           plusw2	equ	0xFDB
 13502                           fsr2h	equ	0xFDA
 13503                           fsr2l	equ	0xFD9
 13504                           status	equ	0xFD8
 13505                           
 13506 ;; *************** function _hardware_init *****************
 13507 ;; Defined at:
 13508 ;;		line 82 in file "main.c"
 13509 ;; Parameters:    Size  Location     Type
 13510 ;;		None
 13511 ;; Auto vars:     Size  Location     Type
 13512 ;;		None
 13513 ;; Return value:  Size  Location     Type
 13514 ;;		None               void
 13515 ;; Registers used:
 13516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13517 ;; Tracked objects:
 13518 ;;		On entry : 0/0
 13519 ;;		On exit  : F/0
 13520 ;;		Unchanged: 0/0
 13521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13526 ;;Total ram usage:        0 bytes
 13527 ;; Hardware stack levels used:    1
 13528 ;; Hardware stack levels required when called:   16
 13529 ;; This function calls:
 13530 ;;		_ADC_init
 13531 ;;		_CTMU_init
 13532 ;;		_RTCC_init
 13533 ;;		_ST7032_init
 13534 ;;		_USB_init
 13535 ;;		_ringbuf_init
 13536 ;;		_timer0_init
 13537 ;;		_timer1_init
 13538 ;;		_timer3_init
 13539 ;; This function is called by:
 13540 ;;		_main
 13541 ;; This function uses a non-reentrant model
 13542 ;;
 13543                           
 13544                           	psect	text50
 13545  01337A                     __ptext50:
 13546                           	opt stack 0
 13547  01337A                     _hardware_init:
 13548                           	opt stack 14
 13549                           
 13550                           ;main.c: 83: OSCCONbits.IRCF = 7;
 13551                           
 13552                           ;incstack = 0
 13553  01337A  0E70               	movlw	112
 13554  01337C  12D3               	iorwf	4051,f,c	;volatile
 13555                           
 13556                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 13557  01337E  8C9B               	bsf	3995,6,c	;volatile
 13558                           
 13559                           ;main.c: 85: OSCCONbits.SCS = 0;
 13560  013380  0EFC               	movlw	-4
 13561  013382  16D3               	andwf	4051,f,c	;volatile
 13562                           
 13563                           ;main.c: 86: TRISA = 0b00011111;
 13564  013384  0E1F               	movlw	31
 13565  013386  6E92               	movwf	3986,c	;volatile
 13566                           
 13567                           ;main.c: 87: TRISB = 0b00111111;
 13568  013388  0E3F               	movlw	63
 13569  01338A  6E93               	movwf	3987,c	;volatile
 13570                           
 13571                           ;main.c: 88: TRISC = 0b10110010;
 13572  01338C  0EB2               	movlw	178
 13573  01338E  6E94               	movwf	3988,c	;volatile
 13574                           
 13575                           ;main.c: 89: ANCON0 = 0b11110000;
 13576  013390  0EF0               	movlw	240
 13577  013392  010F               	movlb	15	; () banked
 13578  013394  6F48               	movwf	72,b	;volatile
 13579                           
 13580                           ;main.c: 90: ANCON1 = 0b00001000;
 13581  013396  0E08               	movlw	8
 13582  013398  6F49               	movwf	73,b	;volatile
 13583                           
 13584                           ; BSR set to: 15
 13585                           ;main.c: 91: INTCON2bits.RBPU = 0;
 13586  01339A  9EF1               	bcf	intcon2,7,c	;volatile
 13587                           
 13588                           ; BSR set to: 15
 13589                           ;main.c: 93: timer0_init(0);
 13590  01339C  0E00               	movlw	0
 13591  01339E  EC09  F0A1         	call	_timer0_init
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;main.c: 94: timer1_init(0, 2);
 13595  0133A2  0E02               	movlw	2
 13596  0133A4  6F60               	movwf	timer1_init@clock_select& (0+255),b
 13597  0133A6  0E00               	movlw	0
 13598  0133A8  EC5D  F09F         	call	_timer1_init
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;main.c: 95: timer3_init(2);
 13602  0133AC  0E02               	movlw	2
 13603  0133AE  EC5F  F0A1         	call	_timer3_init
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;main.c: 96: ST7032_init();
 13607  0133B2  EC2F  F092         	call	_ST7032_init	;wreg free
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;main.c: 97: RTCC_init();
 13611  0133B6  EC9F  F09D         	call	_RTCC_init	;wreg free
 13612                           
 13613                           ;main.c: 98: ADC_init(0);
 13614  0133BA  0E00               	movlw	0
 13615  0133BC  EC21  F0A2         	call	_ADC_init
 13616                           
 13617                           ;main.c: 99: CTMU_init();
 13618  0133C0  ECBD  F0A1         	call	_CTMU_init	;wreg free
 13619                           
 13620                           ;main.c: 101: USB_init();
 13621  0133C4  EC7A  F0A2         	call	_USB_init	;wreg free
 13622                           
 13623                           ; BSR set to: 2
 13624                           ;main.c: 102: static uint8_t usbtx[2000];
 13625                           ;main.c: 103: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 13626  0133C8  0EBD               	movlw	low _usb_tx
 13627  0133CA  0100               	movlb	0	; () banked
 13628  0133CC  6F60               	movwf	ringbuf_init@rb& (0+255),b
 13629  0133CE  0E02               	movlw	high _usb_tx
 13630  0133D0  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 13631  0133D2  0EC8               	movlw	low hardware_init@usbtx
 13632  0133D4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 13633  0133D6  0E04               	movlw	high hardware_init@usbtx
 13634  0133D8  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 13635  0133DA  0E07               	movlw	7
 13636  0133DC  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 13637  0133DE  0ED0               	movlw	208
 13638  0133E0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 13639  0133E2  EC1E  F0A0         	call	_ringbuf_init	;wreg free
 13640                           
 13641                           ; BSR set to: 0
 13642                           ;main.c: 104: static uint8_t usbrx[100];
 13643                           ;main.c: 105: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 13644  0133E6  0EB5               	movlw	low _usb_rx
 13645  0133E8  6F60               	movwf	ringbuf_init@rb& (0+255),b
 13646  0133EA  0E02               	movlw	high _usb_rx
 13647  0133EC  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 13648  0133EE  0E00               	movlw	low hardware_init@usbrx
 13649  0133F0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 13650  0133F2  0E03               	movlw	high hardware_init@usbrx
 13651  0133F4  EC3C  F084         	call	PL332	;call to abstracted procedure
 13652  0133F8  EF1E  F0A0         	goto	_ringbuf_init	;wreg free
 13653  0133FC                     __end_of_hardware_init:
 13654                           	opt stack 0
 13655                           tblptru	equ	0xFF8
 13656                           tblptrh	equ	0xFF7
 13657                           tblptrl	equ	0xFF6
 13658                           tablat	equ	0xFF5
 13659                           prodh	equ	0xFF4
 13660                           prodl	equ	0xFF3
 13661                           intcon	equ	0xFF2
 13662                           intcon2	equ	0xFF1
 13663                           postinc0	equ	0xFEE
 13664                           wreg	equ	0xFE8
 13665                           indf1	equ	0xFE7
 13666                           postinc1	equ	0xFE6
 13667                           postdec1	equ	0xFE5
 13668                           fsr1h	equ	0xFE2
 13669                           fsr1l	equ	0xFE1
 13670                           indf2	equ	0xFDF
 13671                           postinc2	equ	0xFDE
 13672                           postdec2	equ	0xFDD
 13673                           plusw2	equ	0xFDB
 13674                           fsr2h	equ	0xFDA
 13675                           fsr2l	equ	0xFD9
 13676                           status	equ	0xFD8
 13677                           
 13678 ;; *************** function _timer3_init *****************
 13679 ;; Defined at:
 13680 ;;		line 101 in file "../My_library/My_PIC.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;  prescaler       1    wreg     unsigned char 
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;  prescaler       1    1[BANK0 ] unsigned char 
 13685 ;; Return value:  Size  Location     Type
 13686 ;;		None               void
 13687 ;; Registers used:
 13688 ;;		wreg, status,2, status,0
 13689 ;; Tracked objects:
 13690 ;;		On entry : F/0
 13691 ;;		On exit  : F/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13698 ;;Total ram usage:        2 bytes
 13699 ;; Hardware stack levels used:    1
 13700 ;; Hardware stack levels required when called:   11
 13701 ;; This function calls:
 13702 ;;		Nothing
 13703 ;; This function is called by:
 13704 ;;		_hardware_init
 13705 ;; This function uses a non-reentrant model
 13706 ;;
 13707                           
 13708                           	psect	text51
 13709  0142BE                     __ptext51:
 13710                           	opt stack 0
 13711  0142BE                     _timer3_init:
 13712                           	opt stack 18
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;incstack = 0
 13716                           ;timer3_init@prescaler stored from wreg
 13717  0142BE  6F61               	movwf	timer3_init@prescaler& (0+255),b
 13718                           
 13719                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
 13720  0142C0  0E3F               	movlw	-193
 13721  0142C2  1679               	andwf	3961,f,c	;volatile
 13722                           
 13723                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
 13724  0142C4  9679               	bcf	3961,3,c	;volatile
 13725                           
 13726                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
 13727  0142C6  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 13728  0142CA  0100               	movlb	0	; () banked
 13729  0142CC  3B60               	swapf	??_timer3_init& (0+255),f,b
 13730  0142CE  5079               	movf	3961,w,c	;volatile
 13731  0142D0  1960               	xorwf	??_timer3_init& (0+255),w,b
 13732  0142D2  0BCF               	andlw	-49
 13733  0142D4  1960               	xorwf	??_timer3_init& (0+255),w,b
 13734  0142D6  6E79               	movwf	3961,c	;volatile
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
 13738  0142D8  9E79               	bcf	3961,7,c	;volatile
 13739                           
 13740                           ; BSR set to: 0
 13741                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
 13742  0142DA  8079               	bsf	3961,0,c	;volatile
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
 13746  0142DC  92A2               	bcf	4002,1,c	;volatile
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
 13750  0142DE  92A1               	bcf	4001,1,c	;volatile
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
 13754  0142E0  82A0               	bsf	4000,1,c	;volatile
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
 13758  0142E2  8CF2               	bsf	intcon,6,c	;volatile
 13759                           
 13760                           ; BSR set to: 0
 13761  0142E4  0012               	return		;funcret
 13762  0142E6                     __end_of_timer3_init:
 13763                           	opt stack 0
 13764                           tblptru	equ	0xFF8
 13765                           tblptrh	equ	0xFF7
 13766                           tblptrl	equ	0xFF6
 13767                           tablat	equ	0xFF5
 13768                           prodh	equ	0xFF4
 13769                           prodl	equ	0xFF3
 13770                           intcon	equ	0xFF2
 13771                           intcon2	equ	0xFF1
 13772                           postinc0	equ	0xFEE
 13773                           wreg	equ	0xFE8
 13774                           indf1	equ	0xFE7
 13775                           postinc1	equ	0xFE6
 13776                           postdec1	equ	0xFE5
 13777                           fsr1h	equ	0xFE2
 13778                           fsr1l	equ	0xFE1
 13779                           indf2	equ	0xFDF
 13780                           postinc2	equ	0xFDE
 13781                           postdec2	equ	0xFDD
 13782                           plusw2	equ	0xFDB
 13783                           fsr2h	equ	0xFDA
 13784                           fsr2l	equ	0xFD9
 13785                           status	equ	0xFD8
 13786                           
 13787 ;; *************** function _timer1_init *****************
 13788 ;; Defined at:
 13789 ;;		line 70 in file "../My_library/My_PIC.c"
 13790 ;; Parameters:    Size  Location     Type
 13791 ;;  prescaler       1    wreg     unsigned char 
 13792 ;;  clock_select    1    0[BANK0 ] unsigned char 
 13793 ;; Auto vars:     Size  Location     Type
 13794 ;;  prescaler       1    2[BANK0 ] unsigned char 
 13795 ;; Return value:  Size  Location     Type
 13796 ;;		None               void
 13797 ;; Registers used:
 13798 ;;		wreg, status,2, status,0
 13799 ;; Tracked objects:
 13800 ;;		On entry : F/0
 13801 ;;		On exit  : F/0
 13802 ;;		Unchanged: 0/0
 13803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13804 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13806 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13807 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13808 ;;Total ram usage:        3 bytes
 13809 ;; Hardware stack levels used:    1
 13810 ;; Hardware stack levels required when called:   11
 13811 ;; This function calls:
 13812 ;;		Nothing
 13813 ;; This function is called by:
 13814 ;;		_hardware_init
 13815 ;; This function uses a non-reentrant model
 13816 ;;
 13817                           
 13818                           	psect	text52
 13819  013EBA                     __ptext52:
 13820                           	opt stack 0
 13821  013EBA                     _timer1_init:
 13822                           	opt stack 18
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;incstack = 0
 13826                           ;timer1_init@prescaler stored from wreg
 13827  013EBA  6F62               	movwf	timer1_init@prescaler& (0+255),b
 13828                           
 13829                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
 13830  013EBC  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 13831  013EC0  0100               	movlb	0	; () banked
 13832  013EC2  3B61               	swapf	??_timer1_init& (0+255),f,b
 13833  013EC4  4761               	rlncf	??_timer1_init& (0+255),f,b
 13834  013EC6  4761               	rlncf	??_timer1_init& (0+255),f,b
 13835  013EC8  50CD               	movf	4045,w,c	;volatile
 13836  013ECA  1961               	xorwf	??_timer1_init& (0+255),w,b
 13837  013ECC  0B3F               	andlw	-193
 13838  013ECE  1961               	xorwf	??_timer1_init& (0+255),w,b
 13839  013ED0  6ECD               	movwf	4045,c	;volatile
 13840                           
 13841                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 13842  013ED2  0E02               	movlw	2
 13843  013ED4  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 13844  013ED6  E102               	bnz	l757
 13845                           
 13846                           ; BSR set to: 0
 13847  013ED8  86CD               	bsf	4045,3,c	;volatile
 13848  013EDA  D001               	goto	l11276
 13849  013EDC                     l757:
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
 13853  013EDC  96CD               	bcf	4045,3,c	;volatile
 13854  013EDE                     l11276:
 13855                           
 13856                           ; BSR set to: 0
 13857                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
 13858  013EDE  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 13859  013EE2  3B61               	swapf	??_timer1_init& (0+255),f,b
 13860  013EE4  50CD               	movf	4045,w,c	;volatile
 13861  013EE6  1961               	xorwf	??_timer1_init& (0+255),w,b
 13862  013EE8  0BCF               	andlw	-49
 13863  013EEA  1961               	xorwf	??_timer1_init& (0+255),w,b
 13864  013EEC  6ECD               	movwf	4045,c	;volatile
 13865                           
 13866                           ; BSR set to: 0
 13867                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
 13868  013EEE  84CD               	bsf	4045,2,c	;volatile
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
 13872  013EF0  92CD               	bcf	4045,1,c	;volatile
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
 13876  013EF2  80CD               	bsf	4045,0,c	;volatile
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
 13880  013EF4  909F               	bcf	3999,0,c	;volatile
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
 13884  013EF6  909E               	bcf	3998,0,c	;volatile
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
 13888  013EF8  809D               	bsf	3997,0,c	;volatile
 13889                           
 13890                           ; BSR set to: 0
 13891                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 13892  013EFA  8CF2               	bsf	intcon,6,c	;volatile
 13893                           
 13894                           ; BSR set to: 0
 13895  013EFC  0012               	return		;funcret
 13896  013EFE                     __end_of_timer1_init:
 13897                           	opt stack 0
 13898                           tblptru	equ	0xFF8
 13899                           tblptrh	equ	0xFF7
 13900                           tblptrl	equ	0xFF6
 13901                           tablat	equ	0xFF5
 13902                           prodh	equ	0xFF4
 13903                           prodl	equ	0xFF3
 13904                           intcon	equ	0xFF2
 13905                           intcon2	equ	0xFF1
 13906                           postinc0	equ	0xFEE
 13907                           wreg	equ	0xFE8
 13908                           indf1	equ	0xFE7
 13909                           postinc1	equ	0xFE6
 13910                           postdec1	equ	0xFE5
 13911                           fsr1h	equ	0xFE2
 13912                           fsr1l	equ	0xFE1
 13913                           indf2	equ	0xFDF
 13914                           postinc2	equ	0xFDE
 13915                           postdec2	equ	0xFDD
 13916                           plusw2	equ	0xFDB
 13917                           fsr2h	equ	0xFDA
 13918                           fsr2l	equ	0xFD9
 13919                           status	equ	0xFD8
 13920                           
 13921 ;; *************** function _timer0_init *****************
 13922 ;; Defined at:
 13923 ;;		line 34 in file "../My_library/My_PIC.c"
 13924 ;; Parameters:    Size  Location     Type
 13925 ;;  prescaler       1    wreg     unsigned char 
 13926 ;; Auto vars:     Size  Location     Type
 13927 ;;  prescaler       1    1[BANK0 ] unsigned char 
 13928 ;; Return value:  Size  Location     Type
 13929 ;;		None               void
 13930 ;; Registers used:
 13931 ;;		wreg, status,2, status,0
 13932 ;; Tracked objects:
 13933 ;;		On entry : F/F
 13934 ;;		On exit  : F/0
 13935 ;;		Unchanged: 0/0
 13936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13939 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13940 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13941 ;;Total ram usage:        2 bytes
 13942 ;; Hardware stack levels used:    1
 13943 ;; Hardware stack levels required when called:   11
 13944 ;; This function calls:
 13945 ;;		Nothing
 13946 ;; This function is called by:
 13947 ;;		_hardware_init
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951                           	psect	text53
 13952  014212                     __ptext53:
 13953                           	opt stack 0
 13954  014212                     _timer0_init:
 13955                           	opt stack 18
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;incstack = 0
 13959                           ;timer0_init@prescaler stored from wreg
 13960  014212  0100               	movlb	0	; () banked
 13961  014214  6F61               	movwf	timer0_init@prescaler& (0+255),b
 13962                           
 13963                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
 13964  014216  8ED5               	bsf	4053,7,c	;volatile
 13965                           
 13966                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
 13967  014218  8CD5               	bsf	4053,6,c	;volatile
 13968                           
 13969                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
 13970  01421A  9AD5               	bcf	4053,5,c	;volatile
 13971                           
 13972                           ;My_PIC.c: 38: if (prescaler == 0) {
 13973  01421C  5161               	movf	timer0_init@prescaler& (0+255),w,b
 13974  01421E  E102               	bnz	l752
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
 13978  014220  86D5               	bsf	4053,3,c	;volatile
 13979                           
 13980                           ;My_PIC.c: 40: } else {
 13981  014222  D009               	goto	l11264
 13982  014224                     l752:
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
 13986  014224  96D5               	bcf	4053,3,c	;volatile
 13987                           
 13988                           ; BSR set to: 0
 13989                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
 13990  014226  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 13991  01422A  0760               	decf	??_timer0_init& (0+255),f,b
 13992  01422C  50D5               	movf	4053,w,c	;volatile
 13993  01422E  1960               	xorwf	??_timer0_init& (0+255),w,b
 13994  014230  0BF8               	andlw	-8
 13995  014232  1960               	xorwf	??_timer0_init& (0+255),w,b
 13996  014234  6ED5               	movwf	4053,c	;volatile
 13997  014236                     l11264:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;My_PIC.c: 43: }
 14001                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
 14002  014236  8AF2               	bsf	intcon,5,c	;volatile
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
 14006  014238  94F2               	bcf	intcon,2,c	;volatile
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
 14010  01423A  94F1               	bcf	intcon2,2,c	;volatile
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
 14014  01423C  8CF2               	bsf	intcon,6,c	;volatile
 14015                           
 14016                           ; BSR set to: 0
 14017  01423E  0012               	return		;funcret
 14018  014240                     __end_of_timer0_init:
 14019                           	opt stack 0
 14020                           tblptru	equ	0xFF8
 14021                           tblptrh	equ	0xFF7
 14022                           tblptrl	equ	0xFF6
 14023                           tablat	equ	0xFF5
 14024                           prodh	equ	0xFF4
 14025                           prodl	equ	0xFF3
 14026                           intcon	equ	0xFF2
 14027                           intcon2	equ	0xFF1
 14028                           postinc0	equ	0xFEE
 14029                           wreg	equ	0xFE8
 14030                           indf1	equ	0xFE7
 14031                           postinc1	equ	0xFE6
 14032                           postdec1	equ	0xFE5
 14033                           fsr1h	equ	0xFE2
 14034                           fsr1l	equ	0xFE1
 14035                           indf2	equ	0xFDF
 14036                           postinc2	equ	0xFDE
 14037                           postdec2	equ	0xFDD
 14038                           plusw2	equ	0xFDB
 14039                           fsr2h	equ	0xFDA
 14040                           fsr2l	equ	0xFD9
 14041                           status	equ	0xFD8
 14042                           
 14043 ;; *************** function _USB_init *****************
 14044 ;; Defined at:
 14045 ;;		line 11 in file "../My_library/My_usb_cdc.c"
 14046 ;; Parameters:    Size  Location     Type
 14047 ;;		None
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;		None
 14050 ;; Return value:  Size  Location     Type
 14051 ;;		None               void
 14052 ;; Registers used:
 14053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/2
 14056 ;;		On exit  : F/2
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14063 ;;Total ram usage:        0 bytes
 14064 ;; Hardware stack levels used:    1
 14065 ;; Hardware stack levels required when called:   13
 14066 ;; This function calls:
 14067 ;;		_USBDeviceAttach
 14068 ;;		_USBDeviceInit
 14069 ;; This function is called by:
 14070 ;;		_hardware_init
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           	psect	text54
 14075  0144F4                     __ptext54:
 14076                           	opt stack 0
 14077  0144F4                     _USB_init:
 14078                           	opt stack 16
 14079                           
 14080                           ;My_usb_cdc.c: 12: USBDeviceInit();
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;incstack = 0
 14084  0144F4  EC4B  F095         	call	_USBDeviceInit	;wreg free
 14085                           
 14086                           ; BSR set to: 13
 14087                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 14088  0144F8  ECBE  F0A0         	call	_USBDeviceAttach	;wreg free
 14089                           
 14090                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
 14091  0144FC  0102               	movlb	2	; () banked
 14092  0144FE  6BC5               	clrf	_line_coding& (0+255),b
 14093  014500  0EC2               	movlw	194
 14094  014502  6FC6               	movwf	(_line_coding+1)& (0+255),b
 14095  014504  0E01               	movlw	1
 14096  014506  6FC7               	movwf	(_line_coding+2)& (0+255),b
 14097  014508  6BC8               	clrf	(_line_coding+3)& (0+255),b
 14098                           
 14099                           ; BSR set to: 2
 14100  01450A  0C00               	retlw	0	;funcret
 14101  01450C                     __end_of_USB_init:
 14102                           	opt stack 0
 14103                           tblptru	equ	0xFF8
 14104                           tblptrh	equ	0xFF7
 14105                           tblptrl	equ	0xFF6
 14106                           tablat	equ	0xFF5
 14107                           prodh	equ	0xFF4
 14108                           prodl	equ	0xFF3
 14109                           intcon	equ	0xFF2
 14110                           intcon2	equ	0xFF1
 14111                           postinc0	equ	0xFEE
 14112                           wreg	equ	0xFE8
 14113                           indf1	equ	0xFE7
 14114                           postinc1	equ	0xFE6
 14115                           postdec1	equ	0xFE5
 14116                           fsr1h	equ	0xFE2
 14117                           fsr1l	equ	0xFE1
 14118                           indf2	equ	0xFDF
 14119                           postinc2	equ	0xFDE
 14120                           postdec2	equ	0xFDD
 14121                           plusw2	equ	0xFDB
 14122                           fsr2h	equ	0xFDA
 14123                           fsr2l	equ	0xFD9
 14124                           status	equ	0xFD8
 14125                           
 14126 ;; *************** function _USBDeviceInit *****************
 14127 ;; Defined at:
 14128 ;;		line 298 in file "../My_library/usb/usb_device.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;		None
 14131 ;; Auto vars:     Size  Location     Type
 14132 ;;  i               1    8[BANK0 ] unsigned char 
 14133 ;; Return value:  Size  Location     Type
 14134 ;;		None               void
 14135 ;; Registers used:
 14136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/2
 14139 ;;		On exit  : F/D
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14146 ;;Total ram usage:        1 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:   12
 14149 ;; This function calls:
 14150 ;;		_memset
 14151 ;; This function is called by:
 14152 ;;		_USB_init
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text55
 14157  012A96                     __ptext55:
 14158                           	opt stack 0
 14159  012A96                     _USBDeviceInit:
 14160                           	opt stack 16
 14161                           
 14162                           ;usb_device.c: 300: uint8_t i;
 14163                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 14164                           
 14165                           ; BSR set to: 2
 14166                           ;incstack = 0
 14167  012A96  98A0               	bcf	4000,4,c	;volatile
 14168                           
 14169                           ;usb_device.c: 305: {UEIR = 0;};
 14170  012A98  6A63               	clrf	3939,c	;volatile
 14171                           
 14172                           ;usb_device.c: 308: {UIR = 0;};
 14173  012A9A  6A62               	clrf	3938,c	;volatile
 14174                           
 14175                           ;usb_device.c: 311: UEP0 = 0;
 14176  012A9C  010F               	movlb	15	; () banked
 14177  012A9E  6B26               	clrf	38,b	;volatile
 14178                           
 14179                           ; BSR set to: 15
 14180                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 14181  012AA0  0E27               	movlw	39
 14182  012AA2  0100               	movlb	0	; () banked
 14183  012AA4  6F60               	movwf	memset@p1& (0+255),b
 14184  012AA6  0E0F               	movlw	15
 14185  012AA8  6F61               	movwf	(memset@p1+1)& (0+255),b
 14186  012AAA  6B63               	clrf	(memset@c+1)& (0+255),b
 14187  012AAC  6B62               	clrf	memset@c& (0+255),b
 14188  012AAE  6B65               	clrf	(memset@n+1)& (0+255),b
 14189  012AB0  0E02               	movlw	2
 14190  012AB2  6F64               	movwf	memset@n& (0+255),b
 14191  012AB4  EC35  F0A1         	call	_memset	;wreg free
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14195  012AB8  0E16               	movlw	22
 14196  012ABA  010F               	movlb	15	; () banked
 14197                           
 14198                           ; BSR set to: 15
 14199                           
 14200                           ; BSR set to: 15
 14201  012ABC  ECD1  F0A0         	call	PL202	;call to abstracted procedure
 14202                           
 14203                           ; BSR set to: 15
 14204                           ;usb_device.c: 318: ;
 14205                           ;usb_device.c: 321: ;
 14206                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14207  012AC0  0100               	movlb	0	; () banked
 14208  012AC2  6B68               	clrf	USBDeviceInit@i& (0+255),b
 14209  012AC4                     l10744:
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;usb_device.c: 325: {
 14213                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 14214  012AC4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 14215  012AC6  EC3C  F090         	call	PL118	;call to abstracted procedure
 14216  012ACA  D82A               	call	PL76	;call to abstracted procedure
 14217                           
 14218                           ; BSR set to: 0
 14219  012ACC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 14220                           
 14221                           ; BSR set to: 0
 14222  012ACE  0E0B               	movlw	11
 14223  012AD0  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 14224  012AD2  D7F8               	goto	l10744
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;usb_device.c: 327: }
 14228                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 14229  012AD4  8C65               	bsf	3941,6,c	;volatile
 14230                           
 14231                           ;usb_device.c: 333: UADDR = 0x00;
 14232  012AD6  010F               	movlb	15	; () banked
 14233  012AD8  6B38               	clrf	56,b	;volatile
 14234                           
 14235                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 14236  012ADA  9865               	bcf	3941,4,c	;volatile
 14237                           
 14238                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 14239  012ADC  9C65               	bcf	3941,6,c	;volatile
 14240                           
 14241                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 14242  012ADE  D002               	goto	l10758
 14243  012AE0                     l10750:
 14244                           
 14245                           ;usb_device.c: 343: {
 14246                           ;usb_device.c: 344: (UIR &= 0xF7);
 14247                           
 14248                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 14249                           
 14250                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 14251                           
 14252                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 14253  012AE0  EC56  F090         	call	PL288	;call to abstracted procedure
 14254  012AE4                     l10758:
 14255  012AE4  B662               	btfsc	3938,3,c	;volatile
 14256  012AE6  D7FC               	goto	l10750
 14257                           
 14258                           ;usb_device.c: 349: }
 14259                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 14260                           
 14261                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 14262                           
 14263                           ; BSR set to: 1
 14264                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 14265                           
 14266                           ; BSR set to: 1
 14267                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 14268                           
 14269                           ; BSR set to: 1
 14270                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 14271  012AE8  EC4E  F090         	call	PL240	;call to abstracted procedure
 14272                           
 14273                           ; BSR set to: 1
 14274                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 14275  012AEC  0100               	movlb	0	; () banked
 14276  012AEE  6B68               	clrf	USBDeviceInit@i& (0+255),b
 14277  012AF0                     l10774:
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;usb_device.c: 363: {
 14281                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 14282  012AF0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 14283  012AF2  EC3B  F095         	call	PL46	;call to abstracted procedure
 14284  012AF6  6ADE               	clrf	postinc2,c
 14285  012AF8  6ADD               	clrf	postdec2,c
 14286                           
 14287                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 14288  012AFA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 14289  012AFC  EC33  F095         	call	PL22	;call to abstracted procedure
 14290  012B00  6ADE               	clrf	postinc2,c
 14291  012B02  6ADD               	clrf	postdec2,c
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 14295  012B04  0E09               	movlw	low _ep_data_in
 14296  012B06  2568               	addwf	USBDeviceInit@i& (0+255),w,b
 14297                           
 14298                           ; BSR set to: 0
 14299                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 14300  012B08  EC41  F090         	call	PL158	;call to abstracted procedure
 14301  012B0C  2568               	addwf	USBDeviceInit@i& (0+255),w,b
 14302  012B0E  EC48  F090         	call	PL196	;call to abstracted procedure
 14303                           
 14304                           ; BSR set to: 0
 14305  012B12  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 14306                           
 14307                           ; BSR set to: 0
 14308  012B14  0E02               	movlw	2
 14309  012B16  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 14310  012B18  D7EB               	goto	l10774
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;usb_device.c: 368: }
 14314                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14315  012B1A  0E08               	movlw	8
 14316                           
 14317                           ; BSR set to: 0
 14318                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 14319                           
 14320                           ; BSR set to: 15
 14321                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 14322                           
 14323                           ; BSR set to: 13
 14324                           ;usb_device.c: 376: BDT[0].CNT = 8;
 14325                           
 14326                           ; BSR set to: 13
 14327                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 14328                           
 14329                           ; BSR set to: 13
 14330                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 14331                           
 14332                           ; BSR set to: 13
 14333                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 14334                           
 14335                           ; BSR set to: 13
 14336                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 14337                           
 14338                           ; BSR set to: 13
 14339  012B1C  EF29  F090         	goto	PL66	;call to abstracted procedure
 14340  012B20                     __end_of_USBDeviceInit:
 14341                           	opt stack 0
 14342  012B20                     PL76:
 14343                           	opt stack 16
 14344  012B20  20F4               	addwfc	prodh,w,c
 14345  012B22  6EDA               	movwf	fsr2h,c
 14346  012B24  6ADE               	clrf	postinc2,c
 14347  012B26  6ADE               	clrf	postinc2,c
 14348  012B28  6ADE               	clrf	postinc2,c
 14349  012B2A  6ADD               	clrf	postdec2,c
 14350  012B2C  0012               	return	
 14351  012B2E                     __end_ofPL76:
 14352                           	opt stack 0
 14353                           tblptru	equ	0xFF8
 14354                           tblptrh	equ	0xFF7
 14355                           tblptrl	equ	0xFF6
 14356                           tablat	equ	0xFF5
 14357                           prodh	equ	0xFF4
 14358                           prodl	equ	0xFF3
 14359                           intcon	equ	0xFF2
 14360                           intcon2	equ	0xFF1
 14361                           postinc0	equ	0xFEE
 14362                           wreg	equ	0xFE8
 14363                           indf1	equ	0xFE7
 14364                           postinc1	equ	0xFE6
 14365                           postdec1	equ	0xFE5
 14366                           fsr1h	equ	0xFE2
 14367                           fsr1l	equ	0xFE1
 14368                           indf2	equ	0xFDF
 14369                           postinc2	equ	0xFDE
 14370                           postdec2	equ	0xFDD
 14371                           plusw2	equ	0xFDB
 14372                           fsr2h	equ	0xFDA
 14373                           fsr2l	equ	0xFD9
 14374                           status	equ	0xFD8
 14375                           
 14376 ;; *************** function _memset *****************
 14377 ;; Defined at:
 14378 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;  p1              2    0[BANK0 ] PTR void 
 14381 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14382 ;;  c               2    2[BANK0 ] int 
 14383 ;;  n               2    4[BANK0 ] unsigned int 
 14384 ;; Auto vars:     Size  Location     Type
 14385 ;;  p               2    6[BANK0 ] PTR unsigned char 
 14386 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  2    0[BANK0 ] PTR void 
 14389 ;; Registers used:
 14390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14391 ;; Tracked objects:
 14392 ;;		On entry : F/0
 14393 ;;		On exit  : F/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14397 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14399 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14400 ;;Total ram usage:        8 bytes
 14401 ;; Hardware stack levels used:    1
 14402 ;; Hardware stack levels required when called:   11
 14403 ;; This function calls:
 14404 ;;		Nothing
 14405 ;; This function is called by:
 14406 ;;		_USBDeviceInit
 14407 ;; This function uses a non-reentrant model
 14408 ;;
 14409                           
 14410                           	psect	text56
 14411  01426A                     __ptext56:
 14412                           	opt stack 0
 14413  01426A                     _memset:
 14414                           	opt stack 16
 14415                           
 14416                           ; BSR set to: 0
 14417                           
 14418                           ; BSR set to: 13
 14419                           ;incstack = 0
 14420  01426A  C060  F066         	movff	memset@p1,memset@p
 14421  01426E  C061  F067         	movff	memset@p1+1,memset@p+1
 14422  014272  D008               	goto	l10276
 14423  014274                     l10272:
 14424                           
 14425                           ; BSR set to: 0
 14426  014274  C066  FFD9         	movff	memset@p,fsr2l
 14427  014278  C067  FFDA         	movff	memset@p+1,fsr2h
 14428  01427C  C062  FFDF         	movff	memset@c,indf2
 14429                           
 14430                           ; BSR set to: 0
 14431  014280  4B66               	infsnz	memset@p& (0+255),f,b
 14432  014282  2B67               	incf	(memset@p+1)& (0+255),f,b
 14433  014284                     l10276:
 14434                           
 14435                           ; BSR set to: 0
 14436  014284  0764               	decf	memset@n& (0+255),f,b
 14437  014286  A0D8               	btfss	status,0,c
 14438  014288  0765               	decf	(memset@n+1)& (0+255),f,b
 14439  01428A  2964               	incf	memset@n& (0+255),w,b
 14440  01428C  E1F3               	bnz	l10272
 14441  01428E  2965               	incf	(memset@n+1)& (0+255),w,b
 14442  014290  E1F1               	bnz	l10272
 14443                           
 14444                           ; BSR set to: 0
 14445  014292  0012               	return		;funcret
 14446  014294                     __end_of_memset:
 14447                           	opt stack 0
 14448                           tblptru	equ	0xFF8
 14449                           tblptrh	equ	0xFF7
 14450                           tblptrl	equ	0xFF6
 14451                           tablat	equ	0xFF5
 14452                           prodh	equ	0xFF4
 14453                           prodl	equ	0xFF3
 14454                           intcon	equ	0xFF2
 14455                           intcon2	equ	0xFF1
 14456                           postinc0	equ	0xFEE
 14457                           wreg	equ	0xFE8
 14458                           indf1	equ	0xFE7
 14459                           postinc1	equ	0xFE6
 14460                           postdec1	equ	0xFE5
 14461                           fsr1h	equ	0xFE2
 14462                           fsr1l	equ	0xFE1
 14463                           indf2	equ	0xFDF
 14464                           postinc2	equ	0xFDE
 14465                           postdec2	equ	0xFDD
 14466                           plusw2	equ	0xFDB
 14467                           fsr2h	equ	0xFDA
 14468                           fsr2l	equ	0xFD9
 14469                           status	equ	0xFD8
 14470                           
 14471 ;; *************** function _USBDeviceAttach *****************
 14472 ;; Defined at:
 14473 ;;		line 1352 in file "../My_library/usb/usb_device.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;		None
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;		None
 14478 ;; Return value:  Size  Location     Type
 14479 ;;		None               void
 14480 ;; Registers used:
 14481 ;;		wreg, status,2
 14482 ;; Tracked objects:
 14483 ;;		On entry : F/D
 14484 ;;		On exit  : D/D
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14491 ;;Total ram usage:        0 bytes
 14492 ;; Hardware stack levels used:    1
 14493 ;; Hardware stack levels required when called:   11
 14494 ;; This function calls:
 14495 ;;		Nothing
 14496 ;; This function is called by:
 14497 ;;		_USB_init
 14498 ;; This function uses a non-reentrant model
 14499 ;;
 14500                           
 14501                           	psect	text57
 14502  01417C                     __ptext57:
 14503                           	opt stack 0
 14504  01417C                     _USBDeviceAttach:
 14505                           	opt stack 17
 14506                           
 14507                           ; BSR set to: 13
 14508                           ;usb_device.c: 1356: {
 14509                           ;usb_device.c: 1357: if(1 == 1)
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;incstack = 0
 14513  01417C  501B               	movf	_USBDeviceState,w,c	;volatile
 14514  01417E  A4D8               	btfss	status,2,c
 14515  014180  0012               	return	
 14516                           
 14517                           ; BSR set to: 13
 14518                           ;usb_device.c: 1358: {
 14519                           ;usb_device.c: 1360: UCON = 0;
 14520  014182  6A65               	clrf	3941,c	;volatile
 14521                           
 14522                           ;usb_device.c: 1363: UIE = 0;
 14523  014184  010F               	movlb	15	; () banked
 14524  014186  6B36               	clrf	54,b	;volatile
 14525                           
 14526                           ; BSR set to: 15
 14527                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 14528  014188  0E16               	movlw	22
 14529  01418A  D80B               	call	PL202	;call to abstracted procedure
 14530                           
 14531                           ; BSR set to: 15
 14532                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 14533  01418C  8ED0               	bsf	4048,7,c	;volatile
 14534                           
 14535                           ; BSR set to: 15
 14536  01418E  88A2               	bsf	4002,4,c	;volatile
 14537                           
 14538                           ; BSR set to: 15
 14539  014190  88A0               	bsf	4000,4,c	;volatile
 14540                           
 14541                           ; BSR set to: 15
 14542  014192  8EF2               	bsf	intcon,7,c	;volatile
 14543                           
 14544                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 14545  014194  D001               	goto	l1601
 14546  014196                     l1602:
 14547  014196  8665               	bsf	3941,3,c	;volatile
 14548  014198                     l1601:
 14549  014198  A665               	btfss	3941,3,c	;volatile
 14550  01419A  D7FD               	goto	l1602
 14551                           
 14552                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 14553  01419C  0E01               	movlw	1
 14554  01419E  6E1B               	movwf	_USBDeviceState,c	;volatile
 14555  0141A0  0C01               	retlw	1	;funcret
 14556  0141A2                     __end_of_USBDeviceAttach:
 14557                           	opt stack 0
 14558  0141A2                     PL202:
 14559                           	opt stack 16
 14560  0141A2  6F39               	movwf	57,b	;volatile
 14561  0141A4  0E9F               	movlw	159
 14562  0141A6  6F37               	movwf	55,b	;volatile
 14563  0141A8  0E7B               	movlw	123
 14564  0141AA  6F36               	movwf	54,b	;volatile
 14565  0141AC  0C7B               	retlw	123
 14566  0141AE                     __end_ofPL202:
 14567                           	opt stack 0
 14568                           tblptru	equ	0xFF8
 14569                           tblptrh	equ	0xFF7
 14570                           tblptrl	equ	0xFF6
 14571                           tablat	equ	0xFF5
 14572                           prodh	equ	0xFF4
 14573                           prodl	equ	0xFF3
 14574                           intcon	equ	0xFF2
 14575                           intcon2	equ	0xFF1
 14576                           postinc0	equ	0xFEE
 14577                           wreg	equ	0xFE8
 14578                           indf1	equ	0xFE7
 14579                           postinc1	equ	0xFE6
 14580                           postdec1	equ	0xFE5
 14581                           fsr1h	equ	0xFE2
 14582                           fsr1l	equ	0xFE1
 14583                           indf2	equ	0xFDF
 14584                           postinc2	equ	0xFDE
 14585                           postdec2	equ	0xFDD
 14586                           plusw2	equ	0xFDB
 14587                           fsr2h	equ	0xFDA
 14588                           fsr2l	equ	0xFD9
 14589                           status	equ	0xFD8
 14590                           
 14591 ;; *************** function _ST7032_init *****************
 14592 ;; Defined at:
 14593 ;;		line 62 in file "../My_library/My_ST7032.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;		None
 14596 ;; Auto vars:     Size  Location     Type
 14597 ;;		None
 14598 ;; Return value:  Size  Location     Type
 14599 ;;		None               void
 14600 ;; Registers used:
 14601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14602 ;; Tracked objects:
 14603 ;;		On entry : F/0
 14604 ;;		On exit  : F/0
 14605 ;;		Unchanged: 0/0
 14606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14611 ;;Total ram usage:        0 bytes
 14612 ;; Hardware stack levels used:    1
 14613 ;; Hardware stack levels required when called:   15
 14614 ;; This function calls:
 14615 ;;		_ST7032_clear
 14616 ;;		_ST7032_command
 14617 ;;		_ringbuf_init
 14618 ;;		_ringbuf_put
 14619 ;; This function is called by:
 14620 ;;		_hardware_init
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624                           	psect	text58
 14625  01245E                     __ptext58:
 14626                           	opt stack 0
 14627  01245E                     _ST7032_init:
 14628                           	opt stack 14
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;My_ST7032.c: 63: SSP1STAT = 0b10000000;
 14632                           
 14633                           ;incstack = 0
 14634  01245E  0E80               	movlw	128
 14635  012460  6EC7               	movwf	4039,c	;volatile
 14636                           
 14637                           ;My_ST7032.c: 64: SSP1CON1 = 0b00101000;
 14638  012462  0E28               	movlw	40
 14639  012464  6EC6               	movwf	4038,c	;volatile
 14640                           
 14641                           ;My_ST7032.c: 65: SSP1ADD = 0x13;
 14642  012466  0E13               	movlw	19
 14643  012468  6EC8               	movwf	4040,c	;volatile
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;My_ST7032.c: 66: PIE1bits.SSP1IE = 1;
 14647  01246A  869D               	bsf	3997,3,c	;volatile
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;My_ST7032.c: 67: IPR1bits.SSP1IP = 0;
 14651  01246C  969F               	bcf	3999,3,c	;volatile
 14652                           
 14653                           ; BSR set to: 0
 14654                           ;My_ST7032.c: 68: PIR1bits.SSP1IF = 0;
 14655  01246E  969E               	bcf	3998,3,c	;volatile
 14656                           
 14657                           ; BSR set to: 0
 14658                           ;My_ST7032.c: 69: PIE2bits.BCL1IE = 1;
 14659  012470  86A0               	bsf	4000,3,c	;volatile
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;My_ST7032.c: 70: IPR2bits.BCL1IP = 0;
 14663  012472  96A2               	bcf	4002,3,c	;volatile
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;My_ST7032.c: 71: PIR2bits.BCL1IF = 0;
 14667  012474  96A1               	bcf	4001,3,c	;volatile
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;My_ST7032.c: 72: INTCONbits.PEIE = 1;
 14671  012476  8CF2               	bsf	intcon,6,c	;volatile
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;My_ST7032.c: 74: static char buf[200];
 14675                           ;My_ST7032.c: 75: ringbuf_init(&lcd_tx, buf, sizeof (buf));
 14676  012478  0E82               	movlw	low _lcd_tx
 14677  01247A  6F60               	movwf	ringbuf_init@rb& (0+255),b
 14678  01247C  0E01               	movlw	high _lcd_tx
 14679  01247E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 14680  012480  0E00               	movlw	low ST7032_init@buf
 14681  012482  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 14682  012484  0E04               	movlw	high ST7032_init@buf
 14683  012486  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 14684  012488  6B65               	clrf	(ringbuf_init@bufsize+1)& (0+255),b
 14685  01248A  0EC8               	movlw	200
 14686  01248C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 14687  01248E  EC1E  F0A0         	call	_ringbuf_init	;wreg free
 14688                           
 14689                           ; BSR set to: 0
 14690                           ;My_ST7032.c: 77: ringbuf_put(&lcd_tx, 0);
 14691  012492  ECFA  F09F         	call	PL72	;call to abstracted procedure
 14692  012496  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
 14693  012498  ECC5  F093         	call	_ringbuf_put	;wreg free
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;My_ST7032.c: 78: ringbuf_put(&lcd_tx, 3);
 14697  01249C  ECFA  F09F         	call	PL72	;call to abstracted procedure
 14698  0124A0  0E03               	movlw	3
 14699  0124A2  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 14700  0124A4  ECC5  F093         	call	_ringbuf_put	;wreg free
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;My_ST7032.c: 80: ST7032_command(0x38, 1);
 14704  0124A8  D82A               	call	PL354	;call to abstracted procedure
 14705  0124AA  EC7F  F09F         	call	_ST7032_command
 14706                           
 14707                           ; BSR set to: 0
 14708                           ;My_ST7032.c: 81: ST7032_command(0x39, 1);
 14709  0124AE  0E01               	movlw	1
 14710  0124B0  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14711  0124B2  0E39               	movlw	57
 14712  0124B4  EC7F  F09F         	call	_ST7032_command
 14713                           
 14714                           ; BSR set to: 0
 14715                           ;My_ST7032.c: 82: ST7032_command(0x14, 1);
 14716  0124B8  0E01               	movlw	1
 14717  0124BA  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14718  0124BC  0E14               	movlw	20
 14719  0124BE  EC7F  F09F         	call	_ST7032_command
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;My_ST7032.c: 83: ST7032_command(0x70, 1);
 14723  0124C2  0E01               	movlw	1
 14724  0124C4  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14725  0124C6  0E70               	movlw	112
 14726  0124C8  EC7F  F09F         	call	_ST7032_command
 14727                           
 14728                           ; BSR set to: 0
 14729                           ;My_ST7032.c: 84: ST7032_command(0x56, 1);
 14730  0124CC  0E01               	movlw	1
 14731  0124CE  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14732  0124D0  0E56               	movlw	86
 14733  0124D2  EC7F  F09F         	call	_ST7032_command
 14734                           
 14735                           ; BSR set to: 0
 14736                           ;My_ST7032.c: 85: ST7032_command(0x6C, 3);
 14737  0124D6  0E03               	movlw	3
 14738  0124D8  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14739  0124DA  0E6C               	movlw	108
 14740  0124DC  EC7F  F09F         	call	_ST7032_command
 14741                           
 14742                           ; BSR set to: 0
 14743                           ;My_ST7032.c: 86: ST7032_command(0x38, 1);
 14744  0124E0  D80E               	call	PL354	;call to abstracted procedure
 14745  0124E2  EC7F  F09F         	call	_ST7032_command
 14746                           
 14747                           ; BSR set to: 0
 14748                           ;My_ST7032.c: 87: ST7032_command(0x0C, 1);
 14749  0124E6  0E01               	movlw	1
 14750  0124E8  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14751  0124EA  0E0C               	movlw	12
 14752  0124EC  EC7F  F09F         	call	_ST7032_command
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;My_ST7032.c: 88: ST7032_command(0x06, 1);
 14756  0124F0  0E01               	movlw	1
 14757  0124F2  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14758  0124F4  0E06               	movlw	6
 14759  0124F6  EC7F  F09F         	call	_ST7032_command
 14760                           
 14761                           ; BSR set to: 0
 14762                           ;My_ST7032.c: 89: ST7032_clear();
 14763  0124FA  EFD0  F0A2         	goto	_ST7032_clear	;wreg free
 14764  0124FE                     __end_of_ST7032_init:
 14765                           	opt stack 0
 14766  0124FE                     PL354:
 14767                           	opt stack 14
 14768  0124FE  0E01               	movlw	1
 14769  012500  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14770  012502  0C38               	retlw	56
 14771  012504                     __end_ofPL354:
 14772                           	opt stack 0
 14773                           tblptru	equ	0xFF8
 14774                           tblptrh	equ	0xFF7
 14775                           tblptrl	equ	0xFF6
 14776                           tablat	equ	0xFF5
 14777                           prodh	equ	0xFF4
 14778                           prodl	equ	0xFF3
 14779                           intcon	equ	0xFF2
 14780                           intcon2	equ	0xFF1
 14781                           postinc0	equ	0xFEE
 14782                           wreg	equ	0xFE8
 14783                           indf1	equ	0xFE7
 14784                           postinc1	equ	0xFE6
 14785                           postdec1	equ	0xFE5
 14786                           fsr1h	equ	0xFE2
 14787                           fsr1l	equ	0xFE1
 14788                           indf2	equ	0xFDF
 14789                           postinc2	equ	0xFDE
 14790                           postdec2	equ	0xFDD
 14791                           plusw2	equ	0xFDB
 14792                           fsr2h	equ	0xFDA
 14793                           fsr2l	equ	0xFD9
 14794                           status	equ	0xFD8
 14795                           
 14796 ;; *************** function _ringbuf_init *****************
 14797 ;; Defined at:
 14798 ;;		line 5 in file "../My_library/My_ringbuf.c"
 14799 ;; Parameters:    Size  Location     Type
 14800 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 14801 ;;		 -> terminal_task@command(8), lcd_tx(8), usb_rx(8), usb_tx(8), 
 14802 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 14803 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), hardware_init@usbrx(100), hardware_init@usbtx(2000), 
 14804 ;;  bufsize         2    4[BANK0 ] unsigned int 
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;		None
 14807 ;; Return value:  Size  Location     Type
 14808 ;;		None               void
 14809 ;; Registers used:
 14810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14811 ;; Tracked objects:
 14812 ;;		On entry : F/0
 14813 ;;		On exit  : F/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14816 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14820 ;;Total ram usage:        6 bytes
 14821 ;; Hardware stack levels used:    1
 14822 ;; Hardware stack levels required when called:   11
 14823 ;; This function calls:
 14824 ;;		Nothing
 14825 ;; This function is called by:
 14826 ;;		_hardware_init
 14827 ;;		_ST7032_init
 14828 ;;		_terminal_task
 14829 ;; This function uses a non-reentrant model
 14830 ;;
 14831                           
 14832                           	psect	text59
 14833  01403C                     __ptext59:
 14834                           	opt stack 0
 14835  01403C                     _ringbuf_init:
 14836                           	opt stack 18
 14837                           
 14838                           ; BSR set to: 0
 14839                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;incstack = 0
 14843  01403C  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 14844  014040  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 14845  014044  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 14846  014048  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 14847                           
 14848                           ; BSR set to: 0
 14849                           ;My_ringbuf.c: 7: rb->size = bufsize;
 14850  01404C  EE20 F002          	lfsr	2,2
 14851  014050  D80E               	call	PL266	;call to abstracted procedure
 14852  014052  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 14853  014056  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;My_ringbuf.c: 8: rb->head = 0;
 14857  01405A  EE20 F004          	lfsr	2,4
 14858  01405E  D807               	call	PL266	;call to abstracted procedure
 14859  014060  6ADE               	clrf	postinc2,c
 14860  014062  6ADD               	clrf	postdec2,c
 14861                           
 14862                           ; BSR set to: 0
 14863                           ;My_ringbuf.c: 9: rb->tail = 0;
 14864  014064  EE20 F006          	lfsr	2,6
 14865  014068  D802               	call	PL266	;call to abstracted procedure
 14866                           
 14867                           ; BSR set to: 0
 14868  01406A  EF12  F094         	goto	PL358	;call to abstracted procedure
 14869  01406E                     __end_of_ringbuf_init:
 14870                           	opt stack 0
 14871  01406E                     PL266:
 14872                           	opt stack 18
 14873  01406E  5160               	movf	ringbuf_init@rb& (0+255),w,b
 14874  014070  26D9               	addwf	fsr2l,f,c
 14875  014072  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 14876  014074  22DA               	addwfc	fsr2h,f,c
 14877  014076  0012               	return	
 14878  014078                     __end_ofPL266:
 14879                           	opt stack 0
 14880                           tblptru	equ	0xFF8
 14881                           tblptrh	equ	0xFF7
 14882                           tblptrl	equ	0xFF6
 14883                           tablat	equ	0xFF5
 14884                           prodh	equ	0xFF4
 14885                           prodl	equ	0xFF3
 14886                           intcon	equ	0xFF2
 14887                           intcon2	equ	0xFF1
 14888                           postinc0	equ	0xFEE
 14889                           wreg	equ	0xFE8
 14890                           indf1	equ	0xFE7
 14891                           postinc1	equ	0xFE6
 14892                           postdec1	equ	0xFE5
 14893                           fsr1h	equ	0xFE2
 14894                           fsr1l	equ	0xFE1
 14895                           indf2	equ	0xFDF
 14896                           postinc2	equ	0xFDE
 14897                           postdec2	equ	0xFDD
 14898                           plusw2	equ	0xFDB
 14899                           fsr2h	equ	0xFDA
 14900                           fsr2l	equ	0xFD9
 14901                           status	equ	0xFD8
 14902                           
 14903 ;; *************** function _ST7032_clear *****************
 14904 ;; Defined at:
 14905 ;;		line 26 in file "../My_library/My_ST7032.c"
 14906 ;; Parameters:    Size  Location     Type
 14907 ;;		None
 14908 ;; Auto vars:     Size  Location     Type
 14909 ;;		None
 14910 ;; Return value:  Size  Location     Type
 14911 ;;		None               void
 14912 ;; Registers used:
 14913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14914 ;; Tracked objects:
 14915 ;;		On entry : E/1
 14916 ;;		On exit  : F/0
 14917 ;;		Unchanged: 0/0
 14918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14923 ;;Total ram usage:        0 bytes
 14924 ;; Hardware stack levels used:    1
 14925 ;; Hardware stack levels required when called:   14
 14926 ;; This function calls:
 14927 ;;		_ST7032_command
 14928 ;; This function is called by:
 14929 ;;		_sleep_task
 14930 ;;		_bootload
 14931 ;;		_display_LCD
 14932 ;;		_ST7032_init
 14933 ;; This function uses a non-reentrant model
 14934 ;;
 14935                           
 14936                           	psect	text60
 14937  0145A0                     __ptext60:
 14938                           	opt stack 0
 14939  0145A0                     _ST7032_clear:
 14940                           	opt stack 13
 14941                           
 14942                           ;My_ST7032.c: 27: ST7032_command(0x01, 2);
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;incstack = 0
 14946  0145A0  0E02               	movlw	2
 14947  0145A2  0100               	movlb	0	; () banked
 14948  0145A4  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14949  0145A6  0E01               	movlw	1
 14950  0145A8  EF7F  F09F         	goto	_ST7032_command
 14951  0145AC                     __end_of_ST7032_clear:
 14952                           	opt stack 0
 14953                           tblptru	equ	0xFF8
 14954                           tblptrh	equ	0xFF7
 14955                           tblptrl	equ	0xFF6
 14956                           tablat	equ	0xFF5
 14957                           prodh	equ	0xFF4
 14958                           prodl	equ	0xFF3
 14959                           intcon	equ	0xFF2
 14960                           intcon2	equ	0xFF1
 14961                           postinc0	equ	0xFEE
 14962                           wreg	equ	0xFE8
 14963                           indf1	equ	0xFE7
 14964                           postinc1	equ	0xFE6
 14965                           postdec1	equ	0xFE5
 14966                           fsr1h	equ	0xFE2
 14967                           fsr1l	equ	0xFE1
 14968                           indf2	equ	0xFDF
 14969                           postinc2	equ	0xFDE
 14970                           postdec2	equ	0xFDD
 14971                           plusw2	equ	0xFDB
 14972                           fsr2h	equ	0xFDA
 14973                           fsr2l	equ	0xFD9
 14974                           status	equ	0xFD8
 14975                           
 14976 ;; *************** function _ST7032_command *****************
 14977 ;; Defined at:
 14978 ;;		line 18 in file "../My_library/My_ST7032.c"
 14979 ;; Parameters:    Size  Location     Type
 14980 ;;  command         1    wreg     unsigned char 
 14981 ;;  wait            1   15[BANK0 ] unsigned char 
 14982 ;; Auto vars:     Size  Location     Type
 14983 ;;  command         1   16[BANK0 ] unsigned char 
 14984 ;; Return value:  Size  Location     Type
 14985 ;;		None               void
 14986 ;; Registers used:
 14987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14988 ;; Tracked objects:
 14989 ;;		On entry : F/0
 14990 ;;		On exit  : F/0
 14991 ;;		Unchanged: 0/0
 14992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14993 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14996 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14997 ;;Total ram usage:        2 bytes
 14998 ;; Hardware stack levels used:    1
 14999 ;; Hardware stack levels required when called:   13
 15000 ;; This function calls:
 15001 ;;		_ringbuf_put
 15002 ;; This function is called by:
 15003 ;;		_ST7032_clear
 15004 ;;		_ST7032_cursor
 15005 ;;		_ST7032_init
 15006 ;; This function uses a non-reentrant model
 15007 ;;
 15008                           
 15009                           	psect	text61
 15010  013EFE                     __ptext61:
 15011                           	opt stack 0
 15012  013EFE                     _ST7032_command:
 15013                           	opt stack 13
 15014                           
 15015                           ; BSR set to: 0
 15016                           ;incstack = 0
 15017                           ;ST7032_command@command stored from wreg
 15018  013EFE  6F70               	movwf	ST7032_command@command& (0+255),b
 15019                           
 15020                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 15021  013F00  0E82               	movlw	low _lcd_tx
 15022  013F02  0100               	movlb	0	; () banked
 15023  013F04  6F68               	movwf	ringbuf_put@rb& (0+255),b
 15024  013F06  0E01               	movlw	high _lcd_tx
 15025  013F08  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 15026  013F0A  0E7C               	movlw	124
 15027  013F0C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 15028  013F0E  ECC5  F093         	call	_ringbuf_put	;wreg free
 15029                           
 15030                           ;My_ST7032.c: 20: ringbuf_put(&lcd_tx, 0x80);
 15031  013F12  ECFA  F09F         	call	PL72	;call to abstracted procedure
 15032  013F16  0E80               	movlw	128
 15033  013F18  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 15034  013F1A  ECC5  F093         	call	_ringbuf_put	;wreg free
 15035                           
 15036                           ;My_ST7032.c: 21: ringbuf_put(&lcd_tx, command);
 15037  013F1E  ECFA  F09F         	call	PL72	;call to abstracted procedure
 15038  013F22  C070  F06A         	movff	ST7032_command@command,ringbuf_put@asciicode
 15039  013F26  ECC5  F093         	call	_ringbuf_put	;wreg free
 15040                           
 15041                           ;My_ST7032.c: 22: ringbuf_put(&lcd_tx, 0);
 15042  013F2A  ECFA  F09F         	call	PL72	;call to abstracted procedure
 15043  013F2E  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
 15044  013F30  ECC5  F093         	call	_ringbuf_put	;wreg free
 15045                           
 15046                           ;My_ST7032.c: 23: ringbuf_put(&lcd_tx, wait);
 15047  013F34  ECFA  F09F         	call	PL72	;call to abstracted procedure
 15048  013F38  C06F  F06A         	movff	ST7032_command@wait,ringbuf_put@asciicode
 15049  013F3C  EFC5  F093         	goto	_ringbuf_put	;wreg free
 15050  013F40                     __end_of_ST7032_command:
 15051                           	opt stack 0
 15052                           tblptru	equ	0xFF8
 15053                           tblptrh	equ	0xFF7
 15054                           tblptrl	equ	0xFF6
 15055                           tablat	equ	0xFF5
 15056                           prodh	equ	0xFF4
 15057                           prodl	equ	0xFF3
 15058                           intcon	equ	0xFF2
 15059                           intcon2	equ	0xFF1
 15060                           postinc0	equ	0xFEE
 15061                           wreg	equ	0xFE8
 15062                           indf1	equ	0xFE7
 15063                           postinc1	equ	0xFE6
 15064                           postdec1	equ	0xFE5
 15065                           fsr1h	equ	0xFE2
 15066                           fsr1l	equ	0xFE1
 15067                           indf2	equ	0xFDF
 15068                           postinc2	equ	0xFDE
 15069                           postdec2	equ	0xFDD
 15070                           plusw2	equ	0xFDB
 15071                           fsr2h	equ	0xFDA
 15072                           fsr2l	equ	0xFD9
 15073                           status	equ	0xFD8
 15074                           
 15075 ;; *************** function _RTCC_init *****************
 15076 ;; Defined at:
 15077 ;;		line 22 in file "../My_library/My_RTCC.c"
 15078 ;; Parameters:    Size  Location     Type
 15079 ;;		None
 15080 ;; Auto vars:     Size  Location     Type
 15081 ;;		None
 15082 ;; Return value:  Size  Location     Type
 15083 ;;		None               void
 15084 ;; Registers used:
 15085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15086 ;; Tracked objects:
 15087 ;;		On entry : F/0
 15088 ;;		On exit  : 2/2
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15095 ;;Total ram usage:        0 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; Hardware stack levels required when called:   15
 15098 ;; This function calls:
 15099 ;;		_RTCC_from_RTCC
 15100 ;;		_RTCC_from_epoch
 15101 ;; This function is called by:
 15102 ;;		_hardware_init
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           	psect	text62
 15107  013B3E                     __ptext62:
 15108                           	opt stack 0
 15109  013B3E                     _RTCC_init:
 15110                           	opt stack 14
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 15114                           
 15115                           ; BSR set to: 0
 15116                           ;incstack = 0
 15117  013B3E  010F               	movlb	15	; () banked
 15118  013B40  8B3F               	bsf	63,5,b	;volatile
 15119                           
 15120                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 15121  013B42  BB3F               	btfsc	63,5,b	;volatile
 15122  013B44  D005               	goto	l11358
 15123                           
 15124                           ; BSR set to: 15
 15125                           ;My_RTCC.c: 25: EECON2 = 0x55;
 15126  013B46  0E55               	movlw	85
 15127  013B48  6EA7               	movwf	4007,c	;volatile
 15128                           
 15129                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 15130  013B4A  0EAA               	movlw	170
 15131  013B4C  6EA7               	movwf	4007,c	;volatile
 15132                           
 15133                           ; BSR set to: 15
 15134                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 15135  013B4E  8B3F               	bsf	63,5,b	;volatile
 15136  013B50                     l11358:
 15137                           
 15138                           ; BSR set to: 15
 15139                           ;My_RTCC.c: 28: }
 15140                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 15141  013B50  8F3F               	bsf	63,7,b	;volatile
 15142                           
 15143                           ; BSR set to: 15
 15144                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 15145  013B52  953F               	bcf	63,2,b	;volatile
 15146                           
 15147                           ; BSR set to: 15
 15148                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 15149  013B54  833C               	bsf	60,1,b	;volatile
 15150                           
 15151                           ; BSR set to: 15
 15152                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 15153  013B56  853C               	bsf	60,2,b	;volatile
 15154                           
 15155                           ; BSR set to: 15
 15156                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 15157  013B58  6B3E               	clrf	62,b	;volatile
 15158                           
 15159                           ; BSR set to: 15
 15160                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 15161  013B5A  86CD               	bsf	4045,3,c	;volatile
 15162                           
 15163                           ; BSR set to: 15
 15164                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
 15165  013B5C  D811               	call	PL208	;call to abstracted procedure
 15166  013B5E  EC92  F0A2         	call	_RTCC_from_RTCC	;wreg free
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;My_RTCC.c: 38: if (now.DD == 0) {
 15170  013B62  0102               	movlb	2	; () banked
 15171  013B64  5197               	movf	(_now+8)& (0+255),w,b
 15172  013B66  A4D8               	btfss	status,2,c
 15173  013B68  0012               	return	
 15174                           
 15175                           ; BSR set to: 2
 15176                           ;My_RTCC.c: 39: now.epoch = 0;
 15177  013B6A  6B8F               	clrf	_now& (0+255),b
 15178  013B6C  6B90               	clrf	(_now+1)& (0+255),b
 15179  013B6E  6B91               	clrf	(_now+2)& (0+255),b
 15180  013B70  6B92               	clrf	(_now+3)& (0+255),b
 15181                           
 15182                           ; BSR set to: 2
 15183                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
 15184  013B72  0E8F               	movlw	low _now
 15185  013B74  0100               	movlb	0	; () banked
 15186  013B76  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 15187  013B78  0E02               	movlw	high _now
 15188  013B7A  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 15189  013B7C  EF86  F0A2         	goto	_RTCC_from_epoch	;wreg free
 15190  013B80                     __end_of_RTCC_init:
 15191                           	opt stack 0
 15192  013B80                     PL208:
 15193                           	opt stack 11
 15194  013B80  0E8F               	movlw	low _now
 15195  013B82  0100               	movlb	0	; () banked
 15196  013B84  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 15197  013B86  0E02               	movlw	high _now
 15198  013B88  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 15199  013B8A  0012               	return	
 15200  013B8C                     __end_ofPL208:
 15201                           	opt stack 0
 15202                           tblptru	equ	0xFF8
 15203                           tblptrh	equ	0xFF7
 15204                           tblptrl	equ	0xFF6
 15205                           tablat	equ	0xFF5
 15206                           prodh	equ	0xFF4
 15207                           prodl	equ	0xFF3
 15208                           intcon	equ	0xFF2
 15209                           intcon2	equ	0xFF1
 15210                           postinc0	equ	0xFEE
 15211                           wreg	equ	0xFE8
 15212                           indf1	equ	0xFE7
 15213                           postinc1	equ	0xFE6
 15214                           postdec1	equ	0xFE5
 15215                           fsr1h	equ	0xFE2
 15216                           fsr1l	equ	0xFE1
 15217                           indf2	equ	0xFDF
 15218                           postinc2	equ	0xFDE
 15219                           postdec2	equ	0xFDD
 15220                           plusw2	equ	0xFDB
 15221                           fsr2h	equ	0xFDA
 15222                           fsr2l	equ	0xFD9
 15223                           status	equ	0xFD8
 15224                           
 15225 ;; *************** function _RTCC_from_epoch *****************
 15226 ;; Defined at:
 15227 ;;		line 211 in file "../My_library/My_RTCC.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;  tm              2   47[BANK0 ] PTR struct .
 15230 ;;		 -> now(14), 
 15231 ;; Auto vars:     Size  Location     Type
 15232 ;;		None
 15233 ;; Return value:  Size  Location     Type
 15234 ;;		None               void
 15235 ;; Registers used:
 15236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15237 ;; Tracked objects:
 15238 ;;		On entry : F/0
 15239 ;;		On exit  : F/F
 15240 ;;		Unchanged: 0/0
 15241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15245 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15246 ;;Total ram usage:        2 bytes
 15247 ;; Hardware stack levels used:    1
 15248 ;; Hardware stack levels required when called:   14
 15249 ;; This function calls:
 15250 ;;		_caltime_to_RTCC
 15251 ;;		_epoch_to_caltime
 15252 ;; This function is called by:
 15253 ;;		_RTCC_init
 15254 ;;		_RTCC_adjust_time_inc
 15255 ;;		_RTCC_adjust_time_dec
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text63
 15260  01450C                     __ptext63:
 15261                           	opt stack 0
 15262  01450C                     _RTCC_from_epoch:
 15263                           	opt stack 12
 15264                           
 15265                           ; BSR set to: 0
 15266                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
 15267                           
 15268                           ;incstack = 0
 15269  01450C  C08F  F082         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 15270  014510  C090  F083         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 15271  014514  EC82  F08D         	call	_epoch_to_caltime	;wreg free
 15272                           
 15273                           ; BSR set to: 0
 15274                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
 15275  014518  C08F  F065         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 15276  01451C  C090  F066         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 15277  014520  EF77  F096         	goto	_caltime_to_RTCC	;wreg free
 15278  014524                     __end_of_RTCC_from_epoch:
 15279                           	opt stack 0
 15280                           tblptru	equ	0xFF8
 15281                           tblptrh	equ	0xFF7
 15282                           tblptrl	equ	0xFF6
 15283                           tablat	equ	0xFF5
 15284                           prodh	equ	0xFF4
 15285                           prodl	equ	0xFF3
 15286                           intcon	equ	0xFF2
 15287                           intcon2	equ	0xFF1
 15288                           postinc0	equ	0xFEE
 15289                           wreg	equ	0xFE8
 15290                           indf1	equ	0xFE7
 15291                           postinc1	equ	0xFE6
 15292                           postdec1	equ	0xFE5
 15293                           fsr1h	equ	0xFE2
 15294                           fsr1l	equ	0xFE1
 15295                           indf2	equ	0xFDF
 15296                           postinc2	equ	0xFDE
 15297                           postdec2	equ	0xFDD
 15298                           plusw2	equ	0xFDB
 15299                           fsr2h	equ	0xFDA
 15300                           fsr2l	equ	0xFD9
 15301                           status	equ	0xFD8
 15302                           
 15303 ;; *************** function _epoch_to_caltime *****************
 15304 ;; Defined at:
 15305 ;;		line 126 in file "../My_library/My_RTCC.c"
 15306 ;; Parameters:    Size  Location     Type
 15307 ;;  tm              2   34[BANK0 ] PTR struct .
 15308 ;;		 -> now(14), 
 15309 ;; Auto vars:     Size  Location     Type
 15310 ;;  num             4   43[BANK0 ] unsigned long 
 15311 ;;  day             2   39[BANK0 ] unsigned int 
 15312 ;;  day_since_ep    2    0        unsigned int 
 15313 ;;  month           1   42[BANK0 ] unsigned char 
 15314 ;;  year            1   41[BANK0 ] unsigned char 
 15315 ;; Return value:  Size  Location     Type
 15316 ;;		None               void
 15317 ;; Registers used:
 15318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15319 ;; Tracked objects:
 15320 ;;		On entry : F/0
 15321 ;;		On exit  : F/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15325 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15326 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15327 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15328 ;;Total ram usage:       13 bytes
 15329 ;; Hardware stack levels used:    1
 15330 ;; Hardware stack levels required when called:   13
 15331 ;; This function calls:
 15332 ;;		_get_quot_rem
 15333 ;;		_month_length
 15334 ;; This function is called by:
 15335 ;;		_RTCC_from_caltime
 15336 ;;		_RTCC_from_epoch
 15337 ;; This function uses a non-reentrant model
 15338 ;;
 15339                           
 15340                           	psect	text64
 15341  011B04                     __ptext64:
 15342                           	opt stack 0
 15343  011B04                     _epoch_to_caltime:
 15344                           	opt stack 12
 15345                           
 15346                           ; BSR set to: 0
 15347                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
 15348                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
 15349                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
 15350                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
 15351                           ;My_RTCC.c: 133: uint16_t day;
 15352                           ;My_RTCC.c: 134: uint8_t year = 0;
 15353                           
 15354                           ; BSR set to: 15
 15355                           ;incstack = 0
 15356  011B04  6B89               	clrf	epoch_to_caltime@year& (0+255),b
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;My_RTCC.c: 135: uint8_t month = 1;
 15360  011B06  0E01               	movlw	1
 15361  011B08  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;My_RTCC.c: 136: epoch_t num;
 15365                           ;My_RTCC.c: 138: num = tm->epoch;
 15366  011B0A  D875               	call	PL334	;call to abstracted procedure
 15367  011B0C  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 15368  011B10  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 15369  011B14  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 15370  011B18  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 15371                           
 15372                           ; BSR set to: 0
 15373                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
 15374  011B1C  D875               	call	PL360	;call to abstracted procedure
 15375  011B1E  EC97  F097         	call	_get_quot_rem
 15376  011B22  EE20 F004          	lfsr	2,4
 15377  011B26  D859               	call	PL116	;call to abstracted procedure
 15378  011B28  C079  FFDF         	movff	?_get_quot_rem,indf2
 15379                           
 15380                           ; BSR set to: 0
 15381                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
 15382  011B2C  D86D               	call	PL360	;call to abstracted procedure
 15383  011B2E  EC97  F097         	call	_get_quot_rem
 15384  011B32  EE20 F005          	lfsr	2,5
 15385  011B36  D851               	call	PL116	;call to abstracted procedure
 15386  011B38  C079  FFDF         	movff	?_get_quot_rem,indf2
 15387                           
 15388                           ; BSR set to: 0
 15389                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
 15390  011B3C  0E18               	movlw	24
 15391  011B3E  6F79               	movwf	get_quot_rem@div& (0+255),b
 15392  011B40  0E8B               	movlw	epoch_to_caltime@num& (0+255)
 15393  011B42  EC97  F097         	call	_get_quot_rem
 15394  011B46  EE20 F006          	lfsr	2,6
 15395  011B4A  D847               	call	PL116	;call to abstracted procedure
 15396  011B4C  C079  FFDF         	movff	?_get_quot_rem,indf2
 15397                           
 15398                           ; BSR set to: 0
 15399                           ;My_RTCC.c: 142: day = num;
 15400  011B50  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 15401  011B54  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;My_RTCC.c: 145: num += 6;
 15405                           
 15406                           ; BSR set to: 0
 15407  011B58  0E06               	movlw	6
 15408  011B5A  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 15409  011B5C  0E00               	movlw	0
 15410  011B5E  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 15411  011B60  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 15412  011B62  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
 15416  011B64  0E07               	movlw	7
 15417  011B66  6F79               	movwf	get_quot_rem@div& (0+255),b
 15418  011B68  0E8B               	movlw	epoch_to_caltime@num& (0+255)
 15419  011B6A  EC97  F097         	call	_get_quot_rem
 15420  011B6E  EE20 F007          	lfsr	2,7
 15421  011B72  D833               	call	PL116	;call to abstracted procedure
 15422  011B74  C079  FFDF         	movff	?_get_quot_rem,indf2
 15423                           
 15424                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
 15425  011B78  D015               	goto	l9942
 15426  011B7A                     l921:
 15427                           
 15428                           ; BSR set to: 0
 15429                           ;My_RTCC.c: 156: LATB2 = 1;
 15430  011B7A  848A               	bsf	3978,2,c	;volatile
 15431                           
 15432                           ; BSR set to: 0
 15433                           ;My_RTCC.c: 157: day = day - month_length(year, month);
 15434  011B7C  D841               	call	PL356	;call to abstracted procedure
 15435  011B7E  EC3E  F09A         	call	_month_length
 15436  011B82  5F87               	subwf	epoch_to_caltime@day& (0+255),f,b
 15437  011B84  0E00               	movlw	0
 15438  011B86  5B88               	subwfb	(epoch_to_caltime@day+1)& (0+255),f,b
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;My_RTCC.c: 158: if (month == 12) {
 15442  011B88  0E0C               	movlw	12
 15443  011B8A  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 15444  011B8C  E10A               	bnz	l9940
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;My_RTCC.c: 159: month = 1;
 15448  011B8E  0E01               	movlw	1
 15449  011B90  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 15450                           
 15451                           ; BSR set to: 0
 15452                           ;My_RTCC.c: 160: year++;
 15453  011B92  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;My_RTCC.c: 162: if (year >= 100) {
 15457  011B94  0E63               	movlw	99
 15458  011B96  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 15459  011B98  D005               	goto	l9942
 15460                           
 15461                           ; BSR set to: 0
 15462                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
 15463  011B9A  D82D               	call	PL334	;call to abstracted procedure
 15464  011B9C  D823               	call	PL192	;call to abstracted procedure
 15465                           
 15466                           ; BSR set to: 0
 15467                           ;My_RTCC.c: 164: year = 0;
 15468  011B9E  6B89               	clrf	epoch_to_caltime@year& (0+255),b
 15469  011BA0  D001               	goto	l9942
 15470  011BA2                     l9940:
 15471                           
 15472                           ; BSR set to: 0
 15473                           ;My_RTCC.c: 167: month++;
 15474  011BA2  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 15475  011BA4                     l9942:
 15476                           
 15477                           ; BSR set to: 0
 15478  011BA4  D82D               	call	PL356	;call to abstracted procedure
 15479  011BA6  EC3E  F09A         	call	_month_length
 15480  011BAA  6F84               	movwf	??_epoch_to_caltime& (0+255),b
 15481  011BAC  5184               	movf	??_epoch_to_caltime& (0+255),w,b
 15482  011BAE  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 15483  011BB0  0E00               	movlw	0
 15484  011BB2  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 15485  011BB4  E2E2               	bc	l921
 15486                           
 15487                           ; BSR set to: 0
 15488                           ;My_RTCC.c: 173: day++;
 15489  011BB6  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 15490  011BB8  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 15491                           
 15492                           ; BSR set to: 0
 15493                           ;My_RTCC.c: 175: tm->YY = year;
 15494  011BBA  EE20 F00A          	lfsr	2,10
 15495  011BBE  D80D               	call	PL116	;call to abstracted procedure
 15496  011BC0  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 15497                           
 15498                           ; BSR set to: 0
 15499                           ;My_RTCC.c: 176: tm->MM = month;
 15500  011BC4  EE20 F009          	lfsr	2,9
 15501  011BC8  D808               	call	PL116	;call to abstracted procedure
 15502  011BCA  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 15503                           
 15504                           ; BSR set to: 0
 15505                           ;My_RTCC.c: 177: tm->DD = day;
 15506  011BCE  EE20 F008          	lfsr	2,8
 15507  011BD2  D803               	call	PL116	;call to abstracted procedure
 15508  011BD4  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 15509                           
 15510                           ; BSR set to: 0
 15511  011BD8  0012               	return		;funcret
 15512  011BDA                     __end_of_epoch_to_caltime:
 15513                           	opt stack 0
 15514  011BDA                     PL116:
 15515                           	opt stack 12
 15516  011BDA  5182               	movf	epoch_to_caltime@tm& (0+255),w,b
 15517  011BDC  26D9               	addwf	fsr2l,f,c
 15518  011BDE  5183               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 15519  011BE0  22DA               	addwfc	fsr2h,f,c
 15520  011BE2  0012               	return	
 15521  011BE4                     __end_ofPL116:
 15522                           	opt stack 0
 15523  011BE4                     PL192:
 15524                           	opt stack 12
 15525  011BE4  0E80               	movlw	128
 15526  011BE6  5EDE               	subwf	postinc2,f,c
 15527  011BE8  0E13               	movlw	19
 15528  011BEA  5ADE               	subwfb	postinc2,f,c
 15529  011BEC  0E19               	movlw	25
 15530  011BEE  5ADE               	subwfb	postinc2,f,c
 15531  011BF0  0EBC               	movlw	188
 15532  011BF2  5ADE               	subwfb	postinc2,f,c
 15533  011BF4  0CBC               	retlw	188
 15534  011BF6                     __end_ofPL192:
 15535                           	opt stack 0
 15536  011BF6                     PL334:
 15537                           	opt stack 12
 15538  011BF6  C082  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 15539  011BFA  C083  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 15540  011BFE  0012               	return	
 15541  011C00                     __end_ofPL334:
 15542                           	opt stack 0
 15543  011C00                     PL356:
 15544                           	opt stack 12
 15545  011C00  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 15546  011C04  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 15547  011C06  0012               	return	
 15548  011C08                     __end_ofPL356:
 15549                           	opt stack 0
 15550  011C08                     PL360:
 15551                           	opt stack 12
 15552  011C08  0E3C               	movlw	60
 15553  011C0A  6F79               	movwf	get_quot_rem@div& (0+255),b
 15554  011C0C  0E8B               	movlw	epoch_to_caltime@num& (0+255)
 15555  011C0E  0012               	return	
 15556  011C10                     __end_ofPL360:
 15557                           	opt stack 0
 15558                           tblptru	equ	0xFF8
 15559                           tblptrh	equ	0xFF7
 15560                           tblptrl	equ	0xFF6
 15561                           tablat	equ	0xFF5
 15562                           prodh	equ	0xFF4
 15563                           prodl	equ	0xFF3
 15564                           intcon	equ	0xFF2
 15565                           intcon2	equ	0xFF1
 15566                           postinc0	equ	0xFEE
 15567                           wreg	equ	0xFE8
 15568                           indf1	equ	0xFE7
 15569                           postinc1	equ	0xFE6
 15570                           postdec1	equ	0xFE5
 15571                           fsr1h	equ	0xFE2
 15572                           fsr1l	equ	0xFE1
 15573                           indf2	equ	0xFDF
 15574                           postinc2	equ	0xFDE
 15575                           postdec2	equ	0xFDD
 15576                           plusw2	equ	0xFDB
 15577                           fsr2h	equ	0xFDA
 15578                           fsr2l	equ	0xFD9
 15579                           status	equ	0xFD8
 15580                           
 15581 ;; *************** function _get_quot_rem *****************
 15582 ;; Defined at:
 15583 ;;		line 81 in file "../My_library/My_RTCC.c"
 15584 ;; Parameters:    Size  Location     Type
 15585 ;;  quot            1    wreg     PTR unsigned long 
 15586 ;;		 -> epoch_to_caltime@num(4), 
 15587 ;;  div             1   25[BANK0 ] unsigned char 
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;  quot            1   33[BANK0 ] PTR unsigned long 
 15590 ;;		 -> epoch_to_caltime@num(4), 
 15591 ;;  num             4   29[BANK0 ] unsigned long 
 15592 ;; Return value:  Size  Location     Type
 15593 ;;                  4   25[BANK0 ] unsigned long 
 15594 ;; Registers used:
 15595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15596 ;; Tracked objects:
 15597 ;;		On entry : F/0
 15598 ;;		On exit  : F/0
 15599 ;;		Unchanged: 0/0
 15600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15602 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15604 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15605 ;;Total ram usage:        9 bytes
 15606 ;; Hardware stack levels used:    1
 15607 ;; Hardware stack levels required when called:   12
 15608 ;; This function calls:
 15609 ;;		___lldiv
 15610 ;;		___lmul
 15611 ;; This function is called by:
 15612 ;;		_epoch_to_caltime
 15613 ;; This function uses a non-reentrant model
 15614 ;;
 15615                           
 15616                           	psect	text65
 15617  012F2E                     __ptext65:
 15618                           	opt stack 0
 15619  012F2E                     _get_quot_rem:
 15620                           	opt stack 12
 15621                           
 15622                           ; BSR set to: 0
 15623                           ;incstack = 0
 15624                           ;get_quot_rem@quot stored from wreg
 15625  012F2E  6F81               	movwf	get_quot_rem@quot& (0+255),b
 15626                           
 15627                           ;My_RTCC.c: 84: epoch_t num = *quot;
 15628  012F30  0100               	movlb	0	; () banked
 15629  012F32  5181               	movf	get_quot_rem@quot& (0+255),w,b
 15630  012F34  6ED9               	movwf	fsr2l,c
 15631  012F36  6ADA               	clrf	fsr2h,c
 15632  012F38  CFDE F07D          	movff	postinc2,get_quot_rem@num
 15633  012F3C  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 15634  012F40  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 15635  012F44  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 15636                           
 15637                           ; BSR set to: 0
 15638                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
 15639  012F48  5179               	movf	get_quot_rem@div& (0+255),w,b
 15640  012F4A  D82C               	call	PL238	;call to abstracted procedure
 15641  012F4C  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 15642  012F50  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 15643  012F54  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 15644  012F58  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 15645  012F5C  EC31  F09B         	call	___lldiv	;wreg free
 15646  012F60  5181               	movf	get_quot_rem@quot& (0+255),w,b
 15647  012F62  6ED9               	movwf	fsr2l,c
 15648  012F64  6ADA               	clrf	fsr2h,c
 15649  012F66  D823               	call	PL252	;call to abstracted procedure
 15650  012F68  C063  FFDD         	movff	?___lldiv+3,postdec2
 15651  012F6C  52DD               	movf	postdec2,f,c
 15652  012F6E  52DD               	movf	postdec2,f,c
 15653  012F70  CFDE F06D          	movff	postinc2,___lmul@multiplier
 15654  012F74  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 15655  012F78  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 15656  012F7C  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 15657  012F80  5179               	movf	get_quot_rem@div& (0+255),w,b
 15658  012F82  EC3A  F08B         	call	PL324	;call to abstracted procedure
 15659  012F86  ECEC  F09D         	call	___lmul	;wreg free
 15660  012F8A  516D               	movf	?___lmul& (0+255),w,b
 15661  012F8C  5D7D               	subwf	get_quot_rem@num& (0+255),w,b
 15662  012F8E  6F79               	movwf	?_get_quot_rem& (0+255),b
 15663  012F90  516E               	movf	(?___lmul+1)& (0+255),w,b
 15664  012F92  597E               	subwfb	(get_quot_rem@num+1)& (0+255),w,b
 15665  012F94  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 15666  012F96  516F               	movf	(?___lmul+2)& (0+255),w,b
 15667  012F98  597F               	subwfb	(get_quot_rem@num+2)& (0+255),w,b
 15668  012F9A  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 15669  012F9C  5170               	movf	(?___lmul+3)& (0+255),w,b
 15670  012F9E  5980               	subwfb	(get_quot_rem@num+3)& (0+255),w,b
 15671  012FA0  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 15672                           
 15673                           ; BSR set to: 0
 15674  012FA2  0012               	return		;funcret
 15675  012FA4                     __end_of_get_quot_rem:
 15676                           	opt stack 0
 15677  012FA4                     PL238:
 15678                           	opt stack 13
 15679  012FA4  6F64               	movwf	___lldiv@divisor& (0+255),b
 15680  012FA6  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 15681  012FA8  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 15682  012FAA  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 15683  012FAC  0012               	return	
 15684  012FAE                     __end_ofPL238:
 15685                           	opt stack 0
 15686  012FAE                     PL252:
 15687                           	opt stack 17
 15688  012FAE  C060  FFDE         	movff	?___lldiv,postinc2
 15689  012FB2  C061  FFDE         	movff	?___lldiv+1,postinc2
 15690  012FB6  C062  FFDE         	movff	?___lldiv+2,postinc2
 15691  012FBA  0012               	return	
 15692  012FBC                     __end_ofPL252:
 15693                           	opt stack 0
 15694                           tblptru	equ	0xFF8
 15695                           tblptrh	equ	0xFF7
 15696                           tblptrl	equ	0xFF6
 15697                           tablat	equ	0xFF5
 15698                           prodh	equ	0xFF4
 15699                           prodl	equ	0xFF3
 15700                           intcon	equ	0xFF2
 15701                           intcon2	equ	0xFF1
 15702                           postinc0	equ	0xFEE
 15703                           wreg	equ	0xFE8
 15704                           indf1	equ	0xFE7
 15705                           postinc1	equ	0xFE6
 15706                           postdec1	equ	0xFE5
 15707                           fsr1h	equ	0xFE2
 15708                           fsr1l	equ	0xFE1
 15709                           indf2	equ	0xFDF
 15710                           postinc2	equ	0xFDE
 15711                           postdec2	equ	0xFDD
 15712                           plusw2	equ	0xFDB
 15713                           fsr2h	equ	0xFDA
 15714                           fsr2l	equ	0xFD9
 15715                           status	equ	0xFD8
 15716                           
 15717 ;; *************** function _caltime_to_RTCC *****************
 15718 ;; Defined at:
 15719 ;;		line 106 in file "../My_library/My_RTCC.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;  tm              2    5[BANK0 ] PTR struct .
 15722 ;;		 -> now(14), 
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;		None
 15725 ;; Return value:  Size  Location     Type
 15726 ;;		None               void
 15727 ;; Registers used:
 15728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15729 ;; Tracked objects:
 15730 ;;		On entry : F/0
 15731 ;;		On exit  : F/F
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15738 ;;Total ram usage:        2 bytes
 15739 ;; Hardware stack levels used:    1
 15740 ;; Hardware stack levels required when called:   13
 15741 ;; This function calls:
 15742 ;;		_d_to_x
 15743 ;; This function is called by:
 15744 ;;		_RTCC_from_caltime
 15745 ;;		_RTCC_from_epoch
 15746 ;; This function uses a non-reentrant model
 15747 ;;
 15748                           
 15749                           	psect	text66
 15750  012CEE                     __ptext66:
 15751                           	opt stack 0
 15752  012CEE                     _caltime_to_RTCC:
 15753                           	opt stack 12
 15754  012CEE                     l908:
 15755  012CEE  010F               	movlb	15	; () banked
 15756  012CF0  B93F               	btfsc	63,4,b	;volatile
 15757  012CF2  D7FD               	goto	l908
 15758                           
 15759                           ; BSR set to: 15
 15760                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
 15761                           
 15762                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
 15763                           
 15764                           ; BSR set to: 15
 15765                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
 15766  012CF4  EC65  F098         	call	PL280	;call to abstracted procedure
 15767  012CF8  D83C               	call	PL70	;call to abstracted procedure
 15768  012CFA  ECAA  F0A2         	call	_d_to_x
 15769  012CFE  010F               	movlb	15	; () banked
 15770  012D00  6F3A               	movwf	58,b	;volatile
 15771                           
 15772                           ; BSR set to: 15
 15773                           ;My_RTCC.c: 111: RTCVALH = 0x00;
 15774  012D02  6B3B               	clrf	59,b	;volatile
 15775                           
 15776                           ; BSR set to: 15
 15777                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
 15778  012D04  913F               	bcf	63,0,b	;volatile
 15779                           
 15780                           ; BSR set to: 15
 15781                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
 15782  012D06  833F               	bsf	63,1,b	;volatile
 15783                           
 15784                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
 15785  012D08  0100               	movlb	0	; () banked
 15786  012D0A  EE20 F008          	lfsr	2,8
 15787  012D0E  D831               	call	PL70	;call to abstracted procedure
 15788  012D10  ECAA  F0A2         	call	_d_to_x
 15789  012D14  010F               	movlb	15	; () banked
 15790  012D16  6F3A               	movwf	58,b	;volatile
 15791                           
 15792                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
 15793  012D18  0100               	movlb	0	; () banked
 15794  012D1A  EE20 F009          	lfsr	2,9
 15795  012D1E  D829               	call	PL70	;call to abstracted procedure
 15796  012D20  ECAA  F0A2         	call	_d_to_x
 15797  012D24  010F               	movlb	15	; () banked
 15798  012D26  6F3B               	movwf	59,b	;volatile
 15799                           
 15800                           ; BSR set to: 15
 15801                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
 15802  012D28  813F               	bsf	63,0,b	;volatile
 15803                           
 15804                           ; BSR set to: 15
 15805                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
 15806  012D2A  933F               	bcf	63,1,b	;volatile
 15807                           
 15808                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
 15809  012D2C  0100               	movlb	0	; () banked
 15810  012D2E  EE20 F006          	lfsr	2,6
 15811  012D32  D81F               	call	PL70	;call to abstracted procedure
 15812  012D34  ECAA  F0A2         	call	_d_to_x
 15813  012D38  010F               	movlb	15	; () banked
 15814  012D3A  6F3A               	movwf	58,b	;volatile
 15815                           
 15816                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
 15817  012D3C  0100               	movlb	0	; () banked
 15818  012D3E  EE20 F007          	lfsr	2,7
 15819  012D42  D817               	call	PL70	;call to abstracted procedure
 15820  012D44  ECAA  F0A2         	call	_d_to_x
 15821  012D48  010F               	movlb	15	; () banked
 15822  012D4A  6F3B               	movwf	59,b	;volatile
 15823                           
 15824                           ; BSR set to: 15
 15825                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
 15826  012D4C  913F               	bcf	63,0,b	;volatile
 15827                           
 15828                           ; BSR set to: 15
 15829                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
 15830  012D4E  933F               	bcf	63,1,b	;volatile
 15831                           
 15832                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
 15833  012D50  0100               	movlb	0	; () banked
 15834  012D52  EE20 F004          	lfsr	2,4
 15835  012D56  D80D               	call	PL70	;call to abstracted procedure
 15836  012D58  ECAA  F0A2         	call	_d_to_x
 15837  012D5C  010F               	movlb	15	; () banked
 15838  012D5E  6F3A               	movwf	58,b	;volatile
 15839                           
 15840                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
 15841  012D60  0100               	movlb	0	; () banked
 15842  012D62  EE20 F005          	lfsr	2,5
 15843  012D66  D805               	call	PL70	;call to abstracted procedure
 15844  012D68  ECAA  F0A2         	call	_d_to_x
 15845  012D6C  010F               	movlb	15	; () banked
 15846  012D6E  6F3B               	movwf	59,b	;volatile
 15847                           
 15848                           ; BSR set to: 15
 15849  012D70  0012               	return		;funcret
 15850  012D72                     __end_of_caltime_to_RTCC:
 15851                           	opt stack 0
 15852  012D72                     PL70:
 15853                           	opt stack 12
 15854  012D72  5165               	movf	caltime_to_RTCC@tm& (0+255),w,b
 15855  012D74  26D9               	addwf	fsr2l,f,c
 15856  012D76  5166               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 15857  012D78  22DA               	addwfc	fsr2h,f,c
 15858  012D7A  50DF               	movf	indf2,w,c
 15859  012D7C  0012               	return	
 15860  012D7E                     __end_ofPL70:
 15861                           	opt stack 0
 15862                           tblptru	equ	0xFF8
 15863                           tblptrh	equ	0xFF7
 15864                           tblptrl	equ	0xFF6
 15865                           tablat	equ	0xFF5
 15866                           prodh	equ	0xFF4
 15867                           prodl	equ	0xFF3
 15868                           intcon	equ	0xFF2
 15869                           intcon2	equ	0xFF1
 15870                           postinc0	equ	0xFEE
 15871                           wreg	equ	0xFE8
 15872                           indf1	equ	0xFE7
 15873                           postinc1	equ	0xFE6
 15874                           postdec1	equ	0xFE5
 15875                           fsr1h	equ	0xFE2
 15876                           fsr1l	equ	0xFE1
 15877                           indf2	equ	0xFDF
 15878                           postinc2	equ	0xFDE
 15879                           postdec2	equ	0xFDD
 15880                           plusw2	equ	0xFDB
 15881                           fsr2h	equ	0xFDA
 15882                           fsr2l	equ	0xFD9
 15883                           status	equ	0xFD8
 15884                           
 15885 ;; *************** function _d_to_x *****************
 15886 ;; Defined at:
 15887 ;;		line 46 in file "../My_library/My_RTCC.c"
 15888 ;; Parameters:    Size  Location     Type
 15889 ;;  dec             1    wreg     unsigned char 
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;  dec             1    4[BANK0 ] unsigned char 
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      unsigned char 
 15894 ;; Registers used:
 15895 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15896 ;; Tracked objects:
 15897 ;;		On entry : F/0
 15898 ;;		On exit  : F/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15904 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15905 ;;Total ram usage:        1 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:   12
 15908 ;; This function calls:
 15909 ;;		___lbdiv
 15910 ;; This function is called by:
 15911 ;;		_caltime_to_RTCC
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           	psect	text67
 15916  014554                     __ptext67:
 15917                           	opt stack 0
 15918  014554                     _d_to_x:
 15919                           	opt stack 12
 15920                           
 15921                           ; BSR set to: 15
 15922                           ;incstack = 0
 15923                           ;d_to_x@dec stored from wreg
 15924  014554  6F64               	movwf	d_to_x@dec& (0+255),b
 15925                           
 15926                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
 15927  014556  0E0A               	movlw	10
 15928  014558  0100               	movlb	0	; () banked
 15929  01455A  6F60               	movwf	___lbdiv@divisor& (0+255),b
 15930  01455C  5164               	movf	d_to_x@dec& (0+255),w,b
 15931  01455E  EC3C  F0A0         	call	___lbdiv
 15932  014562  0D06               	mullw	6
 15933  014564  50F3               	movf	prodl,w,c
 15934  014566  2564               	addwf	d_to_x@dec& (0+255),w,b
 15935                           
 15936                           ; BSR set to: 0
 15937  014568  0012               	return		;funcret
 15938  01456A                     __end_of_d_to_x:
 15939                           	opt stack 0
 15940                           tblptru	equ	0xFF8
 15941                           tblptrh	equ	0xFF7
 15942                           tblptrl	equ	0xFF6
 15943                           tablat	equ	0xFF5
 15944                           prodh	equ	0xFF4
 15945                           prodl	equ	0xFF3
 15946                           intcon	equ	0xFF2
 15947                           intcon2	equ	0xFF1
 15948                           postinc0	equ	0xFEE
 15949                           wreg	equ	0xFE8
 15950                           indf1	equ	0xFE7
 15951                           postinc1	equ	0xFE6
 15952                           postdec1	equ	0xFE5
 15953                           fsr1h	equ	0xFE2
 15954                           fsr1l	equ	0xFE1
 15955                           indf2	equ	0xFDF
 15956                           postinc2	equ	0xFDE
 15957                           postdec2	equ	0xFDD
 15958                           plusw2	equ	0xFDB
 15959                           fsr2h	equ	0xFDA
 15960                           fsr2l	equ	0xFD9
 15961                           status	equ	0xFD8
 15962                           
 15963 ;; *************** function ___lbdiv *****************
 15964 ;; Defined at:
 15965 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbdiv.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;  dividend        1    wreg     unsigned char 
 15968 ;;  divisor         1    0[BANK0 ] unsigned char 
 15969 ;; Auto vars:     Size  Location     Type
 15970 ;;  dividend        1    1[BANK0 ] unsigned char 
 15971 ;;  quotient        1    3[BANK0 ] unsigned char 
 15972 ;;  counter         1    2[BANK0 ] unsigned char 
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  1    wreg      unsigned char 
 15975 ;; Registers used:
 15976 ;;		wreg, status,2, status,0
 15977 ;; Tracked objects:
 15978 ;;		On entry : F/0
 15979 ;;		On exit  : F/0
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15982 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15983 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15985 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15986 ;;Total ram usage:        4 bytes
 15987 ;; Hardware stack levels used:    1
 15988 ;; Hardware stack levels required when called:   11
 15989 ;; This function calls:
 15990 ;;		Nothing
 15991 ;; This function is called by:
 15992 ;;		_d_to_x
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996                           	psect	text68
 15997  014078                     __ptext68:
 15998                           	opt stack 0
 15999  014078                     ___lbdiv:
 16000                           	opt stack 12
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;incstack = 0
 16004                           ;___lbdiv@dividend stored from wreg
 16005  014078  6F61               	movwf	___lbdiv@dividend& (0+255),b
 16006  01407A  0100               	movlb	0	; () banked
 16007  01407C  6B63               	clrf	___lbdiv@quotient& (0+255),b
 16008                           
 16009                           ; BSR set to: 0
 16010  01407E  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16011  014080  E014               	bz	l9600
 16012                           
 16013                           ; BSR set to: 0
 16014  014082  0E01               	movlw	1
 16015  014084  6F62               	movwf	___lbdiv@counter& (0+255),b
 16016  014086  D003               	goto	l9588
 16017  014088                     l9584:
 16018                           
 16019                           ; BSR set to: 0
 16020  014088  90D8               	bcf	status,0,c
 16021  01408A  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 16022                           
 16023                           ; BSR set to: 0
 16024  01408C  2B62               	incf	___lbdiv@counter& (0+255),f,b
 16025  01408E                     l9588:
 16026                           
 16027                           ; BSR set to: 0
 16028  01408E  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 16029  014090  D7FB               	goto	l9584
 16030  014092                     l9590:
 16031                           
 16032                           ; BSR set to: 0
 16033  014092  90D8               	bcf	status,0,c
 16034  014094  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 16035  014096  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16036  014098  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 16037  01409A  E303               	bnc	l9596
 16038                           
 16039                           ; BSR set to: 0
 16040  01409C  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16041  01409E  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 16042                           
 16043                           ; BSR set to: 0
 16044  0140A0  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 16045  0140A2                     l9596:
 16046                           
 16047                           ; BSR set to: 0
 16048  0140A2  90D8               	bcf	status,0,c
 16049  0140A4  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 16050                           
 16051                           ; BSR set to: 0
 16052  0140A6  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 16053  0140A8  D7F4               	goto	l9590
 16054  0140AA                     l9600:
 16055                           
 16056                           ; BSR set to: 0
 16057  0140AA  5163               	movf	___lbdiv@quotient& (0+255),w,b
 16058                           
 16059                           ; BSR set to: 0
 16060  0140AC  0012               	return		;funcret
 16061  0140AE                     __end_of___lbdiv:
 16062                           	opt stack 0
 16063                           tblptru	equ	0xFF8
 16064                           tblptrh	equ	0xFF7
 16065                           tblptrl	equ	0xFF6
 16066                           tablat	equ	0xFF5
 16067                           prodh	equ	0xFF4
 16068                           prodl	equ	0xFF3
 16069                           intcon	equ	0xFF2
 16070                           intcon2	equ	0xFF1
 16071                           postinc0	equ	0xFEE
 16072                           wreg	equ	0xFE8
 16073                           indf1	equ	0xFE7
 16074                           postinc1	equ	0xFE6
 16075                           postdec1	equ	0xFE5
 16076                           fsr1h	equ	0xFE2
 16077                           fsr1l	equ	0xFE1
 16078                           indf2	equ	0xFDF
 16079                           postinc2	equ	0xFDE
 16080                           postdec2	equ	0xFDD
 16081                           plusw2	equ	0xFDB
 16082                           fsr2h	equ	0xFDA
 16083                           fsr2l	equ	0xFD9
 16084                           status	equ	0xFD8
 16085                           
 16086 ;; *************** function _CTMU_init *****************
 16087 ;; Defined at:
 16088 ;;		line 169 in file "../My_library/My_PIC.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;		None
 16091 ;; Auto vars:     Size  Location     Type
 16092 ;;		None
 16093 ;; Return value:  Size  Location     Type
 16094 ;;		None               void
 16095 ;; Registers used:
 16096 ;;		wreg, status,2
 16097 ;; Tracked objects:
 16098 ;;		On entry : 0/2
 16099 ;;		On exit  : 0/0
 16100 ;;		Unchanged: 0/0
 16101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16106 ;;Total ram usage:        0 bytes
 16107 ;; Hardware stack levels used:    1
 16108 ;; Hardware stack levels required when called:   11
 16109 ;; This function calls:
 16110 ;;		Nothing
 16111 ;; This function is called by:
 16112 ;;		_hardware_init
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           	psect	text69
 16117  01437A                     __ptext69:
 16118                           	opt stack 0
 16119  01437A                     _CTMU_init:
 16120                           	opt stack 18
 16121                           
 16122                           ;My_PIC.c: 170: CTMUCONH = 0x00;
 16123                           
 16124                           ; BSR set to: 0
 16125                           ;incstack = 0
 16126  01437A  6AB3               	clrf	4019,c	;volatile
 16127                           
 16128                           ;My_PIC.c: 171: CTMUCONL = 0x90;
 16129  01437C  0E90               	movlw	144
 16130  01437E  6EB2               	movwf	4018,c	;volatile
 16131                           
 16132                           ;My_PIC.c: 172: CTMUICON = 0x01;
 16133  014380  0E01               	movlw	1
 16134  014382  6EB1               	movwf	4017,c	;volatile
 16135                           
 16136                           ;My_PIC.c: 174: ADCON1bits.ADFM = 1;
 16137  014384  8EC1               	bsf	4033,7,c	;volatile
 16138                           
 16139                           ;My_PIC.c: 175: ADCON1bits.ADCAL = 0;
 16140  014386  9CC1               	bcf	4033,6,c	;volatile
 16141                           
 16142                           ;My_PIC.c: 176: ADCON1bits.ACQT = 1;
 16143  014388  50C1               	movf	4033,w,c	;volatile
 16144  01438A  0BC7               	andlw	-57
 16145  01438C  0908               	iorlw	8
 16146  01438E  6EC1               	movwf	4033,c	;volatile
 16147                           
 16148                           ;My_PIC.c: 177: ADCON1bits.ADCS = 6;
 16149  014390  EC2C  F0A2         	call	PL308	;call to abstracted procedure
 16150                           
 16151                           ;My_PIC.c: 179: ADCON0bits.VCFG0 = 0;
 16152  014394  9CC2               	bcf	4034,6,c	;volatile
 16153                           
 16154                           ;My_PIC.c: 180: ADCON0bits.VCFG1 = 0;
 16155  014396  9EC2               	bcf	4034,7,c	;volatile
 16156                           
 16157                           ;My_PIC.c: 181: ADCON0bits.ADON = 1;
 16158  014398  80C2               	bsf	4034,0,c	;volatile
 16159  01439A  0012               	return		;funcret
 16160  01439C                     __end_of_CTMU_init:
 16161                           	opt stack 0
 16162                           tblptru	equ	0xFF8
 16163                           tblptrh	equ	0xFF7
 16164                           tblptrl	equ	0xFF6
 16165                           tablat	equ	0xFF5
 16166                           prodh	equ	0xFF4
 16167                           prodl	equ	0xFF3
 16168                           intcon	equ	0xFF2
 16169                           intcon2	equ	0xFF1
 16170                           postinc0	equ	0xFEE
 16171                           wreg	equ	0xFE8
 16172                           indf1	equ	0xFE7
 16173                           postinc1	equ	0xFE6
 16174                           postdec1	equ	0xFE5
 16175                           fsr1h	equ	0xFE2
 16176                           fsr1l	equ	0xFE1
 16177                           indf2	equ	0xFDF
 16178                           postinc2	equ	0xFDE
 16179                           postdec2	equ	0xFDD
 16180                           plusw2	equ	0xFDB
 16181                           fsr2h	equ	0xFDA
 16182                           fsr2l	equ	0xFD9
 16183                           status	equ	0xFD8
 16184                           
 16185 ;; *************** function _ADC_init *****************
 16186 ;; Defined at:
 16187 ;;		line 133 in file "../My_library/My_PIC.c"
 16188 ;; Parameters:    Size  Location     Type
 16189 ;;  p_ref           1    wreg     unsigned char 
 16190 ;; Auto vars:     Size  Location     Type
 16191 ;;  p_ref           1    0[BANK0 ] unsigned char 
 16192 ;; Return value:  Size  Location     Type
 16193 ;;		None               void
 16194 ;; Registers used:
 16195 ;;		wreg, status,2
 16196 ;; Tracked objects:
 16197 ;;		On entry : 2/2
 16198 ;;		On exit  : 0/0
 16199 ;;		Unchanged: 0/0
 16200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16205 ;;Total ram usage:        1 bytes
 16206 ;; Hardware stack levels used:    1
 16207 ;; Hardware stack levels required when called:   11
 16208 ;; This function calls:
 16209 ;;		Nothing
 16210 ;; This function is called by:
 16211 ;;		_hardware_init
 16212 ;; This function uses a non-reentrant model
 16213 ;;
 16214                           
 16215                           	psect	text70
 16216  014442                     __ptext70:
 16217                           	opt stack 0
 16218  014442                     _ADC_init:
 16219                           	opt stack 18
 16220                           
 16221                           ;incstack = 0
 16222                           ;ADC_init@p_ref stored from wreg
 16223  014442  0100               	movlb	0	; () banked
 16224  014444  6F60               	movwf	ADC_init@p_ref& (0+255),b
 16225                           
 16226                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
 16227  014446  9EC2               	bcf	4034,7,c	;volatile
 16228                           
 16229                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
 16230  014448  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 16231  01444A  D002               	bra	u12325
 16232  01444C  9CC2               	bcf	4034,6,c	;volatile
 16233  01444E  D001               	bra	u12326
 16234  014450                     u12325:
 16235  014450  8CC2               	bsf	4034,6,c	;volatile
 16236  014452                     u12326:
 16237                           
 16238                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
 16239  014452  8EC1               	bsf	4033,7,c	;volatile
 16240                           
 16241                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
 16242  014454  9CC1               	bcf	4033,6,c	;volatile
 16243                           
 16244                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
 16245  014456  D000               	goto	PL308	;call to abstracted procedure
 16246  014458                     __end_of_ADC_init:
 16247                           	opt stack 0
 16248  014458                     PL308:
 16249                           	opt stack 18
 16250  014458  50C1               	movf	4033,w,c	;volatile
 16251  01445A  0BF8               	andlw	-8
 16252  01445C  0906               	iorlw	6
 16253  01445E  6EC1               	movwf	4033,c	;volatile
 16254  014460  0012               	return	
 16255  014462                     __end_ofPL308:
 16256                           	opt stack 0
 16257                           tblptru	equ	0xFF8
 16258                           tblptrh	equ	0xFF7
 16259                           tblptrl	equ	0xFF6
 16260                           tablat	equ	0xFF5
 16261                           prodh	equ	0xFF4
 16262                           prodl	equ	0xFF3
 16263                           intcon	equ	0xFF2
 16264                           intcon2	equ	0xFF1
 16265                           postinc0	equ	0xFEE
 16266                           wreg	equ	0xFE8
 16267                           indf1	equ	0xFE7
 16268                           postinc1	equ	0xFE6
 16269                           postdec1	equ	0xFE5
 16270                           fsr1h	equ	0xFE2
 16271                           fsr1l	equ	0xFE1
 16272                           indf2	equ	0xFDF
 16273                           postinc2	equ	0xFDE
 16274                           postdec2	equ	0xFDD
 16275                           plusw2	equ	0xFDB
 16276                           fsr2h	equ	0xFDA
 16277                           fsr2l	equ	0xFD9
 16278                           status	equ	0xFD8
 16279                           
 16280 ;; *************** function _ctmu_task *****************
 16281 ;; Defined at:
 16282 ;;		line 29 in file "ctmu.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;		None
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;		None
 16287 ;; Return value:  Size  Location     Type
 16288 ;;		None               void
 16289 ;; Registers used:
 16290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16291 ;; Tracked objects:
 16292 ;;		On entry : 0/0
 16293 ;;		On exit  : E/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16300 ;;Total ram usage:        0 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; Hardware stack levels required when called:   14
 16303 ;; This function calls:
 16304 ;;		_ctmu_sampling
 16305 ;; This function is called by:
 16306 ;;		_main
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310                           	psect	text71
 16311  014592                     __ptext71:
 16312                           	opt stack 0
 16313  014592                     _ctmu_task:
 16314                           	opt stack 16
 16315                           
 16316                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 16317                           
 16318                           ;incstack = 0
 16319  014592  0101               	movlb	1	; () banked
 16320  014594  512D               	movf	_ctmu_sampling_flag& (0+255),w,b
 16321  014596  B4D8               	btfsc	status,2,c
 16322  014598  0012               	return	
 16323                           
 16324                           ; BSR set to: 1
 16325                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 16326  01459A  6B2D               	clrf	_ctmu_sampling_flag& (0+255),b
 16327                           
 16328                           ; BSR set to: 1
 16329                           ;ctmu.c: 32: ctmu_sampling();
 16330  01459C  EF75  F093         	goto	_ctmu_sampling	;wreg free
 16331  0145A0                     __end_of_ctmu_task:
 16332                           	opt stack 0
 16333                           tblptru	equ	0xFF8
 16334                           tblptrh	equ	0xFF7
 16335                           tblptrl	equ	0xFF6
 16336                           tablat	equ	0xFF5
 16337                           prodh	equ	0xFF4
 16338                           prodl	equ	0xFF3
 16339                           intcon	equ	0xFF2
 16340                           intcon2	equ	0xFF1
 16341                           postinc0	equ	0xFEE
 16342                           wreg	equ	0xFE8
 16343                           indf1	equ	0xFE7
 16344                           postinc1	equ	0xFE6
 16345                           postdec1	equ	0xFE5
 16346                           fsr1h	equ	0xFE2
 16347                           fsr1l	equ	0xFE1
 16348                           indf2	equ	0xFDF
 16349                           postinc2	equ	0xFDE
 16350                           postdec2	equ	0xFDD
 16351                           plusw2	equ	0xFDB
 16352                           fsr2h	equ	0xFDA
 16353                           fsr2l	equ	0xFD9
 16354                           status	equ	0xFD8
 16355                           
 16356 ;; *************** function _ctmu_sampling *****************
 16357 ;; Defined at:
 16358 ;;		line 22 in file "ctmu.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;		None
 16361 ;; Auto vars:     Size  Location     Type
 16362 ;;		None
 16363 ;; Return value:  Size  Location     Type
 16364 ;;		None               void
 16365 ;; Registers used:
 16366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16367 ;; Tracked objects:
 16368 ;;		On entry : F/1
 16369 ;;		On exit  : F/0
 16370 ;;		Unchanged: 0/0
 16371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16376 ;;Total ram usage:        0 bytes
 16377 ;; Hardware stack levels used:    1
 16378 ;; Hardware stack levels required when called:   13
 16379 ;; This function calls:
 16380 ;;		_CTMU_read
 16381 ;;		___lwdiv
 16382 ;;		_button_timer_interrupt
 16383 ;; This function is called by:
 16384 ;;		_ctmu_task
 16385 ;; This function uses a non-reentrant model
 16386 ;;
 16387                           
 16388                           	psect	text72
 16389  0126EA                     __ptext72:
 16390                           	opt stack 0
 16391  0126EA                     _ctmu_sampling:
 16392                           	opt stack 16
 16393                           
 16394                           ; BSR set to: 1
 16395                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 16396                           
 16397                           ;incstack = 0
 16398  0126EA  0E3D               	movlw	low _port
 16399  0126EC  0100               	movlb	0	; () banked
 16400  0126EE  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 16401  0126F0  0E01               	movlw	high _port
 16402  0126F2  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16403  0126F4  0E00               	movlw	0
 16404  0126F6  ECBF  F096         	call	_CTMU_read
 16405  0126FA  D842               	call	PL216	;call to abstracted procedure
 16406  0126FC  C141  F07E         	movff	_port+4,___lwdiv@divisor
 16407  012700  C142  F07F         	movff	_port+5,___lwdiv@divisor+1
 16408  012704  ECA6  F09E         	call	___lwdiv	;wreg free
 16409  012708  D834               	call	PL104	;call to abstracted procedure
 16410  01270A  ECA8  F088         	call	_button_timer_interrupt	;wreg free
 16411                           
 16412                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 16413  01270E  0E54               	movlw	low (_port+23)
 16414  012710  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 16415  012712  0E01               	movlw	high (_port+23)
 16416  012714  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16417  012716  0E01               	movlw	1
 16418  012718  ECBF  F096         	call	_CTMU_read
 16419  01271C  D831               	call	PL216	;call to abstracted procedure
 16420  01271E  C158  F07E         	movff	_port+27,___lwdiv@divisor
 16421  012722  C159  F07F         	movff	_port+28,___lwdiv@divisor+1
 16422  012726  ECA6  F09E         	call	___lwdiv	;wreg free
 16423  01272A  D823               	call	PL104	;call to abstracted procedure
 16424  01272C  ECA8  F088         	call	_button_timer_interrupt	;wreg free
 16425                           
 16426                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 16427  012730  0E6B               	movlw	low (_port+46)
 16428  012732  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 16429  012734  0E01               	movlw	high (_port+46)
 16430  012736  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16431  012738  0E02               	movlw	2
 16432  01273A  ECBF  F096         	call	_CTMU_read
 16433  01273E  D820               	call	PL216	;call to abstracted procedure
 16434  012740  C16F  F07E         	movff	_port+50,___lwdiv@divisor
 16435  012744  C170  F07F         	movff	_port+51,___lwdiv@divisor+1
 16436  012748  ECA6  F09E         	call	___lwdiv	;wreg free
 16437  01274C  D812               	call	PL104	;call to abstracted procedure
 16438  01274E  ECA8  F088         	call	_button_timer_interrupt	;wreg free
 16439                           
 16440                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 16441  012752  0E25               	movlw	low _ctmu_m
 16442  012754  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 16443  012756  6B84               	clrf	(button_timer_interrupt@bt+1)& (0+255),b
 16444  012758  0E03               	movlw	3
 16445  01275A  ECBF  F096         	call	_CTMU_read
 16446  01275E  D810               	call	PL216	;call to abstracted procedure
 16447  012760  C11B  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 16448  012764  C11C  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 16449  012768  ECA6  F09E         	call	___lwdiv	;wreg free
 16450  01276C  D802               	call	PL104	;call to abstracted procedure
 16451  01276E  EFA8  F088         	goto	_button_timer_interrupt	;wreg free
 16452  012772                     __end_of_ctmu_sampling:
 16453                           	opt stack 0
 16454  012772                     PL104:
 16455                           	opt stack 16
 16456  012772  517C               	movf	?___lwdiv& (0+255),w,b
 16457  012774  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16458  012776  0E01               	movlw	1
 16459  012778  A4D8               	btfss	status,2,c
 16460  01277A  0E00               	movlw	0
 16461  01277C  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16462  01277E  0012               	return	
 16463  012780                     __end_ofPL104:
 16464                           	opt stack 0
 16465  012780                     PL216:
 16466                           	opt stack 16
 16467  012780  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 16468  012784  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16469  012788  0012               	return	
 16470  01278A                     __end_ofPL216:
 16471                           	opt stack 0
 16472                           tblptru	equ	0xFF8
 16473                           tblptrh	equ	0xFF7
 16474                           tblptrl	equ	0xFF6
 16475                           tablat	equ	0xFF5
 16476                           prodh	equ	0xFF4
 16477                           prodl	equ	0xFF3
 16478                           intcon	equ	0xFF2
 16479                           intcon2	equ	0xFF1
 16480                           postinc0	equ	0xFEE
 16481                           wreg	equ	0xFE8
 16482                           indf1	equ	0xFE7
 16483                           postinc1	equ	0xFE6
 16484                           postdec1	equ	0xFE5
 16485                           fsr1h	equ	0xFE2
 16486                           fsr1l	equ	0xFE1
 16487                           indf2	equ	0xFDF
 16488                           postinc2	equ	0xFDE
 16489                           postdec2	equ	0xFDD
 16490                           plusw2	equ	0xFDB
 16491                           fsr2h	equ	0xFDA
 16492                           fsr2l	equ	0xFD9
 16493                           status	equ	0xFD8
 16494                           
 16495 ;; *************** function _button_timer_interrupt *****************
 16496 ;; Defined at:
 16497 ;;		line 3 in file "../My_library/My_button.c"
 16498 ;; Parameters:    Size  Location     Type
 16499 ;;  bt              2   35[BANK0 ] PTR struct button
 16500 ;;		 -> ctmu_m(4), port(69), 
 16501 ;;  sw_value        1   37[BANK0 ] unsigned char 
 16502 ;; Auto vars:     Size  Location     Type
 16503 ;;		None
 16504 ;; Return value:  Size  Location     Type
 16505 ;;		None               void
 16506 ;; Registers used:
 16507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16508 ;; Tracked objects:
 16509 ;;		On entry : F/0
 16510 ;;		On exit  : F/0
 16511 ;;		Unchanged: 0/0
 16512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16513 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16516 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16517 ;;Total ram usage:        5 bytes
 16518 ;; Hardware stack levels used:    1
 16519 ;; Hardware stack levels required when called:   11
 16520 ;; This function calls:
 16521 ;;		Nothing
 16522 ;; This function is called by:
 16523 ;;		_ctmu_sampling
 16524 ;; This function uses a non-reentrant model
 16525 ;;
 16526                           
 16527                           	psect	text73
 16528  011150                     __ptext73:
 16529                           	opt stack 0
 16530  011150                     _button_timer_interrupt:
 16531                           	opt stack 17
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;My_button.c: 4: if (sw_value) {
 16535                           
 16536                           ; BSR set to: 0
 16537                           ;incstack = 0
 16538  011150  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 16539  011152  E048               	bz	l7686
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 16543  011154  D8A2               	call	PL32	;call to abstracted procedure
 16544  011156  0E84               	movlw	132
 16545  011158  18DE               	xorwf	postinc2,w,c
 16546  01115A  E105               	bnz	l576
 16547  01115C  0E03               	movlw	3
 16548  01115E  18DE               	xorwf	postinc2,w,c
 16549  011160  E102               	bnz	l576
 16550                           
 16551                           ; BSR set to: 0
 16552  011162  D8A0               	call	PL38	;call to abstracted procedure
 16553  011164  8EDF               	bsf	indf2,7,c
 16554  011166                     l576:
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 16558  011166  D899               	call	PL32	;call to abstracted procedure
 16559  011168  0EBC               	movlw	188
 16560  01116A  18DE               	xorwf	postinc2,w,c
 16561  01116C  E105               	bnz	l577
 16562  01116E  0E02               	movlw	2
 16563  011170  18DE               	xorwf	postinc2,w,c
 16564  011172  E102               	bnz	l577
 16565                           
 16566                           ; BSR set to: 0
 16567  011174  D897               	call	PL38	;call to abstracted procedure
 16568  011176  8CDF               	bsf	indf2,6,c
 16569  011178                     l577:
 16570                           
 16571                           ; BSR set to: 0
 16572                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 16573  011178  D890               	call	PL32	;call to abstracted procedure
 16574  01117A  0EF4               	movlw	244
 16575  01117C  18DE               	xorwf	postinc2,w,c
 16576  01117E  E104               	bnz	l578
 16577  011180  04DE               	decf	postinc2,w,c
 16578  011182  E102               	bnz	l578
 16579                           
 16580                           ; BSR set to: 0
 16581  011184  D88F               	call	PL38	;call to abstracted procedure
 16582  011186  8ADF               	bsf	indf2,5,c
 16583  011188                     l578:
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 16587  011188  D888               	call	PL32	;call to abstracted procedure
 16588  01118A  0E2C               	movlw	44
 16589  01118C  18DE               	xorwf	postinc2,w,c
 16590  01118E  E104               	bnz	l579
 16591  011190  04DE               	decf	postinc2,w,c
 16592  011192  E102               	bnz	l579
 16593                           
 16594                           ; BSR set to: 0
 16595  011194  D887               	call	PL38	;call to abstracted procedure
 16596  011196  88DF               	bsf	indf2,4,c
 16597  011198                     l579:
 16598                           
 16599                           ; BSR set to: 0
 16600                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 16601  011198  D880               	call	PL32	;call to abstracted procedure
 16602  01119A  0E96               	movlw	150
 16603  01119C  18DE               	xorwf	postinc2,w,c
 16604  01119E  10DE               	iorwf	postinc2,w,c
 16605  0111A0  E102               	bnz	l580
 16606                           
 16607                           ; BSR set to: 0
 16608  0111A2  D880               	call	PL38	;call to abstracted procedure
 16609  0111A4  86DF               	bsf	indf2,3,c
 16610  0111A6                     l580:
 16611                           
 16612                           ; BSR set to: 0
 16613                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 16614  0111A6  D879               	call	PL32	;call to abstracted procedure
 16615  0111A8  0E3C               	movlw	60
 16616  0111AA  18DE               	xorwf	postinc2,w,c
 16617  0111AC  10DE               	iorwf	postinc2,w,c
 16618  0111AE  E102               	bnz	l581
 16619                           
 16620                           ; BSR set to: 0
 16621  0111B0  D879               	call	PL38	;call to abstracted procedure
 16622  0111B2  84DF               	bsf	indf2,2,c
 16623  0111B4                     l581:
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 16627  0111B4  D872               	call	PL32	;call to abstracted procedure
 16628  0111B6  0E10               	movlw	16
 16629  0111B8  18DE               	xorwf	postinc2,w,c
 16630  0111BA  10DE               	iorwf	postinc2,w,c
 16631  0111BC  E102               	bnz	l582
 16632                           
 16633                           ; BSR set to: 0
 16634  0111BE  D872               	call	PL38	;call to abstracted procedure
 16635  0111C0  82DF               	bsf	indf2,1,c
 16636  0111C2                     l582:
 16637                           
 16638                           ; BSR set to: 0
 16639                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 16640  0111C2  D86B               	call	PL32	;call to abstracted procedure
 16641  0111C4  0E02               	movlw	2
 16642  0111C6  18DE               	xorwf	postinc2,w,c
 16643  0111C8  10DE               	iorwf	postinc2,w,c
 16644  0111CA  E102               	bnz	l583
 16645                           
 16646                           ; BSR set to: 0
 16647  0111CC  D86B               	call	PL38	;call to abstracted procedure
 16648  0111CE  80DF               	bsf	indf2,0,c
 16649  0111D0                     l583:
 16650                           
 16651                           ; BSR set to: 0
 16652                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 16653  0111D0  D864               	call	PL32	;call to abstracted procedure
 16654  0111D2  0E85               	movlw	133
 16655  0111D4  5CDE               	subwf	postinc2,w,c
 16656  0111D6  0E03               	movlw	3
 16657  0111D8  58DE               	subwfb	postinc2,w,c
 16658  0111DA  B0D8               	btfsc	status,0,c
 16659  0111DC  0012               	return	
 16660                           
 16661                           ; BSR set to: 0
 16662  0111DE  D85D               	call	PL32	;call to abstracted procedure
 16663  0111E0  EF0E  F094         	goto	PL318	;call to abstracted procedure
 16664  0111E4                     l7686:
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 16668  0111E4  D85A               	call	PL32	;call to abstracted procedure
 16669  0111E6  0E84               	movlw	132
 16670  0111E8  5CDE               	subwf	postinc2,w,c
 16671  0111EA  0E03               	movlw	3
 16672  0111EC  58DE               	subwfb	postinc2,w,c
 16673  0111EE  E303               	bnc	l7690
 16674                           
 16675                           ; BSR set to: 0
 16676  0111F0  D84D               	call	PL30	;call to abstracted procedure
 16677  0111F2  8EDF               	bsf	indf2,7,c
 16678  0111F4  D042               	goto	l7718
 16679  0111F6                     l7690:
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 16683  0111F6  D851               	call	PL32	;call to abstracted procedure
 16684  0111F8  0EBC               	movlw	188
 16685  0111FA  5CDE               	subwf	postinc2,w,c
 16686  0111FC  0E02               	movlw	2
 16687  0111FE  58DE               	subwfb	postinc2,w,c
 16688  011200  E303               	bnc	l7694
 16689                           
 16690                           ; BSR set to: 0
 16691  011202  D844               	call	PL30	;call to abstracted procedure
 16692  011204  8CDF               	bsf	indf2,6,c
 16693  011206  D039               	goto	l7718
 16694  011208                     l7694:
 16695                           
 16696                           ; BSR set to: 0
 16697                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 16698  011208  D848               	call	PL32	;call to abstracted procedure
 16699  01120A  0EF4               	movlw	244
 16700  01120C  5CDE               	subwf	postinc2,w,c
 16701  01120E  0E01               	movlw	1
 16702  011210  58DE               	subwfb	postinc2,w,c
 16703  011212  E303               	bnc	l7698
 16704                           
 16705                           ; BSR set to: 0
 16706  011214  D83B               	call	PL30	;call to abstracted procedure
 16707  011216  8ADF               	bsf	indf2,5,c
 16708  011218  D030               	goto	l7718
 16709  01121A                     l7698:
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 16713  01121A  D83F               	call	PL32	;call to abstracted procedure
 16714  01121C  0E2C               	movlw	44
 16715  01121E  5CDE               	subwf	postinc2,w,c
 16716  011220  0E01               	movlw	1
 16717  011222  58DE               	subwfb	postinc2,w,c
 16718  011224  E303               	bnc	l7702
 16719                           
 16720                           ; BSR set to: 0
 16721  011226  D832               	call	PL30	;call to abstracted procedure
 16722  011228  88DF               	bsf	indf2,4,c
 16723  01122A  D027               	goto	l7718
 16724  01122C                     l7702:
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 16728  01122C  D836               	call	PL32	;call to abstracted procedure
 16729  01122E  0E01               	movlw	1
 16730  011230  50DB               	movf	plusw2,w,c
 16731  011232  E103               	bnz	u7320
 16732  011234  0E96               	movlw	150
 16733  011236  5CDE               	subwf	postinc2,w,c
 16734  011238  E303               	bnc	l7706
 16735  01123A                     u7320:
 16736                           
 16737                           ; BSR set to: 0
 16738  01123A  D828               	call	PL30	;call to abstracted procedure
 16739  01123C  86DF               	bsf	indf2,3,c
 16740  01123E  D01D               	goto	l7718
 16741  011240                     l7706:
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 16745  011240  D82C               	call	PL32	;call to abstracted procedure
 16746  011242  0E01               	movlw	1
 16747  011244  50DB               	movf	plusw2,w,c
 16748  011246  E103               	bnz	u7330
 16749  011248  0E3C               	movlw	60
 16750  01124A  5CDE               	subwf	postinc2,w,c
 16751  01124C  E303               	bnc	l7710
 16752  01124E                     u7330:
 16753                           
 16754                           ; BSR set to: 0
 16755  01124E  D81E               	call	PL30	;call to abstracted procedure
 16756  011250  84DF               	bsf	indf2,2,c
 16757  011252  D013               	goto	l7718
 16758  011254                     l7710:
 16759                           
 16760                           ; BSR set to: 0
 16761                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 16762  011254  D822               	call	PL32	;call to abstracted procedure
 16763  011256  0E01               	movlw	1
 16764  011258  50DB               	movf	plusw2,w,c
 16765  01125A  E103               	bnz	u7340
 16766  01125C  0E10               	movlw	16
 16767  01125E  5CDE               	subwf	postinc2,w,c
 16768  011260  E303               	bnc	l7714
 16769  011262                     u7340:
 16770                           
 16771                           ; BSR set to: 0
 16772  011262  D814               	call	PL30	;call to abstracted procedure
 16773  011264  82DF               	bsf	indf2,1,c
 16774  011266  D009               	goto	l7718
 16775  011268                     l7714:
 16776                           
 16777                           ; BSR set to: 0
 16778                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 16779  011268  D818               	call	PL32	;call to abstracted procedure
 16780  01126A  0E01               	movlw	1
 16781  01126C  50DB               	movf	plusw2,w,c
 16782  01126E  E103               	bnz	u7350
 16783  011270  0E02               	movlw	2
 16784  011272  5CDE               	subwf	postinc2,w,c
 16785  011274  E302               	bnc	l7718
 16786  011276                     u7350:
 16787                           
 16788                           ; BSR set to: 0
 16789  011276  D80A               	call	PL30	;call to abstracted procedure
 16790  011278  80DF               	bsf	indf2,0,c
 16791  01127A                     l7718:
 16792                           
 16793                           ; BSR set to: 0
 16794                           ;My_button.c: 23: bt->cnt_sw = 0;
 16795  01127A  D80F               	call	PL32	;call to abstracted procedure
 16796  01127C  6ADE               	clrf	postinc2,c
 16797  01127E  6ADD               	clrf	postdec2,c
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;My_button.c: 24: bt->flags &= 0x00FF;
 16801  011280  D805               	call	PL30	;call to abstracted procedure
 16802  011282  0EFF               	movlw	255
 16803  011284  16DE               	andwf	postinc2,f,c
 16804  011286  0E00               	movlw	0
 16805  011288  16DD               	andwf	postdec2,f,c
 16806                           
 16807                           ; BSR set to: 0
 16808  01128A  0C00               	retlw	0	;funcret
 16809  01128C                     __end_of_button_timer_interrupt:
 16810                           	opt stack 0
 16811  01128C                     PL30:
 16812                           	opt stack 17
 16813  01128C  EE20 F002          	lfsr	2,2
 16814  011290  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 16815  011292  26D9               	addwf	fsr2l,f,c
 16816  011294  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16817  011296  22DA               	addwfc	fsr2h,f,c
 16818  011298  0012               	return	
 16819  01129A                     __end_ofPL30:
 16820                           	opt stack 0
 16821  01129A                     PL32:
 16822                           	opt stack 17
 16823  01129A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16824  01129E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16825  0112A2  0012               	return	
 16826  0112A4                     __end_ofPL32:
 16827                           	opt stack 0
 16828  0112A4                     PL38:
 16829                           	opt stack 17
 16830  0112A4  EE20 F003          	lfsr	2,3
 16831  0112A8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 16832  0112AA  26D9               	addwf	fsr2l,f,c
 16833  0112AC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16834  0112AE  22DA               	addwfc	fsr2h,f,c
 16835  0112B0  0012               	return	
 16836  0112B2                     __end_ofPL38:
 16837                           	opt stack 0
 16838                           tblptru	equ	0xFF8
 16839                           tblptrh	equ	0xFF7
 16840                           tblptrl	equ	0xFF6
 16841                           tablat	equ	0xFF5
 16842                           prodh	equ	0xFF4
 16843                           prodl	equ	0xFF3
 16844                           intcon	equ	0xFF2
 16845                           intcon2	equ	0xFF1
 16846                           postinc0	equ	0xFEE
 16847                           wreg	equ	0xFE8
 16848                           indf1	equ	0xFE7
 16849                           postinc1	equ	0xFE6
 16850                           postdec1	equ	0xFE5
 16851                           fsr1h	equ	0xFE2
 16852                           fsr1l	equ	0xFE1
 16853                           indf2	equ	0xFDF
 16854                           postinc2	equ	0xFDE
 16855                           postdec2	equ	0xFDD
 16856                           plusw2	equ	0xFDB
 16857                           fsr2h	equ	0xFDA
 16858                           fsr2l	equ	0xFD9
 16859                           status	equ	0xFD8
 16860                           
 16861 ;; *************** function ___lwdiv *****************
 16862 ;; Defined at:
 16863 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16864 ;; Parameters:    Size  Location     Type
 16865 ;;  dividend        2   28[BANK0 ] unsigned int 
 16866 ;;  divisor         2   30[BANK0 ] unsigned int 
 16867 ;; Auto vars:     Size  Location     Type
 16868 ;;  quotient        2   33[BANK0 ] unsigned int 
 16869 ;;  counter         1   32[BANK0 ] unsigned char 
 16870 ;; Return value:  Size  Location     Type
 16871 ;;                  2   28[BANK0 ] unsigned int 
 16872 ;; Registers used:
 16873 ;;		wreg, status,2, status,0
 16874 ;; Tracked objects:
 16875 ;;		On entry : F/0
 16876 ;;		On exit  : F/0
 16877 ;;		Unchanged: 0/0
 16878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16879 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16882 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16883 ;;Total ram usage:        7 bytes
 16884 ;; Hardware stack levels used:    1
 16885 ;; Hardware stack levels required when called:   11
 16886 ;; This function calls:
 16887 ;;		Nothing
 16888 ;; This function is called by:
 16889 ;;		_data_out
 16890 ;;		_display_LCD
 16891 ;;		_ctmu_set_ratio
 16892 ;;		_ctmu_sampling
 16893 ;;		_ringbuf_put_num
 16894 ;; This function uses a non-reentrant model
 16895 ;;
 16896                           
 16897                           	psect	text74
 16898  013D4C                     __ptext74:
 16899                           	opt stack 0
 16900  013D4C                     ___lwdiv:
 16901                           	opt stack 16
 16902                           
 16903                           ; BSR set to: 0
 16904                           
 16905                           ; BSR set to: 0
 16906                           ;incstack = 0
 16907  013D4C  6B81               	clrf	___lwdiv@quotient& (0+255),b
 16908  013D4E  6B82               	clrf	(___lwdiv@quotient+1)& (0+255),b
 16909                           
 16910                           ; BSR set to: 0
 16911  013D50  517E               	movf	___lwdiv@divisor& (0+255),w,b
 16912  013D52  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16913  013D54  E01B               	bz	l2406
 16914                           
 16915                           ; BSR set to: 0
 16916  013D56  0E01               	movlw	1
 16917  013D58  6F80               	movwf	___lwdiv@counter& (0+255),b
 16918  013D5A  D004               	goto	l10314
 16919  013D5C                     l10312:
 16920                           
 16921                           ; BSR set to: 0
 16922  013D5C  90D8               	bcf	status,0,c
 16923  013D5E  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 16924  013D60  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16925  013D62  2B80               	incf	___lwdiv@counter& (0+255),f,b
 16926  013D64                     l10314:
 16927                           
 16928                           ; BSR set to: 0
 16929  013D64  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16930  013D66  D7FA               	goto	l10312
 16931  013D68                     l10316:
 16932                           
 16933                           ; BSR set to: 0
 16934  013D68  90D8               	bcf	status,0,c
 16935  013D6A  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 16936  013D6C  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16937                           
 16938                           ; BSR set to: 0
 16939  013D6E  517E               	movf	___lwdiv@divisor& (0+255),w,b
 16940  013D70  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 16941  013D72  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16942  013D74  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16943  013D76  E305               	bnc	l10324
 16944                           
 16945                           ; BSR set to: 0
 16946  013D78  517E               	movf	___lwdiv@divisor& (0+255),w,b
 16947  013D7A  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 16948  013D7C  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16949  013D7E  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16950                           
 16951                           ; BSR set to: 0
 16952  013D80  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 16953  013D82                     l10324:
 16954                           
 16955                           ; BSR set to: 0
 16956  013D82  90D8               	bcf	status,0,c
 16957  013D84  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16958  013D86  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 16959                           
 16960                           ; BSR set to: 0
 16961  013D88  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 16962  013D8A  D7EE               	goto	l10316
 16963  013D8C                     l2406:
 16964                           
 16965                           ; BSR set to: 0
 16966  013D8C  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 16967  013D90  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16968                           
 16969                           ; BSR set to: 0
 16970  013D94  0012               	return		;funcret
 16971  013D96                     __end_of___lwdiv:
 16972                           	opt stack 0
 16973                           tblptru	equ	0xFF8
 16974                           tblptrh	equ	0xFF7
 16975                           tblptrl	equ	0xFF6
 16976                           tablat	equ	0xFF5
 16977                           prodh	equ	0xFF4
 16978                           prodl	equ	0xFF3
 16979                           intcon	equ	0xFF2
 16980                           intcon2	equ	0xFF1
 16981                           postinc0	equ	0xFEE
 16982                           wreg	equ	0xFE8
 16983                           indf1	equ	0xFE7
 16984                           postinc1	equ	0xFE6
 16985                           postdec1	equ	0xFE5
 16986                           fsr1h	equ	0xFE2
 16987                           fsr1l	equ	0xFE1
 16988                           indf2	equ	0xFDF
 16989                           postinc2	equ	0xFDE
 16990                           postdec2	equ	0xFDD
 16991                           plusw2	equ	0xFDB
 16992                           fsr2h	equ	0xFDA
 16993                           fsr2l	equ	0xFD9
 16994                           status	equ	0xFD8
 16995                           
 16996 ;; *************** function _CTMU_read *****************
 16997 ;; Defined at:
 16998 ;;		line 184 in file "../My_library/My_PIC.c"
 16999 ;; Parameters:    Size  Location     Type
 17000 ;;  ch              1    wreg     unsigned char 
 17001 ;; Auto vars:     Size  Location     Type
 17002 ;;  ch              1   16[BANK0 ] unsigned char 
 17003 ;;  i               1   21[BANK0 ] unsigned char 
 17004 ;;  sum             4   17[BANK0 ] unsigned long 
 17005 ;; Return value:  Size  Location     Type
 17006 ;;                  2   13[BANK0 ] unsigned int 
 17007 ;; Registers used:
 17008 ;;		wreg, status,2, status,0, cstack
 17009 ;; Tracked objects:
 17010 ;;		On entry : F/0
 17011 ;;		On exit  : F/0
 17012 ;;		Unchanged: 0/0
 17013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17015 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17017 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17018 ;;Total ram usage:        9 bytes
 17019 ;; Hardware stack levels used:    1
 17020 ;; Hardware stack levels required when called:   12
 17021 ;; This function calls:
 17022 ;;		___lldiv
 17023 ;; This function is called by:
 17024 ;;		_ctmu_set_ratio
 17025 ;;		_ctmu_sampling
 17026 ;; This function uses a non-reentrant model
 17027 ;;
 17028                           
 17029                           	psect	text75
 17030  012D7E                     __ptext75:
 17031                           	opt stack 0
 17032  012D7E                     _CTMU_read:
 17033                           	opt stack 15
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;incstack = 0
 17037                           ;CTMU_read@ch stored from wreg
 17038  012D7E  6F70               	movwf	CTMU_read@ch& (0+255),b
 17039                           
 17040                           ;My_PIC.c: 185: uint32_t sum = 0;
 17041  012D80  0100               	movlb	0	; () banked
 17042  012D82  6B71               	clrf	CTMU_read@sum& (0+255),b
 17043  012D84  6B72               	clrf	(CTMU_read@sum+1)& (0+255),b
 17044  012D86  6B73               	clrf	(CTMU_read@sum+2)& (0+255),b
 17045  012D88  6B74               	clrf	(CTMU_read@sum+3)& (0+255),b
 17046                           
 17047                           ;My_PIC.c: 186: for (uint8_t i = 0; i < 10; i++) {
 17048  012D8A  6B75               	clrf	CTMU_read@i& (0+255),b
 17049  012D8C                     l10076:
 17050                           
 17051                           ; BSR set to: 0
 17052                           ;My_PIC.c: 187: ADCON0bits.CHS = ch;
 17053  012D8C  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 17054  012D90  476F               	rlncf	??_CTMU_read& (0+255),f,b
 17055  012D92  476F               	rlncf	??_CTMU_read& (0+255),f,b
 17056  012D94  50C2               	movf	4034,w,c	;volatile
 17057  012D96  196F               	xorwf	??_CTMU_read& (0+255),w,b
 17058  012D98  0BC3               	andlw	-61
 17059  012D9A  196F               	xorwf	??_CTMU_read& (0+255),w,b
 17060  012D9C  6EC2               	movwf	4034,c	;volatile
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;My_PIC.c: 188: CTMUCONHbits.CTMUEN = 1;
 17064  012D9E  8EB3               	bsf	4019,7,c	;volatile
 17065                           
 17066                           ; BSR set to: 0
 17067                           ;My_PIC.c: 189: CTMUCONLbits.EDG1STAT = 0;
 17068  012DA0  90B2               	bcf	4018,0,c	;volatile
 17069                           
 17070                           ; BSR set to: 0
 17071                           ;My_PIC.c: 190: CTMUCONLbits.EDG2STAT = 0;
 17072  012DA2  92B2               	bcf	4018,1,c	;volatile
 17073                           
 17074                           ; BSR set to: 0
 17075                           ;My_PIC.c: 193: CTMUCONHbits.IDISSEN = 1;
 17076  012DA4  82B3               	bsf	4019,1,c	;volatile
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;My_PIC.c: 194: _delay((unsigned long)((20)*(48000000/4000000.0)));
 17080  012DA6  0E50               	movlw	80
 17081  012DA8                     u12817:
 17082  012DA8  2EE8               	decfsz	wreg,f,c
 17083  012DAA  D7FE               	goto	u12817
 17084                           
 17085                           ;My_PIC.c: 195: CTMUCONHbits.IDISSEN = 0;
 17086  012DAC  92B3               	bcf	4019,1,c	;volatile
 17087                           
 17088                           ;My_PIC.c: 197: CTMUCONLbits.EDG1STAT = 1;
 17089  012DAE  80B2               	bsf	4018,0,c	;volatile
 17090                           
 17091                           ;My_PIC.c: 198: _delay((unsigned long)((5)*(48000000/4000000.0)));
 17092  012DB0  0E14               	movlw	20
 17093  012DB2                     u12827:
 17094  012DB2  2EE8               	decfsz	wreg,f,c
 17095  012DB4  D7FE               	goto	u12827
 17096                           
 17097                           ;My_PIC.c: 199: CTMUCONLbits.EDG1STAT = 0;
 17098  012DB6  90B2               	bcf	4018,0,c	;volatile
 17099                           
 17100                           ;My_PIC.c: 201: PIR1bits.ADIF = 0;
 17101  012DB8  9C9E               	bcf	3998,6,c	;volatile
 17102                           
 17103                           ;My_PIC.c: 202: ADCON0bits.GO = 1;
 17104  012DBA  82C2               	bsf	4034,1,c	;volatile
 17105  012DBC                     l782:
 17106  012DBC  AC9E               	btfss	3998,6,c	;volatile
 17107  012DBE  D7FE               	goto	l782
 17108                           
 17109                           ;My_PIC.c: 204: sum += ADRES;
 17110  012DC0  50C3               	movf	4035,w,c	;volatile
 17111  012DC2  0100               	movlb	0	; () banked
 17112  012DC4  2771               	addwf	CTMU_read@sum& (0+255),f,b
 17113  012DC6  50C4               	movf	4036,w,c	;volatile
 17114  012DC8  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 17115  012DCA  0E00               	movlw	0
 17116  012DCC  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 17117  012DCE  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 17118  012DD0  2B75               	incf	CTMU_read@i& (0+255),f,b
 17119                           
 17120                           ; BSR set to: 0
 17121  012DD2  0E09               	movlw	9
 17122  012DD4  6575               	cpfsgt	CTMU_read@i& (0+255),b
 17123  012DD6  D7DA               	goto	l10076
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;My_PIC.c: 205: }
 17127                           ;My_PIC.c: 206: return sum / 10 / 4;
 17128  012DD8  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 17129  012DDC  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 17130  012DE0  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 17131  012DE4  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 17132  012DE8  0E0A               	movlw	10
 17133  012DEA  ECD2  F097         	call	PL238	;call to abstracted procedure
 17134  012DEE  EC31  F09B         	call	___lldiv	;wreg free
 17135  012DF2  0E03               	movlw	3
 17136  012DF4  D005               	goto	u10560
 17137  012DF6                     u10565:
 17138  012DF6  90D8               	bcf	status,0,c
 17139  012DF8  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 17140  012DFA  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 17141  012DFC  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 17142  012DFE  3360               	rrcf	?___lldiv& (0+255),f,b
 17143  012E00                     u10560:
 17144  012E00  2EE8               	decfsz	wreg,f,c
 17145  012E02  D7F9               	goto	u10565
 17146  012E04  C060  F06D         	movff	?___lldiv,?_CTMU_read
 17147  012E08  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 17148                           
 17149                           ; BSR set to: 0
 17150  012E0C  0012               	return		;funcret
 17151  012E0E                     __end_of_CTMU_read:
 17152                           	opt stack 0
 17153                           tblptru	equ	0xFF8
 17154                           tblptrh	equ	0xFF7
 17155                           tblptrl	equ	0xFF6
 17156                           tablat	equ	0xFF5
 17157                           prodh	equ	0xFF4
 17158                           prodl	equ	0xFF3
 17159                           intcon	equ	0xFF2
 17160                           intcon2	equ	0xFF1
 17161                           postinc0	equ	0xFEE
 17162                           wreg	equ	0xFE8
 17163                           indf1	equ	0xFE7
 17164                           postinc1	equ	0xFE6
 17165                           postdec1	equ	0xFE5
 17166                           fsr1h	equ	0xFE2
 17167                           fsr1l	equ	0xFE1
 17168                           indf2	equ	0xFDF
 17169                           postinc2	equ	0xFDE
 17170                           postdec2	equ	0xFDD
 17171                           plusw2	equ	0xFDB
 17172                           fsr2h	equ	0xFDA
 17173                           fsr2l	equ	0xFD9
 17174                           status	equ	0xFD8
 17175                           
 17176 ;; *************** function ___lldiv *****************
 17177 ;; Defined at:
 17178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 17179 ;; Parameters:    Size  Location     Type
 17180 ;;  dividend        4    0[BANK0 ] unsigned long 
 17181 ;;  divisor         4    4[BANK0 ] unsigned long 
 17182 ;; Auto vars:     Size  Location     Type
 17183 ;;  quotient        4    8[BANK0 ] unsigned long 
 17184 ;;  counter         1   12[BANK0 ] unsigned char 
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  4    0[BANK0 ] unsigned long 
 17187 ;; Registers used:
 17188 ;;		wreg, status,2, status,0
 17189 ;; Tracked objects:
 17190 ;;		On entry : F/0
 17191 ;;		On exit  : F/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17194 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17195 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17197 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17198 ;;Total ram usage:       13 bytes
 17199 ;; Hardware stack levels used:    1
 17200 ;; Hardware stack levels required when called:   11
 17201 ;; This function calls:
 17202 ;;		Nothing
 17203 ;; This function is called by:
 17204 ;;		_integrate_current
 17205 ;;		_display_LCD
 17206 ;;		_CTMU_read
 17207 ;;		_get_quot_rem
 17208 ;;		_sprintf
 17209 ;; This function uses a non-reentrant model
 17210 ;;
 17211                           
 17212                           	psect	text76
 17213  013662                     __ptext76:
 17214                           	opt stack 0
 17215  013662                     ___lldiv:
 17216                           	opt stack 13
 17217                           
 17218                           ; BSR set to: 0
 17219                           
 17220                           ; BSR set to: 0
 17221                           ;incstack = 0
 17222  013662  6B68               	clrf	___lldiv@quotient& (0+255),b
 17223  013664  6B69               	clrf	(___lldiv@quotient+1)& (0+255),b
 17224  013666  6B6A               	clrf	(___lldiv@quotient+2)& (0+255),b
 17225  013668  6B6B               	clrf	(___lldiv@quotient+3)& (0+255),b
 17226                           
 17227                           ; BSR set to: 0
 17228  01366A  5164               	movf	___lldiv@divisor& (0+255),w,b
 17229  01366C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 17230  01366E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 17231  013670  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 17232  013672  E029               	bz	l2353
 17233                           
 17234                           ; BSR set to: 0
 17235  013674  0E01               	movlw	1
 17236  013676  6F6C               	movwf	___lldiv@counter& (0+255),b
 17237  013678  D006               	goto	l9612
 17238  01367A                     l9610:
 17239                           
 17240                           ; BSR set to: 0
 17241  01367A  90D8               	bcf	status,0,c
 17242  01367C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 17243  01367E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 17244  013680  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 17245  013682  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 17246  013684  2B6C               	incf	___lldiv@counter& (0+255),f,b
 17247  013686                     l9612:
 17248                           
 17249                           ; BSR set to: 0
 17250  013686  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 17251  013688  D7F8               	goto	l9610
 17252  01368A                     l9614:
 17253                           
 17254                           ; BSR set to: 0
 17255  01368A  90D8               	bcf	status,0,c
 17256  01368C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 17257  01368E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 17258  013690  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 17259  013692  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 17260                           
 17261                           ; BSR set to: 0
 17262  013694  5164               	movf	___lldiv@divisor& (0+255),w,b
 17263  013696  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 17264  013698  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17265  01369A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 17266  01369C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17267  01369E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 17268  0136A0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17269  0136A2  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 17270  0136A4  E309               	bnc	l9622
 17271                           
 17272                           ; BSR set to: 0
 17273  0136A6  5164               	movf	___lldiv@divisor& (0+255),w,b
 17274  0136A8  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 17275  0136AA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17276  0136AC  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 17277  0136AE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17278  0136B0  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 17279  0136B2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17280  0136B4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 17281                           
 17282                           ; BSR set to: 0
 17283  0136B6  8168               	bsf	___lldiv@quotient& (0+255),0,b
 17284  0136B8                     l9622:
 17285                           
 17286                           ; BSR set to: 0
 17287  0136B8  90D8               	bcf	status,0,c
 17288  0136BA  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 17289  0136BC  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 17290  0136BE  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 17291  0136C0  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 17292                           
 17293                           ; BSR set to: 0
 17294  0136C2  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 17295  0136C4  D7E2               	goto	l9614
 17296  0136C6                     l2353:
 17297                           
 17298                           ; BSR set to: 0
 17299  0136C6  C068  F060         	movff	___lldiv@quotient,?___lldiv
 17300  0136CA  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 17301  0136CE  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 17302  0136D2  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 17303                           
 17304                           ; BSR set to: 0
 17305  0136D6  0012               	return		;funcret
 17306  0136D8                     __end_of___lldiv:
 17307                           	opt stack 0
 17308                           tblptru	equ	0xFF8
 17309                           tblptrh	equ	0xFF7
 17310                           tblptrl	equ	0xFF6
 17311                           tablat	equ	0xFF5
 17312                           prodh	equ	0xFF4
 17313                           prodl	equ	0xFF3
 17314                           intcon	equ	0xFF2
 17315                           intcon2	equ	0xFF1
 17316                           postinc0	equ	0xFEE
 17317                           wreg	equ	0xFE8
 17318                           indf1	equ	0xFE7
 17319                           postinc1	equ	0xFE6
 17320                           postdec1	equ	0xFE5
 17321                           fsr1h	equ	0xFE2
 17322                           fsr1l	equ	0xFE1
 17323                           indf2	equ	0xFDF
 17324                           postinc2	equ	0xFDE
 17325                           postdec2	equ	0xFDD
 17326                           plusw2	equ	0xFDB
 17327                           fsr2h	equ	0xFDA
 17328                           fsr2l	equ	0xFD9
 17329                           status	equ	0xFD8
 17330                           
 17331 ;; *************** function _USB_task *****************
 17332 ;; Defined at:
 17333 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 17334 ;; Parameters:    Size  Location     Type
 17335 ;;		None
 17336 ;; Auto vars:     Size  Location     Type
 17337 ;;  rx_len          2   17[BANK0 ] int 
 17338 ;;  data            1   19[BANK0 ] unsigned char 
 17339 ;; Return value:  Size  Location     Type
 17340 ;;		None               void
 17341 ;; Registers used:
 17342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17343 ;; Tracked objects:
 17344 ;;		On entry : E/1
 17345 ;;		On exit  : F/0
 17346 ;;		Unchanged: 0/0
 17347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17349 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17351 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17352 ;;Total ram usage:        3 bytes
 17353 ;; Hardware stack levels used:    1
 17354 ;; Hardware stack levels required when called:   14
 17355 ;; This function calls:
 17356 ;;		_get_string_usb
 17357 ;;		_put_string_usb
 17358 ;;		_ringbuf_num
 17359 ;;		_ringbuf_pop
 17360 ;;		_ringbuf_put
 17361 ;; This function is called by:
 17362 ;;		_main
 17363 ;; This function uses a non-reentrant model
 17364 ;;
 17365                           
 17366                           	psect	text77
 17367  0139EE                     __ptext77:
 17368                           	opt stack 0
 17369  0139EE                     _USB_task:
 17370                           	opt stack 16
 17371                           
 17372                           ;My_usb_cdc.c: 67: char data;
 17373                           ;My_usb_cdc.c: 68: int rx_len;
 17374                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 17375                           
 17376                           ; BSR set to: 0
 17377                           ;incstack = 0
 17378  0139EE  0100               	movlb	0	; () banked
 17379  0139F0  6B6D               	clrf	(get_string_usb@len+1)& (0+255),b
 17380  0139F2  0E01               	movlw	1
 17381  0139F4  6F6C               	movwf	get_string_usb@len& (0+255),b
 17382  0139F6  0E73               	movlw	USB_task@data& (0+255)
 17383  0139F8  EC72  F0A0         	call	_get_string_usb
 17384  0139FC  C06C  F071         	movff	?_get_string_usb,USB_task@rx_len
 17385  013A00  C06D  F072         	movff	?_get_string_usb+1,USB_task@rx_len+1
 17386                           
 17387                           ; BSR set to: 0
 17388                           ;My_usb_cdc.c: 70: if (rx_len) {
 17389  013A04  5171               	movf	USB_task@rx_len& (0+255),w,b
 17390  013A06  1172               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 17391  013A08  E008               	bz	l1392
 17392                           
 17393                           ; BSR set to: 0
 17394                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 17395  013A0A  0EB5               	movlw	low _usb_rx
 17396  013A0C  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17397  013A0E  0E02               	movlw	high _usb_rx
 17398  013A10  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17399  013A12  C073  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 17400  013A16  ECC5  F093         	call	_ringbuf_put	;wreg free
 17401  013A1A                     l1392:
 17402                           
 17403                           ; BSR set to: 0
 17404                           ;My_usb_cdc.c: 72: }
 17405                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 17406  013A1A  0EBD               	movlw	low _usb_tx
 17407  013A1C  6F60               	movwf	ringbuf_num@rb& (0+255),b
 17408  013A1E  0E02               	movlw	high _usb_tx
 17409  013A20  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 17410  013A22  ECDE  F097         	call	_ringbuf_num	;wreg free
 17411  013A26  5160               	movf	?_ringbuf_num& (0+255),w,b
 17412  013A28  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 17413  013A2A  B4D8               	btfsc	status,2,c
 17414  013A2C  0012               	return	
 17415                           
 17416                           ; BSR set to: 0
 17417                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 17418  013A2E  0EBD               	movlw	low _usb_tx
 17419  013A30  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 17420  013A32  0E02               	movlw	high _usb_tx
 17421  013A34  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 17422  013A36  EC4F  F097         	call	_ringbuf_pop	;wreg free
 17423  013A3A  6F73               	movwf	USB_task@data& (0+255),b
 17424                           
 17425                           ; BSR set to: 0
 17426                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 17427  013A3C  6B6C               	clrf	(put_string_usb@len+1)& (0+255),b
 17428  013A3E  0E01               	movlw	1
 17429  013A40  6F6B               	movwf	put_string_usb@len& (0+255),b
 17430  013A42  0E73               	movlw	USB_task@data& (0+255)
 17431  013A44  EFCE  F0A1         	goto	_put_string_usb
 17432  013A48                     __end_of_USB_task:
 17433                           	opt stack 0
 17434                           tblptru	equ	0xFF8
 17435                           tblptrh	equ	0xFF7
 17436                           tblptrl	equ	0xFF6
 17437                           tablat	equ	0xFF5
 17438                           prodh	equ	0xFF4
 17439                           prodl	equ	0xFF3
 17440                           intcon	equ	0xFF2
 17441                           intcon2	equ	0xFF1
 17442                           postinc0	equ	0xFEE
 17443                           wreg	equ	0xFE8
 17444                           indf1	equ	0xFE7
 17445                           postinc1	equ	0xFE6
 17446                           postdec1	equ	0xFE5
 17447                           fsr1h	equ	0xFE2
 17448                           fsr1l	equ	0xFE1
 17449                           indf2	equ	0xFDF
 17450                           postinc2	equ	0xFDE
 17451                           postdec2	equ	0xFDD
 17452                           plusw2	equ	0xFDB
 17453                           fsr2h	equ	0xFDA
 17454                           fsr2l	equ	0xFD9
 17455                           status	equ	0xFD8
 17456                           
 17457 ;; *************** function _ringbuf_put *****************
 17458 ;; Defined at:
 17459 ;;		line 20 in file "../My_library/My_ringbuf.c"
 17460 ;; Parameters:    Size  Location     Type
 17461 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 17462 ;;		 -> uart_rx(8), terminal_task@command(8), lcd_tx(8), usb_rx(8), 
 17463 ;;		 -> usb_tx(8), 
 17464 ;;  asciicode       1   10[BANK0 ] unsigned char 
 17465 ;; Auto vars:     Size  Location     Type
 17466 ;;		None
 17467 ;; Return value:  Size  Location     Type
 17468 ;;		None               void
 17469 ;; Registers used:
 17470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17471 ;; Tracked objects:
 17472 ;;		On entry : F/0
 17473 ;;		On exit  : F/0
 17474 ;;		Unchanged: 0/0
 17475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17476 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17479 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17480 ;;Total ram usage:        7 bytes
 17481 ;; Hardware stack levels used:    1
 17482 ;; Hardware stack levels required when called:   12
 17483 ;; This function calls:
 17484 ;;		_ringbuf_num
 17485 ;; This function is called by:
 17486 ;;		_ringbuf_put_num
 17487 ;;		_ringbuf_put_str
 17488 ;;		_ST7032_command
 17489 ;;		_ST7032_put
 17490 ;;		_ST7032_init
 17491 ;;		_terminal_task
 17492 ;;		_USB_task
 17493 ;; This function uses a non-reentrant model
 17494 ;;
 17495                           
 17496                           	psect	text78
 17497  01278A                     __ptext78:
 17498                           	opt stack 0
 17499  01278A                     _ringbuf_put:
 17500                           	opt stack 13
 17501                           
 17502                           ; BSR set to: 0
 17503                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;incstack = 0
 17507  01278A  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 17508  01278E  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 17509  012792  ECDE  F097         	call	_ringbuf_num	;wreg free
 17510  012796  EE20 F002          	lfsr	2,2
 17511  01279A  D83B               	call	PL172	;call to abstracted procedure
 17512  01279C  50DE               	movf	postinc2,w,c
 17513  01279E  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 17514  0127A0  50DE               	movf	postinc2,w,c
 17515  0127A2  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 17516  0127A4  B0D8               	btfsc	status,0,c
 17517  0127A6  0012               	return	
 17518                           
 17519                           ; BSR set to: 0
 17520                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 17521  0127A8  D82D               	call	PL162	;call to abstracted procedure
 17522  0127AA  CFDE F06B          	movff	postinc2,??_ringbuf_put
 17523  0127AE  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 17524  0127B2  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 17525  0127B6  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 17526  0127BA  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 17527  0127BE  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 17528  0127C2  516B               	movf	??_ringbuf_put& (0+255),w,b
 17529  0127C4  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 17530  0127C6  6ED9               	movwf	fsr2l,c
 17531  0127C8  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 17532  0127CA  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 17533  0127CC  6EDA               	movwf	fsr2h,c
 17534  0127CE  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 17538  0127D2  EE20 F002          	lfsr	2,2
 17539  0127D6  D81D               	call	PL172	;call to abstracted procedure
 17540  0127D8  EE10 F004          	lfsr	1,4
 17541  0127DC  5168               	movf	ringbuf_put@rb& (0+255),w,b
 17542  0127DE  26E1               	addwf	fsr1l,f,c
 17543  0127E0  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17544  0127E2  22E2               	addwfc	fsr1h,f,c
 17545  0127E4  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 17546  0127E8  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 17547  0127EC  2B6D               	incf	(??_ringbuf_put+2)& (0+255),f,b
 17548  0127EE  0E00               	movlw	0
 17549  0127F0  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 17550  0127F2  50DE               	movf	postinc2,w,c
 17551  0127F4  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 17552  0127F6  50DE               	movf	postinc2,w,c
 17553  0127F8  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 17554  0127FA  E202               	bc	l9634
 17555                           
 17556                           ; BSR set to: 0
 17557  0127FC  D803               	call	PL162	;call to abstracted procedure
 17558  0127FE  D00E               	goto	PL318	;call to abstracted procedure
 17559  012800                     l9634:
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;My_ringbuf.c: 24: else rb->head = 0;
 17563  012800  D801               	call	PL162	;call to abstracted procedure
 17564                           
 17565                           ; BSR set to: 0
 17566  012802  D010               	goto	PL358	;call to abstracted procedure
 17567  012804                     __end_of_ringbuf_put:
 17568                           	opt stack 0
 17569  012804                     PL162:
 17570                           	opt stack 13
 17571  012804  EE20 F004          	lfsr	2,4
 17572  012808  5168               	movf	ringbuf_put@rb& (0+255),w,b
 17573  01280A  26D9               	addwf	fsr2l,f,c
 17574  01280C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17575  01280E  22DA               	addwfc	fsr2h,f,c
 17576  012810  0012               	return	
 17577  012812                     __end_ofPL162:
 17578                           	opt stack 0
 17579  012812                     PL172:
 17580                           	opt stack 13
 17581  012812  5168               	movf	ringbuf_put@rb& (0+255),w,b
 17582  012814  26D9               	addwf	fsr2l,f,c
 17583  012816  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17584  012818  22DA               	addwfc	fsr2h,f,c
 17585  01281A  0012               	return	
 17586  01281C                     __end_ofPL172:
 17587                           	opt stack 0
 17588  01281C                     PL318:
 17589                           	opt stack 17
 17590  01281C  2ADE               	incf	postinc2,f,c
 17591  01281E  0E00               	movlw	0
 17592  012820  22DD               	addwfc	postdec2,f,c
 17593  012822  0C00               	retlw	0
 17594  012824                     __end_ofPL318:
 17595                           	opt stack 0
 17596  012824                     PL358:
 17597                           	opt stack 18
 17598  012824  6ADE               	clrf	postinc2,c
 17599  012826  6ADD               	clrf	postdec2,c
 17600  012828  0C00               	retlw	0	;funcret
 17601  01282A                     __end_ofPL358:
 17602                           	opt stack 0
 17603                           tblptru	equ	0xFF8
 17604                           tblptrh	equ	0xFF7
 17605                           tblptrl	equ	0xFF6
 17606                           tablat	equ	0xFF5
 17607                           prodh	equ	0xFF4
 17608                           prodl	equ	0xFF3
 17609                           intcon	equ	0xFF2
 17610                           intcon2	equ	0xFF1
 17611                           postinc0	equ	0xFEE
 17612                           wreg	equ	0xFE8
 17613                           indf1	equ	0xFE7
 17614                           postinc1	equ	0xFE6
 17615                           postdec1	equ	0xFE5
 17616                           fsr1h	equ	0xFE2
 17617                           fsr1l	equ	0xFE1
 17618                           indf2	equ	0xFDF
 17619                           postinc2	equ	0xFDE
 17620                           postdec2	equ	0xFDD
 17621                           plusw2	equ	0xFDB
 17622                           fsr2h	equ	0xFDA
 17623                           fsr2l	equ	0xFD9
 17624                           status	equ	0xFD8
 17625                           
 17626 ;; *************** function _put_string_usb *****************
 17627 ;; Defined at:
 17628 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 17629 ;; Parameters:    Size  Location     Type
 17630 ;;  s               1    wreg     PTR unsigned char 
 17631 ;;		 -> USB_task@data(1), 
 17632 ;;  len             2   11[BANK0 ] int 
 17633 ;; Auto vars:     Size  Location     Type
 17634 ;;  s               1   13[BANK0 ] PTR unsigned char 
 17635 ;;		 -> USB_task@data(1), 
 17636 ;; Return value:  Size  Location     Type
 17637 ;;                  2   11[BANK0 ] int 
 17638 ;; Registers used:
 17639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17640 ;; Tracked objects:
 17641 ;;		On entry : F/0
 17642 ;;		On exit  : F/0
 17643 ;;		Unchanged: 0/0
 17644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17645 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17648 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17649 ;;Total ram usage:        3 bytes
 17650 ;; Hardware stack levels used:    1
 17651 ;; Hardware stack levels required when called:   13
 17652 ;; This function calls:
 17653 ;;		_CDCTxService
 17654 ;;		_is_usb_available
 17655 ;;		_putUSBUSART
 17656 ;; This function is called by:
 17657 ;;		_USB_task
 17658 ;; This function uses a non-reentrant model
 17659 ;;
 17660                           
 17661                           	psect	text79
 17662  01439C                     __ptext79:
 17663                           	opt stack 0
 17664  01439C                     _put_string_usb:
 17665                           	opt stack 16
 17666                           
 17667                           ; BSR set to: 0
 17668                           ;incstack = 0
 17669                           ;put_string_usb@s stored from wreg
 17670  01439C  6F6D               	movwf	put_string_usb@s& (0+255),b
 17671                           
 17672                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 17673  01439E  ECB5  F0A2         	call	_is_usb_available	;wreg free
 17674  0143A2  0900               	iorlw	0
 17675  0143A4  E103               	bnz	l11458
 17676  0143A6  0012               	return	
 17677  0143A8                     l11456:
 17678                           
 17679                           ; BSR set to: 0
 17680  0143A8  EC03  F08F         	call	_CDCTxService	;wreg free
 17681  0143AC                     l11458:
 17682                           
 17683                           ; BSR set to: 0
 17684  0143AC  501E               	movf	_cdc_trf_state,w,c
 17685  0143AE  E1FC               	bnz	l11456
 17686                           
 17687                           ; BSR set to: 0
 17688                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 17689  0143B0  C06B  F060         	movff	put_string_usb@len,putUSBUSART@length
 17690  0143B4  516D               	movf	put_string_usb@s& (0+255),w,b
 17691  0143B6  EC60  F0A2         	call	_putUSBUSART
 17692                           
 17693                           ;My_usb_cdc.c: 28: CDCTxService();
 17694  0143BA  EF03  F08F         	goto	_CDCTxService	;wreg free
 17695  0143BE                     __end_of_put_string_usb:
 17696                           	opt stack 0
 17697                           tblptru	equ	0xFF8
 17698                           tblptrh	equ	0xFF7
 17699                           tblptrl	equ	0xFF6
 17700                           tablat	equ	0xFF5
 17701                           prodh	equ	0xFF4
 17702                           prodl	equ	0xFF3
 17703                           intcon	equ	0xFF2
 17704                           intcon2	equ	0xFF1
 17705                           postinc0	equ	0xFEE
 17706                           wreg	equ	0xFE8
 17707                           indf1	equ	0xFE7
 17708                           postinc1	equ	0xFE6
 17709                           postdec1	equ	0xFE5
 17710                           fsr1h	equ	0xFE2
 17711                           fsr1l	equ	0xFE1
 17712                           indf2	equ	0xFDF
 17713                           postinc2	equ	0xFDE
 17714                           postdec2	equ	0xFDD
 17715                           plusw2	equ	0xFDB
 17716                           fsr2h	equ	0xFDA
 17717                           fsr2l	equ	0xFD9
 17718                           status	equ	0xFD8
 17719                           
 17720 ;; *************** function _putUSBUSART *****************
 17721 ;; Defined at:
 17722 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 17723 ;; Parameters:    Size  Location     Type
 17724 ;;  data            1    wreg     PTR unsigned char 
 17725 ;;		 -> USB_task@data(1), 
 17726 ;;  length          1    0[BANK0 ] unsigned char 
 17727 ;; Auto vars:     Size  Location     Type
 17728 ;;  data            1    1[BANK0 ] PTR unsigned char 
 17729 ;;		 -> USB_task@data(1), 
 17730 ;; Return value:  Size  Location     Type
 17731 ;;		None               void
 17732 ;; Registers used:
 17733 ;;		wreg, status,2, status,0
 17734 ;; Tracked objects:
 17735 ;;		On entry : F/0
 17736 ;;		On exit  : 0/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17739 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17742 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17743 ;;Total ram usage:        2 bytes
 17744 ;; Hardware stack levels used:    1
 17745 ;; Hardware stack levels required when called:   11
 17746 ;; This function calls:
 17747 ;;		Nothing
 17748 ;; This function is called by:
 17749 ;;		_put_string_usb
 17750 ;; This function uses a non-reentrant model
 17751 ;;
 17752                           
 17753                           	psect	text80
 17754  0144C0                     __ptext80:
 17755                           	opt stack 0
 17756  0144C0                     _putUSBUSART:
 17757                           	opt stack 17
 17758                           
 17759                           ; BSR set to: 0
 17760                           ;incstack = 0
 17761                           ;putUSBUSART@data stored from wreg
 17762  0144C0  6F61               	movwf	putUSBUSART@data& (0+255),b
 17763                           
 17764                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 17765  0144C2  98A0               	bcf	4000,4,c	;volatile
 17766                           
 17767                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 17768  0144C4  501E               	movf	_cdc_trf_state,w,c
 17769  0144C6  E108               	bnz	l10908
 17770                           
 17771                           ;usb_device_cdc.c: 640: {
 17772                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17773  0144C8  C061  F112         	movff	putUSBUSART@data,_pCDCSrc
 17774  0144CC  C060  F01F         	movff	putUSBUSART@length,_cdc_tx_len
 17775  0144D0  0E01               	movlw	1
 17776  0144D2  0101               	movlb	1	; () banked
 17777  0144D4  6F2C               	movwf	_cdc_mem_type& (0+255),b
 17778                           
 17779                           ; BSR set to: 1
 17780  0144D6  6E1E               	movwf	_cdc_trf_state,c
 17781  0144D8                     l10908:
 17782                           
 17783                           ;usb_device_cdc.c: 642: }
 17784                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 17785  0144D8  88A0               	bsf	4000,4,c	;volatile
 17786  0144DA  0012               	return		;funcret
 17787  0144DC                     __end_of_putUSBUSART:
 17788                           	opt stack 0
 17789                           tblptru	equ	0xFF8
 17790                           tblptrh	equ	0xFF7
 17791                           tblptrl	equ	0xFF6
 17792                           tablat	equ	0xFF5
 17793                           prodh	equ	0xFF4
 17794                           prodl	equ	0xFF3
 17795                           intcon	equ	0xFF2
 17796                           intcon2	equ	0xFF1
 17797                           postinc0	equ	0xFEE
 17798                           wreg	equ	0xFE8
 17799                           indf1	equ	0xFE7
 17800                           postinc1	equ	0xFE6
 17801                           postdec1	equ	0xFE5
 17802                           fsr1h	equ	0xFE2
 17803                           fsr1l	equ	0xFE1
 17804                           indf2	equ	0xFDF
 17805                           postinc2	equ	0xFDE
 17806                           postdec2	equ	0xFDD
 17807                           plusw2	equ	0xFDB
 17808                           fsr2h	equ	0xFDA
 17809                           fsr2l	equ	0xFD9
 17810                           status	equ	0xFD8
 17811                           
 17812 ;; *************** function _get_string_usb *****************
 17813 ;; Defined at:
 17814 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 17815 ;; Parameters:    Size  Location     Type
 17816 ;;  s               1    wreg     PTR unsigned char 
 17817 ;;		 -> USB_task@data(1), 
 17818 ;;  len             2   12[BANK0 ] int 
 17819 ;; Auto vars:     Size  Location     Type
 17820 ;;  s               1   16[BANK0 ] PTR unsigned char 
 17821 ;;		 -> USB_task@data(1), 
 17822 ;;  rx_len          2   14[BANK0 ] int 
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  2   12[BANK0 ] int 
 17825 ;; Registers used:
 17826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17827 ;; Tracked objects:
 17828 ;;		On entry : F/0
 17829 ;;		On exit  : F/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17833 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17836 ;;Total ram usage:        5 bytes
 17837 ;; Hardware stack levels used:    1
 17838 ;; Hardware stack levels required when called:   13
 17839 ;; This function calls:
 17840 ;;		_CDCTxService
 17841 ;;		_getsUSBUSART
 17842 ;;		_is_usb_available
 17843 ;; This function is called by:
 17844 ;;		_USB_task
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           	psect	text81
 17849  0140E4                     __ptext81:
 17850                           	opt stack 0
 17851  0140E4                     _get_string_usb:
 17852                           	opt stack 16
 17853                           
 17854                           ;incstack = 0
 17855                           ;get_string_usb@s stored from wreg
 17856  0140E4  6F70               	movwf	get_string_usb@s& (0+255),b
 17857                           
 17858                           ;My_usb_cdc.c: 33: int rx_len;
 17859                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 17860  0140E6  ECB5  F0A2         	call	_is_usb_available	;wreg free
 17861  0140EA  0900               	iorlw	0
 17862  0140EC  E105               	bnz	l11472
 17863                           
 17864                           ; BSR set to: 0
 17865                           ;My_usb_cdc.c: 36: return 0;
 17866  0140EE  6B6C               	clrf	?_get_string_usb& (0+255),b
 17867  0140F0  6B6D               	clrf	(?_get_string_usb+1)& (0+255),b
 17868  0140F2  0012               	return	
 17869  0140F4                     l11470:
 17870                           
 17871                           ; BSR set to: 0
 17872  0140F4  EC03  F08F         	call	_CDCTxService	;wreg free
 17873  0140F8                     l11472:
 17874                           
 17875                           ; BSR set to: 0
 17876  0140F8  501E               	movf	_cdc_trf_state,w,c
 17877  0140FA  E1FC               	bnz	l11470
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 17881  0140FC  C06C  F067         	movff	get_string_usb@len,getsUSBUSART@len
 17882  014100  5170               	movf	get_string_usb@s& (0+255),w,b
 17883  014102  EC07  F097         	call	_getsUSBUSART
 17884  014106  6F6E               	movwf	get_string_usb@rx_len& (0+255),b
 17885  014108  6B6F               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 17886                           
 17887                           ;My_usb_cdc.c: 40: CDCTxService();
 17888  01410A  EC03  F08F         	call	_CDCTxService	;wreg free
 17889                           
 17890                           ; BSR set to: 0
 17891                           ;My_usb_cdc.c: 41: return rx_len;
 17892  01410E  C06E  F06C         	movff	get_string_usb@rx_len,?_get_string_usb
 17893  014112  C06F  F06D         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 17894                           
 17895                           ; BSR set to: 0
 17896  014116  0012               	return		;funcret
 17897  014118                     __end_of_get_string_usb:
 17898                           	opt stack 0
 17899                           tblptru	equ	0xFF8
 17900                           tblptrh	equ	0xFF7
 17901                           tblptrl	equ	0xFF6
 17902                           tablat	equ	0xFF5
 17903                           prodh	equ	0xFF4
 17904                           prodl	equ	0xFF3
 17905                           intcon	equ	0xFF2
 17906                           intcon2	equ	0xFF1
 17907                           postinc0	equ	0xFEE
 17908                           wreg	equ	0xFE8
 17909                           indf1	equ	0xFE7
 17910                           postinc1	equ	0xFE6
 17911                           postdec1	equ	0xFE5
 17912                           fsr1h	equ	0xFE2
 17913                           fsr1l	equ	0xFE1
 17914                           indf2	equ	0xFDF
 17915                           postinc2	equ	0xFDE
 17916                           postdec2	equ	0xFDD
 17917                           plusw2	equ	0xFDB
 17918                           fsr2h	equ	0xFDA
 17919                           fsr2l	equ	0xFD9
 17920                           status	equ	0xFD8
 17921                           
 17922 ;; *************** function _is_usb_available *****************
 17923 ;; Defined at:
 17924 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 17925 ;; Parameters:    Size  Location     Type
 17926 ;;		None
 17927 ;; Auto vars:     Size  Location     Type
 17928 ;;		None
 17929 ;; Return value:  Size  Location     Type
 17930 ;;                  1    wreg      unsigned char 
 17931 ;; Registers used:
 17932 ;;		wreg, status,2, status,0
 17933 ;; Tracked objects:
 17934 ;;		On entry : 0/0
 17935 ;;		On exit  : F/0
 17936 ;;		Unchanged: 0/0
 17937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17942 ;;Total ram usage:        1 bytes
 17943 ;; Hardware stack levels used:    1
 17944 ;; Hardware stack levels required when called:   11
 17945 ;; This function calls:
 17946 ;;		Nothing
 17947 ;; This function is called by:
 17948 ;;		_put_string_usb
 17949 ;;		_get_string_usb
 17950 ;; This function uses a non-reentrant model
 17951 ;;
 17952                           
 17953                           	psect	text82
 17954  01456A                     __ptext82:
 17955                           	opt stack 0
 17956  01456A                     _is_usb_available:
 17957                           	opt stack 17
 17958                           
 17959                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;incstack = 0
 17963  01456A  0100               	movlb	0	; () banked
 17964  01456C  6B60               	clrf	_is_usb_available$4449& (0+255),b
 17965                           
 17966                           ; BSR set to: 0
 17967  01456E  0E1F               	movlw	31
 17968  014570  641B               	cpfsgt	_USBDeviceState,c	;volatile
 17969  014572  D004               	goto	l1360
 17970                           
 17971                           ; BSR set to: 0
 17972  014574  B265               	btfsc	3941,1,c	;volatile
 17973  014576  D002               	goto	l1360
 17974                           
 17975                           ; BSR set to: 0
 17976  014578  0E01               	movlw	1
 17977  01457A  6F60               	movwf	_is_usb_available$4449& (0+255),b
 17978  01457C                     l1360:
 17979                           
 17980                           ; BSR set to: 0
 17981  01457C  5160               	movf	_is_usb_available$4449& (0+255),w,b
 17982                           
 17983                           ; BSR set to: 0
 17984  01457E  0012               	return		;funcret
 17985  014580                     __end_of_is_usb_available:
 17986                           	opt stack 0
 17987                           tblptru	equ	0xFF8
 17988                           tblptrh	equ	0xFF7
 17989                           tblptrl	equ	0xFF6
 17990                           tablat	equ	0xFF5
 17991                           prodh	equ	0xFF4
 17992                           prodl	equ	0xFF3
 17993                           intcon	equ	0xFF2
 17994                           intcon2	equ	0xFF1
 17995                           postinc0	equ	0xFEE
 17996                           wreg	equ	0xFE8
 17997                           indf1	equ	0xFE7
 17998                           postinc1	equ	0xFE6
 17999                           postdec1	equ	0xFE5
 18000                           fsr1h	equ	0xFE2
 18001                           fsr1l	equ	0xFE1
 18002                           indf2	equ	0xFDF
 18003                           postinc2	equ	0xFDE
 18004                           postdec2	equ	0xFDD
 18005                           plusw2	equ	0xFDB
 18006                           fsr2h	equ	0xFDA
 18007                           fsr2l	equ	0xFD9
 18008                           status	equ	0xFD8
 18009                           
 18010 ;; *************** function _getsUSBUSART *****************
 18011 ;; Defined at:
 18012 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 18013 ;; Parameters:    Size  Location     Type
 18014 ;;  buffer          1    wreg     PTR unsigned char 
 18015 ;;		 -> USB_task@data(1), 
 18016 ;;  len             1    7[BANK0 ] unsigned char 
 18017 ;; Auto vars:     Size  Location     Type
 18018 ;;  buffer          1    9[BANK0 ] PTR unsigned char 
 18019 ;;		 -> USB_task@data(1), 
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      unsigned char 
 18022 ;; Registers used:
 18023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18024 ;; Tracked objects:
 18025 ;;		On entry : F/0
 18026 ;;		On exit  : F/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18029 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18030 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18031 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18032 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18033 ;;Total ram usage:        5 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:   12
 18036 ;; This function calls:
 18037 ;;		_USBTransferOnePacket
 18038 ;; This function is called by:
 18039 ;;		_get_string_usb
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           	psect	text83
 18044  012E0E                     __ptext83:
 18045                           	opt stack 0
 18046  012E0E                     _getsUSBUSART:
 18047                           	opt stack 16
 18048                           
 18049                           ; BSR set to: 0
 18050                           ;incstack = 0
 18051                           ;getsUSBUSART@buffer stored from wreg
 18052  012E0E  6F69               	movwf	getsUSBUSART@buffer& (0+255),b
 18053                           
 18054                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 18055  012E10  6A1D               	clrf	_cdc_rx_len,c
 18056                           
 18057                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 18058  012E12  0101               	movlb	1	; () banked
 18059  012E14  5119               	movf	_CDCDataOutHandle& (0+255),w,b
 18060  012E16  111A               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18061  012E18  E008               	bz	l1864
 18062                           
 18063                           ; BSR set to: 1
 18064  012E1A  C119  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18065  012E1E  C11A  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18066  012E22  EC73  F08F         	call	PL320	;call to abstracted procedure
 18067  012E26  6F6A               	movwf	_getsUSBUSART$6266& (0+255),b
 18068  012E28  D002               	goto	L6
 18069  012E2A                     l1864:
 18070                           
 18071                           ; BSR set to: 1
 18072  012E2A  0100               	movlb	0	; () banked
 18073  012E2C  6B6A               	clrf	_getsUSBUSART$6266& (0+255),b
 18074  012E2E                     L6:
 18075  012E2E  6B6B               	clrf	(_getsUSBUSART$6266+1)& (0+255),b
 18076                           
 18077                           ; BSR set to: 0
 18078  012E30  516A               	movf	_getsUSBUSART$6266& (0+255),w,b
 18079  012E32  116B               	iorwf	(_getsUSBUSART$6266+1)& (0+255),w,b
 18080  012E34  E12A               	bnz	l10932
 18081                           
 18082                           ; BSR set to: 0
 18083                           ;usb_device_cdc.c: 547: {
 18084                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18085  012E36  D82B               	call	PL214	;call to abstracted procedure
 18086  012E38  0100               	movlb	0	; () banked
 18087  012E3A  5167               	movf	getsUSBUSART@len& (0+255),w,b
 18088  012E3C  5CDE               	subwf	postinc2,w,c
 18089  012E3E  E204               	bc	l10922
 18090                           
 18091                           ; BSR set to: 0
 18092                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18093  012E40  D826               	call	PL214	;call to abstracted procedure
 18094  012E42  50DF               	movf	indf2,w,c
 18095  012E44  0100               	movlb	0	; () banked
 18096  012E46  6F67               	movwf	getsUSBUSART@len& (0+255),b
 18097  012E48                     l10922:
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18101  012E48  6A1D               	clrf	_cdc_rx_len,c
 18102  012E4A  D00D               	goto	l10928
 18103  012E4C                     l10924:
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18107  012E4C  0E64               	movlw	low _cdc_data_rx
 18108  012E4E  241D               	addwf	_cdc_rx_len,w,c
 18109  012E50  6ED9               	movwf	fsr2l,c
 18110  012E52  6ADA               	clrf	fsr2h,c
 18111  012E54  0E03               	movlw	high _cdc_data_rx
 18112  012E56  22DA               	addwfc	fsr2h,f,c
 18113  012E58  5169               	movf	getsUSBUSART@buffer& (0+255),w,b
 18114  012E5A  241D               	addwf	_cdc_rx_len,w,c
 18115  012E5C  6EE1               	movwf	fsr1l,c
 18116  012E5E  6AE2               	clrf	fsr1h,c
 18117  012E60  CFDF FFE7          	movff	indf2,indf1
 18118                           
 18119                           ; BSR set to: 0
 18120  012E64  2A1D               	incf	_cdc_rx_len,f,c
 18121  012E66                     l10928:
 18122                           
 18123                           ; BSR set to: 0
 18124  012E66  5167               	movf	getsUSBUSART@len& (0+255),w,b
 18125  012E68  5C1D               	subwf	_cdc_rx_len,w,c
 18126  012E6A  E3F0               	bnc	l10924
 18127                           
 18128                           ; BSR set to: 0
 18129                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18130  012E6C  0E00               	movlw	0
 18131  012E6E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 18132  012E70  0E64               	movlw	low _cdc_data_rx
 18133  012E72  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 18134  012E74  0E03               	movlw	high _cdc_data_rx
 18135  012E76  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18136  012E78  0E40               	movlw	64
 18137  012E7A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 18138  012E7C  0E02               	movlw	2
 18139  012E7E  ECFE  F094         	call	_USBTransferOnePacket
 18140  012E82  C060  F119         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18141  012E86  C061  F11A         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18142  012E8A                     l10932:
 18143                           
 18144                           ; BSR set to: 0
 18145                           ;usb_device_cdc.c: 567: }
 18146                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 18147  012E8A  501D               	movf	_cdc_rx_len,w,c
 18148                           
 18149                           ; BSR set to: 0
 18150  012E8C  0012               	return		;funcret
 18151  012E8E                     __end_of_getsUSBUSART:
 18152                           	opt stack 0
 18153  012E8E                     PL214:
 18154                           	opt stack 16
 18155  012E8E  0101               	movlb	1	; () banked
 18156  012E90  EE20 F001          	lfsr	2,1
 18157  012E94  5119               	movf	_CDCDataOutHandle& (0+255),w,b
 18158  012E96  26D9               	addwf	fsr2l,f,c
 18159  012E98  511A               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18160  012E9A  22DA               	addwfc	fsr2h,f,c
 18161  012E9C  0012               	return	
 18162  012E9E                     __end_ofPL214:
 18163                           	opt stack 0
 18164                           tblptru	equ	0xFF8
 18165                           tblptrh	equ	0xFF7
 18166                           tblptrl	equ	0xFF6
 18167                           tablat	equ	0xFF5
 18168                           prodh	equ	0xFF4
 18169                           prodl	equ	0xFF3
 18170                           intcon	equ	0xFF2
 18171                           intcon2	equ	0xFF1
 18172                           postinc0	equ	0xFEE
 18173                           wreg	equ	0xFE8
 18174                           indf1	equ	0xFE7
 18175                           postinc1	equ	0xFE6
 18176                           postdec1	equ	0xFE5
 18177                           fsr1h	equ	0xFE2
 18178                           fsr1l	equ	0xFE1
 18179                           indf2	equ	0xFDF
 18180                           postinc2	equ	0xFDE
 18181                           postdec2	equ	0xFDD
 18182                           plusw2	equ	0xFDB
 18183                           fsr2h	equ	0xFDA
 18184                           fsr2l	equ	0xFD9
 18185                           status	equ	0xFD8
 18186                           
 18187 ;; *************** function _CDCTxService *****************
 18188 ;; Defined at:
 18189 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 18190 ;; Parameters:    Size  Location     Type
 18191 ;;		None
 18192 ;; Auto vars:     Size  Location     Type
 18193 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 18194 ;;  i               1    9[BANK0 ] unsigned char 
 18195 ;; Return value:  Size  Location     Type
 18196 ;;		None               void
 18197 ;; Registers used:
 18198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18199 ;; Tracked objects:
 18200 ;;		On entry : 0/0
 18201 ;;		On exit  : F/0
 18202 ;;		Unchanged: 0/0
 18203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18205 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18207 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18208 ;;Total ram usage:        4 bytes
 18209 ;; Hardware stack levels used:    1
 18210 ;; Hardware stack levels required when called:   12
 18211 ;; This function calls:
 18212 ;;		_USBTransferOnePacket
 18213 ;; This function is called by:
 18214 ;;		_put_string_usb
 18215 ;;		_get_string_usb
 18216 ;; This function uses a non-reentrant model
 18217 ;;
 18218                           
 18219                           	psect	text84
 18220  011E06                     __ptext84:
 18221                           	opt stack 0
 18222  011E06                     _CDCTxService:
 18223                           	opt stack 16
 18224                           
 18225                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 18226                           ;usb_device_cdc.c: 896: uint8_t i;
 18227                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 18228                           
 18229                           ; BSR set to: 0
 18230                           ;incstack = 0
 18231  011E06  98A0               	bcf	4000,4,c	;volatile
 18232                           
 18233                           ;usb_device_cdc.c: 900: {};
 18234                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 18235  011E08  0101               	movlb	1	; () banked
 18236  011E0A  5117               	movf	_CDCDataInHandle& (0+255),w,b
 18237  011E0C  1118               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 18238  011E0E  E007               	bz	l1894
 18239                           
 18240                           ; BSR set to: 1
 18241  011E10  C117  FFD9         	movff	_CDCDataInHandle,fsr2l
 18242  011E14  C118  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 18243  011E18  D866               	call	PL320	;call to abstracted procedure
 18244  011E1A  6F67               	movwf	_CDCTxService$6314& (0+255),b
 18245  011E1C  D002               	goto	L7
 18246  011E1E                     l1894:
 18247                           
 18248                           ; BSR set to: 1
 18249  011E1E  0100               	movlb	0	; () banked
 18250  011E20  6B67               	clrf	_CDCTxService$6314& (0+255),b
 18251  011E22                     L7:
 18252  011E22  6B68               	clrf	(_CDCTxService$6314+1)& (0+255),b
 18253                           
 18254                           ; BSR set to: 0
 18255  011E24  5167               	movf	_CDCTxService$6314& (0+255),w,b
 18256  011E26  1168               	iorwf	(_CDCTxService$6314+1)& (0+255),w,b
 18257  011E28  E002               	bz	l10836
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;usb_device_cdc.c: 903: {
 18261                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 18262  011E2A  88A0               	bsf	4000,4,c	;volatile
 18263                           
 18264                           ;usb_device_cdc.c: 905: return;
 18265  011E2C  0012               	return	
 18266  011E2E                     l10836:
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;usb_device_cdc.c: 906: }
 18270                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 18271  011E2E  0E03               	movlw	3
 18272  011E30  181E               	xorwf	_cdc_trf_state,w,c
 18273  011E32  E101               	bnz	l10840
 18274                           
 18275                           ; BSR set to: 0
 18276                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 18277  011E34  6A1E               	clrf	_cdc_trf_state,c
 18278  011E36                     l10840:
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 18282  011E36  501E               	movf	_cdc_trf_state,w,c
 18283  011E38  E102               	bnz	l10844
 18284                           
 18285                           ; BSR set to: 0
 18286                           ;usb_device_cdc.c: 920: {
 18287                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 18288  011E3A  88A0               	bsf	4000,4,c	;volatile
 18289                           
 18290                           ;usb_device_cdc.c: 922: return;
 18291  011E3C  0012               	return	
 18292  011E3E                     l10844:
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;usb_device_cdc.c: 923: }
 18296                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 18297  011E3E  0E02               	movlw	2
 18298  011E40  181E               	xorwf	_cdc_trf_state,w,c
 18299  011E42  E10D               	bnz	l10850
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;usb_device_cdc.c: 929: {
 18303                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 18304  011E44  0E01               	movlw	1
 18305  011E46  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 18306  011E48  0E00               	movlw	0
 18307  011E4A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 18308  011E4C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18309  011E4E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 18310  011E50  0E02               	movlw	2
 18311  011E52  ECFE  F094         	call	_USBTransferOnePacket
 18312  011E56  D84C               	call	PL348	;call to abstracted procedure
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 18316  011E58  0E03               	movlw	3
 18317  011E5A  6E1E               	movwf	_cdc_trf_state,c
 18318                           
 18319                           ;usb_device_cdc.c: 933: }
 18320  011E5C  D032               	goto	l10894
 18321  011E5E                     l10850:
 18322                           
 18323                           ; BSR set to: 0
 18324                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 18325  011E5E  041E               	decf	_cdc_trf_state,w,c
 18326  011E60  E130               	bnz	l10894
 18327                           
 18328                           ; BSR set to: 0
 18329                           ;usb_device_cdc.c: 935: {
 18330                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 18331  011E62  0E40               	movlw	64
 18332  011E64  641F               	cpfsgt	_cdc_tx_len,c
 18333  011E66  D002               	goto	l1903
 18334                           
 18335                           ; BSR set to: 0
 18336                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 18337  011E68  6F6A               	movwf	CDCTxService@byte_to_send& (0+255),b
 18338  011E6A  D002               	goto	l10856
 18339  011E6C                     l1903:
 18340                           
 18341                           ; BSR set to: 0
 18342                           ;usb_device_cdc.c: 941: else
 18343                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 18344  011E6C  C01F  F06A         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 18345  011E70                     l10856:
 18346                           
 18347                           ; BSR set to: 0
 18348                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 18349  011E70  516A               	movf	CDCTxService@byte_to_send& (0+255),w,b
 18350  011E72  5E1F               	subwf	_cdc_tx_len,f,c
 18351                           
 18352                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 18353  011E74  0EA4               	movlw	low _cdc_data_tx
 18354  011E76  0101               	movlb	1	; () banked
 18355  011E78  6F0F               	movwf	_pCDCDst& (0+255),b
 18356  011E7A  0E03               	movlw	high _cdc_data_tx
 18357  011E7C  6F10               	movwf	(_pCDCDst+1)& (0+255),b
 18358                           
 18359                           ; BSR set to: 1
 18360                           ;usb_device_cdc.c: 951: i = byte_to_send;
 18361  011E7E  C06A  F069         	movff	CDCTxService@byte_to_send,CDCTxService@i
 18362                           
 18363                           ; BSR set to: 1
 18364                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 18365  011E82  512C               	movf	_cdc_mem_type& (0+255),w,b
 18366  011E84  E002               	bz	l10872
 18367  011E86  D006               	goto	l10882
 18368  011E88                     l10864:
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;usb_device_cdc.c: 955: {
 18372                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 18373                           
 18374                           ; BSR set to: 1
 18375                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 18376                           
 18377                           ; BSR set to: 1
 18378                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 18379                           
 18380                           ; BSR set to: 1
 18381                           ;usb_device_cdc.c: 959: i--;
 18382  011E88  D81E               	call	PL82	;call to abstracted procedure
 18383  011E8A                     l10872:
 18384  011E8A  0100               	movlb	0	; () banked
 18385  011E8C  5169               	movf	CDCTxService@i& (0+255),w,b
 18386  011E8E  E005               	bz	l10884
 18387  011E90  D7FB               	goto	l10864
 18388  011E92                     l10874:
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;usb_device_cdc.c: 965: {
 18392                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 18393                           
 18394                           ; BSR set to: 1
 18395                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 18396                           
 18397                           ; BSR set to: 1
 18398                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 18399                           
 18400                           ; BSR set to: 1
 18401                           ;usb_device_cdc.c: 969: i--;
 18402  011E92  D819               	call	PL82	;call to abstracted procedure
 18403  011E94                     l10882:
 18404  011E94  0100               	movlb	0	; () banked
 18405  011E96  5169               	movf	CDCTxService@i& (0+255),w,b
 18406  011E98  E1FC               	bnz	l10874
 18407  011E9A                     l10884:
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;usb_device_cdc.c: 970: }
 18411                           ;usb_device_cdc.c: 971: }
 18412                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 18413  011E9A  501F               	movf	_cdc_tx_len,w,c
 18414  011E9C  E106               	bnz	l10892
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;usb_device_cdc.c: 978: {
 18418                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 18419  011E9E  0E40               	movlw	64
 18420  011EA0  196A               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 18421                           
 18422                           ; BSR set to: 0
 18423                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 18424  011EA2  0E02               	movlw	2
 18425  011EA4  A4D8               	btfss	status,2,c
 18426                           
 18427                           ; BSR set to: 0
 18428                           ;usb_device_cdc.c: 981: else
 18429                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 18430  011EA6  0E03               	movlw	3
 18431  011EA8  6E1E               	movwf	_cdc_trf_state,c
 18432  011EAA                     l10892:
 18433                           
 18434                           ; BSR set to: 0
 18435                           ;usb_device_cdc.c: 983: }
 18436                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 18437  011EAA  0E01               	movlw	1
 18438  011EAC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 18439  011EAE  0EA4               	movlw	low _cdc_data_tx
 18440  011EB0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 18441  011EB2  0E03               	movlw	high _cdc_data_tx
 18442  011EB4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18443  011EB6  C06A  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 18444  011EBA  0E02               	movlw	2
 18445  011EBC  ECFE  F094         	call	_USBTransferOnePacket
 18446  011EC0  D817               	call	PL348	;call to abstracted procedure
 18447  011EC2                     l10894:
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;usb_device_cdc.c: 986: }
 18451                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 18452  011EC2  88A0               	bsf	4000,4,c	;volatile
 18453                           
 18454                           ; BSR set to: 0
 18455  011EC4  0012               	return		;funcret
 18456  011EC6                     __end_of_CDCTxService:
 18457                           	opt stack 0
 18458  011EC6                     PL82:
 18459                           	opt stack 16
 18460  011EC6  0101               	movlb	1	; () banked
 18461  011EC8  5112               	movf	_pCDCSrc& (0+255),w,b
 18462  011ECA  6ED9               	movwf	fsr2l,c
 18463  011ECC  6ADA               	clrf	fsr2h,c
 18464  011ECE  C10F  FFE1         	movff	_pCDCDst,fsr1l
 18465  011ED2  C110  FFE2         	movff	_pCDCDst+1,fsr1h
 18466  011ED6  CFDF FFE7          	movff	indf2,indf1
 18467  011EDA  4B0F               	infsnz	_pCDCDst& (0+255),f,b
 18468  011EDC  2B10               	incf	(_pCDCDst+1)& (0+255),f,b
 18469  011EDE  2B12               	incf	_pCDCSrc& (0+255),f,b
 18470  011EE0  0100               	movlb	0	; () banked
 18471  011EE2  0769               	decf	CDCTxService@i& (0+255),f,b
 18472  011EE4  0012               	return	
 18473  011EE6                     __end_ofPL82:
 18474                           	opt stack 0
 18475  011EE6                     PL320:
 18476                           	opt stack 16
 18477  011EE6  0E01               	movlw	1
 18478  011EE8  AEDF               	btfss	indf2,7,c
 18479  011EEA  0E00               	movlw	0
 18480  011EEC  0100               	movlb	0	; () banked
 18481  011EEE  0012               	return	
 18482  011EF0                     __end_ofPL320:
 18483                           	opt stack 0
 18484  011EF0                     PL348:
 18485                           	opt stack 16
 18486  011EF0  C060  F117         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 18487  011EF4  C061  F118         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 18488  011EF8  0012               	return	
 18489  011EFA                     __end_ofPL348:
 18490                           	opt stack 0
 18491                           tblptru	equ	0xFF8
 18492                           tblptrh	equ	0xFF7
 18493                           tblptrl	equ	0xFF6
 18494                           tablat	equ	0xFF5
 18495                           prodh	equ	0xFF4
 18496                           prodl	equ	0xFF3
 18497                           intcon	equ	0xFF2
 18498                           intcon2	equ	0xFF1
 18499                           postinc0	equ	0xFEE
 18500                           wreg	equ	0xFE8
 18501                           indf1	equ	0xFE7
 18502                           postinc1	equ	0xFE6
 18503                           postdec1	equ	0xFE5
 18504                           fsr1h	equ	0xFE2
 18505                           fsr1l	equ	0xFE1
 18506                           indf2	equ	0xFDF
 18507                           postinc2	equ	0xFDE
 18508                           postdec2	equ	0xFDD
 18509                           plusw2	equ	0xFDB
 18510                           fsr2h	equ	0xFDA
 18511                           fsr2l	equ	0xFD9
 18512                           status	equ	0xFD8
 18513                           
 18514 ;; *************** function _USBTransferOnePacket *****************
 18515 ;; Defined at:
 18516 ;;		line 995 in file "../My_library/usb/usb_device.c"
 18517 ;; Parameters:    Size  Location     Type
 18518 ;;  ep              1    wreg     unsigned char 
 18519 ;;  dir             1    0[BANK0 ] unsigned char 
 18520 ;;  data            2    1[BANK0 ] PTR unsigned char 
 18521 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18522 ;;  len             1    3[BANK0 ] unsigned char 
 18523 ;; Auto vars:     Size  Location     Type
 18524 ;;  ep              1    4[BANK0 ] unsigned char 
 18525 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 18526 ;;		 -> NULL(0), BDT(48), 
 18527 ;; Return value:  Size  Location     Type
 18528 ;;                  2    0[BANK0 ] PTR void 
 18529 ;; Registers used:
 18530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18531 ;; Tracked objects:
 18532 ;;		On entry : F/0
 18533 ;;		On exit  : F/0
 18534 ;;		Unchanged: 0/0
 18535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18537 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18539 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18540 ;;Total ram usage:        7 bytes
 18541 ;; Hardware stack levels used:    1
 18542 ;; Hardware stack levels required when called:   11
 18543 ;; This function calls:
 18544 ;;		Nothing
 18545 ;; This function is called by:
 18546 ;;		_getsUSBUSART
 18547 ;;		_CDCTxService
 18548 ;; This function uses a non-reentrant model
 18549 ;;
 18550                           
 18551                           	psect	text85
 18552  0129FC                     __ptext85:
 18553                           	opt stack 0
 18554  0129FC                     _USBTransferOnePacket:
 18555                           	opt stack 16
 18556                           
 18557                           ; BSR set to: 0
 18558                           ;incstack = 0
 18559                           ;USBTransferOnePacket@ep stored from wreg
 18560  0129FC  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 18561                           
 18562                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18563                           ;usb_device.c: 1000: if(dir != 0)
 18564  0129FE  0100               	movlb	0	; () banked
 18565  012A00  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18566  012A02  E003               	bz	l10282
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;usb_device.c: 1001: {
 18570                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18571  012A04  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18572  012A06  D837               	call	PL46	;call to abstracted procedure
 18573  012A08  D002               	goto	L9
 18574  012A0A                     l10282:
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;usb_device.c: 1005: else
 18578                           ;usb_device.c: 1006: {
 18579                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18580  012A0A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18581  012A0C  D82C               	call	PL22	;call to abstracted procedure
 18582  012A0E                     L9:
 18583  012A0E  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 18584  012A12  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 18585                           
 18586                           ; BSR set to: 0
 18587                           ;usb_device.c: 1009: }
 18588                           ;usb_device.c: 1013: if(handle == 0)
 18589  012A16  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18590  012A18  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18591  012A1A  E103               	bnz	l10288
 18592                           
 18593                           ; BSR set to: 0
 18594                           ;usb_device.c: 1014: {
 18595                           ;usb_device.c: 1015: return 0;
 18596  012A1C  6B60               	clrf	?_USBTransferOnePacket& (0+255),b
 18597  012A1E  6B61               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 18598  012A20  0012               	return	
 18599  012A22                     l10288:
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;usb_device.c: 1016: }
 18603                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18604  012A22  EE20 F002          	lfsr	2,2
 18605  012A26  D832               	call	PL330	;call to abstracted procedure
 18606  012A28  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18607  012A2C  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18608                           
 18609                           ;usb_device.c: 1030: handle->CNT = len;
 18610  012A30  EE20 F001          	lfsr	2,1
 18611  012A34  D82B               	call	PL330	;call to abstracted procedure
 18612  012A36  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 18613                           
 18614                           ; BSR set to: 0
 18615                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18616  012A3A  D823               	call	PL272	;call to abstracted procedure
 18617  012A3C  0E40               	movlw	64
 18618  012A3E  16DF               	andwf	indf2,f,c
 18619                           
 18620                           ; BSR set to: 0
 18621                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18622  012A40  D820               	call	PL272	;call to abstracted procedure
 18623  012A42  0E00               	movlw	0
 18624  012A44  86DB               	bsf	plusw2,3,c
 18625                           
 18626                           ; BSR set to: 0
 18627                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18628  012A46  D81D               	call	PL272	;call to abstracted procedure
 18629  012A48  8EDB               	bsf	plusw2,7,c
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;usb_device.c: 1036: if(dir != 0)
 18633  012A4A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18634  012A4C  E003               	bz	l10300
 18635                           
 18636                           ; BSR set to: 0
 18637                           ;usb_device.c: 1037: {
 18638                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18639  012A4E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18640  012A50  D812               	call	PL46	;call to abstracted procedure
 18641  012A52  D002               	goto	L10
 18642  012A54                     l10300:
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;usb_device.c: 1041: else
 18646                           ;usb_device.c: 1042: {
 18647                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18648  012A54  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18649  012A56  D807               	call	PL22	;call to abstracted procedure
 18650  012A58                     L10:
 18651  012A58  0E04               	movlw	4
 18652  012A5A  1ADF               	xorwf	indf2,f,c
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;usb_device.c: 1045: }
 18656                           ;usb_device.c: 1046: return (void*)handle;
 18657  012A5C  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18658  012A60  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18659                           
 18660                           ; BSR set to: 0
 18661  012A64  0C04               	retlw	4	;funcret
 18662  012A66                     __end_of_USBTransferOnePacket:
 18663                           	opt stack 0
 18664  012A66                     PL22:
 18665                           	opt stack 16
 18666  012A66  0D02               	mullw	2
 18667  012A68  0E00               	movlw	low _pBDTEntryOut
 18668  012A6A  24F3               	addwf	prodl,w,c
 18669  012A6C  6ED9               	movwf	fsr2l,c
 18670  012A6E  0E01               	movlw	high _pBDTEntryOut
 18671  012A70  20F4               	addwfc	prodh,w,c
 18672  012A72  6EDA               	movwf	fsr2h,c
 18673  012A74  0012               	return	
 18674  012A76                     __end_ofPL22:
 18675                           	opt stack 0
 18676  012A76                     PL46:
 18677                           	opt stack 16
 18678  012A76  0D02               	mullw	2
 18679  012A78  50F3               	movf	prodl,w,c
 18680  012A7A  0F10               	addlw	low _pBDTEntryIn
 18681  012A7C  6ED9               	movwf	fsr2l,c
 18682  012A7E  6ADA               	clrf	fsr2h,c
 18683  012A80  0012               	return	
 18684  012A82                     __end_ofPL46:
 18685                           	opt stack 0
 18686  012A82                     PL272:
 18687                           	opt stack 16
 18688  012A82  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18689  012A86  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18690  012A8A  0012               	return	
 18691  012A8C                     __end_ofPL272:
 18692                           	opt stack 0
 18693  012A8C                     PL330:
 18694                           	opt stack 16
 18695  012A8C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18696  012A8E  26D9               	addwf	fsr2l,f,c
 18697  012A90  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18698  012A92  22DA               	addwfc	fsr2h,f,c
 18699  012A94  0012               	return	
 18700  012A96                     __end_ofPL330:
 18701                           	opt stack 0
 18702                           tblptru	equ	0xFF8
 18703                           tblptrh	equ	0xFF7
 18704                           tblptrl	equ	0xFF6
 18705                           tablat	equ	0xFF5
 18706                           prodh	equ	0xFF4
 18707                           prodl	equ	0xFF3
 18708                           intcon	equ	0xFF2
 18709                           intcon2	equ	0xFF1
 18710                           postinc0	equ	0xFEE
 18711                           wreg	equ	0xFE8
 18712                           indf1	equ	0xFE7
 18713                           postinc1	equ	0xFE6
 18714                           postdec1	equ	0xFE5
 18715                           fsr1h	equ	0xFE2
 18716                           fsr1l	equ	0xFE1
 18717                           indf2	equ	0xFDF
 18718                           postinc2	equ	0xFDE
 18719                           postdec2	equ	0xFDD
 18720                           plusw2	equ	0xFDB
 18721                           fsr2h	equ	0xFDA
 18722                           fsr2l	equ	0xFD9
 18723                           status	equ	0xFD8
 18724                           
 18725 ;; *************** function _ST7032_task *****************
 18726 ;; Defined at:
 18727 ;;		line 102 in file "../My_library/My_ST7032.c"
 18728 ;; Parameters:    Size  Location     Type
 18729 ;;		None
 18730 ;; Auto vars:     Size  Location     Type
 18731 ;;  data            1   17[BANK0 ] unsigned char 
 18732 ;; Return value:  Size  Location     Type
 18733 ;;		None               void
 18734 ;; Registers used:
 18735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18736 ;; Tracked objects:
 18737 ;;		On entry : 0/1
 18738 ;;		On exit  : E/0
 18739 ;;		Unchanged: 0/0
 18740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18743 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18744 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18745 ;;Total ram usage:        3 bytes
 18746 ;; Hardware stack levels used:    1
 18747 ;; Hardware stack levels required when called:   13
 18748 ;; This function calls:
 18749 ;;		_ringbuf_num
 18750 ;;		_ringbuf_pop
 18751 ;; This function is called by:
 18752 ;;		_main
 18753 ;; This function uses a non-reentrant model
 18754 ;;
 18755                           
 18756                           	psect	text86
 18757  011D0C                     __ptext86:
 18758                           	opt stack 0
 18759  011D0C                     _ST7032_task:
 18760                           	opt stack 17
 18761                           
 18762                           ;My_ST7032.c: 103: if ((SSP1CON2 & 0x1F) | (SSP1STAT & 0x05)) {
 18763                           
 18764                           ; BSR set to: 0
 18765                           ;incstack = 0
 18766  011D0C  CFC7 F06F          	movff	4039,??_ST7032_task	;volatile
 18767  011D10  0E05               	movlw	5
 18768  011D12  0100               	movlb	0	; () banked
 18769  011D14  176F               	andwf	??_ST7032_task& (0+255),f,b
 18770  011D16  50C5               	movf	4037,w,c	;volatile
 18771  011D18  0B1F               	andlw	31
 18772  011D1A  116F               	iorwf	??_ST7032_task& (0+255),w,b
 18773  011D1C  E064               	bz	l11678
 18774  011D1E  0012               	return	
 18775  011D20                     l11634:
 18776                           
 18777                           ; BSR set to: 1
 18778                           ;My_ST7032.c: 112: if (ringbuf_num(&lcd_tx)) {
 18779  011D20  0E82               	movlw	low _lcd_tx
 18780  011D22  0100               	movlb	0	; () banked
 18781  011D24  6F60               	movwf	ringbuf_num@rb& (0+255),b
 18782  011D26  0E01               	movlw	high _lcd_tx
 18783  011D28  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 18784  011D2A  ECDE  F097         	call	_ringbuf_num	;wreg free
 18785  011D2E  5160               	movf	?_ringbuf_num& (0+255),w,b
 18786  011D30  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 18787  011D32  B4D8               	btfsc	status,2,c
 18788  011D34  0012               	return	
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;My_ST7032.c: 113: st7032_state = ST7032_START;
 18792  011D36  0E01               	movlw	1
 18793  011D38  0101               	movlb	1	; () banked
 18794  011D3A  6F24               	movwf	ST7032_task@st7032_state& (0+255),b
 18795  011D3C  0C01               	retlw	1
 18796  011D3E                     l11638:
 18797                           
 18798                           ; BSR set to: 1
 18799                           ;My_ST7032.c: 117: st7032_flag = 1;
 18800  011D3E  0E01               	movlw	1
 18801  011D40  6F32               	movwf	_st7032_flag& (0+255),b
 18802                           
 18803                           ; BSR set to: 1
 18804                           ;My_ST7032.c: 118: SSP1CON2bits.SEN = 1;
 18805  011D42  80C5               	bsf	4037,0,c	;volatile
 18806                           
 18807                           ;My_ST7032.c: 119: st7032_state = ST7032_SEND;
 18808  011D44  0E02               	movlw	2
 18809  011D46  6F24               	movwf	ST7032_task@st7032_state& (0+255),b
 18810                           
 18811                           ;My_ST7032.c: 120: break;
 18812  011D48  0C02               	retlw	2
 18813  011D4A                     l11642:
 18814                           
 18815                           ; BSR set to: 1
 18816                           ;My_ST7032.c: 122: if (!st7032_flag) {
 18817  011D4A  5132               	movf	_st7032_flag& (0+255),w,b
 18818  011D4C  E101               	bnz	l11646
 18819  011D4E  0012               	return	
 18820  011D50                     l11646:
 18821                           
 18822                           ; BSR set to: 1
 18823                           ;My_ST7032.c: 125: }
 18824                           ;My_ST7032.c: 126: char data = ringbuf_pop(&lcd_tx);
 18825  011D50  0E82               	movlw	low _lcd_tx
 18826  011D52  0100               	movlb	0	; () banked
 18827  011D54  D854               	call	PL368	;call to abstracted procedure
 18828  011D56  EC4F  F097         	call	_ringbuf_pop	;wreg free
 18829  011D5A  6F71               	movwf	ST7032_task@data& (0+255),b
 18830                           
 18831                           ; BSR set to: 0
 18832                           ;My_ST7032.c: 127: if (data != 0) {
 18833  011D5C  5171               	movf	ST7032_task@data& (0+255),w,b
 18834  011D5E  E005               	bz	l11652
 18835                           
 18836                           ; BSR set to: 0
 18837                           ;My_ST7032.c: 128: st7032_flag = 0;
 18838  011D60  0101               	movlb	1	; () banked
 18839  011D62  6B32               	clrf	_st7032_flag& (0+255),b
 18840                           
 18841                           ;My_ST7032.c: 129: SSP1BUF = data;
 18842  011D64  C071  FFC9         	movff	ST7032_task@data,4041	;volatile
 18843                           
 18844                           ;My_ST7032.c: 130: } else {
 18845  011D68  0012               	return	
 18846  011D6A                     l11652:
 18847                           
 18848                           ; BSR set to: 0
 18849                           ;My_ST7032.c: 131: wait = ringbuf_pop(&lcd_tx);
 18850  011D6A  0E82               	movlw	low _lcd_tx
 18851  011D6C  D848               	call	PL368	;call to abstracted procedure
 18852  011D6E  EC4F  F097         	call	_ringbuf_pop	;wreg free
 18853  011D72  0101               	movlb	1	; () banked
 18854  011D74  6F15               	movwf	ST7032_task@wait& (0+255),b
 18855  011D76  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18856                           
 18857                           ;My_ST7032.c: 132: switch (wait) {
 18858  011D78  D016               	goto	l11664
 18859  011D7A                     l1145:
 18860                           
 18861                           ; BSR set to: 0
 18862                           ;My_ST7032.c: 134: wait = 0;
 18863  011D7A  0101               	movlb	1	; () banked
 18864  011D7C  6B15               	clrf	ST7032_task@wait& (0+255),b
 18865  011D7E  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18866                           
 18867                           ;My_ST7032.c: 135: break;
 18868  011D80  D022               	goto	l11666
 18869  011D82                     l11654:
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;My_ST7032.c: 137: wait = 2;
 18873  011D82  0101               	movlb	1	; () banked
 18874  011D84  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18875  011D86  0E02               	movlw	2
 18876  011D88  D00C               	goto	L13
 18877  011D8A                     l11656:
 18878                           
 18879                           ; BSR set to: 0
 18880                           ;My_ST7032.c: 140: wait = 25;
 18881  011D8A  0101               	movlb	1	; () banked
 18882  011D8C  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18883  011D8E  0E19               	movlw	25
 18884  011D90  D008               	goto	L13
 18885  011D92                     l11658:
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;My_ST7032.c: 143: wait = 800;
 18889  011D92  0E03               	movlw	3
 18890  011D94  0101               	movlb	1	; () banked
 18891  011D96  6F16               	movwf	(ST7032_task@wait+1)& (0+255),b
 18892  011D98  0E20               	movlw	32
 18893  011D9A  D003               	goto	L13
 18894  011D9C                     l11660:
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;My_ST7032.c: 146: wait = 1;
 18898  011D9C  0101               	movlb	1	; () banked
 18899  011D9E  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18900  011DA0  0E01               	movlw	1
 18901  011DA2                     L13:
 18902  011DA2  6F15               	movwf	ST7032_task@wait& (0+255),b
 18903                           
 18904                           ;My_ST7032.c: 147: break;
 18905  011DA4  D010               	goto	l11666
 18906  011DA6                     l11664:
 18907                           
 18908                           ; BSR set to: 1
 18909  011DA6  C115  F06F         	movff	ST7032_task@wait,??_ST7032_task
 18910  011DAA  C116  F070         	movff	ST7032_task@wait+1,??_ST7032_task+1
 18911                           
 18912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18913                           ; Switch size 1, requested type "space"
 18914                           ; Number of cases is 1, Range of values is 0 to 0
 18915                           ; switch strategies available:
 18916                           ; Name         Instructions Cycles
 18917                           ; simple_byte            4     3 (average)
 18918                           ;	Chosen strategy is simple_byte
 18919  011DAE  0100               	movlb	0	; () banked
 18920  011DB0  5170               	movf	(??_ST7032_task+1)& (0+255),w,b
 18921  011DB2  E1F4               	bnz	l11660
 18922                           
 18923                           ; BSR set to: 0
 18924                           ; Switch size 1, requested type "space"
 18925                           ; Number of cases is 4, Range of values is 0 to 3
 18926                           ; switch strategies available:
 18927                           ; Name         Instructions Cycles
 18928                           ; simple_byte           13     7 (average)
 18929                           ;	Chosen strategy is simple_byte
 18930  011DB4  516F               	movf	??_ST7032_task& (0+255),w,b
 18931  011DB6  E0E1               	bz	l1145
 18932  011DB8  0A01               	xorlw	1	; case 1
 18933  011DBA  E0E3               	bz	l11654
 18934  011DBC  0A03               	xorlw	3	; case 2
 18935  011DBE  E0E5               	bz	l11656
 18936  011DC0  0A01               	xorlw	1	; case 3
 18937  011DC2  E0E7               	bz	l11658
 18938  011DC4  D7EB               	goto	l11660
 18939  011DC6                     l11666:
 18940                           
 18941                           ; BSR set to: 1
 18942                           ;My_ST7032.c: 149: st7032_state = ST7032_STOP;
 18943  011DC6  0E03               	movlw	3
 18944  011DC8  6F24               	movwf	ST7032_task@st7032_state& (0+255),b
 18945  011DCA  0C03               	retlw	3
 18946  011DCC                     l1151:
 18947                           
 18948                           ; BSR set to: 1
 18949                           ;My_ST7032.c: 153: SSP1CON2bits.PEN = 1;
 18950  011DCC  84C5               	bsf	4037,2,c	;volatile
 18951                           
 18952                           ; BSR set to: 1
 18953                           ;My_ST7032.c: 154: st7032_state = ST7032_WAIT;
 18954  011DCE  0E04               	movlw	4
 18955  011DD0  6F24               	movwf	ST7032_task@st7032_state& (0+255),b
 18956                           
 18957                           ;My_ST7032.c: 155: break;
 18958  011DD2  0C04               	retlw	4
 18959  011DD4                     l11670:
 18960                           
 18961                           ; BSR set to: 1
 18962                           ;My_ST7032.c: 157: if (wait == 0) st7032_state = ST7032_IDOLE;
 18963  011DD4  5115               	movf	ST7032_task@wait& (0+255),w,b
 18964  011DD6  1116               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
 18965  011DD8  E102               	bnz	l11674
 18966                           
 18967                           ; BSR set to: 1
 18968  011DDA  6B24               	clrf	ST7032_task@st7032_state& (0+255),b
 18969  011DDC  0012               	return	
 18970  011DDE                     l11674:
 18971                           
 18972                           ; BSR set to: 1
 18973                           ;My_ST7032.c: 158: else wait--;
 18974  011DDE  0715               	decf	ST7032_task@wait& (0+255),f,b
 18975  011DE0  A0D8               	btfss	status,0,c
 18976  011DE2  0716               	decf	(ST7032_task@wait+1)& (0+255),f,b
 18977  011DE4  0012               	return	
 18978  011DE6                     l11678:
 18979                           
 18980                           ; BSR set to: 0
 18981  011DE6  0101               	movlb	1	; () banked
 18982  011DE8  5124               	movf	ST7032_task@st7032_state& (0+255),w,b
 18983                           
 18984                           ; Switch size 1, requested type "space"
 18985                           ; Number of cases is 5, Range of values is 0 to 4
 18986                           ; switch strategies available:
 18987                           ; Name         Instructions Cycles
 18988                           ; simple_byte           16     9 (average)
 18989                           ;	Chosen strategy is simple_byte
 18990  011DEA  E09A               	bz	l11634
 18991  011DEC  0A01               	xorlw	1	; case 1
 18992  011DEE  E0A7               	bz	l11638
 18993  011DF0  0A03               	xorlw	3	; case 2
 18994  011DF2  E0AB               	bz	l11642
 18995  011DF4  0A01               	xorlw	1	; case 3
 18996  011DF6  E0EA               	bz	l1151
 18997  011DF8  0A07               	xorlw	7	; case 4
 18998  011DFA  E0EC               	bz	l11670
 18999  011DFC  0012               	return		;funcret
 19000  011DFE                     __end_of_ST7032_task:
 19001                           	opt stack 0
 19002  011DFE                     PL368:
 19003                           	opt stack 17
 19004  011DFE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 19005  011E00  0E01               	movlw	high _lcd_tx
 19006  011E02  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 19007  011E04  0012               	return	
 19008  011E06                     __end_ofPL368:
 19009                           	opt stack 0
 19010                           tblptru	equ	0xFF8
 19011                           tblptrh	equ	0xFF7
 19012                           tblptrl	equ	0xFF6
 19013                           tablat	equ	0xFF5
 19014                           prodh	equ	0xFF4
 19015                           prodl	equ	0xFF3
 19016                           intcon	equ	0xFF2
 19017                           intcon2	equ	0xFF1
 19018                           postinc0	equ	0xFEE
 19019                           wreg	equ	0xFE8
 19020                           indf1	equ	0xFE7
 19021                           postinc1	equ	0xFE6
 19022                           postdec1	equ	0xFE5
 19023                           fsr1h	equ	0xFE2
 19024                           fsr1l	equ	0xFE1
 19025                           indf2	equ	0xFDF
 19026                           postinc2	equ	0xFDE
 19027                           postdec2	equ	0xFDD
 19028                           plusw2	equ	0xFDB
 19029                           fsr2h	equ	0xFDA
 19030                           fsr2l	equ	0xFD9
 19031                           status	equ	0xFD8
 19032                           
 19033 ;; *************** function _ringbuf_pop *****************
 19034 ;; Defined at:
 19035 ;;		line 45 in file "../My_library/My_ringbuf.c"
 19036 ;; Parameters:    Size  Location     Type
 19037 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 19038 ;;		 -> uart_tx(8), terminal_task@command(8), lcd_tx(8), usb_rx(8), 
 19039 ;;		 -> usb_tx(8), 
 19040 ;; Auto vars:     Size  Location     Type
 19041 ;;  ret             1   14[BANK0 ] unsigned char 
 19042 ;; Return value:  Size  Location     Type
 19043 ;;                  1    wreg      unsigned char 
 19044 ;; Registers used:
 19045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19046 ;; Tracked objects:
 19047 ;;		On entry : F/0
 19048 ;;		On exit  : F/0
 19049 ;;		Unchanged: 0/0
 19050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19051 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19053 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19054 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19055 ;;Total ram usage:        7 bytes
 19056 ;; Hardware stack levels used:    1
 19057 ;; Hardware stack levels required when called:   12
 19058 ;; This function calls:
 19059 ;;		_ringbuf_num
 19060 ;; This function is called by:
 19061 ;;		_ST7032_task
 19062 ;;		_terminal_task
 19063 ;;		_USB_task
 19064 ;; This function uses a non-reentrant model
 19065 ;;
 19066                           
 19067                           	psect	text87
 19068  012E9E                     __ptext87:
 19069                           	opt stack 0
 19070  012E9E                     _ringbuf_pop:
 19071                           	opt stack 17
 19072                           
 19073                           ; BSR set to: 0
 19074                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 19075                           
 19076                           ;incstack = 0
 19077  012E9E  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 19078  012EA2  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 19079  012EA6  ECDE  F097         	call	_ringbuf_num	;wreg free
 19080  012EAA  5160               	movf	?_ringbuf_num& (0+255),w,b
 19081  012EAC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 19082  012EAE  E037               	bz	l11438
 19083                           
 19084                           ; BSR set to: 0
 19085                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 19086  012EB0  D837               	call	PL160	;call to abstracted procedure
 19087  012EB2  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 19088  012EB6  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 19089  012EBA  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 19090  012EBE  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 19091  012EC2  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 19092  012EC6  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 19093  012ECA  516A               	movf	??_ringbuf_pop& (0+255),w,b
 19094  012ECC  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 19095  012ECE  6ED9               	movwf	fsr2l,c
 19096  012ED0  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 19097  012ED2  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 19098  012ED4  6EDA               	movwf	fsr2h,c
 19099  012ED6  50DF               	movf	indf2,w,c
 19100  012ED8  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 19101                           
 19102                           ; BSR set to: 0
 19103                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 19104  012EDA  EE20 F002          	lfsr	2,2
 19105  012EDE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19106  012EE0  26D9               	addwf	fsr2l,f,c
 19107  012EE2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19108  012EE4  22DA               	addwfc	fsr2h,f,c
 19109  012EE6  EE10 F006          	lfsr	1,6
 19110  012EEA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19111  012EEC  26E1               	addwf	fsr1l,f,c
 19112  012EEE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19113  012EF0  22E2               	addwfc	fsr1h,f,c
 19114  012EF2  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 19115  012EF6  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 19116  012EFA  2B6C               	incf	(??_ringbuf_pop+2)& (0+255),f,b
 19117  012EFC  0E00               	movlw	0
 19118  012EFE  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 19119  012F00  50DE               	movf	postinc2,w,c
 19120  012F02  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 19121  012F04  50DE               	movf	postinc2,w,c
 19122  012F06  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 19123  012F08  E205               	bc	l11430
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;My_ringbuf.c: 49: rb->tail++;
 19127  012F0A  D80A               	call	PL160	;call to abstracted procedure
 19128  012F0C  2ADE               	incf	postinc2,f,c
 19129  012F0E  0E00               	movlw	0
 19130  012F10  22DD               	addwfc	postdec2,f,c
 19131                           
 19132                           ;My_ringbuf.c: 50: } else {
 19133  012F12  D003               	goto	l11432
 19134  012F14                     l11430:
 19135                           
 19136                           ; BSR set to: 0
 19137                           ;My_ringbuf.c: 51: rb->tail = 0;
 19138  012F14  D805               	call	PL160	;call to abstracted procedure
 19139  012F16  6ADE               	clrf	postinc2,c
 19140  012F18  6ADD               	clrf	postdec2,c
 19141  012F1A                     l11432:
 19142                           
 19143                           ; BSR set to: 0
 19144                           ;My_ringbuf.c: 52: }
 19145                           ;My_ringbuf.c: 53: return ret;
 19146  012F1A  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 19147  012F1C  0012               	return	
 19148  012F1E                     l11438:
 19149                           
 19150                           ; BSR set to: 0
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;My_ringbuf.c: 55: return 0;
 19154  012F1E  0C00               	retlw	0	;funcret
 19155  012F20                     __end_of_ringbuf_pop:
 19156                           	opt stack 0
 19157  012F20                     PL160:
 19158                           	opt stack 17
 19159  012F20  EE20 F006          	lfsr	2,6
 19160  012F24  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19161  012F26  26D9               	addwf	fsr2l,f,c
 19162  012F28  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19163  012F2A  22DA               	addwfc	fsr2h,f,c
 19164  012F2C  0012               	return	
 19165  012F2E                     __end_ofPL160:
 19166                           	opt stack 0
 19167                           tblptru	equ	0xFF8
 19168                           tblptrh	equ	0xFF7
 19169                           tblptrl	equ	0xFF6
 19170                           tablat	equ	0xFF5
 19171                           prodh	equ	0xFF4
 19172                           prodl	equ	0xFF3
 19173                           intcon	equ	0xFF2
 19174                           intcon2	equ	0xFF1
 19175                           postinc0	equ	0xFEE
 19176                           wreg	equ	0xFE8
 19177                           indf1	equ	0xFE7
 19178                           postinc1	equ	0xFE6
 19179                           postdec1	equ	0xFE5
 19180                           fsr1h	equ	0xFE2
 19181                           fsr1l	equ	0xFE1
 19182                           indf2	equ	0xFDF
 19183                           postinc2	equ	0xFDE
 19184                           postdec2	equ	0xFDD
 19185                           plusw2	equ	0xFDB
 19186                           fsr2h	equ	0xFDA
 19187                           fsr2l	equ	0xFD9
 19188                           status	equ	0xFD8
 19189                           
 19190 ;; *************** function _ringbuf_num *****************
 19191 ;; Defined at:
 19192 ;;		line 12 in file "../My_library/My_ringbuf.c"
 19193 ;; Parameters:    Size  Location     Type
 19194 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 19195 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
 19196 ;;		 -> usb_rx(8), usb_tx(8), 
 19197 ;; Auto vars:     Size  Location     Type
 19198 ;;		None
 19199 ;; Return value:  Size  Location     Type
 19200 ;;                  2    0[BANK0 ] unsigned int 
 19201 ;; Registers used:
 19202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19203 ;; Tracked objects:
 19204 ;;		On entry : E/1
 19205 ;;		On exit  : F/0
 19206 ;;		Unchanged: 0/0
 19207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19210 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19211 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19212 ;;Total ram usage:        8 bytes
 19213 ;; Hardware stack levels used:    1
 19214 ;; Hardware stack levels required when called:   11
 19215 ;; This function calls:
 19216 ;;		Nothing
 19217 ;; This function is called by:
 19218 ;;		_ringbuf_put
 19219 ;;		_ringbuf_pop
 19220 ;;		_ringbuf_backspace
 19221 ;;		_ST7032_task
 19222 ;;		_terminal_task
 19223 ;;		_USB_task
 19224 ;; This function uses a non-reentrant model
 19225 ;;
 19226                           
 19227                           	psect	text88
 19228  012FBC                     __ptext88:
 19229                           	opt stack 0
 19230  012FBC                     _ringbuf_num:
 19231                           	opt stack 13
 19232                           
 19233                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 19234                           
 19235                           ; BSR set to: 0
 19236                           ;incstack = 0
 19237  012FBC  0100               	movlb	0	; () banked
 19238  012FBE  EE20 F006          	lfsr	2,6
 19239  012FC2  D834               	call	PL132	;call to abstracted procedure
 19240  012FC4  EE10 F004          	lfsr	1,4
 19241  012FC8  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19242  012FCA  26E1               	addwf	fsr1l,f,c
 19243  012FCC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19244  012FCE  22E2               	addwfc	fsr1h,f,c
 19245  012FD0  50DE               	movf	postinc2,w,c
 19246  012FD2  5CE6               	subwf	postinc1,w,c
 19247  012FD4  50DE               	movf	postinc2,w,c
 19248  012FD6  58E6               	subwfb	postinc1,w,c
 19249  012FD8  E30F               	bnc	l9550
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 19253  012FDA  EE20 F006          	lfsr	2,6
 19254  012FDE  D826               	call	PL132	;call to abstracted procedure
 19255  012FE0  D82F               	call	PL322	;call to abstracted procedure
 19256  012FE2  EE20 F004          	lfsr	2,4
 19257  012FE6  D822               	call	PL132	;call to abstracted procedure
 19258  012FE8  D826               	call	PL306	;call to abstracted procedure
 19259  012FEA  5162               	movf	??_ringbuf_num& (0+255),w,b
 19260  012FEC  5D64               	subwf	(??_ringbuf_num+2)& (0+255),w,b
 19261  012FEE  6F60               	movwf	?_ringbuf_num& (0+255),b
 19262  012FF0  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 19263  012FF2  5965               	subwfb	(??_ringbuf_num+3)& (0+255),w,b
 19264  012FF4  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 19265  012FF6  0012               	return	
 19266  012FF8                     l9550:
 19267                           
 19268                           ; BSR set to: 0
 19269                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 19270  012FF8  EE20 F004          	lfsr	2,4
 19271  012FFC  D817               	call	PL132	;call to abstracted procedure
 19272  012FFE  D820               	call	PL322	;call to abstracted procedure
 19273  013000  EE20 F006          	lfsr	2,6
 19274  013004  D813               	call	PL132	;call to abstracted procedure
 19275  013006  D817               	call	PL306	;call to abstracted procedure
 19276  013008  EE20 F002          	lfsr	2,2
 19277  01300C  D80F               	call	PL132	;call to abstracted procedure
 19278  01300E  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 19279  013012  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 19280  013016  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 19281  013018  5F66               	subwf	(??_ringbuf_num+4)& (0+255),f,b
 19282  01301A  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 19283  01301C  5B67               	subwfb	(??_ringbuf_num+5)& (0+255),f,b
 19284  01301E  5162               	movf	??_ringbuf_num& (0+255),w,b
 19285  013020  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 19286  013022  6F60               	movwf	?_ringbuf_num& (0+255),b
 19287  013024  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 19288  013026  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 19289  013028  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 19290                           
 19291                           ; BSR set to: 0
 19292  01302A  0012               	return		;funcret
 19293  01302C                     __end_of_ringbuf_num:
 19294                           	opt stack 0
 19295  01302C                     PL132:
 19296                           	opt stack 13
 19297  01302C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19298  01302E  26D9               	addwf	fsr2l,f,c
 19299  013030  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19300  013032  22DA               	addwfc	fsr2h,f,c
 19301  013034  0012               	return	
 19302  013036                     __end_ofPL132:
 19303                           	opt stack 0
 19304  013036                     PL306:
 19305                           	opt stack 13
 19306  013036  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 19307  01303A  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 19308  01303E  0012               	return	
 19309  013040                     __end_ofPL306:
 19310                           	opt stack 0
 19311  013040                     PL322:
 19312                           	opt stack 13
 19313  013040  CFDE F062          	movff	postinc2,??_ringbuf_num
 19314  013044  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 19315  013048  0012               	return	
 19316  01304A                     __end_ofPL322:
 19317                           	opt stack 0
 19318                           tblptru	equ	0xFF8
 19319                           tblptrh	equ	0xFF7
 19320                           tblptrl	equ	0xFF6
 19321                           tablat	equ	0xFF5
 19322                           prodh	equ	0xFF4
 19323                           prodl	equ	0xFF3
 19324                           intcon	equ	0xFF2
 19325                           intcon2	equ	0xFF1
 19326                           postinc0	equ	0xFEE
 19327                           wreg	equ	0xFE8
 19328                           indf1	equ	0xFE7
 19329                           postinc1	equ	0xFE6
 19330                           postdec1	equ	0xFE5
 19331                           fsr1h	equ	0xFE2
 19332                           fsr1l	equ	0xFE1
 19333                           indf2	equ	0xFDF
 19334                           postinc2	equ	0xFDE
 19335                           postdec2	equ	0xFDD
 19336                           plusw2	equ	0xFDB
 19337                           fsr2h	equ	0xFDA
 19338                           fsr2l	equ	0xFD9
 19339                           status	equ	0xFD8
 19340                           
 19341 ;; *************** function _RTCC_task *****************
 19342 ;; Defined at:
 19343 ;;		line 353 in file "../My_library/My_RTCC.c"
 19344 ;; Parameters:    Size  Location     Type
 19345 ;;		None
 19346 ;; Auto vars:     Size  Location     Type
 19347 ;;		None
 19348 ;; Return value:  Size  Location     Type
 19349 ;;		None               void
 19350 ;; Registers used:
 19351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19352 ;; Tracked objects:
 19353 ;;		On entry : 0/1
 19354 ;;		On exit  : 0/0
 19355 ;;		Unchanged: 0/0
 19356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19361 ;;Total ram usage:        0 bytes
 19362 ;; Hardware stack levels used:    1
 19363 ;; Hardware stack levels required when called:   15
 19364 ;; This function calls:
 19365 ;;		_RTCC_from_RTCC
 19366 ;; This function is called by:
 19367 ;;		_main
 19368 ;; This function uses a non-reentrant model
 19369 ;;
 19370                           
 19371                           	psect	text89
 19372  0141AE                     __ptext89:
 19373                           	opt stack 0
 19374  0141AE                     _RTCC_task:
 19375                           	opt stack 15
 19376                           
 19377                           ;My_RTCC.c: 354: static uint8_t prev_halfsec;
 19378                           ;My_RTCC.c: 355: if (RTCCFGbits.RTCSYNC)return;
 19379                           
 19380                           ; BSR set to: 0
 19381                           ;incstack = 0
 19382  0141AE  010F               	movlb	15	; () banked
 19383  0141B0  B93F               	btfsc	63,4,b	;volatile
 19384  0141B2  0012               	return	
 19385                           
 19386                           ; BSR set to: 15
 19387                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
 19388  0141B4  0E00               	movlw	0
 19389  0141B6  B73F               	btfsc	63,3,b	;volatile
 19390  0141B8  0E01               	movlw	1
 19391  0141BA  0102               	movlb	2	; () banked
 19392  0141BC  6F9B               	movwf	(_now+12)& (0+255),b
 19393                           
 19394                           ; BSR set to: 2
 19395                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
 19396  0141BE  0101               	movlb	1	; () banked
 19397  0141C0  5123               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 19398  0141C2  0102               	movlb	2	; () banked
 19399  0141C4  199B               	xorwf	(_now+12)& (0+255),w,b
 19400  0141C6  B4D8               	btfsc	status,2,c
 19401  0141C8  0012               	return	
 19402                           
 19403                           ; BSR set to: 2
 19404                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
 19405  0141CA  C29B  F123         	movff	_now+12,RTCC_task@prev_halfsec
 19406                           
 19407                           ;My_RTCC.c: 359: now.colon = now.halfsec;
 19408  0141CE  C29B  F29A         	movff	_now+12,_now+11
 19409                           
 19410                           ; BSR set to: 2
 19411                           ;My_RTCC.c: 360: time_change_flag = 1;
 19412  0141D2  0E01               	movlw	1
 19413  0141D4  0101               	movlb	1	; () banked
 19414  0141D6  6F35               	movwf	_time_change_flag& (0+255),b
 19415                           
 19416                           ; BSR set to: 1
 19417                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
 19418  0141D8  ECC0  F09D         	call	PL208	;call to abstracted procedure
 19419  0141DC  EF92  F0A2         	goto	_RTCC_from_RTCC	;wreg free
 19420  0141E0                     __end_of_RTCC_task:
 19421                           	opt stack 0
 19422                           tblptru	equ	0xFF8
 19423                           tblptrh	equ	0xFF7
 19424                           tblptrl	equ	0xFF6
 19425                           tablat	equ	0xFF5
 19426                           prodh	equ	0xFF4
 19427                           prodl	equ	0xFF3
 19428                           intcon	equ	0xFF2
 19429                           intcon2	equ	0xFF1
 19430                           postinc0	equ	0xFEE
 19431                           wreg	equ	0xFE8
 19432                           indf1	equ	0xFE7
 19433                           postinc1	equ	0xFE6
 19434                           postdec1	equ	0xFE5
 19435                           fsr1h	equ	0xFE2
 19436                           fsr1l	equ	0xFE1
 19437                           indf2	equ	0xFDF
 19438                           postinc2	equ	0xFDE
 19439                           postdec2	equ	0xFDD
 19440                           plusw2	equ	0xFDB
 19441                           fsr2h	equ	0xFDA
 19442                           fsr2l	equ	0xFD9
 19443                           status	equ	0xFD8
 19444                           
 19445 ;; *************** function _RTCC_from_RTCC *****************
 19446 ;; Defined at:
 19447 ;;		line 200 in file "../My_library/My_RTCC.c"
 19448 ;; Parameters:    Size  Location     Type
 19449 ;;  tm              2   38[BANK0 ] PTR struct .
 19450 ;;		 -> now(14), 
 19451 ;; Auto vars:     Size  Location     Type
 19452 ;;		None
 19453 ;; Return value:  Size  Location     Type
 19454 ;;		None               void
 19455 ;; Registers used:
 19456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19457 ;; Tracked objects:
 19458 ;;		On entry : F/0
 19459 ;;		On exit  : F/0
 19460 ;;		Unchanged: 0/0
 19461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19465 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19466 ;;Total ram usage:        2 bytes
 19467 ;; Hardware stack levels used:    1
 19468 ;; Hardware stack levels required when called:   14
 19469 ;; This function calls:
 19470 ;;		_RTCC_to_caltime
 19471 ;;		_caltime_to_epoch
 19472 ;; This function is called by:
 19473 ;;		_RTCC_init
 19474 ;;		_display_time_1602
 19475 ;;		_RTCC_adjust_time_inc
 19476 ;;		_RTCC_adjust_time_dec
 19477 ;;		_RTCC_task
 19478 ;;		_print_time
 19479 ;; This function uses a non-reentrant model
 19480 ;;
 19481                           
 19482                           	psect	text90
 19483  014524                     __ptext90:
 19484                           	opt stack 0
 19485  014524                     _RTCC_from_RTCC:
 19486                           	opt stack 11
 19487                           
 19488                           ; BSR set to: 0
 19489                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
 19490                           
 19491                           ;incstack = 0
 19492  014524  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 19493  014528  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 19494  01452C  EC25  F098         	call	_RTCC_to_caltime	;wreg free
 19495                           
 19496                           ; BSR set to: 0
 19497                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
 19498  014530  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 19499  014534  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 19500  014538  EFA0  F08A         	goto	_caltime_to_epoch	;wreg free
 19501  01453C                     __end_of_RTCC_from_RTCC:
 19502                           	opt stack 0
 19503                           tblptru	equ	0xFF8
 19504                           tblptrh	equ	0xFF7
 19505                           tblptrl	equ	0xFF6
 19506                           tablat	equ	0xFF5
 19507                           prodh	equ	0xFF4
 19508                           prodl	equ	0xFF3
 19509                           intcon	equ	0xFF2
 19510                           intcon2	equ	0xFF1
 19511                           postinc0	equ	0xFEE
 19512                           wreg	equ	0xFE8
 19513                           indf1	equ	0xFE7
 19514                           postinc1	equ	0xFE6
 19515                           postdec1	equ	0xFE5
 19516                           fsr1h	equ	0xFE2
 19517                           fsr1l	equ	0xFE1
 19518                           indf2	equ	0xFDF
 19519                           postinc2	equ	0xFDE
 19520                           postdec2	equ	0xFDD
 19521                           plusw2	equ	0xFDB
 19522                           fsr2h	equ	0xFDA
 19523                           fsr2l	equ	0xFD9
 19524                           status	equ	0xFD8
 19525                           
 19526 ;; *************** function _caltime_to_epoch *****************
 19527 ;; Defined at:
 19528 ;;		line 180 in file "../My_library/My_RTCC.c"
 19529 ;; Parameters:    Size  Location     Type
 19530 ;;  tm              2   25[BANK0 ] PTR struct .
 19531 ;;		 -> now(14), 
 19532 ;; Auto vars:     Size  Location     Type
 19533 ;;  month           1   37[BANK0 ] unsigned char 
 19534 ;;  month           1   32[BANK0 ] unsigned char 
 19535 ;;  year            1   31[BANK0 ] unsigned char 
 19536 ;;  epoch           4   33[BANK0 ] unsigned long 
 19537 ;; Return value:  Size  Location     Type
 19538 ;;		None               void
 19539 ;; Registers used:
 19540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19541 ;; Tracked objects:
 19542 ;;		On entry : F/0
 19543 ;;		On exit  : F/0
 19544 ;;		Unchanged: 0/0
 19545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19547 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19549 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19550 ;;Total ram usage:       13 bytes
 19551 ;; Hardware stack levels used:    1
 19552 ;; Hardware stack levels required when called:   13
 19553 ;; This function calls:
 19554 ;;		___lmul
 19555 ;;		_month_length
 19556 ;; This function is called by:
 19557 ;;		_RTCC_from_RTCC
 19558 ;;		_RTCC_from_caltime
 19559 ;; This function uses a non-reentrant model
 19560 ;;
 19561                           
 19562                           	psect	text91
 19563  011540                     __ptext91:
 19564                           	opt stack 0
 19565  011540                     _caltime_to_epoch:
 19566                           	opt stack 11
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;My_RTCC.c: 181: epoch_t epoch = 0;
 19570                           
 19571                           ; BSR set to: 0
 19572                           ;incstack = 0
 19573  011540  6B81               	clrf	caltime_to_epoch@epoch& (0+255),b
 19574  011542  6B82               	clrf	(caltime_to_epoch@epoch+1)& (0+255),b
 19575  011544  6B83               	clrf	(caltime_to_epoch@epoch+2)& (0+255),b
 19576  011546  6B84               	clrf	(caltime_to_epoch@epoch+3)& (0+255),b
 19577                           
 19578                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
 19579  011548  6B7F               	clrf	caltime_to_epoch@year& (0+255),b
 19580  01154A  D011               	goto	l9680
 19581  01154C                     l9666:
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
 19585  01154C  0E01               	movlw	1
 19586  01154E  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 19587  011550                     l9672:
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 19591  011550  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 19592  011554  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 19593  011556  EC3E  F09A         	call	_month_length
 19594  01155A  EC68  F088         	call	PL8	;call to abstracted procedure
 19595  01155E  ECEC  F09D         	call	___lmul	;wreg free
 19596  011562  D871               	call	PL50	;call to abstracted procedure
 19597                           
 19598                           ; BSR set to: 0
 19599  011564  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 19600                           
 19601                           ; BSR set to: 0
 19602  011566  0E0C               	movlw	12
 19603  011568  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 19604  01156A  D7F2               	goto	l9672
 19605                           
 19606                           ; BSR set to: 0
 19607  01156C  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 19608  01156E                     l9680:
 19609                           
 19610                           ; BSR set to: 0
 19611  01156E  D879               	call	PL250	;call to abstracted procedure
 19612  011570  D87C               	call	PL310	;call to abstracted procedure
 19613  011572  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 19614  011574  E3EB               	bnc	l9666
 19615                           
 19616                           ; BSR set to: 0
 19617                           ;My_RTCC.c: 185: }
 19618                           ;My_RTCC.c: 186: }
 19619                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
 19620  011576  0E01               	movlw	1
 19621  011578  6F80               	movwf	caltime_to_epoch@month_2763& (0+255),b
 19622  01157A  D00C               	goto	l9688
 19623  01157C                     l9684:
 19624                           
 19625                           ; BSR set to: 0
 19626                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 19627  01157C  C080  F066         	movff	caltime_to_epoch@month_2763,month_length@month
 19628  011580  D870               	call	PL250	;call to abstracted procedure
 19629  011582  D86A               	call	PL178	;call to abstracted procedure
 19630  011584  EC3E  F09A         	call	_month_length
 19631  011588  EC68  F088         	call	PL8	;call to abstracted procedure
 19632  01158C  ECEC  F09D         	call	___lmul	;wreg free
 19633  011590  D85A               	call	PL50	;call to abstracted procedure
 19634                           
 19635                           ; BSR set to: 0
 19636  011592  2B80               	incf	caltime_to_epoch@month_2763& (0+255),f,b
 19637  011594                     l9688:
 19638                           
 19639                           ; BSR set to: 0
 19640  011594  EE20 F009          	lfsr	2,9
 19641  011598  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19642  01159A  D867               	call	PL310	;call to abstracted procedure
 19643  01159C  5D80               	subwf	caltime_to_epoch@month_2763& (0+255),w,b
 19644  01159E  E3EE               	bnc	l9684
 19645                           
 19646                           ; BSR set to: 0
 19647                           ;My_RTCC.c: 189: }
 19648                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 19649  0115A0  697B               	setf	??_caltime_to_epoch& (0+255),b
 19650  0115A2  697C               	setf	(??_caltime_to_epoch+1)& (0+255),b
 19651  0115A4  EE20 F008          	lfsr	2,8
 19652  0115A8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19653  0115AA  D856               	call	PL178	;call to abstracted procedure
 19654  0115AC  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 19655  0115AE  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 19656  0115B0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 19657  0115B2  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 19658  0115B4  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 19659  0115B6  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 19660  0115B8  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 19661  0115BC  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 19662  0115C0  0E00               	movlw	0
 19663  0115C2  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 19664  0115C4  0EFF               	movlw	-1
 19665  0115C6  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 19666  0115C8  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 19667  0115CA  0E80               	movlw	128
 19668  0115CC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 19669  0115CE  0E51               	movlw	81
 19670  0115D0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19671  0115D2  0E01               	movlw	1
 19672  0115D4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19673  0115D6  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19674  0115D8  ECEC  F09D         	call	___lmul	;wreg free
 19675  0115DC  D834               	call	PL50	;call to abstracted procedure
 19676                           
 19677                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
 19678  0115DE  EE20 F006          	lfsr	2,6
 19679  0115E2  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19680  0115E4  D839               	call	PL178	;call to abstracted procedure
 19681  0115E6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 19682  0115E8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 19683  0115EA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 19684  0115EC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 19685  0115EE  0E10               	movlw	16
 19686  0115F0  6F71               	movwf	___lmul@multiplicand& (0+255),b
 19687  0115F2  0E0E               	movlw	14
 19688  0115F4  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19689  0115F6  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 19690  0115F8  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19691  0115FA  ECEC  F09D         	call	___lmul	;wreg free
 19692  0115FE  D823               	call	PL50	;call to abstracted procedure
 19693                           
 19694                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
 19695  011600  EE20 F005          	lfsr	2,5
 19696  011604  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19697  011606  D828               	call	PL178	;call to abstracted procedure
 19698  011608  6F6D               	movwf	___lmul@multiplier& (0+255),b
 19699  01160A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 19700  01160C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 19701  01160E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 19702  011610  0E3C               	movlw	60
 19703  011612  D830               	call	PL324	;call to abstracted procedure
 19704  011614  ECEC  F09D         	call	___lmul	;wreg free
 19705  011618  D816               	call	PL50	;call to abstracted procedure
 19706                           
 19707                           ; BSR set to: 0
 19708                           ;My_RTCC.c: 193: epoch += tm->ss;
 19709  01161A  EE20 F004          	lfsr	2,4
 19710  01161E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19711  011620  D81B               	call	PL178	;call to abstracted procedure
 19712  011622  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19713  011624  0E00               	movlw	0
 19714  011626  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19715  011628  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19716  01162A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;My_RTCC.c: 195: tm->epoch = epoch;
 19720  01162C  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 19721  011630  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 19722  011634  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 19723  011638  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 19724  01163C  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 19725  011640  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 19726                           
 19727                           ; BSR set to: 0
 19728  011644  0C00               	retlw	0	;funcret
 19729  011646                     __end_of_caltime_to_epoch:
 19730                           	opt stack 0
 19731  011646                     PL50:
 19732                           	opt stack 11
 19733  011646  516D               	movf	?___lmul& (0+255),w,b
 19734  011648  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19735  01164A  516E               	movf	(?___lmul+1)& (0+255),w,b
 19736  01164C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19737  01164E  516F               	movf	(?___lmul+2)& (0+255),w,b
 19738  011650  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19739  011652  5170               	movf	(?___lmul+3)& (0+255),w,b
 19740  011654  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19741  011656  0012               	return	
 19742  011658                     __end_ofPL50:
 19743                           	opt stack 0
 19744  011658                     PL178:
 19745                           	opt stack 11
 19746  011658  26D9               	addwf	fsr2l,f,c
 19747  01165A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 19748  01165C  22DA               	addwfc	fsr2h,f,c
 19749  01165E  50DF               	movf	indf2,w,c
 19750  011660  0012               	return	
 19751  011662                     __end_ofPL178:
 19752                           	opt stack 0
 19753  011662                     PL250:
 19754                           	opt stack 11
 19755  011662  EE20 F00A          	lfsr	2,10
 19756  011666  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19757  011668  0012               	return	
 19758  01166A                     __end_ofPL250:
 19759                           	opt stack 0
 19760  01166A                     PL310:
 19761                           	opt stack 11
 19762  01166A  26D9               	addwf	fsr2l,f,c
 19763  01166C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 19764  01166E  22DA               	addwfc	fsr2h,f,c
 19765  011670  50DE               	movf	postinc2,w,c
 19766  011672  0012               	return	
 19767  011674                     __end_ofPL310:
 19768                           	opt stack 0
 19769  011674                     PL324:
 19770                           	opt stack 12
 19771  011674  6F71               	movwf	___lmul@multiplicand& (0+255),b
 19772  011676  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 19773  011678  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 19774  01167A  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19775  01167C  0012               	return	
 19776  01167E                     __end_ofPL324:
 19777                           	opt stack 0
 19778                           tblptru	equ	0xFF8
 19779                           tblptrh	equ	0xFF7
 19780                           tblptrl	equ	0xFF6
 19781                           tablat	equ	0xFF5
 19782                           prodh	equ	0xFF4
 19783                           prodl	equ	0xFF3
 19784                           intcon	equ	0xFF2
 19785                           intcon2	equ	0xFF1
 19786                           postinc0	equ	0xFEE
 19787                           wreg	equ	0xFE8
 19788                           indf1	equ	0xFE7
 19789                           postinc1	equ	0xFE6
 19790                           postdec1	equ	0xFE5
 19791                           fsr1h	equ	0xFE2
 19792                           fsr1l	equ	0xFE1
 19793                           indf2	equ	0xFDF
 19794                           postinc2	equ	0xFDE
 19795                           postdec2	equ	0xFDD
 19796                           plusw2	equ	0xFDB
 19797                           fsr2h	equ	0xFDA
 19798                           fsr2l	equ	0xFD9
 19799                           status	equ	0xFD8
 19800                           
 19801 ;; *************** function _month_length *****************
 19802 ;; Defined at:
 19803 ;;		line 56 in file "../My_library/My_RTCC.c"
 19804 ;; Parameters:    Size  Location     Type
 19805 ;;  year            1    wreg     unsigned char 
 19806 ;;  month           1    6[BANK0 ] unsigned char 
 19807 ;; Auto vars:     Size  Location     Type
 19808 ;;  year            1   11[BANK0 ] unsigned char 
 19809 ;; Return value:  Size  Location     Type
 19810 ;;                  1    wreg      unsigned char 
 19811 ;; Registers used:
 19812 ;;		wreg, status,2, status,0, cstack
 19813 ;; Tracked objects:
 19814 ;;		On entry : D/2
 19815 ;;		On exit  : F/0
 19816 ;;		Unchanged: 0/0
 19817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19818 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19821 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19822 ;;Total ram usage:        6 bytes
 19823 ;; Hardware stack levels used:    1
 19824 ;; Hardware stack levels required when called:   12
 19825 ;; This function calls:
 19826 ;;		___awmod
 19827 ;;		___lbmod
 19828 ;; This function is called by:
 19829 ;;		_epoch_to_caltime
 19830 ;;		_caltime_to_epoch
 19831 ;;		_RTCC_adjust_time_inc
 19832 ;;		_RTCC_adjust_time_dec
 19833 ;;		_terminal_time
 19834 ;; This function uses a non-reentrant model
 19835 ;;
 19836                           
 19837                           	psect	text92
 19838  01347C                     __ptext92:
 19839                           	opt stack 0
 19840  01347C                     _month_length:
 19841                           	opt stack 11
 19842                           
 19843                           ; BSR set to: 0
 19844                           ;incstack = 0
 19845                           ;month_length@year stored from wreg
 19846  01347C  0100               	movlb	0	; () banked
 19847  01347E  6F6B               	movwf	month_length@year& (0+255),b
 19848                           
 19849                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 19850  013480  0E02               	movlw	2
 19851  013482  1966               	xorwf	month_length@month& (0+255),w,b
 19852  013484  E12A               	bnz	l9566
 19853                           
 19854                           ; BSR set to: 0
 19855  013486  0E64               	movlw	100
 19856  013488  6F60               	movwf	___lbmod@divisor& (0+255),b
 19857  01348A  516B               	movf	month_length@year& (0+255),w,b
 19858  01348C  EC73  F0A1         	call	___lbmod
 19859  013490  0900               	iorlw	0
 19860  013492  E103               	bnz	u9660
 19861  013494  6B67               	clrf	??_month_length& (0+255),b
 19862  013496  2B67               	incf	??_month_length& (0+255),f,b
 19863  013498  D002               	goto	u9678
 19864  01349A                     u9660:
 19865  01349A  0100               	movlb	0	; () banked
 19866  01349C  6B67               	clrf	??_month_length& (0+255),b
 19867  01349E                     u9678:
 19868  01349E  C06B  F060         	movff	month_length@year,___awmod@dividend
 19869  0134A2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 19870  0134A4  0E01               	movlw	1
 19871  0134A6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 19872  0134A8  0E90               	movlw	144
 19873  0134AA  6F62               	movwf	___awmod@divisor& (0+255),b
 19874  0134AC  ECA0  F09B         	call	___awmod	;wreg free
 19875  0134B0  5160               	movf	?___awmod& (0+255),w,b
 19876  0134B2  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 19877  0134B4  E103               	bnz	u9680
 19878  0134B6  6B68               	clrf	(??_month_length+1)& (0+255),b
 19879  0134B8  2B68               	incf	(??_month_length+1)& (0+255),f,b
 19880  0134BA  D002               	goto	u9698
 19881  0134BC                     u9680:
 19882  0134BC  0100               	movlb	0	; () banked
 19883  0134BE  6B68               	clrf	(??_month_length+1)& (0+255),b
 19884  0134C0                     u9698:
 19885  0134C0  C06B  F069         	movff	month_length@year,??_month_length+2
 19886  0134C4  0E03               	movlw	3
 19887  0134C6  1769               	andwf	(??_month_length+2)& (0+255),f,b
 19888  0134C8  0E01               	movlw	1
 19889  0134CA  A4D8               	btfss	status,2,c
 19890  0134CC  0E00               	movlw	0
 19891  0134CE  2568               	addwf	(??_month_length+1)& (0+255),w,b
 19892  0134D0  6F6A               	movwf	(??_month_length+3)& (0+255),b
 19893  0134D2  5167               	movf	??_month_length& (0+255),w,b
 19894  0134D4  5D6A               	subwf	(??_month_length+3)& (0+255),w,b
 19895  0134D6  0F1C               	addlw	28
 19896  0134D8  0012               	return	
 19897  0134DA                     l9566:
 19898                           
 19899                           ; BSR set to: 0
 19900                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 19901  0134DA  5166               	movf	month_length@month& (0+255),w,b
 19902  0134DC  0B01               	andlw	1
 19903  0134DE  0800               	sublw	0
 19904  0134E0  1966               	xorwf	month_length@month& (0+255),w,b
 19905  0134E2  0B0D               	andlw	13
 19906  0134E4  0A04               	xorlw	4
 19907  0134E6  E103               	bnz	u9720
 19908  0134E8  6B67               	clrf	??_month_length& (0+255),b
 19909  0134EA  2B67               	incf	??_month_length& (0+255),f,b
 19910  0134EC  D002               	goto	u9738
 19911  0134EE                     u9720:
 19912  0134EE  0100               	movlb	0	; () banked
 19913  0134F0  6B67               	clrf	??_month_length& (0+255),b
 19914  0134F2                     u9738:
 19915  0134F2  5167               	movf	??_month_length& (0+255),w,b
 19916  0134F4  081F               	sublw	31
 19917                           
 19918                           ; BSR set to: 0
 19919  0134F6  0012               	return		;funcret
 19920  0134F8                     __end_of_month_length:
 19921                           	opt stack 0
 19922                           tblptru	equ	0xFF8
 19923                           tblptrh	equ	0xFF7
 19924                           tblptrl	equ	0xFF6
 19925                           tablat	equ	0xFF5
 19926                           prodh	equ	0xFF4
 19927                           prodl	equ	0xFF3
 19928                           intcon	equ	0xFF2
 19929                           intcon2	equ	0xFF1
 19930                           postinc0	equ	0xFEE
 19931                           wreg	equ	0xFE8
 19932                           indf1	equ	0xFE7
 19933                           postinc1	equ	0xFE6
 19934                           postdec1	equ	0xFE5
 19935                           fsr1h	equ	0xFE2
 19936                           fsr1l	equ	0xFE1
 19937                           indf2	equ	0xFDF
 19938                           postinc2	equ	0xFDE
 19939                           postdec2	equ	0xFDD
 19940                           plusw2	equ	0xFDB
 19941                           fsr2h	equ	0xFDA
 19942                           fsr2l	equ	0xFD9
 19943                           status	equ	0xFD8
 19944                           
 19945 ;; *************** function ___lbmod *****************
 19946 ;; Defined at:
 19947 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
 19948 ;; Parameters:    Size  Location     Type
 19949 ;;  dividend        1    wreg     unsigned char 
 19950 ;;  divisor         1    0[BANK0 ] unsigned char 
 19951 ;; Auto vars:     Size  Location     Type
 19952 ;;  dividend        1    1[BANK0 ] unsigned char 
 19953 ;;  rem             1    3[BANK0 ] unsigned char 
 19954 ;;  counter         1    2[BANK0 ] unsigned char 
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  1    wreg      unsigned char 
 19957 ;; Registers used:
 19958 ;;		wreg, status,2, status,0
 19959 ;; Tracked objects:
 19960 ;;		On entry : F/0
 19961 ;;		On exit  : F/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19964 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19965 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19967 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19968 ;;Total ram usage:        4 bytes
 19969 ;; Hardware stack levels used:    1
 19970 ;; Hardware stack levels required when called:   11
 19971 ;; This function calls:
 19972 ;;		Nothing
 19973 ;; This function is called by:
 19974 ;;		_month_length
 19975 ;; This function uses a non-reentrant model
 19976 ;;
 19977                           
 19978                           	psect	text93
 19979  0142E6                     __ptext93:
 19980                           	opt stack 0
 19981  0142E6                     ___lbmod:
 19982                           	opt stack 11
 19983                           
 19984                           ; BSR set to: 0
 19985                           ;incstack = 0
 19986                           ;___lbmod@dividend stored from wreg
 19987  0142E6  6F61               	movwf	___lbmod@dividend& (0+255),b
 19988  0142E8  0E08               	movlw	8
 19989  0142EA  0100               	movlb	0	; () banked
 19990  0142EC  6F62               	movwf	___lbmod@counter& (0+255),b
 19991                           
 19992                           ; BSR set to: 0
 19993  0142EE  6B63               	clrf	___lbmod@rem& (0+255),b
 19994  0142F0                     l9528:
 19995                           
 19996                           ; BSR set to: 0
 19997  0142F0  90D8               	bcf	status,0,c
 19998  0142F2  3561               	rlcf	___lbmod@dividend& (0+255),w,b
 19999  0142F4  3563               	rlcf	___lbmod@rem& (0+255),w,b
 20000  0142F6  6F63               	movwf	___lbmod@rem& (0+255),b
 20001                           
 20002                           ; BSR set to: 0
 20003  0142F8  90D8               	bcf	status,0,c
 20004  0142FA  3761               	rlcf	___lbmod@dividend& (0+255),f,b
 20005                           
 20006                           ; BSR set to: 0
 20007  0142FC  5160               	movf	___lbmod@divisor& (0+255),w,b
 20008  0142FE  5D63               	subwf	___lbmod@rem& (0+255),w,b
 20009  014300  E302               	bnc	l9536
 20010                           
 20011                           ; BSR set to: 0
 20012  014302  5160               	movf	___lbmod@divisor& (0+255),w,b
 20013  014304  5F63               	subwf	___lbmod@rem& (0+255),f,b
 20014  014306                     l9536:
 20015                           
 20016                           ; BSR set to: 0
 20017  014306  2F62               	decfsz	___lbmod@counter& (0+255),f,b
 20018  014308  D7F3               	goto	l9528
 20019                           
 20020                           ; BSR set to: 0
 20021  01430A  5163               	movf	___lbmod@rem& (0+255),w,b
 20022                           
 20023                           ; BSR set to: 0
 20024  01430C  0012               	return		;funcret
 20025  01430E                     __end_of___lbmod:
 20026                           	opt stack 0
 20027                           tblptru	equ	0xFF8
 20028                           tblptrh	equ	0xFF7
 20029                           tblptrl	equ	0xFF6
 20030                           tablat	equ	0xFF5
 20031                           prodh	equ	0xFF4
 20032                           prodl	equ	0xFF3
 20033                           intcon	equ	0xFF2
 20034                           intcon2	equ	0xFF1
 20035                           postinc0	equ	0xFEE
 20036                           wreg	equ	0xFE8
 20037                           indf1	equ	0xFE7
 20038                           postinc1	equ	0xFE6
 20039                           postdec1	equ	0xFE5
 20040                           fsr1h	equ	0xFE2
 20041                           fsr1l	equ	0xFE1
 20042                           indf2	equ	0xFDF
 20043                           postinc2	equ	0xFDE
 20044                           postdec2	equ	0xFDD
 20045                           plusw2	equ	0xFDB
 20046                           fsr2h	equ	0xFDA
 20047                           fsr2l	equ	0xFD9
 20048                           status	equ	0xFD8
 20049                           
 20050 ;; *************** function ___awmod *****************
 20051 ;; Defined at:
 20052 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 20053 ;; Parameters:    Size  Location     Type
 20054 ;;  dividend        2    0[BANK0 ] int 
 20055 ;;  divisor         2    2[BANK0 ] int 
 20056 ;; Auto vars:     Size  Location     Type
 20057 ;;  sign            1    5[BANK0 ] unsigned char 
 20058 ;;  counter         1    4[BANK0 ] unsigned char 
 20059 ;; Return value:  Size  Location     Type
 20060 ;;                  2    0[BANK0 ] int 
 20061 ;; Registers used:
 20062 ;;		wreg, status,2, status,0
 20063 ;; Tracked objects:
 20064 ;;		On entry : F/0
 20065 ;;		On exit  : F/0
 20066 ;;		Unchanged: 0/0
 20067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20071 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20072 ;;Total ram usage:        6 bytes
 20073 ;; Hardware stack levels used:    1
 20074 ;; Hardware stack levels required when called:   11
 20075 ;; This function calls:
 20076 ;;		Nothing
 20077 ;; This function is called by:
 20078 ;;		_month_length
 20079 ;; This function uses a non-reentrant model
 20080 ;;
 20081                           
 20082                           	psect	text94
 20083  013740                     __ptext94:
 20084                           	opt stack 0
 20085  013740                     ___awmod:
 20086                           	opt stack 11
 20087                           
 20088                           ; BSR set to: 0
 20089                           
 20090                           ; BSR set to: 0
 20091                           ;incstack = 0
 20092  013740  6B65               	clrf	___awmod@sign& (0+255),b
 20093                           
 20094                           ; BSR set to: 0
 20095  013742  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 20096  013744  D006               	goto	l9496
 20097                           
 20098                           ; BSR set to: 0
 20099  013746  6D60               	negf	___awmod@dividend& (0+255),b
 20100  013748  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 20101  01374A  B0D8               	btfsc	status,0,c
 20102  01374C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 20103                           
 20104                           ; BSR set to: 0
 20105  01374E  0E01               	movlw	1
 20106  013750  6F65               	movwf	___awmod@sign& (0+255),b
 20107  013752                     l9496:
 20108                           
 20109                           ; BSR set to: 0
 20110  013752  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20111  013754  D004               	goto	l9500
 20112                           
 20113                           ; BSR set to: 0
 20114  013756  6D62               	negf	___awmod@divisor& (0+255),b
 20115  013758  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 20116  01375A  B0D8               	btfsc	status,0,c
 20117  01375C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 20118  01375E                     l9500:
 20119                           
 20120                           ; BSR set to: 0
 20121  01375E  5162               	movf	___awmod@divisor& (0+255),w,b
 20122  013760  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 20123  013762  E017               	bz	l9516
 20124                           
 20125                           ; BSR set to: 0
 20126  013764  0E01               	movlw	1
 20127  013766  6F64               	movwf	___awmod@counter& (0+255),b
 20128  013768  D004               	goto	l9506
 20129  01376A                     l9504:
 20130                           
 20131                           ; BSR set to: 0
 20132  01376A  90D8               	bcf	status,0,c
 20133  01376C  3762               	rlcf	___awmod@divisor& (0+255),f,b
 20134  01376E  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 20135  013770  2B64               	incf	___awmod@counter& (0+255),f,b
 20136  013772                     l9506:
 20137                           
 20138                           ; BSR set to: 0
 20139  013772  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20140  013774  D7FA               	goto	l9504
 20141  013776                     l9508:
 20142                           
 20143                           ; BSR set to: 0
 20144  013776  5162               	movf	___awmod@divisor& (0+255),w,b
 20145  013778  5D60               	subwf	___awmod@dividend& (0+255),w,b
 20146  01377A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 20147  01377C  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 20148  01377E  E304               	bnc	l9512
 20149                           
 20150                           ; BSR set to: 0
 20151  013780  5162               	movf	___awmod@divisor& (0+255),w,b
 20152  013782  5F60               	subwf	___awmod@dividend& (0+255),f,b
 20153  013784  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 20154  013786  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 20155  013788                     l9512:
 20156                           
 20157                           ; BSR set to: 0
 20158  013788  90D8               	bcf	status,0,c
 20159  01378A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 20160  01378C  3362               	rrcf	___awmod@divisor& (0+255),f,b
 20161                           
 20162                           ; BSR set to: 0
 20163  01378E  2F64               	decfsz	___awmod@counter& (0+255),f,b
 20164  013790  D7F2               	goto	l9508
 20165  013792                     l9516:
 20166                           
 20167                           ; BSR set to: 0
 20168  013792  5165               	movf	___awmod@sign& (0+255),w,b
 20169  013794  E004               	bz	l9520
 20170                           
 20171                           ; BSR set to: 0
 20172  013796  6D60               	negf	___awmod@dividend& (0+255),b
 20173  013798  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 20174  01379A  B0D8               	btfsc	status,0,c
 20175  01379C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 20176  01379E                     l9520:
 20177                           
 20178                           ; BSR set to: 0
 20179  01379E  C060  F060         	movff	___awmod@dividend,?___awmod
 20180  0137A2  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 20181                           
 20182                           ; BSR set to: 0
 20183  0137A6  0012               	return		;funcret
 20184  0137A8                     __end_of___awmod:
 20185                           	opt stack 0
 20186                           tblptru	equ	0xFF8
 20187                           tblptrh	equ	0xFF7
 20188                           tblptrl	equ	0xFF6
 20189                           tablat	equ	0xFF5
 20190                           prodh	equ	0xFF4
 20191                           prodl	equ	0xFF3
 20192                           intcon	equ	0xFF2
 20193                           intcon2	equ	0xFF1
 20194                           postinc0	equ	0xFEE
 20195                           wreg	equ	0xFE8
 20196                           indf1	equ	0xFE7
 20197                           postinc1	equ	0xFE6
 20198                           postdec1	equ	0xFE5
 20199                           fsr1h	equ	0xFE2
 20200                           fsr1l	equ	0xFE1
 20201                           indf2	equ	0xFDF
 20202                           postinc2	equ	0xFDE
 20203                           postdec2	equ	0xFDD
 20204                           plusw2	equ	0xFDB
 20205                           fsr2h	equ	0xFDA
 20206                           fsr2l	equ	0xFD9
 20207                           status	equ	0xFD8
 20208                           
 20209 ;; *************** function ___lmul *****************
 20210 ;; Defined at:
 20211 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 20212 ;; Parameters:    Size  Location     Type
 20213 ;;  multiplier      4   13[BANK0 ] unsigned long 
 20214 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 20215 ;; Auto vars:     Size  Location     Type
 20216 ;;  product         4   21[BANK0 ] unsigned long 
 20217 ;; Return value:  Size  Location     Type
 20218 ;;                  4   13[BANK0 ] unsigned long 
 20219 ;; Registers used:
 20220 ;;		wreg, status,2, status,0
 20221 ;; Tracked objects:
 20222 ;;		On entry : F/0
 20223 ;;		On exit  : F/0
 20224 ;;		Unchanged: 0/0
 20225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20227 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20229 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20230 ;;Total ram usage:       12 bytes
 20231 ;; Hardware stack levels used:    1
 20232 ;; Hardware stack levels required when called:   11
 20233 ;; This function calls:
 20234 ;;		Nothing
 20235 ;; This function is called by:
 20236 ;;		_get_quot_rem
 20237 ;;		_caltime_to_epoch
 20238 ;;		_RTCC_adjust_time_inc
 20239 ;;		_RTCC_adjust_time_dec
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           	psect	text95
 20244  013BD8                     __ptext95:
 20245                           	opt stack 0
 20246  013BD8                     ___lmul:
 20247                           	opt stack 12
 20248                           
 20249                           ; BSR set to: 0
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;incstack = 0
 20253  013BD8  6B75               	clrf	___lmul@product& (0+255),b
 20254  013BDA  6B76               	clrf	(___lmul@product+1)& (0+255),b
 20255  013BDC  6B77               	clrf	(___lmul@product+2)& (0+255),b
 20256  013BDE  6B78               	clrf	(___lmul@product+3)& (0+255),b
 20257  013BE0                     l1995:
 20258                           
 20259                           ; BSR set to: 0
 20260  013BE0  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 20261  013BE2  D008               	goto	l9574
 20262                           
 20263                           ; BSR set to: 0
 20264  013BE4  5171               	movf	___lmul@multiplicand& (0+255),w,b
 20265  013BE6  2775               	addwf	___lmul@product& (0+255),f,b
 20266  013BE8  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 20267  013BEA  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 20268  013BEC  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 20269  013BEE  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 20270  013BF0  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 20271  013BF2  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 20272  013BF4                     l9574:
 20273                           
 20274                           ; BSR set to: 0
 20275  013BF4  90D8               	bcf	status,0,c
 20276  013BF6  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 20277  013BF8  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 20278  013BFA  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 20279  013BFC  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 20280                           
 20281                           ; BSR set to: 0
 20282  013BFE  90D8               	bcf	status,0,c
 20283  013C00  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 20284  013C02  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 20285  013C04  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 20286  013C06  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 20287  013C08  516D               	movf	___lmul@multiplier& (0+255),w,b
 20288  013C0A  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 20289  013C0C  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 20290  013C0E  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 20291  013C10  E1E7               	bnz	l1995
 20292                           
 20293                           ; BSR set to: 0
 20294  013C12  C075  F06D         	movff	___lmul@product,?___lmul
 20295  013C16  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 20296  013C1A  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 20297  013C1E  C078  F070         	movff	___lmul@product+3,?___lmul+3
 20298                           
 20299                           ; BSR set to: 0
 20300  013C22  0012               	return		;funcret
 20301  013C24                     __end_of___lmul:
 20302                           	opt stack 0
 20303                           tblptru	equ	0xFF8
 20304                           tblptrh	equ	0xFF7
 20305                           tblptrl	equ	0xFF6
 20306                           tablat	equ	0xFF5
 20307                           prodh	equ	0xFF4
 20308                           prodl	equ	0xFF3
 20309                           intcon	equ	0xFF2
 20310                           intcon2	equ	0xFF1
 20311                           postinc0	equ	0xFEE
 20312                           wreg	equ	0xFE8
 20313                           indf1	equ	0xFE7
 20314                           postinc1	equ	0xFE6
 20315                           postdec1	equ	0xFE5
 20316                           fsr1h	equ	0xFE2
 20317                           fsr1l	equ	0xFE1
 20318                           indf2	equ	0xFDF
 20319                           postinc2	equ	0xFDE
 20320                           postdec2	equ	0xFDD
 20321                           plusw2	equ	0xFDB
 20322                           fsr2h	equ	0xFDA
 20323                           fsr2l	equ	0xFD9
 20324                           status	equ	0xFD8
 20325                           
 20326 ;; *************** function _RTCC_to_caltime *****************
 20327 ;; Defined at:
 20328 ;;		line 90 in file "../My_library/My_RTCC.c"
 20329 ;; Parameters:    Size  Location     Type
 20330 ;;  tm              2    2[BANK0 ] PTR struct .
 20331 ;;		 -> now(14), 
 20332 ;; Auto vars:     Size  Location     Type
 20333 ;;  dumy            1    0        unsigned char 
 20334 ;; Return value:  Size  Location     Type
 20335 ;;		None               void
 20336 ;; Registers used:
 20337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20338 ;; Tracked objects:
 20339 ;;		On entry : F/0
 20340 ;;		On exit  : F/0
 20341 ;;		Unchanged: 0/0
 20342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20346 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20347 ;;Total ram usage:        2 bytes
 20348 ;; Hardware stack levels used:    1
 20349 ;; Hardware stack levels required when called:   12
 20350 ;; This function calls:
 20351 ;;		_x_to_d
 20352 ;; This function is called by:
 20353 ;;		_RTCC_from_RTCC
 20354 ;; This function uses a non-reentrant model
 20355 ;;
 20356                           
 20357                           	psect	text96
 20358  01304A                     __ptext96:
 20359                           	opt stack 0
 20360  01304A                     _RTCC_to_caltime:
 20361                           	opt stack 12
 20362  01304A                     l902:
 20363  01304A  010F               	movlb	15	; () banked
 20364  01304C  B93F               	btfsc	63,4,b	;volatile
 20365  01304E  D7FD               	goto	l902
 20366                           
 20367                           ; BSR set to: 15
 20368                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 20369                           
 20370                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 20371                           
 20372                           ; BSR set to: 15
 20373                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 20374  013050  D83C               	call	PL280	;call to abstracted procedure
 20375  013052  D82E               	call	PL98	;call to abstracted procedure
 20376  013054  EC9E  F0A2         	call	_x_to_d
 20377  013058  6EDF               	movwf	indf2,c
 20378                           
 20379                           ; BSR set to: 0
 20380                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 20381  01305A  010F               	movlb	15	; () banked
 20382  01305C  513B               	movf	59,w,b	;volatile
 20383                           
 20384                           ; BSR set to: 15
 20385                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 20386  01305E  0100               	movlb	0	; () banked
 20387  013060  EE20 F008          	lfsr	2,8
 20388  013064  D825               	call	PL98	;call to abstracted procedure
 20389  013066  EC9E  F0A2         	call	_x_to_d
 20390  01306A  6EDF               	movwf	indf2,c
 20391                           
 20392                           ; BSR set to: 0
 20393                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 20394  01306C  EE20 F009          	lfsr	2,9
 20395  013070  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 20396  013072  D825               	call	PL144	;call to abstracted procedure
 20397  013074  EC9E  F0A2         	call	_x_to_d
 20398  013078  6EDF               	movwf	indf2,c
 20399                           
 20400                           ; BSR set to: 0
 20401                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 20402  01307A  EE20 F006          	lfsr	2,6
 20403  01307E  D818               	call	PL98	;call to abstracted procedure
 20404  013080  EC9E  F0A2         	call	_x_to_d
 20405  013084  6EDF               	movwf	indf2,c
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 20409  013086  EE20 F007          	lfsr	2,7
 20410  01308A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 20411  01308C  D818               	call	PL144	;call to abstracted procedure
 20412  01308E  EC9E  F0A2         	call	_x_to_d
 20413  013092  6EDF               	movwf	indf2,c
 20414                           
 20415                           ; BSR set to: 0
 20416                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 20417  013094  EE20 F004          	lfsr	2,4
 20418  013098  D80B               	call	PL98	;call to abstracted procedure
 20419  01309A  EC9E  F0A2         	call	_x_to_d
 20420  01309E  6EDF               	movwf	indf2,c
 20421                           
 20422                           ; BSR set to: 0
 20423                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 20424  0130A0  EE20 F005          	lfsr	2,5
 20425  0130A4  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 20426  0130A6  D80B               	call	PL144	;call to abstracted procedure
 20427  0130A8  EC9E  F0A2         	call	_x_to_d
 20428  0130AC  6EDF               	movwf	indf2,c
 20429                           
 20430                           ; BSR set to: 0
 20431  0130AE  0012               	return		;funcret
 20432  0130B0                     __end_of_RTCC_to_caltime:
 20433                           	opt stack 0
 20434  0130B0                     PL98:
 20435                           	opt stack 12
 20436  0130B0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 20437  0130B2  26D9               	addwf	fsr2l,f,c
 20438  0130B4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 20439  0130B6  22DA               	addwfc	fsr2h,f,c
 20440  0130B8  010F               	movlb	15	; () banked
 20441  0130BA  513A               	movf	58,w,b	;volatile
 20442  0130BC  0012               	return	
 20443  0130BE                     __end_ofPL98:
 20444                           	opt stack 0
 20445  0130BE                     PL144:
 20446                           	opt stack 12
 20447  0130BE  26D9               	addwf	fsr2l,f,c
 20448  0130C0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 20449  0130C2  22DA               	addwfc	fsr2h,f,c
 20450  0130C4  010F               	movlb	15	; () banked
 20451  0130C6  513B               	movf	59,w,b	;volatile
 20452  0130C8  0012               	return	
 20453  0130CA                     __end_ofPL144:
 20454                           	opt stack 0
 20455  0130CA                     PL280:
 20456                           	opt stack 12
 20457  0130CA  813F               	bsf	63,0,b	;volatile
 20458  0130CC  833F               	bsf	63,1,b	;volatile
 20459  0130CE  0100               	movlb	0	; () banked
 20460  0130D0  EE20 F00A          	lfsr	2,10
 20461  0130D4  0012               	return	
 20462  0130D6                     __end_ofPL280:
 20463                           	opt stack 0
 20464                           tblptru	equ	0xFF8
 20465                           tblptrh	equ	0xFF7
 20466                           tblptrl	equ	0xFF6
 20467                           tablat	equ	0xFF5
 20468                           prodh	equ	0xFF4
 20469                           prodl	equ	0xFF3
 20470                           intcon	equ	0xFF2
 20471                           intcon2	equ	0xFF1
 20472                           postinc0	equ	0xFEE
 20473                           wreg	equ	0xFE8
 20474                           indf1	equ	0xFE7
 20475                           postinc1	equ	0xFE6
 20476                           postdec1	equ	0xFE5
 20477                           fsr1h	equ	0xFE2
 20478                           fsr1l	equ	0xFE1
 20479                           indf2	equ	0xFDF
 20480                           postinc2	equ	0xFDE
 20481                           postdec2	equ	0xFDD
 20482                           plusw2	equ	0xFDB
 20483                           fsr2h	equ	0xFDA
 20484                           fsr2l	equ	0xFD9
 20485                           status	equ	0xFD8
 20486                           
 20487 ;; *************** function _x_to_d *****************
 20488 ;; Defined at:
 20489 ;;		line 52 in file "../My_library/My_RTCC.c"
 20490 ;; Parameters:    Size  Location     Type
 20491 ;;  hex             1    wreg     unsigned char 
 20492 ;; Auto vars:     Size  Location     Type
 20493 ;;  hex             1    1[BANK0 ] unsigned char 
 20494 ;; Return value:  Size  Location     Type
 20495 ;;                  1    wreg      unsigned char 
 20496 ;; Registers used:
 20497 ;;		wreg, status,2, status,0, prodl, prodh
 20498 ;; Tracked objects:
 20499 ;;		On entry : F/F
 20500 ;;		On exit  : F/0
 20501 ;;		Unchanged: 0/0
 20502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20507 ;;Total ram usage:        2 bytes
 20508 ;; Hardware stack levels used:    1
 20509 ;; Hardware stack levels required when called:   11
 20510 ;; This function calls:
 20511 ;;		Nothing
 20512 ;; This function is called by:
 20513 ;;		_RTCC_to_caltime
 20514 ;; This function uses a non-reentrant model
 20515 ;;
 20516                           
 20517                           	psect	text97
 20518  01453C                     __ptext97:
 20519                           	opt stack 0
 20520  01453C                     _x_to_d:
 20521                           	opt stack 12
 20522                           
 20523                           ; BSR set to: 0
 20524                           ;incstack = 0
 20525                           ;x_to_d@hex stored from wreg
 20526  01453C  0100               	movlb	0	; () banked
 20527  01453E  6F61               	movwf	x_to_d@hex& (0+255),b
 20528                           
 20529                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 20530  014540  C061  F060         	movff	x_to_d@hex,??_x_to_d
 20531  014544  0E0F               	movlw	15
 20532  014546  1760               	andwf	??_x_to_d& (0+255),f,b
 20533  014548  3961               	swapf	x_to_d@hex& (0+255),w,b
 20534  01454A  0B0F               	andlw	15
 20535  01454C  0D0A               	mullw	10
 20536  01454E  50F3               	movf	prodl,w,c
 20537  014550  2560               	addwf	??_x_to_d& (0+255),w,b
 20538                           
 20539                           ; BSR set to: 0
 20540  014552  0012               	return		;funcret
 20541  014554                     __end_of_x_to_d:
 20542                           	opt stack 0
 20543                           tblptru	equ	0xFF8
 20544                           tblptrh	equ	0xFF7
 20545                           tblptrl	equ	0xFF6
 20546                           tablat	equ	0xFF5
 20547                           prodh	equ	0xFF4
 20548                           prodl	equ	0xFF3
 20549                           intcon	equ	0xFF2
 20550                           intcon2	equ	0xFF1
 20551                           postinc0	equ	0xFEE
 20552                           wreg	equ	0xFE8
 20553                           indf1	equ	0xFE7
 20554                           postinc1	equ	0xFE6
 20555                           postdec1	equ	0xFE5
 20556                           fsr1h	equ	0xFE2
 20557                           fsr1l	equ	0xFE1
 20558                           indf2	equ	0xFDF
 20559                           postinc2	equ	0xFDE
 20560                           postdec2	equ	0xFDD
 20561                           plusw2	equ	0xFDB
 20562                           fsr2h	equ	0xFDA
 20563                           fsr2l	equ	0xFD9
 20564                           status	equ	0xFD8
 20565                           
 20566 ;; *************** function _ISR *****************
 20567 ;; Defined at:
 20568 ;;		line 49 in file "main.c"
 20569 ;; Parameters:    Size  Location     Type
 20570 ;;		None
 20571 ;; Auto vars:     Size  Location     Type
 20572 ;;		None
 20573 ;; Return value:  Size  Location     Type
 20574 ;;		None               void
 20575 ;; Registers used:
 20576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20577 ;; Tracked objects:
 20578 ;;		On entry : 0/0
 20579 ;;		On exit  : 0/0
 20580 ;;		Unchanged: 0/0
 20581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20584 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20585 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20586 ;;Total ram usage:       10 bytes
 20587 ;; Hardware stack levels used:    1
 20588 ;; Hardware stack levels required when called:   10
 20589 ;; This function calls:
 20590 ;;		_LED_indicator
 20591 ;;		_USB_ISR
 20592 ;;		_millis_timer
 20593 ;; This function is called by:
 20594 ;;		Interrupt level 2
 20595 ;; This function uses a non-reentrant model
 20596 ;;
 20597                           
 20598                           	psect	intcode
 20599  000008                     __pintcode:
 20600                           	opt stack 0
 20601  000008                     _ISR:
 20602                           	opt stack 11
 20603                           
 20604                           ; BSR set to: 0
 20605                           ;incstack = 0
 20606  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20607  00000A  CFE1 F04A          	movff	fsr1l,??_ISR
 20608  00000E  CFE2 F04B          	movff	fsr1h,??_ISR+1
 20609  000012  CFD9 F04C          	movff	fsr2l,??_ISR+2
 20610  000016  CFDA F04D          	movff	fsr2h,??_ISR+3
 20611  00001A  CFF3 F04E          	movff	prodl,??_ISR+4
 20612  00001E  CFF4 F04F          	movff	prodh,??_ISR+5
 20613  000022  CFF6 F050          	movff	tblptrl,??_ISR+6
 20614  000026  CFF7 F051          	movff	tblptrh,??_ISR+7
 20615  00002A  CFF8 F052          	movff	tblptru,??_ISR+8
 20616  00002E  CFF5 F053          	movff	tablat,??_ISR+9
 20617                           
 20618                           ;main.c: 50: USB_ISR();
 20619  000032  ECD6  F0A2         	call	_USB_ISR	;wreg free
 20620                           
 20621                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 20622  000036  B4F2               	btfsc	intcon,2,c	;volatile
 20623  000038  AAF2               	btfss	intcon,5,c	;volatile
 20624  00003A  D003               	goto	i2l9350
 20625                           
 20626                           ;main.c: 52: INTCONbits.T0IF = 0;
 20627  00003C  94F2               	bcf	intcon,2,c	;volatile
 20628                           
 20629                           ;main.c: 53: millis_timer();
 20630  00003E  ECC0  F0A2         	call	_millis_timer	;wreg free
 20631  000042                     i2l9350:
 20632                           
 20633                           ;main.c: 54: }
 20634                           ;main.c: 55: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 20635  000042  B09E               	btfsc	3998,0,c	;volatile
 20636  000044  A09D               	btfss	3997,0,c	;volatile
 20637  000046  D015               	goto	i2l9366
 20638                           
 20639                           ;main.c: 56: PIR1bits.TMR1IF = 0;
 20640  000048  909E               	bcf	3998,0,c	;volatile
 20641                           
 20642                           ;main.c: 57: TMR1H = 0xC0;
 20643  00004A  0EC0               	movlw	192
 20644  00004C  6ECF               	movwf	4047,c	;volatile
 20645                           
 20646                           ;main.c: 58: cut_time_flag = 1;
 20647  00004E  0E01               	movlw	1
 20648  000050  0101               	movlb	1	; () banked
 20649  000052  6F2E               	movwf	_cut_time_flag& (0+255),b
 20650                           
 20651                           ;main.c: 59: static uint8_t cnt_t1 = 0;
 20652                           ;main.c: 60: if (cnt_t1) {
 20653  000054  5122               	movf	ISR@cnt_t1& (0+255),w,b
 20654  000056  E002               	bz	i2l9360
 20655                           
 20656                           ; BSR set to: 1
 20657                           ;main.c: 61: cnt_t1 = 0;
 20658  000058  6B22               	clrf	ISR@cnt_t1& (0+255),b
 20659                           
 20660                           ;main.c: 62: } else {
 20661  00005A  D00B               	goto	i2l9366
 20662  00005C                     i2l9360:
 20663                           
 20664                           ; BSR set to: 1
 20665                           ;main.c: 63: cnt_t1 = 1;
 20666  00005C  0E01               	movlw	1
 20667  00005E  6F22               	movwf	ISR@cnt_t1& (0+255),b
 20668                           
 20669                           ;main.c: 64: terminal_data_out_flag = 1;
 20670  000060  6F34               	movwf	_terminal_data_out_flag& (0+255),b
 20671                           
 20672                           ;main.c: 65: integrate_flag = 1;
 20673  000062  6F30               	movwf	_integrate_flag& (0+255),b
 20674                           
 20675                           ; BSR set to: 1
 20676                           ;main.c: 66: if (print_item == PRINT_DATA)display_flag = 1;
 20677  000064  0E02               	movlw	2
 20678  000066  0100               	movlb	0	; () banked
 20679  000068  19EC               	xorwf	_print_item& (0+255),w,b
 20680  00006A  E103               	bnz	i2l9366
 20681                           
 20682                           ; BSR set to: 0
 20683  00006C  0E01               	movlw	1
 20684  00006E  0101               	movlb	1	; () banked
 20685  000070  6F2F               	movwf	_display_flag& (0+255),b
 20686  000072                     i2l9366:
 20687                           
 20688                           ;main.c: 67: }
 20689                           ;main.c: 68: }
 20690                           ;main.c: 69: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 20691  000072  B2A1               	btfsc	4001,1,c	;volatile
 20692  000074  A2A0               	btfss	4000,1,c	;volatile
 20693  000076  D00C               	goto	i2l411
 20694                           
 20695                           ;main.c: 70: PIR2bits.TMR3IF = 0;
 20696  000078  92A1               	bcf	4001,1,c	;volatile
 20697                           
 20698                           ;main.c: 71: ctmu_sampling_flag = 1;
 20699  00007A  0E01               	movlw	1
 20700  00007C  0101               	movlb	1	; () banked
 20701  00007E  6F2D               	movwf	_ctmu_sampling_flag& (0+255),b
 20702                           
 20703                           ;main.c: 72: static uint8_t cnt;
 20704                           ;main.c: 73: if (cnt) {
 20705  000080  5121               	movf	ISR@cnt& (0+255),w,b
 20706  000082  E002               	bz	i2l9376
 20707                           
 20708                           ; BSR set to: 1
 20709                           ;main.c: 74: cnt--;
 20710  000084  0721               	decf	ISR@cnt& (0+255),f,b
 20711                           
 20712                           ;main.c: 75: } else {
 20713  000086  D004               	goto	i2l411
 20714  000088                     i2l9376:
 20715                           
 20716                           ; BSR set to: 1
 20717                           ;main.c: 76: cnt = 8;
 20718  000088  0E08               	movlw	8
 20719  00008A  6F21               	movwf	ISR@cnt& (0+255),b
 20720                           
 20721                           ; BSR set to: 1
 20722                           ;main.c: 77: LED_indicator();
 20723  00008C  ECDA  F091         	call	_LED_indicator	;wreg free
 20724  000090                     i2l411:
 20725  000090  C053  FFF5         	movff	??_ISR+9,tablat
 20726  000094  C052  FFF8         	movff	??_ISR+8,tblptru
 20727  000098  C051  FFF7         	movff	??_ISR+7,tblptrh
 20728  00009C  C050  FFF6         	movff	??_ISR+6,tblptrl
 20729  0000A0  C04F  FFF4         	movff	??_ISR+5,prodh
 20730  0000A4  C04E  FFF3         	movff	??_ISR+4,prodl
 20731  0000A8  C04D  FFDA         	movff	??_ISR+3,fsr2h
 20732  0000AC  C04C  FFD9         	movff	??_ISR+2,fsr2l
 20733  0000B0  C04B  FFE2         	movff	??_ISR+1,fsr1h
 20734  0000B4  C04A  FFE1         	movff	??_ISR,fsr1l
 20735  0000B8  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20736  0000BA  0011               	retfie		f
 20737  0000BC                     __end_of_ISR:
 20738                           	opt stack 0
 20739                           tblptru	equ	0xFF8
 20740                           tblptrh	equ	0xFF7
 20741                           tblptrl	equ	0xFF6
 20742                           tablat	equ	0xFF5
 20743                           prodh	equ	0xFF4
 20744                           prodl	equ	0xFF3
 20745                           intcon	equ	0xFF2
 20746                           intcon2	equ	0xFF1
 20747                           postinc0	equ	0xFEE
 20748                           wreg	equ	0xFE8
 20749                           indf1	equ	0xFE7
 20750                           postinc1	equ	0xFE6
 20751                           postdec1	equ	0xFE5
 20752                           fsr1h	equ	0xFE2
 20753                           fsr1l	equ	0xFE1
 20754                           indf2	equ	0xFDF
 20755                           postinc2	equ	0xFDE
 20756                           postdec2	equ	0xFDD
 20757                           plusw2	equ	0xFDB
 20758                           fsr2h	equ	0xFDA
 20759                           fsr2l	equ	0xFD9
 20760                           status	equ	0xFD8
 20761                           
 20762 ;; *************** function _millis_timer *****************
 20763 ;; Defined at:
 20764 ;;		line 219 in file "../My_library/My_PIC.c"
 20765 ;; Parameters:    Size  Location     Type
 20766 ;;		None
 20767 ;; Auto vars:     Size  Location     Type
 20768 ;;		None
 20769 ;; Return value:  Size  Location     Type
 20770 ;;		None               void
 20771 ;; Registers used:
 20772 ;;		wreg, status,2, status,0
 20773 ;; Tracked objects:
 20774 ;;		On entry : 0/0
 20775 ;;		On exit  : F/1
 20776 ;;		Unchanged: 0/0
 20777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20782 ;;Total ram usage:        0 bytes
 20783 ;; Hardware stack levels used:    1
 20784 ;; This function calls:
 20785 ;;		Nothing
 20786 ;; This function is called by:
 20787 ;;		_ISR
 20788 ;; This function uses a non-reentrant model
 20789 ;;
 20790                           
 20791                           	psect	text99
 20792  014580                     __ptext99:
 20793                           	opt stack 0
 20794  014580                     _millis_timer:
 20795                           	opt stack 20
 20796                           
 20797                           ;My_PIC.c: 220: static uint16_t cnt;
 20798                           ;My_PIC.c: 221: if (cnt) {
 20799                           
 20800                           ;incstack = 0
 20801  014580  0101               	movlb	1	; () banked
 20802  014582  511F               	movf	millis_timer@cnt& (0+255),w,b
 20803  014584  1120               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 20804  014586  E001               	bz	i2l9138
 20805  014588  0012               	return	
 20806  01458A                     i2l9138:
 20807                           
 20808                           ; BSR set to: 1
 20809                           ;My_PIC.c: 225: ms++;
 20810  01458A  6B20               	clrf	(millis_timer@cnt+1)& (0+255),b
 20811  01458C  0E2F               	movlw	47
 20812  01458E  6F1F               	movwf	millis_timer@cnt& (0+255),b
 20813                           
 20814                           ; BSR set to: 1
 20815  014590  0C2F               	retlw	47	;funcret
 20816  014592                     __end_of_millis_timer:
 20817                           	opt stack 0
 20818                           tblptru	equ	0xFF8
 20819                           tblptrh	equ	0xFF7
 20820                           tblptrl	equ	0xFF6
 20821                           tablat	equ	0xFF5
 20822                           prodh	equ	0xFF4
 20823                           prodl	equ	0xFF3
 20824                           intcon	equ	0xFF2
 20825                           intcon2	equ	0xFF1
 20826                           postinc0	equ	0xFEE
 20827                           wreg	equ	0xFE8
 20828                           indf1	equ	0xFE7
 20829                           postinc1	equ	0xFE6
 20830                           postdec1	equ	0xFE5
 20831                           fsr1h	equ	0xFE2
 20832                           fsr1l	equ	0xFE1
 20833                           indf2	equ	0xFDF
 20834                           postinc2	equ	0xFDE
 20835                           postdec2	equ	0xFDD
 20836                           plusw2	equ	0xFDB
 20837                           fsr2h	equ	0xFDA
 20838                           fsr2l	equ	0xFD9
 20839                           status	equ	0xFD8
 20840                           
 20841 ;; *************** function _USB_ISR *****************
 20842 ;; Defined at:
 20843 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 20844 ;; Parameters:    Size  Location     Type
 20845 ;;		None
 20846 ;; Auto vars:     Size  Location     Type
 20847 ;;		None
 20848 ;; Return value:  Size  Location     Type
 20849 ;;		None               void
 20850 ;; Registers used:
 20851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20852 ;; Tracked objects:
 20853 ;;		On entry : 0/0
 20854 ;;		On exit  : 0/0
 20855 ;;		Unchanged: 0/0
 20856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20861 ;;Total ram usage:        0 bytes
 20862 ;; Hardware stack levels used:    1
 20863 ;; Hardware stack levels required when called:    9
 20864 ;; This function calls:
 20865 ;;		_USBDeviceTasks
 20866 ;; This function is called by:
 20867 ;;		_ISR
 20868 ;; This function uses a non-reentrant model
 20869 ;;
 20870                           
 20871                           	psect	text100
 20872  0145AC                     __ptext100:
 20873                           	opt stack 0
 20874  0145AC                     _USB_ISR:
 20875                           	opt stack 11
 20876                           
 20877                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 20878                           
 20879                           ; BSR set to: 1
 20880                           ;incstack = 0
 20881  0145AC  EFDD  F08B         	goto	_USBDeviceTasks	;wreg free
 20882  0145B0                     __end_of_USB_ISR:
 20883                           	opt stack 0
 20884                           tblptru	equ	0xFF8
 20885                           tblptrh	equ	0xFF7
 20886                           tblptrl	equ	0xFF6
 20887                           tablat	equ	0xFF5
 20888                           prodh	equ	0xFF4
 20889                           prodl	equ	0xFF3
 20890                           intcon	equ	0xFF2
 20891                           intcon2	equ	0xFF1
 20892                           postinc0	equ	0xFEE
 20893                           wreg	equ	0xFE8
 20894                           indf1	equ	0xFE7
 20895                           postinc1	equ	0xFE6
 20896                           postdec1	equ	0xFE5
 20897                           fsr1h	equ	0xFE2
 20898                           fsr1l	equ	0xFE1
 20899                           indf2	equ	0xFDF
 20900                           postinc2	equ	0xFDE
 20901                           postdec2	equ	0xFDD
 20902                           plusw2	equ	0xFDB
 20903                           fsr2h	equ	0xFDA
 20904                           fsr2l	equ	0xFD9
 20905                           status	equ	0xFD8
 20906                           
 20907 ;; *************** function _USBDeviceTasks *****************
 20908 ;; Defined at:
 20909 ;;		line 489 in file "../My_library/usb/usb_device.c"
 20910 ;; Parameters:    Size  Location     Type
 20911 ;;		None
 20912 ;; Auto vars:     Size  Location     Type
 20913 ;;  i               1   30[COMRAM] unsigned char 
 20914 ;; Return value:  Size  Location     Type
 20915 ;;		None               void
 20916 ;; Registers used:
 20917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20918 ;; Tracked objects:
 20919 ;;		On entry : 0/0
 20920 ;;		On exit  : 0/0
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20927 ;;Total ram usage:        1 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; Hardware stack levels required when called:    8
 20930 ;; This function calls:
 20931 ;;		_USBCtrlEPAllowStatusStage
 20932 ;;		_USBCtrlEPService
 20933 ;;		_USBStallHandler
 20934 ;;		_USBSuspend
 20935 ;;		_USBWakeFromSuspend
 20936 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20937 ;;		i2_USBDeviceInit
 20938 ;; This function is called by:
 20939 ;;		_USB_ISR
 20940 ;; This function uses a non-reentrant model
 20941 ;;
 20942                           
 20943                           	psect	text101
 20944  0117BA                     __ptext101:
 20945                           	opt stack 0
 20946  0117BA                     _USBDeviceTasks:
 20947                           	opt stack 11
 20948                           
 20949                           ;usb_device.c: 491: uint8_t i;
 20950                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 20951                           
 20952                           ;incstack = 0
 20953  0117BA  041B               	decf	_USBDeviceState,w,c	;volatile
 20954  0117BC  E108               	bnz	i2l8868
 20955                           
 20956                           ;usb_device.c: 603: {
 20957                           ;usb_device.c: 613: if(!UCONbits.SE0)
 20958  0117BE  BA65               	btfsc	3941,5,c	;volatile
 20959  0117C0  D006               	goto	i2l8868
 20960                           
 20961                           ;usb_device.c: 614: {
 20962                           ;usb_device.c: 615: {UIR = 0;};
 20963  0117C2  6A62               	clrf	3938,c	;volatile
 20964                           
 20965                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 20966  0117C4  010F               	movlb	15	; () banked
 20967  0117C6  8136               	bsf	54,0,b	;volatile
 20968                           
 20969                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 20970  0117C8  8936               	bsf	54,4,b	;volatile
 20971                           
 20972                           ; BSR set to: 15
 20973                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 20974  0117CA  0E02               	movlw	2
 20975  0117CC  6E1B               	movwf	_USBDeviceState,c	;volatile
 20976  0117CE                     i2l8868:
 20977                           
 20978                           ;usb_device.c: 622: }
 20979                           ;usb_device.c: 623: }
 20980                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 20981  0117CE  A462               	btfss	3938,2,c	;volatile
 20982  0117D0  D006               	goto	i2l8876
 20983  0117D2  010F               	movlb	15	; () banked
 20984  0117D4  A536               	btfss	54,2,b	;volatile
 20985  0117D6  D003               	goto	i2l8876
 20986                           
 20987                           ; BSR set to: 15
 20988                           ;usb_device.c: 640: {
 20989                           ;usb_device.c: 641: (UIR &= 0xFB);
 20990  0117D8  9462               	bcf	3938,2,c	;volatile
 20991                           
 20992                           ; BSR set to: 15
 20993                           ;usb_device.c: 645: USBWakeFromSuspend();
 20994  0117DA  EC31  F0A2         	call	_USBWakeFromSuspend	;wreg free
 20995  0117DE                     i2l8876:
 20996                           
 20997                           ;usb_device.c: 647: }
 20998                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 20999  0117DE  A265               	btfss	3941,1,c	;volatile
 21000  0117E0  D002               	goto	i2l1552
 21001                           
 21002                           ;usb_device.c: 653: {
 21003                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 21004  0117E2  98A1               	bcf	4001,4,c	;volatile
 21005                           
 21006                           ;usb_device.c: 655: return;
 21007  0117E4  0012               	return	
 21008  0117E6                     i2l1552:
 21009                           
 21010                           ;usb_device.c: 656: }
 21011                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 21012  0117E6  A062               	btfss	3938,0,c	;volatile
 21013  0117E8  D009               	goto	i2l8890
 21014  0117EA  010F               	movlb	15	; () banked
 21015  0117EC  A136               	btfss	54,0,b	;volatile
 21016  0117EE  D006               	goto	i2l8890
 21017                           
 21018                           ; BSR set to: 15
 21019                           ;usb_device.c: 669: {
 21020                           ;usb_device.c: 670: USBDeviceInit();
 21021  0117F0  ECF3  F08F         	call	i2_USBDeviceInit	;wreg free
 21022                           
 21023                           ; BSR set to: 13
 21024                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 21025  0117F4  88A0               	bsf	4000,4,c	;volatile
 21026                           
 21027                           ; BSR set to: 13
 21028                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 21029  0117F6  0E04               	movlw	4
 21030  0117F8  6E1B               	movwf	_USBDeviceState,c	;volatile
 21031                           
 21032                           ; BSR set to: 13
 21033                           ;usb_device.c: 686: (UIR &= 0xFE);
 21034  0117FA  9062               	bcf	3938,0,c	;volatile
 21035  0117FC                     i2l8890:
 21036                           
 21037                           ;usb_device.c: 687: }
 21038                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 21039  0117FC  A862               	btfss	3938,4,c	;volatile
 21040  0117FE  D006               	goto	i2l8898
 21041  011800  010F               	movlb	15	; () banked
 21042  011802  A936               	btfss	54,4,b	;volatile
 21043  011804  D003               	goto	i2l8898
 21044                           
 21045                           ; BSR set to: 15
 21046                           ;usb_device.c: 693: {
 21047                           ;usb_device.c: 698: USBSuspend();
 21048  011806  ECDF  F0A1         	call	_USBSuspend	;wreg free
 21049                           
 21050                           ;usb_device.c: 701: (UIR &= 0xEF);
 21051  01180A  9862               	bcf	3938,4,c	;volatile
 21052  01180C                     i2l8898:
 21053                           
 21054                           ;usb_device.c: 702: }
 21055                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 21056  01180C  AC62               	btfss	3938,6,c	;volatile
 21057  01180E  D012               	goto	i2l8914
 21058                           
 21059                           ;usb_device.c: 705: {
 21060                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 21061  011810  010F               	movlb	15	; () banked
 21062  011812  AD36               	btfss	54,6,b	;volatile
 21063  011814  D007               	goto	i2l8904
 21064                           
 21065                           ; BSR set to: 15
 21066                           ;usb_device.c: 707: {
 21067                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 21068  011816  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21069  011818  0E73               	movlw	115
 21070  01181A  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21071  01181C  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21072  01181E  D855               	call	PL264	;call to abstracted procedure
 21073  011820  ECF0  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21074  011824                     i2l8904:
 21075                           
 21076                           ;usb_device.c: 709: }
 21077                           ;usb_device.c: 710: (UIR &= 0xBF);
 21078  011824  9C62               	bcf	3938,6,c	;volatile
 21079                           
 21080                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 21081  011826  501C               	movf	_USBStatusStageTimeoutCounter,w,c
 21082  011828  E001               	bz	i2l8910
 21083                           
 21084                           ;usb_device.c: 736: {
 21085                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 21086  01182A  061C               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 21087  01182C                     i2l8910:
 21088                           
 21089                           ;usb_device.c: 738: }
 21090                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 21091  01182C  501C               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 21092  01182E  E102               	bnz	i2l8914
 21093                           
 21094                           ;usb_device.c: 745: {
 21095                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 21096  011830  ECFE  F099         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21097  011834                     i2l8914:
 21098                           
 21099                           ;usb_device.c: 747: }
 21100                           ;usb_device.c: 749: }
 21101                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 21102  011834  AA62               	btfss	3938,5,c	;volatile
 21103  011836  D004               	goto	i2l8920
 21104  011838  010F               	movlb	15	; () banked
 21105  01183A  BB36               	btfsc	54,5,b	;volatile
 21106                           
 21107                           ; BSR set to: 15
 21108                           ;usb_device.c: 752: {
 21109                           ;usb_device.c: 753: USBStallHandler();
 21110  01183C  ECF0  F0A0         	call	_USBStallHandler	;wreg free
 21111  011840                     i2l8920:
 21112                           
 21113                           ;usb_device.c: 754: }
 21114                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 21115  011840  A262               	btfss	3938,1,c	;volatile
 21116  011842  D00B               	goto	i2l8928
 21117  011844  010F               	movlb	15	; () banked
 21118  011846  A336               	btfss	54,1,b	;volatile
 21119  011848  D008               	goto	i2l8928
 21120                           
 21121                           ; BSR set to: 15
 21122                           ;usb_device.c: 757: {
 21123                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 21124  01184A  0E7F               	movlw	127
 21125  01184C  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21126  01184E  6837               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21127  011850  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21128  011852  D83B               	call	PL264	;call to abstracted procedure
 21129  011854  ECF0  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21130                           
 21131                           ;usb_device.c: 759: {UEIR = 0;};
 21132  011858  6A63               	clrf	3939,c	;volatile
 21133  01185A                     i2l8928:
 21134                           
 21135                           ;usb_device.c: 767: }
 21136                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 21137  01185A  0E04               	movlw	4
 21138  01185C  601B               	cpfslt	_USBDeviceState,c	;volatile
 21139  01185E  D002               	goto	i2l1562
 21140                           
 21141                           ;usb_device.c: 775: {
 21142                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 21143  011860  98A1               	bcf	4001,4,c	;volatile
 21144                           
 21145                           ;usb_device.c: 777: return;
 21146  011862  0C04               	retlw	4
 21147  011864                     i2l1562:
 21148                           
 21149                           ;usb_device.c: 778: }
 21150                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 21151  011864  010F               	movlb	15	; () banked
 21152  011866  A736               	btfss	54,3,b	;volatile
 21153  011868  D02E               	goto	i2l1563
 21154                           
 21155                           ; BSR set to: 15
 21156                           ;usb_device.c: 784: {
 21157                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 21158  01186A  6A49               	clrf	USBDeviceTasks@i,c
 21159  01186C                     i2l1564:
 21160                           
 21161                           ;usb_device.c: 786: {
 21162                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 21163  01186C  A662               	btfss	3938,3,c	;volatile
 21164  01186E  D02B               	goto	i2l1563
 21165                           
 21166                           ;usb_device.c: 788: {
 21167                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 21168  011870  CF64 F02A          	movff	3940,_USTATcopy	;volatile
 21169                           
 21170                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 21171  011874  302A               	rrcf	_USTATcopy,w,c	;volatile
 21172  011876  32E8               	rrcf	wreg,f,c
 21173  011878  32E8               	rrcf	wreg,f,c
 21174  01187A  0B0F               	andlw	15
 21175  01187C  6E22               	movwf	_endpoint_number,c	;volatile
 21176                           
 21177                           ;usb_device.c: 793: (UIR &= 0xF7);
 21178  01187E  9662               	bcf	3938,3,c	;volatile
 21179                           
 21180                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 21181  011880  B42A               	btfsc	_USTATcopy,2,c	;volatile
 21182  011882  D006               	goto	i2l8948
 21183                           
 21184                           ;usb_device.c: 799: {
 21185                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 21186  011884  0E0C               	movlw	low _ep_data_out
 21187  011886  2422               	addwf	_endpoint_number,w,c	;volatile
 21188  011888  6ED9               	movwf	fsr2l,c
 21189  01188A  6ADA               	clrf	fsr2h,c
 21190  01188C  0E01               	movlw	high _ep_data_out
 21191  01188E  D005               	goto	L14
 21192  011890                     i2l8948:
 21193                           
 21194                           ;usb_device.c: 802: else
 21195                           ;usb_device.c: 803: {
 21196                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 21197  011890  0E09               	movlw	low _ep_data_in
 21198  011892  2422               	addwf	_endpoint_number,w,c	;volatile
 21199  011894  6ED9               	movwf	fsr2l,c
 21200  011896  6ADA               	clrf	fsr2h,c
 21201  011898  0E01               	movlw	high _ep_data_in
 21202  01189A                     L14:
 21203  01189A  22DA               	addwfc	fsr2h,f,c
 21204  01189C  0101               	movlb	1	; () banked
 21205  01189E  70DF               	btg	indf2,0,c
 21206                           
 21207                           ; BSR set to: 1
 21208                           ;usb_device.c: 805: }
 21209                           ;usb_device.c: 810: if(endpoint_number == 0)
 21210  0118A0  5022               	movf	_endpoint_number,w,c	;volatile
 21211  0118A2  E103               	bnz	i2l8954
 21212                           
 21213                           ; BSR set to: 1
 21214                           ;usb_device.c: 811: {
 21215                           ;usb_device.c: 812: USBCtrlEPService();
 21216  0118A4  ECE2  F095         	call	_USBCtrlEPService	;wreg free
 21217                           
 21218                           ;usb_device.c: 813: }
 21219  0118A8  D00A               	goto	i2l8956
 21220  0118AA                     i2l8954:
 21221                           
 21222                           ; BSR set to: 1
 21223                           ;usb_device.c: 814: else
 21224                           ;usb_device.c: 815: {
 21225                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 21226  0118AA  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21227  0118AC  0E72               	movlw	114
 21228  0118AE  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21229  0118B0  0E2A               	movlw	low _USTATcopy
 21230  0118B2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21231  0118B4  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21232  0118B6  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21233  0118B8  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21234  0118BA  ECF0  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21235  0118BE                     i2l8956:
 21236  0118BE  2A49               	incf	USBDeviceTasks@i,f,c
 21237  0118C0  0E03               	movlw	3
 21238  0118C2  6449               	cpfsgt	USBDeviceTasks@i,c
 21239  0118C4  D7D3               	goto	i2l1564
 21240  0118C6                     i2l1563:
 21241                           
 21242                           ;usb_device.c: 822: }
 21243                           ;usb_device.c: 823: }
 21244                           ;usb_device.c: 824: }
 21245                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 21246  0118C6  98A1               	bcf	4001,4,c	;volatile
 21247  0118C8  0012               	return		;funcret
 21248  0118CA                     __end_of_USBDeviceTasks:
 21249                           	opt stack 0
 21250  0118CA                     PL264:
 21251                           	opt stack 11
 21252  0118CA  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21253  0118CC  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21254  0118CE  0E01               	movlw	1
 21255  0118D0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21256  0118D2  0C01               	retlw	1
 21257  0118D4                     __end_ofPL264:
 21258                           	opt stack 0
 21259                           tblptru	equ	0xFF8
 21260                           tblptrh	equ	0xFF7
 21261                           tblptrl	equ	0xFF6
 21262                           tablat	equ	0xFF5
 21263                           prodh	equ	0xFF4
 21264                           prodl	equ	0xFF3
 21265                           intcon	equ	0xFF2
 21266                           intcon2	equ	0xFF1
 21267                           postinc0	equ	0xFEE
 21268                           wreg	equ	0xFE8
 21269                           indf1	equ	0xFE7
 21270                           postinc1	equ	0xFE6
 21271                           postdec1	equ	0xFE5
 21272                           fsr1h	equ	0xFE2
 21273                           fsr1l	equ	0xFE1
 21274                           indf2	equ	0xFDF
 21275                           postinc2	equ	0xFDE
 21276                           postdec2	equ	0xFDD
 21277                           plusw2	equ	0xFDB
 21278                           fsr2h	equ	0xFDA
 21279                           fsr2l	equ	0xFD9
 21280                           status	equ	0xFD8
 21281                           
 21282 ;; *************** function i2_USBDeviceInit *****************
 21283 ;; Defined at:
 21284 ;;		line 298 in file "../My_library/usb/usb_device.c"
 21285 ;; Parameters:    Size  Location     Type
 21286 ;;		None
 21287 ;; Auto vars:     Size  Location     Type
 21288 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 21289 ;; Return value:  Size  Location     Type
 21290 ;;		None               void
 21291 ;; Registers used:
 21292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21293 ;; Tracked objects:
 21294 ;;		On entry : F/F
 21295 ;;		On exit  : F/D
 21296 ;;		Unchanged: 0/0
 21297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21302 ;;Total ram usage:        1 bytes
 21303 ;; Hardware stack levels used:    1
 21304 ;; Hardware stack levels required when called:    1
 21305 ;; This function calls:
 21306 ;;		i2_memset
 21307 ;; This function is called by:
 21308 ;;		_USBDeviceTasks
 21309 ;; This function uses a non-reentrant model
 21310 ;;
 21311                           
 21312                           	psect	text102
 21313  011FE6                     __ptext102:
 21314                           	opt stack 0
 21315  011FE6                     i2_USBDeviceInit:
 21316                           	opt stack 17
 21317                           
 21318                           ; BSR set to: 15
 21319                           ;usb_device.c: 300: uint8_t i;
 21320                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 21321                           
 21322                           ;incstack = 0
 21323  011FE6  98A0               	bcf	4000,4,c	;volatile
 21324                           
 21325                           ;usb_device.c: 305: {UEIR = 0;};
 21326  011FE8  6A63               	clrf	3939,c	;volatile
 21327                           
 21328                           ;usb_device.c: 308: {UIR = 0;};
 21329  011FEA  6A62               	clrf	3938,c	;volatile
 21330                           
 21331                           ;usb_device.c: 311: UEP0 = 0;
 21332  011FEC  6B26               	clrf	38,b	;volatile
 21333                           
 21334                           ; BSR set to: 15
 21335                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 21336  011FEE  ECA8  F094         	call	PL168	;call to abstracted procedure
 21337  011FF2  ECA1  F094         	call	PL156	;call to abstracted procedure
 21338  011FF6  EC4A  F0A1         	call	i2_memset	;wreg free
 21339                           
 21340                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 21341  011FFA  0E16               	movlw	22
 21342  011FFC  010F               	movlb	15	; () banked
 21343                           
 21344                           ; BSR set to: 15
 21345                           
 21346                           ; BSR set to: 15
 21347  011FFE  ECD1  F0A0         	call	PL202	;call to abstracted procedure
 21348                           
 21349                           ; BSR set to: 15
 21350                           ;usb_device.c: 318: ;
 21351                           ;usb_device.c: 321: ;
 21352                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 21353  012002  6A33               	clrf	i2USBDeviceInit@i,c
 21354  012004                     i2l8304:
 21355                           
 21356                           ; BSR set to: 15
 21357                           ;usb_device.c: 325: {
 21358                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 21359  012004  5033               	movf	i2USBDeviceInit@i,w,c
 21360  012006  D838               	call	PL118	;call to abstracted procedure
 21361  012008  EC90  F095         	call	PL76	;call to abstracted procedure
 21362                           
 21363                           ; BSR set to: 15
 21364  01200C  2A33               	incf	i2USBDeviceInit@i,f,c
 21365                           
 21366                           ; BSR set to: 15
 21367  01200E  0E0B               	movlw	11
 21368  012010  6433               	cpfsgt	i2USBDeviceInit@i,c
 21369  012012  D7F8               	goto	i2l8304
 21370                           
 21371                           ; BSR set to: 15
 21372                           ;usb_device.c: 327: }
 21373                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 21374  012014  8C65               	bsf	3941,6,c	;volatile
 21375                           
 21376                           ;usb_device.c: 333: UADDR = 0x00;
 21377  012016  6B38               	clrf	56,b	;volatile
 21378                           
 21379                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 21380  012018  9865               	bcf	3941,4,c	;volatile
 21381                           
 21382                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 21383  01201A  9C65               	bcf	3941,6,c	;volatile
 21384                           
 21385                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 21386  01201C  D001               	goto	i2l8318
 21387  01201E                     i2l8310:
 21388                           
 21389                           ; BSR set to: 15
 21390                           ;usb_device.c: 343: {
 21391                           ;usb_device.c: 344: (UIR &= 0xF7);
 21392                           
 21393                           ; BSR set to: 15
 21394                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 21395                           
 21396                           ; BSR set to: 15
 21397                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 21398                           
 21399                           ; BSR set to: 15
 21400                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 21401  01201E  D846               	call	PL288	;call to abstracted procedure
 21402  012020                     i2l8318:
 21403                           
 21404                           ; BSR set to: 15
 21405  012020  B662               	btfsc	3938,3,c	;volatile
 21406  012022  D7FD               	goto	i2l8310
 21407                           
 21408                           ; BSR set to: 15
 21409                           ;usb_device.c: 349: }
 21410                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 21411                           
 21412                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 21413                           
 21414                           ; BSR set to: 1
 21415                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 21416                           
 21417                           ; BSR set to: 1
 21418                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 21419                           
 21420                           ; BSR set to: 1
 21421                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 21422  012024  D83B               	call	PL240	;call to abstracted procedure
 21423                           
 21424                           ; BSR set to: 1
 21425                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 21426  012026  6A33               	clrf	i2USBDeviceInit@i,c
 21427  012028                     i2l8334:
 21428                           
 21429                           ;usb_device.c: 363: {
 21430                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 21431  012028  5033               	movf	i2USBDeviceInit@i,w,c
 21432  01202A  EC3B  F095         	call	PL46	;call to abstracted procedure
 21433  01202E  6ADE               	clrf	postinc2,c
 21434  012030  6ADD               	clrf	postdec2,c
 21435                           
 21436                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 21437  012032  5033               	movf	i2USBDeviceInit@i,w,c
 21438  012034  EC33  F095         	call	PL22	;call to abstracted procedure
 21439  012038  6ADE               	clrf	postinc2,c
 21440  01203A  6ADD               	clrf	postdec2,c
 21441                           
 21442                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 21443  01203C  0E09               	movlw	low _ep_data_in
 21444  01203E  2433               	addwf	i2USBDeviceInit@i,w,c
 21445                           
 21446                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 21447  012040  D820               	call	PL158	;call to abstracted procedure
 21448  012042  2433               	addwf	i2USBDeviceInit@i,w,c
 21449  012044  D825               	call	PL196	;call to abstracted procedure
 21450  012046  2A33               	incf	i2USBDeviceInit@i,f,c
 21451  012048  0E02               	movlw	2
 21452  01204A  6433               	cpfsgt	i2USBDeviceInit@i,c
 21453  01204C  D7ED               	goto	i2l8334
 21454                           
 21455                           ;usb_device.c: 368: }
 21456                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 21457  01204E  0E08               	movlw	8
 21458                           
 21459                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 21460                           
 21461                           ; BSR set to: 15
 21462                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 21463                           
 21464                           ; BSR set to: 13
 21465                           ;usb_device.c: 376: BDT[0].CNT = 8;
 21466                           
 21467                           ; BSR set to: 13
 21468                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 21469                           
 21470                           ; BSR set to: 13
 21471                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 21472                           
 21473                           ; BSR set to: 13
 21474                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 21475                           
 21476                           ; BSR set to: 13
 21477                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 21478                           
 21479                           ; BSR set to: 13
 21480  012050  D000               	goto	PL66	;call to abstracted procedure
 21481  012052                     __end_ofi2_USBDeviceInit:
 21482                           	opt stack 0
 21483  012052                     PL66:
 21484                           	opt stack 16
 21485  012052  6E10               	movwf	_pBDTEntryIn,c
 21486  012054  0E0D               	movlw	13
 21487  012056  6E11               	movwf	_pBDTEntryIn+1,c
 21488  012058  0E16               	movlw	22
 21489  01205A  010F               	movlb	15	; () banked
 21490  01205C  6F26               	movwf	38,b	;volatile
 21491  01205E  0E0D               	movlw	13
 21492  012060  010D               	movlb	13	; () banked
 21493  012062  6F03               	movwf	3,b	;volatile
 21494  012064  0E30               	movlw	48
 21495  012066  6F02               	movwf	2,b	;volatile
 21496  012068  0E08               	movlw	8
 21497  01206A  6F01               	movwf	1,b	;volatile
 21498  01206C  0E04               	movlw	4
 21499  01206E  6F00               	movwf	0,b	;volatile
 21500  012070  8F00               	bsf	0,7,b	;volatile
 21501  012072  6A29               	clrf	_USBActiveConfiguration,c	;volatile
 21502  012074  6A1B               	clrf	_USBDeviceState,c	;volatile
 21503  012076  0012               	return		;funcret
 21504  012078                     __end_ofPL66:
 21505                           	opt stack 0
 21506  012078                     PL118:
 21507                           	opt stack 16
 21508  012078  0D04               	mullw	4
 21509  01207A  0E00               	movlw	0
 21510  01207C  24F3               	addwf	prodl,w,c
 21511  01207E  6ED9               	movwf	fsr2l,c
 21512  012080  0C0D               	retlw	13
 21513  012082                     __end_ofPL118:
 21514                           	opt stack 0
 21515  012082                     PL158:
 21516                           	opt stack 16
 21517  012082  6ED9               	movwf	fsr2l,c
 21518  012084  6ADA               	clrf	fsr2h,c
 21519  012086  0E01               	movlw	high _ep_data_in
 21520  012088  22DA               	addwfc	fsr2h,f,c
 21521  01208A  6ADF               	clrf	indf2,c
 21522  01208C  0E0C               	movlw	low _ep_data_out
 21523  01208E  0012               	return	
 21524  012090                     __end_ofPL158:
 21525                           	opt stack 0
 21526  012090                     PL196:
 21527                           	opt stack 16
 21528  012090  6ED9               	movwf	fsr2l,c
 21529  012092  6ADA               	clrf	fsr2h,c
 21530  012094  0E01               	movlw	high _ep_data_out
 21531  012096  22DA               	addwfc	fsr2h,f,c
 21532  012098  6ADF               	clrf	indf2,c
 21533  01209A  0012               	return	
 21534  01209C                     __end_ofPL196:
 21535                           	opt stack 0
 21536  01209C                     PL240:
 21537                           	opt stack 16
 21538  01209C  0E01               	movlw	1
 21539  01209E  0101               	movlb	1	; () banked
 21540  0120A0  6F2A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21541  0120A2  6F2B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21542  0120A4  6B28               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21543  0120A6  6B29               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21544  0120A8  6B27               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 21545  0120AA  0012               	return	
 21546  0120AC                     __end_ofPL240:
 21547                           	opt stack 0
 21548  0120AC                     PL288:
 21549                           	opt stack 16
 21550  0120AC  9662               	bcf	3938,3,c	;volatile
 21551  0120AE  6A0D               	clrf	_inPipes+3,c	;volatile
 21552  0120B0  6A04               	clrf	_outPipes+3,c	;volatile
 21553  0120B2  6A05               	clrf	_outPipes+4,c	;volatile
 21554  0120B4  6A06               	clrf	_outPipes+5,c	;volatile
 21555  0120B6  0012               	return	
 21556  0120B8                     __end_ofPL288:
 21557                           	opt stack 0
 21558                           tblptru	equ	0xFF8
 21559                           tblptrh	equ	0xFF7
 21560                           tblptrl	equ	0xFF6
 21561                           tablat	equ	0xFF5
 21562                           prodh	equ	0xFF4
 21563                           prodl	equ	0xFF3
 21564                           intcon	equ	0xFF2
 21565                           intcon2	equ	0xFF1
 21566                           postinc0	equ	0xFEE
 21567                           wreg	equ	0xFE8
 21568                           indf1	equ	0xFE7
 21569                           postinc1	equ	0xFE6
 21570                           postdec1	equ	0xFE5
 21571                           fsr1h	equ	0xFE2
 21572                           fsr1l	equ	0xFE1
 21573                           indf2	equ	0xFDF
 21574                           postinc2	equ	0xFDE
 21575                           postdec2	equ	0xFDD
 21576                           plusw2	equ	0xFDB
 21577                           fsr2h	equ	0xFDA
 21578                           fsr2l	equ	0xFD9
 21579                           status	equ	0xFD8
 21580                           
 21581 ;; *************** function _USBWakeFromSuspend *****************
 21582 ;; Defined at:
 21583 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 21584 ;; Parameters:    Size  Location     Type
 21585 ;;		None
 21586 ;; Auto vars:     Size  Location     Type
 21587 ;;		None
 21588 ;; Return value:  Size  Location     Type
 21589 ;;		None               void
 21590 ;; Registers used:
 21591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21592 ;; Tracked objects:
 21593 ;;		On entry : F/F
 21594 ;;		On exit  : F/F
 21595 ;;		Unchanged: 0/0
 21596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21601 ;;Total ram usage:        0 bytes
 21602 ;; Hardware stack levels used:    1
 21603 ;; Hardware stack levels required when called:    4
 21604 ;; This function calls:
 21605 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21606 ;; This function is called by:
 21607 ;;		_USBDeviceTasks
 21608 ;; This function uses a non-reentrant model
 21609 ;;
 21610                           
 21611                           	psect	text103
 21612  014462                     __ptext103:
 21613                           	opt stack 0
 21614  014462                     _USBWakeFromSuspend:
 21615                           	opt stack 14
 21616                           
 21617                           ; BSR set to: 15
 21618                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 21619                           
 21620                           ; BSR set to: 13
 21621                           ;incstack = 0
 21622  014462  0101               	movlb	1	; () banked
 21623  014464  6B27               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 21624                           
 21625                           ; BSR set to: 1
 21626                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 21627  014466  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21628  014468  0E74               	movlw	116
 21629  01446A  ECEA  F0A1         	call	PL140	;call to abstracted procedure
 21630  01446E  ECF0  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21631                           
 21632                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 21633  014472  9265               	bcf	3941,1,c	;volatile
 21634                           
 21635                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 21636  014474  010F               	movlb	15	; () banked
 21637  014476  9536               	bcf	54,2,b	;volatile
 21638                           
 21639                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 21640  014478  D001               	goto	i2l8212
 21641  01447A                     i2l8210:
 21642                           
 21643                           ; BSR set to: 15
 21644                           ;usb_device.c: 2342: {
 21645                           ;usb_device.c: 2343: (UIR &= 0xFB);
 21646  01447A  9462               	bcf	3938,2,c	;volatile
 21647  01447C                     i2l8212:
 21648                           
 21649                           ; BSR set to: 15
 21650  01447C  A462               	btfss	3938,2,c	;volatile
 21651                           
 21652                           ; BSR set to: 15
 21653  01447E  0012               	return		;funcret
 21654  014480  D7FC               	goto	i2l8210
 21655  014482                     __end_of_USBWakeFromSuspend:
 21656                           	opt stack 0
 21657                           tblptru	equ	0xFF8
 21658                           tblptrh	equ	0xFF7
 21659                           tblptrl	equ	0xFF6
 21660                           tablat	equ	0xFF5
 21661                           prodh	equ	0xFF4
 21662                           prodl	equ	0xFF3
 21663                           intcon	equ	0xFF2
 21664                           intcon2	equ	0xFF1
 21665                           postinc0	equ	0xFEE
 21666                           wreg	equ	0xFE8
 21667                           indf1	equ	0xFE7
 21668                           postinc1	equ	0xFE6
 21669                           postdec1	equ	0xFE5
 21670                           fsr1h	equ	0xFE2
 21671                           fsr1l	equ	0xFE1
 21672                           indf2	equ	0xFDF
 21673                           postinc2	equ	0xFDE
 21674                           postdec2	equ	0xFDD
 21675                           plusw2	equ	0xFDB
 21676                           fsr2h	equ	0xFDA
 21677                           fsr2l	equ	0xFD9
 21678                           status	equ	0xFD8
 21679                           
 21680 ;; *************** function _USBSuspend *****************
 21681 ;; Defined at:
 21682 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 21683 ;; Parameters:    Size  Location     Type
 21684 ;;		None
 21685 ;; Auto vars:     Size  Location     Type
 21686 ;;		None
 21687 ;; Return value:  Size  Location     Type
 21688 ;;		None               void
 21689 ;; Registers used:
 21690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21691 ;; Tracked objects:
 21692 ;;		On entry : F/F
 21693 ;;		On exit  : 0/0
 21694 ;;		Unchanged: 0/0
 21695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21700 ;;Total ram usage:        0 bytes
 21701 ;; Hardware stack levels used:    1
 21702 ;; Hardware stack levels required when called:    4
 21703 ;; This function calls:
 21704 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21705 ;; This function is called by:
 21706 ;;		_USBDeviceTasks
 21707 ;; This function uses a non-reentrant model
 21708 ;;
 21709                           
 21710                           	psect	text104
 21711  0143BE                     __ptext104:
 21712                           	opt stack 0
 21713  0143BE                     _USBSuspend:
 21714                           	opt stack 14
 21715                           
 21716                           ; BSR set to: 15
 21717                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 21718                           
 21719                           ; BSR set to: 15
 21720                           ;incstack = 0
 21721  0143BE  8536               	bsf	54,2,b	;volatile
 21722                           
 21723                           ; BSR set to: 15
 21724                           ;usb_device.c: 2271: (UIR &= 0xEF);
 21725  0143C0  9862               	bcf	3938,4,c	;volatile
 21726                           
 21727                           ; BSR set to: 15
 21728                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 21729  0143C2  8265               	bsf	3941,1,c	;volatile
 21730                           
 21731                           ; BSR set to: 15
 21732                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 21733  0143C4  0E01               	movlw	1
 21734  0143C6  0101               	movlb	1	; () banked
 21735  0143C8  6F27               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21736                           
 21737                           ; BSR set to: 1
 21738                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 21739  0143CA  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21740  0143CC  0E75               	movlw	117
 21741  0143CE  D802               	call	PL140	;call to abstracted procedure
 21742  0143D0  EFF0  F0A1         	goto	i2l6410	;wreg free
 21743  0143D4                     __end_of_USBSuspend:
 21744                           	opt stack 0
 21745  0143D4                     PL140:
 21746                           	opt stack 14
 21747  0143D4  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21748  0143D6  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21749  0143D8  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21750  0143DA  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21751  0143DC  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21752  0143DE  0012               	return	
 21753  0143E0                     __end_ofPL140:
 21754                           	opt stack 0
 21755                           tblptru	equ	0xFF8
 21756                           tblptrh	equ	0xFF7
 21757                           tblptrl	equ	0xFF6
 21758                           tablat	equ	0xFF5
 21759                           prodh	equ	0xFF4
 21760                           prodl	equ	0xFF3
 21761                           intcon	equ	0xFF2
 21762                           intcon2	equ	0xFF1
 21763                           postinc0	equ	0xFEE
 21764                           wreg	equ	0xFE8
 21765                           indf1	equ	0xFE7
 21766                           postinc1	equ	0xFE6
 21767                           postdec1	equ	0xFE5
 21768                           fsr1h	equ	0xFE2
 21769                           fsr1l	equ	0xFE1
 21770                           indf2	equ	0xFDF
 21771                           postinc2	equ	0xFDE
 21772                           postdec2	equ	0xFDD
 21773                           plusw2	equ	0xFDB
 21774                           fsr2h	equ	0xFDA
 21775                           fsr2l	equ	0xFD9
 21776                           status	equ	0xFD8
 21777                           
 21778 ;; *************** function _USBStallHandler *****************
 21779 ;; Defined at:
 21780 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 21781 ;; Parameters:    Size  Location     Type
 21782 ;;		None
 21783 ;; Auto vars:     Size  Location     Type
 21784 ;;		None
 21785 ;; Return value:  Size  Location     Type
 21786 ;;		None               void
 21787 ;; Registers used:
 21788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21789 ;; Tracked objects:
 21790 ;;		On entry : F/F
 21791 ;;		On exit  : F/F
 21792 ;;		Unchanged: 0/0
 21793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21798 ;;Total ram usage:        1 bytes
 21799 ;; Hardware stack levels used:    1
 21800 ;; This function calls:
 21801 ;;		Nothing
 21802 ;; This function is called by:
 21803 ;;		_USBDeviceTasks
 21804 ;; This function uses a non-reentrant model
 21805 ;;
 21806                           
 21807                           	psect	text105
 21808  0141E0                     __ptext105:
 21809                           	opt stack 0
 21810  0141E0                     _USBStallHandler:
 21811                           	opt stack 18
 21812                           
 21813                           ; BSR set to: 15
 21814                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 21815                           
 21816                           ;incstack = 0
 21817  0141E0  A126               	btfss	38,0,b	;volatile
 21818  0141E2  D010               	goto	i2l1702
 21819                           
 21820                           ; BSR set to: 15
 21821                           ;usb_device.c: 2215: {
 21822                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 21823  0141E4  D811               	call	PL110	;call to abstracted procedure
 21824  0141E6  0E80               	movlw	128
 21825  0141E8  18DE               	xorwf	postinc2,w,c
 21826  0141EA  E10B               	bnz	i2l8234
 21827                           
 21828                           ; BSR set to: 15
 21829  0141EC  EC9D  F098         	call	PL48	;call to abstracted procedure
 21830  0141F0  0E84               	movlw	132
 21831  0141F2  18DE               	xorwf	postinc2,w,c
 21832  0141F4  E106               	bnz	i2l8234
 21833                           
 21834                           ; BSR set to: 15
 21835                           ;usb_device.c: 2218: {
 21836                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21837  0141F6  D808               	call	PL110	;call to abstracted procedure
 21838  0141F8  0E0C               	movlw	12
 21839  0141FA  6EDF               	movwf	indf2,c
 21840                           
 21841                           ; BSR set to: 15
 21842                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 21843  0141FC  D805               	call	PL110	;call to abstracted procedure
 21844  0141FE  0E00               	movlw	0
 21845  014200  8EDB               	bsf	plusw2,7,c
 21846  014202                     i2l8234:
 21847                           
 21848                           ; BSR set to: 15
 21849                           ;usb_device.c: 2222: }
 21850                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 21851  014202  9126               	bcf	38,0,b	;volatile
 21852  014204                     i2l1702:
 21853                           
 21854                           ; BSR set to: 15
 21855                           ;usb_device.c: 2224: }
 21856                           ;usb_device.c: 2226: (UIR &= 0xDF);
 21857  014204  9A62               	bcf	3938,5,c	;volatile
 21858                           
 21859                           ; BSR set to: 15
 21860  014206  0012               	return		;funcret
 21861  014208                     __end_of_USBStallHandler:
 21862                           	opt stack 0
 21863  014208                     PL110:
 21864                           	opt stack 18
 21865  014208  C016  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21866  01420C  C017  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21867  014210  0012               	return	
 21868  014212                     __end_ofPL110:
 21869                           	opt stack 0
 21870                           tblptru	equ	0xFF8
 21871                           tblptrh	equ	0xFF7
 21872                           tblptrl	equ	0xFF6
 21873                           tablat	equ	0xFF5
 21874                           prodh	equ	0xFF4
 21875                           prodl	equ	0xFF3
 21876                           intcon	equ	0xFF2
 21877                           intcon2	equ	0xFF1
 21878                           postinc0	equ	0xFEE
 21879                           wreg	equ	0xFE8
 21880                           indf1	equ	0xFE7
 21881                           postinc1	equ	0xFE6
 21882                           postdec1	equ	0xFE5
 21883                           fsr1h	equ	0xFE2
 21884                           fsr1l	equ	0xFE1
 21885                           indf2	equ	0xFDF
 21886                           postinc2	equ	0xFDE
 21887                           postdec2	equ	0xFDD
 21888                           plusw2	equ	0xFDB
 21889                           fsr2h	equ	0xFDA
 21890                           fsr2l	equ	0xFD9
 21891                           status	equ	0xFD8
 21892                           
 21893 ;; *************** function _USBCtrlEPService *****************
 21894 ;; Defined at:
 21895 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 21896 ;; Parameters:    Size  Location     Type
 21897 ;;		None
 21898 ;; Auto vars:     Size  Location     Type
 21899 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 21900 ;; Return value:  Size  Location     Type
 21901 ;;		None               void
 21902 ;; Registers used:
 21903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21904 ;; Tracked objects:
 21905 ;;		On entry : F/1
 21906 ;;		On exit  : 0/0
 21907 ;;		Unchanged: 0/0
 21908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21912 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21913 ;;Total ram usage:        3 bytes
 21914 ;; Hardware stack levels used:    1
 21915 ;; Hardware stack levels required when called:    7
 21916 ;; This function calls:
 21917 ;;		_USBCtrlTrfInHandler
 21918 ;;		_USBCtrlTrfOutHandler
 21919 ;;		_USBCtrlTrfSetupHandler
 21920 ;; This function is called by:
 21921 ;;		_USBDeviceTasks
 21922 ;; This function uses a non-reentrant model
 21923 ;;
 21924                           
 21925                           	psect	text106
 21926  012BC4                     __ptext106:
 21927                           	opt stack 0
 21928  012BC4                     _USBCtrlEPService:
 21929                           	opt stack 11
 21930                           
 21931                           ; BSR set to: 1
 21932                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 21933                           
 21934                           ; BSR set to: 15
 21935                           ;incstack = 0
 21936  012BC4  0E2D               	movlw	45
 21937  012BC6  6E1C               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 21938                           
 21939                           ; BSR set to: 1
 21940                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 21941  012BC8  C02A  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 21942  012BCC  0EFD               	movlw	253
 21943  012BCE  1646               	andwf	??_USBCtrlEPService,f,c
 21944  012BD0  E137               	bnz	i2l8268
 21945                           
 21946                           ; BSR set to: 1
 21947                           ;usb_device.c: 2380: {
 21948                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 21949  012BD2  90D8               	bcf	status,0,c
 21950  012BD4  302A               	rrcf	_USTATcopy,w,c	;volatile
 21951  012BD6  0B3F               	andlw	63
 21952  012BD8  0D04               	mullw	4
 21953  012BDA  0E00               	movlw	0
 21954  012BDC  24F3               	addwf	prodl,w,c
 21955  012BDE  6E16               	movwf	_pBDTEntryEP0OutCurrent,c
 21956  012BE0  0E0D               	movlw	13
 21957  012BE2  20F4               	addwfc	prodh,w,c
 21958                           
 21959                           ; BSR set to: 1
 21960                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 21961  012BE4  ECAB  F094         	call	PL276	;call to abstracted procedure
 21962                           
 21963                           ; BSR set to: 1
 21964                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 21965  012BE8  0E04               	movlw	4
 21966  012BEA  1A18               	xorwf	_pBDTEntryEP0OutNext,f,c
 21967                           
 21968                           ; BSR set to: 1
 21969                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 21970  012BEC  EC04  F0A1         	call	PL110	;call to abstracted procedure
 21971  012BF0  30DF               	rrcf	indf2,w,c
 21972  012BF2  32E8               	rrcf	wreg,f,c
 21973  012BF4  0B0F               	andlw	15
 21974  012BF6  0A0D               	xorlw	13
 21975  012BF8  E002 EF41  F0A2    	bnz	_USBCtrlTrfOutHandler
 21976                           
 21977                           ; BSR set to: 1
 21978                           ;usb_device.c: 2397: {
 21979                           ;usb_device.c: 2398: unsigned char setup_cnt;
 21980                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 21981  012BFE  6A48               	clrf	USBCtrlEPService@setup_cnt,c
 21982  012C00                     i2l8254:
 21983                           
 21984                           ; BSR set to: 1
 21985                           ;usb_device.c: 2405: {
 21986                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 21987  012C00  D826               	call	PL96	;call to abstracted procedure
 21988  012C02  22DA               	addwfc	fsr2h,f,c
 21989  012C04  CFDE F046          	movff	postinc2,??_USBCtrlEPService
 21990  012C08  CFDD F047          	movff	postdec2,??_USBCtrlEPService+1
 21991  012C0C  C046  FFD9         	movff	??_USBCtrlEPService,fsr2l
 21992  012C10  C047  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 21993  012C14  0E30               	movlw	48
 21994  012C16  2448               	addwf	USBCtrlEPService@setup_cnt,w,c
 21995  012C18  6EE1               	movwf	fsr1l,c
 21996  012C1A  6AE2               	clrf	fsr1h,c
 21997  012C1C  0E0D               	movlw	13
 21998  012C1E  22E2               	addwfc	fsr1h,f,c
 21999  012C20  CFDF FFE7          	movff	indf2,indf1
 22000                           
 22001                           ; BSR set to: 1
 22002                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 22003  012C24  D814               	call	PL96	;call to abstracted procedure
 22004  012C26  22DA               	addwfc	fsr2h,f,c
 22005  012C28  2ADE               	incf	postinc2,f,c
 22006  012C2A  0E00               	movlw	0
 22007  012C2C  22DD               	addwfc	postdec2,f,c
 22008                           
 22009                           ; BSR set to: 1
 22010  012C2E  2A48               	incf	USBCtrlEPService@setup_cnt,f,c
 22011                           
 22012                           ; BSR set to: 1
 22013  012C30  0E07               	movlw	7
 22014  012C32  6448               	cpfsgt	USBCtrlEPService@setup_cnt,c
 22015  012C34  D7E5               	goto	i2l8254
 22016                           
 22017                           ; BSR set to: 1
 22018                           ;usb_device.c: 2408: }
 22019                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 22020  012C36  D80B               	call	PL96	;call to abstracted procedure
 22021  012C38  EC34  F09A         	call	PL36	;call to abstracted procedure
 22022                           
 22023                           ; BSR set to: 1
 22024                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 22025  012C3C  EFCB  F09E         	goto	_USBCtrlTrfSetupHandler	;wreg free
 22026  012C40                     i2l8268:
 22027                           
 22028                           ; BSR set to: 1
 22029                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 22030  012C40  502A               	movf	_USTATcopy,w,c	;volatile
 22031  012C42  0BFD               	andlw	253
 22032  012C44  0A04               	xorlw	4
 22033  012C46  B4D8               	btfsc	status,2,c
 22034                           
 22035                           ; BSR set to: 1
 22036                           ;usb_device.c: 2421: {
 22037                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 22038  012C48  EC6B  F098         	call	_USBCtrlTrfInHandler	;wreg free
 22039  012C4C  0012               	return		;funcret
 22040  012C4E                     __end_of_USBCtrlEPService:
 22041                           	opt stack 0
 22042  012C4E                     PL96:
 22043                           	opt stack 11
 22044  012C4E  EE20 F002          	lfsr	2,2
 22045  012C52  5016               	movf	_pBDTEntryEP0OutCurrent,w,c
 22046  012C54  26D9               	addwf	fsr2l,f,c
 22047  012C56  5017               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22048  012C58  0012               	return	
 22049  012C5A                     __end_ofPL96:
 22050                           	opt stack 0
 22051                           tblptru	equ	0xFF8
 22052                           tblptrh	equ	0xFF7
 22053                           tblptrl	equ	0xFF6
 22054                           tablat	equ	0xFF5
 22055                           prodh	equ	0xFF4
 22056                           prodl	equ	0xFF3
 22057                           intcon	equ	0xFF2
 22058                           intcon2	equ	0xFF1
 22059                           postinc0	equ	0xFEE
 22060                           wreg	equ	0xFE8
 22061                           indf1	equ	0xFE7
 22062                           postinc1	equ	0xFE6
 22063                           postdec1	equ	0xFE5
 22064                           fsr1h	equ	0xFE2
 22065                           fsr1l	equ	0xFE1
 22066                           indf2	equ	0xFDF
 22067                           postinc2	equ	0xFDE
 22068                           postdec2	equ	0xFDD
 22069                           plusw2	equ	0xFDB
 22070                           fsr2h	equ	0xFDA
 22071                           fsr2l	equ	0xFD9
 22072                           status	equ	0xFD8
 22073                           
 22074 ;; *************** function _USBCtrlTrfSetupHandler *****************
 22075 ;; Defined at:
 22076 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 22077 ;; Parameters:    Size  Location     Type
 22078 ;;		None
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;		None
 22081 ;; Return value:  Size  Location     Type
 22082 ;;		None               void
 22083 ;; Registers used:
 22084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22085 ;; Tracked objects:
 22086 ;;		On entry : F/1
 22087 ;;		On exit  : 0/0
 22088 ;;		Unchanged: 0/0
 22089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22094 ;;Total ram usage:        0 bytes
 22095 ;; Hardware stack levels used:    1
 22096 ;; Hardware stack levels required when called:    6
 22097 ;; This function calls:
 22098 ;;		_USBCheckStdRequest
 22099 ;;		_USBCtrlEPServiceComplete
 22100 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22101 ;; This function is called by:
 22102 ;;		_USBCtrlEPService
 22103 ;; This function uses a non-reentrant model
 22104 ;;
 22105                           
 22106                           	psect	text107
 22107  013D96                     __ptext107:
 22108                           	opt stack 0
 22109  013D96                     _USBCtrlTrfSetupHandler:
 22110                           	opt stack 11
 22111                           
 22112                           ; BSR set to: 1
 22113                           ;usb_device.c: 2474: shortPacketStatus = 0;
 22114                           
 22115                           ;incstack = 0
 22116  013D96  6A24               	clrf	_shortPacketStatus,c	;volatile
 22117                           
 22118                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 22119  013D98  6A1A               	clrf	_USBDeferStatusStagePacket,c	;volatile
 22120                           
 22121                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 22122  013D9A  6B28               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22123                           
 22124                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 22125  013D9C  6B29               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22126                           
 22127                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 22128  013D9E  6B25               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 22129                           
 22130                           ;usb_device.c: 2479: controlTransferState = 0;
 22131  013DA0  6A20               	clrf	_controlTransferState,c	;volatile
 22132                           
 22133                           ; BSR set to: 1
 22134                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 22135  013DA2  EC9D  F098         	call	PL48	;call to abstracted procedure
 22136                           
 22137                           ; BSR set to: 1
 22138                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 22139  013DA6  D817               	call	PL326	;call to abstracted procedure
 22140                           
 22141                           ; BSR set to: 1
 22142                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 22143  013DA8  EC9D  F098         	call	PL48	;call to abstracted procedure
 22144                           
 22145                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 22146  013DAC  D814               	call	PL326	;call to abstracted procedure
 22147                           
 22148                           ; BSR set to: 1
 22149                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 22150  013DAE  EC7B  F091         	call	PL40	;call to abstracted procedure
 22151  013DB2  0E7F               	movlw	127
 22152  013DB4  16DF               	andwf	indf2,f,c
 22153                           
 22154                           ; BSR set to: 1
 22155                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 22156  013DB6  6A0D               	clrf	_inPipes+3,c	;volatile
 22157                           
 22158                           ; BSR set to: 1
 22159                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 22160  013DB8  6A0E               	clrf	_inPipes+4,c	;volatile
 22161  013DBA  6A0F               	clrf	_inPipes+5,c	;volatile
 22162                           
 22163                           ; BSR set to: 1
 22164                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 22165  013DBC  6A04               	clrf	_outPipes+3,c	;volatile
 22166                           
 22167                           ; BSR set to: 1
 22168                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 22169  013DBE  6A05               	clrf	_outPipes+4,c	;volatile
 22170  013DC0  6A06               	clrf	_outPipes+5,c	;volatile
 22171                           
 22172                           ; BSR set to: 1
 22173                           ;usb_device.c: 2503: USBCheckStdRequest();
 22174  013DC2  EC2D  F096         	call	_USBCheckStdRequest	;wreg free
 22175                           
 22176                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 22177  013DC6  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22178  013DC8  0E03               	movlw	3
 22179  013DCA  ECEA  F0A1         	call	PL140	;call to abstracted procedure
 22180  013DCE  ECF0  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22181                           
 22182                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 22183  013DD2  EFD4  F092         	goto	_USBCtrlEPServiceComplete	;wreg free
 22184  013DD6                     __end_of_USBCtrlTrfSetupHandler:
 22185                           	opt stack 0
 22186  013DD6                     PL326:
 22187                           	opt stack 11
 22188  013DD6  0E7F               	movlw	127
 22189  013DD8  16DF               	andwf	indf2,f,c
 22190  013DDA  0E04               	movlw	4
 22191  013DDC  1A10               	xorwf	_pBDTEntryIn,f,c
 22192  013DDE  0C04               	retlw	4
 22193  013DE0                     __end_ofPL326:
 22194                           	opt stack 0
 22195                           tblptru	equ	0xFF8
 22196                           tblptrh	equ	0xFF7
 22197                           tblptrl	equ	0xFF6
 22198                           tablat	equ	0xFF5
 22199                           prodh	equ	0xFF4
 22200                           prodl	equ	0xFF3
 22201                           intcon	equ	0xFF2
 22202                           intcon2	equ	0xFF1
 22203                           postinc0	equ	0xFEE
 22204                           wreg	equ	0xFE8
 22205                           indf1	equ	0xFE7
 22206                           postinc1	equ	0xFE6
 22207                           postdec1	equ	0xFE5
 22208                           fsr1h	equ	0xFE2
 22209                           fsr1l	equ	0xFE1
 22210                           indf2	equ	0xFDF
 22211                           postinc2	equ	0xFDE
 22212                           postdec2	equ	0xFDD
 22213                           plusw2	equ	0xFDB
 22214                           fsr2h	equ	0xFDA
 22215                           fsr2l	equ	0xFD9
 22216                           status	equ	0xFD8
 22217                           
 22218 ;; *************** function _USBCtrlEPServiceComplete *****************
 22219 ;; Defined at:
 22220 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 22221 ;; Parameters:    Size  Location     Type
 22222 ;;		None
 22223 ;; Auto vars:     Size  Location     Type
 22224 ;;		None
 22225 ;; Return value:  Size  Location     Type
 22226 ;;		None               void
 22227 ;; Registers used:
 22228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22229 ;; Tracked objects:
 22230 ;;		On entry : 0/1
 22231 ;;		On exit  : 0/0
 22232 ;;		Unchanged: 0/0
 22233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22238 ;;Total ram usage:        0 bytes
 22239 ;; Hardware stack levels used:    1
 22240 ;; Hardware stack levels required when called:    2
 22241 ;; This function calls:
 22242 ;;		_USBCtrlEPAllowDataStage
 22243 ;;		_USBCtrlEPAllowStatusStage
 22244 ;; This function is called by:
 22245 ;;		_USBCtrlTrfSetupHandler
 22246 ;; This function uses a non-reentrant model
 22247 ;;
 22248                           
 22249                           	psect	text108
 22250  0125A8                     __ptext108:
 22251                           	opt stack 0
 22252  0125A8                     _USBCtrlEPServiceComplete:
 22253                           	opt stack 14
 22254                           
 22255                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 22256                           
 22257                           ;incstack = 0
 22258  0125A8  9865               	bcf	3941,4,c	;volatile
 22259                           
 22260                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 22261  0125AA  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 22262  0125AC  D018               	goto	i2l1626
 22263                           
 22264                           ;usb_device.c: 1629: {
 22265                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 22266  0125AE  AE04               	btfss	_outPipes+3,7,c	;volatile
 22267  0125B0  D00A               	goto	i2l6994
 22268                           
 22269                           ;usb_device.c: 1631: {
 22270                           ;usb_device.c: 1632: controlTransferState = 2;
 22271  0125B2  0E02               	movlw	2
 22272  0125B4  6E20               	movwf	_controlTransferState,c	;volatile
 22273                           
 22274                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 22275  0125B6  0101               	movlb	1	; () banked
 22276  0125B8  5129               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 22277  0125BA  E102               	bnz	i2l6990
 22278                           
 22279                           ; BSR set to: 1
 22280                           ;usb_device.c: 1644: {
 22281                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 22282  0125BC  ECC9  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 22283  0125C0                     i2l6990:
 22284                           
 22285                           ; BSR set to: 1
 22286                           ;usb_device.c: 1646: }
 22287                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 22288  0125C0  6B2B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22289                           
 22290                           ; BSR set to: 1
 22291                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 22292  0125C2  6B2A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22293                           
 22294                           ;usb_device.c: 1652: }
 22295  0125C4  0012               	return	
 22296  0125C6                     i2l6994:
 22297                           
 22298                           ;usb_device.c: 1653: else
 22299                           ;usb_device.c: 1654: {
 22300                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 22301                           
 22302                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22303                           
 22304                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22305  0125C6  D82A               	call	PL2	;call to abstracted procedure
 22306  0125C8  0E0C               	movlw	12
 22307                           
 22308                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22309  0125CA  EC73  F091         	call	PL34	;call to abstracted procedure
 22310                           
 22311                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 22312  0125CE  EC9D  F098         	call	PL48	;call to abstracted procedure
 22313  0125D2  0E04               	movlw	4
 22314  0125D4  6EDF               	movwf	indf2,c
 22315                           
 22316                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22317  0125D6  EC9D  F098         	call	PL48	;call to abstracted procedure
 22318  0125DA  EFAE  F098         	goto	PL246	;call to abstracted procedure
 22319  0125DE                     i2l1626:
 22320                           
 22321                           ;usb_device.c: 1667: else
 22322                           ;usb_device.c: 1668: {
 22323                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 22324  0125DE  010D               	movlb	13	; () banked
 22325  0125E0  AF30               	btfss	48,7,b	;volatile
 22326  0125E2  D00E               	goto	i2l7014
 22327                           
 22328                           ; BSR set to: 13
 22329                           ;usb_device.c: 1670: {
 22330                           ;usb_device.c: 1671: controlTransferState = 1;
 22331  0125E4  0E01               	movlw	1
 22332  0125E6  6E20               	movwf	_controlTransferState,c	;volatile
 22333                           
 22334                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 22335  0125E8  0101               	movlb	1	; () banked
 22336  0125EA  5128               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 22337  0125EC  E102               	bnz	i2l7006
 22338                           
 22339                           ; BSR set to: 1
 22340                           ;usb_device.c: 1686: {
 22341                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 22342  0125EE  ECC9  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 22343  0125F2                     i2l7006:
 22344                           
 22345                           ; BSR set to: 1
 22346                           ;usb_device.c: 1688: }
 22347                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 22348  0125F2  6B2B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22349                           
 22350                           ; BSR set to: 1
 22351                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 22352  0125F4  6B2A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22353                           
 22354                           ; BSR set to: 1
 22355                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 22356  0125F6  501A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 22357  0125F8  A4D8               	btfss	status,2,c
 22358  0125FA  0012               	return	
 22359                           
 22360                           ; BSR set to: 1
 22361                           ;usb_device.c: 1713: {
 22362                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 22363  0125FC  EFFE  F099         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 22364  012600                     i2l7014:
 22365                           
 22366                           ; BSR set to: 13
 22367                           ;usb_device.c: 1717: else
 22368                           ;usb_device.c: 1718: {
 22369                           ;usb_device.c: 1729: controlTransferState = 2;
 22370  012600  0E02               	movlw	2
 22371  012602  6E20               	movwf	_controlTransferState,c	;volatile
 22372                           
 22373                           ; BSR set to: 13
 22374                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 22375                           
 22376                           ; BSR set to: 13
 22377                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22378                           
 22379                           ; BSR set to: 13
 22380                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 22381  012604  D80B               	call	PL2	;call to abstracted procedure
 22382  012606  0E04               	movlw	4
 22383                           
 22384                           ; BSR set to: 13
 22385                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22386  012608  EC73  F091         	call	PL34	;call to abstracted procedure
 22387                           
 22388                           ; BSR set to: 13
 22389                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 22390  01260C  0101               	movlb	1	; () banked
 22391  01260E  6B2B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22392                           
 22393                           ; BSR set to: 1
 22394                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 22395  012610  6B2A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22396                           
 22397                           ; BSR set to: 1
 22398                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 22399  012612  501A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 22400  012614  E102 EFFE  F099    	bz	_USBCtrlEPAllowStatusStage
 22401  01261A  0012               	return	
 22402  01261C                     __end_of_USBCtrlEPServiceComplete:
 22403                           	opt stack 0
 22404  01261C                     PL2:
 22405                           	opt stack 14
 22406  01261C  EE20 F001          	lfsr	2,1
 22407  012620  5018               	movf	_pBDTEntryEP0OutNext,w,c
 22408  012622  26D9               	addwf	fsr2l,f,c
 22409  012624  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 22410  012626  22DA               	addwfc	fsr2h,f,c
 22411  012628  0E08               	movlw	8
 22412  01262A  6EDF               	movwf	indf2,c
 22413  01262C  EE20 F002          	lfsr	2,2
 22414  012630  5018               	movf	_pBDTEntryEP0OutNext,w,c
 22415  012632  26D9               	addwf	fsr2l,f,c
 22416  012634  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 22417  012636  22DA               	addwfc	fsr2h,f,c
 22418  012638  0E30               	movlw	48
 22419  01263A  6EDE               	movwf	postinc2,c
 22420  01263C  0E0D               	movlw	13
 22421  01263E  6EDD               	movwf	postdec2,c
 22422  012640  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22423  012644  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22424  012648  0C0D               	retlw	13
 22425  01264A                     __end_ofPL2:
 22426                           	opt stack 0
 22427                           tblptru	equ	0xFF8
 22428                           tblptrh	equ	0xFF7
 22429                           tblptrl	equ	0xFF6
 22430                           tablat	equ	0xFF5
 22431                           prodh	equ	0xFF4
 22432                           prodl	equ	0xFF3
 22433                           intcon	equ	0xFF2
 22434                           intcon2	equ	0xFF1
 22435                           postinc0	equ	0xFEE
 22436                           wreg	equ	0xFE8
 22437                           indf1	equ	0xFE7
 22438                           postinc1	equ	0xFE6
 22439                           postdec1	equ	0xFE5
 22440                           fsr1h	equ	0xFE2
 22441                           fsr1l	equ	0xFE1
 22442                           indf2	equ	0xFDF
 22443                           postinc2	equ	0xFDE
 22444                           postdec2	equ	0xFDD
 22445                           plusw2	equ	0xFDB
 22446                           fsr2h	equ	0xFDA
 22447                           fsr2l	equ	0xFD9
 22448                           status	equ	0xFD8
 22449                           
 22450 ;; *************** function _USBCtrlEPAllowDataStage *****************
 22451 ;; Defined at:
 22452 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 22453 ;; Parameters:    Size  Location     Type
 22454 ;;		None
 22455 ;; Auto vars:     Size  Location     Type
 22456 ;;		None
 22457 ;; Return value:  Size  Location     Type
 22458 ;;		None               void
 22459 ;; Registers used:
 22460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22461 ;; Tracked objects:
 22462 ;;		On entry : F/1
 22463 ;;		On exit  : F/1
 22464 ;;		Unchanged: 0/0
 22465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22470 ;;Total ram usage:        0 bytes
 22471 ;; Hardware stack levels used:    1
 22472 ;; Hardware stack levels required when called:    1
 22473 ;; This function calls:
 22474 ;;		_USBCtrlTrfTxService
 22475 ;; This function is called by:
 22476 ;;		_USBCtrlEPServiceComplete
 22477 ;; This function uses a non-reentrant model
 22478 ;;
 22479                           
 22480                           	psect	text109
 22481  013992                     __ptext109:
 22482                           	opt stack 0
 22483  013992                     _USBCtrlEPAllowDataStage:
 22484                           	opt stack 14
 22485                           
 22486                           ; BSR set to: 1
 22487                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 22488                           
 22489                           ;incstack = 0
 22490  013992  6B28               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22491                           
 22492                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 22493  013994  6B29               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22494                           
 22495                           ; BSR set to: 1
 22496                           ;usb_device.c: 1493: if(controlTransferState == 2)
 22497  013996  0E02               	movlw	2
 22498  013998  1820               	xorwf	_controlTransferState,w,c	;volatile
 22499  01399A  E110               	bnz	i2l6766
 22500                           
 22501                           ; BSR set to: 1
 22502                           ;usb_device.c: 1494: {
 22503                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 22504  01399C  EE20 F001          	lfsr	2,1
 22505  0139A0  EC69  F091         	call	PL6	;call to abstracted procedure
 22506                           
 22507                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 22508  0139A4  EC6E  F091         	call	PL10	;call to abstracted procedure
 22509  0139A8  EC69  F091         	call	PL6	;call to abstracted procedure
 22510  0139AC  EC80  F091         	call	PL232	;call to abstracted procedure
 22511                           
 22512                           ; BSR set to: 1
 22513                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 22514  0139B0  EC7B  F091         	call	PL40	;call to abstracted procedure
 22515  0139B4  0E48               	movlw	72
 22516                           
 22517                           ; BSR set to: 1
 22518                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22519  0139B6  EC73  F091         	call	PL34	;call to abstracted procedure
 22520                           
 22521                           ;usb_device.c: 1500: }
 22522  0139BA  0C00               	retlw	0
 22523  0139BC                     i2l6766:
 22524                           
 22525                           ; BSR set to: 1
 22526                           ;usb_device.c: 1501: else
 22527                           ;usb_device.c: 1502: {
 22528                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 22529  0139BC  500E               	movf	_inPipes+4,w,c	;volatile
 22530  0139BE  010D               	movlb	13	; () banked
 22531  0139C0  5D36               	subwf	54,w,b	;volatile
 22532  0139C2  500F               	movf	_inPipes+5,w,c	;volatile
 22533  0139C4  5937               	subwfb	55,w,b	;volatile
 22534  0139C6  E204               	bc	i2l6770
 22535                           
 22536                           ; BSR set to: 13
 22537                           ;usb_device.c: 1506: {
 22538                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 22539  0139C8  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 22540  0139CC  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 22541  0139D0                     i2l6770:
 22542                           
 22543                           ; BSR set to: 13
 22544                           ;usb_device.c: 1508: }
 22545                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 22546  0139D0  EC85  F091         	call	_USBCtrlTrfTxService	;wreg free
 22547                           
 22548                           ; BSR set to: 1
 22549                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 22550  0139D4  ECA8  F098         	call	PL142	;call to abstracted procedure
 22551  0139D8  ECA2  F098         	call	PL134	;call to abstracted procedure
 22552                           
 22553                           ; BSR set to: 1
 22554                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 22555  0139DC  EC9D  F098         	call	PL48	;call to abstracted procedure
 22556  0139E0  0E48               	movlw	72
 22557  0139E2  6EDF               	movwf	indf2,c
 22558                           
 22559                           ; BSR set to: 1
 22560                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22561  0139E4  EC9D  F098         	call	PL48	;call to abstracted procedure
 22562  0139E8  0E00               	movlw	0
 22563  0139EA  8EDB               	bsf	plusw2,7,c
 22564                           
 22565                           ; BSR set to: 1
 22566  0139EC  0C00               	retlw	0	;funcret
 22567  0139EE                     __end_of_USBCtrlEPAllowDataStage:
 22568                           	opt stack 0
 22569                           tblptru	equ	0xFF8
 22570                           tblptrh	equ	0xFF7
 22571                           tblptrl	equ	0xFF6
 22572                           tablat	equ	0xFF5
 22573                           prodh	equ	0xFF4
 22574                           prodl	equ	0xFF3
 22575                           intcon	equ	0xFF2
 22576                           intcon2	equ	0xFF1
 22577                           postinc0	equ	0xFEE
 22578                           wreg	equ	0xFE8
 22579                           indf1	equ	0xFE7
 22580                           postinc1	equ	0xFE6
 22581                           postdec1	equ	0xFE5
 22582                           fsr1h	equ	0xFE2
 22583                           fsr1l	equ	0xFE1
 22584                           indf2	equ	0xFDF
 22585                           postinc2	equ	0xFDE
 22586                           postdec2	equ	0xFDD
 22587                           plusw2	equ	0xFDB
 22588                           fsr2h	equ	0xFDA
 22589                           fsr2l	equ	0xFD9
 22590                           status	equ	0xFD8
 22591                           
 22592 ;; *************** function _USBCheckStdRequest *****************
 22593 ;; Defined at:
 22594 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 22595 ;; Parameters:    Size  Location     Type
 22596 ;;		None
 22597 ;; Auto vars:     Size  Location     Type
 22598 ;;		None
 22599 ;; Return value:  Size  Location     Type
 22600 ;;		None               void
 22601 ;; Registers used:
 22602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22603 ;; Tracked objects:
 22604 ;;		On entry : F/1
 22605 ;;		On exit  : 0/0
 22606 ;;		Unchanged: 0/0
 22607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22612 ;;Total ram usage:        0 bytes
 22613 ;; Hardware stack levels used:    1
 22614 ;; Hardware stack levels required when called:    5
 22615 ;; This function calls:
 22616 ;;		_USBStdFeatureReqHandler
 22617 ;;		_USBStdGetDscHandler
 22618 ;;		_USBStdGetStatusHandler
 22619 ;;		_USBStdSetCfgHandler
 22620 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22621 ;; This function is called by:
 22622 ;;		_USBCtrlTrfSetupHandler
 22623 ;; This function uses a non-reentrant model
 22624 ;;
 22625                           
 22626                           	psect	text110
 22627  012C5A                     __ptext110:
 22628                           	opt stack 0
 22629  012C5A                     _USBCheckStdRequest:
 22630                           	opt stack 11
 22631                           
 22632                           ; BSR set to: 1
 22633                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 22634                           
 22635                           ; BSR set to: 1
 22636                           ;incstack = 0
 22637  012C5A  010D               	movlb	13	; () banked
 22638  012C5C  3930               	swapf	48,w,b	;volatile
 22639  012C5E  32E8               	rrcf	wreg,f,c
 22640  012C60  0B03               	andlw	3
 22641  012C62  E020               	bz	i2l7112
 22642  012C64  0012               	return	
 22643  012C66                     i2l1753:
 22644                           
 22645                           ; BSR set to: 13
 22646                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 22647  012C66  8E0D               	bsf	_inPipes+3,7,c	;volatile
 22648                           
 22649                           ; BSR set to: 13
 22650                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 22651  012C68  0E08               	movlw	8
 22652  012C6A  6E1B               	movwf	_USBDeviceState,c	;volatile
 22653                           
 22654                           ;usb_device.c: 2699: break;
 22655  012C6C  0C08               	retlw	8
 22656  012C6E                     i2l7086:
 22657                           
 22658                           ; BSR set to: 13
 22659                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 22660  012C6E  0E29               	movlw	low _USBActiveConfiguration
 22661  012C70  6E0A               	movwf	_inPipes,c	;volatile
 22662  012C72  6A0B               	clrf	_inPipes+1,c	;volatile
 22663                           
 22664                           ; BSR set to: 13
 22665                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22666                           
 22667                           ; BSR set to: 13
 22668                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 22669                           
 22670                           ; BSR set to: 13
 22671                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 22672                           
 22673                           ;usb_device.c: 2711: break;
 22674  012C74  D037               	goto	PL298	;call to abstracted procedure
 22675  012C76                     i2l7098:
 22676                           
 22677                           ; BSR set to: 13
 22678                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 22679  012C76  0E92               	movlw	low _USBAlternateInterface
 22680  012C78  2534               	addwf	52,w,b	;volatile
 22681  012C7A  6E0A               	movwf	_inPipes,c	;volatile
 22682  012C7C  6A0B               	clrf	_inPipes+1,c	;volatile
 22683  012C7E  0E01               	movlw	high _USBAlternateInterface
 22684  012C80  220B               	addwfc	_inPipes+1,f,c	;volatile
 22685                           
 22686                           ; BSR set to: 13
 22687                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22688                           
 22689                           ; BSR set to: 13
 22690                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 22691                           
 22692                           ; BSR set to: 13
 22693                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 22694                           
 22695                           ;usb_device.c: 2724: break;
 22696  012C82  D030               	goto	PL298	;call to abstracted procedure
 22697  012C84                     i2l1762:
 22698                           
 22699                           ; BSR set to: 13
 22700                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 22701  012C84  8E0D               	bsf	_inPipes+3,7,c	;volatile
 22702                           
 22703                           ; BSR set to: 13
 22704                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 22705  012C86  0E92               	movlw	low _USBAlternateInterface
 22706  012C88  2534               	addwf	52,w,b	;volatile
 22707  012C8A  6ED9               	movwf	fsr2l,c
 22708  012C8C  6ADA               	clrf	fsr2h,c
 22709  012C8E  0E01               	movlw	high _USBAlternateInterface
 22710  012C90  22DA               	addwfc	fsr2h,f,c
 22711  012C92  CD32 FFDF          	movff	3378,indf2	;volatile
 22712                           
 22713                           ;usb_device.c: 2728: break;
 22714  012C96  0012               	return	
 22715  012C98                     i2l7108:
 22716                           
 22717                           ; BSR set to: 13
 22718                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 22719  012C98  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22720  012C9A  0E02               	movlw	2
 22721  012C9C  ECEA  F0A1         	call	PL140	;call to abstracted procedure
 22722  012CA0  EFF0  F0A1         	goto	i2l6410	;wreg free
 22723  012CA4                     i2l7112:
 22724                           
 22725                           ; BSR set to: 13
 22726  012CA4  5131               	movf	49,w,b	;volatile
 22727                           
 22728                           ; Switch size 1, requested type "space"
 22729                           ; Number of cases is 11, Range of values is 0 to 12
 22730                           ; switch strategies available:
 22731                           ; Name         Instructions Cycles
 22732                           ; simple_byte           34    18 (average)
 22733                           ;	Chosen strategy is simple_byte
 22734  012CA6  E102 EFB9  F09A    	bz	_USBStdGetStatusHandler
 22735  012CAC  0A01               	xorlw	1	; case 1
 22736  012CAE  E102 EF1C  F087    	bz	_USBStdFeatureReqHandler
 22737  012CB4  0A02               	xorlw	2	; case 3
 22738  012CB6  E102 EF1C  F087    	bz	_USBStdFeatureReqHandler
 22739  012CBC  0A06               	xorlw	6	; case 5
 22740  012CBE  E0D3               	bz	i2l1753
 22741  012CC0  0A03               	xorlw	3	; case 6
 22742  012CC2  E102 EF7D  F08F    	bz	_USBStdGetDscHandler
 22743  012CC8  0A01               	xorlw	1	; case 7
 22744  012CCA  E0E6               	bz	i2l7108
 22745  012CCC  0A0F               	xorlw	15	; case 8
 22746  012CCE  E0CF               	bz	i2l7086
 22747  012CD0  0A01               	xorlw	1	; case 9
 22748  012CD2  E102 EF63  F094    	bz	_USBStdSetCfgHandler
 22749  012CD8  0A03               	xorlw	3	; case 10
 22750  012CDA  E0CD               	bz	i2l7098
 22751  012CDC  0A01               	xorlw	1	; case 11
 22752  012CDE  E0D2               	bz	i2l1762
 22753  012CE0  0A07               	xorlw	7	; case 12
 22754  012CE2  0012               	return	
 22755  012CE4                     __end_of_USBCheckStdRequest:
 22756                           	opt stack 0
 22757  012CE4                     PL298:
 22758                           	opt stack 11
 22759  012CE4  800D               	bsf	_inPipes+3,0,c	;volatile
 22760  012CE6  0E01               	movlw	1
 22761  012CE8  6E0E               	movwf	_inPipes+4,c	;volatile
 22762  012CEA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 22763  012CEC  0C01               	retlw	1
 22764  012CEE                     __end_ofPL298:
 22765                           	opt stack 0
 22766                           tblptru	equ	0xFF8
 22767                           tblptrh	equ	0xFF7
 22768                           tblptrl	equ	0xFF6
 22769                           tablat	equ	0xFF5
 22770                           prodh	equ	0xFF4
 22771                           prodl	equ	0xFF3
 22772                           intcon	equ	0xFF2
 22773                           intcon2	equ	0xFF1
 22774                           postinc0	equ	0xFEE
 22775                           wreg	equ	0xFE8
 22776                           indf1	equ	0xFE7
 22777                           postinc1	equ	0xFE6
 22778                           postdec1	equ	0xFE5
 22779                           fsr1h	equ	0xFE2
 22780                           fsr1l	equ	0xFE1
 22781                           indf2	equ	0xFDF
 22782                           postinc2	equ	0xFDE
 22783                           postdec2	equ	0xFDD
 22784                           plusw2	equ	0xFDB
 22785                           fsr2h	equ	0xFDA
 22786                           fsr2l	equ	0xFD9
 22787                           status	equ	0xFD8
 22788                           
 22789 ;; *************** function _USBStdSetCfgHandler *****************
 22790 ;; Defined at:
 22791 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;		None
 22794 ;; Auto vars:     Size  Location     Type
 22795 ;;  i               1   20[COMRAM] unsigned char 
 22796 ;; Return value:  Size  Location     Type
 22797 ;;		None               void
 22798 ;; Registers used:
 22799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22800 ;; Tracked objects:
 22801 ;;		On entry : 3/D
 22802 ;;		On exit  : 0/0
 22803 ;;		Unchanged: 0/0
 22804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22809 ;;Total ram usage:        1 bytes
 22810 ;; Hardware stack levels used:    1
 22811 ;; Hardware stack levels required when called:    4
 22812 ;; This function calls:
 22813 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22814 ;;		i2_memset
 22815 ;; This function is called by:
 22816 ;;		_USBCheckStdRequest
 22817 ;; This function uses a non-reentrant model
 22818 ;;
 22819                           
 22820                           	psect	text111
 22821  0128C6                     __ptext111:
 22822                           	opt stack 0
 22823  0128C6                     _USBStdSetCfgHandler:
 22824                           	opt stack 11
 22825                           
 22826                           ;usb_device.c: 1970: uint8_t i;
 22827                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 22828                           
 22829                           ;incstack = 0
 22830  0128C6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 22831                           
 22832                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 22833  0128C8  D843               	call	PL168	;call to abstracted procedure
 22834  0128CA  D83B               	call	PL156	;call to abstracted procedure
 22835  0128CC  EC4A  F0A1         	call	i2_memset	;wreg free
 22836                           
 22837                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 22838  0128D0  6A2B               	clrf	i2memset@p1,c
 22839  0128D2  0E0D               	movlw	13
 22840  0128D4  6E2C               	movwf	i2memset@p1+1,c
 22841  0128D6  6A2E               	clrf	i2memset@c+1,c
 22842  0128D8  6A2D               	clrf	i2memset@c,c
 22843  0128DA  6A30               	clrf	i2memset@n+1,c
 22844  0128DC  0E30               	movlw	48
 22845  0128DE  6E2F               	movwf	i2memset@n,c
 22846  0128E0  EC4A  F0A1         	call	i2_memset	;wreg free
 22847                           
 22848                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 22849  0128E4  8C65               	bsf	3941,6,c	;volatile
 22850                           
 22851                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 22852  0128E6  6A3F               	clrf	USBStdSetCfgHandler@i,c
 22853  0128E8                     i2l6790:
 22854                           
 22855                           ;usb_device.c: 1988: {
 22856                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 22857  0128E8  0E09               	movlw	low _ep_data_in
 22858  0128EA  243F               	addwf	USBStdSetCfgHandler@i,w,c
 22859                           
 22860                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 22861  0128EC  EC41  F090         	call	PL158	;call to abstracted procedure
 22862  0128F0  243F               	addwf	USBStdSetCfgHandler@i,w,c
 22863  0128F2  EC48  F090         	call	PL196	;call to abstracted procedure
 22864  0128F6  2A3F               	incf	USBStdSetCfgHandler@i,f,c
 22865  0128F8  0E02               	movlw	2
 22866  0128FA  643F               	cpfsgt	USBStdSetCfgHandler@i,c
 22867  0128FC  D7F5               	goto	i2l6790
 22868                           
 22869                           ;usb_device.c: 1991: }
 22870                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 22871  0128FE  0E92               	movlw	low _USBAlternateInterface
 22872  012900  6E2B               	movwf	i2memset@p1,c
 22873  012902  0E01               	movlw	high _USBAlternateInterface
 22874  012904  D81E               	call	PL156	;call to abstracted procedure
 22875  012906  EC4A  F0A1         	call	i2_memset	;wreg free
 22876                           
 22877                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 22878  01290A  9C65               	bcf	3941,6,c	;volatile
 22879                           
 22880                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22881  01290C  0E08               	movlw	8
 22882  01290E  6E10               	movwf	_pBDTEntryIn,c
 22883  012910  0E0D               	movlw	13
 22884  012912  6E11               	movwf	_pBDTEntryIn+1,c
 22885                           
 22886                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 22887  012914  0E00               	movlw	0
 22888  012916  6E16               	movwf	_pBDTEntryEP0OutCurrent,c
 22889  012918  0E0D               	movlw	13
 22890                           
 22891                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 22892  01291A  D81D               	call	PL276	;call to abstracted procedure
 22893                           
 22894                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 22895  01291C  CD32 F029          	movff	3378,_USBActiveConfiguration	;volatile
 22896                           
 22897                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 22898  012920  5029               	movf	_USBActiveConfiguration,w,c	;volatile
 22899  012922  E103               	bnz	i2l6812
 22900                           
 22901                           ;usb_device.c: 2010: {
 22902                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 22903  012924  0E10               	movlw	16
 22904  012926  6E1B               	movwf	_USBDeviceState,c	;volatile
 22905                           
 22906                           ;usb_device.c: 2013: }
 22907  012928  0C10               	retlw	16
 22908  01292A                     i2l6812:
 22909                           
 22910                           ;usb_device.c: 2014: else
 22911                           ;usb_device.c: 2015: {
 22912                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 22913  01292A  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22914  01292C  0E01               	movlw	1
 22915  01292E  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22916  012930  0E29               	movlw	low _USBActiveConfiguration
 22917  012932  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22918  012934  EC65  F08C         	call	PL264	;call to abstracted procedure
 22919  012938  ECF0  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22920                           
 22921                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 22922  01293C  0E20               	movlw	32
 22923  01293E  6E1B               	movwf	_USBDeviceState,c	;volatile
 22924  012940  0C20               	retlw	32	;funcret
 22925  012942                     __end_of_USBStdSetCfgHandler:
 22926                           	opt stack 0
 22927  012942                     PL156:
 22928                           	opt stack 17
 22929  012942  6E2C               	movwf	i2memset@p1+1,c
 22930  012944  6A2E               	clrf	i2memset@c+1,c
 22931  012946  6A2D               	clrf	i2memset@c,c
 22932  012948  6A30               	clrf	i2memset@n+1,c
 22933  01294A  0E02               	movlw	2
 22934  01294C  6E2F               	movwf	i2memset@n,c
 22935  01294E  0C02               	retlw	2
 22936  012950                     __end_ofPL156:
 22937                           	opt stack 0
 22938  012950                     PL168:
 22939                           	opt stack 17
 22940  012950  0E27               	movlw	39
 22941  012952  6E2B               	movwf	i2memset@p1,c
 22942  012954  0C0F               	retlw	15
 22943  012956                     __end_ofPL168:
 22944                           	opt stack 0
 22945  012956                     PL276:
 22946                           	opt stack 11
 22947  012956  6E17               	movwf	_pBDTEntryEP0OutCurrent+1,c
 22948  012958  C016  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 22949  01295C  C017  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 22950  012960  0012               	return	
 22951  012962                     __end_ofPL276:
 22952                           	opt stack 0
 22953                           tblptru	equ	0xFF8
 22954                           tblptrh	equ	0xFF7
 22955                           tblptrl	equ	0xFF6
 22956                           tablat	equ	0xFF5
 22957                           prodh	equ	0xFF4
 22958                           prodl	equ	0xFF3
 22959                           intcon	equ	0xFF2
 22960                           intcon2	equ	0xFF1
 22961                           postinc0	equ	0xFEE
 22962                           wreg	equ	0xFE8
 22963                           indf1	equ	0xFE7
 22964                           postinc1	equ	0xFE6
 22965                           postdec1	equ	0xFE5
 22966                           fsr1h	equ	0xFE2
 22967                           fsr1l	equ	0xFE1
 22968                           indf2	equ	0xFDF
 22969                           postinc2	equ	0xFDE
 22970                           postdec2	equ	0xFDD
 22971                           plusw2	equ	0xFDB
 22972                           fsr2h	equ	0xFDA
 22973                           fsr2l	equ	0xFD9
 22974                           status	equ	0xFD8
 22975                           
 22976 ;; *************** function i2_memset *****************
 22977 ;; Defined at:
 22978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 22979 ;; Parameters:    Size  Location     Type
 22980 ;;  p1              2    0[COMRAM] PTR void 
 22981 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22982 ;;  c               2    2[COMRAM] int 
 22983 ;;  n               2    4[COMRAM] unsigned int 
 22984 ;; Auto vars:     Size  Location     Type
 22985 ;;  memset          2    6[COMRAM] PTR unsigned char 
 22986 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22987 ;; Return value:  Size  Location     Type
 22988 ;;                  2    0[COMRAM] PTR void 
 22989 ;; Registers used:
 22990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22991 ;; Tracked objects:
 22992 ;;		On entry : 0/F
 22993 ;;		On exit  : 0/0
 22994 ;;		Unchanged: 0/0
 22995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22996 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22999 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23000 ;;Total ram usage:        8 bytes
 23001 ;; Hardware stack levels used:    1
 23002 ;; This function calls:
 23003 ;;		Nothing
 23004 ;; This function is called by:
 23005 ;;		_USBStdSetCfgHandler
 23006 ;;		i2_USBDeviceInit
 23007 ;; This function uses a non-reentrant model
 23008 ;;
 23009                           
 23010                           	psect	text112
 23011  014294                     __ptext112:
 23012                           	opt stack 0
 23013  014294                     i2_memset:
 23014                           	opt stack 17
 23015                           
 23016                           ;incstack = 0
 23017  014294  C02B  F031         	movff	i2memset@p1,i2memset@p
 23018  014298  C02C  F032         	movff	i2memset@p1+1,i2memset@p+1
 23019  01429C  D008               	goto	i2l6500
 23020  01429E                     i2l6496:
 23021  01429E  C031  FFD9         	movff	i2memset@p,fsr2l
 23022  0142A2  C032  FFDA         	movff	i2memset@p+1,fsr2h
 23023  0142A6  C02D  FFDF         	movff	i2memset@c,indf2
 23024  0142AA  4A31               	infsnz	i2memset@p,f,c
 23025  0142AC  2A32               	incf	i2memset@p+1,f,c
 23026  0142AE                     i2l6500:
 23027  0142AE  062F               	decf	i2memset@n,f,c
 23028  0142B0  A0D8               	btfss	status,0,c
 23029  0142B2  0630               	decf	i2memset@n+1,f,c
 23030  0142B4  282F               	incf	i2memset@n,w,c
 23031  0142B6  E1F3               	bnz	i2l6496
 23032  0142B8  2830               	incf	i2memset@n+1,w,c
 23033  0142BA  E1F1               	bnz	i2l6496
 23034  0142BC  0012               	return		;funcret
 23035  0142BE                     __end_ofi2_memset:
 23036                           	opt stack 0
 23037                           tblptru	equ	0xFF8
 23038                           tblptrh	equ	0xFF7
 23039                           tblptrl	equ	0xFF6
 23040                           tablat	equ	0xFF5
 23041                           prodh	equ	0xFF4
 23042                           prodl	equ	0xFF3
 23043                           intcon	equ	0xFF2
 23044                           intcon2	equ	0xFF1
 23045                           postinc0	equ	0xFEE
 23046                           wreg	equ	0xFE8
 23047                           indf1	equ	0xFE7
 23048                           postinc1	equ	0xFE6
 23049                           postdec1	equ	0xFE5
 23050                           fsr1h	equ	0xFE2
 23051                           fsr1l	equ	0xFE1
 23052                           indf2	equ	0xFDF
 23053                           postinc2	equ	0xFDE
 23054                           postdec2	equ	0xFDD
 23055                           plusw2	equ	0xFDB
 23056                           fsr2h	equ	0xFDA
 23057                           fsr2l	equ	0xFD9
 23058                           status	equ	0xFD8
 23059                           
 23060 ;; *************** function _USBStdGetStatusHandler *****************
 23061 ;; Defined at:
 23062 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 23063 ;; Parameters:    Size  Location     Type
 23064 ;;		None
 23065 ;; Auto vars:     Size  Location     Type
 23066 ;;  p               2    0[COMRAM] PTR struct __BDT
 23067 ;;		 -> NULL(0), BDT(48), 
 23068 ;; Return value:  Size  Location     Type
 23069 ;;		None               void
 23070 ;; Registers used:
 23071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23072 ;; Tracked objects:
 23073 ;;		On entry : 3/D
 23074 ;;		On exit  : 3/1
 23075 ;;		Unchanged: 0/0
 23076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23081 ;;Total ram usage:        2 bytes
 23082 ;; Hardware stack levels used:    1
 23083 ;; This function calls:
 23084 ;;		Nothing
 23085 ;; This function is called by:
 23086 ;;		_USBCheckStdRequest
 23087 ;; This function uses a non-reentrant model
 23088 ;;
 23089                           
 23090                           	psect	text113
 23091  013572                     __ptext113:
 23092                           	opt stack 0
 23093  013572                     _USBStdGetStatusHandler:
 23094                           	opt stack 15
 23095                           
 23096                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 23097                           
 23098                           ;incstack = 0
 23099  013572  010D               	movlb	13	; () banked
 23100  013574  6B38               	clrf	56,b	;volatile
 23101                           
 23102                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 23103  013576  6B39               	clrf	57,b	;volatile
 23104                           
 23105                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 23106  013578  D022               	goto	i2l6862
 23107  01357A                     i2l1689:
 23108                           
 23109                           ; BSR set to: 13
 23110                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 23111  01357A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23112                           
 23113                           ; BSR set to: 13
 23114                           ;usb_device.c: 2145: }
 23115                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 23116                           
 23117                           ;usb_device.c: 2142: if(0 == 1)
 23118  01357C  0101               	movlb	1	; () banked
 23119  01357E  0526               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 23120  013580  E125               	bnz	i2l1692
 23121                           
 23122                           ; BSR set to: 1
 23123                           ;usb_device.c: 2148: {
 23124                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 23125  013582  010D               	movlb	13	; () banked
 23126  013584  8338               	bsf	56,1,b	;volatile
 23127  013586  D022               	goto	i2l1692
 23128  013588                     i2l1693:
 23129                           
 23130                           ; BSR set to: 13
 23131                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 23132  013588  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23133                           
 23134                           ;usb_device.c: 2154: break;
 23135  01358A  D020               	goto	i2l1692
 23136  01358C                     i2l1694:
 23137                           
 23138                           ; BSR set to: 13
 23139                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 23140  01358C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23141                           
 23142                           ;usb_device.c: 2160: {
 23143                           ;usb_device.c: 2161: BDT_ENTRY *p;
 23144                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 23145  01358E  BF34               	btfsc	52,7,b	;volatile
 23146  013590  D005               	goto	i2l6852
 23147                           
 23148                           ; BSR set to: 13
 23149                           ;usb_device.c: 2164: {
 23150                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23151  013592  5134               	movf	52,w,b	;volatile
 23152  013594  0B0F               	andlw	15
 23153  013596  EC33  F095         	call	PL22	;call to abstracted procedure
 23154  01359A  D004               	goto	L15
 23155  01359C                     i2l6852:
 23156                           
 23157                           ; BSR set to: 13
 23158                           ;usb_device.c: 2167: else
 23159                           ;usb_device.c: 2168: {
 23160                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23161  01359C  5134               	movf	52,w,b	;volatile
 23162  01359E  0B0F               	andlw	15
 23163  0135A0  EC3B  F095         	call	PL46	;call to abstracted procedure
 23164  0135A4                     L15:
 23165  0135A4  CFDE F02B          	movff	postinc2,USBStdGetStatusHandler@p
 23166  0135A8  CFDD F02C          	movff	postdec2,USBStdGetStatusHandler@p+1
 23167                           
 23168                           ; BSR set to: 13
 23169                           ;usb_device.c: 2170: }
 23170                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 23171  0135AC  D819               	call	PL302	;call to abstracted procedure
 23172  0135AE  AEDF               	btfss	indf2,7,c
 23173  0135B0  D00D               	goto	i2l1692
 23174                           
 23175                           ; BSR set to: 13
 23176  0135B2  D816               	call	PL302	;call to abstracted procedure
 23177  0135B4  A4DF               	btfss	indf2,2,c
 23178  0135B6  D00A               	goto	i2l1692
 23179                           
 23180                           ; BSR set to: 13
 23181                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 23182  0135B8  0E01               	movlw	1
 23183  0135BA  6F38               	movwf	56,b	;volatile
 23184  0135BC  D007               	goto	i2l1692
 23185  0135BE                     i2l6862:
 23186                           
 23187                           ; BSR set to: 13
 23188  0135BE  5130               	movf	48,w,b	;volatile
 23189  0135C0  0B1F               	andlw	31
 23190                           
 23191                           ; Switch size 1, requested type "space"
 23192                           ; Number of cases is 3, Range of values is 0 to 2
 23193                           ; switch strategies available:
 23194                           ; Name         Instructions Cycles
 23195                           ; simple_byte           10     6 (average)
 23196                           ;	Chosen strategy is simple_byte
 23197  0135C2  E0DB               	bz	i2l1689
 23198  0135C4  0A01               	xorlw	1	; case 1
 23199  0135C6  E0E0               	bz	i2l1693
 23200  0135C8  0A03               	xorlw	3	; case 2
 23201  0135CA  E0E0               	bz	i2l1694
 23202  0135CC                     i2l1692:
 23203                           
 23204                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 23205  0135CC  AE0D               	btfss	_inPipes+3,7,c	;volatile
 23206  0135CE  0012               	return	
 23207                           
 23208                           ;usb_device.c: 2179: {
 23209                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 23210  0135D0  0E38               	movlw	56
 23211  0135D2  6E0A               	movwf	_inPipes,c	;volatile
 23212  0135D4  0E0D               	movlw	13
 23213  0135D6  6E0B               	movwf	_inPipes+1,c	;volatile
 23214                           
 23215                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23216  0135D8  800D               	bsf	_inPipes+3,0,c	;volatile
 23217                           
 23218                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 23219  0135DA  0E02               	movlw	2
 23220  0135DC  6E0E               	movwf	_inPipes+4,c	;volatile
 23221  0135DE  0C02               	retlw	2	;funcret
 23222  0135E0                     __end_of_USBStdGetStatusHandler:
 23223                           	opt stack 0
 23224  0135E0                     PL302:
 23225                           	opt stack 15
 23226  0135E0  C02B  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 23227  0135E4  C02C  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 23228  0135E8  0012               	return	
 23229  0135EA                     __end_ofPL302:
 23230                           	opt stack 0
 23231                           tblptru	equ	0xFF8
 23232                           tblptrh	equ	0xFF7
 23233                           tblptrl	equ	0xFF6
 23234                           tablat	equ	0xFF5
 23235                           prodh	equ	0xFF4
 23236                           prodl	equ	0xFF3
 23237                           intcon	equ	0xFF2
 23238                           intcon2	equ	0xFF1
 23239                           postinc0	equ	0xFEE
 23240                           wreg	equ	0xFE8
 23241                           indf1	equ	0xFE7
 23242                           postinc1	equ	0xFE6
 23243                           postdec1	equ	0xFE5
 23244                           fsr1h	equ	0xFE2
 23245                           fsr1l	equ	0xFE1
 23246                           indf2	equ	0xFDF
 23247                           postinc2	equ	0xFDE
 23248                           postdec2	equ	0xFDD
 23249                           plusw2	equ	0xFDB
 23250                           fsr2h	equ	0xFDA
 23251                           fsr2l	equ	0xFD9
 23252                           status	equ	0xFD8
 23253                           
 23254 ;; *************** function _USBStdGetDscHandler *****************
 23255 ;; Defined at:
 23256 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 23257 ;; Parameters:    Size  Location     Type
 23258 ;;		None
 23259 ;; Auto vars:     Size  Location     Type
 23260 ;;		None
 23261 ;; Return value:  Size  Location     Type
 23262 ;;		None               void
 23263 ;; Registers used:
 23264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23265 ;; Tracked objects:
 23266 ;;		On entry : 3/D
 23267 ;;		On exit  : 0/0
 23268 ;;		Unchanged: 0/0
 23269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23274 ;;Total ram usage:        2 bytes
 23275 ;; Hardware stack levels used:    1
 23276 ;; This function calls:
 23277 ;;		Nothing
 23278 ;; This function is called by:
 23279 ;;		_USBCheckStdRequest
 23280 ;; This function uses a non-reentrant model
 23281 ;;
 23282                           
 23283                           	psect	text114
 23284  011EFA                     __ptext114:
 23285                           	opt stack 0
 23286  011EFA                     _USBStdGetDscHandler:
 23287                           	opt stack 15
 23288                           
 23289                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 23290                           
 23291                           ;incstack = 0
 23292  011EFA  0E80               	movlw	128
 23293  011EFC  010D               	movlb	13	; () banked
 23294  011EFE  1930               	xorwf	48,w,b	;volatile
 23295  011F00  A4D8               	btfss	status,2,c
 23296  011F02  0012               	return	
 23297                           
 23298                           ; BSR set to: 13
 23299                           ;usb_device.c: 2046: {
 23300                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 23301  011F04  0EC0               	movlw	192
 23302  011F06  6E0D               	movwf	_inPipes+3,c	;volatile
 23303                           
 23304                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 23305  011F08  D047               	goto	i2l6840
 23306  011F0A                     i2l6820:
 23307                           
 23308                           ; BSR set to: 13
 23309                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 23310  011F0A  0EC0               	movlw	low _device_dsc
 23311  011F0C  6E0A               	movwf	_inPipes,c	;volatile
 23312  011F0E  0EFB               	movlw	high _device_dsc
 23313  011F10  6E0B               	movwf	_inPipes+1,c	;volatile
 23314                           
 23315                           ; BSR set to: 13
 23316                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 23317  011F12  6A0F               	clrf	_inPipes+5,c	;volatile
 23318  011F14  0E12               	movlw	18
 23319  011F16  6E0E               	movwf	_inPipes+4,c	;volatile
 23320                           
 23321                           ;usb_device.c: 2058: break;
 23322  011F18  0C12               	retlw	18
 23323  011F1A                     i2l6824:
 23324                           
 23325                           ; BSR set to: 13
 23326                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 23327  011F1A  5132               	movf	50,w,b	;volatile
 23328  011F1C  E11C               	bnz	i2l1679
 23329                           
 23330                           ; BSR set to: 13
 23331                           ;usb_device.c: 2064: {
 23332                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 23333  011F1E  5132               	movf	50,w,b	;volatile
 23334  011F20  0D02               	mullw	2
 23335  011F22  0E7F               	movlw	low _USB_CD_Ptr
 23336  011F24  24F3               	addwf	prodl,w,c
 23337  011F26  6EF6               	movwf	tblptrl,c
 23338  011F28  0EFA               	movlw	high _USB_CD_Ptr
 23339  011F2A  20F4               	addwfc	prodh,w,c
 23340  011F2C  D850               	call	PL130	;call to abstracted procedure
 23341  011F2E  D855               	call	PL286	;call to abstracted procedure
 23342                           
 23343                           ; BSR set to: 13
 23344                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 23345  011F30  0E02               	movlw	2
 23346  011F32  D840               	call	PL108	;call to abstracted procedure
 23347  011F34  64F7               	cpfsgt	tblptrh,c
 23348  011F36  D003               	bra	i2u577_47
 23349  011F38  0008               	tblrd		*
 23350  011F3A  50F5               	movf	tablat,w,c
 23351  011F3C  D001               	bra	i2u577_40
 23352  011F3E                     i2u577_47:
 23353  011F3E  D834               	call	PL24	;call to abstracted procedure
 23354  011F40                     i2u577_40:
 23355  011F40  6E0E               	movwf	_inPipes+4,c	;volatile
 23356                           
 23357                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 23358  011F42  0E03               	movlw	3
 23359  011F44  D837               	call	PL108	;call to abstracted procedure
 23360  011F46  64F7               	cpfsgt	tblptrh,c
 23361  011F48  D003               	bra	i2u578_47
 23362  011F4A  0008               	tblrd		*
 23363  011F4C  50F5               	movf	tablat,w,c
 23364  011F4E  D001               	bra	i2u578_40
 23365  011F50                     i2u578_47:
 23366  011F50  D82B               	call	PL24	;call to abstracted procedure
 23367  011F52                     i2u578_40:
 23368  011F52  6E0F               	movwf	_inPipes+5,c	;volatile
 23369                           
 23370                           ;usb_device.c: 2076: }
 23371  011F54  0012               	return	
 23372  011F56                     i2l1679:
 23373                           
 23374                           ; BSR set to: 13
 23375                           ;usb_device.c: 2077: else
 23376                           ;usb_device.c: 2078: {
 23377                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 23378  011F56  6A0D               	clrf	_inPipes+3,c	;volatile
 23379  011F58  0012               	return	
 23380  011F5A                     i2l6832:
 23381                           
 23382                           ; BSR set to: 13
 23383                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 23384  011F5A  0E03               	movlw	3
 23385  011F5C  6132               	cpfslt	50,b	;volatile
 23386  011F5E  D018               	goto	i2l1682
 23387                           
 23388                           ; BSR set to: 13
 23389                           ;usb_device.c: 2087: {
 23390                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 23391  011F60  5132               	movf	50,w,b	;volatile
 23392  011F62  0D02               	mullw	2
 23393  011F64  0E79               	movlw	low _USB_SD_Ptr
 23394  011F66  24F3               	addwf	prodl,w,c
 23395  011F68  6EF6               	movwf	tblptrl,c
 23396  011F6A  0EFA               	movlw	high _USB_SD_Ptr
 23397  011F6C  20F4               	addwfc	prodh,w,c
 23398  011F6E  D82F               	call	PL130	;call to abstracted procedure
 23399  011F70  D834               	call	PL286	;call to abstracted procedure
 23400                           
 23401                           ; BSR set to: 13
 23402                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 23403  011F72  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 23404  011F76  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23405  011F7A  6EF8               	movwf	tblptru,c
 23406  011F7C  0E0E               	movlw	(high __ramtop+-1)
 23407  011F7E  64F7               	cpfsgt	tblptrh,c
 23408  011F80  D003               	bra	i2u580_47
 23409  011F82  0008               	tblrd		*
 23410  011F84  50F5               	movf	tablat,w,c
 23411  011F86  D001               	bra	i2u580_40
 23412  011F88                     i2u580_47:
 23413  011F88  D80F               	call	PL24	;call to abstracted procedure
 23414  011F8A                     i2u580_40:
 23415  011F8A  6E0E               	movwf	_inPipes+4,c	;volatile
 23416  011F8C  6A0F               	clrf	_inPipes+5,c	;volatile
 23417                           
 23418                           ;usb_device.c: 2092: }
 23419  011F8E  0012               	return	
 23420  011F90                     i2l1682:
 23421                           
 23422                           ; BSR set to: 13
 23423                           ;usb_device.c: 2102: else
 23424                           ;usb_device.c: 2103: {
 23425                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 23426  011F90  6A0D               	clrf	_inPipes+3,c	;volatile
 23427  011F92  0012               	return	
 23428  011F94                     i2l1684:
 23429                           
 23430                           ; BSR set to: 13
 23431                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 23432  011F94  6A0D               	clrf	_inPipes+3,c	;volatile
 23433                           
 23434                           ;usb_device.c: 2109: break;
 23435  011F96  0012               	return	
 23436  011F98                     i2l6840:
 23437                           
 23438                           ; BSR set to: 13
 23439  011F98  5133               	movf	51,w,b	;volatile
 23440                           
 23441                           ; Switch size 1, requested type "space"
 23442                           ; Number of cases is 3, Range of values is 1 to 3
 23443                           ; switch strategies available:
 23444                           ; Name         Instructions Cycles
 23445                           ; simple_byte           10     6 (average)
 23446                           ;	Chosen strategy is simple_byte
 23447  011F9A  0A01               	xorlw	1	; case 1
 23448  011F9C  E0B6               	bz	i2l6820
 23449  011F9E  0A03               	xorlw	3	; case 2
 23450  011FA0  E0BC               	bz	i2l6824
 23451  011FA2  0A01               	xorlw	1	; case 3
 23452  011FA4  E0DA               	bz	i2l6832
 23453  011FA6  D7F6               	goto	i2l1684
 23454  011FA8                     __end_of_USBStdGetDscHandler:
 23455                           	opt stack 0
 23456  011FA8                     PL24:
 23457                           	opt stack 18
 23458  011FA8  CFF6 FFE1          	movff	tblptrl,fsr1l
 23459  011FAC  CFF7 FFE2          	movff	tblptrh,fsr1h
 23460  011FB0  50E7               	movf	indf1,w,c
 23461  011FB2  0012               	return	
 23462  011FB4                     __end_ofPL24:
 23463                           	opt stack 0
 23464  011FB4                     PL108:
 23465                           	opt stack 15
 23466  011FB4  240A               	addwf	_inPipes,w,c	;volatile
 23467  011FB6  6E2B               	movwf	??_USBStdGetDscHandler& (0+255),c
 23468  011FB8  0E00               	movlw	0
 23469  011FBA  200B               	addwfc	_inPipes+1,w,c	;volatile
 23470  011FBC  6E2C               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 23471  011FBE  C02B  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 23472  011FC2  C02C  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 23473  011FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 23474  011FC8  6EF8               	movwf	tblptru,c
 23475  011FCA  0E0E               	movlw	(high __ramtop+-1)
 23476  011FCC  0012               	return	
 23477  011FCE                     __end_ofPL108:
 23478                           	opt stack 0
 23479  011FCE                     PL130:
 23480                           	opt stack 13
 23481  011FCE  6EF7               	movwf	tblptrh,c
 23482  011FD0                     	if	1	;There are 3 active tblptr bytes
 23483  011FD0  6AF8               	clrf	tblptru,c
 23484  011FD2  0E00               	movlw	low (__mediumconst shr (0+16))
 23485  011FD4  22F8               	addwfc	tblptru,f,c
 23486  011FD6                     	endif
 23487  011FD6  0009               	tblrd		*+
 23488  011FD8  0012               	return	
 23489  011FDA                     __end_ofPL130:
 23490                           	opt stack 0
 23491  011FDA                     PL286:
 23492                           	opt stack 15
 23493  011FDA  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 23494  011FDE  000A               	tblrd		*-
 23495  011FE0  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 23496  011FE4  0012               	return	
 23497  011FE6                     __end_ofPL286:
 23498                           	opt stack 0
 23499                           tblptru	equ	0xFF8
 23500                           tblptrh	equ	0xFF7
 23501                           tblptrl	equ	0xFF6
 23502                           tablat	equ	0xFF5
 23503                           prodh	equ	0xFF4
 23504                           prodl	equ	0xFF3
 23505                           intcon	equ	0xFF2
 23506                           intcon2	equ	0xFF1
 23507                           postinc0	equ	0xFEE
 23508                           wreg	equ	0xFE8
 23509                           indf1	equ	0xFE7
 23510                           postinc1	equ	0xFE6
 23511                           postdec1	equ	0xFE5
 23512                           fsr1h	equ	0xFE2
 23513                           fsr1l	equ	0xFE1
 23514                           indf2	equ	0xFDF
 23515                           postinc2	equ	0xFDE
 23516                           postdec2	equ	0xFDD
 23517                           plusw2	equ	0xFDB
 23518                           fsr2h	equ	0xFDA
 23519                           fsr2l	equ	0xFD9
 23520                           status	equ	0xFD8
 23521                           
 23522 ;; *************** function _USBStdFeatureReqHandler *****************
 23523 ;; Defined at:
 23524 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 23525 ;; Parameters:    Size  Location     Type
 23526 ;;		None
 23527 ;; Auto vars:     Size  Location     Type
 23528 ;;  p               2   25[COMRAM] PTR struct __BDT
 23529 ;;		 -> NULL(0), BDT(48), 
 23530 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 23531 ;;		 -> UEP0(1), 
 23532 ;;  current_ep_d    1   24[COMRAM] struct .
 23533 ;; Return value:  Size  Location     Type
 23534 ;;		None               void
 23535 ;; Registers used:
 23536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23537 ;; Tracked objects:
 23538 ;;		On entry : 3/D
 23539 ;;		On exit  : 3/1
 23540 ;;		Unchanged: 0/0
 23541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23543 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23545 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23546 ;;Total ram usage:        7 bytes
 23547 ;; Hardware stack levels used:    1
 23548 ;; Hardware stack levels required when called:    4
 23549 ;; This function calls:
 23550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23551 ;; This function is called by:
 23552 ;;		_USBCheckStdRequest
 23553 ;; This function uses a non-reentrant model
 23554 ;;
 23555                           
 23556                           	psect	text115
 23557  010E38                     __ptext115:
 23558                           	opt stack 0
 23559  010E38                     _USBStdFeatureReqHandler:
 23560                           	opt stack 11
 23561                           
 23562                           ;usb_device.c: 2759: BDT_ENTRY *p;
 23563                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 23564                           ;usb_device.c: 2764: unsigned char* pUEP;
 23565                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 23566                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 23567                           
 23568                           ;incstack = 0
 23569  010E38  010D               	movlb	13	; () banked
 23570  010E3A  0532               	decf	50,w,b	;volatile
 23571  010E3C  E10D               	bnz	i2l6880
 23572                           
 23573                           ; BSR set to: 13
 23574  010E3E  5130               	movf	48,w,b	;volatile
 23575  010E40  0B1F               	andlw	31
 23576  010E42  E10A               	bnz	i2l6880
 23577                           
 23578                           ; BSR set to: 13
 23579                           ;usb_device.c: 2804: {
 23580                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 23581  010E44  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23582                           
 23583                           ; BSR set to: 13
 23584                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 23585  010E46  0E03               	movlw	3
 23586  010E48  1931               	xorwf	49,w,b	;volatile
 23587  010E4A  E104               	bnz	i2l1769
 23588                           
 23589                           ; BSR set to: 13
 23590                           ;usb_device.c: 2807: RemoteWakeup = 1;
 23591  010E4C  0E01               	movlw	1
 23592  010E4E  0101               	movlb	1	; () banked
 23593  010E50  6F26               	movwf	_RemoteWakeup& (0+255),b	;volatile
 23594  010E52  D002               	goto	i2l6880
 23595  010E54                     i2l1769:
 23596                           
 23597                           ; BSR set to: 13
 23598                           ;usb_device.c: 2808: else
 23599                           ;usb_device.c: 2809: RemoteWakeup = 0;
 23600  010E54  0101               	movlb	1	; () banked
 23601  010E56  6B26               	clrf	_RemoteWakeup& (0+255),b	;volatile
 23602  010E58                     i2l6880:
 23603                           
 23604                           ;usb_device.c: 2810: }
 23605                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 23606                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 23607                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 23608                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 23609  010E58  010D               	movlb	13	; () banked
 23610  010E5A  5132               	movf	50,w,b	;volatile
 23611  010E5C  A4D8               	btfss	status,2,c
 23612  010E5E  0012               	return	
 23613                           
 23614                           ; BSR set to: 13
 23615  010E60  5130               	movf	48,w,b	;volatile
 23616  010E62  0B1F               	andlw	31
 23617  010E64  0A02               	xorlw	2
 23618  010E66  A4D8               	btfss	status,2,c
 23619  010E68  0012               	return	
 23620                           
 23621                           ; BSR set to: 13
 23622  010E6A  5134               	movf	52,w,b	;volatile
 23623  010E6C  0B0F               	andlw	15
 23624  010E6E  B4D8               	btfsc	status,2,c
 23625  010E70  0012               	return	
 23626                           
 23627                           ; BSR set to: 13
 23628  010E72  5134               	movf	52,w,b	;volatile
 23629  010E74  0B0F               	andlw	15
 23630  010E76  6E3F               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23631  010E78  0E03               	movlw	3
 23632  010E7A  603F               	cpfslt	??_USBStdFeatureReqHandler,c
 23633  010E7C  0C03               	retlw	3
 23634                           
 23635                           ; BSR set to: 13
 23636  010E7E  0E20               	movlw	32
 23637  010E80  181B               	xorwf	_USBDeviceState,w,c	;volatile
 23638  010E82  A4D8               	btfss	status,2,c
 23639  010E84  0012               	return	
 23640                           
 23641                           ; BSR set to: 13
 23642                           ;usb_device.c: 2817: {
 23643                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 23644  010E86  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23645                           
 23646                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 23647  010E88  BF34               	btfsc	52,7,b	;volatile
 23648  010E8A  D007               	goto	i2l6896
 23649                           
 23650                           ; BSR set to: 13
 23651                           ;usb_device.c: 2824: {
 23652                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23653  010E8C  5134               	movf	52,w,b	;volatile
 23654  010E8E  0B0F               	andlw	15
 23655  010E90  EC33  F095         	call	PL22	;call to abstracted procedure
 23656  010E94  D898               	call	PL186	;call to abstracted procedure
 23657                           
 23658                           ; BSR set to: 13
 23659                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 23660  010E96  D87B               	call	PL92	;call to abstracted procedure
 23661  010E98  D007               	goto	L16
 23662  010E9A                     i2l6896:
 23663                           
 23664                           ; BSR set to: 13
 23665                           ;usb_device.c: 2828: else
 23666                           ;usb_device.c: 2829: {
 23667                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23668  010E9A  5134               	movf	52,w,b	;volatile
 23669  010E9C  0B0F               	andlw	15
 23670  010E9E  EC3B  F095         	call	PL46	;call to abstracted procedure
 23671  010EA2  D891               	call	PL186	;call to abstracted procedure
 23672                           
 23673                           ; BSR set to: 13
 23674                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 23675  010EA4  5134               	movf	52,w,b	;volatile
 23676  010EA6  D87C               	call	PL112	;call to abstracted procedure
 23677  010EA8                     L16:
 23678  010EA8  2040               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 23679  010EAA  6EDA               	movwf	fsr2h,c
 23680  010EAC  50DF               	movf	indf2,w,c
 23681  010EAE  6E43               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 23682                           
 23683                           ; BSR set to: 13
 23684                           ;usb_device.c: 2832: }
 23685                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 23686  010EB0  B043               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 23687  010EB2  D002               	goto	i2l6904
 23688                           
 23689                           ; BSR set to: 13
 23690                           ;usb_device.c: 2839: {
 23691                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 23692  010EB4  9444               	bcf	USBStdFeatureReqHandler@p,2,c
 23693                           
 23694                           ;usb_device.c: 2841: }
 23695  010EB6  D001               	goto	i2l6906
 23696  010EB8                     i2l6904:
 23697                           
 23698                           ; BSR set to: 13
 23699                           ;usb_device.c: 2842: else
 23700                           ;usb_device.c: 2843: {
 23701                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 23702  010EB8  8444               	bsf	USBStdFeatureReqHandler@p,2,c
 23703  010EBA                     i2l6906:
 23704                           
 23705                           ; BSR set to: 13
 23706                           ;usb_device.c: 2845: }
 23707                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 23708  010EBA  BF34               	btfsc	52,7,b	;volatile
 23709  010EBC  D005               	goto	i2l6910
 23710                           
 23711                           ; BSR set to: 13
 23712                           ;usb_device.c: 2851: {
 23713                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23714  010EBE  5134               	movf	52,w,b	;volatile
 23715  010EC0  0B0F               	andlw	15
 23716  010EC2  EC33  F095         	call	PL22	;call to abstracted procedure
 23717  010EC6  D004               	goto	L17
 23718  010EC8                     i2l6910:
 23719                           
 23720                           ; BSR set to: 13
 23721                           ;usb_device.c: 2854: else
 23722                           ;usb_device.c: 2855: {
 23723                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23724  010EC8  5134               	movf	52,w,b	;volatile
 23725  010ECA  0B0F               	andlw	15
 23726  010ECC  EC3B  F095         	call	PL46	;call to abstracted procedure
 23727  010ED0                     L17:
 23728  010ED0  C044  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 23729  010ED4  C045  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 23730                           
 23731                           ; BSR set to: 13
 23732                           ;usb_device.c: 2857: }
 23733                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 23734  010ED8  0E03               	movlw	3
 23735  010EDA  1931               	xorwf	49,w,b	;volatile
 23736  010EDC  E113               	bnz	i2l6922
 23737                           
 23738                           ; BSR set to: 13
 23739                           ;usb_device.c: 2861: {
 23740                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 23741  010EDE  D852               	call	PL78	;call to abstracted procedure
 23742  010EE0  AEDF               	btfss	indf2,7,c
 23743  010EE2  D00A               	goto	i2l1779
 23744                           
 23745                           ; BSR set to: 13
 23746                           ;usb_device.c: 2863: {
 23747                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 23748  010EE4  BF34               	btfsc	52,7,b	;volatile
 23749  010EE6  D002               	goto	i2l6920
 23750                           
 23751                           ; BSR set to: 13
 23752                           ;usb_device.c: 2867: {
 23753                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 23754  010EE8  D852               	call	PL92	;call to abstracted procedure
 23755  010EEA  D002               	goto	L18
 23756  010EEC                     i2l6920:
 23757                           
 23758                           ; BSR set to: 13
 23759                           ;usb_device.c: 2870: else
 23760                           ;usb_device.c: 2871: {
 23761                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 23762  010EEC  5134               	movf	52,w,b	;volatile
 23763  010EEE  D858               	call	PL112	;call to abstracted procedure
 23764  010EF0                     L18:
 23765  010EF0  2040               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 23766  010EF2  6EDA               	movwf	fsr2h,c
 23767  010EF4  0101               	movlb	1	; () banked
 23768  010EF6  82DF               	bsf	indf2,1,c
 23769  010EF8                     i2l1779:
 23770                           
 23771                           ;usb_device.c: 2873: }
 23772                           ;usb_device.c: 2874: }
 23773                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 23774  010EF8  D845               	call	PL78	;call to abstracted procedure
 23775  010EFA  0E00               	movlw	0
 23776  010EFC  84DB               	bsf	plusw2,2,c
 23777                           
 23778                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 23779  010EFE  D842               	call	PL78	;call to abstracted procedure
 23780  010F00  8EDB               	bsf	plusw2,7,c
 23781                           
 23782                           ;usb_device.c: 2879: }
 23783  010F02  0C00               	retlw	0
 23784  010F04                     i2l6922:
 23785                           
 23786                           ; BSR set to: 13
 23787                           ;usb_device.c: 2880: else
 23788                           ;usb_device.c: 2881: {
 23789                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 23790  010F04  0E04               	movlw	4
 23791  010F06  1A44               	xorwf	USBStdFeatureReqHandler@p,f,c
 23792                           
 23793                           ; BSR set to: 13
 23794                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 23795  010F08  D83D               	call	PL78	;call to abstracted procedure
 23796  010F0A  AEDF               	btfss	indf2,7,c
 23797  010F0C  D00A               	goto	i2l6932
 23798                           
 23799                           ; BSR set to: 13
 23800                           ;usb_device.c: 2888: {
 23801                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 23802  010F0E  D83A               	call	PL78	;call to abstracted procedure
 23803  010F10  0E7F               	movlw	127
 23804  010F12  16DF               	andwf	indf2,f,c
 23805                           
 23806                           ; BSR set to: 13
 23807                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 23808  010F14  D837               	call	PL78	;call to abstracted procedure
 23809  010F16  0E00               	movlw	0
 23810  010F18  8CDB               	bsf	plusw2,6,c
 23811                           
 23812                           ; BSR set to: 13
 23813                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23814  010F1A  D84A               	call	PL126	;call to abstracted procedure
 23815  010F1C  ECF0  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23816                           
 23817                           ;usb_device.c: 2894: }
 23818  010F20  D003               	goto	i2l6934
 23819  010F22                     i2l6932:
 23820                           
 23821                           ; BSR set to: 13
 23822                           ;usb_device.c: 2895: else
 23823                           ;usb_device.c: 2896: {
 23824                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 23825  010F22  D830               	call	PL78	;call to abstracted procedure
 23826  010F24  0E00               	movlw	0
 23827  010F26  8CDB               	bsf	plusw2,6,c
 23828  010F28                     i2l6934:
 23829                           
 23830                           ;usb_device.c: 2899: }
 23831                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 23832  010F28  0E04               	movlw	4
 23833  010F2A  1A44               	xorwf	USBStdFeatureReqHandler@p,f,c
 23834                           
 23835                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 23836  010F2C  B243               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 23837  010F2E  D003               	goto	i2l1787
 23838  010F30  D829               	call	PL78	;call to abstracted procedure
 23839  010F32  AEDF               	btfss	indf2,7,c
 23840  010F34  D012               	goto	i2l6948
 23841  010F36                     i2l1787:
 23842                           
 23843                           ;usb_device.c: 2910: {
 23844                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 23845  010F36  010D               	movlb	13	; () banked
 23846  010F38  BF34               	btfsc	52,7,b	;volatile
 23847  010F3A  D002               	goto	i2l6942
 23848                           
 23849                           ; BSR set to: 13
 23850                           ;usb_device.c: 2912: {
 23851                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 23852  010F3C  D828               	call	PL92	;call to abstracted procedure
 23853  010F3E  D002               	goto	L19
 23854  010F40                     i2l6942:
 23855                           
 23856                           ; BSR set to: 13
 23857                           ;usb_device.c: 2915: else
 23858                           ;usb_device.c: 2916: {
 23859                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 23860  010F40  5134               	movf	52,w,b	;volatile
 23861  010F42  D82E               	call	PL112	;call to abstracted procedure
 23862  010F44                     L19:
 23863  010F44  2040               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 23864  010F46  6EDA               	movwf	fsr2h,c
 23865  010F48  0101               	movlb	1	; () banked
 23866  010F4A  92DF               	bcf	indf2,1,c
 23867                           
 23868                           ; BSR set to: 1
 23869                           ;usb_device.c: 2918: }
 23870                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23871  010F4C  D81B               	call	PL78	;call to abstracted procedure
 23872  010F4E  0E3B               	movlw	59
 23873  010F50  16DF               	andwf	indf2,f,c
 23874                           
 23875                           ; BSR set to: 1
 23876                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23877  010F52  D82E               	call	PL126	;call to abstracted procedure
 23878  010F54  ECF0  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23879                           
 23880                           ;usb_device.c: 2924: }
 23881  010F58  D003               	goto	i2l6950
 23882  010F5A                     i2l6948:
 23883                           
 23884                           ;usb_device.c: 2925: else
 23885                           ;usb_device.c: 2926: {
 23886                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23887  010F5A  D814               	call	PL78	;call to abstracted procedure
 23888  010F5C  0E3B               	movlw	59
 23889  010F5E  16DF               	andwf	indf2,f,c
 23890  010F60                     i2l6950:
 23891                           
 23892                           ;usb_device.c: 2929: }
 23893                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 23894  010F60  010D               	movlb	13	; () banked
 23895  010F62  5134               	movf	52,w,b	;volatile
 23896  010F64  0B0F               	andlw	15
 23897  010F66  6E3F               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23898  010F68  6A40               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 23899  010F6A  0E26               	movlw	38
 23900  010F6C  243F               	addwf	??_USBStdFeatureReqHandler,w,c
 23901  010F6E  6E41               	movwf	USBStdFeatureReqHandler@pUEP,c
 23902  010F70  0E0F               	movlw	15
 23903  010F72  2040               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 23904  010F74  6E42               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 23905                           
 23906                           ; BSR set to: 13
 23907                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 23908  010F76  C041  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 23909  010F7A  C042  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 23910  010F7E  0EFE               	movlw	254
 23911  010F80  16DF               	andwf	indf2,f,c
 23912  010F82  0CFE               	retlw	254	;funcret
 23913  010F84                     __end_of_USBStdFeatureReqHandler:
 23914                           	opt stack 0
 23915  010F84                     PL78:
 23916                           	opt stack 11
 23917  010F84  C044  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23918  010F88  C045  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23919  010F8C  0012               	return	
 23920  010F8E                     __end_ofPL78:
 23921                           	opt stack 0
 23922  010F8E                     PL92:
 23923                           	opt stack 11
 23924  010F8E  5134               	movf	52,w,b	;volatile
 23925  010F90  0B0F               	andlw	15
 23926  010F92  6E3F               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23927  010F94  6A40               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 23928  010F96  0E0C               	movlw	low _ep_data_out
 23929  010F98  243F               	addwf	??_USBStdFeatureReqHandler,w,c
 23930  010F9A  6ED9               	movwf	fsr2l,c
 23931  010F9C  0E01               	movlw	high _ep_data_out
 23932  010F9E  0012               	return	
 23933  010FA0                     __end_ofPL92:
 23934                           	opt stack 0
 23935  010FA0                     PL112:
 23936                           	opt stack 11
 23937  010FA0  0B0F               	andlw	15
 23938  010FA2  6E3F               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23939  010FA4  6A40               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 23940  010FA6  0E09               	movlw	low _ep_data_in
 23941  010FA8  243F               	addwf	??_USBStdFeatureReqHandler,w,c
 23942  010FAA  6ED9               	movwf	fsr2l,c
 23943  010FAC  0E01               	movlw	high _ep_data_in
 23944  010FAE  0012               	return	
 23945  010FB0                     __end_ofPL112:
 23946                           	opt stack 0
 23947  010FB0                     PL126:
 23948                           	opt stack 11
 23949  010FB0  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23950  010FB2  0E05               	movlw	5
 23951  010FB4  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23952  010FB6  C044  F039         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23953  010FBA  C045  F03A         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23954  010FBE  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23955  010FC0  0E02               	movlw	2
 23956  010FC2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23957  010FC4  0C02               	retlw	2
 23958  010FC6                     __end_ofPL126:
 23959                           	opt stack 0
 23960  010FC6                     PL186:
 23961                           	opt stack 11
 23962  010FC6  CFDE F044          	movff	postinc2,USBStdFeatureReqHandler@p
 23963  010FCA  CFDD F045          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23964  010FCE  0012               	return	
 23965  010FD0                     __end_ofPL186:
 23966                           	opt stack 0
 23967                           tblptru	equ	0xFF8
 23968                           tblptrh	equ	0xFF7
 23969                           tblptrl	equ	0xFF6
 23970                           tablat	equ	0xFF5
 23971                           prodh	equ	0xFF4
 23972                           prodl	equ	0xFF3
 23973                           intcon	equ	0xFF2
 23974                           intcon2	equ	0xFF1
 23975                           postinc0	equ	0xFEE
 23976                           wreg	equ	0xFE8
 23977                           indf1	equ	0xFE7
 23978                           postinc1	equ	0xFE6
 23979                           postdec1	equ	0xFE5
 23980                           fsr1h	equ	0xFE2
 23981                           fsr1l	equ	0xFE1
 23982                           indf2	equ	0xFDF
 23983                           postinc2	equ	0xFDE
 23984                           postdec2	equ	0xFDD
 23985                           plusw2	equ	0xFDB
 23986                           fsr2h	equ	0xFDA
 23987                           fsr2l	equ	0xFD9
 23988                           status	equ	0xFD8
 23989                           
 23990 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 23991 ;; Defined at:
 23992 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 23993 ;; Parameters:    Size  Location     Type
 23994 ;;  event           2   12[COMRAM] enum E8545
 23995 ;;  pdata           2   14[COMRAM] PTR void 
 23996 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 23997 ;;  size            2   16[COMRAM] unsigned int 
 23998 ;; Auto vars:     Size  Location     Type
 23999 ;;		None
 24000 ;; Return value:  Size  Location     Type
 24001 ;;                  1    wreg      unsigned char 
 24002 ;; Registers used:
 24003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24004 ;; Tracked objects:
 24005 ;;		On entry : 0/F
 24006 ;;		On exit  : 0/0
 24007 ;;		Unchanged: 0/0
 24008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24009 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24013 ;;Total ram usage:        8 bytes
 24014 ;; Hardware stack levels used:    1
 24015 ;; Hardware stack levels required when called:    3
 24016 ;; This function calls:
 24017 ;;		_CDCInitEP
 24018 ;;		_USBCheckCDCRequest
 24019 ;; This function is called by:
 24020 ;;		_USBDeviceTasks
 24021 ;;		_USBStdSetCfgHandler
 24022 ;;		_USBSuspend
 24023 ;;		_USBWakeFromSuspend
 24024 ;;		_USBCtrlTrfSetupHandler
 24025 ;;		_USBCheckStdRequest
 24026 ;;		_USBStdFeatureReqHandler
 24027 ;; This function uses a non-reentrant model
 24028 ;;
 24029                           
 24030                           	psect	text116
 24031  0143E0                     __ptext116:
 24032                           	opt stack 0
 24033  0143E0                     _USER_USB_CALLBACK_EVENT_HANDLER:
 24034                           	opt stack 15
 24035  0143E0                     i2l6410:
 24036  0143E0  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 24037  0143E4  C038  F03E         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 24038                           
 24039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24040                           ; Switch size 1, requested type "space"
 24041                           ; Number of cases is 1, Range of values is 0 to 0
 24042                           ; switch strategies available:
 24043                           ; Name         Instructions Cycles
 24044                           ; simple_byte            4     3 (average)
 24045                           ;	Chosen strategy is simple_byte
 24046  0143E8  503E               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 24047  0143EA  A4D8               	btfss	status,2,c
 24048  0143EC  0012               	return	
 24049                           
 24050                           ; Switch size 1, requested type "space"
 24051                           ; Number of cases is 2, Range of values is 1 to 3
 24052                           ; switch strategies available:
 24053                           ; Name         Instructions Cycles
 24054                           ; simple_byte            7     4 (average)
 24055                           ;	Chosen strategy is simple_byte
 24056  0143EE  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 24057  0143F0  0A01               	xorlw	1	; case 1
 24058  0143F2  E102 EF4E  F09D    	bz	_CDCInitEP
 24059  0143F8  0A02               	xorlw	2	; case 3
 24060  0143FA  E102 EFB1  F098    	bz	_USBCheckCDCRequest
 24061  014400  0012               	return		;funcret
 24062  014402                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 24063                           	opt stack 0
 24064                           tblptru	equ	0xFF8
 24065                           tblptrh	equ	0xFF7
 24066                           tblptrl	equ	0xFF6
 24067                           tablat	equ	0xFF5
 24068                           prodh	equ	0xFF4
 24069                           prodl	equ	0xFF3
 24070                           intcon	equ	0xFF2
 24071                           intcon2	equ	0xFF1
 24072                           postinc0	equ	0xFEE
 24073                           wreg	equ	0xFE8
 24074                           indf1	equ	0xFE7
 24075                           postinc1	equ	0xFE6
 24076                           postdec1	equ	0xFE5
 24077                           fsr1h	equ	0xFE2
 24078                           fsr1l	equ	0xFE1
 24079                           indf2	equ	0xFDF
 24080                           postinc2	equ	0xFDE
 24081                           postdec2	equ	0xFDD
 24082                           plusw2	equ	0xFDB
 24083                           fsr2h	equ	0xFDA
 24084                           fsr2l	equ	0xFD9
 24085                           status	equ	0xFD8
 24086                           
 24087 ;; *************** function _USBCheckCDCRequest *****************
 24088 ;; Defined at:
 24089 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 24090 ;; Parameters:    Size  Location     Type
 24091 ;;		None
 24092 ;; Auto vars:     Size  Location     Type
 24093 ;;		None
 24094 ;; Return value:  Size  Location     Type
 24095 ;;		None               void
 24096 ;; Registers used:
 24097 ;;		wreg, status,2, status,0
 24098 ;; Tracked objects:
 24099 ;;		On entry : 0/F
 24100 ;;		On exit  : F/D
 24101 ;;		Unchanged: 0/0
 24102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24107 ;;Total ram usage:        0 bytes
 24108 ;; Hardware stack levels used:    1
 24109 ;; This function calls:
 24110 ;;		Nothing
 24111 ;; This function is called by:
 24112 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24113 ;; This function uses a non-reentrant model
 24114 ;;
 24115                           
 24116                           	psect	text117
 24117  013162                     __ptext117:
 24118                           	opt stack 0
 24119  013162                     _USBCheckCDCRequest:
 24120                           	opt stack 17
 24121                           
 24122                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 24123                           
 24124                           ;incstack = 0
 24125  013162  010D               	movlb	13	; () banked
 24126  013164  5130               	movf	48,w,b	;volatile
 24127  013166  0B1F               	andlw	31
 24128  013168  06E8               	decf	wreg,f,c
 24129  01316A  E001               	bz	i2l6234
 24130  01316C  0012               	return	
 24131  01316E                     i2l6234:
 24132                           
 24133                           ; BSR set to: 13
 24134                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 24135  01316E  3930               	swapf	48,w,b	;volatile
 24136  013170  32E8               	rrcf	wreg,f,c
 24137  013172  0B03               	andlw	3
 24138  013174  06E8               	decf	wreg,f,c
 24139  013176  E001               	bz	i2l6238
 24140  013178  0012               	return	
 24141  01317A                     i2l6238:
 24142                           
 24143                           ; BSR set to: 13
 24144                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 24145                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 24146  01317A  5134               	movf	52,w,b	;volatile
 24147  01317C  E027               	bz	i2l6274
 24148                           
 24149                           ; BSR set to: 13
 24150  01317E  0534               	decf	52,w,b	;volatile
 24151  013180  E025               	bz	i2l6274
 24152  013182  0012               	return	
 24153  013184                     i2l6244:
 24154                           
 24155                           ; BSR set to: 13
 24156                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 24157  013184  D82E               	call	PL344	;call to abstracted procedure
 24158                           
 24159                           ; BSR set to: 13
 24160                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 24161  013186  6A0F               	clrf	_inPipes+5,c	;volatile
 24162  013188  0E08               	movlw	8
 24163  01318A  6E0E               	movwf	_inPipes+4,c	;volatile
 24164                           
 24165                           ; BSR set to: 13
 24166                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 24167  01318C  800D               	bsf	_inPipes+3,0,c	;volatile
 24168                           
 24169                           ; BSR set to: 13
 24170                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 24171  01318E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 24172                           
 24173                           ;usb_device_cdc.c: 232: break;
 24174  013190  0C08               	retlw	8
 24175  013192                     i2l6252:
 24176                           
 24177                           ; BSR set to: 13
 24178                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 24179  013192  D827               	call	PL344	;call to abstracted procedure
 24180                           
 24181                           ; BSR set to: 13
 24182                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 24183  013194  8E0D               	bsf	_inPipes+3,7,c	;volatile
 24184                           
 24185                           ;usb_device_cdc.c: 237: break;
 24186  013196  0012               	return	
 24187  013198                     i2l1844:
 24188                           
 24189                           ; BSR set to: 13
 24190                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 24191  013198  CD36 F005          	movff	3382,_outPipes+4	;volatile
 24192  01319C  CD37 F006          	movff	3383,_outPipes+5	;volatile
 24193                           
 24194                           ; BSR set to: 13
 24195                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 24196  0131A0  0EC5               	movlw	low _line_coding
 24197  0131A2  6E01               	movwf	_outPipes,c	;volatile
 24198  0131A4  0E02               	movlw	high _line_coding
 24199  0131A6  6E02               	movwf	_outPipes+1,c	;volatile
 24200                           
 24201                           ; BSR set to: 13
 24202                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 24203  0131A8  6A07               	clrf	_outPipes+6,c	;volatile
 24204  0131AA  6A08               	clrf	_outPipes+7,c	;volatile
 24205  0131AC  6A09               	clrf	_outPipes+8,c	;volatile
 24206                           
 24207                           ; BSR set to: 13
 24208                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 24209  0131AE  8E04               	bsf	_outPipes+3,7,c	;volatile
 24210                           
 24211                           ;usb_device_cdc.c: 246: break;
 24212  0131B0  0012               	return	
 24213  0131B2                     i2l6262:
 24214                           
 24215                           ; BSR set to: 13
 24216                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 24217  0131B2  0EC5               	movlw	low _line_coding
 24218  0131B4  6E0A               	movwf	_inPipes,c	;volatile
 24219  0131B6  0E02               	movlw	high _line_coding
 24220  0131B8  6E0B               	movwf	_inPipes+1,c	;volatile
 24221                           
 24222                           ; BSR set to: 13
 24223  0131BA  6A0F               	clrf	_inPipes+5,c	;volatile
 24224  0131BC  0E07               	movlw	7
 24225  0131BE  6E0E               	movwf	_inPipes+4,c	;volatile
 24226                           
 24227                           ; BSR set to: 13
 24228  0131C0  0EC1               	movlw	193
 24229  0131C2  6E0D               	movwf	_inPipes+3,c	;volatile
 24230                           
 24231                           ;usb_device_cdc.c: 253: break;
 24232  0131C4  0CC1               	retlw	193
 24233  0131C6                     i2l6268:
 24234                           
 24235                           ; BSR set to: 13
 24236                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 24237  0131C6  5132               	movf	50,w,b	;volatile
 24238                           
 24239                           ; BSR set to: 13
 24240                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 24241  0131C8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 24242                           
 24243                           ;usb_device_cdc.c: 289: break;
 24244  0131CA  0012               	return	
 24245  0131CC                     i2l6274:
 24246                           
 24247                           ; BSR set to: 13
 24248  0131CC  5131               	movf	49,w,b	;volatile
 24249                           
 24250                           ; Switch size 1, requested type "space"
 24251                           ; Number of cases is 5, Range of values is 0 to 34
 24252                           ; switch strategies available:
 24253                           ; Name         Instructions Cycles
 24254                           ; simple_byte           16     9 (average)
 24255                           ;	Chosen strategy is simple_byte
 24256  0131CE  E0DA               	bz	i2l6244
 24257  0131D0  0A01               	xorlw	1	; case 1
 24258  0131D2  E0DF               	bz	i2l6252
 24259  0131D4  0A21               	xorlw	33	; case 32
 24260  0131D6  E0E0               	bz	i2l1844
 24261  0131D8  0A01               	xorlw	1	; case 33
 24262  0131DA  E0EB               	bz	i2l6262
 24263  0131DC  0A03               	xorlw	3	; case 34
 24264  0131DE  E0F3               	bz	i2l6268
 24265                           
 24266                           ; BSR set to: 13
 24267  0131E0  0012               	return		;funcret
 24268  0131E2                     __end_of_USBCheckCDCRequest:
 24269                           	opt stack 0
 24270  0131E2                     PL344:
 24271                           	opt stack 17
 24272  0131E2  0E9D               	movlw	low _dummy_encapsulated_cmd_response
 24273  0131E4  6E0A               	movwf	_inPipes,c	;volatile
 24274  0131E6  0E02               	movlw	high _dummy_encapsulated_cmd_response
 24275  0131E8  6E0B               	movwf	_inPipes+1,c	;volatile
 24276  0131EA  0012               	return	
 24277  0131EC                     __end_ofPL344:
 24278                           	opt stack 0
 24279                           tblptru	equ	0xFF8
 24280                           tblptrh	equ	0xFF7
 24281                           tblptrl	equ	0xFF6
 24282                           tablat	equ	0xFF5
 24283                           prodh	equ	0xFF4
 24284                           prodl	equ	0xFF3
 24285                           intcon	equ	0xFF2
 24286                           intcon2	equ	0xFF1
 24287                           postinc0	equ	0xFEE
 24288                           wreg	equ	0xFE8
 24289                           indf1	equ	0xFE7
 24290                           postinc1	equ	0xFE6
 24291                           postdec1	equ	0xFE5
 24292                           fsr1h	equ	0xFE2
 24293                           fsr1l	equ	0xFE1
 24294                           indf2	equ	0xFDF
 24295                           postinc2	equ	0xFDE
 24296                           postdec2	equ	0xFDD
 24297                           plusw2	equ	0xFDB
 24298                           fsr2h	equ	0xFDA
 24299                           fsr2l	equ	0xFD9
 24300                           status	equ	0xFD8
 24301                           
 24302 ;; *************** function _CDCInitEP *****************
 24303 ;; Defined at:
 24304 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 24305 ;; Parameters:    Size  Location     Type
 24306 ;;		None
 24307 ;; Auto vars:     Size  Location     Type
 24308 ;;		None
 24309 ;; Return value:  Size  Location     Type
 24310 ;;		None               void
 24311 ;; Registers used:
 24312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24313 ;; Tracked objects:
 24314 ;;		On entry : 0/F
 24315 ;;		On exit  : F/1
 24316 ;;		Unchanged: 0/0
 24317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24322 ;;Total ram usage:        0 bytes
 24323 ;; Hardware stack levels used:    1
 24324 ;; Hardware stack levels required when called:    2
 24325 ;; This function calls:
 24326 ;;		_USBEnableEndpoint
 24327 ;;		i2_USBTransferOnePacket
 24328 ;; This function is called by:
 24329 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24330 ;; This function uses a non-reentrant model
 24331 ;;
 24332                           
 24333                           	psect	text118
 24334  013A9C                     __ptext118:
 24335                           	opt stack 0
 24336  013A9C                     _CDCInitEP:
 24337                           	opt stack 15
 24338                           
 24339                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 24340                           
 24341                           ; BSR set to: 13
 24342                           ;incstack = 0
 24343  013A9C  0102               	movlb	2	; () banked
 24344  013A9E  6BC5               	clrf	_line_coding& (0+255),b
 24345  013AA0  0E4B               	movlw	75
 24346  013AA2  6FC6               	movwf	(_line_coding+1)& (0+255),b
 24347  013AA4  6BC7               	clrf	(_line_coding+2)& (0+255),b
 24348  013AA6  6BC8               	clrf	(_line_coding+3)& (0+255),b
 24349                           
 24350                           ; BSR set to: 2
 24351                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 24352  013AA8  6BC9               	clrf	(_line_coding+4)& (0+255),b
 24353                           
 24354                           ; BSR set to: 2
 24355                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 24356  013AAA  6BCA               	clrf	(_line_coding+5)& (0+255),b
 24357                           
 24358                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 24359  013AAC  0E08               	movlw	8
 24360  013AAE  6FCB               	movwf	(_line_coding+6)& (0+255),b
 24361                           
 24362                           ; BSR set to: 2
 24363                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 24364  013AB0  6A1D               	clrf	_cdc_rx_len,c
 24365                           
 24366                           ; BSR set to: 2
 24367                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 24368  013AB2  0E1A               	movlw	26
 24369  013AB4  6E33               	movwf	USBEnableEndpoint@options,c
 24370  013AB6  0E01               	movlw	1
 24371  013AB8  EC57  F0A0         	call	_USBEnableEndpoint
 24372                           
 24373                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 24374  013ABC  0E1E               	movlw	30
 24375  013ABE  6E33               	movwf	USBEnableEndpoint@options,c
 24376  013AC0  0E02               	movlw	2
 24377  013AC2  EC57  F0A0         	call	_USBEnableEndpoint
 24378                           
 24379                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 24380  013AC6  0E00               	movlw	0
 24381  013AC8  6E2B               	movwf	i2USBTransferOnePacket@dir,c
 24382  013ACA  0E64               	movlw	low _cdc_data_rx
 24383  013ACC  6E2C               	movwf	i2USBTransferOnePacket@data,c
 24384  013ACE  0E03               	movlw	high _cdc_data_rx
 24385  013AD0  6E2D               	movwf	i2USBTransferOnePacket@data+1,c
 24386  013AD2  0E40               	movlw	64
 24387  013AD4  6E2E               	movwf	i2USBTransferOnePacket@len,c
 24388  013AD6  0E02               	movlw	2
 24389  013AD8  EC7B  F099         	call	i2_USBTransferOnePacket
 24390  013ADC  C02B  F119         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 24391  013AE0  C02C  F11A         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 24392                           
 24393                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 24394  013AE4  0101               	movlb	1	; () banked
 24395  013AE6  6B17               	clrf	_CDCDataInHandle& (0+255),b
 24396  013AE8  6B18               	clrf	(_CDCDataInHandle+1)& (0+255),b
 24397                           
 24398                           ; BSR set to: 1
 24399                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 24400  013AEA  6A1E               	clrf	_cdc_trf_state,c
 24401                           
 24402                           ; BSR set to: 1
 24403  013AEC  0012               	return		;funcret
 24404  013AEE                     __end_of_CDCInitEP:
 24405                           	opt stack 0
 24406                           tblptru	equ	0xFF8
 24407                           tblptrh	equ	0xFF7
 24408                           tblptrl	equ	0xFF6
 24409                           tablat	equ	0xFF5
 24410                           prodh	equ	0xFF4
 24411                           prodl	equ	0xFF3
 24412                           intcon	equ	0xFF2
 24413                           intcon2	equ	0xFF1
 24414                           postinc0	equ	0xFEE
 24415                           wreg	equ	0xFE8
 24416                           indf1	equ	0xFE7
 24417                           postinc1	equ	0xFE6
 24418                           postdec1	equ	0xFE5
 24419                           fsr1h	equ	0xFE2
 24420                           fsr1l	equ	0xFE1
 24421                           indf2	equ	0xFDF
 24422                           postinc2	equ	0xFDE
 24423                           postdec2	equ	0xFDD
 24424                           plusw2	equ	0xFDB
 24425                           fsr2h	equ	0xFDA
 24426                           fsr2l	equ	0xFD9
 24427                           status	equ	0xFD8
 24428                           
 24429 ;; *************** function i2_USBTransferOnePacket *****************
 24430 ;; Defined at:
 24431 ;;		line 995 in file "../My_library/usb/usb_device.c"
 24432 ;; Parameters:    Size  Location     Type
 24433 ;;  ep              1    wreg     unsigned char 
 24434 ;;  dir             1    0[COMRAM] unsigned char 
 24435 ;;  data            2    1[COMRAM] PTR unsigned char 
 24436 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 24437 ;;  len             1    3[COMRAM] unsigned char 
 24438 ;; Auto vars:     Size  Location     Type
 24439 ;;  ep              1    4[COMRAM] unsigned char 
 24440 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 24441 ;;		 -> NULL(0), BDT(48), 
 24442 ;; Return value:  Size  Location     Type
 24443 ;;                  2    0[COMRAM] PTR void 
 24444 ;; Registers used:
 24445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24446 ;; Tracked objects:
 24447 ;;		On entry : 0/2
 24448 ;;		On exit  : 0/0
 24449 ;;		Unchanged: 0/0
 24450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24452 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24454 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24455 ;;Total ram usage:        7 bytes
 24456 ;; Hardware stack levels used:    1
 24457 ;; This function calls:
 24458 ;;		Nothing
 24459 ;; This function is called by:
 24460 ;;		_CDCInitEP
 24461 ;; This function uses a non-reentrant model
 24462 ;;
 24463                           
 24464                           	psect	text119
 24465  0132F6                     __ptext119:
 24466                           	opt stack 0
 24467  0132F6                     i2_USBTransferOnePacket:
 24468                           	opt stack 16
 24469                           
 24470                           ; BSR set to: 1
 24471                           ;incstack = 0
 24472                           ;i2USBTransferOnePacket@ep stored from wreg
 24473  0132F6  6E2F               	movwf	i2USBTransferOnePacket@ep,c
 24474                           
 24475                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 24476                           ;usb_device.c: 1000: if(dir != 0)
 24477  0132F8  502B               	movf	i2USBTransferOnePacket@dir,w,c
 24478  0132FA  E004               	bz	i2l6160
 24479                           
 24480                           ;usb_device.c: 1001: {
 24481                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 24482  0132FC  502F               	movf	i2USBTransferOnePacket@ep,w,c
 24483  0132FE  EC3B  F095         	call	PL46	;call to abstracted procedure
 24484  013302  D003               	goto	L20
 24485  013304                     i2l6160:
 24486                           
 24487                           ;usb_device.c: 1005: else
 24488                           ;usb_device.c: 1006: {
 24489                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 24490  013304  502F               	movf	i2USBTransferOnePacket@ep,w,c
 24491  013306  EC33  F095         	call	PL22	;call to abstracted procedure
 24492  01330A                     L20:
 24493  01330A  CFDE F030          	movff	postinc2,i2USBTransferOnePacket@handle
 24494  01330E  CFDD F031          	movff	postdec2,i2USBTransferOnePacket@handle+1
 24495                           
 24496                           ;usb_device.c: 1009: }
 24497                           ;usb_device.c: 1013: if(handle == 0)
 24498  013312  5030               	movf	i2USBTransferOnePacket@handle,w,c
 24499  013314  1031               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 24500  013316  E103               	bnz	i2l6166
 24501                           
 24502                           ;usb_device.c: 1014: {
 24503                           ;usb_device.c: 1015: return 0;
 24504  013318  6A2B               	clrf	?i2_USBTransferOnePacket,c
 24505  01331A  6A2C               	clrf	?i2_USBTransferOnePacket+1,c
 24506  01331C  0012               	return	
 24507  01331E                     i2l6166:
 24508                           
 24509                           ;usb_device.c: 1016: }
 24510                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 24511  01331E  EE20 F002          	lfsr	2,2
 24512  013322  D826               	call	PL316	;call to abstracted procedure
 24513  013324  C02C  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 24514  013328  C02D  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 24515                           
 24516                           ;usb_device.c: 1030: handle->CNT = len;
 24517  01332C  EE20 F001          	lfsr	2,1
 24518  013330  D81F               	call	PL316	;call to abstracted procedure
 24519  013332  C02E  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 24520                           
 24521                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 24522  013336  D817               	call	PL256	;call to abstracted procedure
 24523  013338  0E40               	movlw	64
 24524  01333A  16DF               	andwf	indf2,f,c
 24525                           
 24526                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 24527  01333C  D814               	call	PL256	;call to abstracted procedure
 24528  01333E  0E00               	movlw	0
 24529  013340  86DB               	bsf	plusw2,3,c
 24530                           
 24531                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 24532  013342  D811               	call	PL256	;call to abstracted procedure
 24533  013344  8EDB               	bsf	plusw2,7,c
 24534                           
 24535                           ;usb_device.c: 1036: if(dir != 0)
 24536  013346  502B               	movf	i2USBTransferOnePacket@dir,w,c
 24537  013348  E004               	bz	i2l6178
 24538                           
 24539                           ;usb_device.c: 1037: {
 24540                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 24541  01334A  502F               	movf	i2USBTransferOnePacket@ep,w,c
 24542  01334C  EC3B  F095         	call	PL46	;call to abstracted procedure
 24543  013350  D003               	goto	L21
 24544  013352                     i2l6178:
 24545                           
 24546                           ;usb_device.c: 1041: else
 24547                           ;usb_device.c: 1042: {
 24548                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 24549  013352  502F               	movf	i2USBTransferOnePacket@ep,w,c
 24550  013354  EC33  F095         	call	PL22	;call to abstracted procedure
 24551  013358                     L21:
 24552  013358  0E04               	movlw	4
 24553  01335A  1ADF               	xorwf	indf2,f,c
 24554                           
 24555                           ;usb_device.c: 1045: }
 24556                           ;usb_device.c: 1046: return (void*)handle;
 24557  01335C  C030  F02B         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 24558  013360  C031  F02C         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 24559  013364  0C04               	retlw	4	;funcret
 24560  013366                     __end_ofi2_USBTransferOnePacket:
 24561                           	opt stack 0
 24562  013366                     PL256:
 24563                           	opt stack 16
 24564  013366  C030  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24565  01336A  C031  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24566  01336E  0012               	return	
 24567  013370                     __end_ofPL256:
 24568                           	opt stack 0
 24569  013370                     PL316:
 24570                           	opt stack 16
 24571  013370  5030               	movf	i2USBTransferOnePacket@handle,w,c
 24572  013372  26D9               	addwf	fsr2l,f,c
 24573  013374  5031               	movf	i2USBTransferOnePacket@handle+1,w,c
 24574  013376  22DA               	addwfc	fsr2h,f,c
 24575  013378  0012               	return	
 24576  01337A                     __end_ofPL316:
 24577                           	opt stack 0
 24578                           tblptru	equ	0xFF8
 24579                           tblptrh	equ	0xFF7
 24580                           tblptrl	equ	0xFF6
 24581                           tablat	equ	0xFF5
 24582                           prodh	equ	0xFF4
 24583                           prodl	equ	0xFF3
 24584                           intcon	equ	0xFF2
 24585                           intcon2	equ	0xFF1
 24586                           postinc0	equ	0xFEE
 24587                           wreg	equ	0xFE8
 24588                           indf1	equ	0xFE7
 24589                           postinc1	equ	0xFE6
 24590                           postdec1	equ	0xFE5
 24591                           fsr1h	equ	0xFE2
 24592                           fsr1l	equ	0xFE1
 24593                           indf2	equ	0xFDF
 24594                           postinc2	equ	0xFDE
 24595                           postdec2	equ	0xFDD
 24596                           plusw2	equ	0xFDB
 24597                           fsr2h	equ	0xFDA
 24598                           fsr2l	equ	0xFD9
 24599                           status	equ	0xFD8
 24600                           
 24601 ;; *************** function _USBEnableEndpoint *****************
 24602 ;; Defined at:
 24603 ;;		line 878 in file "../My_library/usb/usb_device.c"
 24604 ;; Parameters:    Size  Location     Type
 24605 ;;  ep              1    wreg     unsigned char 
 24606 ;;  options         1    8[COMRAM] unsigned char 
 24607 ;; Auto vars:     Size  Location     Type
 24608 ;;  ep              1   11[COMRAM] unsigned char 
 24609 ;;  p               2    9[COMRAM] PTR unsigned char 
 24610 ;;		 -> UEP0(1), 
 24611 ;; Return value:  Size  Location     Type
 24612 ;;		None               void
 24613 ;; Registers used:
 24614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24615 ;; Tracked objects:
 24616 ;;		On entry : 0/2
 24617 ;;		On exit  : 0/0
 24618 ;;		Unchanged: 0/0
 24619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24620 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24621 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24624 ;;Total ram usage:        4 bytes
 24625 ;; Hardware stack levels used:    1
 24626 ;; Hardware stack levels required when called:    1
 24627 ;; This function calls:
 24628 ;;		_USBConfigureEndpoint
 24629 ;; This function is called by:
 24630 ;;		_CDCInitEP
 24631 ;; This function uses a non-reentrant model
 24632 ;;
 24633                           
 24634                           	psect	text120
 24635  0140AE                     __ptext120:
 24636                           	opt stack 0
 24637  0140AE                     _USBEnableEndpoint:
 24638                           	opt stack 15
 24639                           
 24640                           ;incstack = 0
 24641                           ;USBEnableEndpoint@ep stored from wreg
 24642  0140AE  6E36               	movwf	USBEnableEndpoint@ep,c
 24643                           
 24644                           ;usb_device.c: 880: unsigned char* p;
 24645                           ;usb_device.c: 884: if(options & 0x04)
 24646  0140B0  A433               	btfss	USBEnableEndpoint@options,2,c
 24647  0140B2  D004               	goto	i2l6094
 24648                           
 24649                           ;usb_device.c: 885: {
 24650                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 24651  0140B4  6A2B               	clrf	USBConfigureEndpoint@direction,c
 24652  0140B6  5036               	movf	USBEnableEndpoint@ep,w,c
 24653  0140B8  ECF5  F09A         	call	_USBConfigureEndpoint
 24654  0140BC                     i2l6094:
 24655                           
 24656                           ;usb_device.c: 887: }
 24657                           ;usb_device.c: 888: if(options & 0x02)
 24658  0140BC  A233               	btfss	USBEnableEndpoint@options,1,c
 24659  0140BE  D005               	goto	i2l6098
 24660                           
 24661                           ;usb_device.c: 889: {
 24662                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 24663  0140C0  0E01               	movlw	1
 24664  0140C2  6E2B               	movwf	USBConfigureEndpoint@direction,c
 24665  0140C4  5036               	movf	USBEnableEndpoint@ep,w,c
 24666  0140C6  ECF5  F09A         	call	_USBConfigureEndpoint
 24667  0140CA                     i2l6098:
 24668                           
 24669                           ;usb_device.c: 891: }
 24670                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 24671  0140CA  0E26               	movlw	38
 24672  0140CC  2436               	addwf	USBEnableEndpoint@ep,w,c
 24673  0140CE  6E34               	movwf	USBEnableEndpoint@p,c
 24674  0140D0  6A35               	clrf	USBEnableEndpoint@p+1,c
 24675  0140D2  0E0F               	movlw	15
 24676  0140D4  2235               	addwfc	USBEnableEndpoint@p+1,f,c
 24677                           
 24678                           ;usb_device.c: 901: *p = options;
 24679  0140D6  C034  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 24680  0140DA  C035  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 24681  0140DE  C033  FFDF         	movff	USBEnableEndpoint@options,indf2
 24682  0140E2  0C0F               	retlw	15	;funcret
 24683  0140E4                     __end_of_USBEnableEndpoint:
 24684                           	opt stack 0
 24685                           tblptru	equ	0xFF8
 24686                           tblptrh	equ	0xFF7
 24687                           tblptrl	equ	0xFF6
 24688                           tablat	equ	0xFF5
 24689                           prodh	equ	0xFF4
 24690                           prodl	equ	0xFF3
 24691                           intcon	equ	0xFF2
 24692                           intcon2	equ	0xFF1
 24693                           postinc0	equ	0xFEE
 24694                           wreg	equ	0xFE8
 24695                           indf1	equ	0xFE7
 24696                           postinc1	equ	0xFE6
 24697                           postdec1	equ	0xFE5
 24698                           fsr1h	equ	0xFE2
 24699                           fsr1l	equ	0xFE1
 24700                           indf2	equ	0xFDF
 24701                           postinc2	equ	0xFDE
 24702                           postdec2	equ	0xFDD
 24703                           plusw2	equ	0xFDB
 24704                           fsr2h	equ	0xFDA
 24705                           fsr2l	equ	0xFD9
 24706                           status	equ	0xFD8
 24707                           
 24708 ;; *************** function _USBConfigureEndpoint *****************
 24709 ;; Defined at:
 24710 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 24711 ;; Parameters:    Size  Location     Type
 24712 ;;  EPNum           1    wreg     unsigned char 
 24713 ;;  direction       1    0[COMRAM] unsigned char 
 24714 ;; Auto vars:     Size  Location     Type
 24715 ;;  EPNum           1    5[COMRAM] unsigned char 
 24716 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 24717 ;;		 -> BDT(48), 
 24718 ;; Return value:  Size  Location     Type
 24719 ;;		None               void
 24720 ;; Registers used:
 24721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24722 ;; Tracked objects:
 24723 ;;		On entry : 0/2
 24724 ;;		On exit  : 0/0
 24725 ;;		Unchanged: 0/0
 24726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24727 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24728 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24730 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24731 ;;Total ram usage:        8 bytes
 24732 ;; Hardware stack levels used:    1
 24733 ;; This function calls:
 24734 ;;		Nothing
 24735 ;; This function is called by:
 24736 ;;		_USBEnableEndpoint
 24737 ;; This function uses a non-reentrant model
 24738 ;;
 24739                           
 24740                           	psect	text121
 24741  0135EA                     __ptext121:
 24742                           	opt stack 0
 24743  0135EA                     _USBConfigureEndpoint:
 24744                           	opt stack 15
 24745                           
 24746                           ;incstack = 0
 24747                           ;USBConfigureEndpoint@EPNum stored from wreg
 24748  0135EA  6E30               	movwf	USBConfigureEndpoint@EPNum,c
 24749                           
 24750                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 24751                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 24752  0135EC  6A31               	clrf	USBConfigureEndpoint@handle,c
 24753  0135EE  0E0D               	movlw	13
 24754  0135F0  6E32               	movwf	USBConfigureEndpoint@handle+1,c
 24755                           
 24756                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 24757  0135F2  502B               	movf	USBConfigureEndpoint@direction,w,c
 24758  0135F4  6E2C               	movwf	??_USBConfigureEndpoint& (0+255),c
 24759  0135F6  6A2D               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 24760  0135F8  90D8               	bcf	status,0,c
 24761  0135FA  362C               	rlcf	??_USBConfigureEndpoint,f,c
 24762  0135FC  362D               	rlcf	??_USBConfigureEndpoint+1,f,c
 24763  0135FE  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 24764  013600  6E2E               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 24765  013602  6A2F               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 24766  013604  D822               	call	PL254	;call to abstracted procedure
 24767  013606  502C               	movf	??_USBConfigureEndpoint,w,c
 24768  013608  262E               	addwf	??_USBConfigureEndpoint+2,f,c
 24769  01360A  502D               	movf	??_USBConfigureEndpoint+1,w,c
 24770  01360C  222F               	addwfc	??_USBConfigureEndpoint+3,f,c
 24771  01360E  D81D               	call	PL254	;call to abstracted procedure
 24772  013610  502E               	movf	??_USBConfigureEndpoint+2,w,c
 24773  013612  2631               	addwf	USBConfigureEndpoint@handle,f,c
 24774  013614  502F               	movf	??_USBConfigureEndpoint+3,w,c
 24775  013616  2232               	addwfc	USBConfigureEndpoint@handle+1,f,c
 24776                           
 24777                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 24778  013618  D81F               	call	PL328	;call to abstracted procedure
 24779  01361A  9EDF               	bcf	indf2,7,c
 24780                           
 24781                           ;usb_device.c: 1557: if(direction == 0)
 24782  01361C  502B               	movf	USBConfigureEndpoint@direction,w,c
 24783  01361E  E104               	bnz	i2l6084
 24784                           
 24785                           ;usb_device.c: 1558: {
 24786                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 24787  013620  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 24788  013622  EC33  F095         	call	PL22	;call to abstracted procedure
 24789  013626  D003               	goto	L22
 24790  013628                     i2l6084:
 24791                           
 24792                           ;usb_device.c: 1561: else
 24793                           ;usb_device.c: 1562: {
 24794                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 24795  013628  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 24796  01362A  EC3B  F095         	call	PL46	;call to abstracted procedure
 24797  01362E                     L22:
 24798  01362E  C031  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 24799  013632  C032  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 24800                           
 24801                           ;usb_device.c: 1564: }
 24802                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 24803  013636  D810               	call	PL328	;call to abstracted procedure
 24804  013638  9CDF               	bcf	indf2,6,c
 24805                           
 24806                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 24807  01363A  EE20 F004          	lfsr	2,4
 24808  01363E  5031               	movf	USBConfigureEndpoint@handle,w,c
 24809  013640  26D9               	addwf	fsr2l,f,c
 24810  013642  5032               	movf	USBConfigureEndpoint@handle+1,w,c
 24811  013644  22DA               	addwfc	fsr2h,f,c
 24812  013646  8CDF               	bsf	indf2,6,c
 24813  013648  0012               	return		;funcret
 24814  01364A                     __end_of_USBConfigureEndpoint:
 24815                           	opt stack 0
 24816  01364A                     PL254:
 24817                           	opt stack 15
 24818  01364A  90D8               	bcf	status,0,c
 24819  01364C  362E               	rlcf	??_USBConfigureEndpoint+2,f,c
 24820  01364E  362F               	rlcf	??_USBConfigureEndpoint+3,f,c
 24821  013650  90D8               	bcf	status,0,c
 24822  013652  362E               	rlcf	??_USBConfigureEndpoint+2,f,c
 24823  013654  362F               	rlcf	??_USBConfigureEndpoint+3,f,c
 24824  013656  0012               	return	
 24825  013658                     __end_ofPL254:
 24826                           	opt stack 0
 24827  013658                     PL328:
 24828                           	opt stack 15
 24829  013658  C031  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24830  01365C  C032  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24831  013660  0012               	return	
 24832  013662                     __end_ofPL328:
 24833                           	opt stack 0
 24834                           tblptru	equ	0xFF8
 24835                           tblptrh	equ	0xFF7
 24836                           tblptrl	equ	0xFF6
 24837                           tablat	equ	0xFF5
 24838                           prodh	equ	0xFF4
 24839                           prodl	equ	0xFF3
 24840                           intcon	equ	0xFF2
 24841                           intcon2	equ	0xFF1
 24842                           postinc0	equ	0xFEE
 24843                           wreg	equ	0xFE8
 24844                           indf1	equ	0xFE7
 24845                           postinc1	equ	0xFE6
 24846                           postdec1	equ	0xFE5
 24847                           fsr1h	equ	0xFE2
 24848                           fsr1l	equ	0xFE1
 24849                           indf2	equ	0xFDF
 24850                           postinc2	equ	0xFDE
 24851                           postdec2	equ	0xFDD
 24852                           plusw2	equ	0xFDB
 24853                           fsr2h	equ	0xFDA
 24854                           fsr2l	equ	0xFD9
 24855                           status	equ	0xFD8
 24856                           
 24857 ;; *************** function _USBCtrlTrfOutHandler *****************
 24858 ;; Defined at:
 24859 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 24860 ;; Parameters:    Size  Location     Type
 24861 ;;		None
 24862 ;; Auto vars:     Size  Location     Type
 24863 ;;		None
 24864 ;; Return value:  Size  Location     Type
 24865 ;;		None               void
 24866 ;; Registers used:
 24867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24868 ;; Tracked objects:
 24869 ;;		On entry : F/1
 24870 ;;		On exit  : F/1
 24871 ;;		Unchanged: 0/0
 24872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24877 ;;Total ram usage:        0 bytes
 24878 ;; Hardware stack levels used:    1
 24879 ;; Hardware stack levels required when called:    2
 24880 ;; This function calls:
 24881 ;;		_USBCtrlTrfRxService
 24882 ;; This function is called by:
 24883 ;;		_USBCtrlEPService
 24884 ;; This function uses a non-reentrant model
 24885 ;;
 24886                           
 24887                           	psect	text122
 24888  014482                     __ptext122:
 24889                           	opt stack 0
 24890  014482                     _USBCtrlTrfOutHandler:
 24891                           	opt stack 15
 24892                           
 24893                           ; BSR set to: 1
 24894                           ;usb_device.c: 2543: if(controlTransferState == 2)
 24895                           
 24896                           ;incstack = 0
 24897  014482  0E02               	movlw	2
 24898  014484  1820               	xorwf	_controlTransferState,w,c	;volatile
 24899  014486  E102               	bnz	i2l1729
 24900                           
 24901                           ; BSR set to: 1
 24902                           ;usb_device.c: 2544: {
 24903                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 24904  014488  EF24  F091         	goto	_USBCtrlTrfRxService	;wreg free
 24905  01448C                     i2l1729:
 24906                           
 24907                           ; BSR set to: 1
 24908                           ;usb_device.c: 2547: else
 24909                           ;usb_device.c: 2548: {
 24910                           ;usb_device.c: 2551: controlTransferState = 0;
 24911  01448C  6A20               	clrf	_controlTransferState,c	;volatile
 24912                           
 24913                           ; BSR set to: 1
 24914                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 24915  01448E  5125               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 24916  014490  E106               	bnz	i2l1731
 24917                           
 24918                           ; BSR set to: 1
 24919                           ;usb_device.c: 2559: {
 24920                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 24921                           
 24922                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24923                           
 24924                           ; BSR set to: 1
 24925                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24926  014492  EC0E  F093         	call	PL2	;call to abstracted procedure
 24927  014496  0E0C               	movlw	12
 24928                           
 24929                           ; BSR set to: 1
 24930                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24931  014498  EC73  F091         	call	PL34	;call to abstracted procedure
 24932                           
 24933                           ;usb_device.c: 2564: }
 24934  01449C  0C00               	retlw	0
 24935  01449E                     i2l1731:
 24936                           
 24937                           ; BSR set to: 1
 24938                           ;usb_device.c: 2565: else
 24939                           ;usb_device.c: 2566: {
 24940                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 24941  01449E  6B25               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 24942                           
 24943                           ; BSR set to: 1
 24944  0144A0  0012               	return		;funcret
 24945  0144A2                     __end_of_USBCtrlTrfOutHandler:
 24946                           	opt stack 0
 24947                           tblptru	equ	0xFF8
 24948                           tblptrh	equ	0xFF7
 24949                           tblptrl	equ	0xFF6
 24950                           tablat	equ	0xFF5
 24951                           prodh	equ	0xFF4
 24952                           prodl	equ	0xFF3
 24953                           intcon	equ	0xFF2
 24954                           intcon2	equ	0xFF1
 24955                           postinc0	equ	0xFEE
 24956                           wreg	equ	0xFE8
 24957                           indf1	equ	0xFE7
 24958                           postinc1	equ	0xFE6
 24959                           postdec1	equ	0xFE5
 24960                           fsr1h	equ	0xFE2
 24961                           fsr1l	equ	0xFE1
 24962                           indf2	equ	0xFDF
 24963                           postinc2	equ	0xFDE
 24964                           postdec2	equ	0xFDD
 24965                           plusw2	equ	0xFDB
 24966                           fsr2h	equ	0xFDA
 24967                           fsr2l	equ	0xFD9
 24968                           status	equ	0xFD8
 24969                           
 24970 ;; *************** function _USBCtrlTrfRxService *****************
 24971 ;; Defined at:
 24972 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 24973 ;; Parameters:    Size  Location     Type
 24974 ;;		None
 24975 ;; Auto vars:     Size  Location     Type
 24976 ;;  byteToRead      1    1[COMRAM] unsigned char 
 24977 ;;  i               1    0[COMRAM] unsigned char 
 24978 ;; Return value:  Size  Location     Type
 24979 ;;		None               void
 24980 ;; Registers used:
 24981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24982 ;; Tracked objects:
 24983 ;;		On entry : F/1
 24984 ;;		On exit  : F/1
 24985 ;;		Unchanged: 0/0
 24986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24991 ;;Total ram usage:        2 bytes
 24992 ;; Hardware stack levels used:    1
 24993 ;; Hardware stack levels required when called:    1
 24994 ;; This function calls:
 24995 ;;		_USBCtrlEPAllowStatusStage
 24996 ;; This function is called by:
 24997 ;;		_USBCtrlTrfOutHandler
 24998 ;; This function uses a non-reentrant model
 24999 ;;
 25000                           
 25001                           	psect	text123
 25002  012248                     __ptext123:
 25003                           	opt stack 0
 25004  012248                     _USBCtrlTrfRxService:
 25005                           	opt stack 15
 25006                           
 25007                           ; BSR set to: 1
 25008                           ;usb_device.c: 1854: uint8_t byteToRead;
 25009                           ;usb_device.c: 1855: uint8_t i;
 25010                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 25011                           
 25012                           ; BSR set to: 1
 25013                           ;incstack = 0
 25014  012248  EE20 F001          	lfsr	2,1
 25015  01224C  EC3A  F09A         	call	PL120	;call to abstracted procedure
 25016  012250  22DA               	addwfc	fsr2h,f,c
 25017  012252  50DF               	movf	indf2,w,c
 25018  012254  6E2C               	movwf	USBCtrlTrfRxService@byteToRead,c
 25019                           
 25020                           ; BSR set to: 1
 25021                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 25022  012256  502C               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25023  012258  5C05               	subwf	_outPipes+4,w,c	;volatile
 25024  01225A  0E00               	movlw	0
 25025  01225C  5806               	subwfb	_outPipes+5,w,c	;volatile
 25026  01225E  E202               	bc	i2l7038
 25027                           
 25028                           ; BSR set to: 1
 25029                           ;usb_device.c: 1866: {
 25030                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 25031  012260  C005  F02C         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 25032  012264                     i2l7038:
 25033                           
 25034                           ; BSR set to: 1
 25035                           ;usb_device.c: 1868: }
 25036                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 25037  012264  502C               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25038  012266  5E05               	subwf	_outPipes+4,f,c	;volatile
 25039  012268  0E00               	movlw	0
 25040  01226A  5A06               	subwfb	_outPipes+5,f,c	;volatile
 25041                           
 25042                           ; BSR set to: 1
 25043                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 25044  01226C  6A2B               	clrf	USBCtrlTrfRxService@i,c
 25045  01226E  D00F               	goto	i2l7048
 25046  012270                     i2l7042:
 25047                           
 25048                           ; BSR set to: 1
 25049                           ;usb_device.c: 1875: {
 25050                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 25051  012270  0E38               	movlw	56
 25052  012272  242B               	addwf	USBCtrlTrfRxService@i,w,c
 25053  012274  6ED9               	movwf	fsr2l,c
 25054  012276  6ADA               	clrf	fsr2h,c
 25055  012278  0E0D               	movlw	13
 25056  01227A  22DA               	addwfc	fsr2h,f,c
 25057  01227C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 25058  012280  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 25059  012284  CFDF FFE7          	movff	indf2,indf1
 25060                           
 25061                           ; BSR set to: 1
 25062  012288  4A01               	infsnz	_outPipes,f,c	;volatile
 25063  01228A  2A02               	incf	_outPipes+1,f,c	;volatile
 25064                           
 25065                           ; BSR set to: 1
 25066  01228C  2A2B               	incf	USBCtrlTrfRxService@i,f,c
 25067  01228E                     i2l7048:
 25068                           
 25069                           ; BSR set to: 1
 25070  01228E  502C               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25071  012290  5C2B               	subwf	USBCtrlTrfRxService@i,w,c
 25072  012292  E3EE               	bnc	i2l7042
 25073                           
 25074                           ; BSR set to: 1
 25075                           ;usb_device.c: 1877: }
 25076                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 25077  012294  5005               	movf	_outPipes+4,w,c	;volatile
 25078  012296  1006               	iorwf	_outPipes+5,w,c	;volatile
 25079  012298  E012               	bz	i2l7064
 25080                           
 25081                           ; BSR set to: 1
 25082                           ;usb_device.c: 1882: {
 25083                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 25084  01229A  EE20 F001          	lfsr	2,1
 25085  01229E  D819               	call	PL6	;call to abstracted procedure
 25086                           
 25087                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25088  0122A0  D81D               	call	PL10	;call to abstracted procedure
 25089  0122A2  D817               	call	PL6	;call to abstracted procedure
 25090  0122A4  D82D               	call	PL232	;call to abstracted procedure
 25091                           
 25092                           ; BSR set to: 1
 25093                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 25094  0122A6  EC04  F0A1         	call	PL110	;call to abstracted procedure
 25095  0122AA  BCDF               	btfsc	indf2,6,c
 25096  0122AC  D004               	goto	i2l7060
 25097                           
 25098                           ; BSR set to: 1
 25099                           ;usb_device.c: 1886: {
 25100                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25101  0122AE  D823               	call	PL40	;call to abstracted procedure
 25102  0122B0  0E48               	movlw	72
 25103                           
 25104                           ; BSR set to: 1
 25105                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25106  0122B2  D819               	call	PL34	;call to abstracted procedure
 25107                           
 25108                           ;usb_device.c: 1889: }
 25109  0122B4  0C00               	retlw	0
 25110  0122B6                     i2l7060:
 25111                           
 25112                           ; BSR set to: 1
 25113                           ;usb_device.c: 1890: else
 25114                           ;usb_device.c: 1891: {
 25115                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 25116  0122B6  D81F               	call	PL40	;call to abstracted procedure
 25117  0122B8  0E08               	movlw	8
 25118                           
 25119                           ; BSR set to: 1
 25120                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25121  0122BA  D815               	call	PL34	;call to abstracted procedure
 25122  0122BC  0C00               	retlw	0
 25123  0122BE                     i2l7064:
 25124                           
 25125                           ; BSR set to: 1
 25126                           ;usb_device.c: 1896: else
 25127                           ;usb_device.c: 1897: {
 25128                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 25129                           
 25130                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25131                           
 25132                           ; BSR set to: 1
 25133                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25134  0122BE  EC0E  F093         	call	PL2	;call to abstracted procedure
 25135  0122C2  0E04               	movlw	4
 25136                           
 25137                           ; BSR set to: 1
 25138                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25139  0122C4  D810               	call	PL34	;call to abstracted procedure
 25140                           
 25141                           ; BSR set to: 1
 25142                           ;usb_device.c: 1926: }
 25143                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 25144                           
 25145                           ; BSR set to: 1
 25146                           ;usb_device.c: 1915: {
 25147                           ;usb_device.c: 1921: outPipes[0].pFunc();
 25148  0122C6  9E04               	bcf	_outPipes+3,7,c	;volatile
 25149                           
 25150                           ; BSR set to: 1
 25151                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 25152  0122C8  501A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25153  0122CA  B4D8               	btfsc	status,2,c
 25154                           
 25155                           ; BSR set to: 1
 25156                           ;usb_device.c: 1942: {
 25157                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 25158  0122CC  ECFE  F099         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25159                           
 25160                           ; BSR set to: 1
 25161  0122D0  0012               	return		;funcret
 25162  0122D2                     __end_of_USBCtrlTrfRxService:
 25163                           	opt stack 0
 25164  0122D2                     PL6:
 25165                           	opt stack 14
 25166  0122D2  5018               	movf	_pBDTEntryEP0OutNext,w,c
 25167  0122D4  26D9               	addwf	fsr2l,f,c
 25168  0122D6  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 25169  0122D8  22DA               	addwfc	fsr2h,f,c
 25170  0122DA  0012               	return	
 25171  0122DC                     __end_ofPL6:
 25172                           	opt stack 0
 25173  0122DC                     PL10:
 25174                           	opt stack 14
 25175  0122DC  0E08               	movlw	8
 25176  0122DE  6EDF               	movwf	indf2,c
 25177  0122E0  EE20 F002          	lfsr	2,2
 25178  0122E4  0C08               	retlw	8
 25179  0122E6                     __end_ofPL10:
 25180                           	opt stack 0
 25181  0122E6                     PL34:
 25182                           	opt stack 14
 25183  0122E6  6EDF               	movwf	indf2,c
 25184  0122E8  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25185  0122EC  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25186  0122F0  0E00               	movlw	0
 25187  0122F2  8EDB               	bsf	plusw2,7,c
 25188  0122F4  0C00               	retlw	0
 25189  0122F6                     __end_ofPL34:
 25190                           	opt stack 0
 25191  0122F6                     PL40:
 25192                           	opt stack 11
 25193  0122F6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25194  0122FA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25195  0122FE  0012               	return	
 25196  012300                     __end_ofPL40:
 25197                           	opt stack 0
 25198  012300                     PL232:
 25199                           	opt stack 14
 25200  012300  0E38               	movlw	56
 25201  012302  6EDE               	movwf	postinc2,c
 25202  012304  0E0D               	movlw	13
 25203  012306  6EDD               	movwf	postdec2,c
 25204  012308  0C0D               	retlw	13
 25205  01230A                     __end_ofPL232:
 25206                           	opt stack 0
 25207                           tblptru	equ	0xFF8
 25208                           tblptrh	equ	0xFF7
 25209                           tblptrl	equ	0xFF6
 25210                           tablat	equ	0xFF5
 25211                           prodh	equ	0xFF4
 25212                           prodl	equ	0xFF3
 25213                           intcon	equ	0xFF2
 25214                           intcon2	equ	0xFF1
 25215                           postinc0	equ	0xFEE
 25216                           wreg	equ	0xFE8
 25217                           indf1	equ	0xFE7
 25218                           postinc1	equ	0xFE6
 25219                           postdec1	equ	0xFE5
 25220                           fsr1h	equ	0xFE2
 25221                           fsr1l	equ	0xFE1
 25222                           indf2	equ	0xFDF
 25223                           postinc2	equ	0xFDE
 25224                           postdec2	equ	0xFDD
 25225                           plusw2	equ	0xFDB
 25226                           fsr2h	equ	0xFDA
 25227                           fsr2l	equ	0xFD9
 25228                           status	equ	0xFD8
 25229                           
 25230 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 25231 ;; Defined at:
 25232 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 25233 ;; Parameters:    Size  Location     Type
 25234 ;;		None
 25235 ;; Auto vars:     Size  Location     Type
 25236 ;;		None
 25237 ;; Return value:  Size  Location     Type
 25238 ;;		None               void
 25239 ;; Registers used:
 25240 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25241 ;; Tracked objects:
 25242 ;;		On entry : 0/F
 25243 ;;		On exit  : F/1
 25244 ;;		Unchanged: 0/0
 25245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25250 ;;Total ram usage:        0 bytes
 25251 ;; Hardware stack levels used:    1
 25252 ;; This function calls:
 25253 ;;		Nothing
 25254 ;; This function is called by:
 25255 ;;		_USBDeviceTasks
 25256 ;;		_USBCtrlEPServiceComplete
 25257 ;;		_USBCtrlTrfRxService
 25258 ;; This function uses a non-reentrant model
 25259 ;;
 25260                           
 25261                           	psect	text124
 25262  0133FC                     __ptext124:
 25263                           	opt stack 0
 25264  0133FC                     _USBCtrlEPAllowStatusStage:
 25265                           	opt stack 15
 25266                           
 25267                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 25268                           
 25269                           ; BSR set to: 1
 25270                           ;incstack = 0
 25271  0133FC  0101               	movlb	1	; () banked
 25272  0133FE  512A               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 25273  013400  A4D8               	btfss	status,2,c
 25274  013402  0012               	return	
 25275                           
 25276                           ; BSR set to: 1
 25277                           ;usb_device.c: 1424: {
 25278                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 25279  013404  0E01               	movlw	1
 25280  013406  6F2A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25281                           
 25282                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 25283  013408  512B               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 25284  01340A  A4D8               	btfss	status,2,c
 25285  01340C  0012               	return	
 25286                           
 25287                           ; BSR set to: 1
 25288                           ;usb_device.c: 1427: {
 25289                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 25290  01340E  0E01               	movlw	1
 25291  013410  6F2B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25292                           
 25293                           ; BSR set to: 1
 25294                           ;usb_device.c: 1432: if(controlTransferState == 2)
 25295  013412  0E02               	movlw	2
 25296  013414  1820               	xorwf	_controlTransferState,w,c	;volatile
 25297  013416  E10D               	bnz	i2l6738
 25298                           
 25299                           ; BSR set to: 1
 25300                           ;usb_device.c: 1433: {
 25301                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 25302  013418  EE20 F001          	lfsr	2,1
 25303  01341C  ECCD  F091         	call	PL222	;call to abstracted procedure
 25304  013420  6ADF               	clrf	indf2,c
 25305                           
 25306                           ; BSR set to: 1
 25307                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25308  013422  EC9D  F098         	call	PL48	;call to abstracted procedure
 25309  013426  0E48               	movlw	72
 25310  013428  6EDF               	movwf	indf2,c
 25311                           
 25312                           ; BSR set to: 1
 25313                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25314  01342A  EC9D  F098         	call	PL48	;call to abstracted procedure
 25315                           
 25316                           ;usb_device.c: 1437: }
 25317  01342E  EFAE  F098         	goto	PL246	;call to abstracted procedure
 25318  013432                     i2l6738:
 25319                           
 25320                           ; BSR set to: 1
 25321                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 25322  013432  0420               	decf	_controlTransferState,w,c	;volatile
 25323  013434  A4D8               	btfss	status,2,c
 25324  013436  0012               	return	
 25325                           
 25326                           ; BSR set to: 1
 25327                           ;usb_device.c: 1439: {
 25328                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 25329  013438  6B25               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25330                           
 25331                           ; BSR set to: 1
 25332                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 25333  01343A  EE20 F001          	lfsr	2,1
 25334  01343E  D81A               	call	PL120	;call to abstracted procedure
 25335  013440  22DA               	addwfc	fsr2h,f,c
 25336                           
 25337                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25338  013442  EC6E  F091         	call	PL10	;call to abstracted procedure
 25339  013446  D816               	call	PL120	;call to abstracted procedure
 25340  013448  D80F               	call	PL36	;call to abstracted procedure
 25341                           
 25342                           ; BSR set to: 1
 25343                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 25344  01344A  EC04  F0A1         	call	PL110	;call to abstracted procedure
 25345  01344E  0E04               	movlw	4
 25346  013450  6EDF               	movwf	indf2,c
 25347                           
 25348                           ; BSR set to: 1
 25349                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25350  013452  EC04  F0A1         	call	PL110	;call to abstracted procedure
 25351  013456  0E00               	movlw	0
 25352  013458  8EDB               	bsf	plusw2,7,c
 25353                           
 25354                           ; BSR set to: 1
 25355                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 25356  01345A  0E01               	movlw	1
 25357  01345C  6F25               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25358                           
 25359                           ; BSR set to: 1
 25360                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 25361                           
 25362                           ; BSR set to: 1
 25363                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25364                           
 25365                           ; BSR set to: 1
 25366                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 25367  01345E  EC0E  F093         	call	PL2	;call to abstracted procedure
 25368  013462  0E80               	movlw	128
 25369  013464  6EDF               	movwf	indf2,c
 25370  013466  0C80               	retlw	128
 25371  013468                     __end_of_USBCtrlEPAllowStatusStage:
 25372                           	opt stack 0
 25373  013468                     PL36:
 25374                           	opt stack 11
 25375  013468  22DA               	addwfc	fsr2h,f,c
 25376  01346A  0E30               	movlw	48
 25377  01346C  6EDE               	movwf	postinc2,c
 25378  01346E  0E0D               	movlw	13
 25379  013470  6EDD               	movwf	postdec2,c
 25380  013472  0C0D               	retlw	13
 25381  013474                     __end_ofPL36:
 25382                           	opt stack 0
 25383  013474                     PL120:
 25384                           	opt stack 15
 25385  013474  5016               	movf	_pBDTEntryEP0OutCurrent,w,c
 25386  013476  26D9               	addwf	fsr2l,f,c
 25387  013478  5017               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25388  01347A  0012               	return	
 25389  01347C                     __end_ofPL120:
 25390                           	opt stack 0
 25391                           tblptru	equ	0xFF8
 25392                           tblptrh	equ	0xFF7
 25393                           tblptrl	equ	0xFF6
 25394                           tablat	equ	0xFF5
 25395                           prodh	equ	0xFF4
 25396                           prodl	equ	0xFF3
 25397                           intcon	equ	0xFF2
 25398                           intcon2	equ	0xFF1
 25399                           postinc0	equ	0xFEE
 25400                           wreg	equ	0xFE8
 25401                           indf1	equ	0xFE7
 25402                           postinc1	equ	0xFE6
 25403                           postdec1	equ	0xFE5
 25404                           fsr1h	equ	0xFE2
 25405                           fsr1l	equ	0xFE1
 25406                           indf2	equ	0xFDF
 25407                           postinc2	equ	0xFDE
 25408                           postdec2	equ	0xFDD
 25409                           plusw2	equ	0xFDB
 25410                           fsr2h	equ	0xFDA
 25411                           fsr2l	equ	0xFD9
 25412                           status	equ	0xFD8
 25413                           
 25414 ;; *************** function _USBCtrlTrfInHandler *****************
 25415 ;; Defined at:
 25416 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 25417 ;; Parameters:    Size  Location     Type
 25418 ;;		None
 25419 ;; Auto vars:     Size  Location     Type
 25420 ;;  lastDTS         1    1[COMRAM] unsigned char 
 25421 ;; Return value:  Size  Location     Type
 25422 ;;		None               void
 25423 ;; Registers used:
 25424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25425 ;; Tracked objects:
 25426 ;;		On entry : F/1
 25427 ;;		On exit  : 1/1
 25428 ;;		Unchanged: 0/0
 25429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25434 ;;Total ram usage:        1 bytes
 25435 ;; Hardware stack levels used:    1
 25436 ;; Hardware stack levels required when called:    1
 25437 ;; This function calls:
 25438 ;;		_USBCtrlTrfTxService
 25439 ;; This function is called by:
 25440 ;;		_USBCtrlEPService
 25441 ;; This function uses a non-reentrant model
 25442 ;;
 25443                           
 25444                           	psect	text125
 25445  0130D6                     __ptext125:
 25446                           	opt stack 0
 25447  0130D6                     _USBCtrlTrfInHandler:
 25448                           	opt stack 0
 25449                           
 25450                           ; BSR set to: 1
 25451                           ;usb_device.c: 2597: uint8_t lastDTS;
 25452                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 25453                           
 25454                           ; BSR set to: 1
 25455                           ;incstack = 0
 25456  0130D6  D831               	call	PL48	;call to abstracted procedure
 25457  0130D8  0E00               	movlw	0
 25458  0130DA  BCDF               	btfsc	indf2,6,c
 25459  0130DC  0E01               	movlw	1
 25460  0130DE  6E2C               	movwf	USBCtrlTrfInHandler@lastDTS,c
 25461                           
 25462                           ; BSR set to: 1
 25463                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25464  0130E0  0E04               	movlw	4
 25465  0130E2  1A10               	xorwf	_pBDTEntryIn,f,c
 25466                           
 25467                           ; BSR set to: 1
 25468                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 25469  0130E4  0E08               	movlw	8
 25470  0130E6  181B               	xorwf	_USBDeviceState,w,c	;volatile
 25471  0130E8  E10A               	bnz	i2l7490
 25472                           
 25473                           ; BSR set to: 1
 25474                           ;usb_device.c: 2608: {
 25475                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 25476  0130EA  010D               	movlb	13	; () banked
 25477  0130EC  5132               	movf	50,w,b	;volatile
 25478  0130EE  0B7F               	andlw	127
 25479  0130F0  010F               	movlb	15	; () banked
 25480  0130F2  6F38               	movwf	56,b	;volatile
 25481                           
 25482                           ; BSR set to: 15
 25483                           ;usb_device.c: 2610: if(UADDR != 0u)
 25484  0130F4  5138               	movf	56,w,b
 25485                           
 25486                           ; BSR set to: 15
 25487                           ;usb_device.c: 2611: {
 25488                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 25489  0130F6  0E10               	movlw	16
 25490  0130F8  B4D8               	btfsc	status,2,c
 25491                           
 25492                           ; BSR set to: 15
 25493                           ;usb_device.c: 2614: else
 25494                           ;usb_device.c: 2615: {
 25495                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 25496  0130FA  0E04               	movlw	4
 25497                           
 25498                           ;usb_device.c: 2613: }
 25499  0130FC  6E1B               	movwf	_USBDeviceState,c	;volatile
 25500  0130FE                     i2l7490:
 25501                           
 25502                           ;usb_device.c: 2617: }
 25503                           ;usb_device.c: 2618: }
 25504                           ;usb_device.c: 2621: if(controlTransferState == 1)
 25505  0130FE  0420               	decf	_controlTransferState,w,c	;volatile
 25506  013100  E118               	bnz	i2l1739
 25507                           
 25508                           ;usb_device.c: 2622: {
 25509                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 25510  013102  D826               	call	PL142	;call to abstracted procedure
 25511  013104  D81F               	call	PL134	;call to abstracted procedure
 25512                           
 25513                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 25514  013106  EC85  F091         	call	_USBCtrlTrfTxService	;wreg free
 25515                           
 25516                           ; BSR set to: 1
 25517                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 25518  01310A  0E02               	movlw	2
 25519  01310C  1824               	xorwf	_shortPacketStatus,w,c	;volatile
 25520  01310E  E105               	bnz	i2l7502
 25521                           
 25522                           ; BSR set to: 1
 25523                           ;usb_device.c: 2631: {
 25524                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 25525  013110  D814               	call	PL48	;call to abstracted procedure
 25526  013112  0E04               	movlw	4
 25527  013114  6EDF               	movwf	indf2,c
 25528                           
 25529                           ; BSR set to: 1
 25530                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25531  013116  D811               	call	PL48	;call to abstracted procedure
 25532                           
 25533                           ;usb_device.c: 2636: }
 25534  013118  D021               	goto	PL246	;call to abstracted procedure
 25535  01311A                     i2l7502:
 25536                           
 25537                           ; BSR set to: 1
 25538                           ;usb_device.c: 2637: else
 25539                           ;usb_device.c: 2638: {
 25540                           ;usb_device.c: 2639: if(lastDTS == 0)
 25541  01311A  502C               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 25542  01311C  E105               	bnz	i2l7508
 25543                           
 25544                           ; BSR set to: 1
 25545                           ;usb_device.c: 2640: {
 25546                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25547  01311E  D80D               	call	PL48	;call to abstracted procedure
 25548  013120  0E48               	movlw	72
 25549  013122  6EDF               	movwf	indf2,c
 25550                           
 25551                           ; BSR set to: 1
 25552                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25553  013124  D80A               	call	PL48	;call to abstracted procedure
 25554                           
 25555                           ;usb_device.c: 2643: }
 25556  013126  D01A               	goto	PL246	;call to abstracted procedure
 25557  013128                     i2l7508:
 25558                           
 25559                           ; BSR set to: 1
 25560                           ;usb_device.c: 2644: else
 25561                           ;usb_device.c: 2645: {
 25562                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 25563  013128  D808               	call	PL48	;call to abstracted procedure
 25564  01312A  0E08               	movlw	8
 25565  01312C  6EDF               	movwf	indf2,c
 25566                           
 25567                           ; BSR set to: 1
 25568                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25569  01312E  D805               	call	PL48	;call to abstracted procedure
 25570  013130  D015               	goto	PL246	;call to abstracted procedure
 25571  013132                     i2l1739:
 25572                           
 25573                           ;usb_device.c: 2651: else
 25574                           ;usb_device.c: 2652: {
 25575                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 25576  013132  BE04               	btfsc	_outPipes+3,7,c	;volatile
 25577                           
 25578                           ;usb_device.c: 2661: }
 25579                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 25580                           
 25581                           ;usb_device.c: 2659: {
 25582                           ;usb_device.c: 2660: outPipes[0].pFunc();
 25583  013134  9E04               	bcf	_outPipes+3,7,c	;volatile
 25584                           
 25585                           ;usb_device.c: 2663: }
 25586                           ;usb_device.c: 2665: controlTransferState = 0;
 25587  013136  6A20               	clrf	_controlTransferState,c	;volatile
 25588  013138  0012               	return		;funcret
 25589  01313A                     __end_of_USBCtrlTrfInHandler:
 25590                           	opt stack 0
 25591  01313A                     PL48:
 25592                           	opt stack 18
 25593  01313A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 25594  01313E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25595  013142  0012               	return	
 25596  013144                     __end_ofPL48:
 25597                           	opt stack 0
 25598  013144                     PL134:
 25599                           	opt stack 14
 25600  013144  22DA               	addwfc	fsr2h,f,c
 25601  013146  0E38               	movlw	56
 25602  013148  6EDE               	movwf	postinc2,c
 25603  01314A  0E0D               	movlw	13
 25604  01314C  6EDD               	movwf	postdec2,c
 25605  01314E  0C0D               	retlw	13
 25606  013150                     __end_ofPL134:
 25607                           	opt stack 0
 25608  013150                     PL142:
 25609                           	opt stack 14
 25610  013150  EE20 F002          	lfsr	2,2
 25611  013154  5010               	movf	_pBDTEntryIn,w,c
 25612  013156  26D9               	addwf	fsr2l,f,c
 25613  013158  5011               	movf	_pBDTEntryIn+1,w,c
 25614  01315A  0012               	return	
 25615  01315C                     __end_ofPL142:
 25616                           	opt stack 0
 25617  01315C                     PL246:
 25618                           	opt stack 14
 25619  01315C  0E00               	movlw	0
 25620  01315E  8EDB               	bsf	plusw2,7,c
 25621  013160  0C00               	retlw	0
 25622  013162                     __end_ofPL246:
 25623                           	opt stack 0
 25624                           tblptru	equ	0xFF8
 25625                           tblptrh	equ	0xFF7
 25626                           tblptrl	equ	0xFF6
 25627                           tablat	equ	0xFF5
 25628                           prodh	equ	0xFF4
 25629                           prodl	equ	0xFF3
 25630                           intcon	equ	0xFF2
 25631                           intcon2	equ	0xFF1
 25632                           postinc0	equ	0xFEE
 25633                           wreg	equ	0xFE8
 25634                           indf1	equ	0xFE7
 25635                           postinc1	equ	0xFE6
 25636                           postdec1	equ	0xFE5
 25637                           fsr1h	equ	0xFE2
 25638                           fsr1l	equ	0xFE1
 25639                           indf2	equ	0xFDF
 25640                           postinc2	equ	0xFDE
 25641                           postdec2	equ	0xFDD
 25642                           plusw2	equ	0xFDB
 25643                           fsr2h	equ	0xFDA
 25644                           fsr2l	equ	0xFD9
 25645                           status	equ	0xFD8
 25646                           
 25647 ;; *************** function _USBCtrlTrfTxService *****************
 25648 ;; Defined at:
 25649 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 25650 ;; Parameters:    Size  Location     Type
 25651 ;;		None
 25652 ;; Auto vars:     Size  Location     Type
 25653 ;;  byteToSend      1    0[COMRAM] unsigned char 
 25654 ;; Return value:  Size  Location     Type
 25655 ;;		None               void
 25656 ;; Registers used:
 25657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25658 ;; Tracked objects:
 25659 ;;		On entry : 1/D
 25660 ;;		On exit  : F/1
 25661 ;;		Unchanged: 0/0
 25662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25667 ;;Total ram usage:        1 bytes
 25668 ;; Hardware stack levels used:    1
 25669 ;; This function calls:
 25670 ;;		Nothing
 25671 ;; This function is called by:
 25672 ;;		_USBCtrlEPAllowDataStage
 25673 ;;		_USBCtrlTrfInHandler
 25674 ;; This function uses a non-reentrant model
 25675 ;;
 25676                           
 25677                           	psect	text126
 25678  01230A                     __ptext126:
 25679                           	opt stack 0
 25680  01230A                     _USBCtrlTrfTxService:
 25681                           	opt stack 14
 25682                           
 25683                           ;usb_device.c: 1773: uint8_t byteToSend;
 25684                           ;usb_device.c: 1777: byteToSend = 8;
 25685                           
 25686                           ;incstack = 0
 25687  01230A  0E08               	movlw	8
 25688  01230C  6E2B               	movwf	USBCtrlTrfTxService@byteToSend,c
 25689                           
 25690                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 25691  01230E  500F               	movf	_inPipes+5,w,c	;volatile
 25692  012310  E10D               	bnz	i2l6430
 25693  012312  0E08               	movlw	8
 25694  012314  5C0E               	subwf	_inPipes+4,w,c	;volatile
 25695  012316  E20A               	bc	i2l6430
 25696                           
 25697                           ;usb_device.c: 1779: {
 25698                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 25699  012318  C00E  F02B         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 25700                           
 25701                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 25702  01231C  5024               	movf	_shortPacketStatus,w,c	;volatile
 25703  01231E  E102               	bnz	i2l6426
 25704                           
 25705                           ;usb_device.c: 1788: {
 25706                           ;usb_device.c: 1789: shortPacketStatus = 1;
 25707  012320  0E01               	movlw	1
 25708  012322  D003               	goto	L24
 25709  012324                     i2l6426:
 25710                           
 25711                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 25712  012324  0424               	decf	_shortPacketStatus,w,c	;volatile
 25713  012326  E102               	bnz	i2l6430
 25714                           
 25715                           ;usb_device.c: 1792: {
 25716                           ;usb_device.c: 1793: shortPacketStatus = 2;
 25717  012328  0E02               	movlw	2
 25718  01232A                     L24:
 25719  01232A  6E24               	movwf	_shortPacketStatus,c	;volatile
 25720  01232C                     i2l6430:
 25721                           
 25722                           ;usb_device.c: 1794: }
 25723                           ;usb_device.c: 1795: }
 25724                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 25725  01232C  502B               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25726  01232E  5E0E               	subwf	_inPipes+4,f,c	;volatile
 25727  012330  0E00               	movlw	0
 25728  012332  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 25729                           
 25730                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 25731  012334  EE20 F001          	lfsr	2,1
 25732  012338  D830               	call	PL222	;call to abstracted procedure
 25733  01233A  C02B  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 25734                           
 25735                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 25736  01233E  0E38               	movlw	56
 25737  012340  0101               	movlb	1	; () banked
 25738  012342  6F1D               	movwf	_pDst& (0+255),b
 25739  012344  0E0D               	movlw	13
 25740  012346  6F1E               	movwf	(_pDst+1)& (0+255),b
 25741                           
 25742                           ; BSR set to: 1
 25743                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 25744  012348  B00D               	btfsc	_inPipes+3,0,c	;volatile
 25745  01234A  D01A               	goto	i2l6458
 25746  01234C  D00B               	goto	i2l6448
 25747  01234E                     i2l6440:
 25748                           
 25749                           ; BSR set to: 1
 25750                           ;usb_device.c: 1812: {
 25751                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 25752  01234E  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 25753  012352  D819               	call	PL170	;call to abstracted procedure
 25754  012354  64F7               	cpfsgt	tblptrh,c
 25755  012356  D003               	bra	i2u524_47
 25756  012358  0008               	tblrd		*
 25757  01235A  50F5               	movf	tablat,w,c
 25758  01235C  D002               	bra	i2u524_40
 25759  01235E                     i2u524_47:
 25760  01235E  ECD4  F08F         	call	PL24	;call to abstracted procedure
 25761  012362                     i2u524_40:
 25762                           
 25763                           ; BSR set to: 1
 25764                           ;usb_device.c: 1814: byteToSend--;
 25765  012362  D820               	call	PL234	;call to abstracted procedure
 25766  012364                     i2l6448:
 25767                           
 25768                           ; BSR set to: 1
 25769  012364  502B               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25770  012366  E1F3               	bnz	i2l6440
 25771  012368  0012               	return	
 25772  01236A                     i2l6450:
 25773                           
 25774                           ; BSR set to: 1
 25775                           ;usb_device.c: 1820: {
 25776                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 25777  01236A  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 25778  01236E  D80B               	call	PL170	;call to abstracted procedure
 25779  012370  64F7               	cpfsgt	tblptrh,c
 25780  012372  D003               	bra	i2u526_47
 25781  012374  0008               	tblrd		*
 25782  012376  50F5               	movf	tablat,w,c
 25783  012378  D002               	bra	i2u526_40
 25784  01237A                     i2u526_47:
 25785  01237A  ECD4  F08F         	call	PL24	;call to abstracted procedure
 25786  01237E                     i2u526_40:
 25787                           
 25788                           ; BSR set to: 1
 25789                           ;usb_device.c: 1822: byteToSend--;
 25790  01237E  D812               	call	PL234	;call to abstracted procedure
 25791  012380                     i2l6458:
 25792                           
 25793                           ; BSR set to: 1
 25794  012380  502B               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25795  012382  E1F3               	bnz	i2l6450
 25796                           
 25797                           ; BSR set to: 1
 25798  012384  0012               	return		;funcret
 25799  012386                     __end_of_USBCtrlTrfTxService:
 25800                           	opt stack 0
 25801  012386                     PL170:
 25802                           	opt stack 14
 25803  012386  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25804  01238A  0E00               	movlw	low (__mediumconst shr (0+16))
 25805  01238C  6EF8               	movwf	tblptru,c
 25806  01238E  C11D  FFD9         	movff	_pDst,fsr2l
 25807  012392  C11E  FFDA         	movff	_pDst+1,fsr2h
 25808  012396  0E0E               	movlw	(high __ramtop+-1)
 25809  012398  0012               	return	
 25810  01239A                     __end_ofPL170:
 25811                           	opt stack 0
 25812  01239A                     PL222:
 25813                           	opt stack 15
 25814  01239A  5010               	movf	_pBDTEntryIn,w,c
 25815  01239C  26D9               	addwf	fsr2l,f,c
 25816  01239E  5011               	movf	_pBDTEntryIn+1,w,c
 25817  0123A0  22DA               	addwfc	fsr2h,f,c
 25818  0123A2  0012               	return	
 25819  0123A4                     __end_ofPL222:
 25820                           	opt stack 0
 25821  0123A4                     PL234:
 25822                           	opt stack 14
 25823  0123A4  6EDF               	movwf	indf2,c
 25824  0123A6  4A0A               	infsnz	_inPipes,f,c	;volatile
 25825  0123A8  2A0B               	incf	_inPipes+1,f,c	;volatile
 25826  0123AA  0101               	movlb	1	; () banked
 25827  0123AC  4B1D               	infsnz	_pDst& (0+255),f,b
 25828  0123AE  2B1E               	incf	(_pDst+1)& (0+255),f,b
 25829  0123B0  062B               	decf	USBCtrlTrfTxService@byteToSend,f,c
 25830  0123B2  0012               	return	
 25831  0123B4                     __end_ofPL234:
 25832                           	opt stack 0
 25833                           tblptru	equ	0xFF8
 25834                           tblptrh	equ	0xFF7
 25835                           tblptrl	equ	0xFF6
 25836                           tablat	equ	0xFF5
 25837                           prodh	equ	0xFF4
 25838                           prodl	equ	0xFF3
 25839                           intcon	equ	0xFF2
 25840                           intcon2	equ	0xFF1
 25841                           postinc0	equ	0xFEE
 25842                           wreg	equ	0xFE8
 25843                           indf1	equ	0xFE7
 25844                           postinc1	equ	0xFE6
 25845                           postdec1	equ	0xFE5
 25846                           fsr1h	equ	0xFE2
 25847                           fsr1l	equ	0xFE1
 25848                           indf2	equ	0xFDF
 25849                           postinc2	equ	0xFDE
 25850                           postdec2	equ	0xFDD
 25851                           plusw2	equ	0xFDB
 25852                           fsr2h	equ	0xFDA
 25853                           fsr2l	equ	0xFD9
 25854                           status	equ	0xFD8
 25855                           
 25856 ;; *************** function _LED_indicator *****************
 25857 ;; Defined at:
 25858 ;;		line 22 in file "ChargeStation_task.c"
 25859 ;; Parameters:    Size  Location     Type
 25860 ;;		None
 25861 ;; Auto vars:     Size  Location     Type
 25862 ;;  i               1   10[COMRAM] unsigned char 
 25863 ;; Return value:  Size  Location     Type
 25864 ;;		None               void
 25865 ;; Registers used:
 25866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25867 ;; Tracked objects:
 25868 ;;		On entry : F/1
 25869 ;;		On exit  : 0/0
 25870 ;;		Unchanged: 0/0
 25871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25874 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25875 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25876 ;;Total ram usage:        4 bytes
 25877 ;; Hardware stack levels used:    1
 25878 ;; Hardware stack levels required when called:    1
 25879 ;; This function calls:
 25880 ;;		i2_LED_output
 25881 ;;		i2___lwdiv
 25882 ;; This function is called by:
 25883 ;;		_ISR
 25884 ;; This function uses a non-reentrant model
 25885 ;;
 25886                           
 25887                           	psect	text127
 25888  0123B4                     __ptext127:
 25889                           	opt stack 0
 25890  0123B4                     _LED_indicator:
 25891                           	opt stack 19
 25892                           
 25893                           ; BSR set to: 1
 25894                           ;ChargeStation_task.c: 23: uint8_t i;
 25895                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 25896                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 25897                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 25898                           
 25899                           ; BSR set to: 1
 25900                           ;incstack = 0
 25901  0123B4  6A35               	clrf	LED_indicator@i,c
 25902  0123B6                     i2l9022:
 25903                           
 25904                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 25905  0123B6  5035               	movf	LED_indicator@i,w,c
 25906  0123B8  ECEE  F08C         	call	PL4	;call to abstracted procedure
 25907  0123BC  0101               	movlb	1	; () banked
 25908  0123BE  A2DF               	btfss	indf2,1,c
 25909  0123C0  D03C               	goto	i2l9042
 25910                           
 25911                           ; BSR set to: 1
 25912                           ;ChargeStation_task.c: 29: cnt[i]++;
 25913  0123C2  D840               	call	PL164	;call to abstracted procedure
 25914  0123C4  2ADF               	incf	indf2,f,c
 25915                           
 25916                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 25917  0123C6  D83E               	call	PL164	;call to abstracted procedure
 25918  0123C8  A0DF               	btfss	indf2,0,c
 25919  0123CA  D005               	goto	i2l9028
 25920                           
 25921                           ; BSR set to: 1
 25922                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 25923  0123CC  6A2B               	clrf	i2LED_output@value,c
 25924  0123CE  5035               	movf	LED_indicator@i,w,c
 25925  0123D0  EC15  F09F         	call	i2_LED_output
 25926                           
 25927                           ;ChargeStation_task.c: 32: } else {
 25928  0123D4  D032               	goto	i2l9042
 25929  0123D6                     i2l9028:
 25930                           
 25931                           ; BSR set to: 1
 25932                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 25933  0123D6  D836               	call	PL164	;call to abstracted procedure
 25934  0123D8  50DF               	movf	indf2,w,c
 25935  0123DA  6E32               	movwf	??_LED_indicator& (0+255),c
 25936  0123DC  90D8               	bcf	status,0,c
 25937  0123DE  3032               	rrcf	??_LED_indicator,w,c
 25938  0123E0  6E33               	movwf	(??_LED_indicator+1)& (0+255),c
 25939  0123E2  6A34               	clrf	(??_LED_indicator+2)& (0+255),c
 25940  0123E4  5035               	movf	LED_indicator@i,w,c
 25941  0123E6  ECE9  F082         	call	PL18	;call to abstracted procedure
 25942  0123EA  CFDE F02B          	movff	postinc2,i2___lwdiv@dividend
 25943  0123EE  CFDD F02C          	movff	postdec2,i2___lwdiv@dividend+1
 25944  0123F2  6A2E               	clrf	i2___lwdiv@divisor+1,c
 25945  0123F4  0E64               	movlw	100
 25946  0123F6  6E2D               	movwf	i2___lwdiv@divisor,c
 25947  0123F8  ECF0  F09E         	call	i2___lwdiv	;wreg free
 25948  0123FC  5033               	movf	??_LED_indicator+1,w,c
 25949  0123FE  5C2B               	subwf	?i2___lwdiv,w,c
 25950  012400  5034               	movf	??_LED_indicator+2,w,c
 25951  012402  582C               	subwfb	?i2___lwdiv+1,w,c
 25952  012404  E307               	bnc	i2l9034
 25953                           
 25954                           ; BSR set to: 1
 25955                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 25956  012406  0E01               	movlw	1
 25957  012408  6E2B               	movwf	i2LED_output@value,c
 25958  01240A  5035               	movf	LED_indicator@i,w,c
 25959  01240C  EC15  F09F         	call	i2_LED_output
 25960                           
 25961                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 25962  012410  D820               	call	PL198	;call to abstracted procedure
 25963  012412  D011               	goto	L25
 25964  012414                     i2l9034:
 25965                           
 25966                           ; BSR set to: 1
 25967                           ;ChargeStation_task.c: 37: cntf[i]++;
 25968  012414  D81E               	call	PL198	;call to abstracted procedure
 25969  012416  22DA               	addwfc	fsr2h,f,c
 25970  012418  2ADF               	incf	indf2,f,c
 25971                           
 25972                           ; BSR set to: 1
 25973                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 25974  01241A  6A2B               	clrf	i2LED_output@value,c
 25975  01241C  5035               	movf	LED_indicator@i,w,c
 25976  01241E  EC15  F09F         	call	i2_LED_output
 25977                           
 25978                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 25979  012422  D817               	call	PL198	;call to abstracted procedure
 25980  012424  22DA               	addwfc	fsr2h,f,c
 25981  012426  0E01               	movlw	1
 25982  012428  64DF               	cpfsgt	indf2,c
 25983  01242A  D007               	goto	i2l9042
 25984                           
 25985                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 25986  01242C  0E06               	movlw	low LED_indicator@cnt
 25987  01242E  2435               	addwf	LED_indicator@i,w,c
 25988  012430  6ED9               	movwf	fsr2l,c
 25989  012432  6ADA               	clrf	fsr2h,c
 25990  012434  0E01               	movlw	high LED_indicator@cnt
 25991  012436                     L25:
 25992  012436  22DA               	addwfc	fsr2h,f,c
 25993  012438  6ADF               	clrf	indf2,c
 25994  01243A                     i2l9042:
 25995  01243A  2A35               	incf	LED_indicator@i,f,c
 25996  01243C  0E02               	movlw	2
 25997  01243E  6435               	cpfsgt	LED_indicator@i,c
 25998  012440  D7BA               	goto	i2l9022
 25999  012442  0C02               	retlw	2
 26000  012444                     __end_of_LED_indicator:
 26001                           	opt stack 0
 26002  012444                     PL164:
 26003                           	opt stack 19
 26004  012444  0E06               	movlw	low LED_indicator@cnt
 26005  012446  2435               	addwf	LED_indicator@i,w,c
 26006  012448  6ED9               	movwf	fsr2l,c
 26007  01244A  6ADA               	clrf	fsr2h,c
 26008  01244C  0E01               	movlw	high LED_indicator@cnt
 26009  01244E  22DA               	addwfc	fsr2h,f,c
 26010  012450  0012               	return	
 26011  012452                     __end_ofPL164:
 26012                           	opt stack 0
 26013  012452                     PL198:
 26014                           	opt stack 19
 26015  012452  0E00               	movlw	low LED_indicator@cntf
 26016  012454  2435               	addwf	LED_indicator@i,w,c
 26017  012456  6ED9               	movwf	fsr2l,c
 26018  012458  6ADA               	clrf	fsr2h,c
 26019  01245A  0E02               	movlw	high LED_indicator@cntf
 26020  01245C  0012               	return	
 26021  01245E                     __end_ofPL198:
 26022                           	opt stack 0
 26023                           tblptru	equ	0xFF8
 26024                           tblptrh	equ	0xFF7
 26025                           tblptrl	equ	0xFF6
 26026                           tablat	equ	0xFF5
 26027                           prodh	equ	0xFF4
 26028                           prodl	equ	0xFF3
 26029                           intcon	equ	0xFF2
 26030                           intcon2	equ	0xFF1
 26031                           postinc0	equ	0xFEE
 26032                           wreg	equ	0xFE8
 26033                           indf1	equ	0xFE7
 26034                           postinc1	equ	0xFE6
 26035                           postdec1	equ	0xFE5
 26036                           fsr1h	equ	0xFE2
 26037                           fsr1l	equ	0xFE1
 26038                           indf2	equ	0xFDF
 26039                           postinc2	equ	0xFDE
 26040                           postdec2	equ	0xFDD
 26041                           plusw2	equ	0xFDB
 26042                           fsr2h	equ	0xFDA
 26043                           fsr2l	equ	0xFD9
 26044                           status	equ	0xFD8
 26045                           
 26046 ;; *************** function i2___lwdiv *****************
 26047 ;; Defined at:
 26048 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 26049 ;; Parameters:    Size  Location     Type
 26050 ;;  dividend        2    0[COMRAM] unsigned int 
 26051 ;;  divisor         2    2[COMRAM] unsigned int 
 26052 ;; Auto vars:     Size  Location     Type
 26053 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 26054 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 26055 ;; Return value:  Size  Location     Type
 26056 ;;                  2    0[COMRAM] unsigned int 
 26057 ;; Registers used:
 26058 ;;		wreg, status,2, status,0
 26059 ;; Tracked objects:
 26060 ;;		On entry : F/1
 26061 ;;		On exit  : F/1
 26062 ;;		Unchanged: F/0
 26063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26065 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26067 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26068 ;;Total ram usage:        7 bytes
 26069 ;; Hardware stack levels used:    1
 26070 ;; This function calls:
 26071 ;;		Nothing
 26072 ;; This function is called by:
 26073 ;;		_LED_indicator
 26074 ;; This function uses a non-reentrant model
 26075 ;;
 26076                           
 26077                           	psect	text128
 26078  013DE0                     __ptext128:
 26079                           	opt stack 0
 26080  013DE0                     i2___lwdiv:
 26081                           	opt stack 19
 26082                           
 26083                           ; BSR set to: 1
 26084                           
 26085                           ;incstack = 0
 26086  013DE0  6A2F               	clrf	i2___lwdiv@quotient,c
 26087  013DE2  6A30               	clrf	i2___lwdiv@quotient+1,c
 26088                           
 26089                           ; BSR set to: 1
 26090  013DE4  502D               	movf	i2___lwdiv@divisor,w,c
 26091  013DE6  102E               	iorwf	i2___lwdiv@divisor+1,w,c
 26092  013DE8  E01B               	bz	i2l2406
 26093                           
 26094                           ; BSR set to: 1
 26095  013DEA  0E01               	movlw	1
 26096  013DEC  6E31               	movwf	i2___lwdiv@counter,c
 26097  013DEE  D004               	goto	i2l9002
 26098  013DF0                     i2l9000:
 26099                           
 26100                           ; BSR set to: 1
 26101  013DF0  90D8               	bcf	status,0,c
 26102  013DF2  362D               	rlcf	i2___lwdiv@divisor,f,c
 26103  013DF4  362E               	rlcf	i2___lwdiv@divisor+1,f,c
 26104  013DF6  2A31               	incf	i2___lwdiv@counter,f,c
 26105  013DF8                     i2l9002:
 26106                           
 26107                           ; BSR set to: 1
 26108  013DF8  AE2E               	btfss	i2___lwdiv@divisor+1,7,c
 26109  013DFA  D7FA               	goto	i2l9000
 26110  013DFC                     i2l9004:
 26111                           
 26112                           ; BSR set to: 1
 26113  013DFC  90D8               	bcf	status,0,c
 26114  013DFE  362F               	rlcf	i2___lwdiv@quotient,f,c
 26115  013E00  3630               	rlcf	i2___lwdiv@quotient+1,f,c
 26116                           
 26117                           ; BSR set to: 1
 26118  013E02  502D               	movf	i2___lwdiv@divisor,w,c
 26119  013E04  5C2B               	subwf	i2___lwdiv@dividend,w,c
 26120  013E06  502E               	movf	i2___lwdiv@divisor+1,w,c
 26121  013E08  582C               	subwfb	i2___lwdiv@dividend+1,w,c
 26122  013E0A  E305               	bnc	i2l9012
 26123                           
 26124                           ; BSR set to: 1
 26125  013E0C  502D               	movf	i2___lwdiv@divisor,w,c
 26126  013E0E  5E2B               	subwf	i2___lwdiv@dividend,f,c
 26127  013E10  502E               	movf	i2___lwdiv@divisor+1,w,c
 26128  013E12  5A2C               	subwfb	i2___lwdiv@dividend+1,f,c
 26129                           
 26130                           ; BSR set to: 1
 26131  013E14  802F               	bsf	i2___lwdiv@quotient,0,c
 26132  013E16                     i2l9012:
 26133                           
 26134                           ; BSR set to: 1
 26135  013E16  90D8               	bcf	status,0,c
 26136  013E18  322E               	rrcf	i2___lwdiv@divisor+1,f,c
 26137  013E1A  322D               	rrcf	i2___lwdiv@divisor,f,c
 26138                           
 26139                           ; BSR set to: 1
 26140  013E1C  2E31               	decfsz	i2___lwdiv@counter,f,c
 26141  013E1E  D7EE               	goto	i2l9004
 26142  013E20                     i2l2406:
 26143                           
 26144                           ; BSR set to: 1
 26145  013E20  C02F  F02B         	movff	i2___lwdiv@quotient,?i2___lwdiv
 26146  013E24  C030  F02C         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 26147                           
 26148                           ; BSR set to: 1
 26149  013E28  0012               	return		;funcret
 26150  013E2A                     __end_ofi2___lwdiv:
 26151                           	opt stack 0
 26152                           tblptru	equ	0xFF8
 26153                           tblptrh	equ	0xFF7
 26154                           tblptrl	equ	0xFF6
 26155                           tablat	equ	0xFF5
 26156                           prodh	equ	0xFF4
 26157                           prodl	equ	0xFF3
 26158                           intcon	equ	0xFF2
 26159                           intcon2	equ	0xFF1
 26160                           postinc0	equ	0xFEE
 26161                           wreg	equ	0xFE8
 26162                           indf1	equ	0xFE7
 26163                           postinc1	equ	0xFE6
 26164                           postdec1	equ	0xFE5
 26165                           fsr1h	equ	0xFE2
 26166                           fsr1l	equ	0xFE1
 26167                           indf2	equ	0xFDF
 26168                           postinc2	equ	0xFDE
 26169                           postdec2	equ	0xFDD
 26170                           plusw2	equ	0xFDB
 26171                           fsr2h	equ	0xFDA
 26172                           fsr2l	equ	0xFD9
 26173                           status	equ	0xFD8
 26174                           
 26175 ;; *************** function i2_LED_output *****************
 26176 ;; Defined at:
 26177 ;;		line 36 in file "io.c"
 26178 ;; Parameters:    Size  Location     Type
 26179 ;;  b               1    wreg     unsigned char 
 26180 ;;  value           1    0[COMRAM] unsigned char 
 26181 ;; Auto vars:     Size  Location     Type
 26182 ;;  b               1    1[COMRAM] unsigned char 
 26183 ;; Return value:  Size  Location     Type
 26184 ;;		None               void
 26185 ;; Registers used:
 26186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26187 ;; Tracked objects:
 26188 ;;		On entry : F/1
 26189 ;;		On exit  : 0/0
 26190 ;;		Unchanged: 0/0
 26191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26196 ;;Total ram usage:        2 bytes
 26197 ;; Hardware stack levels used:    1
 26198 ;; This function calls:
 26199 ;;		Nothing
 26200 ;; This function is called by:
 26201 ;;		_LED_indicator
 26202 ;; This function uses a non-reentrant model
 26203 ;;
 26204                           
 26205                           	psect	text129
 26206  013E2A                     __ptext129:
 26207                           	opt stack 0
 26208  013E2A                     i2_LED_output:
 26209                           	opt stack 19
 26210                           
 26211                           ; BSR set to: 1
 26212                           ;incstack = 0
 26213                           ;i2LED_output@b stored from wreg
 26214  013E2A  6E2C               	movwf	i2LED_output@b,c
 26215                           
 26216                           ;io.c: 37: port[b].flag.led_flag = value;
 26217  013E2C  502C               	movf	i2LED_output@b,w,c
 26218  013E2E  ECEE  F08C         	call	PL4	;call to abstracted procedure
 26219  013E32  B02B               	btfsc	i2LED_output@value,0,c
 26220  013E34  D003               	bra	i2u894_45
 26221  013E36  0101               	movlb	1	; () banked
 26222  013E38  96DF               	bcf	indf2,3,c
 26223  013E3A  D002               	bra	i2u894_46
 26224  013E3C                     i2u894_45:
 26225  013E3C  0101               	movlb	1	; () banked
 26226  013E3E  86DF               	bsf	indf2,3,c
 26227  013E40                     i2u894_46:
 26228                           
 26229                           ;io.c: 38: switch (b) {
 26230  013E40  D012               	goto	i2l8992
 26231  013E42                     i2l292:
 26232                           
 26233                           ; BSR set to: 1
 26234                           ;io.c: 40: LATB7 = value;
 26235  013E42  A02B               	btfss	i2LED_output@value,0,c
 26236  013E44  D002               	goto	i2u895_40
 26237  013E46  8E8A               	bsf	3978,7,c	;volatile
 26238  013E48  0012               	return	
 26239  013E4A                     i2u895_40:
 26240  013E4A  9E8A               	bcf	3978,7,c	;volatile
 26241                           
 26242                           ;io.c: 41: break;
 26243  013E4C  0012               	return	
 26244  013E4E                     i2l294:
 26245                           
 26246                           ; BSR set to: 1
 26247                           ;io.c: 43: LATB6 = value;
 26248  013E4E  A02B               	btfss	i2LED_output@value,0,c
 26249  013E50  D002               	goto	i2u897_40
 26250  013E52  8C8A               	bsf	3978,6,c	;volatile
 26251  013E54  0012               	return	
 26252  013E56                     i2u897_40:
 26253  013E56  9C8A               	bcf	3978,6,c	;volatile
 26254                           
 26255                           ;io.c: 44: break;
 26256  013E58  0012               	return	
 26257  013E5A                     i2l295:
 26258                           
 26259                           ; BSR set to: 1
 26260                           ;io.c: 46: LATC2 = value;
 26261  013E5A  A02B               	btfss	i2LED_output@value,0,c
 26262  013E5C  D002               	goto	i2u899_40
 26263  013E5E  848B               	bsf	3979,2,c	;volatile
 26264  013E60  0012               	return	
 26265  013E62                     i2u899_40:
 26266  013E62  948B               	bcf	3979,2,c	;volatile
 26267                           
 26268                           ;io.c: 47: break;
 26269  013E64  0012               	return	
 26270  013E66                     i2l8992:
 26271                           
 26272                           ; BSR set to: 1
 26273  013E66  502C               	movf	i2LED_output@b,w,c
 26274                           
 26275                           ; Switch size 1, requested type "space"
 26276                           ; Number of cases is 3, Range of values is 0 to 2
 26277                           ; switch strategies available:
 26278                           ; Name         Instructions Cycles
 26279                           ; simple_byte           10     6 (average)
 26280                           ;	Chosen strategy is simple_byte
 26281  013E68  E0EC               	bz	i2l292
 26282  013E6A  0A01               	xorlw	1	; case 1
 26283  013E6C  E0F0               	bz	i2l294
 26284  013E6E  0A03               	xorlw	3	; case 2
 26285  013E70  E0F4               	bz	i2l295
 26286  013E72  0012               	return		;funcret
 26287  013E74                     __end_ofi2_LED_output:
 26288                           	opt stack 0
 26289                           tblptru	equ	0xFF8
 26290                           tblptrh	equ	0xFF7
 26291                           tblptrl	equ	0xFF6
 26292                           tablat	equ	0xFF5
 26293                           prodh	equ	0xFF4
 26294                           prodl	equ	0xFF3
 26295                           intcon	equ	0xFF2
 26296                           intcon2	equ	0xFF1
 26297                           postinc0	equ	0xFEE
 26298                           wreg	equ	0xFE8
 26299                           indf1	equ	0xFE7
 26300                           postinc1	equ	0xFE6
 26301                           postdec1	equ	0xFE5
 26302                           fsr1h	equ	0xFE2
 26303                           fsr1l	equ	0xFE1
 26304                           indf2	equ	0xFDF
 26305                           postinc2	equ	0xFDE
 26306                           postdec2	equ	0xFDD
 26307                           plusw2	equ	0xFDB
 26308                           fsr2h	equ	0xFDA
 26309                           fsr2l	equ	0xFD9
 26310                           status	equ	0xFD8
 26311                           tblptru	equ	0xFF8
 26312                           tblptrh	equ	0xFF7
 26313                           tblptrl	equ	0xFF6
 26314                           tablat	equ	0xFF5
 26315                           prodh	equ	0xFF4
 26316                           prodl	equ	0xFF3
 26317                           intcon	equ	0xFF2
 26318                           intcon2	equ	0xFF1
 26319                           postinc0	equ	0xFEE
 26320                           wreg	equ	0xFE8
 26321                           indf1	equ	0xFE7
 26322                           postinc1	equ	0xFE6
 26323                           postdec1	equ	0xFE5
 26324                           fsr1h	equ	0xFE2
 26325                           fsr1l	equ	0xFE1
 26326                           indf2	equ	0xFDF
 26327                           postinc2	equ	0xFDE
 26328                           postdec2	equ	0xFDD
 26329                           plusw2	equ	0xFDB
 26330                           fsr2h	equ	0xFDA
 26331                           fsr2l	equ	0xFD9
 26332                           status	equ	0xFD8
 26333                           
 26334                           	psect	rparam
 26335  0000                     tblptru	equ	0xFF8
 26336                           tblptrh	equ	0xFF7
 26337                           tblptrl	equ	0xFF6
 26338                           tablat	equ	0xFF5
 26339                           prodh	equ	0xFF4
 26340                           prodl	equ	0xFF3
 26341                           intcon	equ	0xFF2
 26342                           intcon2	equ	0xFF1
 26343                           postinc0	equ	0xFEE
 26344                           wreg	equ	0xFE8
 26345                           indf1	equ	0xFE7
 26346                           postinc1	equ	0xFE6
 26347                           postdec1	equ	0xFE5
 26348                           fsr1h	equ	0xFE2
 26349                           fsr1l	equ	0xFE1
 26350                           indf2	equ	0xFDF
 26351                           postinc2	equ	0xFDE
 26352                           postdec2	equ	0xFDD
 26353                           plusw2	equ	0xFDB
 26354                           fsr2h	equ	0xFDA
 26355                           fsr2l	equ	0xFD9
 26356                           status	equ	0xFD8
 26357                           
 26358                           	psect	temp
 26359  000054                     btemp:
 26360                           	opt stack 0
 26361  000054                     	ds	1
 26362  0000                     int$flags	set	btemp
 26363                           tblptru	equ	0xFF8
 26364                           tblptrh	equ	0xFF7
 26365                           tblptrl	equ	0xFF6
 26366                           tablat	equ	0xFF5
 26367                           prodh	equ	0xFF4
 26368                           prodl	equ	0xFF3
 26369                           intcon	equ	0xFF2
 26370                           intcon2	equ	0xFF1
 26371                           postinc0	equ	0xFEE
 26372                           wreg	equ	0xFE8
 26373                           indf1	equ	0xFE7
 26374                           postinc1	equ	0xFE6
 26375                           postdec1	equ	0xFE5
 26376                           fsr1h	equ	0xFE2
 26377                           fsr1l	equ	0xFE1
 26378                           indf2	equ	0xFDF
 26379                           postinc2	equ	0xFDE
 26380                           postdec2	equ	0xFDD
 26381                           plusw2	equ	0xFDB
 26382                           fsr2h	equ	0xFDA
 26383                           fsr2l	equ	0xFD9
 26384                           status	equ	0xFD8
 26385                           tblptru	equ	0xFF8
 26386                           tblptrh	equ	0xFF7
 26387                           tblptrl	equ	0xFF6
 26388                           tablat	equ	0xFF5
 26389                           prodh	equ	0xFF4
 26390                           prodl	equ	0xFF3
 26391                           intcon	equ	0xFF2
 26392                           intcon2	equ	0xFF1
 26393                           postinc0	equ	0xFEE
 26394                           wreg	equ	0xFE8
 26395                           indf1	equ	0xFE7
 26396                           postinc1	equ	0xFE6
 26397                           postdec1	equ	0xFE5
 26398                           fsr1h	equ	0xFE2
 26399                           fsr1l	equ	0xFE1
 26400                           indf2	equ	0xFDF
 26401                           postinc2	equ	0xFDE
 26402                           postdec2	equ	0xFDD
 26403                           plusw2	equ	0xFDB
 26404                           fsr2h	equ	0xFDA
 26405                           fsr2l	equ	0xFD9
 26406                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        2
    BSS         2825
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      83
    BANK0           160    139     142
    BANK1           256    105     255
    BANK2           256      0     204
    BANK3           256      0     228
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_task@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_put_num@rb.buf	PTR unsigned char  size(2) Largest target is 0
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    terminal_operation@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    data_out@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    terminal_time@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    terminal_at_hand@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    print_time@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_put_str@rb.buf	PTR unsigned char  size(2) Largest target is 0
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_92(CODE[9]), STR_87(CODE[1]), STR_83(CODE[1]), STR_80(CODE[1]), 
		 -> STR_60(CODE[6]), STR_59(CODE[6]), STR_57(CODE[6]), STR_56(CODE[6]), 
		 -> STR_52(CODE[6]), STR_51(CODE[6]), STR_49(CODE[6]), STR_48(CODE[6]), 
		 -> STR_44(CODE[6]), STR_43(CODE[6]), STR_41(CODE[6]), STR_40(CODE[6]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1344(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1327(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1310(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1344(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1327(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1310(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_117(CODE[7]), STR_116(CODE[2]), STR_115(CODE[7]), STR_114(CODE[2]), 
		 -> STR_113(CODE[5]), STR_112(CODE[2]), STR_111(CODE[4]), STR_110(CODE[2]), 
		 -> STR_109(CODE[6]), STR_108(CODE[2]), STR_107(CODE[5]), STR_106(CODE[2]), 
		 -> STR_105(CODE[12]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[11]), 
		 -> STR_25(CODE[2]), STR_24(CODE[6]), STR_21(CODE[5]), STR_20(CODE[11]), 
		 -> STR_19(CODE[6]), STR_18(CODE[1]), STR_17(CODE[12]), STR_16(CODE[3]), 
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_12(CODE[2]), STR_11(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_95(CODE[2]), STR_94(CODE[2]), STR_93(CODE[2]), STR_91(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_90(CODE[2]), STR_89(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_85(CODE[2]), STR_84(CODE[2]), STR_82(CODE[2]), 
		 -> STR_81(CODE[2]), STR_79(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), weekday_3char(CODE[28]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), 
		 -> data_out@p(CODE[6]), sp__ADC(UNKNOWN), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_100(CODE[37]), STR_98(CODE[5]), STR_78(CODE[5]), STR_33(CODE[28]), 
		 -> STR_32(CODE[9]), STR_31(CODE[11]), STR_30(CODE[6]), STR_28(CODE[24]), 
		 -> STR_27(CODE[32]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), display_LCD@str_575(BANK1[20]), 
		 -> data_out@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5888_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5888_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5888_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5888_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S4635$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S4625$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4625$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4601$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4601$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4601$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4601$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    get_string_usb@s	PTR unsigned char  size(1) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(1) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK2[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_575(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_10(CODE[16]), 
		 -> STR_9(CODE[12]), STR_6(CODE[13]), STR_5(CODE[17]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    get_quot_rem@quot	PTR unsigned long  size(1) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(BANK1[8]), usb_rx(BANK2[8]), 
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_101(CODE[8]), print_time@str(BANK0[30]), STR_99(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_97(CODE[4]), STR_96(CODE[4]), STR_29(CODE[2]), data_out@str(BANK0[30]), 
		 -> STR_26(CODE[18]), STR_23(CODE[36]), STR_22(CODE[24]), STR_13(CODE[434]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(BANK1[8]), usb_rx(BANK2[8]), 
		 -> usb_tx(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(BANK1[8]), 
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK1[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(COMRAM[4]), port(BANK1[69]), 

    settings_integrating_reset@strp_1345	PTR unsigned char  size(1) Largest target is 20
		 -> settings_integrating_reset@str_1344(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(1) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_1328	PTR unsigned char  size(1) Largest target is 20
		 -> settings_led_indicator@str_1327(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(1) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_1311	PTR unsigned char  size(1) Largest target is 20
		 -> settings_auto_stop@str_1310(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1344(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1327(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1310(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    settings_auto_stop@strp	PTR unsigned char  size(1) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_77(CODE[1]), STR_75(CODE[15]), STR_73(CODE[16]), STR_71(CODE[17]), 
		 -> STR_69(CODE[16]), STR_67(CODE[17]), STR_65(CODE[17]), STR_63(CODE[1]), 
		 -> settings_integrating_reset@str_1344(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_55(CODE[1]), settings_led_indicator@str_1327(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_47(CODE[1]), settings_auto_stop@str_1310(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_39(CODE[1]), STR_37(CODE[1]), STR_35(CODE[13]), STR_8(CODE[14]), 
		 -> STR_4(CODE[1]), STR_2(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_76(CODE[1]), STR_74(CODE[9]), STR_72(CODE[9]), STR_70(CODE[9]), 
		 -> STR_68(CODE[9]), STR_66(CODE[9]), STR_64(CODE[9]), STR_62(CODE[1]), 
		 -> STR_61(CODE[1]), STR_58(CODE[17]), STR_54(CODE[1]), STR_53(CODE[1]), 
		 -> STR_50(CODE[17]), STR_46(CODE[1]), STR_45(CODE[1]), STR_42(CODE[17]), 
		 -> STR_38(CODE[1]), STR_36(CODE[1]), STR_34(CODE[15]), STR_7(CODE[15]), 
		 -> STR_3(CODE[1]), STR_1(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    S136ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_ST7032_cursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_ST7032_cursor
    _normal_task->_data_out
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_command->_ringbuf_put
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___lbdiv
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task
    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  563686
                          _RTCC_task
                        _ST7032_task
                           _USB_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  198251
                                            133 BANK0      6     2      4
                                              0 BANK1    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  169105
                                            122 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  106669
                                            113 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   56639
                                            106 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   30707
                                             74 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   14653
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               7     3      4    4753
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   10717
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0   22435
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   10226
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2     870
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23026
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15394
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   30005
                                             21 BANK0      1     1      0
                                _ADC
                         _LED_output
                                _OUT
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  219805
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   81844
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              46    46      0   10117
                                              6 BANK0     46    46      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          49    49      0    8965
                                              6 BANK0     49    49      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  46    46      0    8934
                                              6 BANK0     46    46      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   48193
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   20963
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   20963
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     491
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         84    84      0   82006
                                             88 BANK0      4     4      0
                                              0 BANK1     80    80      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    6     0      6   35084
                                             82 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    2659
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   22742
                                             74 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    2468
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _ST7032_puts                                          2     0      2    6992
                                             16 BANK0      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (5) _ST7032_put                                           1     1      0    5737
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ST7032_cursor                                        4     3      1    8366
                                             17 BANK0      4     3      1
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   29011
                                             74 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             43    23     20   16624
                                             35 BANK0     39    19     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    7899
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11002
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9962
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   39800
                           _ADC_init
                          _CTMU_init
                          _RTCC_init
                        _ST7032_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   21182
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1322
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) _ST7032_clear                                         0     0      0    7077
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (5) _ST7032_command                                       2     1      1    7077
                                             15 BANK0      2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   15419
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2    9480
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    13    11      2    8549
                                             34 BANK0     13    11      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         9     5      4    5068
                                             25 BANK0      9     5      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2     731
                                              5 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     422
                                              4 BANK0      1     1      0
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (8) ___lbdiv                                              4     3      1     360
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6694
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6694
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1386
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   15667
                                             17 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    5706
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       3     1      2    2812
                                             11 BANK0      3     1      2
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          2     1      1     223
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       5     3      2    5008
                                             12 BANK0      5     3      2
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         5     4      1    2385
                                              7 BANK0      5     4      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2329
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2091
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    2064
                                             15 BANK0      3     3      0
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1330
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2     669
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    5939
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    5939
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5234
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2517
                                              6 BANK0      6     5      1
                            ___awmod
                            ___lbmod
 ---------------------------------------------------------------------------------
 (9) ___lbmod                                              4     3      1     351
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     671
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     325
                                              2 BANK0      2     0      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                10    10      0   32883
                                             31 COMRAM    10    10      0
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4694
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0     734
                                              7 COMRAM     4     4      0
                       i2_LED_output
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
             ___lbmod
         _month_length
           ___awmod
           ___lbmod
   _ST7032_task
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
               ___lbmod
           _month_length
             ___awmod
             ___lbmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___lbdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
                 ___lbmod
           _month_length
             ___awmod
             ___lbmod
     _ST7032_init
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_cursor
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_puts
         _ST7032_put
           _ringbuf_put
             _ringbuf_num
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
                 ___lbmod
             _month_length
               ___awmod
               ___lbmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
                   ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___lbdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                     ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
               ___lbmod
           _month_length
             ___awmod
             ___lbmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
                   ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___lbdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                     ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
               ___lbmod
           _month_length
             ___awmod
             ___lbmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _LED_output
     _OUT
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _ST7032_clear
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_cursor
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_puts
           _ST7032_put
             _ringbuf_put
               _ringbuf_num
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
           ___lbmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
                   ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___lbdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
                   ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                     ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                     ___lbmod
                 _month_length
                   ___awmod
                   ___lbmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CC      10       79.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FF       7       99.6%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      53       1       88.3%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     458       8        0.0%
DATA                 0      0     C28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Nov 13 09:12:59 2015

             ?_settings_integrating_reset 002B                           get_string_usb@s 0070  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002B  
                  _settings_led_indicator 18D4                  __end_of_port_button_task 2248  
               settings_adjust_time@state 0136                           _ringbuf_put_num 380C  
                                      PL2 261C                                        PL4 19DC  
                                      PL6 22D2                                        PL8 10D0  
                            ?_display_dec 00AA                           _ringbuf_put_str 3B8C  
                      __size_of_ANALOG_IN 0018                             _USBDeviceInit 2A96  
                     ___wmul@multiplicand 0078                        i2___lwdiv@dividend 002B  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 0052  
                            __CFG_CP0$OFF 000000               settings_led_indicator@state 0139  
                                     PL10 22DC                                       PL20 3732  
                                     PL12 0DD6                                       PL30 128C  
                                     PL22 2A66                                       PL14 0DF0  
                                     PL40 22F6                                       PL32 129A  
                                     PL24 1FA8                                       PL16 2BB0  
                                     PL50 1646                                       PL42 176E  
                                     PL34 22E6                                       PL26 175E  
                                     PL18 05D2                                       PL60 10F6  
                                     PL52 2598                                       PL44 3F64  
                                     PL36 3468                                       PL28 05E2  
                                     PL70 2D72                                       PL62 0AAA  
                                     PL54 10E8                                       PL46 2A76  
                                     PL38 12A4                                       PL80 26D0  
                                     PL72 3FF4                                       PL64 1514  
                                     PL56 1506                                       PL48 313A  
                                     PL90 0608                                       PL82 1EC6  
                                     PL74 1520                                       PL66 2052  
                                     PL58 02EE                                       PL92 0F8E  
                                     PL84 1536                                       PL76 2B20  
                                     PL68 1102                                       PL94 0C6E  
                                     PL86 1118                                       PL78 0F84  
                                     PL96 2C4E                                       PL88 0300  
                                     PL98 30B0      USER_USB_CALLBACK_EVENT_HANDLER@event 0037  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0039                                       l113 220A  
                                     l130 3248                                       l124 31F8  
                                     l119 21FA                                       l144 28BA  
                                     l501 19C4               __end_of_USBStdGetDscHandler 1FA8  
                                     l502 1920                                       _ADC 4240  
                                     l523 1746                                       l276 3D18  
                                     l292 3C84                                       l524 16C2  
                                     l540 12B4                                       l461 2B96  
                                     l278 3D24                                       l294 3C90  
                                     l462 2B4C                                       l542 12C4  
                                     l279 3D30                                       l295 3C9C  
                                     l480 1A36                                       l580 11A6  
                                     l581 11B4                                       l549 136E  
                                     l821 380E                                       l902 304A  
                                     l582 11C2                                       l583 11D0  
                                     l479 1AD0                                       l576 1166  
                                     l752 4224                                       l577 1178  
                                     l921 1B7A                                       l578 1188  
                                     l579 1198                                       l771 425C  
                                     l908 2CEE                                       _BDT 000D00  
                                     l757 3EDC                                       l782 2DBC  
                                     l984 1414                                       l999 0FE8  
                                     _ISR 0008                                       _UIE 000F36  
                                     _UIR 000F62                                       _OUT 3D02  
                       get_string_usb@len 006C                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 43BE  
                                     _now 028F                         _RTCC_from_caltime 4334  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 003F  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 17BA                            _USBDeviceState 001B  
              __end_of_settings_auto_stop 1AE8                               ?_ST7032_put 002B  
                 _RTCC_adjust_time_cursor 36D8                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002B                  __size_ofi2_USBDeviceInit 006C  
                          ??_getsUSBUSART 0068                                      PL100 1AE8  
                                    PL110 4208                                      PL102 1AF6  
                                    ?_ADC 0060                                      PL200 0E04  
                                    PL120 3474                                      PL112 0FA0  
                                    PL104 2772                                      PL210 062A  
                                    PL202 41A2                                      PL130 1FCE  
                                    PL122 0830                                      PL114 32EA  
                                    PL106 0AB4                                      PL300 17AA  
                                    PL220 0AD0                                      PL212 26E0  
                                    PL204 084E                                      PL140 43D4  
                                    PL132 302C                                      PL124 2144  
                                    PL116 1BDA                                      PL108 1FB4  
                                    PL310 166A                                      PL302 35E0  
                                    PL230 3FB0                                      PL222 239A  
                                    PL214 2E8E                                      PL206 0622  
                                    PL150 4414                                      PL142 3150  
                                    PL134 3144                                      PL126 0FB0  
                                    PL118 2078                                      PL320 1EE6  
                                    PL312 3B34                                      PL304 17B0  
                                    PL240 209C                                      PL232 2300  
                                    PL224 0C78                                      PL216 2780  
                                    PL208 3B80                                      PL160 2F20  
                                    PL152 214E                                      PL144 30BE  
                                    PL136 13E8                                      PL128 29F2  
                USBEnableEndpoint@options 0033                                      PL330 2A8C  
                                    PL322 3040                                      PL314 3CF8  
                                    PL306 3036                                      PL250 1662  
                                    PL242 0C82                                      PL234 23A4  
                                    PL226 0864                                      PL218 085A  
                                    PL170 2386                                      PL162 2804  
                                    PL154 215C                                      PL146 030A  
                                    PL138 1CC0                                      PL340 1134  
                                    PL332 0878                                      PL324 1674  
                                    PL316 3370                                      PL308 4458  
                                    PL260 0E10                                      PL252 2FAE  
                                    PL244 2166                                      PL236 086E  
                                    PL228 3BC8                                      PL180 0DFA  
                                    PL172 2812                                      PL164 2444  
                                    PL156 2942                                      PL148 0AC0  
                                    PL350 0882                                      PL342 113C  
                                    PL334 1BF6                                      PL326 3DD6  
                                    PL318 281C                                      PL270 0320  
                                    PL262 1788                                      PL254 364A  
                                    PL246 315C                                      PL238 2FA4  
                                    PL190 083C                                      PL182 1122  
                                    PL174 177E                                      PL166 3924  
                                    PL158 2082                                      PL360 1C08  
                                    PL352 0340                                      PL344 31E2  
                                    PL336 0640                                      PL328 3658  
                                    PL280 30CA                                      PL272 2A82  
                                    PL264 18CA                                      PL256 3366  
                                    PL248 2176                                      PL192 1BE4  
                                    PL184 0ACA                                      PL176 061A  
                                    PL168 2950                                      PL362 1D04  
                                    PL354 24FE                                      PL346 1146  
                                    PL338 0336                                      PL290 179E  
                                    PL282 032A                                      PL274 13F2  
                                    PL266 406E                                      PL258 1CFA  
                                    PL194 1CE8                                      PL186 0FC6  
                                    PL178 1658                                      PL364 088A  
                                    PL356 1C00                                      PL348 1EF0  
                                    PL292 0E24                                      PL284 1792  
                                    PL276 2956                                      PL268 0E1A  
                                    PL196 2090                                      PL188 1CD6  
                                    PL366 0E30                                      PL358 2824  
                                    PL294 0634                                      PL286 1FDA  
                                    PL278 3EAE                                      PL198 2452  
                                    PL368 1DFE                                      PL296 3F74  
                                    PL288 20AC                                      PL298 2CE4  
                 _RTCC_adjust_time_toggle 4402                                      ?_ISR 002B  
                  __end_of_get_string_usb 4118                          _terminal_at_hand 3C24  
                                    ?_OUT 0060                               ?_LED_output 0060  
                                    l1151 1DCC                                      l1224 07C2  
                                    l1145 1D7A                                      l1360 457C  
                                    l1601 4198                                      l1602 4196  
                                    l2156 29E8                                      l2406 3D8C  
                                    l1392 3A1A                                      l2416 4032  
                                    l2353 36C6                                      l2363 38C0  
              USBConfigureEndpoint@handle 0031                                      l1903 1E6C  
                                    l1951 00EC                                      l1864 2E2A  
                                    l1928 0018                                      l1945 0164  
                                    OUT@b 0061                                      l1894 1E1E  
                                    l1967 020E                                      l1968 0212  
                                    l1995 3BE0                        __CFG_WPFP$PAGE_127 000000  
                                    l7710 1254                                      l7702 122C  
                                    l7714 1268                                      l7706 1240  
                                    l9500 375E                                      l7718 127A  
                                    l9520 379E                                      l9512 3788  
                                    l9504 376A                                      l9600 40AA  
                                    l9506 3772                                      l9610 367A  
                                    l7690 11F6                                      l9508 3776  
                                    l9516 3792                                      l9612 3686  
                                    l9550 2FF8                                      l9622 36B8  
                                    l9614 368A                                      l7694 1208  
                                    l7686 11E4                                      l9536 4306  
                                    l9528 42F0                                      l9720 388C  
                                    l9704 44B8                                      l9800 0148  
                                    l9634 2800                                      l7698 121A  
                                    l9722 3890                                      l9732 3B8E  
                                    l9740 0006                                      l9574 3BF4  
                                    l9566 34DA                                      l9590 4092  
                                    l9726 38B2                                      l9718 3880  
                                    l9830 01DC                                      l9822 01AA  
                                    l9806 017A                                      l9750 0026  
                                    l9496 3752                                      l9672 1550  
                                    l9680 156E                                      l9584 4088  
                                    l9736 3BB2                                      l9816 01A6  
                                    l9666 154C                                      l9746 0020  
                                    l9684 157C                                      l9596 40A2  
                                    l9588 408E                                      l9940 1BA2  
                                    l9836 01EC                                      l9764 007A  
                                    l9756 003A                                      l9942 1BA4  
                                    l9870 0266                                      l9862 024C  
                                    l9846 0224                                      l9854 0236  
                                    l9790 010C                                      l9774 009E  
                                    l9766 007E                                      STR_1 FFE6  
                                    l9688 1594                                      l9856 023C  
                                    l9880 02E8                                      l9784 00F2  
                                    l9776 00A4                                      STR_2 FFE6  
                                    STR_3 FFE6                                      l9778 00AA  
                                    l9962 3AF8                                      STR_4 FFE6  
                                    STR_5 FE92                                      l9876 02D0  
                                    l9868 025A                                      l9796 0136  
                                    l9788 00FC                                      l9964 3AFC  
                                    STR_6 FF0C                                      STR_7 FEE2  
                                    l9878 02DE                                      l9966 3B04  
                                    STR_8 FEF1                                      STR_9 FF25  
                                    l9968 3B0E                                      l9984 3CA8  
                                    l9992 20CA                                      l9998 20DE  
                                    u7320 123A                                      u7330 124E  
                                    u7340 1262                                      u7350 1276  
                   ??_USBCtrlTrfTxService 002B                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      u9720 34EE  
                                    u9660 349A                                      u9680 34BC  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9738 34F2                                      u9930 3BA6  
                                    u9940 3BC2                                      u9678 349E  
                                    u9937 3BA2                                      u9698 34C0  
                                    u9947 3BBE                              __CFG_WDTPS$8 000000  
                         _CDCDataInHandle 0117                               display@item 0064  
                     ??_RTCC_from_caltime 0091                               display@str0 0060  
                             display@str1 0062    USBStdFeatureReqHandler@current_ep_data 0043  
                                    _pDst 011D                                      _atoi 2962  
                                    _main 37A8                  ??i2_USBTransferOnePacket 002F  
                button_timer_interrupt@bt 0083                             _software_init 3932  
                                    _port 013D                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 002F                                      fsr2h 000FDA  
                                    indf1 000FE7                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 417C                                      btemp 0054  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 45B0  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00BC                          __end_of_ADC_init 4458  
                           __CFG_IESO$OFF 000000                        __size_of_CTMU_init 0022  
              RTCC_adjust_time_dec@i_2973 0097                        __size_of_CTMU_read 0090  
              __end_of_USBCheckStdRequest 2CE4                    ??_USBCtrlTrfOutHandler 002D  
                            ?_ST7032_init 002B                              ?_ST7032_task 002B  
                          terminal_task@i 01FC                              ?_ST7032_puts 0070  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 003F  
                         ??_terminal_task 00E9                           ??_terminal_time 00D9  
                                   ??_ADC 0062                        terminal_task@ascii 01FB  
                                   ADC@ch 0063                             ADC_init@p_ref 0060  
                                   ??_ISR 004A                                     ??_OUT 0061  
                ??_USBStdGetStatusHandler 002B                              print_time@tx 00AA  
                       _terminal_data_out 0133                            ?_USBDeviceInit 002B  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                                   l10002 20E8                                     l10012 2122  
                                   l10030 3F9A                                     l10006 2104  
                                   l11000 3F5A                                     l10016 213C  
                                   l10112 440E                                     l10040 3EA2  
                                   l10026 3F82                                     l11010 2188  
                                   l10130 3710                                     l10122 36F4  
                                   l10210 1048                                     l10202 100C  
                                   l10034 3E76                                     l10300 2A54  
                                   l11020 21C8                                     l10060 2998  
                                   l10036 3E7E                                     l11030 21F0  
                                   l11014 21AA                                     l10134 371E  
                                   l10126 3702                                     l10118 36E6  
                                   l10230 109E                                     l10214 1056  
                                   l10206 1024                                     l11110 13A6  
                                   l10046 2964                                     l10312 3D5C  
                                   l11032 21F4                                     l10224 1078  
                                   l10232 10B0                                     l10160 147C  
                                   l10152 143E                                     l11104 138E  
                                   l10064 29C0                                     l10056 298A  
                                   l10048 2968                                     l10400 09DE  
                                   l10314 3D64                                     l10242 4154  
                                   l10138 372C                                     l10226 107E  
                                   l11114 13B0                                     l11106 1396  
                                   l10058 2992                                     l10410 0A4E  
                                   l10076 2D8C                                     l10324 3D82  
                                   l10316 3D68                                     l10244 415C  
                                   l11132 034E                                     l11036 21FE  
                                   l11044 223C                                     l10236 10C8  
                                   l10180 14DA                                     l10164 148A  
                                   l10156 1456                                     l10148 1428  
                                   l11124 13BC                                     l11108 13A0  
                                   l11060 12DE                                     l10412 0A66  
                                   l10404 0A08                                     l10254 3CEA  
                                   l11038 220E                                     l10174 14B2  
                                   l10182 14EC                                     l11118 13B6  
                                   l11062 12E0                                     l10406 0A24  
                                   l11222 0B90                                     l11214 0B4C  
                                   l11206 0B02                                     l10272 4274  
                                   l10176 14B8                                     l10168 1492  
                                   l10512 19F6                                     l11080 1308  
                                   l11072 12FA                                     l11064 12E4  
                                   l11128 13D6                                     l10416 0A92  
                                   l11224 0B96                                     l11208 0B10  
                                   l10282 2A0A                                     l10362 3D3C  
                                   l10450 0D90                                     l11154 0428  
                                   l11138 0370                                     l10186 14FA  
                                   l10506 19EE                                     l11082 1312  
                                   l11074 12FC                                     l11410 381A  
                                   l11250 0C5A                                     l11234 0BF0  
                                   l11218 0B66                                     l10276 4284  
                                   l10452 0D9E                                     l11156 0460  
                                   l11172 0594                                     l11148 03B0  
                                   l11180 05B8                                     l10532 1A3A  
                                   l10516 1A0C                                     l10700 1714  
                                   l10620 196E                                     l11084 1324  
                                   l11092 135A                                     l11076 1300  
                                   l11420 3868                                     l10268 3C5A  
                                   l10380 08F4                                     l11244 0C20  
                                   l11228 0BB0                                     l11430 2F14  
                                   l11158 0486                                     l11174 05A6  
                                   l10198 0FF6                                     l10550 1A9C  
                                   l10518 1A16                                     l10606 1924  
                                   l11086 1336                                     l11502 3224  
                                   l11414 3836                                     l10390 0962  
                                   l10374 08BC                                     l11246 0C2E  
                                   l11432 2F1A                                     l10288 2A22  
                                   l11264 4236                                     l11192 1C40  
                                   l10544 1A7C                                     l10624 1984  
                                   l10640 19BA                                     l11088 1348  
                                   l11520 3254                                     l10392 0980  
                                   l10384 091C                                     l10376 08C8  
                                   l10482 2B76                                     l10466 2B30  
                                   l10490 2B8C                                     l10714 173C  
                                   l10626 1990                                     l10634 19AE  
                                   l11098 137A                                     l10386 0938  
                                   l11276 3EDE                                     l10476 2B60  
                                   l10548 1A92                                     l10564 1AC6  
                                   l10708 1730                                     l10580 18D6  
                                   l11508 3234                                     l11540 2844  
                                   l11604 3956                                     l10396 09AA  
                                   l11438 2F1E                                     l11470 40F4  
                                   l11358 3B50                                     l10750 2AE0  
                                   l10558 1ABA                                     l10662 1688  
                                   l10590 18F4                                     l11710 06E6  
                                   l11702 066A                                     l10840 1E36  
                                   l11472 40F8                                     l11456 43A8  
                                   l10744 2AC4                                     l10656 1680  
                                   l10592 1900                                     l11552 288E  
                                   l11448 38F8                                     l11720 070A  
                                   l11712 06E8                                     l11642 1D4A  
                                   l11634 1D20                                     l10850 1E5E  
                                   l10922 2E48                                     l11458 43AC  
                                   l10682 16C6                                     l10666 169C  
                                   l10586 18DE                                     l11706 0690  
                                   l11660 1D9C                                     l11652 1D6A  
                                   l10844 1E3E                                     l10836 1E2E  
                                   l10924 2E4C                                     l10932 2E8A  
                                   l10908 44D8                                     l10940 400A  
                                   l10668 16A6                                     l11670 1DD4  
                                   l11654 1D82                                     l11646 1D50  
                                   l11638 1D3E                                     l10774 2AF0  
                                   l10758 2AE4                                     l10942 4012  
                                   l10694 16F6                                     l11494 3214  
                                   l11558 28BE                                     l11742 079C  
                                   l11734 074C                                     l11726 072A  
                                   l11718 0708                                     l11656 1D8A  
                                   l11664 1DA6                                     l10864 1E88  
                                   l10872 1E8A                                     l10856 1E70  
                                   l10928 2E66                                     l10944 4016  
                                   l11488 3208                                     l11496 3218  
                                   l11752 07D0                                     l11744 07AE  
                                   l11736 074E                                     l11728 072C  
                                   l11816 3802                                     l11674 1DDE  
                                   l11658 1D92                                     l11666 1DC6  
                                   l10874 1E92                                     l10882 1E94  
                                   l10970 258C                                     l10698 170A  
                                   l11770 37B0                                     l10892 1EAA  
                                   l10884 1E9A                                     l10948 4028  
                                   l10980 3276                                     l11756 07FA  
                                   l11748 07C6                                     l11764 081A  
                                   l11678 1DE6                                     l10894 1EC2  
                                   l10958 2508                                     l10968 2584  
                                   l10986 32E0                                     l10996 3F42  
               __end_of_RTCC_from_caltime 4358                                     ?_atoi 007C  
                                   ?_main 002B                   __size_of_put_string_usb 0022  
                          ??_get_quot_rem 007D                           __end_of___lbdiv 40AE  
                                   _ADRES 000FC3                                     STR_10 FEC3  
                                   STR_11 FFD9                                     STR_12 FFFD  
                                   STR_20 FF53                                     STR_21 FFDE  
                                   STR_13 FBE6                                     STR_30 FFBD  
                                   STR_14 FF70                                     STR_22 FE1D  
                                   STR_15 FF79                                     STR_31 FF48  
                                   STR_23 FDBD                                     STR_32 FE44  
                                   STR_16 FFEE                                     STR_24 FFC9  
                                   STR_40 FFAB                                     STR_25 FFD2  
                                   STR_41 FFB1                                     STR_17 FF31  
                                   STR_33 FE01                                     STR_18 FFE6  
                                   STR_34 FEE2                                     STR_50 FE81  
                                   STR_42 FE81                                     STR_26 FE4D  
                                   STR_51 FFAB                                     STR_43 FFAB  
                                   STR_19 FFC3                                     STR_35 FEFF  
                                   STR_27 FDE1                                     STR_36 FFE6  
                                   STR_60 FFA5                                     STR_52 FFB1  
                                   STR_44 FFB1                                     STR_28 FE35  
                         __end_of___awmod 37A8                                     STR_61 FFE6  
                                   STR_53 FFE6                                     STR_45 FFE6  
                                   STR_37 FFE6                                     STR_29 FDBB  
                                   STR_62 FFE6                                     STR_54 FFE6  
                                   STR_46 FFE6                                     STR_38 FFE6  
                                   STR_70 FF67                                     STR_63 FFE6  
                                   STR_55 FFE6                                     STR_47 FFE6  
                                   STR_39 FFE6                                     STR_71 FE70  
                                   STR_48 FFAB                                     STR_72 FF67  
                                   STR_56 FFB7                                     STR_64 FF67  
                                   STR_49 FFB1                                     STR_81 FFF9  
                                   STR_57 FFA5                                     STR_73 FEB3  
                                   STR_65 FE5F                                     STR_74 FF67  
                                   STR_66 FF67                                     STR_58 FE81  
                                   STR_90 FFF5                                     STR_59 FFB7  
                                   STR_91 FF8F                                     STR_67 FE5F  
                                   STR_75 FED3                                     STR_76 FFE6  
                                   STR_68 FF67                                     STR_84 FFFB  
                                   STR_92 FF5E                           __end_of___lbmod 430E  
                                   STR_77 FFE6                                     STR_93 FFFB  
                                   STR_69 FEA3                                     STR_94 FF65  
                                   STR_78 FDFC                                     STR_86 FFF7  
                                   STR_87 FFE6                                     STR_79 FF64  
                                   STR_95 FFF7                                     STR_88 FFF9  
                                   STR_96 FFE3                                     STR_97 FFE3  
                                   STR_89 FFF9         __size_of_USBCtrlEPServiceComplete 0074  
                                   u10000 00D2                           __end_of___lldiv 36D8  
                                   u10007 00CE                                     u11000 3D38  
                                   u10040 012A                                     u10300 3C8C  
                                   u10047 0126                                     u10320 3C98  
                                   u10400 2118                                     u10410 2134  
                                   u10340 3CA4                                     u10430 3F92  
                                   u10270 3B2C                                     u10407 2114  
                                   u10440 3FAA                                     u12040 03FE  
                                   u12041 03FA                                     u10417 2130  
                                   u12050 0400                                     u10380 20FA  
                                   u11260 1A60                                     u10437 3F8E  
                                   u10277 3B28                                     u11350 1948  
                                   u10447 3FA6                                     u10295 3C80  
                                   u10560 2E00                                     u10296 3C82  
                         __end_of___llmod 38D2                    __end_of_USBDeviceTasks 18CA  
                                   u10387 20F6                                     u10565 2DF6  
                                   u12325 4450                                     u12326 4452  
                                   u11278 1A64                                     u11800 257A  
                                   u11368 194C                                     u11820 3288  
                                   _LATB2 007C52                                     _LATA5 007C4D  
                                   u10960 3D20                                     u11840 3F54  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     _LATB6 007C56  
                                   u10955 3D14                                     _LATB7 007C57  
                                   u10980 3D2C                                     u10956 3D16  
                                   u11775 252A                                     u12817 2DA8  
               ?_USBCtrlEPServiceComplete 002B                                     u12827 2DB2  
                         __end_of___lwdiv 3D96                           __end_of___lwmod 403C  
                                   i2l411 0090                             __CFG_WDTEN$ON 000000  
                                   i2l292 3E42                                     i2l294 3E4E  
                                   i2l295 3E5A                                     _UADDR 000F38  
                 ST7032_task@st7032_state 0124                           ??_hardware_init 0091  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64                    __size_of_ctmu_sampling 0088  
                  __size_of_LED_indicator 0090        __size_of_USBCtrlEPAllowStatusStage 006C  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 39EE                                     _sd000 FBE2  
                                   _sd001 FB3C                                     _sd002 FB70  
                         __end_of_display 2144                  ST7032_cursor@row_offsets 0072  
                  __size_of_ST7032_cursor 0020                      caltime_to_epoch@year 007F  
                              i2memset@p1 002B                           __end_of_dpowers FA79  
                         ??_settings_task 0099                           __end_of_isdigit 44C0  
                      __size_of_RTCC_init 0042                           ?_get_string_usb 006C  
                      __size_of_RTCC_task 0032                          ringbuf_delete@rb 0060  
                                   atoi@a 0081                                     atoi@s 007C  
               RTCC_adjust_time_cursor@tm 0060                              display_dec@s 00AE  
             settings_task@settings_state 013A                                     tablat 000FF5  
                       __end_of_ANALOG_IN 44F4                            ?_software_init 002B  
                                   plusw2 000FDB                         __end_of_CDCInitEP 3AEE  
                        __end_of_USB_init 450C                          __end_of_USB_task 3A48  
              __size_of_ringbuf_backspace 0052                                     status 000FD8  
                         __end_of_sprintf 02EE                           ___lbdiv@divisor 0060  
                            __end_ofPL100 1AF6                              __end_ofPL110 4212  
                            __end_ofPL102 1B04                              __end_ofPL200 0E10  
                            __end_ofPL120 347C                              __end_ofPL112 0FB0  
                            __end_ofPL104 2780                              __end_ofPL210 0634  
                            __end_ofPL202 41AE                              __end_ofPL130 1FDA  
                            __end_ofPL122 083C                              __end_ofPL114 32F6  
                            __end_ofPL106 0AC0                              __end_ofPL300 17B0  
                            __end_ofPL220 0ADA                              __end_ofPL212 26EA  
                            __end_ofPL204 085A                              __end_ofPL140 43E0  
                            __end_ofPL132 3036                              __end_ofPL124 214E  
                            __end_ofPL116 1BE4                              __end_ofPL108 1FCE  
                            __end_ofPL310 1674                              __end_ofPL302 35EA  
                            __end_ofPL230 3FC0                              __end_ofPL222 23A4  
                            __end_ofPL214 2E9E                              __end_ofPL206 062A  
                            __end_ofPL150 4422                              __end_ofPL142 315C  
                            __end_ofPL134 3150                              __end_ofPL126 0FC6  
                            __end_ofPL118 2082                              __end_ofPL320 1EF0  
                            __end_ofPL312 3B3E                              __end_ofPL304 17BA  
                            __end_ofPL240 20AC                              __end_ofPL232 230A  
                            __end_ofPL224 0C82                              __end_ofPL216 278A  
                            __end_ofPL208 3B8C                              __end_ofPL160 2F2E  
                            __end_ofPL152 215C                              __end_ofPL144 30CA  
                            __end_ofPL136 13F2                              __end_ofPL128 29FC  
                            __end_ofPL330 2A96                              __end_ofPL322 304A  
                            __end_ofPL314 3D02                              __end_ofPL306 3040  
                            __end_ofPL250 166A                              __end_ofPL242 0C8C  
                            __end_ofPL234 23B4                              __end_ofPL226 086E  
                            __end_ofPL218 0864                              __end_ofPL170 239A  
                            __end_ofPL162 2812                              __end_ofPL154 2166  
                            __end_ofPL146 0320                              __end_ofPL138 1CD6  
                            __end_ofPL340 113C                              __end_ofPL332 0882  
                            __end_ofPL324 167E                              __end_ofPL316 337A  
                            __end_ofPL308 4462                              __end_ofPL260 0E1A  
                            __end_ofPL252 2FBC                              __end_ofPL244 2176  
                            __end_ofPL236 0878                              __end_ofPL228 3BD8  
                            __end_ofPL180 0E04                              __end_ofPL172 281C  
                            __end_ofPL164 2452                              __end_ofPL156 2950  
                            __end_ofPL148 0ACA                              __end_ofPL350 088A  
                            __end_ofPL342 1146                              __end_ofPL334 1C00  
                            __end_ofPL326 3DE0                              __end_ofPL318 2824  
                            __end_ofPL270 032A                              __end_ofPL262 1792  
                            __end_ofPL254 3658                              __end_ofPL246 3162  
                            __end_ofPL238 2FAE                              __end_ofPL190 084E  
                            __end_ofPL182 1134                              __end_ofPL174 1788  
                            __end_ofPL166 3932                              __end_ofPL158 2090  
                            __end_ofPL360 1C10                              __end_ofPL352 0348  
                            __end_ofPL344 31EC                              __end_ofPL336 064A  
                            __end_ofPL328 3662                              __end_ofPL280 30D6  
                            __end_ofPL272 2A8C                              __end_ofPL264 18D4  
                            __end_ofPL256 3370                              __end_ofPL248 2184  
                            __end_ofPL192 1BF6                              __end_ofPL184 0AD0  
                            __end_ofPL176 0622                              __end_ofPL168 2956  
                            __end_ofPL362 1D0C                              __end_ofPL354 2504  
                            __end_ofPL346 1150                              __end_ofPL338 0340  
                            __end_ofPL290 17AA                              __end_ofPL282 0336  
                            __end_ofPL274 13FC                              __end_ofPL266 4078  
                            __end_ofPL258 1D04                              __end_ofPL194 1CFA  
                            __end_ofPL186 0FD0                              __end_ofPL178 1662  
                            __end_ofPL364 0892                              __end_ofPL356 1C08  
                            __end_ofPL348 1EFA                              __end_ofPL292 0E30  
                            __end_ofPL284 179E                              __end_ofPL276 2962  
                            __end_ofPL268 0E24                              __end_ofPL196 209C  
                            __end_ofPL188 1CE8                              __end_ofPL366 0E38  
                            __end_ofPL358 282A                              __end_ofPL294 0640  
                            __end_ofPL286 1FE6                              __end_ofPL278 3EBA  
                            __end_ofPL198 245E                              __end_ofPL368 1E06  
                            __end_ofPL296 3F80                              __end_ofPL288 20B8  
                            __end_ofPL298 2CEE                          __end_ofi2_memset 42BE  
                         ___lbdiv@counter 0062                         month_length@month 0066  
                             CTMU_read@ch 0070                   __end_of_ringbuf_put_num 3870  
                 __end_of_ringbuf_put_str 3BC8                        __size_ofi2___lwdiv 004A  
                           ?_ST7032_clear 002B                       terminal_task@i_3830 01FA  
                         putUSBUSART@data 0061              __size_of_USBStdSetCfgHandler 007C  
                         __initialization 34F8                           terminal_task@rx 00E7  
                         terminal_task@tx 00E5                           terminal_time@tx 00D1  
                            __end_of_atoi 29F2                              __end_of_main 380C  
                     __size_of_ST7032_put 0034                          __end_of_Auto_cut 2598  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                    _settings_adjust_time 2B2E                RTCC_adjust_time_inc@i_2943 0097  
                     __size_of_LED_output 004A                  ctmu_set_ratio@percentage 0083  
               __size_of_USBCtrlEPService 008A                             print_time@str 00AC  
               RTCC_adjust_time_toggle@tm 0060                                    ??_atoi 007E  
                                  ??_main 00EB                           LED_output@value 0060  
         settings_led_indicator@strp_1328 0090                             __activetblptr 000003  
                         ?_USBDeviceTasks 002B                 ??_RTCC_adjust_time_cursor 0062  
                             ?_USBSuspend 002B                 ??_RTCC_adjust_time_toggle 0062  
                                  ISR@cnt 0121                         __end_of_CTMU_init 439C  
                       __end_of_CTMU_read 2E0E                              _cdc_mem_type 012C  
                             ST7032_put@c 006F                   __end_of_USBDeviceAttach 41A2  
                        _CDCDataOutHandle 0119                         _getsUSBUSART$6266 006A  
                        ___llmod@dividend 006D                                    STR_100 FD98  
                                  STR_101 FF82                                    STR_110 FDFF  
                                  STR_102 FF3D                                    STR_103 FFEC  
                                  STR_111 FFE7                                    STR_112 FE4B  
                                  STR_104 FFEB                                    STR_113 FFD4  
                                  STR_105 FF19                                    STR_106 FFE9  
                                  STR_114 FFF3                                    STR_107 FFCF  
                                  STR_115 FF98                                    STR_116 FFC1  
                                  STR_108 FFF1                                    STR_109 FF9F  
                                  STR_117 FF91                                    STR_118 FF8A  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                       display_time_1602@tm 00B2  
                               ??_USB_ISR 004A                           getsUSBUSART@len 0067  
                   __size_of_CDCTxService 00C0                                    i2l2406 3E20  
                                  i2l1702 4204                                    i2l1552 17E6  
                                  i2l1626 25DE                                    i2l1562 1864  
                                  i2l1731 449E                                    i2l1563 18C6  
                                  i2l1564 186C                                    i2l1729 448C  
                                  i2l1753 2C66                                    i2l1682 1F90  
                                  i2l1762 2C84                                    i2l1739 3132  
                                  i2l1844 3198                                    i2l1684 1F94  
                                  i2l1692 35CC                                    i2l1693 3588  
                                  i2l1694 358C                                    i2l1679 1F56  
                                  i2l1769 0E54                                    i2l1689 357A  
                                  i2l1787 0F36                                    i2l1779 0EF8  
                                  i2l7006 25F2                                    i2l7014 2600  
                                  i2l6160 3304                                    i2l7112 2CA4  
                                  i2l7042 2270                                    i2l6234 316E  
                                  i2l6410 43E0                                    i2l7060 22B6  
                                  i2l6084 3628                                    i2l6252 3192  
                                  i2l6244 3184                                    i2l6500 42AE  
                                  i2l7108 2C98                                    i2l6430 232C  
                                  i2l7038 2264                                    i2l6094 40BC  
                                  i2l6166 331E                                    i2l6262 31B2  
                                  i2l6238 317A                                    i2l9000 3DF0  
                                  i2l6440 234E                                    i2l7064 22BE  
                                  i2l7048 228E                                    i2l9002 3DF8  
                                  i2l6450 236A                                    i2l6426 2324  
                                  i2l6098 40CA                                    i2l6178 3352  
                                  i2l6274 31CC                                    i2l8210 447A  
                                  i2l9012 3E16                                    i2l9004 3DFC  
                                  i2l6268 31C6                                    i2l8212 447C  
                                  i2l9022 23B6                                    i2l7502 311A  
                                  i2l7086 2C6E                                    i2l8310 201E  
                                  i2l6448 2364                                    i2l8304 2004  
                                  i2l9034 2414                                    i2l9042 243A  
                                  i2l6458 2380                                    i2l7098 2C76  
                                  i2l8234 4202                                    i2l9028 23D6  
                                  i2l7508 3128                                    i2l6820 1F0A  
                                  i2l6812 292A                                    i2l6910 0EC8  
                                  i2l8254 2C00                                    i2l8334 2028  
                                  i2l8318 2020                                    i2l6920 0EEC  
                                  i2l6904 0EB8                                    i2l6832 1F5A  
                                  i2l6824 1F1A                                    i2l6840 1F98  
                                  i2l6496 429E                                    i2l7490 30FE  
                                  i2l6738 3432                                    i2l6922 0F04  
                                  i2l6906 0EBA                                    i2l6770 39D0  
                                  i2l9138 458A                                    i2l6932 0F22  
                                  i2l6852 359C                                    i2l8268 2C40  
                                  i2l6950 0F60                                    i2l6942 0F40  
                                  i2l6934 0F28                                    i2l6862 35BE  
                                  i2l6790 28E8                                    i2l6766 39BC  
                                  i2l9350 0042                                    i2l6880 0E58  
                                  i2l9360 005C                                    i2l6948 0F5A  
                                  i2l6990 25C0                                    i2l8910 182C  
                                  i2l9366 0072                                    i2l6896 0E9A  
                                  i2l8920 1840                                    i2l8904 1824  
                                  i2l9376 0088                                    i2l6994 25C6  
                                  i2l8914 1834                                    i2l8928 185A  
                                  i2l8954 18AA                                    i2l8890 17FC  
                                  i2l8956 18BE                                    i2l8948 1890  
                                  i2l8876 17DE                                    i2l8868 17CE  
                                  i2l8992 3E66                                    i2l8898 180C  
                           CDCTxService@i 0069                                    _RTCCAL 000F3E  
                          __CFG_WPCFG$OFF 000000        settings_integrating_reset@str_1344 007E  
                i2USBTransferOnePacket@ep 002F                         ??i2_USBDeviceInit 0033  
         __size_ofi2_USBTransferOnePacket 0070                          __end_of_data_out 1CC0  
                          __CFG_WPDIS$OFF 000000                            ??_ST7032_clear 0071  
                __end_of_is_usb_available 4580                             _ctmu_sampling 26EA  
                           _LED_indicator 23B4                        _terminal_task$7100 01F8  
                      epoch_to_caltime@tm 0082                      get_string_usb@rx_len 006E  
                             LED_output@b 0061                         _shortPacketStatus 0024  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0082  
                 __size_of_ST7032_command 0042                   __size_of_ctmu_set_ratio 0086  
                        ringbuf_put_num@i 0088                           USBDeviceTasks@i 0049  
                           _ST7032_cursor 4422                     caltime_to_epoch@epoch 0081  
                        ??_integrate_time 0060                        _terminal_time$7101 00D9  
             USBStdFeatureReqHandler@pUEP 0041                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002C                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                        __end_of_bootload 414A                                    ___lmul 3BD8  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 2CEE  
                                  ___wmul 430E                        ??_epoch_to_caltime 0084  
                               ??___lbdiv 0061                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 10D0                                 ??___lbmod 0061  
                   ?_settings_adjust_time 002B              __end_of_RTCC_adjust_time_inc 1506  
                                  _d_to_x 4554                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 2E8E                      ringbuf_put_num@value 0085  
                            ?_timer0_init 002B                                 ??___llmod 0075  
                       __end_of_RTCC_init 3B80                              ?_timer1_init 0060  
                               ??___lwdiv 0080                         __end_of_RTCC_task 41E0  
                               ??___lwmod 0064                              ?_timer3_init 002B  
                            ?_normal_task 002B                                    _lcd_tx 0182  
                       _USBEnableEndpoint 40AE           __size_of_USBStdGetStatusHandler 006E  
                                  _ctmu_m 0025                                    _memset 426A  
                                  clear_0 3500                                    clear_1 3512  
                                  clear_2 351E                           put_string_usb@s 006D  
                                  clear_3 352A                                    clear_4 3536  
                                  clear_5 354A                           __CFG_CLKOEC$OFF 000000  
                         ___awmod@divisor 0062                      __size_of_display_LCD 028A  
                         ___awmod@counter 0064                        _ctmu_sampling_flag 012D  
                                  _x_to_d 453C                        ?_USBEnableEndpoint 0033  
              __size_of_RTCC_from_caltime 0024                                    _usb_rx 02B5  
                                  _usb_tx 02BD                      __size_of_display_dec 0040  
                                  _strcat 3AEE                                    _strcmp 3E74  
                                  _strcpy 414A                                 ??_display 0064  
           __size_of_USBTransferOnePacket 006A                 __size_of_caltime_to_epoch 0106  
                      _terminal_operation 0ADA               settings_auto_stop@strp_1311 0090  
                               ??_isdigit 0060                              _CDCTxService 1E06  
                       __end_ofi2___lwdiv 3E2A                              __mediumconst FA50  
                           _cut_time_flag 012E                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                               ?_ADC_init 002B                       ??_USBEnableEndpoint 0034  
                               ??_sprintf 0097                       ?_terminal_operation 00DA  
                           ?i2_LED_output 002B                               _CtrlTrfData 000D38  
                        ___lbdiv@dividend 0061                           ??_software_init 0084  
                    _controlTransferState 0020                      __CFG_LS48MHZ$SYS48X8 000000  
                         ___lbmod@divisor 0060                                __accesstop 0060  
                 __end_of__initialization 3568                           ___lbmod@counter 0062  
                            __pbssBIGRAMl 04C8                              CTMU_read@sum 0071  
                           ?_millis_timer 002B                      __end_of_get_quot_rem 2FA4  
                          ?_ctmu_sampling 002B                            ?_LED_indicator 002B  
                           ___rparam_used 000001                           _RTCC_from_epoch 450C  
                __size_of_USBStallHandler 0028                          ?_ringbuf_put_num 0083  
                        ?_ringbuf_put_str 006F                   ?_settings_led_indicator 002B  
                    __CFG_WPEND$PAGE_WPFP 000000                            ?_ST7032_cursor 0071  
                     __size_of_USBSuspend 0016                          LED_indicator@cnt 0106  
                        terminal_task@op0 022B                          terminal_task@op1 0244  
                        terminal_task@op2 025D                          terminal_task@op3 0276  
                        terminal_task@buf 0194                            __pcstackCOMRAM 002B  
               __end_of_USBEnableEndpoint 40E4                             __end_of_sd000 FBE6  
                           __end_of_sd001 FB70                             __end_of_sd002 FBA4  
                        terminal_time@op0 00D3                          terminal_time@op1 00D5  
                        terminal_time@op2 00D7                              __pidataBANK1 45B0  
          settings_led_indicator@str_1327 007B                      ??_terminal_operation 00E4  
                __end_of_terminal_at_hand 3C6E          __size_of_USBCtrlEPAllowDataStage 005C  
                    __size_of_ST7032_init 00A0                      __size_of_ST7032_task 00F2  
                    __size_of_ST7032_puts 0030             __size_of_USBConfigureEndpoint 0060  
                       ?_port_button_task 002B               __end_of_USBCtrlTrfInHandler 313A  
                         __CFG_DSWDTPS$G2 000000                                __end_ofPL2 264A  
                              __end_ofPL4 19EC                                __end_ofPL6 22DC  
                              __end_ofPL8 10E8                          ___lbdiv@quotient 0063  
                          _put_string_usb 439C                    i2_USBTransferOnePacket 32F6  
                      ??_port_button_task 0066                      terminal_task@command 018A  
                               ?_USB_init 002B                                 ?_USB_task 002B  
                       _CDCTxService$6314 0067                   __size_of_ringbuf_delete 0022  
                               ?i2_memset 002B                                _cdc_rx_len 001D  
                              _cdc_tx_len 001F                              ??_ST7032_put 006F  
                              ??_ADC_init 0060                caltime_to_epoch@month_2763 0080  
                ??_USBCtrlTrfSetupHandler 0046                            ??i2_LED_output 002C  
                            ??_LED_output 0061                    RTCC_adjust_time_dec@tm 0091  
                        ?_USBDeviceAttach 002B                    _USBStdGetStatusHandler 3572  
                            sprintf@width 00A8                    RTCC_adjust_time_inc@tm 0091  
                              __pbssBANK0 00EB                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                 ?_Auto_cut 002B  
                          LED_indicator@i 0035                            ??_millis_timer 002B  
                      __size_of_ctmu_task 000E                                 ISR@cnt_t1 0122  
                      ST7032_command@wait 006F                   __end_of_caltime_to_RTCC 2D72  
          __end_of_settings_led_indicator 19DC                           _RTCC_to_caltime 304A  
                      _settings_auto_stop 19EC               __size_of_USBWakeFromSuspend 0020  
                             _pBDTEntryIn 0010          __end_of_USBCtrlEPServiceComplete 261C  
             __size_of_USBCheckCDCRequest 0080                     __end_of_weekday_3char FBC0  
                  ??_settings_adjust_time 0099                     RTCC_task@prev_halfsec 0123  
                    USBCtrlTrfRxService@i 002B                                   ?___lmul 006D  
                   settings_auto_stop@str 0067                                   ?___wmul 0076  
                          ST7032_init@buf 0400                       ?_settings_auto_stop 002B  
                                 ?_d_to_x 002B                              ST7032_puts@s 0070  
                      __end_of_ST7032_put 3FF4                    __end_of_put_string_usb 43BE  
                                 ?_memset 0060                            ___lmul@product 0075  
                              _device_dsc FBC0                        __end_of_LED_output 3CB8  
                        _USBCtrlEPService 2BC4                                   ?_x_to_d 002B  
                              _ep_data_in 0109                                   ?_strcat 0060  
                                 ?_strcmp 0060                                   ?_strcpy 0060  
                 settings_auto_stop@state 0137               __end_of_USBCtrlTrfRxService 22D2  
                      _USBCheckStdRequest 2C5A                                ??_USB_init 0069  
                       _configDescriptor1 FAF9                                ??_USB_task 0071  
                        ??_get_string_usb 006E                        __CFG_OSC$INTOSCPLL 000000  
                    __end_of_ST7032_clear 45AC                                ANALOG_IN@b 0060  
                              ??i2_memset 0031                                 ?_data_out 00AA  
             __end_of_USBCtrlTrfTxService 2386                       _USBStdSetCfgHandler 28C6  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                    terminal_operation@tx 00DA                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                      ??_settings_auto_stop 0066  
                     ?_USBCheckStdRequest 002B              __size_of_USBStdGetDscHandler 00AE  
                                 _UIEbits 000F36                           integrate_time@i 0062  
                                 _USB_ISR 45AC                   __end_of_RTCC_from_epoch 4524  
                               ?_bootload 002B                          ST7032_cursor@col 0074  
                    timer1_init@prescaler 0062                      _RTCC_adjust_time_dec 0FD0  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 13FC  
                        ST7032_cursor@row 0071                                ??_Auto_cut 007C  
                        __CFG_CFGPLLEN$ON 000000                  ??_button_timer_interrupt 0086  
                           _cdc_trf_state 001E                           ??_ctmu_sampling 0088  
                         ??_LED_indicator 0032                             ?_month_length 0066  
                     epoch_to_caltime@day 0087                       epoch_to_caltime@num 008B  
                         ??_ST7032_cursor 0072                         RTCC_from_epoch@tm 008F  
                                 _pCDCDst 010F                                   _pCDCSrc 0112  
                   __size_of_getsUSBUSART 0080                    display_time_1602@line0 00B4  
                  display_time_1602@line1 00B6                                 _ANALOG_IN 44DC  
     settings_integrating_reset@strp_1345 0093                                   __Hparam 0000  
                          _ST7032_command 3EFE                            _ctmu_set_ratio 264A  
                    ?_USBStdSetCfgHandler 002B                                 _CDCInitEP 3A9C  
                                 __Lparam 0000                                _ctmu_ratio 00EB  
                       ringbuf_put_num@rb 0083                            display_LCD@str 0194  
              __size_of_USBEnableEndpoint 0036                         ringbuf_put_str@rb 006F  
                            USB_task@data 0073                      ??_USBCheckStdRequest 0046  
           __size_of_USBCtrlTrfOutHandler 0020                             ?_ringbuf_init 0060  
                                 ___lbdiv 4078                           __size_of___lmul 004C  
                                 ___awmod 3740                                   ___lbmod 42E6  
                                 ___lldiv 3662                          ??_USBDeviceTasks 0049  
                         __size_of___wmul 0026                                   ___llmod 3870  
                   ringbuf_put_num@digits 0087                                   ___lwdiv 3D4C  
                         ?_put_string_usb 006B                         ??_USBStallHandler 002B  
                                 ___lwmod 3FFE                           __size_of_d_to_x 0016  
                   __end_of_terminal_task 0830                     __end_of_terminal_time 0AAA  
             settings_integrating_reset@i 0094               settings_integrating_reset@j 0096  
                    __size_of_ringbuf_pop 0082                      __size_of_ringbuf_num 0070  
                    __size_of_ringbuf_put 007A                           __CFG_STVREN$OFF 000000  
                      display_LCD@str_575 01BC                      __size_of_putUSBUSART 001C  
                                 __pcinit 34F8                        getsUSBUSART@buffer 0069  
                         __size_of_memset 002A                 __end_of_configDescriptor1 FB3C  
                                 __ramtop 0F00                      __size_of_timer0_init 002E  
                    __size_of_timer1_init 0044                                   __ptext0 37A8  
                                 __ptext1 064A                                   __ptext2 0ADA  
                                 __ptext3 0892                                   __ptext4 3C24  
                                 __ptext5 3A48                                   __ptext6 4334  
                                 __ptext7 3E74                                   __ptext8 2962  
                                 __ptext9 4118                                   _inPipes 000A  
                    __size_of_timer3_init 0028                      __size_of_normal_task 0086  
           settings_integrating_reset@str 006A                         __end_of_ctmu_task 45A0  
                         __size_of_x_to_d 0018               _USBDeferOUTDataStagePackets 0129  
                       port_button_task@i 0066                                   _display 20B8  
                               _T0CONbits 000FD5                              __size_of_ADC 002A  
                         __size_of_strcat 0046                          _time_change_flag 0135  
                        _caltime_to_epoch 1540                           __size_of_strcmp 003A  
                         __size_of_strcpy 0032                              __size_of_ISR 00B4  
                               _T1CONbits 000FCD                              __size_of_OUT 004A  
                                 _dpowers FA51                              ??_USBSuspend 003F  
                 __size_of_RTCC_from_RTCC 0018                                data_out@tx 00AA  
                                 _isdigit 44A2                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                        hardware_init@usbrx 0300  
                      hardware_init@usbtx 04C8                                ??_data_out 00AC  
          settings_integrating_reset@strp 0092                     __end_of_hardware_init 33FC  
                         i2_USBDeviceInit 1FE6                          i2USBDeviceInit@i 0033  
                       __end_ofdata_out@p FBE2                                   _uart_rx 02A5  
                                 _uart_tx 02AD                        __end_of_USB_CD_Ptr FA81  
                                 _sprintf 0000           __size_of_USBCtrlTrfSetupHandler 0040  
                 __end_of_RTCC_to_caltime 30B0                     ?_RTCC_adjust_time_dec 0091  
                   ?_RTCC_adjust_time_inc 0091                     __size_of_get_quot_rem 0076  
                    end_of_initialization 3568                              _getsUSBUSART 2E0E  
                              ??_bootload 0075                                 _CTMU_init 437A  
                               _CTMU_read 2D7E                     __end_of_settings_task 13E8  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FA7F  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 0018  
         settings_integrating_reset@state 0138                            ??_month_length 0067  
                          display_dec@dec 00AC                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                          display_dec@str 00AA           _dummy_encapsulated_cmd_response 029D  
                  _terminal_data_out_flag 0134              terminal_operation@percentage 00E4  
                  __end_of_ST7032_command 3F40                    __end_of_ctmu_set_ratio 26D0  
                             sleep_task@i 0075                  ?_USBStdFeatureReqHandler 002B  
                        ?_caltime_to_RTCC 0065                     ??_USBStdSetCfgHandler 003F  
                         ___lldiv@divisor 0064                                ?_ANALOG_IN 002B  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002B  
                         ___lldiv@counter 006C                         ?_is_usb_available 002B  
                      __end_of_USBSuspend 43D4                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 3992                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _sleep_task 282A                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                    __end_ofi2_LED_output 3E74                  _USBCtrlEPServiceComplete 25A8  
                                 strcmp@r 0066                _USBStatusStageEnabledFlag1 012A  
              _USBStatusStageEnabledFlag2 012B                        USBEnableEndpoint@p 0034  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 3B3E  
                    __end_of_millis_timer 4592                                 _RTCC_task 41AE  
                            _display_char 0203                              _display_flag 012F  
                      ST7032_cursor@F8592 01FD                                _print_item 00EC  
                            _get_quot_rem 2F2E                                _print_time 3A48  
                              _print_port 0023                            _ringbuf_delete 4358  
            __end_ofdisplay_LCD@port_char FAF9                 __size_of_epoch_to_caltime 00D6  
                        ___lbmod@dividend 0061                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 0125                       RTCC_from_caltime@tm 008F  
               USBConfigureEndpoint@EPNum 0030                         i2___lwdiv@divisor 002D  
                       __size_of_ADC_init 0016                ?_USBCtrlEPAllowStatusStage 002B  
              settings_led_indicator@strp 008F                                 i2___lwdiv 3DE0  
                       i2___lwdiv@counter 0031                          ?_RTCC_from_epoch 008F  
                              ?_CTMU_init 002B                                ?_CTMU_read 006D  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003B                                 _USTATcopy 002A  
                               Auto_cut@i 007E                               ___lbmod@rem 0063  
         __size_of_button_timer_interrupt 013C                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 2A66                           ?_ST7032_command 006F  
                         ?_ctmu_set_ratio 002B                          __CFG_IOL1WAY$OFF 000000  
                       putUSBUSART@length 0060                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 0200                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 3D96                             ??_display_LCD 00B8  
                          ringbuf_pop@ret 006E                             ??_display_dec 00AE  
                 ?i2_USBTransferOnePacket 002B              ??_settings_integrating_reset 0066  
                   __end_of_USBDeviceInit 2B20                         ?_terminal_at_hand 00CA  
                          __end_of___lmul 3C24                  ?_RTCC_adjust_time_cursor 0060  
                   ST7032_command@command 0070                            __end_of___wmul 4334  
                          __end_of_d_to_x 456A                     __size_of_ST7032_clear 000C  
                ?_RTCC_adjust_time_toggle 0060                   __end_ofi2_USBDeviceInit 2052  
                  __end_of_ringbuf_delete 437A                        ??_terminal_at_hand 00D1  
                               i2memset@c 002D                                 i2memset@n 002F  
                               i2memset@p 0031                            __end_of_memset 4294  
                              ?_RTCC_init 002B                                ?_RTCC_task 002B  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 0127  
                          __end_of_x_to_d 4554                            __end_of_strcat 3B34  
                   epoch_to_caltime@month 008A                            __end_of_strcmp 3EAE  
                          __end_of_strcpy 417C                               __end_ofPL10 22E6  
                             __end_ofPL20 3740                               __end_ofPL12 0DF0  
                             __end_ofPL30 129A                               __end_ofPL22 2A76  
                             __end_ofPL14 0DFA                               __end_ofPL40 2300  
                             __end_ofPL32 12A4                               __end_ofPL24 1FB4  
                             __end_ofPL16 2BC4                               __end_ofPL50 1658  
                             __end_ofPL42 177E                               __end_ofPL34 22F6  
                             __end_ofPL26 176E                               __end_ofPL18 05E2  
                             __end_ofPL60 1102                               __end_ofPL52 25A8  
                             __end_ofPL44 3F74                               __end_ofPL36 3474  
                             __end_ofPL28 0608                               __end_ofPL70 2D7E  
                             __end_ofPL62 0AB4                               __end_ofPL54 10F6  
                             __end_ofPL46 2A82                               __end_ofPL38 12B2  
                             __end_ofPL80 26E0                               __end_ofPL72 3FFE  
                             __end_ofPL64 1520                               __end_ofPL56 1514  
                             __end_ofPL48 3144                               __end_ofPL90 061A  
                             __end_ofPL82 1EE6                               __end_ofPL74 1536  
                             __end_ofPL66 2078                               __end_ofPL58 0300  
                             __end_ofPL92 0FA0                               __end_ofPL84 1540  
                             __end_ofPL76 2B2E                               __end_ofPL68 1118  
                             __end_ofPL94 0C78                               __end_ofPL86 1122  
                             __end_ofPL78 0F8E                               __end_ofPL96 2C5A  
                             __end_ofPL88 030A                               __end_ofPL98 30BE  
                     start_initialization 34F8                                CTMU_read@i 0075  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002B  
                             __end_of_ADC 426A                               __end_of_ISR 00BC  
           USBCtrlTrfRxService@byteToRead 002C                               __end_of_OUT 3D4C  
                       __size_of_USB_init 0018                         __size_of_USB_task 005A  
                  ??_RTCC_adjust_time_dec 0093                    ??_RTCC_adjust_time_inc 0093  
                             _cdc_data_rx 0364                               _cdc_data_tx 03A4  
                       __size_ofi2_memset 002A              __end_of_USBConfigureEndpoint 364A  
                        ?_RTCC_to_caltime 0062                 __size_of_port_button_task 00C4  
                              ?i2___lwdiv 002B           __end_of_USBStdFeatureReqHandler 0F84  
       __end_of_USBCtrlEPAllowStatusStage 3468                     __end_of_software_init 3992  
                __end_of_USBCtrlEPService 2C4E                       settings_auto_stop@i 0091  
                     settings_auto_stop@j 0093                         _integrate_current 3272  
                         ___llmod@divisor 0071       __size_of_settings_integrating_reset 00E0  
                       __size_of_Auto_cut 0094                           ___llmod@counter 0075  
                 settings_led_indicator@i 0091                   settings_led_indicator@j 0093  
                      ?_integrate_current 002B                 ??_USBCtrlEPAllowDataStage 002C  
                             ??_ANALOG_IN 0060                               ??_CDCInitEP 0037  
                          USBDeviceInit@i 0068                             ??_ST7032_init 0071  
                            _ST7032_clear 45A0                             ??_ST7032_task 006F  
                           ??_ST7032_puts 0072                    _pBDTEntryEP0OutCurrent 0016  
                            _ctmu_value_m 011B                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 3366  
                        display_LCD@onoff FBD2                settings_auto_stop@str_1310 007B  
            settings_led_indicator@i_1329 0092                       ringbuf_put_num@temp 0089  
                                ??___lmul 0075                               ?_sleep_task 002B  
                                ??___wmul 007A                       _USBStdGetDscHandler 1EFA  
                                ??_d_to_x 0064                       ??_integrate_current 006D  
             __size_of_terminal_operation 0194                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK1 01FD                               _st7032_flag 0132  
                                ??_memset 0066                  __size_of_ringbuf_put_num 0064  
                __size_of_ringbuf_put_str 003C                    _button_timer_interrupt 1150  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcat 0064                                  ??_strcmp 0064  
                                ??_strcpy 0064                      __end_of_month_length 34F8  
                          _RTCC_from_RTCC 4524                       __end_of_display_LCD 05D2  
                  _USBActiveConfiguration 0029            __end_of_USBStdGetStatusHandler 35E0  
                             ?_print_time 00AA                   __size_of_integrate_time 0024  
                     __end_of_display_dec 3CF8                               __pbssCOMRAM 0001  
                          USB_task@rx_len 0071                             __pcstackBANK0 0060  
                           __pcstackBANK1 0194              __size_of_USBCtrlTrfInHandler 0064  
                    __end_of_ringbuf_init 406E                      ?_USBStdGetDscHandler 002B  
                            _isdigit$6567 0061                         __size_of_data_out 00B0  
                                ?_USB_ISR 002B                 __end_of_integrate_current 32EA  
                    sleep_task@sleep_flag 013B                               ??_CTMU_init 0060  
                             ??_CTMU_read 006F                __end_of_USBWakeFromSuspend 4482  
                             sprintf@flag 00A6                     RTCC_adjust_time_dec@i 0098  
                       __size_of_bootload 0032                               sprintf@prec 009B  
                         _USBStallHandler 41E0                              _pBDTEntryOut 0100  
                   RTCC_adjust_time_inc@i 0098                __end_of_USBCheckCDCRequest 31E2  
                __end_of_caltime_to_epoch 1646                           millis_timer@cnt 011F  
                               _data_item 0021                  __size_of_USBDeviceAttach 0026  
                   __size_ofi2_LED_output 004A                          ??_put_string_usb 006D  
                        ___lwdiv@dividend 007C           __end_of_RTCC_adjust_time_cursor 3732  
                    display_LCD@port_char FA81                                 __pintcode 0008  
         __end_of_RTCC_adjust_time_toggle 4414                             __pmediumconst FA50  
                               __ptext100 45AC                                 __ptext101 17BA  
                                ?___lbdiv 0060                                 __ptext110 2C5A  
                               __ptext102 1FE6                                 __ptext111 28C6  
                               __ptext103 4462                                 __ptext120 40AE  
                               __ptext112 4294                                 __ptext104 43BE  
                               __ptext121 35EA                                 __ptext113 3572  
                               __ptext105 41E0                                 __ptext122 4482  
                               __ptext114 1EFA                                 __ptext106 2BC4  
                               __ptext123 2248                                 __ptext115 0E38  
                               __ptext107 3D96                                 __ptext124 33FC  
                               __ptext116 43E0                                 __ptext108 25A8  
                               __ptext125 30D6                                 __ptext117 3162  
                               __ptext109 3992                                 __ptext126 230A  
                               __ptext118 3A9C                                 __ptext127 23B4  
                               __ptext119 32F6                                 __ptext128 3DE0  
                               __ptext129 3E2A                                  ?___awmod 0060  
                                ?___lbmod 0060                     __size_of_millis_timer 0012  
                                ?___lldiv 0060                                  ?___llmod 006D  
                                ?___lwdiv 007C             __size_of_settings_adjust_time 0082  
                                ?___lwmod 0060                     _is_usb_available$4449 0060  
                  settings_auto_stop@strp 008F                    __end_of_RTCC_from_RTCC 453C  
                     __end_of_ST7032_init 24FE                       __end_of_ST7032_task 1DFE  
                     __end_of_ST7032_puts 3FB0                          ?i2_USBDeviceInit 002B  
                settings_auto_stop@i_1312 0092                               ??_RTCC_init 0091  
                                ?_display 0060                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 29FC                                  ?_isdigit 002B  
                        _epoch_to_caltime 1B04                                  OUT@value 0060  
                    __CFG_RTCOSC$T1OSCREF 000000                          _display_LCD$7095 01D0  
                        _display_LCD$7096 01D4                          _display_LCD$7097 01D8  
                        _display_LCD$7098 01DC                          _display_LCD$7099 01E0  
                               _ctmu_task 4592                                  _ADC_init 4442  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 44A2  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002B  
                         ST7032_task@data 0071                               _ep_data_out 010C  
                        ___lwdiv@quotient 0081                     terminal_at_hand@value 00D0  
                         ST7032_task@wait 0115                                  ?_sprintf 0083  
            __size_of_USBCtrlTrfRxService 008A               __size_of_settings_auto_stop 00FC  
           USBConfigureEndpoint@direction 002B                               ??i2___lwdiv 002F  
                            i2_LED_output 3E2A                       __size_of_sleep_task 009C  
                               data_out@i 00CA                                 data_out@p FBDC  
                               d_to_x@dec 0064                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
            __size_of_USBCtrlTrfTxService 007C                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 007A                ??_USBCtrlEPServiceComplete 002C  
                   __end_of_ctmu_sampling 2772                     __end_of_LED_indicator 2444  
                            _millis_timer 4580                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                       __size_of_print_time 0054  
                   __end_of_ST7032_cursor 4442                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u524_40 2362  
                                i2u524_47 235E                                  i2u526_40 237E  
                                i2u526_47 237A                                  i2u580_40 1F8A  
                                i2u580_47 1F88                 USBCtrlEPService@setup_cnt 0048  
                                i2u577_40 1F40                                  i2u577_47 1F3E  
                                i2u578_40 1F52                                  i2u578_47 1F50  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  i2u894_45 3E3C  
                                i2u894_46 3E40                                  i2u895_40 3E4A  
                                _RCONbits 000FD0                                  i2u897_40 3E56  
                       _display_time_1602 0C8C                                  i2u899_40 3E62  
                           ??_putUSBUSART 0061                                  _UEP0bits 000F26  
      __end_of_settings_integrating_reset 175E                _settings_integrating_reset 167E  
              _USBDeferINDataStagePackets 0128                     terminal_operation@op0 00DC  
                   terminal_operation@op1 00DE                     terminal_operation@op2 00E0  
                   terminal_operation@op3 00E2                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 008A  
                             _display_LCD 0348                             ??_timer3_init 0060  
                           ??_normal_task 00CB                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_1602 00B2  
                             _display_dec 3CB8                      _USBConfigureEndpoint 35EA  
                         ?_RTCC_from_RTCC 0086          __size_of_USBStdFeatureReqHandler 014C  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0076                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                            software_init@i 0084  
          button_timer_interrupt@sw_value 0085                                  _USB_init 44F4  
                                _USB_task 39EE                 __size_of_is_usb_available 0016  
                           ?_CDCTxService 002B                       ??_display_time_1602 00B8  
                            _RemoteWakeup 0126                                  i2_memset 4294  
                       ??_ringbuf_put_num 0088                                ?_ctmu_task 002B  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 4208  
                           ringbuf_put@rb 0068                  ??_settings_led_indicator 0066  
                        ??_ST7032_command 0070                         ___lmul@multiplier 006D  
                        ??_ctmu_set_ratio 0083                               _INTCON2bits 000FF1  
                        _port_button_task 2184                __size_of_integrate_current 0078  
             ??_USBCtrlEPAllowStatusStage 002B               __end_of_USBStdSetCfgHandler 2942  
                        __size_of_USB_ISR 0004                                  _Auto_cut 2504  
                    epoch_to_caltime@year 0089             settings_task@item_change_flag 0099  
                  __size_of_terminal_task 01E6                    __size_of_terminal_time 0218  
                 __size_of_get_string_usb 0034                        __end_of_device_dsc FBD2  
                 ?_USBCtrlTrfSetupHandler 002B                 __end_of_display_time_1602 0DD6  
                 USBStdGetStatusHandler@p 002B                                  __Hrparam 0000  
                             _ST7032_init 245E                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                               _ST7032_task 1D0C  
                           i2LED_output@b 002C                               _ST7032_puts 3F80  
                                _SetupPkt 000D30                             _weekday_3char FBA4  
                  __size_of_hardware_init 0082                     __size_of_month_length 007C  
                      ringbuf_put_str@str 0071                     ?_USBConfigureEndpoint 002B  
                __size_of_caltime_to_RTCC 0084                         ??_USBDeviceAttach 0060  
                        __size_of___lbdiv 0036                          __size_of___awmod 0068  
                        __size_of___lbmod 0028                          __size_of___lldiv 0076  
                        __size_of___llmod 0062                          __size_of___lwdiv 004A  
                        __size_of___lwmod 003E                    __size_of_settings_task 0136  
                     __end_of_ringbuf_pop 2F20                       __end_of_ringbuf_num 302C  
                     __end_of_ringbuf_put 2804                       __end_of_putUSBUSART 44DC  
                             _line_coding 02C5                            _integrate_flag 0130  
                          ??_CDCTxService 0067                            _integrate_time 3F40  
                     __end_of_timer0_init 4240                     __size_of_ringbuf_init 0032  
                     __end_of_timer1_init 3EFE                          __size_of_display 008C  
                              sprintf@len 00A0                       __end_of_timer3_init 42E6  
                              sprintf@val 00A2                       __end_of_normal_task 3272  
                       i2LED_output@value 002B                                strcat@from 0062  
                                _data_out 1C10                          __size_of_isdigit 001E  
                 __size_of_USBDeviceTasks 0110                           ___lwdiv@divisor 007E  
                         ___lwdiv@counter 0080                      timer0_init@prescaler 0061  
                                __ptext10 380C                                  __ptext11 4358  
                                __ptext20 19EC                                  __ptext12 38D2  
                                __ptext21 2B2E                                  __ptext13 3932  
                __end_ofdisplay_LCD@onoff FBDC                                  __ptext30 3272  
                                __ptext22 4402                                  __ptext14 264A  
                                __ptext31 0348                                  __ptext23 13FC  
                                __ptext15 282A                                  __ptext40 0000  
                                __ptext32 0C8C                                  __ptext24 0FD0  
                                __ptext16 31EC                                  __ptext41 44A2  
                                __ptext33 414A                                  __ptext25 36D8  
                                __ptext17 12B2                                  __ptext50 337A  
                                __ptext42 3870                                  __ptext34 3CB8  
                                __ptext26 2184                                  __ptext18 18D4  
                                __ptext51 42BE                                  __ptext43 3B8C  
                                __ptext35 3AEE                                  __ptext27 20B8  
                                __ptext19 167E                                  __ptext60 45A0  
                                __ptext52 3EBA                                  __ptext44 3FFE  
                                __ptext36 3F80                                  __ptext28 3C6E  
                                __ptext61 3EFE                                  __ptext53 4212  
                                __ptext45 2504                                  __ptext37 3FC0  
                                __ptext29 3F40                                  __ptext70 4442  
                                __ptext62 3B3E                                  __ptext54 44F4  
                                __ptext46 430E                                  __ptext38 4422  
                                __ptext71 4592                                  __ptext63 450C  
                                __ptext55 2A96                                  __ptext47 3D02  
                                __ptext39 1C10                                  __ptext80 44C0  
                                __ptext72 26EA                                  __ptext64 1B04  
                                __ptext56 426A                                  __ptext48 44DC  
                                __ptext81 40E4                                  __ptext73 1150  
                                __ptext65 2F2E                                  __ptext57 417C  
                                __ptext49 4240                                  __ptext90 4524  
                                __ptext82 456A                                  __ptext74 3D4C  
                                __ptext66 2CEE                                  __ptext58 245E  
                                __ptext91 1540                                  __ptext83 2E0E  
                                __ptext75 2D7E                                  __ptext67 4554  
                                __ptext59 403C                                  __ptext92 347C  
                                __ptext84 1E06                                  __ptext76 3662  
                                __ptext68 4078                                  __ptext93 42E6  
                                __ptext85 29FC                                  __ptext77 39EE  
                                __ptext69 437A                                  __ptext94 3740  
                                __ptext86 1D0C                                  __ptext78 278A  
                                __ptext95 3BD8                                  __ptext87 2E9E  
                                __ptext79 439C                                  __ptext96 304A  
                                __ptext88 2FBC                                  __ptext97 453C  
                                __ptext89 41AE                                  __ptext99 4580  
                            _SSP1CON2bits 000FC5          __size_of_RTCC_adjust_time_cursor 005A  
               __size_of_terminal_at_hand 004A          __size_of_RTCC_adjust_time_toggle 0012  
                                _bootload 4118                          __size_of_sprintf 02EE  
                              strcpy@from 0062                      terminal_at_hand@hand 00CC  
                           __size_of_atoi 0090            __end_of_USBCtrlTrfSetupHandler 3DD6  
                           __size_of_main 0064                         ?_USBCtrlEPService 002B  
                             data_out@str 00AC                              _month_length 347C  
                       put_string_usb@len 006B                        ??_USBCtrlEPService 0046  
                __size_of_RTCC_from_epoch 0018                       _USBCtrlTrfInHandler 30D6  
                            ??_sleep_task 0075                                  _outPipes 0001  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 0083  
                    _USBCtrlTrfOutHandler 4482                                  int$flags 0054  
                            _ringbuf_init 403C                                  atoi@sign 0080  
               _USBCtrlEPAllowStatusStage 33FC          settings_integrating_reset@i_1346 0095  
                               x_to_d@hex 0061                                  display@i 0065  
                  ??_USBTransferOnePacket 0064                             _terminal_task 064A  
                           _terminal_time 0892                    __end_of_integrate_time 3F64  
               _USBDeferStatusStagePacket 001A                              ??_print_time 00AC  
                CDCTxService@byte_to_send 006A                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 002B                               ??_ctmu_task 0088  
           USBCtrlTrfTxService@byteToSend 002B                                _ST7032_put 3FC0  
                         display_dec@edit 00AD                             _hardware_init 337A  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002B                  USBStdFeatureReqHandler@p 0044  
                        get_quot_rem@quot 0081                 terminal_task@command_init 013C  
                              _LED_output 3C6E                         RTCC_to_caltime@tm 0062  
         __size_of_settings_led_indicator 0108             __size_of_RTCC_adjust_time_dec 0100  
           __size_of_RTCC_adjust_time_inc 010A                                  intlevel2 0000  
                               sprintf@ap 009F                                 sprintf@cp 009D  
                               sprintf@sp 0083                        __end_of_sleep_task 28C6  
                  __size_of_USBDeviceInit 008A                             _settings_flag 0131  
                           _settings_item 00ED   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4402  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0022         ??_USER_USB_CALLBACK_EVENT_HANDLER 003D  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0037           _USER_USB_CALLBACK_EVENT_HANDLER 43E0  
                           _settings_task 12B2                          ___lwmod@dividend 0060  
            i2USBTransferOnePacket@handle 0030                          ___lldiv@dividend 0060  
                     terminal_at_hand@max 00CF                       terminal_at_hand@min 00CE  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 38D2  
              __size_of_display_time_1602 014A                  __end_of_epoch_to_caltime 1BDA  
                __size_of_RTCC_to_caltime 0066                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 128C                __end_of_terminal_operation 0C6E  
                      __end_of_print_time 3A9C                i2USBTransferOnePacket@data 002C  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 002C                     ?_USBCtrlTrfOutHandler 002B  
                             _ringbuf_pop 2E9E                               _ringbuf_num 2FBC  
                             _ringbuf_put 278A                               _putUSBUSART 44C0  
                     _USBCtrlTrfRxService 2248                               _timer0_init 4212  
                      _USBWakeFromSuspend 4462                               _timer1_init 3EBA  
                             _timer3_init 42BE                               _normal_task 31EC  
                          ?_terminal_task 00E5                            ?_terminal_time 00D1  
                 _USBStdFeatureReqHandler 0E38                        _USBCheckCDCRequest 3162  
                     _USBCtrlTrfTxService 230A                           ?_integrate_time 002B  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 0079  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                  __size_of_software_init 0060                                  sprintf@c 00A7  
                                sprintf@f 0085                                  strcat@cp 0064  
                                strcat@to 0060                       ?_USBWakeFromSuspend 002B  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 456A                 settings_led_indicator@str 0067  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 0062  
                       caltime_to_RTCC@tm 0065                         ??_caltime_to_RTCC 0067  
                   ??_USBCtrlTrfInHandler 002C                                  strcpy@cp 0064  
                                strcpy@to 0060                     _USBAlternateInterface 0192  
                         ___lwmod@counter 0064                        terminal_at_hand@tx 00CA  
                     ?_USBCheckCDCRequest 002B                            ?_hardware_init 002B  
               i2USBTransferOnePacket@dir 002B                 i2USBTransferOnePacket@len 002E  
                     USBEnableEndpoint@ep 0036                           _endpoint_number 0022  
            __end_of_settings_adjust_time 2BB0                      ?_USBCtrlTrfRxService 002B  
                           ?_getsUSBUSART 0067                        integrate_current@i 006F  
                ?_USBCtrlEPAllowDataStage 002B                            ?_settings_task 002B  
                          _get_string_usb 40E4                      ?_USBCtrlTrfTxService 002B  
               __end_of_ringbuf_backspace 3924              _USBStatusStageTimeoutCounter 001C  
                    ??_USBWakeFromSuspend 003F                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 1EC6                      ??_USBCheckCDCRequest 002B  
                              _USB_CD_Ptr FA7F                          ??_RTCC_from_RTCC 0088  
