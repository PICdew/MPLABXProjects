

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jan 13 14:00:07 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   159                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   160                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   161                           	dabs	1,0xD00,48,_BDT
   162                           	dabs	1,0xD38,8,_CtrlTrfData
   163                           	dabs	1,0xD30,8,_SetupPkt
   164  0000                     
   165                           	psect	idataBANK1
   166  016F16                     __pidataBANK1:
   167                           	opt stack 0
   168                           
   169                           ;initializer for I2C_LCD_SetCursor@F8685
   170  016F16  00                 	db	0
   171  016F17  40                 	db	64
   172                           
   173                           ;initializer for ST7032_cursor@F8640
   174  016F18  00                 	db	0
   175  016F19  40                 	db	64
   176                           
   177                           ;initializer for epoch_to_caltime@month_cache
   178  016F1A  01                 	db	1
   179                           
   180                           	psect	mediumconst
   181  00FA50                     __pmediumconst:
   182                           	opt stack 0
   183  00FA50  00                 	db	0
   184  00FA51                     _dpowers:
   185                           	opt stack 0
   186  00FA51  0001               	dw	1
   187  00FA53  0000               	dw	0
   188  00FA55  000A               	dw	10
   189  00FA57  0000               	dw	0
   190  00FA59  0064               	dw	100
   191  00FA5B  0000               	dw	0
   192  00FA5D  03E8               	dw	1000
   193  00FA5F  0000               	dw	0
   194  00FA61  2710               	dw	10000
   195  00FA63  0000               	dw	0
   196  00FA65  86A0               	dw	34464
   197  00FA67  0001               	dw	1
   198  00FA69  4240               	dw	16960
   199  00FA6B  000F               	dw	15
   200  00FA6D  9680               	dw	38528
   201  00FA6F  0098               	dw	152
   202  00FA71  E100               	dw	57600
   203  00FA73  05F5               	dw	1525
   204  00FA75  CA00               	dw	51712
   205  00FA77  3B9A               	dw	15258
   206  00FA79                     __end_of_dpowers:
   207                           	opt stack 0
   208  00FA79                     _USB_SD_Ptr:
   209                           	opt stack 0
   210  00FA79  E2                 	db	low _sd000
   211  00FA7A  FB                 	db	high _sd000
   212  00FA7B  3C                 	db	low _sd001
   213  00FA7C  FB                 	db	high _sd001
   214  00FA7D  70                 	db	low _sd002
   215  00FA7E  FB                 	db	high _sd002
   216  00FA7F                     __end_of_USB_SD_Ptr:
   217                           	opt stack 0
   218  00FA7F                     _USB_CD_Ptr:
   219                           	opt stack 0
   220  00FA7F  F9                 	db	low _configDescriptor1
   221  00FA80  FA                 	db	high _configDescriptor1
   222  00FA81                     __end_of_USB_CD_Ptr:
   223                           	opt stack 0
   224  00FA81                     display_LCD@port_char:
   225                           	opt stack 0
   226  00FA81  4C                 	db	76
   227  00FA82  45                 	db	69
   228  00FA83  46                 	db	70
   229  00FA84  54                 	db	84
   230  00FA85  20                 	db	32
   231  00FA86  20                 	db	32
   232  00FA87  20                 	db	32
   233  00FA88  50                 	db	80
   234  00FA89  4F                 	db	79
   235  00FA8A  52                 	db	82
   236  00FA8B  54                 	db	84
   237  00FA8C  00                 	db	0
   238  00FA8D  00                 	db	0
   239  00FA8E  00                 	db	0
   240  00FA8F  00                 	db	0
   241  00FA90  00                 	db	0
   242  00FA91  00                 	db	0
   243  00FA92  00                 	db	0
   244  00FA93  00                 	db	0
   245  00FA94  00                 	db	0
   246  00FA95  43                 	db	67
   247  00FA96  45                 	db	69
   248  00FA97  4E                 	db	78
   249  00FA98  54                 	db	84
   250  00FA99  45                 	db	69
   251  00FA9A  52                 	db	82
   252  00FA9B  20                 	db	32
   253  00FA9C  50                 	db	80
   254  00FA9D  4F                 	db	79
   255  00FA9E  52                 	db	82
   256  00FA9F  54                 	db	84
   257  00FAA0  00                 	db	0
   258  00FAA1  00                 	db	0
   259  00FAA2  00                 	db	0
   260  00FAA3  00                 	db	0
   261  00FAA4  00                 	db	0
   262  00FAA5  00                 	db	0
   263  00FAA6  00                 	db	0
   264  00FAA7  00                 	db	0
   265  00FAA8  00                 	db	0
   266  00FAA9  52                 	db	82
   267  00FAAA  49                 	db	73
   268  00FAAB  47                 	db	71
   269  00FAAC  48                 	db	72
   270  00FAAD  54                 	db	84
   271  00FAAE  20                 	db	32
   272  00FAAF  20                 	db	32
   273  00FAB0  50                 	db	80
   274  00FAB1  4F                 	db	79
   275  00FAB2  52                 	db	82
   276  00FAB3  54                 	db	84
   277  00FAB4  00                 	db	0
   278  00FAB5  00                 	db	0
   279  00FAB6  00                 	db	0
   280  00FAB7  00                 	db	0
   281  00FAB8  00                 	db	0
   282  00FAB9  00                 	db	0
   283  00FABA  00                 	db	0
   284  00FABB  00                 	db	0
   285  00FABC  00                 	db	0
   286  00FABD  4C                 	db	76
   287  00FABE  65                 	db	101
   288  00FABF  66                 	db	102
   289  00FAC0  74                 	db	116
   290  00FAC1  20                 	db	32
   291  00FAC2  20                 	db	32
   292  00FAC3  20                 	db	32
   293  00FAC4  50                 	db	80
   294  00FAC5  6F                 	db	111
   295  00FAC6  72                 	db	114
   296  00FAC7  74                 	db	116
   297  00FAC8  00                 	db	0
   298  00FAC9  00                 	db	0
   299  00FACA  00                 	db	0
   300  00FACB  00                 	db	0
   301  00FACC  00                 	db	0
   302  00FACD  00                 	db	0
   303  00FACE  00                 	db	0
   304  00FACF  00                 	db	0
   305  00FAD0  00                 	db	0
   306  00FAD1  43                 	db	67
   307  00FAD2  65                 	db	101
   308  00FAD3  6E                 	db	110
   309  00FAD4  74                 	db	116
   310  00FAD5  65                 	db	101
   311  00FAD6  72                 	db	114
   312  00FAD7  20                 	db	32
   313  00FAD8  50                 	db	80
   314  00FAD9  6F                 	db	111
   315  00FADA  72                 	db	114
   316  00FADB  74                 	db	116
   317  00FADC  00                 	db	0
   318  00FADD  00                 	db	0
   319  00FADE  00                 	db	0
   320  00FADF  00                 	db	0
   321  00FAE0  00                 	db	0
   322  00FAE1  00                 	db	0
   323  00FAE2  00                 	db	0
   324  00FAE3  00                 	db	0
   325  00FAE4  00                 	db	0
   326  00FAE5  52                 	db	82
   327  00FAE6  69                 	db	105
   328  00FAE7  67                 	db	103
   329  00FAE8  68                 	db	104
   330  00FAE9  74                 	db	116
   331  00FAEA  20                 	db	32
   332  00FAEB  20                 	db	32
   333  00FAEC  50                 	db	80
   334  00FAED  6F                 	db	111
   335  00FAEE  72                 	db	114
   336  00FAEF  74                 	db	116
   337  00FAF0  00                 	db	0
   338  00FAF1  00                 	db	0
   339  00FAF2  00                 	db	0
   340  00FAF3  00                 	db	0
   341  00FAF4  00                 	db	0
   342  00FAF5  00                 	db	0
   343  00FAF6  00                 	db	0
   344  00FAF7  00                 	db	0
   345  00FAF8  00                 	db	0
   346  00FAF9                     __end_ofdisplay_LCD@port_char:
   347                           	opt stack 0
   348  00FAF9                     _configDescriptor1:
   349                           	opt stack 0
   350  00FAF9  09                 	db	9
   351  00FAFA  02                 	db	2
   352  00FAFB  43                 	db	67
   353  00FAFC  00                 	db	0
   354  00FAFD  02                 	db	2
   355  00FAFE  01                 	db	1
   356  00FAFF  00                 	db	0
   357  00FB00  C0                 	db	192
   358  00FB01  32                 	db	50
   359  00FB02  09                 	db	9
   360  00FB03  04                 	db	4
   361  00FB04  00                 	db	0
   362  00FB05  00                 	db	0
   363  00FB06  01                 	db	1
   364  00FB07  02                 	db	2
   365  00FB08  02                 	db	2
   366  00FB09  01                 	db	1
   367  00FB0A  00                 	db	0
   368  00FB0B  05                 	db	5
   369  00FB0C  24                 	db	36
   370  00FB0D  00                 	db	0
   371  00FB0E  10                 	db	16
   372  00FB0F  01                 	db	1
   373  00FB10  04                 	db	4
   374  00FB11  24                 	db	36
   375  00FB12  02                 	db	2
   376  00FB13  02                 	db	2
   377  00FB14  05                 	db	5
   378  00FB15  24                 	db	36
   379  00FB16  06                 	db	6
   380  00FB17  00                 	db	0
   381  00FB18  01                 	db	1
   382  00FB19  05                 	db	5
   383  00FB1A  24                 	db	36
   384  00FB1B  01                 	db	1
   385  00FB1C  00                 	db	0
   386  00FB1D  01                 	db	1
   387  00FB1E  07                 	db	7
   388  00FB1F  05                 	db	5
   389  00FB20  81                 	db	129
   390  00FB21  03                 	db	3
   391  00FB22  08                 	db	8
   392  00FB23  00                 	db	0
   393  00FB24  02                 	db	2
   394  00FB25  09                 	db	9
   395  00FB26  04                 	db	4
   396  00FB27  01                 	db	1
   397  00FB28  00                 	db	0
   398  00FB29  02                 	db	2
   399  00FB2A  0A                 	db	10
   400  00FB2B  00                 	db	0
   401  00FB2C  00                 	db	0
   402  00FB2D  00                 	db	0
   403  00FB2E  07                 	db	7
   404  00FB2F  05                 	db	5
   405  00FB30  02                 	db	2
   406  00FB31  02                 	db	2
   407  00FB32  40                 	db	64
   408  00FB33  00                 	db	0
   409  00FB34  00                 	db	0
   410  00FB35  07                 	db	7
   411  00FB36  05                 	db	5
   412  00FB37  82                 	db	130
   413  00FB38  02                 	db	2
   414  00FB39  40                 	db	64
   415  00FB3A  00                 	db	0
   416  00FB3B  00                 	db	0
   417  00FB3C                     __end_of_configDescriptor1:
   418                           	opt stack 0
   419  00FB3C                     _sd001:
   420                           	opt stack 0
   421  00FB3C  34                 	db	52
   422  00FB3D  03                 	db	3
   423  00FB3E  004D               	dw	77
   424  00FB40  0069               	dw	105
   425  00FB42  0063               	dw	99
   426  00FB44  0072               	dw	114
   427  00FB46  006F               	dw	111
   428  00FB48  0063               	dw	99
   429  00FB4A  0068               	dw	104
   430  00FB4C  0069               	dw	105
   431  00FB4E  0070               	dw	112
   432  00FB50  0020               	dw	32
   433  00FB52  0054               	dw	84
   434  00FB54  0065               	dw	101
   435  00FB56  0063               	dw	99
   436  00FB58  0068               	dw	104
   437  00FB5A  006E               	dw	110
   438  00FB5C  006F               	dw	111
   439  00FB5E  006C               	dw	108
   440  00FB60  006F               	dw	111
   441  00FB62  0067               	dw	103
   442  00FB64  0079               	dw	121
   443  00FB66  0020               	dw	32
   444  00FB68  0049               	dw	73
   445  00FB6A  006E               	dw	110
   446  00FB6C  0063               	dw	99
   447  00FB6E  002E               	dw	46
   448  00FB70                     __end_of_sd001:
   449                           	opt stack 0
   450  00FB70                     _sd002:
   451                           	opt stack 0
   452  00FB70  34                 	db	52
   453  00FB71  03                 	db	3
   454  00FB72  0043               	dw	67
   455  00FB74  0044               	dw	68
   456  00FB76  0043               	dw	67
   457  00FB78  0020               	dw	32
   458  00FB7A  0052               	dw	82
   459  00FB7C  0053               	dw	83
   460  00FB7E  002D               	dw	45
   461  00FB80  0032               	dw	50
   462  00FB82  0033               	dw	51
   463  00FB84  0032               	dw	50
   464  00FB86  0020               	dw	32
   465  00FB88  0045               	dw	69
   466  00FB8A  006D               	dw	109
   467  00FB8C  0075               	dw	117
   468  00FB8E  006C               	dw	108
   469  00FB90  0061               	dw	97
   470  00FB92  0074               	dw	116
   471  00FB94  0069               	dw	105
   472  00FB96  006F               	dw	111
   473  00FB98  006E               	dw	110
   474  00FB9A  0020               	dw	32
   475  00FB9C  0044               	dw	68
   476  00FB9E  0065               	dw	101
   477  00FBA0  006D               	dw	109
   478  00FBA2  006F               	dw	111
   479  00FBA4                     __end_of_sd002:
   480                           	opt stack 0
   481  00FBA4                     _weekday_3char:
   482                           	opt stack 0
   483  00FBA4  53                 	db	83
   484  00FBA5  55                 	db	85
   485  00FBA6  4E                 	db	78
   486  00FBA7  00                 	db	0
   487  00FBA8  4D                 	db	77
   488  00FBA9  4F                 	db	79
   489  00FBAA  4E                 	db	78
   490  00FBAB  00                 	db	0
   491  00FBAC  54                 	db	84
   492  00FBAD  55                 	db	85
   493  00FBAE  45                 	db	69
   494  00FBAF  00                 	db	0
   495  00FBB0  57                 	db	87
   496  00FBB1  45                 	db	69
   497  00FBB2  44                 	db	68
   498  00FBB3  00                 	db	0
   499  00FBB4  54                 	db	84
   500  00FBB5  48                 	db	72
   501  00FBB6  55                 	db	85
   502  00FBB7  00                 	db	0
   503  00FBB8  46                 	db	70
   504  00FBB9  52                 	db	82
   505  00FBBA  49                 	db	73
   506  00FBBB  00                 	db	0
   507  00FBBC  53                 	db	83
   508  00FBBD  41                 	db	65
   509  00FBBE  54                 	db	84
   510  00FBBF  00                 	db	0
   511  00FBC0                     __end_of_weekday_3char:
   512                           	opt stack 0
   513  00FBC0                     _device_dsc:
   514                           	opt stack 0
   515  00FBC0  12                 	db	18
   516  00FBC1  01                 	db	1
   517  00FBC2  0200               	dw	512
   518  00FBC4  02                 	db	2
   519  00FBC5  00                 	db	0
   520  00FBC6  00                 	db	0
   521  00FBC7  08                 	db	8
   522  00FBC8  04D8               	dw	1240
   523  00FBCA  000A               	dw	10
   524  00FBCC  0100               	dw	256
   525  00FBCE  01                 	db	1
   526  00FBCF  02                 	db	2
   527  00FBD0  00                 	db	0
   528  00FBD1  01                 	db	1
   529  00FBD2                     __end_of_device_dsc:
   530                           	opt stack 0
   531  00FBD2                     display_LCD@onoff:
   532                           	opt stack 0
   533  00FBD2  20                 	db	32
   534  00FBD3  4F                 	db	79
   535  00FBD4  46                 	db	70
   536  00FBD5  46                 	db	70
   537  00FBD6  00                 	db	0
   538  00FBD7  20                 	db	32
   539  00FBD8  4F                 	db	79
   540  00FBD9  4E                 	db	78
   541  00FBDA  20                 	db	32
   542  00FBDB  00                 	db	0
   543  00FBDC                     __end_ofdisplay_LCD@onoff:
   544                           	opt stack 0
   545  00FBDC                     data_out@p:
   546                           	opt stack 0
   547  00FBDC  4C                 	db	76
   548  00FBDD  00                 	db	0
   549  00FBDE  43                 	db	67
   550  00FBDF  00                 	db	0
   551  00FBE0  52                 	db	82
   552  00FBE1  00                 	db	0
   553  00FBE2                     __end_ofdata_out@p:
   554                           	opt stack 0
   555  00FBE2                     _sd000:
   556                           	opt stack 0
   557  00FBE2  04                 	db	4
   558  00FBE3  03                 	db	3
   559  00FBE4  0409               	dw	1033
   560  00FBE6                     __end_of_sd000:
   561                           	opt stack 0
   562  0000                     _ANCON0	set	3912
   563  0000                     _ANCON1	set	3913
   564  0000                     _PADCFG1bits	set	3900
   565  0000                     _RTCCAL	set	3902
   566  0000                     _RTCCFGbits	set	3903
   567  0000                     _RTCVALH	set	3899
   568  0000                     _RTCVALL	set	3898
   569  0000                     _T5CONbits	set	3874
   570  0000                     _UADDR	set	3896
   571  0000                     _UCFG	set	3897
   572  0000                     _UEIE	set	3895
   573  0000                     _UEP0bits	set	3878
   574  0000                     _UIE	set	3894
   575  0000                     _UIEbits	set	3894
   576  0000                     _UEP0	set	3878
   577  0000                     _UEP1	set	3879
   578  0000                     _ADRES	set	4035
   579  0000                     _ADCON0bits	set	4034
   580  0000                     _ADCON1bits	set	4033
   581  0000                     _BAUDCON1bits	set	3966
   582  0000                     _CTMUCONH	set	4019
   583  0000                     _CTMUCONHbits	set	4019
   584  0000                     _CTMUCONL	set	4018
   585  0000                     _CTMUCONLbits	set	4018
   586  0000                     _CTMUICON	set	4017
   587  0000                     _EECON2	set	4007
   588  0000                     _INTCON2bits	set	4081
   589  0000                     _INTCONbits	set	4082
   590  0000                     _IPR1bits	set	3999
   591  0000                     _IPR2bits	set	4002
   592  0000                     _IPR5bits	set	3993
   593  0000                     _OSCCONbits	set	4051
   594  0000                     _OSCTUNEbits	set	3995
   595  0000                     _PIE1bits	set	3997
   596  0000                     _PIE2bits	set	4000
   597  0000                     _PIE5bits	set	3985
   598  0000                     _PIR1bits	set	3998
   599  0000                     _PIR2bits	set	4001
   600  0000                     _PIR5bits	set	3992
   601  0000                     _RCONbits	set	4048
   602  0000                     _RCREG1	set	4015
   603  0000                     _RCSTA1bits	set	4012
   604  0000                     _SPBRG1	set	4016
   605  0000                     _SPBRGH1	set	3967
   606  0000                     _SSP1ADD	set	4040
   607  0000                     _SSP1BUF	set	4041
   608  0000                     _SSP1CON1	set	4038
   609  0000                     _SSP1CON1bits	set	4038
   610  0000                     _SSP1CON2	set	4037
   611  0000                     _SSP1CON2bits	set	4037
   612  0000                     _SSP1STAT	set	4039
   613  0000                     _SSP1STATbits	set	4039
   614  0000                     _SSPBUF	set	4041
   615  0000                     _T0CONbits	set	4053
   616  0000                     _T1CONbits	set	4045
   617  0000                     _T3CONbits	set	3961
   618  0000                     _TMR1H	set	4047
   619  0000                     _TRISA	set	3986
   620  0000                     _TRISB	set	3987
   621  0000                     _TRISC	set	3988
   622  0000                     _TXREG1	set	4014
   623  0000                     _TXSTA1bits	set	4013
   624  0000                     _UCON	set	3941
   625  0000                     _UCONbits	set	3941
   626  0000                     _UEIR	set	3939
   627  0000                     _UIR	set	3938
   628  0000                     _UIRbits	set	3938
   629  0000                     _USTAT	set	3940
   630  0000                     _BCL1IF	set	32011
   631  0000                     _LATA5	set	31821
   632  0000                     _LATA6	set	31822
   633  0000                     _LATA7	set	31823
   634  0000                     _LATB2	set	31826
   635  0000                     _LATB6	set	31830
   636  0000                     _LATB7	set	31831
   637  0000                     _LATC2	set	31834
   638  0000                     _SSP1IF	set	31987
   639  00FBE6                     STR_53:
   640  00FBE6  09                 	db	9
   641  00FBE7  2A                 	db	42
   642  00FBE8  2A                 	db	42
   643  00FBE9  2A                 	db	42
   644  00FBEA  2A                 	db	42
   645  00FBEB  2A                 	db	42
   646  00FBEC  2A                 	db	42
   647  00FBED  2A                 	db	42
   648  00FBEE  2A                 	db	42
   649  00FBEF  2A                 	db	42
   650  00FBF0  2A                 	db	42
   651  00FBF1  2A                 	db	42
   652  00FBF2  2A                 	db	42
   653  00FBF3  2A                 	db	42
   654  00FBF4  2A                 	db	42
   655  00FBF5  2A                 	db	42
   656  00FBF6  2A                 	db	42
   657  00FBF7  2A                 	db	42
   658  00FBF8  2A                 	db	42
   659  00FBF9  2A                 	db	42
   660  00FBFA  2A                 	db	42
   661  00FBFB  2A                 	db	42
   662  00FBFC  2A                 	db	42
   663  00FBFD  2A                 	db	42
   664  00FBFE  2A                 	db	42
   665  00FBFF  2A                 	db	42
   666  00FC00  2A                 	db	42
   667  00FC01  2A                 	db	42
   668  00FC02  2A                 	db	42
   669  00FC03  2A                 	db	42
   670  00FC04  0A                 	db	10
   671  00FC05  09                 	db	9
   672  00FC06  2A                 	db	42
   673  00FC07  2A                 	db	42
   674  00FC08  2A                 	db	42
   675  00FC09  2A                 	db	42
   676  00FC0A  20                 	db	32
   677  00FC0B  43                 	db	67	;'C'
   678  00FC0C  68                 	db	104	;'h'
   679  00FC0D  61                 	db	97	;'a'
   680  00FC0E  72                 	db	114	;'r'
   681  00FC0F  67                 	db	103	;'g'
   682  00FC10  65                 	db	101	;'e'
   683  00FC11  20                 	db	32
   684  00FC12  53                 	db	83	;'S'
   685  00FC13  74                 	db	116	;'t'
   686  00FC14  61                 	db	97	;'a'
   687  00FC15  74                 	db	116	;'t'
   688  00FC16  69                 	db	105	;'i'
   689  00FC17  6F                 	db	111	;'o'
   690  00FC18  6E                 	db	110	;'n'
   691  00FC19  20                 	db	32
   692  00FC1A  36                 	db	54	;'6'
   693  00FC1B  2E                 	db	46
   694  00FC1C  31                 	db	49	;'1'
   695  00FC1D  32                 	db	50	;'2'
   696  00FC1E  20                 	db	32
   697  00FC1F  2A                 	db	42
   698  00FC20  2A                 	db	42
   699  00FC21  2A                 	db	42
   700  00FC22  2A                 	db	42
   701  00FC23  0A                 	db	10
   702  00FC24  09                 	db	9
   703  00FC25  2A                 	db	42
   704  00FC26  2A                 	db	42
   705  00FC27  2A                 	db	42
   706  00FC28  2A                 	db	42
   707  00FC29  20                 	db	32
   708  00FC2A  4D                 	db	77	;'M'
   709  00FC2B  61                 	db	97	;'a'
   710  00FC2C  64                 	db	100	;'d'
   711  00FC2D  65                 	db	101	;'e'
   712  00FC2E  20                 	db	32
   713  00FC2F  62                 	db	98	;'b'
   714  00FC30  79                 	db	121	;'y'
   715  00FC31  20                 	db	32
   716  00FC32  40                 	db	64	;'@'
   717  00FC33  52                 	db	82	;'R'
   718  00FC34  79                 	db	121	;'y'
   719  00FC35  6F                 	db	111	;'o'
   720  00FC36  6B                 	db	107	;'k'
   721  00FC37  65                 	db	101	;'e'
   722  00FC38  72                 	db	114	;'r'
   723  00FC39  69                 	db	105	;'i'
   724  00FC3A  31                 	db	49	;'1'
   725  00FC3B  34                 	db	52	;'4'
   726  00FC3C  20                 	db	32
   727  00FC3D  20                 	db	32
   728  00FC3E  2A                 	db	42
   729  00FC3F  2A                 	db	42
   730  00FC40  2A                 	db	42
   731  00FC41  2A                 	db	42
   732  00FC42  0A                 	db	10
   733  00FC43  09                 	db	9
   734  00FC44  2A                 	db	42
   735  00FC45  2A                 	db	42
   736  00FC46  2A                 	db	42
   737  00FC47  2A                 	db	42
   738  00FC48  2A                 	db	42
   739  00FC49  2A                 	db	42
   740  00FC4A  2A                 	db	42
   741  00FC4B  2A                 	db	42
   742  00FC4C  2A                 	db	42
   743  00FC4D  2A                 	db	42
   744  00FC4E  2A                 	db	42
   745  00FC4F  2A                 	db	42
   746  00FC50  2A                 	db	42
   747  00FC51  2A                 	db	42
   748  00FC52  2A                 	db	42
   749  00FC53  2A                 	db	42
   750  00FC54  2A                 	db	42
   751  00FC55  2A                 	db	42
   752  00FC56  2A                 	db	42
   753  00FC57  2A                 	db	42
   754  00FC58  2A                 	db	42
   755  00FC59  2A                 	db	42
   756  00FC5A  2A                 	db	42
   757  00FC5B  2A                 	db	42
   758  00FC5C  2A                 	db	42
   759  00FC5D  2A                 	db	42
   760  00FC5E  2A                 	db	42
   761  00FC5F  2A                 	db	42
   762  00FC60  2A                 	db	42
   763  00FC61  0A                 	db	10
   764  00FC62  0A                 	db	10
   765  00FC63  09                 	db	9
   766  00FC64  70                 	db	112	;'p'
   767  00FC65  72                 	db	114	;'r'
   768  00FC66  69                 	db	105	;'i'
   769  00FC67  6E                 	db	110	;'n'
   770  00FC68  74                 	db	116	;'t'
   771  00FC69  5F                 	db	95	;'_'
   772  00FC6A  74                 	db	116	;'t'
   773  00FC6B  69                 	db	105	;'i'
   774  00FC6C  6D                 	db	109	;'m'
   775  00FC6D  65                 	db	101	;'e'
   776  00FC6E  28                 	db	40
   777  00FC6F  74                 	db	116	;'t'
   778  00FC70  29                 	db	41
   779  00FC71  0A                 	db	10
   780  00FC72  09                 	db	9
   781  00FC73  61                 	db	97	;'a'
   782  00FC74  64                 	db	100	;'d'
   783  00FC75  6A                 	db	106	;'j'
   784  00FC76  75                 	db	117	;'u'
   785  00FC77  73                 	db	115	;'s'
   786  00FC78  74                 	db	116	;'t'
   787  00FC79  5F                 	db	95	;'_'
   788  00FC7A  74                 	db	116	;'t'
   789  00FC7B  69                 	db	105	;'i'
   790  00FC7C  6D                 	db	109	;'m'
   791  00FC7D  65                 	db	101	;'e'
   792  00FC7E  28                 	db	40
   793  00FC7F  61                 	db	97	;'a'
   794  00FC80  74                 	db	116	;'t'
   795  00FC81  29                 	db	41
   796  00FC82  20                 	db	32
   797  00FC83  5B                 	db	91	;'['
   798  00FC84  68                 	db	104	;'h'
   799  00FC85  61                 	db	97	;'a'
   800  00FC86  6E                 	db	110	;'n'
   801  00FC87  64                 	db	100	;'d'
   802  00FC88  3A                 	db	58	;':'
   803  00FC89  79                 	db	121	;'y'
   804  00FC8A  2C                 	db	44
   805  00FC8B  4D                 	db	77	;'M'
   806  00FC8C  2C                 	db	44
   807  00FC8D  64                 	db	100	;'d'
   808  00FC8E  2C                 	db	44
   809  00FC8F  68                 	db	104	;'h'
   810  00FC90  2C                 	db	44
   811  00FC91  6D                 	db	109	;'m'
   812  00FC92  2C                 	db	44
   813  00FC93  73                 	db	115	;'s'
   814  00FC94  5D                 	db	93	;']'
   815  00FC95  20                 	db	32
   816  00FC96  5B                 	db	91	;'['
   817  00FC97  76                 	db	118	;'v'
   818  00FC98  61                 	db	97	;'a'
   819  00FC99  6C                 	db	108	;'l'
   820  00FC9A  75                 	db	117	;'u'
   821  00FC9B  65                 	db	101	;'e'
   822  00FC9C  28                 	db	40
   823  00FC9D  64                 	db	100	;'d'
   824  00FC9E  65                 	db	101	;'e'
   825  00FC9F  63                 	db	99	;'c'
   826  00FCA0  69                 	db	105	;'i'
   827  00FCA1  6D                 	db	109	;'m'
   828  00FCA2  61                 	db	97	;'a'
   829  00FCA3  6C                 	db	108	;'l'
   830  00FCA4  29                 	db	41
   831  00FCA5  5D                 	db	93	;']'
   832  00FCA6  0A                 	db	10
   833  00FCA7  09                 	db	9
   834  00FCA8  73                 	db	115	;'s'
   835  00FCA9  65                 	db	101	;'e'
   836  00FCAA  74                 	db	116	;'t'
   837  00FCAB  74                 	db	116	;'t'
   838  00FCAC  69                 	db	105	;'i'
   839  00FCAD  6E                 	db	110	;'n'
   840  00FCAE  67                 	db	103	;'g'
   841  00FCAF  73                 	db	115	;'s'
   842  00FCB0  28                 	db	40
   843  00FCB1  73                 	db	115	;'s'
   844  00FCB2  65                 	db	101	;'e'
   845  00FCB3  74                 	db	116	;'t'
   846  00FCB4  29                 	db	41
   847  00FCB5  20                 	db	32
   848  00FCB6  5B                 	db	91	;'['
   849  00FCB7  70                 	db	112	;'p'
   850  00FCB8  6F                 	db	111	;'o'
   851  00FCB9  72                 	db	114	;'r'
   852  00FCBA  74                 	db	116	;'t'
   853  00FCBB  3A                 	db	58	;':'
   854  00FCBC  6C                 	db	108	;'l'
   855  00FCBD  65                 	db	101	;'e'
   856  00FCBE  66                 	db	102	;'f'
   857  00FCBF  74                 	db	116	;'t'
   858  00FCC0  28                 	db	40
   859  00FCC1  6C                 	db	108	;'l'
   860  00FCC2  29                 	db	41
   861  00FCC3  2C                 	db	44
   862  00FCC4  63                 	db	99	;'c'
   863  00FCC5  65                 	db	101	;'e'
   864  00FCC6  6E                 	db	110	;'n'
   865  00FCC7  74                 	db	116	;'t'
   866  00FCC8  65                 	db	101	;'e'
   867  00FCC9  72                 	db	114	;'r'
   868  00FCCA  28                 	db	40
   869  00FCCB  63                 	db	99	;'c'
   870  00FCCC  29                 	db	41
   871  00FCCD  2C                 	db	44
   872  00FCCE  72                 	db	114	;'r'
   873  00FCCF  69                 	db	105	;'i'
   874  00FCD0  67                 	db	103	;'g'
   875  00FCD1  68                 	db	104	;'h'
   876  00FCD2  74                 	db	116	;'t'
   877  00FCD3  28                 	db	40
   878  00FCD4  72                 	db	114	;'r'
   879  00FCD5  29                 	db	41
   880  00FCD6  5D                 	db	93	;']'
   881  00FCD7  0A                 	db	10
   882  00FCD8  09                 	db	9
   883  00FCD9  09                 	db	9
   884  00FCDA  5B                 	db	91	;'['
   885  00FCDB  61                 	db	97	;'a'
   886  00FCDC  75                 	db	117	;'u'
   887  00FCDD  74                 	db	116	;'t'
   888  00FCDE  6F                 	db	111	;'o'
   889  00FCDF  5F                 	db	95	;'_'
   890  00FCE0  73                 	db	115	;'s'
   891  00FCE1  74                 	db	116	;'t'
   892  00FCE2  6F                 	db	111	;'o'
   893  00FCE3  70                 	db	112	;'p'
   894  00FCE4  28                 	db	40
   895  00FCE5  61                 	db	97	;'a'
   896  00FCE6  73                 	db	115	;'s'
   897  00FCE7  29                 	db	41
   898  00FCE8  2C                 	db	44
   899  00FCE9  61                 	db	97	;'a'
   900  00FCEA  6C                 	db	108	;'l'
   901  00FCEB  77                 	db	119	;'w'
   902  00FCEC  61                 	db	97	;'a'
   903  00FCED  79                 	db	121	;'y'
   904  00FCEE  73                 	db	115	;'s'
   905  00FCEF  5F                 	db	95	;'_'
   906  00FCF0  6F                 	db	111	;'o'
   907  00FCF1  6E                 	db	110	;'n'
   908  00FCF2  28                 	db	40
   909  00FCF3  61                 	db	97	;'a'
   910  00FCF4  6F                 	db	111	;'o'
   911  00FCF5  29                 	db	41
   912  00FCF6  2C                 	db	44
   913  00FCF7  69                 	db	105	;'i'
   914  00FCF8  6E                 	db	110	;'n'
   915  00FCF9  74                 	db	116	;'t'
   916  00FCFA  65                 	db	101	;'e'
   917  00FCFB  67                 	db	103	;'g'
   918  00FCFC  72                 	db	114	;'r'
   919  00FCFD  61                 	db	97	;'a'
   920  00FCFE  74                 	db	116	;'t'
   921  00FCFF  69                 	db	105	;'i'
   922  00FD00  6E                 	db	110	;'n'
   923  00FD01  67                 	db	103	;'g'
   924  00FD02  5F                 	db	95	;'_'
   925  00FD03  72                 	db	114	;'r'
   926  00FD04  65                 	db	101	;'e'
   927  00FD05  73                 	db	115	;'s'
   928  00FD06  65                 	db	101	;'e'
   929  00FD07  74                 	db	116	;'t'
   930  00FD08  28                 	db	40
   931  00FD09  69                 	db	105	;'i'
   932  00FD0A  72                 	db	114	;'r'
   933  00FD0B  29                 	db	41
   934  00FD0C  5D                 	db	93	;']'
   935  00FD0D  0A                 	db	10
   936  00FD0E  09                 	db	9
   937  00FD0F  6F                 	db	111	;'o'
   938  00FD10  75                 	db	117	;'u'
   939  00FD11  74                 	db	116	;'t'
   940  00FD12  70                 	db	112	;'p'
   941  00FD13  75                 	db	117	;'u'
   942  00FD14  74                 	db	116	;'t'
   943  00FD15  5F                 	db	95	;'_'
   944  00FD16  64                 	db	100	;'d'
   945  00FD17  61                 	db	97	;'a'
   946  00FD18  74                 	db	116	;'t'
   947  00FD19  61                 	db	97	;'a'
   948  00FD1A  28                 	db	40
   949  00FD1B  6F                 	db	111	;'o'
   950  00FD1C  64                 	db	100	;'d'
   951  00FD1D  29                 	db	41
   952  00FD1E  20                 	db	32
   953  00FD1F  3C                 	db	60	;'<'
   954  00FD20  2D                 	db	45
   955  00FD21  20                 	db	32
   956  00FD22  73                 	db	115	;'s'
   957  00FD23  74                 	db	116	;'t'
   958  00FD24  6F                 	db	111	;'o'
   959  00FD25  70                 	db	112	;'p'
   960  00FD26  70                 	db	112	;'p'
   961  00FD27  65                 	db	101	;'e'
   962  00FD28  64                 	db	100	;'d'
   963  00FD29  20                 	db	32
   964  00FD2A  62                 	db	98	;'b'
   965  00FD2B  79                 	db	121	;'y'
   966  00FD2C  20                 	db	32
   967  00FD2D  70                 	db	112	;'p'
   968  00FD2E  72                 	db	114	;'r'
   969  00FD2F  65                 	db	101	;'e'
   970  00FD30  73                 	db	115	;'s'
   971  00FD31  73                 	db	115	;'s'
   972  00FD32  69                 	db	105	;'i'
   973  00FD33  6E                 	db	110	;'n'
   974  00FD34  67                 	db	103	;'g'
   975  00FD35  20                 	db	32
   976  00FD36  74                 	db	116	;'t'
   977  00FD37  68                 	db	104	;'h'
   978  00FD38  65                 	db	101	;'e'
   979  00FD39  20                 	db	32
   980  00FD3A  45                 	db	69	;'E'
   981  00FD3B  6E                 	db	110	;'n'
   982  00FD3C  74                 	db	116	;'t'
   983  00FD3D  65                 	db	101	;'e'
   984  00FD3E  72                 	db	114	;'r'
   985  00FD3F  20                 	db	32
   986  00FD40  6B                 	db	107	;'k'
   987  00FD41  65                 	db	101	;'e'
   988  00FD42  79                 	db	121	;'y'
   989  00FD43  0A                 	db	10
   990  00FD44  09                 	db	9
   991  00FD45  74                 	db	116	;'t'
   992  00FD46  6F                 	db	111	;'o'
   993  00FD47  75                 	db	117	;'u'
   994  00FD48  63                 	db	99	;'c'
   995  00FD49  68                 	db	104	;'h'
   996  00FD4A  20                 	db	32
   997  00FD4B  5B                 	db	91	;'['
   998  00FD4C  72                 	db	114	;'r'
   999  00FD4D  65                 	db	101	;'e'
  1000  00FD4E  73                 	db	115	;'s'
  1001  00FD4F  65                 	db	101	;'e'
  1002  00FD50  74                 	db	116	;'t'
  1003  00FD51  28                 	db	40
  1004  00FD52  72                 	db	114	;'r'
  1005  00FD53  29                 	db	41
  1006  00FD54  2C                 	db	44
  1007  00FD55  69                 	db	105	;'i'
  1008  00FD56  6E                 	db	110	;'n'
  1009  00FD57  69                 	db	105	;'i'
  1010  00FD58  74                 	db	116	;'t'
  1011  00FD59  69                 	db	105	;'i'
  1012  00FD5A  61                 	db	97	;'a'
  1013  00FD5B  6C                 	db	108	;'l'
  1014  00FD5C  69                 	db	105	;'i'
  1015  00FD5D  7A                 	db	122	;'z'
  1016  00FD5E  65                 	db	101	;'e'
  1017  00FD5F  28                 	db	40
  1018  00FD60  69                 	db	105	;'i'
  1019  00FD61  6E                 	db	110	;'n'
  1020  00FD62  69                 	db	105	;'i'
  1021  00FD63  74                 	db	116	;'t'
  1022  00FD64  29                 	db	41
  1023  00FD65  5D                 	db	93	;']'
  1024  00FD66  20                 	db	32
  1025  00FD67  5B                 	db	91	;'['
  1026  00FD68  76                 	db	118	;'v'
  1027  00FD69  61                 	db	97	;'a'
  1028  00FD6A  6C                 	db	108	;'l'
  1029  00FD6B  75                 	db	117	;'u'
  1030  00FD6C  65                 	db	101	;'e'
  1031  00FD6D  28                 	db	40
  1032  00FD6E  25                 	db	37
  1033  00FD6F  29                 	db	41
  1034  00FD70  5D                 	db	93	;']'
  1035  00FD71  0A                 	db	10
  1036  00FD72  0A                 	db	10
  1037  00FD73  09                 	db	9
  1038  00FD74  66                 	db	102	;'f'
  1039  00FD75  6F                 	db	111	;'o'
  1040  00FD76  72                 	db	114	;'r'
  1041  00FD77  20                 	db	32
  1042  00FD78  44                 	db	68	;'D'
  1043  00FD79  65                 	db	101	;'e'
  1044  00FD7A  76                 	db	118	;'v'
  1045  00FD7B  65                 	db	101	;'e'
  1046  00FD7C  6C                 	db	108	;'l'
  1047  00FD7D  6F                 	db	111	;'o'
  1048  00FD7E  70                 	db	112	;'p'
  1049  00FD7F  70                 	db	112	;'p'
  1050  00FD80  65                 	db	101	;'e'
  1051  00FD81  72                 	db	114	;'r'
  1052  00FD82  0A                 	db	10
  1053  00FD83  09                 	db	9
  1054  00FD84  52                 	db	82	;'R'
  1055  00FD85  45                 	db	69	;'E'
  1056  00FD86  53                 	db	83	;'S'
  1057  00FD87  45                 	db	69	;'E'
  1058  00FD88  54                 	db	84	;'T'
  1059  00FD89  28                 	db	40
  1060  00FD8A  29                 	db	41
  1061  00FD8B  3B                 	db	59	;';'
  1062  00FD8C  0A                 	db	10
  1063  00FD8D  09                 	db	9
  1064  00FD8E  62                 	db	98	;'b'
  1065  00FD8F  6F                 	db	111	;'o'
  1066  00FD90  6F                 	db	111	;'o'
  1067  00FD91  74                 	db	116	;'t'
  1068  00FD92  6C                 	db	108	;'l'
  1069  00FD93  6F                 	db	111	;'o'
  1070  00FD94  61                 	db	97	;'a'
  1071  00FD95  64                 	db	100	;'d'
  1072  00FD96  0A                 	db	10
  1073  00FD97  00                 	db	0
  1074  00FD98                     STR_23:
  1075  00FD98  09                 	db	9
  1076  00FD99  32                 	db	50	;'2'
  1077  00FD9A  30                 	db	48	;'0'
  1078  00FD9B  25                 	db	37
  1079  00FD9C  30                 	db	48	;'0'
  1080  00FD9D  32                 	db	50	;'2'
  1081  00FD9E  64                 	db	100	;'d'
  1082  00FD9F  2F                 	db	47
  1083  00FDA0  25                 	db	37
  1084  00FDA1  30                 	db	48	;'0'
  1085  00FDA2  32                 	db	50	;'2'
  1086  00FDA3  64                 	db	100	;'d'
  1087  00FDA4  2F                 	db	47
  1088  00FDA5  25                 	db	37
  1089  00FDA6  30                 	db	48	;'0'
  1090  00FDA7  32                 	db	50	;'2'
  1091  00FDA8  64                 	db	100	;'d'
  1092  00FDA9  28                 	db	40
  1093  00FDAA  25                 	db	37
  1094  00FDAB  73                 	db	115	;'s'
  1095  00FDAC  29                 	db	41
  1096  00FDAD  25                 	db	37
  1097  00FDAE  30                 	db	48	;'0'
  1098  00FDAF  32                 	db	50	;'2'
  1099  00FDB0  64                 	db	100	;'d'
  1100  00FDB1  3A                 	db	58	;':'
  1101  00FDB2  25                 	db	37
  1102  00FDB3  30                 	db	48	;'0'
  1103  00FDB4  32                 	db	50	;'2'
  1104  00FDB5  64                 	db	100	;'d'
  1105  00FDB6  2D                 	db	45
  1106  00FDB7  25                 	db	37
  1107  00FDB8  30                 	db	48	;'0'
  1108  00FDB9  32                 	db	50	;'2'
  1109  00FDBA  64                 	db	100	;'d'
  1110  00FDBB  0A                 	db	10
  1111  00FDBC  00                 	db	0
  1112  00FDBD                     STR_63:
  1113  00FDBD  09                 	db	9
  1114  00FDBE  69                 	db	105	;'i'
  1115  00FDBF  6E                 	db	110	;'n'
  1116  00FDC0  76                 	db	118	;'v'
  1117  00FDC1  61                 	db	97	;'a'
  1118  00FDC2  6C                 	db	108	;'l'
  1119  00FDC3  69                 	db	105	;'i'
  1120  00FDC4  64                 	db	100	;'d'
  1121  00FDC5  20                 	db	32
  1122  00FDC6  64                 	db	100	;'d'
  1123  00FDC7  61                 	db	97	;'a'
  1124  00FDC8  74                 	db	116	;'t'
  1125  00FDC9  61                 	db	97	;'a'
  1126  00FDCA  0A                 	db	10
  1127  00FDCB  09                 	db	9
  1128  00FDCC  69                 	db	105	;'i'
  1129  00FDCD  6E                 	db	110	;'n'
  1130  00FDCE  69                 	db	105	;'i'
  1131  00FDCF  74                 	db	116	;'t'
  1132  00FDD0  69                 	db	105	;'i'
  1133  00FDD1  61                 	db	97	;'a'
  1134  00FDD2  6C                 	db	108	;'l'
  1135  00FDD3  69                 	db	105	;'i'
  1136  00FDD4  7A                 	db	122	;'z'
  1137  00FDD5  69                 	db	105	;'i'
  1138  00FDD6  6E                 	db	110	;'n'
  1139  00FDD7  67                 	db	103	;'g'
  1140  00FDD8  20                 	db	32
  1141  00FDD9  66                 	db	102	;'f'
  1142  00FDDA  61                 	db	97	;'a'
  1143  00FDDB  69                 	db	105	;'i'
  1144  00FDDC  6C                 	db	108	;'l'
  1145  00FDDD  65                 	db	101	;'e'
  1146  00FDDE  64                 	db	100	;'d'
  1147  00FDDF  0A                 	db	10
  1148  00FDE0  00                 	db	0
  1149  00FDE1                     STR_67:
  1150  00FDE1  32                 	db	50	;'2'
  1151  00FDE2  30                 	db	48	;'0'
  1152  00FDE3  25                 	db	37
  1153  00FDE4  30                 	db	48	;'0'
  1154  00FDE5  32                 	db	50	;'2'
  1155  00FDE6  64                 	db	100	;'d'
  1156  00FDE7  2F                 	db	47
  1157  00FDE8  25                 	db	37
  1158  00FDE9  30                 	db	48	;'0'
  1159  00FDEA  32                 	db	50	;'2'
  1160  00FDEB  64                 	db	100	;'d'
  1161  00FDEC  2F                 	db	47
  1162  00FDED  25                 	db	37
  1163  00FDEE  30                 	db	48	;'0'
  1164  00FDEF  32                 	db	50	;'2'
  1165  00FDF0  64                 	db	100	;'d'
  1166  00FDF1  2D                 	db	45
  1167  00FDF2  25                 	db	37
  1168  00FDF3  30                 	db	48	;'0'
  1169  00FDF4  32                 	db	50	;'2'
  1170  00FDF5  64                 	db	100	;'d'
  1171  00FDF6  3A                 	db	58	;':'
  1172  00FDF7  25                 	db	37
  1173  00FDF8  30                 	db	48	;'0'
  1174  00FDF9  32                 	db	50	;'2'
  1175  00FDFA  64                 	db	100	;'d'
  1176  00FDFB  2D                 	db	45
  1177  00FDFC  25                 	db	37
  1178  00FDFD  30                 	db	48	;'0'
  1179  00FDFE  32                 	db	50	;'2'
  1180  00FDFF  64                 	db	100	;'d'
  1181  00FE00  00                 	db	0
  1182  00FE01                     STR_73:
  1183  00FE01  25                 	db	37
  1184  00FE02  30                 	db	48	;'0'
  1185  00FE03  32                 	db	50	;'2'
  1186  00FE04  6C                 	db	108	;'l'
  1187  00FE05  64                 	db	100	;'d'
  1188  00FE06  64                 	db	100	;'d'
  1189  00FE07  20                 	db	32
  1190  00FE08  25                 	db	37
  1191  00FE09  30                 	db	48	;'0'
  1192  00FE0A  32                 	db	50	;'2'
  1193  00FE0B  6C                 	db	108	;'l'
  1194  00FE0C  64                 	db	100	;'d'
  1195  00FE0D  68                 	db	104	;'h'
  1196  00FE0E  20                 	db	32
  1197  00FE0F  25                 	db	37
  1198  00FE10  30                 	db	48	;'0'
  1199  00FE11  32                 	db	50	;'2'
  1200  00FE12  6C                 	db	108	;'l'
  1201  00FE13  64                 	db	100	;'d'
  1202  00FE14  6D                 	db	109	;'m'
  1203  00FE15  20                 	db	32
  1204  00FE16  25                 	db	37
  1205  00FE17  30                 	db	48	;'0'
  1206  00FE18  32                 	db	50	;'2'
  1207  00FE19  6C                 	db	108	;'l'
  1208  00FE1A  64                 	db	100	;'d'
  1209  00FE1B  73                 	db	115	;'s'
  1210  00FE1C  00                 	db	0
  1211  00FE1D                     STR_62:
  1212  00FE1D  09                 	db	9
  1213  00FE1E  69                 	db	105	;'i'
  1214  00FE1F  6E                 	db	110	;'n'
  1215  00FE20  69                 	db	105	;'i'
  1216  00FE21  74                 	db	116	;'t'
  1217  00FE22  69                 	db	105	;'i'
  1218  00FE23  61                 	db	97	;'a'
  1219  00FE24  6C                 	db	108	;'l'
  1220  00FE25  69                 	db	105	;'i'
  1221  00FE26  7A                 	db	122	;'z'
  1222  00FE27  69                 	db	105	;'i'
  1223  00FE28  6E                 	db	110	;'n'
  1224  00FE29  67                 	db	103	;'g'
  1225  00FE2A  20                 	db	32
  1226  00FE2B  63                 	db	99	;'c'
  1227  00FE2C  6F                 	db	111	;'o'
  1228  00FE2D  6D                 	db	109	;'m'
  1229  00FE2E  70                 	db	112	;'p'
  1230  00FE2F  6C                 	db	108	;'l'
  1231  00FE30  65                 	db	101	;'e'
  1232  00FE31  74                 	db	116	;'t'
  1233  00FE32  65                 	db	101	;'e'
  1234  00FE33  0A                 	db	10
  1235  00FE34  00                 	db	0
  1236  00FE35                     STR_68:
  1237  00FE35  20                 	db	32
  1238  00FE36  25                 	db	37
  1239  00FE37  73                 	db	115	;'s'
  1240  00FE38  3A                 	db	58	;':'
  1241  00FE39  25                 	db	37
  1242  00FE3A  30                 	db	48	;'0'
  1243  00FE3B  31                 	db	49	;'1'
  1244  00FE3C  64                 	db	100	;'d'
  1245  00FE3D  2E                 	db	46
  1246  00FE3E  25                 	db	37
  1247  00FE3F  30                 	db	48	;'0'
  1248  00FE40  33                 	db	51	;'3'
  1249  00FE41  64                 	db	100	;'d'
  1250  00FE42  41                 	db	65	;'A'
  1251  00FE43  2C                 	db	44
  1252  00FE44  25                 	db	37
  1253  00FE45  30                 	db	48	;'0'
  1254  00FE46  36                 	db	54	;'6'
  1255  00FE47  6C                 	db	108	;'l'
  1256  00FE48  64                 	db	100	;'d'
  1257  00FE49  6D                 	db	109	;'m'
  1258  00FE4A  41                 	db	65	;'A'
  1259  00FE4B  68                 	db	104	;'h'
  1260  00FE4C  00                 	db	0
  1261  00FE4D                     STR_66:
  1262  00FE4D  09                 	db	9
  1263  00FE4E  73                 	db	115	;'s'
  1264  00FE4F  65                 	db	101	;'e'
  1265  00FE50  74                 	db	116	;'t'
  1266  00FE51  69                 	db	105	;'i'
  1267  00FE52  6E                 	db	110	;'n'
  1268  00FE53  67                 	db	103	;'g'
  1269  00FE54  20                 	db	32
  1270  00FE55  63                 	db	99	;'c'
  1271  00FE56  6F                 	db	111	;'o'
  1272  00FE57  6D                 	db	109	;'m'
  1273  00FE58  70                 	db	112	;'p'
  1274  00FE59  6C                 	db	108	;'l'
  1275  00FE5A  65                 	db	101	;'e'
  1276  00FE5B  74                 	db	116	;'t'
  1277  00FE5C  65                 	db	101	;'e'
  1278  00FE5D  0A                 	db	10
  1279  00FE5E  00                 	db	0
  1280  00FE5F                     STR_105:
  1281  00FE5F  3C                 	db	60	;'<'
  1282  00FE60  2D                 	db	45
  1283  00FE61  20                 	db	32
  1284  00FE62  20                 	db	32
  1285  00FE63  20                 	db	32
  1286  00FE64  53                 	db	83	;'S'
  1287  00FE65  65                 	db	101	;'e'
  1288  00FE66  6C                 	db	108	;'l'
  1289  00FE67  65                 	db	101	;'e'
  1290  00FE68  63                 	db	99	;'c'
  1291  00FE69  74                 	db	116	;'t'
  1292  00FE6A  20                 	db	32
  1293  00FE6B  20                 	db	32
  1294  00FE6C  20                 	db	32
  1295  00FE6D  2D                 	db	45
  1296  00FE6E  3E                 	db	62	;'>'
  1297  00FE6F  00                 	db	0
  1298  00FE70                     STR_111:
  1299  00FE70  54                 	db	84	;'T'
  1300  00FE71  6F                 	db	111	;'o'
  1301  00FE72  67                 	db	103	;'g'
  1302  00FE73  67                 	db	103	;'g'
  1303  00FE74  6C                 	db	108	;'l'
  1304  00FE75  65                 	db	101	;'e'
  1305  00FE76  20                 	db	32
  1306  00FE77  41                 	db	65	;'A'
  1307  00FE78  75                 	db	117	;'u'
  1308  00FE79  74                 	db	116	;'t'
  1309  00FE7A  6F                 	db	111	;'o'
  1310  00FE7B  20                 	db	32
  1311  00FE7C  53                 	db	83	;'S'
  1312  00FE7D  74                 	db	116	;'t'
  1313  00FE7E  6F                 	db	111	;'o'
  1314  00FE7F  70                 	db	112	;'p'
  1315  00FE80  00                 	db	0
  1316  00FE81                     STR_82:
  1317  00FE81  4C                 	db	76	;'L'
  1318  00FE82  65                 	db	101	;'e'
  1319  00FE83  66                 	db	102	;'f'
  1320  00FE84  74                 	db	116	;'t'
  1321  00FE85  20                 	db	32
  1322  00FE86  43                 	db	67	;'C'
  1323  00FE87  65                 	db	101	;'e'
  1324  00FE88  6E                 	db	110	;'n'
  1325  00FE89  74                 	db	116	;'t'
  1326  00FE8A  72                 	db	114	;'r'
  1327  00FE8B  20                 	db	32
  1328  00FE8C  52                 	db	82	;'R'
  1329  00FE8D  69                 	db	105	;'i'
  1330  00FE8E  67                 	db	103	;'g'
  1331  00FE8F  68                 	db	104	;'h'
  1332  00FE90  74                 	db	116	;'t'
  1333  00FE91  00                 	db	0
  1334  00FE92                     STR_45:
  1335  00FE92  43                 	db	67	;'C'
  1336  00FE93  68                 	db	104	;'h'
  1337  00FE94  61                 	db	97	;'a'
  1338  00FE95  72                 	db	114	;'r'
  1339  00FE96  67                 	db	103	;'g'
  1340  00FE97  65                 	db	101	;'e'
  1341  00FE98  20                 	db	32
  1342  00FE99  53                 	db	83	;'S'
  1343  00FE9A  74                 	db	116	;'t'
  1344  00FE9B  61                 	db	97	;'a'
  1345  00FE9C  74                 	db	116	;'t'
  1346  00FE9D  69                 	db	105	;'i'
  1347  00FE9E  6F                 	db	111	;'o'
  1348  00FE9F  6E                 	db	110	;'n'
  1349  00FEA0  20                 	db	32
  1350  00FEA1  36                 	db	54	;'6'
  1351  00FEA2  00                 	db	0
  1352  00FEA3                     STR_109:
  1353  00FEA3  41                 	db	65	;'A'
  1354  00FEA4  64                 	db	100	;'d'
  1355  00FEA5  6A                 	db	106	;'j'
  1356  00FEA6  75                 	db	117	;'u'
  1357  00FEA7  73                 	db	115	;'s'
  1358  00FEA8  74                 	db	116	;'t'
  1359  00FEA9  20                 	db	32
  1360  00FEAA  74                 	db	116	;'t'
  1361  00FEAB  68                 	db	104	;'h'
  1362  00FEAC  65                 	db	101	;'e'
  1363  00FEAD  20                 	db	32
  1364  00FEAE  54                 	db	84	;'T'
  1365  00FEAF  69                 	db	105	;'i'
  1366  00FEB0  6D                 	db	109	;'m'
  1367  00FEB1  65                 	db	101	;'e'
  1368  00FEB2  00                 	db	0
  1369  00FEB3                     STR_113:
  1370  00FEB3  54                 	db	84	;'T'
  1371  00FEB4  6F                 	db	111	;'o'
  1372  00FEB5  67                 	db	103	;'g'
  1373  00FEB6  67                 	db	103	;'g'
  1374  00FEB7  6C                 	db	108	;'l'
  1375  00FEB8  65                 	db	101	;'e'
  1376  00FEB9  20                 	db	32
  1377  00FEBA  4C                 	db	76	;'L'
  1378  00FEBB  45                 	db	69	;'E'
  1379  00FEBC  44                 	db	68	;'D'
  1380  00FEBD  20                 	db	32
  1381  00FEBE  4C                 	db	76	;'L'
  1382  00FEBF  61                 	db	97	;'a'
  1383  00FEC0  6D                 	db	109	;'m'
  1384  00FEC1  70                 	db	112	;'p'
  1385  00FEC2  00                 	db	0
  1386  00FEC3                     STR_50:
  1387  00FEC3  42                 	db	66	;'B'
  1388  00FEC4  6F                 	db	111	;'o'
  1389  00FEC5  6F                 	db	111	;'o'
  1390  00FEC6  74                 	db	116	;'t'
  1391  00FEC7  6C                 	db	108	;'l'
  1392  00FEC8  6F                 	db	111	;'o'
  1393  00FEC9  61                 	db	97	;'a'
  1394  00FECA  64                 	db	100	;'d'
  1395  00FECB  65                 	db	101	;'e'
  1396  00FECC  72                 	db	114	;'r'
  1397  00FECD  20                 	db	32
  1398  00FECE  6D                 	db	109	;'m'
  1399  00FECF  6F                 	db	111	;'o'
  1400  00FED0  64                 	db	100	;'d'
  1401  00FED1  65                 	db	101	;'e'
  1402  00FED2  00                 	db	0
  1403  00FED3                     STR_115:
  1404  00FED3  49                 	db	73	;'I'
  1405  00FED4  6E                 	db	110	;'n'
  1406  00FED5  74                 	db	116	;'t'
  1407  00FED6  65                 	db	101	;'e'
  1408  00FED7  67                 	db	103	;'g'
  1409  00FED8  72                 	db	114	;'r'
  1410  00FED9  61                 	db	97	;'a'
  1411  00FEDA  74                 	db	116	;'t'
  1412  00FEDB  20                 	db	32
  1413  00FEDC  52                 	db	82	;'R'
  1414  00FEDD  65                 	db	101	;'e'
  1415  00FEDE  73                 	db	115	;'s'
  1416  00FEDF  65                 	db	101	;'e'
  1417  00FEE0  74                 	db	116	;'t'
  1418  00FEE1  00                 	db	0
  1419  00FEE2                     STR_47:
  1420  00FEE2  43                 	db	67	;'C'
  1421  00FEE3  68                 	db	104	;'h'
  1422  00FEE4  61                 	db	97	;'a'
  1423  00FEE5  72                 	db	114	;'r'
  1424  00FEE6  67                 	db	103	;'g'
  1425  00FEE7  65                 	db	101	;'e'
  1426  00FEE8  20                 	db	32
  1427  00FEE9  53                 	db	83	;'S'
  1428  00FEEA  74                 	db	116	;'t'
  1429  00FEEB  61                 	db	97	;'a'
  1430  00FEEC  74                 	db	116	;'t'
  1431  00FEED  69                 	db	105	;'i'
  1432  00FEEE  6F                 	db	111	;'o'
  1433  00FEEF  6E                 	db	110	;'n'
  1434  00FEF0  00                 	db	0
  1435  00FEF1                     STR_48:
  1436  00FEF1  57                 	db	87	;'W'
  1437  00FEF2  65                 	db	101	;'e'
  1438  00FEF3  6C                 	db	108	;'l'
  1439  00FEF4  63                 	db	99	;'c'
  1440  00FEF5  6F                 	db	111	;'o'
  1441  00FEF6  6D                 	db	109	;'m'
  1442  00FEF7  65                 	db	101	;'e'
  1443  00FEF8  20                 	db	32
  1444  00FEF9  62                 	db	98	;'b'
  1445  00FEFA  61                 	db	97	;'a'
  1446  00FEFB  63                 	db	99	;'c'
  1447  00FEFC  6B                 	db	107	;'k'
  1448  00FEFD  21                 	db	33
  1449  00FEFE  00                 	db	0
  1450  00FEFF                     STR_75:
  1451  00FEFF  4D                 	db	77	;'M'
  1452  00FF00  61                 	db	97	;'a'
  1453  00FF01  64                 	db	100	;'d'
  1454  00FF02  65                 	db	101	;'e'
  1455  00FF03  20                 	db	32
  1456  00FF04  62                 	db	98	;'b'
  1457  00FF05  79                 	db	121	;'y'
  1458  00FF06  20                 	db	32
  1459  00FF07  4B                 	db	75	;'K'
  1460  00FF08  45                 	db	69	;'E'
  1461  00FF09  52                 	db	82	;'R'
  1462  00FF0A  49                 	db	73	;'I'
  1463  00FF0B  00                 	db	0
  1464  00FF0C                     STR_46:
  1465  00FF0C  53                 	db	83	;'S'
  1466  00FF0D  4C                 	db	76	;'L'
  1467  00FF0E  45                 	db	69	;'E'
  1468  00FF0F  45                 	db	69	;'E'
  1469  00FF10  50                 	db	80	;'P'
  1470  00FF11  49                 	db	73	;'I'
  1471  00FF12  4E                 	db	78	;'N'
  1472  00FF13  47                 	db	71	;'G'
  1473  00FF14  20                 	db	32
  1474  00FF15  4E                 	db	78	;'N'
  1475  00FF16  4F                 	db	79	;'O'
  1476  00FF17  57                 	db	87	;'W'
  1477  00FF18  00                 	db	0
  1478  00FF19                     STR_49:
  1479  00FF19  50                 	db	80	;'P'
  1480  00FF1A  49                 	db	73	;'I'
  1481  00FF1B  43                 	db	67	;'C'
  1482  00FF1C  31                 	db	49	;'1'
  1483  00FF1D  38                 	db	56	;'8'
  1484  00FF1E  46                 	db	70	;'F'
  1485  00FF1F  32                 	db	50	;'2'
  1486  00FF20  37                 	db	55	;'7'
  1487  00FF21  4A                 	db	74	;'J'
  1488  00FF22  35                 	db	53	;'5'
  1489  00FF23  33                 	db	51	;'3'
  1490  00FF24  00                 	db	0
  1491  00FF25                     STR_57:
  1492  00FF25  6F                 	db	111	;'o'
  1493  00FF26  75                 	db	117	;'u'
  1494  00FF27  74                 	db	116	;'t'
  1495  00FF28  70                 	db	112	;'p'
  1496  00FF29  75                 	db	117	;'u'
  1497  00FF2A  74                 	db	116	;'t'
  1498  00FF2B  5F                 	db	95	;'_'
  1499  00FF2C  64                 	db	100	;'d'
  1500  00FF2D  61                 	db	97	;'a'
  1501  00FF2E  74                 	db	116	;'t'
  1502  00FF2F  61                 	db	97	;'a'
  1503  00FF30  00                 	db	0
  1504  00FF31                     STR_28:
  1505  00FF31  61                 	db	97	;'a'
  1506  00FF32  64                 	db	100	;'d'
  1507  00FF33  6A                 	db	106	;'j'
  1508  00FF34  75                 	db	117	;'u'
  1509  00FF35  73                 	db	115	;'s'
  1510  00FF36  74                 	db	116	;'t'
  1511  00FF37  5F                 	db	95	;'_'
  1512  00FF38  74                 	db	116	;'t'
  1513  00FF39  69                 	db	105	;'i'
  1514  00FF3A  6D                 	db	109	;'m'
  1515  00FF3B  65                 	db	101	;'e'
  1516  00FF3C  00                 	db	0
  1517  00FF3D                     STR_71:
  1518  00FF3D  25                 	db	37
  1519  00FF3E  30                 	db	48	;'0'
  1520  00FF3F  31                 	db	49	;'1'
  1521  00FF40  64                 	db	100	;'d'
  1522  00FF41  2E                 	db	46
  1523  00FF42  25                 	db	37
  1524  00FF43  30                 	db	48	;'0'
  1525  00FF44  33                 	db	51	;'3'
  1526  00FF45  64                 	db	100	;'d'
  1527  00FF46  41                 	db	65	;'A'
  1528  00FF47  00                 	db	0
  1529  00FF48                     STR_60:
  1530  00FF48  69                 	db	105	;'i'
  1531  00FF49  6E                 	db	110	;'n'
  1532  00FF4A  69                 	db	105	;'i'
  1533  00FF4B  74                 	db	116	;'t'
  1534  00FF4C  69                 	db	105	;'i'
  1535  00FF4D  61                 	db	97	;'a'
  1536  00FF4E  6C                 	db	108	;'l'
  1537  00FF4F  69                 	db	105	;'i'
  1538  00FF50  7A                 	db	122	;'z'
  1539  00FF51  65                 	db	101	;'e'
  1540  00FF52  00                 	db	0
  1541  00FF53                     STR_25:
  1542  00FF53  70                 	db	112	;'p'
  1543  00FF54  72                 	db	114	;'r'
  1544  00FF55  69                 	db	105	;'i'
  1545  00FF56  6E                 	db	110	;'n'
  1546  00FF57  74                 	db	116	;'t'
  1547  00FF58  5F                 	db	95	;'_'
  1548  00FF59  74                 	db	116	;'t'
  1549  00FF5A  69                 	db	105	;'i'
  1550  00FF5B  6D                 	db	109	;'m'
  1551  00FF5C  65                 	db	101	;'e'
  1552  00FF5D  00                 	db	0
  1553  00FF5E                     STR_104:
  1554  00FF5E  53                 	db	83	;'S'
  1555  00FF5F  65                 	db	101	;'e'
  1556  00FF60  74                 	db	116	;'t'
  1557  00FF61  74                 	db	116	;'t'
  1558  00FF62  69                 	db	105	;'i'
  1559  00FF63  6E                 	db	110	;'n'
  1560  00FF64  67                 	db	103	;'g'
  1561  00FF65  73                 	db	115	;'s'
  1562  00FF66  00                 	db	0
  1563  00FF67                     STR_54:
  1564  00FF67  52                 	db	82	;'R'
  1565  00FF68  45                 	db	69	;'E'
  1566  00FF69  53                 	db	83	;'S'
  1567  00FF6A  45                 	db	69	;'E'
  1568  00FF6B  54                 	db	84	;'T'
  1569  00FF6C  28                 	db	40
  1570  00FF6D  29                 	db	41
  1571  00FF6E  3B                 	db	59	;';'
  1572  00FF6F  00                 	db	0
  1573  00FF70                     STR_55:
  1574  00FF70  62                 	db	98	;'b'
  1575  00FF71  6F                 	db	111	;'o'
  1576  00FF72  6F                 	db	111	;'o'
  1577  00FF73  74                 	db	116	;'t'
  1578  00FF74  6C                 	db	108	;'l'
  1579  00FF75  6F                 	db	111	;'o'
  1580  00FF76  61                 	db	97	;'a'
  1581  00FF77  64                 	db	100	;'d'
  1582  00FF78  00                 	db	0
  1583  00FF79                     STR_15:
  1584  00FF79  20                 	db	32
  1585  00FF7A  20                 	db	32
  1586  00FF7B  20                 	db	32
  1587  00FF7C  20                 	db	32
  1588  00FF7D  20                 	db	32
  1589  00FF7E  20                 	db	32
  1590  00FF7F  20                 	db	32
  1591  00FF80  20                 	db	32
  1592  00FF81  00                 	db	0
  1593  00FF82                     STR_24:
  1594  00FF82  09                 	db	9
  1595  00FF83  65                 	db	101	;'e'
  1596  00FF84  72                 	db	114	;'r'
  1597  00FF85  72                 	db	114	;'r'
  1598  00FF86  6F                 	db	111	;'o'
  1599  00FF87  72                 	db	114	;'r'
  1600  00FF88  0A                 	db	10
  1601  00FF89  00                 	db	0
  1602  00FF8A                     STR_118:
  1603  00FF8A  28                 	db	40
  1604  00FF8B  6E                 	db	110	;'n'
  1605  00FF8C  75                 	db	117	;'u'
  1606  00FF8D  6C                 	db	108	;'l'
  1607  00FF8E  6C                 	db	108	;'l'
  1608  00FF8F  29                 	db	41
  1609  00FF90  00                 	db	0
  1610  00FF91                     STR_40:
  1611  00FF91  73                 	db	115	;'s'
  1612  00FF92  65                 	db	101	;'e'
  1613  00FF93  63                 	db	99	;'c'
  1614  00FF94  6F                 	db	111	;'o'
  1615  00FF95  6E                 	db	110	;'n'
  1616  00FF96  64                 	db	100	;'d'
  1617  00FF97  00                 	db	0
  1618  00FF98                     STR_38:
  1619  00FF98  6D                 	db	109	;'m'
  1620  00FF99  69                 	db	105	;'i'
  1621  00FF9A  6E                 	db	110	;'n'
  1622  00FF9B  75                 	db	117	;'u'
  1623  00FF9C  74                 	db	116	;'t'
  1624  00FF9D  65                 	db	101	;'e'
  1625  00FF9E  00                 	db	0
  1626  00FF9F                     STR_97:
  1627  00FF9F  20                 	db	32
  1628  00FFA0  20                 	db	32
  1629  00FFA1  30                 	db	48	;'0'
  1630  00FFA2  20                 	db	32
  1631  00FFA3  20                 	db	32
  1632  00FFA4  00                 	db	0
  1633  00FFA5                     STR_80:
  1634  00FFA5  20                 	db	32
  1635  00FFA6  4F                 	db	79	;'O'
  1636  00FFA7  4E                 	db	78	;'N'
  1637  00FFA8  20                 	db	32
  1638  00FFA9  20                 	db	32
  1639  00FFAA  00                 	db	0
  1640  00FFAB                     STR_81:
  1641  00FFAB  20                 	db	32
  1642  00FFAC  4F                 	db	79	;'O'
  1643  00FFAD  46                 	db	70	;'F'
  1644  00FFAE  46                 	db	70	;'F'
  1645  00FFAF  20                 	db	32
  1646  00FFB0  00                 	db	0
  1647  00FFB1                     STR_96:
  1648  00FFB1  20                 	db	32
  1649  00FFB2  79                 	db	121	;'y'
  1650  00FFB3  65                 	db	101	;'e'
  1651  00FFB4  74                 	db	116	;'t'
  1652  00FFB5  20                 	db	32
  1653  00FFB6  00                 	db	0
  1654  00FFB7                     STR_70:
  1655  00FFB7  25                 	db	37
  1656  00FFB8  73                 	db	115	;'s'
  1657  00FFB9  20                 	db	32
  1658  00FFBA  25                 	db	37
  1659  00FFBB  73                 	db	115	;'s'
  1660  00FFBC  00                 	db	0
  1661  00FFBD                     STR_59:
  1662  00FFBD  74                 	db	116	;'t'
  1663  00FFBE  6F                 	db	111	;'o'
  1664  00FFBF  75                 	db	117	;'u'
  1665  00FFC0  63                 	db	99	;'c'
  1666  00FFC1  68                 	db	104	;'h'
  1667  00FFC2  00                 	db	0
  1668  00FFC3                     STR_64:
  1669  00FFC3  72                 	db	114	;'r'
  1670  00FFC4  65                 	db	101	;'e'
  1671  00FFC5  73                 	db	115	;'s'
  1672  00FFC6  65                 	db	101	;'e'
  1673  00FFC7  74                 	db	116	;'t'
  1674  00FFC8  00                 	db	0
  1675  00FFC9                     STR_32:
  1676  00FFC9  6D                 	db	109	;'m'
  1677  00FFCA  6F                 	db	111	;'o'
  1678  00FFCB  6E                 	db	110	;'n'
  1679  00FFCC  74                 	db	116	;'t'
  1680  00FFCD  68                 	db	104	;'h'
  1681  00FFCE  00                 	db	0
  1682  00FFCF                     STR_51:
  1683  00FFCF  68                 	db	104	;'h'
  1684  00FFD0  65                 	db	101	;'e'
  1685  00FFD1  6C                 	db	108	;'l'
  1686  00FFD2  70                 	db	112	;'p'
  1687  00FFD3  00                 	db	0
  1688  00FFD4                     STR_61:
  1689  00FFD4  69                 	db	105	;'i'
  1690  00FFD5  6E                 	db	110	;'n'
  1691  00FFD6  69                 	db	105	;'i'
  1692  00FFD7  74                 	db	116	;'t'
  1693  00FFD8  00                 	db	0
  1694  00FFD9                     STR_30:
  1695  00FFD9  79                 	db	121	;'y'
  1696  00FFDA  65                 	db	101	;'e'
  1697  00FFDB  61                 	db	97	;'a'
  1698  00FFDC  72                 	db	114	;'r'
  1699  00FFDD  00                 	db	0
  1700  00FFDE                     STR_36:
  1701  00FFDE  68                 	db	104	;'h'
  1702  00FFDF  6F                 	db	111	;'o'
  1703  00FFE0  75                 	db	117	;'u'
  1704  00FFE1  72                 	db	114	;'r'
  1705  00FFE2  00                 	db	0
  1706  00FFE3                     STR_19:
  1707  00FFE3  08                 	db	8
  1708  00FFE4  20                 	db	32
  1709  00FFE5  08                 	db	8
  1710  00FFE6  00                 	db	0
  1711  00FFE7                     STR_34:
  1712  00FFE7  64                 	db	100	;'d'
  1713  00FFE8  61                 	db	97	;'a'
  1714  00FFE9  79                 	db	121	;'y'
  1715  00FFEA  00                 	db	0
  1716  00FFEB                     STR_56:
  1717  00FFEB  6F                 	db	111	;'o'
  1718  00FFEC  64                 	db	100	;'d'
  1719  00FFED  00                 	db	0
  1720  00FFEE                     STR_27:
  1721  00FFEE  61                 	db	97	;'a'
  1722  00FFEF  74                 	db	116	;'t'
  1723  00FFF0  00                 	db	0
  1724  00FFF1                     STR_52:
  1725  00FFF1  3F                 	db	63	;'?'
  1726  00FFF2  00                 	db	0
  1727  00FFF3                     STR_31:
  1728  00FFF3  4D                 	db	77	;'M'
  1729  00FFF4  00                 	db	0
  1730  00FFF5                     STR_37:
  1731  00FFF5  6D                 	db	109	;'m'
  1732  00FFF6  00                 	db	0
  1733  00FFF7                     STR_13:
  1734  00FFF7  28                 	db	40
  1735  00FFF8  00                 	db	0
  1736  00FFF9                     STR_9:
  1737  00FFF9  2D                 	db	45
  1738  00FFFA  00                 	db	0
  1739  00FFFB                     STR_4:
  1740  00FFFB  2F                 	db	47
  1741  00FFFC  00                 	db	0
  1742  00FFFD                     STR_7:
  1743  00FFFD  3A                 	db	58	;':'
  1744  00FFFE  00                 	db	0
  1745  0000                     
  1746                           ; #config settings
  1747  00FFFF  00                 	db	0	; dummy byte at the end
  1748  0000                     
  1749                           	psect	cinit
  1750  015ACE                     __pcinit:
  1751                           	opt stack 0
  1752  015ACE                     start_initialization:
  1753                           	opt stack 0
  1754  015ACE                     __initialization:
  1755                           	opt stack 0
  1756                           
  1757                           ; Clear objects allocated to BIGRAMl (1300 bytes)
  1758  015ACE  EE06  F069         	lfsr	0,__pbssBIGRAMl
  1759  015AD2  EE15 F014          	lfsr	1,1300
  1760  015AD6                     clear_0:
  1761  015AD6  6AEE               	clrf	postinc0,c
  1762  015AD8  50E5               	movf	postdec1,w,c
  1763  015ADA  50E1               	movf	fsr1l,w,c
  1764  015ADC  E1FC               	bnz	clear_0
  1765  015ADE  50E2               	movf	fsr1h,w,c
  1766  015AE0  E1FA               	bnz	clear_0
  1767                           
  1768                           ; Clear objects allocated to BANK5 (200 bytes)
  1769  015AE2  EE05  F000         	lfsr	0,__pbssBANK5
  1770  015AE6  0EC8               	movlw	200
  1771  015AE8                     clear_1:
  1772  015AE8  6AEE               	clrf	postinc0,c
  1773  015AEA  06E8               	decf	wreg,f,c
  1774  015AEC  E1FD               	bnz	clear_1
  1775                           
  1776                           ; Clear objects allocated to BANK4 (200 bytes)
  1777  015AEE  EE04  F000         	lfsr	0,__pbssBANK4
  1778  015AF2  0EC8               	movlw	200
  1779  015AF4                     clear_2:
  1780  015AF4  6AEE               	clrf	postinc0,c
  1781  015AF6  06E8               	decf	wreg,f,c
  1782  015AF8  E1FD               	bnz	clear_2
  1783                           
  1784                           ; Clear objects allocated to BANK3 (256 bytes)
  1785  015AFA  EE03  F000         	lfsr	0,__pbssBANK3
  1786  015AFE  EE11 F000          	lfsr	1,256
  1787  015B02                     clear_3:
  1788  015B02  6AEE               	clrf	postinc0,c
  1789  015B04  50E5               	movf	postdec1,w,c
  1790  015B06  50E1               	movf	fsr1l,w,c
  1791  015B08  E1FC               	bnz	clear_3
  1792  015B0A  50E2               	movf	fsr1h,w,c
  1793  015B0C  E1FA               	bnz	clear_3
  1794                           
  1795                           ; Clear objects allocated to BANK2 (206 bytes)
  1796  015B0E  EE02  F000         	lfsr	0,__pbssBANK2
  1797  015B12  0ECE               	movlw	206
  1798  015B14                     clear_4:
  1799  015B14  6AEE               	clrf	postinc0,c
  1800  015B16  06E8               	decf	wreg,f,c
  1801  015B18  E1FD               	bnz	clear_4
  1802                           
  1803                           ; Clear objects allocated to BANK1 (146 bytes)
  1804  015B1A  EE01  F000         	lfsr	0,__pbssBANK1
  1805  015B1E  0E92               	movlw	146
  1806  015B20                     clear_5:
  1807  015B20  6AEE               	clrf	postinc0,c
  1808  015B22  06E8               	decf	wreg,f,c
  1809  015B24  E1FD               	bnz	clear_5
  1810                           
  1811                           ; Clear objects allocated to BANK0 (26 bytes)
  1812  015B26  EE00  F0E6         	lfsr	0,__pbssBANK0
  1813  015B2A  0E1A               	movlw	26
  1814  015B2C                     clear_6:
  1815  015B2C  6AEE               	clrf	postinc0,c
  1816  015B2E  06E8               	decf	wreg,f,c
  1817  015B30  E1FD               	bnz	clear_6
  1818                           
  1819                           ; Clear objects allocated to COMRAM (44 bytes)
  1820  015B32  EE00  F001         	lfsr	0,__pbssCOMRAM
  1821  015B36  0E2C               	movlw	44
  1822  015B38                     clear_7:
  1823  015B38  6AEE               	clrf	postinc0,c
  1824  015B3A  06E8               	decf	wreg,f,c
  1825  015B3C  E1FD               	bnz	clear_7
  1826                           
  1827                           ; Initialize objects allocated to BANK1 (5 bytes)
  1828                           ; load TBLPTR registers with __pidataBANK1
  1829  015B3E  0E16               	movlw	low __pidataBANK1
  1830  015B40  6EF6               	movwf	tblptrl,c
  1831  015B42  0E6F               	movlw	high __pidataBANK1
  1832  015B44  6EF7               	movwf	tblptrh,c
  1833  015B46  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1834  015B48  6EF8               	movwf	tblptru,c
  1835  015B4A  EE01  F0E2         	lfsr	0,__pdataBANK1
  1836  015B4E  EE10 F005          	lfsr	1,5
  1837  015B52                     copy_data0:
  1838  015B52  0009               	tblrd		*+
  1839  015B54  CFF5 FFEE          	movff	tablat,postinc0
  1840  015B58  50E5               	movf	postdec1,w,c
  1841  015B5A  50E1               	movf	fsr1l,w,c
  1842  015B5C  E1FA               	bnz	copy_data0
  1843  015B5E                     end_of_initialization:
  1844                           	opt stack 0
  1845  015B5E                     __end_of__initialization:
  1846                           	opt stack 0
  1847  015B5E  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1848  015B60  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1849  015B62  0100               	movlb	0
  1850  015B64  EFDE  F0AF         	goto	_main	;jump to C main() function
  1851                           tblptru	equ	0xFF8
  1852                           tblptrh	equ	0xFF7
  1853                           tblptrl	equ	0xFF6
  1854                           tablat	equ	0xFF5
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec1	equ	0xFE5
  1858                           fsr1h	equ	0xFE2
  1859                           fsr1l	equ	0xFE1
  1860                           
  1861                           	psect	bssCOMRAM
  1862  000001                     __pbssCOMRAM:
  1863                           	opt stack 0
  1864  000001                     _ep_data_in:
  1865                           	opt stack 0
  1866  000001                     	ds	3
  1867  000004                     _ep_data_out:
  1868                           	opt stack 0
  1869  000004                     	ds	3
  1870  000007                     _CDCDataOutHandle:
  1871                           	opt stack 0
  1872  000007                     	ds	2
  1873  000009                     _pBDTEntryEP0OutCurrent:
  1874                           	opt stack 0
  1875  000009                     	ds	2
  1876  00000B                     _pBDTEntryEP0OutNext:
  1877                           	opt stack 0
  1878  00000B                     	ds	2
  1879  00000D                     _BothEP0OutUOWNsSet:
  1880                           	opt stack 0
  1881  00000D                     	ds	1
  1882  00000E                     _I2C_sent_flag:
  1883                           	opt stack 0
  1884  00000E                     	ds	1
  1885  00000F                     _RemoteWakeup:
  1886                           	opt stack 0
  1887  00000F                     	ds	1
  1888  000010                     _USBDeferINDataStagePackets:
  1889                           	opt stack 0
  1890  000010                     	ds	1
  1891  000011                     _USBDeferOUTDataStagePackets:
  1892                           	opt stack 0
  1893  000011                     	ds	1
  1894  000012                     _USBDeferStatusStagePacket:
  1895                           	opt stack 0
  1896  000012                     	ds	1
  1897  000013                     _USBDeviceState:
  1898                           	opt stack 0
  1899  000013                     	ds	1
  1900  000014                     _USBStatusStageEnabledFlag1:
  1901                           	opt stack 0
  1902  000014                     	ds	1
  1903  000015                     _USBStatusStageEnabledFlag2:
  1904                           	opt stack 0
  1905  000015                     	ds	1
  1906  000016                     _USBStatusStageTimeoutCounter:
  1907                           	opt stack 0
  1908  000016                     	ds	1
  1909  000017                     _cdc_mem_type:
  1910                           	opt stack 0
  1911  000017                     	ds	1
  1912  000018                     _cdc_rx_len:
  1913                           	opt stack 0
  1914  000018                     	ds	1
  1915  000019                     _cdc_trf_state:
  1916                           	opt stack 0
  1917  000019                     	ds	1
  1918  00001A                     _cdc_tx_len:
  1919                           	opt stack 0
  1920  00001A                     	ds	1
  1921  00001B                     _controlTransferState:
  1922                           	opt stack 0
  1923  00001B                     	ds	1
  1924  00001C                     _ctmu_ratio:
  1925                           	opt stack 0
  1926  00001C                     	ds	1
  1927  00001D                     _data_item:
  1928                           	opt stack 0
  1929  00001D                     	ds	1
  1930  00001E                     _endpoint_number:
  1931                           	opt stack 0
  1932  00001E                     	ds	1
  1933  00001F                     _print_item:
  1934                           	opt stack 0
  1935  00001F                     	ds	1
  1936  000020                     _settings_item:
  1937                           	opt stack 0
  1938  000020                     	ds	1
  1939  000021                     _shortPacketStatus:
  1940                           	opt stack 0
  1941  000021                     	ds	1
  1942  000022                     _time_change_flag:
  1943                           	opt stack 0
  1944  000022                     	ds	1
  1945  000023                     _lcd_tx:
  1946                           	opt stack 0
  1947  000023                     	ds	8
  1948  00002B                     _USBActiveConfiguration:
  1949                           	opt stack 0
  1950  00002B                     	ds	1
  1951  00002C                     _USTATcopy:
  1952                           	opt stack 0
  1953  00002C                     	ds	1
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           
  1964                           	psect	bssBANK0
  1965  0000E6                     __pbssBANK0:
  1966                           	opt stack 0
  1967  0000E6                     _outPipes:
  1968                           	opt stack 0
  1969  0000E6                     	ds	9
  1970  0000EF                     _inPipes:
  1971                           	opt stack 0
  1972  0000EF                     	ds	6
  1973  0000F5                     _pBDTEntryIn:
  1974                           	opt stack 0
  1975  0000F5                     	ds	6
  1976  0000FB                     _print_port:
  1977                           	opt stack 0
  1978  0000FB                     	ds	1
  1979  0000FC                     _ctmu_m:
  1980                           	opt stack 0
  1981  0000FC                     	ds	4
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           postdec1	equ	0xFE5
  1989                           fsr1h	equ	0xFE2
  1990                           fsr1l	equ	0xFE1
  1991                           
  1992                           	psect	bssBANK1
  1993  000100                     __pbssBANK1:
  1994                           	opt stack 0
  1995  000100                     _pBDTEntryOut:
  1996                           	opt stack 0
  1997  000100                     	ds	6
  1998  000106                     _pCDCDst:
  1999                           	opt stack 0
  2000  000106                     	ds	3
  2001  000109                     _pCDCSrc:
  2002                           	opt stack 0
  2003  000109                     	ds	3
  2004  00010C                     ST7032_task@wait:
  2005                           	opt stack 0
  2006  00010C                     	ds	2
  2007  00010E                     _CDCDataInHandle:
  2008                           	opt stack 0
  2009  00010E                     	ds	2
  2010  000110                     _ctmu_value_m:
  2011                           	opt stack 0
  2012  000110                     	ds	2
  2013  000112                     _pDst:
  2014                           	opt stack 0
  2015  000112                     	ds	2
  2016  000114                     millis_timer@cnt:
  2017                           	opt stack 0
  2018  000114                     	ds	2
  2019  000116                     ISR@cnt:
  2020                           	opt stack 0
  2021  000116                     	ds	1
  2022  000117                     ISR@cnt_t1:
  2023                           	opt stack 0
  2024  000117                     	ds	1
  2025  000118                     RTCC_task@prev_halfsec:
  2026                           	opt stack 0
  2027  000118                     	ds	1
  2028  000119                     ST7032_task@st7032_state:
  2029                           	opt stack 0
  2030  000119                     	ds	1
  2031  00011A                     _I2C_busy:
  2032                           	opt stack 0
  2033  00011A                     	ds	1
  2034  00011B                     _I2C_cfct_flag:
  2035                           	opt stack 0
  2036  00011B                     	ds	1
  2037  00011C                     _USBBusIsSuspended:
  2038                           	opt stack 0
  2039  00011C                     	ds	1
  2040  00011D                     _control_signal_bitmap:
  2041                           	opt stack 0
  2042  00011D                     	ds	1
  2043  00011E                     _ctmu_sampling_flag:
  2044                           	opt stack 0
  2045  00011E                     	ds	1
  2046  00011F                     _cut_time_flag:
  2047                           	opt stack 0
  2048  00011F                     	ds	1
  2049  000120                     _display_flag:
  2050                           	opt stack 0
  2051  000120                     	ds	1
  2052  000121                     _integrate_flag:
  2053                           	opt stack 0
  2054  000121                     	ds	1
  2055  000122                     _settings_flag:
  2056                           	opt stack 0
  2057  000122                     	ds	1
  2058  000123                     _st7032_state:
  2059                           	opt stack 0
  2060  000123                     	ds	1
  2061  000124                     _terminal_data_out:
  2062                           	opt stack 0
  2063  000124                     	ds	1
  2064  000125                     _terminal_data_out_flag:
  2065                           	opt stack 0
  2066  000125                     	ds	1
  2067  000126                     epoch_to_caltime@year_cache:
  2068                           	opt stack 0
  2069  000126                     	ds	1
  2070  000127                     settings_adjust_time@state:
  2071                           	opt stack 0
  2072  000127                     	ds	1
  2073  000128                     settings_auto_stop@state:
  2074                           	opt stack 0
  2075  000128                     	ds	1
  2076  000129                     settings_integrating_reset@state:
  2077                           	opt stack 0
  2078  000129                     	ds	1
  2079  00012A                     settings_led_indicator@state:
  2080                           	opt stack 0
  2081  00012A                     	ds	1
  2082  00012B                     settings_task@settings_state:
  2083                           	opt stack 0
  2084  00012B                     	ds	1
  2085  00012C                     sleep_task@sleep_flag:
  2086                           	opt stack 0
  2087  00012C                     	ds	1
  2088  00012D                     terminal_task@command_init:
  2089                           	opt stack 0
  2090  00012D                     	ds	1
  2091  00012E                     _port:
  2092                           	opt stack 0
  2093  00012E                     	ds	69
  2094  000173                     _now:
  2095                           	opt stack 0
  2096  000173                     	ds	14
  2097  000181                     terminal_task@command:
  2098                           	opt stack 0
  2099  000181                     	ds	8
  2100  000189                     _line_coding:
  2101                           	opt stack 0
  2102  000189                     	ds	7
  2103  000190                     _USBAlternateInterface:
  2104                           	opt stack 0
  2105  000190                     	ds	2
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           postinc0	equ	0xFEE
  2111                           wreg	equ	0xFE8
  2112                           postdec1	equ	0xFE5
  2113                           fsr1h	equ	0xFE2
  2114                           fsr1l	equ	0xFE1
  2115                           
  2116                           	psect	dataBANK1
  2117  0001E2                     __pdataBANK1:
  2118                           	opt stack 0
  2119  0001E2                     I2C_LCD_SetCursor@F8685:
  2120                           	opt stack 0
  2121  0001E2                     	ds	2
  2122  0001E4                     ST7032_cursor@F8640:
  2123                           	opt stack 0
  2124  0001E4                     	ds	2
  2125  0001E6                     epoch_to_caltime@month_cache:
  2126                           	opt stack 0
  2127  0001E6                     	ds	1
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           postdec1	equ	0xFE5
  2135                           fsr1h	equ	0xFE2
  2136                           fsr1l	equ	0xFE1
  2137                           
  2138                           	psect	bssBANK2
  2139  000200                     __pbssBANK2:
  2140                           	opt stack 0
  2141  000200                     _cdc_notice:
  2142                           	opt stack 0
  2143  000200                     	ds	10
  2144  00020A                     _BaudRateGen:
  2145                           	opt stack 0
  2146  00020A                     	ds	4
  2147  00020E                     _ms:
  2148                           	opt stack 0
  2149  00020E                     	ds	4
  2150  000212                     LED_indicator@cnt:
  2151                           	opt stack 0
  2152  000212                     	ds	3
  2153  000215                     LED_indicator@cntf:
  2154                           	opt stack 0
  2155  000215                     	ds	3
  2156  000218                     epoch_to_caltime@day_cache:
  2157                           	opt stack 0
  2158  000218                     	ds	2
  2159  00021A                     _display_char:
  2160                           	opt stack 0
  2161  00021A                     	ds	40
  2162  000242                     terminal_task@op0:
  2163                           	opt stack 0
  2164  000242                     	ds	25
  2165  00025B                     terminal_task@op1:
  2166                           	opt stack 0
  2167  00025B                     	ds	25
  2168  000274                     terminal_task@op2:
  2169                           	opt stack 0
  2170  000274                     	ds	25
  2171  00028D                     terminal_task@op3:
  2172                           	opt stack 0
  2173  00028D                     	ds	25
  2174  0002A6                     _dummy_encapsulated_cmd_response:
  2175                           	opt stack 0
  2176  0002A6                     	ds	8
  2177  0002AE                     _uart_rx:
  2178                           	opt stack 0
  2179  0002AE                     	ds	8
  2180  0002B6                     _uart_tx:
  2181                           	opt stack 0
  2182  0002B6                     	ds	8
  2183  0002BE                     _usb_rx:
  2184                           	opt stack 0
  2185  0002BE                     	ds	8
  2186  0002C6                     _usb_tx:
  2187                           	opt stack 0
  2188  0002C6                     	ds	8
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1h	equ	0xFE2
  2197                           fsr1l	equ	0xFE1
  2198                           
  2199                           	psect	bssBANK3
  2200  000300                     __pbssBANK3:
  2201                           	opt stack 0
  2202  000300                     _cdc_data_rx:
  2203                           	opt stack 0
  2204  000300                     	ds	64
  2205  000340                     _cdc_data_tx:
  2206                           	opt stack 0
  2207  000340                     	ds	64
  2208  000380                     _readBuffer:
  2209                           	opt stack 0
  2210  000380                     	ds	64
  2211  0003C0                     _writeBuffer:
  2212                           	opt stack 0
  2213  0003C0                     	ds	64
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           postinc0	equ	0xFEE
  2219                           wreg	equ	0xFE8
  2220                           postdec1	equ	0xFE5
  2221                           fsr1h	equ	0xFE2
  2222                           fsr1l	equ	0xFE1
  2223                           
  2224                           	psect	bssBANK4
  2225  000400                     __pbssBANK4:
  2226                           	opt stack 0
  2227  000400                     UART_buffer_init@uartrx:
  2228                           	opt stack 0
  2229  000400                     	ds	100
  2230  000464                     USB_CDC_buffer_init@rxbuf:
  2231                           	opt stack 0
  2232  000464                     	ds	100
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postdec1	equ	0xFE5
  2240                           fsr1h	equ	0xFE2
  2241                           fsr1l	equ	0xFE1
  2242                           
  2243                           	psect	bssBANK5
  2244  000500                     __pbssBANK5:
  2245                           	opt stack 0
  2246  000500                     ST7032_init@buf:
  2247                           	opt stack 0
  2248  000500                     	ds	200
  2249                           tblptru	equ	0xFF8
  2250                           tblptrh	equ	0xFF7
  2251                           tblptrl	equ	0xFF6
  2252                           tablat	equ	0xFF5
  2253                           postinc0	equ	0xFEE
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           fsr1h	equ	0xFE2
  2257                           fsr1l	equ	0xFE1
  2258                           
  2259                           	psect	bssBIGRAMl
  2260  000669                     __pbssBIGRAMl:
  2261                           	opt stack 0
  2262  000669                     USB_CDC_buffer_init@txbuf:
  2263                           	opt stack 0
  2264  000669                     	ds	800
  2265  000989                     UART_buffer_init@uarttx:
  2266                           	opt stack 0
  2267  000989                     	ds	500
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           postdec1	equ	0xFE5
  2275                           fsr1h	equ	0xFE2
  2276                           fsr1l	equ	0xFE1
  2277                           
  2278                           	psect	cstackBANK6
  2279  000600                     __pcstackBANK6:
  2280                           	opt stack 0
  2281  000600                     terminal_task@buf:
  2282                           	opt stack 0
  2283                           
  2284                           ; 100 bytes @ 0x0
  2285  000600                     	ds	100
  2286  000664                     _terminal_task$7051:
  2287                           	opt stack 0
  2288                           
  2289                           ; 2 bytes @ 0x64
  2290  000664                     	ds	2
  2291  000666                     terminal_task@i_4555:
  2292                           	opt stack 0
  2293                           
  2294                           ; 1 bytes @ 0x66
  2295  000666                     	ds	1
  2296  000667                     terminal_task@ascii:
  2297                           	opt stack 0
  2298                           
  2299                           ; 1 bytes @ 0x67
  2300  000667                     	ds	1
  2301  000668                     terminal_task@i:
  2302                           	opt stack 0
  2303                           
  2304                           ; 1 bytes @ 0x68
  2305  000668                     	ds	1
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           postdec1	equ	0xFE5
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           
  2316                           	psect	cstackBANK1
  2317  000192                     __pcstackBANK1:
  2318                           	opt stack 0
  2319  000192                     terminal_task@tx:
  2320                           	opt stack 0
  2321  000192                     display_LCD@str:
  2322                           	opt stack 0
  2323                           
  2324                           ; 40 bytes @ 0x0
  2325  000192                     	ds	2
  2326  000194                     terminal_task@rx:
  2327                           	opt stack 0
  2328                           
  2329                           ; 2 bytes @ 0x2
  2330  000194                     	ds	2
  2331  000196                     ??_terminal_task:
  2332                           
  2333                           ; 0 bytes @ 0x4
  2334  000196                     	ds	36
  2335  0001BA                     display_LCD@str_5618:
  2336                           	opt stack 0
  2337                           
  2338                           ; 20 bytes @ 0x28
  2339  0001BA                     	ds	20
  2340  0001CE                     _display_LCD$7053:
  2341                           	opt stack 0
  2342                           
  2343                           ; 4 bytes @ 0x3C
  2344  0001CE                     	ds	4
  2345  0001D2                     _display_LCD$7054:
  2346                           	opt stack 0
  2347                           
  2348                           ; 4 bytes @ 0x40
  2349  0001D2                     	ds	4
  2350  0001D6                     _display_LCD$7055:
  2351                           	opt stack 0
  2352                           
  2353                           ; 4 bytes @ 0x44
  2354  0001D6                     	ds	4
  2355  0001DA                     _display_LCD$7056:
  2356                           	opt stack 0
  2357                           
  2358                           ; 4 bytes @ 0x48
  2359  0001DA                     	ds	4
  2360  0001DE                     _display_LCD$7057:
  2361                           	opt stack 0
  2362                           
  2363                           ; 4 bytes @ 0x4C
  2364  0001DE                     	ds	4
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           postinc0	equ	0xFEE
  2370                           wreg	equ	0xFE8
  2371                           postdec1	equ	0xFE5
  2372                           fsr1h	equ	0xFE2
  2373                           fsr1l	equ	0xFE1
  2374                           
  2375                           	psect	cstackBANK0
  2376  000060                     __pcstackBANK0:
  2377                           	opt stack 0
  2378  000060                     ??_isdigit:
  2379  000060                     ??_I2C_idle_check:
  2380  000060                     ??_timer0_init:
  2381  000060                     ??_timer3_init:
  2382  000060                     ??_x_to_d:
  2383  000060                     ?_strcmp:
  2384                           	opt stack 0
  2385  000060                     ?_USBTransferOnePacket:
  2386                           	opt stack 0
  2387  000060                     ?_ADC:
  2388                           	opt stack 0
  2389  000060                     ?_ringbuf_num:
  2390                           	opt stack 0
  2391  000060                     ?___awdiv:
  2392                           	opt stack 0
  2393  000060                     ?___awmod:
  2394                           	opt stack 0
  2395  000060                     ?___lwmod:
  2396                           	opt stack 0
  2397  000060                     ?___lldiv:
  2398                           	opt stack 0
  2399  000060                     USBTransferOnePacket@dir:
  2400                           	opt stack 0
  2401  000060                     I2C_send@data:
  2402                           	opt stack 0
  2403  000060                     timer1_init@clock_select:
  2404                           	opt stack 0
  2405  000060                     ADC_init@p_ref:
  2406                           	opt stack 0
  2407  000060                     OUT@value:
  2408                           	opt stack 0
  2409  000060                     ANALOG_IN@b:
  2410                           	opt stack 0
  2411  000060                     LED_output@value:
  2412                           	opt stack 0
  2413  000060                     putUSBUSART@data:
  2414                           	opt stack 0
  2415  000060                     ringbuf_init@rb:
  2416                           	opt stack 0
  2417  000060                     ringbuf_num@rb:
  2418                           	opt stack 0
  2419  000060                     ringbuf_delete@rb:
  2420                           	opt stack 0
  2421  000060                     RTCC_adjust_time_toggle@tm:
  2422                           	opt stack 0
  2423  000060                     RTCC_adjust_time_cursor@tm:
  2424                           	opt stack 0
  2425  000060                     display@str0:
  2426                           	opt stack 0
  2427  000060                     ___awdiv@dividend:
  2428                           	opt stack 0
  2429  000060                     ___awmod@dividend:
  2430                           	opt stack 0
  2431  000060                     ___lwmod@dividend:
  2432                           	opt stack 0
  2433  000060                     memset@p1:
  2434                           	opt stack 0
  2435  000060                     strcat@to:
  2436                           	opt stack 0
  2437  000060                     strcmp@s1:
  2438                           	opt stack 0
  2439  000060                     strcpy@to:
  2440                           	opt stack 0
  2441  000060                     ___lldiv@dividend:
  2442                           	opt stack 0
  2443                           
  2444                           ; 4 bytes @ 0x0
  2445  000060                     	ds	1
  2446  000061                     ??_timer1_init:
  2447  000061                     I2C_idle_check@mask:
  2448                           	opt stack 0
  2449  000061                     timer0_init@prescaler:
  2450                           	opt stack 0
  2451  000061                     timer3_init@prescaler:
  2452                           	opt stack 0
  2453  000061                     x_to_d@hex:
  2454                           	opt stack 0
  2455  000061                     OUT@b:
  2456                           	opt stack 0
  2457  000061                     LED_output@b:
  2458                           	opt stack 0
  2459  000061                     _isdigit$6456:
  2460                           	opt stack 0
  2461  000061                     USBTransferOnePacket@data:
  2462                           	opt stack 0
  2463                           
  2464                           ; 2 bytes @ 0x1
  2465  000061                     	ds	1
  2466  000062                     ??_ADC:
  2467  000062                     ??_ringbuf_num:
  2468  000062                     putUSBUSART@length:
  2469                           	opt stack 0
  2470  000062                     timer1_init@prescaler:
  2471                           	opt stack 0
  2472  000062                     integrate_time@i:
  2473                           	opt stack 0
  2474  000062                     isdigit@c:
  2475                           	opt stack 0
  2476  000062                     ringbuf_init@internal_buf:
  2477                           	opt stack 0
  2478  000062                     RTCC_to_caltime@tm:
  2479                           	opt stack 0
  2480  000062                     display@str1:
  2481                           	opt stack 0
  2482  000062                     ___awdiv@divisor:
  2483                           	opt stack 0
  2484  000062                     ___awmod@divisor:
  2485                           	opt stack 0
  2486  000062                     ___lwmod@divisor:
  2487                           	opt stack 0
  2488  000062                     memset@c:
  2489                           	opt stack 0
  2490  000062                     strcat@from:
  2491                           	opt stack 0
  2492  000062                     strcmp@s2:
  2493                           	opt stack 0
  2494  000062                     strcpy@from:
  2495                           	opt stack 0
  2496                           
  2497                           ; 2 bytes @ 0x2
  2498  000062                     	ds	1
  2499  000063                     USBTransferOnePacket@len:
  2500                           	opt stack 0
  2501  000063                     ADC@ch:
  2502                           	opt stack 0
  2503                           
  2504                           ; 1 bytes @ 0x3
  2505  000063                     	ds	1
  2506  000064                     ??_strcmp:
  2507  000064                     USBTransferOnePacket@ep:
  2508                           	opt stack 0
  2509  000064                     RTCC_to_caltime@dumy:
  2510                           	opt stack 0
  2511  000064                     display@item:
  2512                           	opt stack 0
  2513  000064                     ___awdiv@counter:
  2514                           	opt stack 0
  2515  000064                     ___awmod@counter:
  2516                           	opt stack 0
  2517  000064                     ___lwmod@counter:
  2518                           	opt stack 0
  2519  000064                     ringbuf_init@bufsize:
  2520                           	opt stack 0
  2521  000064                     memset@n:
  2522                           	opt stack 0
  2523  000064                     strcat@cp:
  2524                           	opt stack 0
  2525  000064                     strcpy@cp:
  2526                           	opt stack 0
  2527  000064                     ___lldiv@divisor:
  2528                           	opt stack 0
  2529                           
  2530                           ; 4 bytes @ 0x4
  2531  000064                     	ds	1
  2532  000065                     display@i:
  2533                           	opt stack 0
  2534  000065                     ___awdiv@sign:
  2535                           	opt stack 0
  2536  000065                     ___awmod@sign:
  2537                           	opt stack 0
  2538  000065                     strcmp@r:
  2539                           	opt stack 0
  2540  000065                     USBTransferOnePacket@handle:
  2541                           	opt stack 0
  2542                           
  2543                           ; 2 bytes @ 0x5
  2544  000065                     	ds	1
  2545  000066                     ??_settings_auto_stop:
  2546  000066                     ??_settings_led_indicator:
  2547  000066                     month_length@month:
  2548                           	opt stack 0
  2549  000066                     port_button_task@i:
  2550                           	opt stack 0
  2551  000066                     ___awdiv@quotient:
  2552                           	opt stack 0
  2553  000066                     memset@p:
  2554                           	opt stack 0
  2555                           
  2556                           ; 2 bytes @ 0x6
  2557  000066                     	ds	1
  2558  000067                     ??_CDCTxService:
  2559  000067                     ??_month_length:
  2560  000067                     getsUSBUSART@buffer:
  2561                           	opt stack 0
  2562  000067                     settings_auto_stop@str:
  2563                           	opt stack 0
  2564  000067                     settings_led_indicator@str:
  2565                           	opt stack 0
  2566                           
  2567                           ; 20 bytes @ 0x7
  2568  000067                     	ds	1
  2569  000068                     USBDeviceInit@i:
  2570                           	opt stack 0
  2571  000068                     d_to_x@dec:
  2572                           	opt stack 0
  2573  000068                     _CDCTxService$2005:
  2574                           	opt stack 0
  2575  000068                     ringbuf_put@rb:
  2576                           	opt stack 0
  2577  000068                     ringbuf_pop@rb:
  2578                           	opt stack 0
  2579  000068                     ringbuf_backspace@rb:
  2580                           	opt stack 0
  2581  000068                     ___lldiv@quotient:
  2582                           	opt stack 0
  2583                           
  2584                           ; 4 bytes @ 0x8
  2585  000068                     	ds	1
  2586  000069                     getsUSBUSART@len:
  2587                           	opt stack 0
  2588  000069                     caltime_to_RTCC@tm:
  2589                           	opt stack 0
  2590                           
  2591                           ; 2 bytes @ 0x9
  2592  000069                     	ds	1
  2593  00006A                     ??_getsUSBUSART:
  2594  00006A                     ??_ringbuf_pop:
  2595  00006A                     ??_ringbuf_backspace:
  2596  00006A                     CDCTxService@i:
  2597                           	opt stack 0
  2598  00006A                     ringbuf_put@data:
  2599                           	opt stack 0
  2600  00006A                     settings_integrating_reset@str:
  2601                           	opt stack 0
  2602                           
  2603                           ; 20 bytes @ 0xA
  2604  00006A                     	ds	1
  2605  00006B                     ??_ringbuf_put:
  2606  00006B                     CDCTxService@byte_to_send:
  2607                           	opt stack 0
  2608  00006B                     month_length@year:
  2609                           	opt stack 0
  2610  00006B                     _getsUSBUSART$1957:
  2611                           	opt stack 0
  2612                           
  2613                           ; 2 bytes @ 0xB
  2614  00006B                     	ds	1
  2615  00006C                     ___lldiv@counter:
  2616                           	opt stack 0
  2617  00006C                     USB_CDC_send@length:
  2618                           	opt stack 0
  2619                           
  2620                           ; 2 bytes @ 0xC
  2621  00006C                     	ds	1
  2622  00006D                     ??_integrate_current:
  2623  00006D                     ?_CTMU_read:
  2624                           	opt stack 0
  2625  00006D                     ?___lmul:
  2626                           	opt stack 0
  2627  00006D                     ?___llmod:
  2628                           	opt stack 0
  2629  00006D                     USB_CDC_get@numBytesRead:
  2630                           	opt stack 0
  2631  00006D                     ___lmul@multiplier:
  2632                           	opt stack 0
  2633  00006D                     ___llmod@dividend:
  2634                           	opt stack 0
  2635                           
  2636                           ; 4 bytes @ 0xD
  2637  00006D                     	ds	1
  2638  00006E                     ringbuf_pop@ret:
  2639                           	opt stack 0
  2640                           
  2641                           ; 1 bytes @ 0xE
  2642  00006E                     	ds	1
  2643  00006F                     ??_CTMU_read:
  2644  00006F                     ??_ST7032_task:
  2645  00006F                     ??_USB_CDC_task:
  2646  00006F                     ST7032_command@wait:
  2647                           	opt stack 0
  2648  00006F                     ST7032_put@c:
  2649                           	opt stack 0
  2650  00006F                     integrate_current@i:
  2651                           	opt stack 0
  2652  00006F                     ringbuf_put_str@rb:
  2653                           	opt stack 0
  2654                           
  2655                           ; 2 bytes @ 0xF
  2656  00006F                     	ds	1
  2657  000070                     CTMU_read@ch:
  2658                           	opt stack 0
  2659  000070                     ST7032_command@command:
  2660                           	opt stack 0
  2661  000070                     ST7032_puts@s:
  2662                           	opt stack 0
  2663  000070                     USB_CDC_task@i:
  2664                           	opt stack 0
  2665                           
  2666                           ; 2 bytes @ 0x10
  2667  000070                     	ds	1
  2668  000071                     ST7032_cursor@row:
  2669                           	opt stack 0
  2670  000071                     ST7032_task@data:
  2671                           	opt stack 0
  2672  000071                     ringbuf_put_str@str:
  2673                           	opt stack 0
  2674  000071                     CTMU_read@sum:
  2675                           	opt stack 0
  2676  000071                     ___lmul@multiplicand:
  2677                           	opt stack 0
  2678  000071                     ___llmod@divisor:
  2679                           	opt stack 0
  2680                           
  2681                           ; 4 bytes @ 0x11
  2682  000071                     	ds	1
  2683  000072                     ST7032_cursor@row_offsets:
  2684                           	opt stack 0
  2685  000072                     USB_CDC_task@length:
  2686                           	opt stack 0
  2687                           
  2688                           ; 2 bytes @ 0x12
  2689  000072                     	ds	1
  2690  000073                     
  2691                           ; 0 bytes @ 0x13
  2692  000073                     	ds	1
  2693  000074                     ST7032_cursor@col:
  2694                           	opt stack 0
  2695                           
  2696                           ; 1 bytes @ 0x14
  2697  000074                     	ds	1
  2698  000075                     CTMU_read@i:
  2699                           	opt stack 0
  2700  000075                     sleep_task@i:
  2701                           	opt stack 0
  2702  000075                     ___llmod@counter:
  2703                           	opt stack 0
  2704  000075                     ___lmul@product:
  2705                           	opt stack 0
  2706                           
  2707                           ; 4 bytes @ 0x15
  2708  000075                     	ds	1
  2709  000076                     ?___wmul:
  2710                           	opt stack 0
  2711  000076                     ___wmul@multiplier:
  2712                           	opt stack 0
  2713                           
  2714                           ; 2 bytes @ 0x16
  2715  000076                     	ds	2
  2716  000078                     ___wmul@multiplicand:
  2717                           	opt stack 0
  2718                           
  2719                           ; 2 bytes @ 0x18
  2720  000078                     	ds	1
  2721  000079                     ?_get_quot_rem:
  2722                           	opt stack 0
  2723  000079                     get_quot_rem@quot:
  2724                           	opt stack 0
  2725  000079                     caltime_to_epoch@tm:
  2726                           	opt stack 0
  2727                           
  2728                           ; 2 bytes @ 0x19
  2729  000079                     	ds	1
  2730  00007A                     ___wmul@product:
  2731                           	opt stack 0
  2732                           
  2733                           ; 2 bytes @ 0x1A
  2734  00007A                     	ds	1
  2735  00007B                     ??_caltime_to_epoch:
  2736  00007B                     get_quot_rem@div:
  2737                           	opt stack 0
  2738  00007B                     settings_auto_stop@str_6141:
  2739                           	opt stack 0
  2740  00007B                     settings_led_indicator@str_6158:
  2741                           	opt stack 0
  2742                           
  2743                           ; 20 bytes @ 0x1B
  2744  00007B                     	ds	1
  2745  00007C                     ??_Auto_cut:
  2746  00007C                     ?_atoi:
  2747                           	opt stack 0
  2748  00007C                     ?___lwdiv:
  2749                           	opt stack 0
  2750  00007C                     atoi@s:
  2751                           	opt stack 0
  2752  00007C                     ___lwdiv@dividend:
  2753                           	opt stack 0
  2754                           
  2755                           ; 2 bytes @ 0x1C
  2756  00007C                     	ds	1
  2757  00007D                     get_quot_rem@num:
  2758                           	opt stack 0
  2759                           
  2760                           ; 4 bytes @ 0x1D
  2761  00007D                     	ds	1
  2762  00007E                     ??_atoi:
  2763  00007E                     Auto_cut@i:
  2764                           	opt stack 0
  2765  00007E                     ___lwdiv@divisor:
  2766                           	opt stack 0
  2767  00007E                     settings_integrating_reset@str_6175:
  2768                           	opt stack 0
  2769                           
  2770                           ; 20 bytes @ 0x1E
  2771  00007E                     	ds	1
  2772  00007F                     caltime_to_epoch@year:
  2773                           	opt stack 0
  2774                           
  2775                           ; 1 bytes @ 0x1F
  2776  00007F                     	ds	1
  2777  000080                     caltime_to_epoch@month_4002:
  2778                           	opt stack 0
  2779  000080                     atoi@sign:
  2780                           	opt stack 0
  2781  000080                     ___lwdiv@counter:
  2782                           	opt stack 0
  2783                           
  2784                           ; 1 bytes @ 0x20
  2785  000080                     	ds	1
  2786  000081                     epoch_to_caltime@tm:
  2787                           	opt stack 0
  2788  000081                     atoi@a:
  2789                           	opt stack 0
  2790  000081                     ___lwdiv@quotient:
  2791                           	opt stack 0
  2792  000081                     caltime_to_epoch@epoch:
  2793                           	opt stack 0
  2794                           
  2795                           ; 4 bytes @ 0x21
  2796  000081                     	ds	2
  2797  000083                     ??_epoch_to_caltime:
  2798  000083                     ?_sprintf:
  2799                           	opt stack 0
  2800  000083                     ctmu_set_ratio@percentage:
  2801                           	opt stack 0
  2802  000083                     button_timer_interrupt@bt:
  2803                           	opt stack 0
  2804  000083                     ringbuf_put_num@rb:
  2805                           	opt stack 0
  2806  000083                     sprintf@sp:
  2807                           	opt stack 0
  2808                           
  2809                           ; 2 bytes @ 0x23
  2810  000083                     	ds	1
  2811  000084                     software_init@i:
  2812                           	opt stack 0
  2813                           
  2814                           ; 1 bytes @ 0x24
  2815  000084                     	ds	1
  2816  000085                     button_timer_interrupt@sw_value:
  2817                           	opt stack 0
  2818  000085                     caltime_to_epoch@month:
  2819                           	opt stack 0
  2820  000085                     ringbuf_put_num@value:
  2821                           	opt stack 0
  2822  000085                     epoch_to_caltime@day_since_epoch:
  2823                           	opt stack 0
  2824  000085                     sprintf@f:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x25
  2828  000085                     	ds	1
  2829  000086                     RTCC_from_RTCC@tm:
  2830                           	opt stack 0
  2831                           
  2832                           ; 2 bytes @ 0x26
  2833  000086                     	ds	1
  2834  000087                     ringbuf_put_num@digits:
  2835                           	opt stack 0
  2836  000087                     epoch_to_caltime@day:
  2837                           	opt stack 0
  2838                           
  2839                           ; 2 bytes @ 0x27
  2840  000087                     	ds	1
  2841  000088                     ringbuf_put_num@i:
  2842                           	opt stack 0
  2843                           
  2844                           ; 1 bytes @ 0x28
  2845  000088                     	ds	1
  2846  000089                     epoch_to_caltime@year:
  2847                           	opt stack 0
  2848  000089                     ringbuf_put_num@temp:
  2849                           	opt stack 0
  2850                           
  2851                           ; 2 bytes @ 0x29
  2852  000089                     	ds	1
  2853  00008A                     epoch_to_caltime@month:
  2854                           	opt stack 0
  2855                           
  2856                           ; 1 bytes @ 0x2A
  2857  00008A                     	ds	1
  2858  00008B                     epoch_to_caltime@num:
  2859                           	opt stack 0
  2860                           
  2861                           ; 4 bytes @ 0x2B
  2862  00008B                     	ds	4
  2863  00008F                     RTCC_from_caltime@tm:
  2864                           	opt stack 0
  2865  00008F                     RTCC_from_epoch@tm:
  2866                           	opt stack 0
  2867  00008F                     settings_auto_stop@strp:
  2868                           	opt stack 0
  2869  00008F                     settings_led_indicator@strp:
  2870                           	opt stack 0
  2871                           
  2872                           ; 2 bytes @ 0x2F
  2873  00008F                     	ds	2
  2874  000091                     RTCC_adjust_time_inc@tm:
  2875                           	opt stack 0
  2876  000091                     RTCC_adjust_time_dec@tm:
  2877                           	opt stack 0
  2878  000091                     settings_auto_stop@strp_6142:
  2879                           	opt stack 0
  2880  000091                     settings_led_indicator@strp_6159:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x31
  2884  000091                     	ds	1
  2885  000092                     settings_integrating_reset@strp:
  2886                           	opt stack 0
  2887                           
  2888                           ; 2 bytes @ 0x32
  2889  000092                     	ds	1
  2890  000093                     ??_RTCC_adjust_time_inc:
  2891  000093                     ??_RTCC_adjust_time_dec:
  2892  000093                     settings_auto_stop@i:
  2893                           	opt stack 0
  2894  000093                     settings_led_indicator@i:
  2895                           	opt stack 0
  2896                           
  2897                           ; 1 bytes @ 0x33
  2898  000093                     	ds	1
  2899  000094                     settings_auto_stop@i_6143:
  2900                           	opt stack 0
  2901  000094                     settings_led_indicator@i_6160:
  2902                           	opt stack 0
  2903  000094                     settings_integrating_reset@strp_6176:
  2904                           	opt stack 0
  2905                           
  2906                           ; 2 bytes @ 0x34
  2907  000094                     	ds	1
  2908  000095                     settings_auto_stop@j:
  2909                           	opt stack 0
  2910  000095                     settings_led_indicator@j:
  2911                           	opt stack 0
  2912                           
  2913                           ; 1 bytes @ 0x35
  2914  000095                     	ds	1
  2915  000096                     settings_integrating_reset@i:
  2916                           	opt stack 0
  2917                           
  2918                           ; 1 bytes @ 0x36
  2919  000096                     	ds	1
  2920  000097                     ??_sprintf:
  2921  000097                     RTCC_adjust_time_inc@i_3723:
  2922                           	opt stack 0
  2923  000097                     RTCC_adjust_time_dec@i_3753:
  2924                           	opt stack 0
  2925  000097                     settings_integrating_reset@i_6177:
  2926                           	opt stack 0
  2927                           
  2928                           ; 1 bytes @ 0x37
  2929  000097                     	ds	1
  2930  000098                     RTCC_adjust_time_inc@i:
  2931                           	opt stack 0
  2932  000098                     RTCC_adjust_time_dec@i:
  2933                           	opt stack 0
  2934  000098                     settings_integrating_reset@j:
  2935                           	opt stack 0
  2936                           
  2937                           ; 1 bytes @ 0x38
  2938  000098                     	ds	1
  2939  000099                     settings_task@item_change_flag:
  2940                           	opt stack 0
  2941                           
  2942                           ; 1 bytes @ 0x39
  2943  000099                     	ds	2
  2944  00009B                     sprintf@prec:
  2945                           	opt stack 0
  2946                           
  2947                           ; 2 bytes @ 0x3B
  2948  00009B                     	ds	2
  2949  00009D                     sprintf@cp:
  2950                           	opt stack 0
  2951                           
  2952                           ; 2 bytes @ 0x3D
  2953  00009D                     	ds	2
  2954  00009F                     sprintf@ap:
  2955                           	opt stack 0
  2956                           
  2957                           ; 2 bytes @ 0x3F
  2958  00009F                     	ds	2
  2959  0000A1                     sprintf@len:
  2960                           	opt stack 0
  2961                           
  2962                           ; 2 bytes @ 0x41
  2963  0000A1                     	ds	2
  2964  0000A3                     sprintf@val:
  2965                           	opt stack 0
  2966                           
  2967                           ; 4 bytes @ 0x43
  2968  0000A3                     	ds	4
  2969  0000A7                     sprintf@flag:
  2970                           	opt stack 0
  2971                           
  2972                           ; 1 bytes @ 0x47
  2973  0000A7                     	ds	1
  2974  0000A8                     sprintf@c:
  2975                           	opt stack 0
  2976                           
  2977                           ; 1 bytes @ 0x48
  2978  0000A8                     	ds	1
  2979  0000A9                     sprintf@width:
  2980                           	opt stack 0
  2981                           
  2982                           ; 2 bytes @ 0x49
  2983  0000A9                     	ds	2
  2984  0000AB                     display_dec@str:
  2985                           	opt stack 0
  2986  0000AB                     print_time@tx:
  2987                           	opt stack 0
  2988  0000AB                     data_out@tx:
  2989                           	opt stack 0
  2990                           
  2991                           ; 2 bytes @ 0x4B
  2992  0000AB                     	ds	2
  2993  0000AD                     display_dec@dec:
  2994                           	opt stack 0
  2995  0000AD                     print_time@str:
  2996                           	opt stack 0
  2997  0000AD                     data_out@str:
  2998                           	opt stack 0
  2999                           
  3000                           ; 30 bytes @ 0x4D
  3001  0000AD                     	ds	1
  3002  0000AE                     display_dec@edit:
  3003                           	opt stack 0
  3004                           
  3005                           ; 1 bytes @ 0x4E
  3006  0000AE                     	ds	1
  3007  0000AF                     display_dec@s:
  3008                           	opt stack 0
  3009                           
  3010                           ; 4 bytes @ 0x4F
  3011  0000AF                     	ds	4
  3012  0000B3                     display_time_1602@tm:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x53
  3016  0000B3                     	ds	2
  3017  0000B5                     display_time_1602@line0:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x55
  3021  0000B5                     	ds	2
  3022  0000B7                     display_time_1602@line1:
  3023                           	opt stack 0
  3024                           
  3025                           ; 2 bytes @ 0x57
  3026  0000B7                     	ds	2
  3027  0000B9                     ??_display_time_1602:
  3028                           
  3029                           ; 0 bytes @ 0x59
  3030  0000B9                     	ds	1
  3031  0000BA                     ??_display_LCD:
  3032                           
  3033                           ; 0 bytes @ 0x5A
  3034  0000BA                     	ds	17
  3035  0000CB                     data_out@i:
  3036                           	opt stack 0
  3037  0000CB                     terminal_at_hand@tx:
  3038                           	opt stack 0
  3039                           
  3040                           ; 2 bytes @ 0x6B
  3041  0000CB                     	ds	1
  3042  0000CC                     
  3043                           ; 0 bytes @ 0x6C
  3044  0000CC                     	ds	1
  3045  0000CD                     terminal_at_hand@hand:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x6D
  3049  0000CD                     	ds	2
  3050  0000CF                     terminal_at_hand@min:
  3051                           	opt stack 0
  3052                           
  3053                           ; 1 bytes @ 0x6F
  3054  0000CF                     	ds	1
  3055  0000D0                     terminal_at_hand@max:
  3056                           	opt stack 0
  3057                           
  3058                           ; 1 bytes @ 0x70
  3059  0000D0                     	ds	1
  3060  0000D1                     terminal_at_hand@value:
  3061                           	opt stack 0
  3062                           
  3063                           ; 1 bytes @ 0x71
  3064  0000D1                     	ds	1
  3065  0000D2                     terminal_time@tx:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x72
  3069  0000D2                     	ds	2
  3070  0000D4                     terminal_time@op0:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x74
  3074  0000D4                     	ds	2
  3075  0000D6                     terminal_time@op1:
  3076                           	opt stack 0
  3077                           
  3078                           ; 2 bytes @ 0x76
  3079  0000D6                     	ds	2
  3080  0000D8                     terminal_time@op2:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x78
  3084  0000D8                     	ds	2
  3085  0000DA                     _terminal_time$7052:
  3086                           	opt stack 0
  3087                           
  3088                           ; 1 bytes @ 0x7A
  3089  0000DA                     	ds	1
  3090  0000DB                     terminal_operation@tx:
  3091                           	opt stack 0
  3092                           
  3093                           ; 2 bytes @ 0x7B
  3094  0000DB                     	ds	2
  3095  0000DD                     terminal_operation@op0:
  3096                           	opt stack 0
  3097                           
  3098                           ; 2 bytes @ 0x7D
  3099  0000DD                     	ds	2
  3100  0000DF                     terminal_operation@op1:
  3101                           	opt stack 0
  3102                           
  3103                           ; 2 bytes @ 0x7F
  3104  0000DF                     	ds	2
  3105  0000E1                     terminal_operation@op2:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x81
  3109  0000E1                     	ds	2
  3110  0000E3                     terminal_operation@op3:
  3111                           	opt stack 0
  3112                           
  3113                           ; 2 bytes @ 0x83
  3114  0000E3                     	ds	2
  3115  0000E5                     terminal_operation@percentage:
  3116                           	opt stack 0
  3117                           
  3118                           ; 1 bytes @ 0x85
  3119  0000E5                     	ds	1
  3120  0000E6                     tblptru	equ	0xFF8
  3121                           tblptrh	equ	0xFF7
  3122                           tblptrl	equ	0xFF6
  3123                           tablat	equ	0xFF5
  3124                           postinc0	equ	0xFEE
  3125                           wreg	equ	0xFE8
  3126                           postdec1	equ	0xFE5
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           
  3130                           ; 0 bytes @ 0x86
  3131                           
  3132                           	psect	cstackCOMRAM
  3133  00002D                     __pcstackCOMRAM:
  3134                           	opt stack 0
  3135  00002D                     ??_USBStdGetDscHandler:
  3136  00002D                     ??_USBStdGetStatusHandler:
  3137  00002D                     ?i2_USBTransferOnePacket:
  3138                           	opt stack 0
  3139  00002D                     ?i2___awdiv:
  3140                           	opt stack 0
  3141  00002D                     ?i2___lwdiv:
  3142                           	opt stack 0
  3143  00002D                     USBConfigureEndpoint@direction:
  3144                           	opt stack 0
  3145  00002D                     USBCtrlTrfTxService@byteToSend:
  3146                           	opt stack 0
  3147  00002D                     USBCtrlTrfRxService@i:
  3148                           	opt stack 0
  3149  00002D                     i2USBTransferOnePacket@dir:
  3150                           	opt stack 0
  3151  00002D                     i2LED_output@value:
  3152                           	opt stack 0
  3153  00002D                     i2___awdiv@dividend:
  3154                           	opt stack 0
  3155  00002D                     i2___lwdiv@dividend:
  3156                           	opt stack 0
  3157  00002D                     i2memset@p1:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x0
  3161  00002D                     	ds	1
  3162  00002E                     ??_USBConfigureEndpoint:
  3163  00002E                     USBCtrlTrfRxService@byteToRead:
  3164                           	opt stack 0
  3165  00002E                     USBCtrlTrfInHandler@lastDTS:
  3166                           	opt stack 0
  3167  00002E                     i2LED_output@b:
  3168                           	opt stack 0
  3169  00002E                     USBStdGetStatusHandler@p:
  3170                           	opt stack 0
  3171  00002E                     i2USBTransferOnePacket@data:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x1
  3175  00002E                     	ds	1
  3176  00002F                     i2___awdiv@divisor:
  3177                           	opt stack 0
  3178  00002F                     i2___lwdiv@divisor:
  3179                           	opt stack 0
  3180  00002F                     i2memset@c:
  3181                           	opt stack 0
  3182                           
  3183                           ; 2 bytes @ 0x2
  3184  00002F                     	ds	1
  3185  000030                     i2USBTransferOnePacket@len:
  3186                           	opt stack 0
  3187                           
  3188                           ; 1 bytes @ 0x3
  3189  000030                     	ds	1
  3190  000031                     i2USBTransferOnePacket@ep:
  3191                           	opt stack 0
  3192  000031                     i2___awdiv@counter:
  3193                           	opt stack 0
  3194  000031                     i2___lwdiv@quotient:
  3195                           	opt stack 0
  3196  000031                     i2memset@n:
  3197                           	opt stack 0
  3198                           
  3199                           ; 2 bytes @ 0x4
  3200  000031                     	ds	1
  3201  000032                     USBConfigureEndpoint@EPNum:
  3202                           	opt stack 0
  3203  000032                     i2___awdiv@sign:
  3204                           	opt stack 0
  3205  000032                     i2USBTransferOnePacket@handle:
  3206                           	opt stack 0
  3207                           
  3208                           ; 2 bytes @ 0x5
  3209  000032                     	ds	1
  3210  000033                     i2___lwdiv@counter:
  3211                           	opt stack 0
  3212  000033                     USBConfigureEndpoint@handle:
  3213                           	opt stack 0
  3214  000033                     i2___awdiv@quotient:
  3215                           	opt stack 0
  3216  000033                     i2memset@p:
  3217                           	opt stack 0
  3218                           
  3219                           ; 2 bytes @ 0x6
  3220  000033                     	ds	2
  3221  000035                     ??_LED_indicator:
  3222  000035                     USBEnableEndpoint@options:
  3223                           	opt stack 0
  3224  000035                     i2USBDeviceInit@i:
  3225                           	opt stack 0
  3226                           
  3227                           ; 1 bytes @ 0x8
  3228  000035                     	ds	1
  3229  000036                     USBEnableEndpoint@p:
  3230                           	opt stack 0
  3231                           
  3232                           ; 2 bytes @ 0x9
  3233  000036                     	ds	2
  3234  000038                     USBEnableEndpoint@ep:
  3235                           	opt stack 0
  3236  000038                     LED_indicator@i:
  3237                           	opt stack 0
  3238                           
  3239                           ; 1 bytes @ 0xB
  3240  000038                     	ds	1
  3241  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3242                           	opt stack 0
  3243                           
  3244                           ; 2 bytes @ 0xC
  3245  000039                     	ds	2
  3246  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3247                           	opt stack 0
  3248                           
  3249                           ; 2 bytes @ 0xE
  3250  00003B                     	ds	2
  3251  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x10
  3255  00003D                     	ds	2
  3256  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3257                           
  3258                           ; 0 bytes @ 0x12
  3259  00003F                     	ds	2
  3260  000041                     ??_USBStdFeatureReqHandler:
  3261  000041                     USBStdSetCfgHandler@i:
  3262                           	opt stack 0
  3263                           
  3264                           ; 1 bytes @ 0x14
  3265  000041                     	ds	1
  3266  000042                     USBStdFeatureReqHandler@pUEP:
  3267                           	opt stack 0
  3268                           
  3269                           ; 2 bytes @ 0x15
  3270  000042                     	ds	2
  3271  000044                     USBStdFeatureReqHandler@current_ep_data:
  3272                           	opt stack 0
  3273                           
  3274                           ; 1 bytes @ 0x17
  3275  000044                     	ds	1
  3276  000045                     USBStdFeatureReqHandler@p:
  3277                           	opt stack 0
  3278                           
  3279                           ; 2 bytes @ 0x18
  3280  000045                     	ds	2
  3281  000047                     ??_USBCtrlEPService:
  3282  000047                     
  3283                           ; 0 bytes @ 0x1A
  3284  000047                     	ds	2
  3285  000049                     USBCtrlEPService@setup_cnt:
  3286                           	opt stack 0
  3287                           
  3288                           ; 1 bytes @ 0x1C
  3289  000049                     	ds	1
  3290  00004A                     USBDeviceTasks@i:
  3291                           	opt stack 0
  3292                           
  3293                           ; 1 bytes @ 0x1D
  3294  00004A                     	ds	1
  3295  00004B                     ??_ISR:
  3296                           
  3297                           ; 0 bytes @ 0x1E
  3298  00004B                     	ds	14
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           postinc0	equ	0xFEE
  3304                           wreg	equ	0xFE8
  3305                           postdec1	equ	0xFE5
  3306                           fsr1h	equ	0xFE2
  3307                           fsr1l	equ	0xFE1
  3308                           
  3309 ;;
  3310 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3311 ;;
  3312 ;; *************** function _main *****************
  3313 ;; Defined at:
  3314 ;;		line 126 in file "main.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  2  1833[None  ] int 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels required when called:   21
  3334 ;; This function calls:
  3335 ;;		_RTCC_task
  3336 ;;		_ST7032_task
  3337 ;;		_USB_CDC_task
  3338 ;;		_bootload
  3339 ;;		_ctmu_task
  3340 ;;		_hardware_init
  3341 ;;		_normal_task
  3342 ;;		_sleep_task
  3343 ;;		_software_init
  3344 ;;		_terminal_task
  3345 ;; This function is called by:
  3346 ;;		Startup code after reset
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text0
  3351  015FBC                     __ptext0:
  3352                           	opt stack 0
  3353  015FBC                     _main:
  3354                           	opt stack 10
  3355                           
  3356                           ;main.c: 128: hardware_init();
  3357                           
  3358                           ;incstack = 0
  3359  015FBC  ECB3  F0B3         	call	_hardware_init	;wreg free
  3360                           
  3361                           ;main.c: 130: software_init();
  3362  015FC0  EC92  F0AA         	call	_software_init	;wreg free
  3363  015FC4  D034               	goto	l13175
  3364  015FC6                     l13127:
  3365                           
  3366                           ;main.c: 136: INTCONbits.GIE = 0;
  3367  015FC6  9EF2               	bcf	intcon,7,c	;volatile
  3368                           
  3369                           ;main.c: 137: RTCC_task();
  3370  015FC8  EC1D  F0B5         	call	_RTCC_task	;wreg free
  3371                           
  3372                           ;main.c: 138: INTCONbits.GIE = 1;
  3373  015FCC  8EF2               	bsf	intcon,7,c	;volatile
  3374                           
  3375                           ;main.c: 140: INTCONbits.GIE = 0;
  3376  015FCE  9EF2               	bcf	intcon,7,c	;volatile
  3377                           
  3378                           ;main.c: 141: ST7032_task();
  3379  015FD0  ECF5  F099         	call	_ST7032_task	;wreg free
  3380                           
  3381                           ;main.c: 142: INTCONbits.GIE = 1;
  3382  015FD4  8EF2               	bsf	intcon,7,c	;volatile
  3383                           
  3384                           ;main.c: 144: INTCONbits.GIE = 0;
  3385  015FD6  9EF2               	bcf	intcon,7,c	;volatile
  3386                           
  3387                           ;main.c: 145: USB_CDC_task();
  3388  015FD8  EC5C  F0A0         	call	_USB_CDC_task	;wreg free
  3389                           
  3390                           ;main.c: 146: INTCONbits.GIE = 1;
  3391  015FDC  8EF2               	bsf	intcon,7,c	;volatile
  3392                           
  3393                           ;main.c: 148: INTCONbits.GIE = 0;
  3394  015FDE  9EF2               	bcf	intcon,7,c	;volatile
  3395                           
  3396                           ;main.c: 149: terminal_task(&usb_tx, &usb_rx);
  3397  015FE0  0EC6               	movlw	low _usb_tx
  3398  015FE2  0101               	movlb	1	; () banked
  3399  015FE4  6F92               	movwf	terminal_task@tx& (0+255),b
  3400  015FE6  0E02               	movlw	high _usb_tx
  3401  015FE8  0101               	movlb	1	; () banked
  3402  015FEA  6F93               	movwf	(terminal_task@tx+1)& (0+255),b
  3403  015FEC  0EBE               	movlw	low _usb_rx
  3404  015FEE  0101               	movlb	1	; () banked
  3405  015FF0  6F94               	movwf	terminal_task@rx& (0+255),b
  3406  015FF2  0E02               	movlw	high _usb_rx
  3407  015FF4  0101               	movlb	1	; () banked
  3408  015FF6  6F95               	movwf	(terminal_task@rx+1)& (0+255),b
  3409  015FF8  ECC6  F086         	call	_terminal_task	;wreg free
  3410                           
  3411                           ;main.c: 150: INTCONbits.GIE = 1;
  3412  015FFC  8EF2               	bsf	intcon,7,c	;volatile
  3413                           
  3414                           ;main.c: 152: INTCONbits.GIE = 0;
  3415  015FFE  9EF2               	bcf	intcon,7,c	;volatile
  3416                           
  3417                           ;main.c: 153: normal_task();
  3418  016000  ECD5  F0A7         	call	_normal_task	;wreg free
  3419                           
  3420                           ;main.c: 154: INTCONbits.GIE = 1;
  3421  016004  8EF2               	bsf	intcon,7,c	;volatile
  3422                           
  3423                           ;main.c: 157: INTCONbits.GIE = 0;
  3424  016006  9EF2               	bcf	intcon,7,c	;volatile
  3425                           
  3426                           ;main.c: 158: ctmu_task();
  3427  016008  EC6B  F0B7         	call	_ctmu_task	;wreg free
  3428                           
  3429                           ;main.c: 159: if (ctmu_m.flag.pressing &&
  3430                           ;main.c: 160: port[0].ctmu.flag.pressing &&
  3431                           ;main.c: 161: port[1].ctmu.flag.pressing &&
  3432                           ;main.c: 162: port[2].ctmu.flag.pressing) {
  3433  01600C  0100               	movlb	0	; () banked
  3434  01600E  A1FF               	btfss	(_ctmu_m+3)& (0+255),0,b
  3435  016010  D00A               	goto	l13171
  3436                           
  3437                           ; BSR set to: 0
  3438  016012  0101               	movlb	1	; () banked
  3439  016014  A131               	btfss	(_port+3)& (0+255),0,b
  3440  016016  D007               	goto	l13171
  3441                           
  3442                           ; BSR set to: 1
  3443  016018  0101               	movlb	1	; () banked
  3444  01601A  A148               	btfss	(_port+26)& (0+255),0,b
  3445  01601C  D004               	goto	l13171
  3446                           
  3447                           ; BSR set to: 1
  3448  01601E  0101               	movlb	1	; () banked
  3449  016020  B15F               	btfsc	(_port+49)& (0+255),0,b
  3450                           
  3451                           ; BSR set to: 1
  3452                           ;main.c: 163: bootload();
  3453  016022  ECA3  F0B4         	call	_bootload	;wreg free
  3454  016026                     l13171:
  3455                           
  3456                           ;main.c: 164: }
  3457                           ;main.c: 165: INTCONbits.GIE = 1;
  3458  016026  8EF2               	bsf	intcon,7,c	;volatile
  3459                           
  3460                           ;main.c: 168: INTCONbits.GIE = 0;
  3461  016028  9EF2               	bcf	intcon,7,c	;volatile
  3462                           
  3463                           ;main.c: 169: sleep_task();
  3464  01602A  EC03  F0A7         	call	_sleep_task	;wreg free
  3465  01602E                     l13175:
  3466                           
  3467                           ;main.c: 170: INTCONbits.GIE = 1;
  3468  01602E  8EF2               	bsf	intcon,7,c	;volatile
  3469  016030  D7CA               	goto	l13127
  3470  016032                     __end_of_main:
  3471                           	opt stack 0
  3472                           tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           intcon	equ	0xFF2
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postdec1	equ	0xFE5
  3480                           fsr1h	equ	0xFE2
  3481                           fsr1l	equ	0xFE1
  3482                           
  3483 ;; *************** function _terminal_task *****************
  3484 ;; Defined at:
  3485 ;;		line 8 in file "../My_library/My_terminal.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3488 ;;		 -> usb_tx(8), 
  3489 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3490 ;;		 -> usb_rx(8), 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  i               1  102[BANK6 ] unsigned char 
  3493 ;;  i               1  104[BANK6 ] unsigned char 
  3494 ;;  ascii           1  103[BANK6 ] unsigned char 
  3495 ;;  buf           100    0[BANK6 ] unsigned char [100]
  3496 ;; Return value:  Size  Location     Type
  3497 ;;		None               void
  3498 ;; Registers used:
  3499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3505 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0     105       0       0       0       0       
      +0       0       0       0
  3507 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3508 ;;      Totals:         0       0       6       0       0       0       0     105       0       0       0       0       
      +0       0       0       0
  3509 ;;Total ram usage:      111 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:   20
  3512 ;; This function calls:
  3513 ;;		_ringbuf_backspace
  3514 ;;		_ringbuf_delete
  3515 ;;		_ringbuf_init
  3516 ;;		_ringbuf_num
  3517 ;;		_ringbuf_pop
  3518 ;;		_ringbuf_put
  3519 ;;		_ringbuf_put_num
  3520 ;;		_ringbuf_put_str
  3521 ;;		_terminal_operation
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text1
  3528  010D8C                     __ptext1:
  3529                           	opt stack 0
  3530  010D8C                     _terminal_task:
  3531                           	opt stack 10
  3532                           
  3533                           ;My_terminal.c: 9: static ringbuf_t command;
  3534                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3535                           ;My_terminal.c: 11: if (command_init == 0) {
  3536                           
  3537                           ;incstack = 0
  3538  010D8C  0101               	movlb	1	; () banked
  3539  010D8E  512D               	movf	terminal_task@command_init& (0+255),w,b
  3540  010D90  0101               	movlb	1	; () banked
  3541  010D92  A4D8               	btfss	status,2,c
  3542  010D94  D016               	goto	l12755
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;My_terminal.c: 12: command_init = 1;
  3546  010D96  0E01               	movlw	1
  3547  010D98  0101               	movlb	1	; () banked
  3548  010D9A  6F2D               	movwf	terminal_task@command_init& (0+255),b
  3549                           
  3550                           ; BSR set to: 1
  3551                           ;My_terminal.c: 13: char buf[100];
  3552                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3553  010D9C  0E81               	movlw	low terminal_task@command
  3554  010D9E  0100               	movlb	0	; () banked
  3555  010DA0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3556  010DA2  0E01               	movlw	high terminal_task@command
  3557  010DA4  0100               	movlb	0	; () banked
  3558  010DA6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3559  010DA8  0E00               	movlw	low terminal_task@buf
  3560  010DAA  0100               	movlb	0	; () banked
  3561  010DAC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3562  010DAE  0E06               	movlw	high terminal_task@buf
  3563  010DB0  0100               	movlb	0	; () banked
  3564  010DB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3565  010DB4  0E00               	movlw	0
  3566  010DB6  0100               	movlb	0	; () banked
  3567  010DB8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3568  010DBA  0E64               	movlw	100
  3569  010DBC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3570  010DBE  ECDE  F0B3         	call	_ringbuf_init	;wreg free
  3571  010DC2                     l12755:
  3572                           
  3573                           ;My_terminal.c: 15: }
  3574                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3575  010DC2  C194  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3576  010DC6  C195  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3577  010DCA  EC43  F0A2         	call	_ringbuf_num	;wreg free
  3578  010DCE  0100               	movlb	0	; () banked
  3579  010DD0  5160               	movf	?_ringbuf_num& (0+255),w,b
  3580  010DD2  0100               	movlb	0	; () banked
  3581  010DD4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3582  010DD6  B4D8               	btfsc	status,2,c
  3583  010DD8  0012               	return	
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3587  010DDA  C194  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3588  010DDE  C195  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3589  010DE2  ECA3  F0A8         	call	_ringbuf_pop	;wreg free
  3590  010DE6  0106               	movlb	6	; () banked
  3591  010DE8  6F67               	movwf	terminal_task@ascii& (0+255),b
  3592                           
  3593                           ;My_terminal.c: 18: switch (ascii) {
  3594  010DEA  D176               	goto	l12819
  3595  010DEC                     l12759:
  3596                           
  3597                           ; BSR set to: 6
  3598                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3599  010DEC  0E81               	movlw	low terminal_task@command
  3600  010DEE  0100               	movlb	0	; () banked
  3601  010DF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3602  010DF2  0E01               	movlw	high terminal_task@command
  3603  010DF4  0100               	movlb	0	; () banked
  3604  010DF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3605  010DF8  0E00               	movlw	0
  3606  010DFA  0100               	movlb	0	; () banked
  3607  010DFC  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3608  010DFE  EC99  F0A6         	call	_ringbuf_put	;wreg free
  3609                           
  3610                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3611  010E02  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3612  010E06  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3613  010E0A  0E09               	movlw	9
  3614  010E0C  0100               	movlb	0	; () banked
  3615  010E0E  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3616  010E10  EC99  F0A6         	call	_ringbuf_put	;wreg free
  3617                           
  3618                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3619  010E14  0E81               	movlw	low terminal_task@command
  3620  010E16  0100               	movlb	0	; () banked
  3621  010E18  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3622  010E1A  0E01               	movlw	high terminal_task@command
  3623  010E1C  0100               	movlb	0	; () banked
  3624  010E1E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3625  010E20  EC43  F0A2         	call	_ringbuf_num	;wreg free
  3626  010E24  0EFF               	movlw	255
  3627  010E26  0100               	movlb	0	; () banked
  3628  010E28  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3629  010E2A  0106               	movlb	6	; () banked
  3630  010E2C  6F64               	movwf	_terminal_task$7051& (0+255),b
  3631  010E2E  0EFF               	movlw	255
  3632  010E30  0100               	movlb	0	; () banked
  3633  010E32  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3634  010E34  0106               	movlb	6	; () banked
  3635  010E36  6F65               	movwf	(_terminal_task$7051+1)& (0+255),b
  3636                           
  3637                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3638  010E38  C192  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3639  010E3C  C193  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3640  010E40  C664  F085         	movff	_terminal_task$7051,ringbuf_put_num@value
  3641  010E44  C665  F086         	movff	_terminal_task$7051+1,ringbuf_put_num@value+1
  3642  010E48  0E02               	movlw	2
  3643  010E4A  0100               	movlb	0	; () banked
  3644  010E4C  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3645  010E4E  EC61  F0AF         	call	_ringbuf_put_num	;wreg free
  3646                           
  3647                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3648  010E52  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3649  010E56  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3650  010E5A  0E0A               	movlw	10
  3651  010E5C  0100               	movlb	0	; () banked
  3652  010E5E  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3653  010E60  EC99  F0A6         	call	_ringbuf_put	;wreg free
  3654                           
  3655                           ;My_terminal.c: 24: static char op0[25];
  3656                           ;My_terminal.c: 25: static char op1[25];
  3657                           ;My_terminal.c: 26: static char op2[25];
  3658                           ;My_terminal.c: 27: static char op3[25];
  3659                           ;My_terminal.c: 28: uint8_t i;
  3660                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3661  010E64  0E00               	movlw	0
  3662  010E66  0106               	movlb	6	; () banked
  3663  010E68  6F68               	movwf	terminal_task@i& (0+255),b
  3664  010E6A  D002               	goto	l12765
  3665  010E6C                     l12763:
  3666                           
  3667                           ; BSR set to: 6
  3668  010E6C  0106               	movlb	6	; () banked
  3669  010E6E  2B68               	incf	terminal_task@i& (0+255),f,b
  3670  010E70                     l12765:
  3671                           
  3672                           ; BSR set to: 6
  3673  010E70  0E81               	movlw	low terminal_task@command
  3674  010E72  0100               	movlb	0	; () banked
  3675  010E74  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3676  010E76  0E01               	movlw	high terminal_task@command
  3677  010E78  0100               	movlb	0	; () banked
  3678  010E7A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3679  010E7C  ECA3  F0A8         	call	_ringbuf_pop	;wreg free
  3680  010E80  0101               	movlb	1	; () banked
  3681  010E82  6F96               	movwf	??_terminal_task& (0+255),b
  3682  010E84  0106               	movlb	6	; () banked
  3683  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  3684  010E88  0D01               	mullw	1
  3685  010E8A  0E42               	movlw	low terminal_task@op0
  3686  010E8C  24F3               	addwf	prodl,w,c
  3687  010E8E  6ED9               	movwf	fsr2l,c
  3688  010E90  0E02               	movlw	high terminal_task@op0
  3689  010E92  20F4               	addwfc	prodh,w,c
  3690  010E94  6EDA               	movwf	fsr2h,c
  3691  010E96  C196  FFDF         	movff	??_terminal_task,indf2
  3692  010E9A  50DF               	movf	indf2,w,c
  3693  010E9C  A4D8               	btfss	status,2,c
  3694  010E9E  D7E6               	goto	l12763
  3695                           
  3696                           ; BSR set to: 6
  3697                           ;My_terminal.c: 30: op0[i] = '\0';
  3698                           
  3699                           ; BSR set to: 6
  3700  010EA0  0106               	movlb	6	; () banked
  3701  010EA2  5168               	movf	terminal_task@i& (0+255),w,b
  3702  010EA4  0D01               	mullw	1
  3703  010EA6  0E42               	movlw	low terminal_task@op0
  3704  010EA8  24F3               	addwf	prodl,w,c
  3705  010EAA  6ED9               	movwf	fsr2l,c
  3706  010EAC  0E02               	movlw	high terminal_task@op0
  3707  010EAE  20F4               	addwfc	prodh,w,c
  3708  010EB0  6EDA               	movwf	fsr2h,c
  3709  010EB2  0E00               	movlw	0
  3710  010EB4  6EDF               	movwf	indf2,c
  3711                           
  3712                           ; BSR set to: 6
  3713                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3714  010EB6  0E00               	movlw	0
  3715  010EB8  0106               	movlb	6	; () banked
  3716  010EBA  6F68               	movwf	terminal_task@i& (0+255),b
  3717  010EBC  D002               	goto	l12773
  3718  010EBE                     l12771:
  3719                           
  3720                           ; BSR set to: 6
  3721  010EBE  0106               	movlb	6	; () banked
  3722  010EC0  2B68               	incf	terminal_task@i& (0+255),f,b
  3723  010EC2                     l12773:
  3724                           
  3725                           ; BSR set to: 6
  3726  010EC2  0E81               	movlw	low terminal_task@command
  3727  010EC4  0100               	movlb	0	; () banked
  3728  010EC6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3729  010EC8  0E01               	movlw	high terminal_task@command
  3730  010ECA  0100               	movlb	0	; () banked
  3731  010ECC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3732  010ECE  ECA3  F0A8         	call	_ringbuf_pop	;wreg free
  3733  010ED2  0101               	movlb	1	; () banked
  3734  010ED4  6F96               	movwf	??_terminal_task& (0+255),b
  3735  010ED6  0106               	movlb	6	; () banked
  3736  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  3737  010EDA  0D01               	mullw	1
  3738  010EDC  0E5B               	movlw	low terminal_task@op1
  3739  010EDE  24F3               	addwf	prodl,w,c
  3740  010EE0  6ED9               	movwf	fsr2l,c
  3741  010EE2  0E02               	movlw	high terminal_task@op1
  3742  010EE4  20F4               	addwfc	prodh,w,c
  3743  010EE6  6EDA               	movwf	fsr2h,c
  3744  010EE8  C196  FFDF         	movff	??_terminal_task,indf2
  3745  010EEC  50DF               	movf	indf2,w,c
  3746  010EEE  A4D8               	btfss	status,2,c
  3747  010EF0  D7E6               	goto	l12771
  3748                           
  3749                           ; BSR set to: 6
  3750                           ;My_terminal.c: 32: op1[i] = '\0';
  3751                           
  3752                           ; BSR set to: 6
  3753  010EF2  0106               	movlb	6	; () banked
  3754  010EF4  5168               	movf	terminal_task@i& (0+255),w,b
  3755  010EF6  0D01               	mullw	1
  3756  010EF8  0E5B               	movlw	low terminal_task@op1
  3757  010EFA  24F3               	addwf	prodl,w,c
  3758  010EFC  6ED9               	movwf	fsr2l,c
  3759  010EFE  0E02               	movlw	high terminal_task@op1
  3760  010F00  20F4               	addwfc	prodh,w,c
  3761  010F02  6EDA               	movwf	fsr2h,c
  3762  010F04  0E00               	movlw	0
  3763  010F06  6EDF               	movwf	indf2,c
  3764                           
  3765                           ; BSR set to: 6
  3766                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3767  010F08  0E00               	movlw	0
  3768  010F0A  0106               	movlb	6	; () banked
  3769  010F0C  6F68               	movwf	terminal_task@i& (0+255),b
  3770  010F0E  D002               	goto	l12781
  3771  010F10                     l12779:
  3772                           
  3773                           ; BSR set to: 6
  3774  010F10  0106               	movlb	6	; () banked
  3775  010F12  2B68               	incf	terminal_task@i& (0+255),f,b
  3776  010F14                     l12781:
  3777                           
  3778                           ; BSR set to: 6
  3779  010F14  0E81               	movlw	low terminal_task@command
  3780  010F16  0100               	movlb	0	; () banked
  3781  010F18  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3782  010F1A  0E01               	movlw	high terminal_task@command
  3783  010F1C  0100               	movlb	0	; () banked
  3784  010F1E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3785  010F20  ECA3  F0A8         	call	_ringbuf_pop	;wreg free
  3786  010F24  0101               	movlb	1	; () banked
  3787  010F26  6F96               	movwf	??_terminal_task& (0+255),b
  3788  010F28  0106               	movlb	6	; () banked
  3789  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  3790  010F2C  0D01               	mullw	1
  3791  010F2E  0E74               	movlw	low terminal_task@op2
  3792  010F30  24F3               	addwf	prodl,w,c
  3793  010F32  6ED9               	movwf	fsr2l,c
  3794  010F34  0E02               	movlw	high terminal_task@op2
  3795  010F36  20F4               	addwfc	prodh,w,c
  3796  010F38  6EDA               	movwf	fsr2h,c
  3797  010F3A  C196  FFDF         	movff	??_terminal_task,indf2
  3798  010F3E  50DF               	movf	indf2,w,c
  3799  010F40  A4D8               	btfss	status,2,c
  3800  010F42  D7E6               	goto	l12779
  3801                           
  3802                           ; BSR set to: 6
  3803                           ;My_terminal.c: 34: op2[i] = '\0';
  3804                           
  3805                           ; BSR set to: 6
  3806  010F44  0106               	movlb	6	; () banked
  3807  010F46  5168               	movf	terminal_task@i& (0+255),w,b
  3808  010F48  0D01               	mullw	1
  3809  010F4A  0E74               	movlw	low terminal_task@op2
  3810  010F4C  24F3               	addwf	prodl,w,c
  3811  010F4E  6ED9               	movwf	fsr2l,c
  3812  010F50  0E02               	movlw	high terminal_task@op2
  3813  010F52  20F4               	addwfc	prodh,w,c
  3814  010F54  6EDA               	movwf	fsr2h,c
  3815  010F56  0E00               	movlw	0
  3816  010F58  6EDF               	movwf	indf2,c
  3817                           
  3818                           ; BSR set to: 6
  3819                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3820  010F5A  0E00               	movlw	0
  3821  010F5C  0106               	movlb	6	; () banked
  3822  010F5E  6F68               	movwf	terminal_task@i& (0+255),b
  3823  010F60  D002               	goto	l12789
  3824  010F62                     l12787:
  3825                           
  3826                           ; BSR set to: 6
  3827  010F62  0106               	movlb	6	; () banked
  3828  010F64  2B68               	incf	terminal_task@i& (0+255),f,b
  3829  010F66                     l12789:
  3830                           
  3831                           ; BSR set to: 6
  3832  010F66  0E81               	movlw	low terminal_task@command
  3833  010F68  0100               	movlb	0	; () banked
  3834  010F6A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3835  010F6C  0E01               	movlw	high terminal_task@command
  3836  010F6E  0100               	movlb	0	; () banked
  3837  010F70  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3838  010F72  ECA3  F0A8         	call	_ringbuf_pop	;wreg free
  3839  010F76  0101               	movlb	1	; () banked
  3840  010F78  6F96               	movwf	??_terminal_task& (0+255),b
  3841  010F7A  0106               	movlb	6	; () banked
  3842  010F7C  5168               	movf	terminal_task@i& (0+255),w,b
  3843  010F7E  0D01               	mullw	1
  3844  010F80  0E8D               	movlw	low terminal_task@op3
  3845  010F82  24F3               	addwf	prodl,w,c
  3846  010F84  6ED9               	movwf	fsr2l,c
  3847  010F86  0E02               	movlw	high terminal_task@op3
  3848  010F88  20F4               	addwfc	prodh,w,c
  3849  010F8A  6EDA               	movwf	fsr2h,c
  3850  010F8C  C196  FFDF         	movff	??_terminal_task,indf2
  3851  010F90  50DF               	movf	indf2,w,c
  3852  010F92  A4D8               	btfss	status,2,c
  3853  010F94  D7E6               	goto	l12787
  3854                           
  3855                           ; BSR set to: 6
  3856                           ;My_terminal.c: 36: op3[i] = '\0';
  3857                           
  3858                           ; BSR set to: 6
  3859  010F96  0106               	movlb	6	; () banked
  3860  010F98  5168               	movf	terminal_task@i& (0+255),w,b
  3861  010F9A  0D01               	mullw	1
  3862  010F9C  0E8D               	movlw	low terminal_task@op3
  3863  010F9E  24F3               	addwf	prodl,w,c
  3864  010FA0  6ED9               	movwf	fsr2l,c
  3865  010FA2  0E02               	movlw	high terminal_task@op3
  3866  010FA4  20F4               	addwfc	prodh,w,c
  3867  010FA6  6EDA               	movwf	fsr2h,c
  3868  010FA8  0E00               	movlw	0
  3869  010FAA  6EDF               	movwf	indf2,c
  3870                           
  3871                           ; BSR set to: 6
  3872                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3873  010FAC  C192  F0DB         	movff	terminal_task@tx,terminal_operation@tx
  3874  010FB0  C193  F0DC         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3875  010FB4  0E42               	movlw	low terminal_task@op0
  3876  010FB6  0100               	movlb	0	; () banked
  3877  010FB8  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3878  010FBA  0E02               	movlw	high terminal_task@op0
  3879  010FBC  0100               	movlb	0	; () banked
  3880  010FBE  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3881  010FC0  0E5B               	movlw	low terminal_task@op1
  3882  010FC2  0100               	movlb	0	; () banked
  3883  010FC4  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3884  010FC6  0E02               	movlw	high terminal_task@op1
  3885  010FC8  0100               	movlb	0	; () banked
  3886  010FCA  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3887  010FCC  0E74               	movlw	low terminal_task@op2
  3888  010FCE  0100               	movlb	0	; () banked
  3889  010FD0  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3890  010FD2  0E02               	movlw	high terminal_task@op2
  3891  010FD4  0100               	movlb	0	; () banked
  3892  010FD6  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3893  010FD8  0E8D               	movlw	low terminal_task@op3
  3894  010FDA  0100               	movlb	0	; () banked
  3895  010FDC  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3896  010FDE  0E02               	movlw	high terminal_task@op3
  3897  010FE0  0100               	movlb	0	; () banked
  3898  010FE2  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3899  010FE4  EC62  F090         	call	_terminal_operation	;wreg free
  3900                           
  3901                           ;My_terminal.c: 38: break;
  3902  010FE8  0012               	return	
  3903  010FEA                     l12795:
  3904                           
  3905                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3906  010FEA  0E81               	movlw	low terminal_task@command
  3907  010FEC  0100               	movlb	0	; () banked
  3908  010FEE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3909  010FF0  0E01               	movlw	high terminal_task@command
  3910  010FF2  0100               	movlb	0	; () banked
  3911  010FF4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3912  010FF6  0E00               	movlw	0
  3913  010FF8  0100               	movlb	0	; () banked
  3914  010FFA  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3915  010FFC  EC99  F0A6         	call	_ringbuf_put	;wreg free
  3916                           
  3917                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3918  011000  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3919  011004  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3920  011008  0E20               	movlw	32
  3921  01100A  0100               	movlb	0	; () banked
  3922  01100C  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3923  01100E  EC99  F0A6         	call	_ringbuf_put	;wreg free
  3924                           
  3925                           ;My_terminal.c: 42: break;
  3926  011012  0012               	return	
  3927  011014                     l12797:
  3928                           
  3929                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3930  011014  0E81               	movlw	low terminal_task@command
  3931  011016  0100               	movlb	0	; () banked
  3932  011018  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3933  01101A  0E01               	movlw	high terminal_task@command
  3934  01101C  0100               	movlb	0	; () banked
  3935  01101E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3936  011020  EC4B  F0AE         	call	_ringbuf_backspace	;wreg free
  3937                           
  3938                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3939  011024  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3940  011028  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3941  01102C  0EE3               	movlw	low STR_19
  3942  01102E  0100               	movlb	0	; () banked
  3943  011030  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3944  011032  0EFF               	movlw	high STR_19
  3945  011034  0100               	movlb	0	; () banked
  3946  011036  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3947  011038  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
  3948                           
  3949                           ;My_terminal.c: 46: break;
  3950  01103C  0012               	return	
  3951  01103E                     l12801:
  3952                           
  3953                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3954  01103E  0E00               	movlw	0
  3955  011040  0106               	movlb	6	; () banked
  3956  011042  6F66               	movwf	terminal_task@i_4555& (0+255),b
  3957  011044  D00E               	goto	l12807
  3958  011046                     l12803:
  3959  011046  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3960  01104A  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3961  01104E  0EE3               	movlw	low STR_19
  3962  011050  0100               	movlb	0	; () banked
  3963  011052  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3964  011054  0EFF               	movlw	high STR_19
  3965  011056  0100               	movlb	0	; () banked
  3966  011058  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3967  01105A  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
  3968  01105E  0106               	movlb	6	; () banked
  3969  011060  2B66               	incf	terminal_task@i_4555& (0+255),f,b
  3970  011062                     l12807:
  3971                           
  3972                           ; BSR set to: 6
  3973  011062  0E81               	movlw	low terminal_task@command
  3974  011064  0100               	movlb	0	; () banked
  3975  011066  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3976  011068  0E01               	movlw	high terminal_task@command
  3977  01106A  0100               	movlb	0	; () banked
  3978  01106C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3979  01106E  EC43  F0A2         	call	_ringbuf_num	;wreg free
  3980  011072  0106               	movlb	6	; () banked
  3981  011074  5166               	movf	terminal_task@i_4555& (0+255),w,b
  3982  011076  0101               	movlb	1	; () banked
  3983  011078  6F96               	movwf	??_terminal_task& (0+255),b
  3984  01107A  6B97               	clrf	(??_terminal_task+1)& (0+255),b
  3985  01107C  0100               	movlb	0	; () banked
  3986  01107E  5160               	movf	?_ringbuf_num& (0+255),w,b
  3987  011080  0101               	movlb	1	; () banked
  3988  011082  5D96               	subwf	??_terminal_task& (0+255),w,b
  3989  011084  0100               	movlb	0	; () banked
  3990  011086  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3991  011088  0101               	movlb	1	; () banked
  3992  01108A  5997               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3993  01108C  A0D8               	btfss	status,0,c
  3994  01108E  D7DB               	goto	l12803
  3995                           
  3996                           ; BSR set to: 1
  3997                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3998                           
  3999                           ; BSR set to: 1
  4000  011090  0E81               	movlw	low terminal_task@command
  4001  011092  0100               	movlb	0	; () banked
  4002  011094  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  4003  011096  0E01               	movlw	high terminal_task@command
  4004  011098  0100               	movlb	0	; () banked
  4005  01109A  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  4006  01109C  ECC2  F0B6         	call	_ringbuf_delete	;wreg free
  4007                           
  4008                           ;My_terminal.c: 50: break;
  4009  0110A0  0012               	return	
  4010  0110A2                     l12811:
  4011                           
  4012                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  4013  0110A2  0E1F               	movlw	31
  4014  0110A4  0106               	movlb	6	; () banked
  4015  0110A6  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  4016  0110A8  0012               	return	
  4017                           
  4018                           ; BSR set to: 6
  4019  0110AA  0E7F               	movlw	127
  4020  0110AC  0106               	movlb	6	; () banked
  4021  0110AE  6167               	cpfslt	terminal_task@ascii& (0+255),b
  4022  0110B0  0012               	return	
  4023                           
  4024                           ; BSR set to: 6
  4025                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  4026  0110B2  0E81               	movlw	low terminal_task@command
  4027  0110B4  0100               	movlb	0	; () banked
  4028  0110B6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  4029  0110B8  0E01               	movlw	high terminal_task@command
  4030  0110BA  0100               	movlb	0	; () banked
  4031  0110BC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4032  0110BE  C667  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  4033  0110C2  EC99  F0A6         	call	_ringbuf_put	;wreg free
  4034                           
  4035                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  4036  0110C6  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  4037  0110CA  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  4038  0110CE  C667  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  4039  0110D2  EC99  F0A6         	call	_ringbuf_put	;wreg free
  4040                           
  4041                           ;My_terminal.c: 57: }
  4042                           
  4043                           ;My_terminal.c: 55: }
  4044                           ;My_terminal.c: 56: break;
  4045  0110D6  0012               	return	
  4046  0110D8                     l12819:
  4047  0110D8  0106               	movlb	6	; () banked
  4048  0110DA  5167               	movf	terminal_task@ascii& (0+255),w,b
  4049                           
  4050                           ; Switch size 1, requested type "space"
  4051                           ; Number of cases is 4, Range of values is 8 to 127
  4052                           ; switch strategies available:
  4053                           ; Name         Instructions Cycles
  4054                           ; simple_byte           13     7 (average)
  4055                           ;	Chosen strategy is simple_byte
  4056  0110DC  0A08               	xorlw	8	; case 8
  4057  0110DE  B4D8               	btfsc	status,2,c
  4058  0110E0  D799               	goto	l12797
  4059  0110E2  0A05               	xorlw	5	; case 13
  4060  0110E4  B4D8               	btfsc	status,2,c
  4061  0110E6  D682               	goto	l12759
  4062  0110E8  0A2D               	xorlw	45	; case 32
  4063  0110EA  B4D8               	btfsc	status,2,c
  4064  0110EC  D77E               	goto	l12795
  4065  0110EE  0A5F               	xorlw	95	; case 127
  4066  0110F0  B4D8               	btfsc	status,2,c
  4067  0110F2  D7A5               	goto	l12801
  4068  0110F4  D7D6               	goto	l12811
  4069  0110F6                     __end_of_terminal_task:
  4070                           	opt stack 0
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           prodh	equ	0xFF4
  4076                           prodl	equ	0xFF3
  4077                           intcon	equ	0xFF2
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           postdec1	equ	0xFE5
  4081                           fsr1h	equ	0xFE2
  4082                           fsr1l	equ	0xFE1
  4083                           indf2	equ	0xFDF
  4084                           fsr2h	equ	0xFDA
  4085                           fsr2l	equ	0xFD9
  4086                           status	equ	0xFD8
  4087                           
  4088 ;; *************** function _terminal_operation *****************
  4089 ;; Defined at:
  4090 ;;		line 200 in file "ChargeStation_task.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4093 ;;		 -> usb_tx(8), 
  4094 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4095 ;;		 -> terminal_task@op0(25), 
  4096 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4097 ;;		 -> terminal_task@op1(25), 
  4098 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4099 ;;		 -> terminal_task@op2(25), 
  4100 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4101 ;;		 -> terminal_task@op3(25), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  percentage      1  133[BANK0 ] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4113 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;Total ram usage:       11 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:   19
  4120 ;; This function calls:
  4121 ;;		_atoi
  4122 ;;		_bootload
  4123 ;;		_ctmu_set_ratio
  4124 ;;		_ringbuf_put_str
  4125 ;;		_strcmp
  4126 ;;		_terminal_time
  4127 ;; This function is called by:
  4128 ;;		_terminal_task
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text2
  4133  0120C4                     __ptext2:
  4134                           	opt stack 0
  4135  0120C4                     _terminal_operation:
  4136                           	opt stack 10
  4137                           
  4138                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4139                           
  4140                           ;incstack = 0
  4141  0120C4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4142  0120C8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4143  0120CC  0ECF               	movlw	low STR_51
  4144  0120CE  0100               	movlb	0	; () banked
  4145  0120D0  6F62               	movwf	strcmp@s2& (0+255),b
  4146  0120D2  0EFF               	movlw	high STR_51
  4147  0120D4  0100               	movlb	0	; () banked
  4148  0120D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4149  0120D8  ECFD  F0B2         	call	_strcmp	;wreg free
  4150  0120DC  0100               	movlb	0	; () banked
  4151  0120DE  5160               	movf	?_strcmp& (0+255),w,b
  4152  0120E0  0100               	movlb	0	; () banked
  4153  0120E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4154  0120E4  B4D8               	btfsc	status,2,c
  4155  0120E6  D012               	goto	l12345
  4156                           
  4157                           ; BSR set to: 0
  4158  0120E8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4159  0120EC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4160  0120F0  0EF1               	movlw	low STR_52
  4161  0120F2  0100               	movlb	0	; () banked
  4162  0120F4  6F62               	movwf	strcmp@s2& (0+255),b
  4163  0120F6  0EFF               	movlw	high STR_52
  4164  0120F8  0100               	movlb	0	; () banked
  4165  0120FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4166  0120FC  ECFD  F0B2         	call	_strcmp	;wreg free
  4167  012100  0100               	movlb	0	; () banked
  4168  012102  5160               	movf	?_strcmp& (0+255),w,b
  4169  012104  0100               	movlb	0	; () banked
  4170  012106  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4171  012108  A4D8               	btfss	status,2,c
  4172  01210A  D00C               	goto	l12347
  4173  01210C                     l12345:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4177                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4178                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4179                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4180                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4181                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4182                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4183                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4184  01210C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4185  012110  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4186  012114  0EE6               	movlw	low STR_53
  4187  012116  0100               	movlb	0	; () banked
  4188  012118  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4189  01211A  0EFB               	movlw	high STR_53
  4190  01211C  0100               	movlb	0	; () banked
  4191  01211E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4192  012120  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
  4193  012124                     l12347:
  4194                           
  4195                           ;ChargeStation_task.c: 216: }
  4196                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4197  012124  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4198  012128  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4199  01212C  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4200  012130  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4201  012134  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4202  012138  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4203  01213C  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4204  012140  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4205  012144  ECF0  F084         	call	_terminal_time	;wreg free
  4206                           
  4207                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4208  012148  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4209  01214C  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4210  012150  0E67               	movlw	low STR_54
  4211  012152  0100               	movlb	0	; () banked
  4212  012154  6F62               	movwf	strcmp@s2& (0+255),b
  4213  012156  0EFF               	movlw	high STR_54
  4214  012158  0100               	movlb	0	; () banked
  4215  01215A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4216  01215C  ECFD  F0B2         	call	_strcmp	;wreg free
  4217  012160  0100               	movlb	0	; () banked
  4218  012162  5160               	movf	?_strcmp& (0+255),w,b
  4219  012164  0100               	movlb	0	; () banked
  4220  012166  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4221  012168  B4D8               	btfsc	status,2,c
  4222                           
  4223                           ; BSR set to: 0
  4224  01216A  00FF               	reset		;# 
  4225                           
  4226                           ;ChargeStation_task.c: 220: }
  4227                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4228  01216C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4229  012170  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4230  012174  0E70               	movlw	low STR_55
  4231  012176  0100               	movlb	0	; () banked
  4232  012178  6F62               	movwf	strcmp@s2& (0+255),b
  4233  01217A  0EFF               	movlw	high STR_55
  4234  01217C  0100               	movlb	0	; () banked
  4235  01217E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4236  012180  ECFD  F0B2         	call	_strcmp	;wreg free
  4237  012184  0100               	movlb	0	; () banked
  4238  012186  5160               	movf	?_strcmp& (0+255),w,b
  4239  012188  0100               	movlb	0	; () banked
  4240  01218A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4241  01218C  B4D8               	btfsc	status,2,c
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;ChargeStation_task.c: 222: bootload();
  4245  01218E  ECA3  F0B4         	call	_bootload	;wreg free
  4246                           
  4247                           ;ChargeStation_task.c: 223: }
  4248                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4249  012192  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4250  012196  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4251  01219A  0EEB               	movlw	low STR_56
  4252  01219C  0100               	movlb	0	; () banked
  4253  01219E  6F62               	movwf	strcmp@s2& (0+255),b
  4254  0121A0  0EFF               	movlw	high STR_56
  4255  0121A2  0100               	movlb	0	; () banked
  4256  0121A4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4257  0121A6  ECFD  F0B2         	call	_strcmp	;wreg free
  4258  0121AA  0100               	movlb	0	; () banked
  4259  0121AC  5160               	movf	?_strcmp& (0+255),w,b
  4260  0121AE  0100               	movlb	0	; () banked
  4261  0121B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4262  0121B2  B4D8               	btfsc	status,2,c
  4263  0121B4  D012               	goto	l12361
  4264                           
  4265                           ; BSR set to: 0
  4266  0121B6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4267  0121BA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4268  0121BE  0E25               	movlw	low STR_57
  4269  0121C0  0100               	movlb	0	; () banked
  4270  0121C2  6F62               	movwf	strcmp@s2& (0+255),b
  4271  0121C4  0EFF               	movlw	high STR_57
  4272  0121C6  0100               	movlb	0	; () banked
  4273  0121C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4274  0121CA  ECFD  F0B2         	call	_strcmp	;wreg free
  4275  0121CE  0100               	movlb	0	; () banked
  4276  0121D0  5160               	movf	?_strcmp& (0+255),w,b
  4277  0121D2  0100               	movlb	0	; () banked
  4278  0121D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4279  0121D6  A4D8               	btfss	status,2,c
  4280  0121D8  D003               	goto	l12363
  4281  0121DA                     l12361:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4285  0121DA  0E01               	movlw	1
  4286  0121DC  0101               	movlb	1	; () banked
  4287  0121DE  6F24               	movwf	_terminal_data_out& (0+255),b
  4288  0121E0                     l12363:
  4289                           
  4290                           ;ChargeStation_task.c: 226: }
  4291                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4292  0121E0  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4293  0121E4  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4294  0121E8  0EE6               	movlw	low (STR_19+3)
  4295  0121EA  0100               	movlb	0	; () banked
  4296  0121EC  6F62               	movwf	strcmp@s2& (0+255),b
  4297  0121EE  0EFF               	movlw	high (STR_19+3)
  4298  0121F0  0100               	movlb	0	; () banked
  4299  0121F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4300  0121F4  ECFD  F0B2         	call	_strcmp	;wreg free
  4301  0121F8  0100               	movlb	0	; () banked
  4302  0121FA  5160               	movf	?_strcmp& (0+255),w,b
  4303  0121FC  0100               	movlb	0	; () banked
  4304  0121FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4305  012200  A4D8               	btfss	status,2,c
  4306  012202  D003               	goto	l12367
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4310  012204  0E00               	movlw	0
  4311  012206  0101               	movlb	1	; () banked
  4312  012208  6F24               	movwf	_terminal_data_out& (0+255),b
  4313  01220A                     l12367:
  4314                           
  4315                           ;ChargeStation_task.c: 229: }
  4316                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4317  01220A  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4318  01220E  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4319  012212  0EBD               	movlw	low STR_59
  4320  012214  0100               	movlb	0	; () banked
  4321  012216  6F62               	movwf	strcmp@s2& (0+255),b
  4322  012218  0EFF               	movlw	high STR_59
  4323  01221A  0100               	movlb	0	; () banked
  4324  01221C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4325  01221E  ECFD  F0B2         	call	_strcmp	;wreg free
  4326  012222  0100               	movlb	0	; () banked
  4327  012224  5160               	movf	?_strcmp& (0+255),w,b
  4328  012226  0100               	movlb	0	; () banked
  4329  012228  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4330  01222A  A4D8               	btfss	status,2,c
  4331  01222C  0012               	return	
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4335  01222E  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4336  012232  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4337  012236  0E48               	movlw	low STR_60
  4338  012238  0100               	movlb	0	; () banked
  4339  01223A  6F62               	movwf	strcmp@s2& (0+255),b
  4340  01223C  0EFF               	movlw	high STR_60
  4341  01223E  0100               	movlb	0	; () banked
  4342  012240  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4343  012242  ECFD  F0B2         	call	_strcmp	;wreg free
  4344  012246  0100               	movlb	0	; () banked
  4345  012248  5160               	movf	?_strcmp& (0+255),w,b
  4346  01224A  0100               	movlb	0	; () banked
  4347  01224C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4348  01224E  B4D8               	btfsc	status,2,c
  4349  012250  D012               	goto	l12373
  4350                           
  4351                           ; BSR set to: 0
  4352  012252  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4353  012256  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4354  01225A  0ED4               	movlw	low STR_61
  4355  01225C  0100               	movlb	0	; () banked
  4356  01225E  6F62               	movwf	strcmp@s2& (0+255),b
  4357  012260  0EFF               	movlw	high STR_61
  4358  012262  0100               	movlb	0	; () banked
  4359  012264  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4360  012266  ECFD  F0B2         	call	_strcmp	;wreg free
  4361  01226A  0100               	movlb	0	; () banked
  4362  01226C  5160               	movf	?_strcmp& (0+255),w,b
  4363  01226E  0100               	movlb	0	; () banked
  4364  012270  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4365  012272  A4D8               	btfss	status,2,c
  4366  012274  D02C               	goto	l12385
  4367  012276                     l12373:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4371  012276  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4372  01227A  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4373  01227E  EC51  F0A1         	call	_atoi	;wreg free
  4374  012282  0100               	movlb	0	; () banked
  4375  012284  517C               	movf	?_atoi& (0+255),w,b
  4376  012286  0100               	movlb	0	; () banked
  4377  012288  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4381  01228A  0E65               	movlw	101
  4382  01228C  0100               	movlb	0	; () banked
  4383  01228E  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4384  012290  D012               	goto	l12383
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4388  012292  C0E5  F01C         	movff	terminal_operation@percentage,_ctmu_ratio
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4392  012296  501C               	movf	_ctmu_ratio,w,c
  4393  012298  ECBA  F0A2         	call	_ctmu_set_ratio
  4394                           
  4395                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4396  01229C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4397  0122A0  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4398  0122A4  0E1D               	movlw	low STR_62
  4399  0122A6  0100               	movlb	0	; () banked
  4400  0122A8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4401  0122AA  0EFE               	movlw	high STR_62
  4402  0122AC  0100               	movlb	0	; () banked
  4403  0122AE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4404  0122B0  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
  4405                           
  4406                           ;ChargeStation_task.c: 237: } else {
  4407  0122B4  D00C               	goto	l12385
  4408  0122B6                     l12383:
  4409                           
  4410                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4411  0122B6  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4412  0122BA  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4413  0122BE  0EBD               	movlw	low STR_63
  4414  0122C0  0100               	movlb	0	; () banked
  4415  0122C2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4416  0122C4  0EFD               	movlw	high STR_63
  4417  0122C6  0100               	movlb	0	; () banked
  4418  0122C8  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4419  0122CA  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
  4420  0122CE                     l12385:
  4421                           
  4422                           ;ChargeStation_task.c: 239: }
  4423                           ;ChargeStation_task.c: 240: }
  4424                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4425  0122CE  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4426  0122D2  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4427  0122D6  0EC3               	movlw	low STR_64
  4428  0122D8  0100               	movlb	0	; () banked
  4429  0122DA  6F62               	movwf	strcmp@s2& (0+255),b
  4430  0122DC  0EFF               	movlw	high STR_64
  4431  0122DE  0100               	movlb	0	; () banked
  4432  0122E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4433  0122E2  ECFD  F0B2         	call	_strcmp	;wreg free
  4434  0122E6  0100               	movlb	0	; () banked
  4435  0122E8  5160               	movf	?_strcmp& (0+255),w,b
  4436  0122EA  0100               	movlb	0	; () banked
  4437  0122EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4438  0122EE  B4D8               	btfsc	status,2,c
  4439  0122F0  D012               	goto	l12389
  4440                           
  4441                           ; BSR set to: 0
  4442  0122F2  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4443  0122F6  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4444  0122FA  0EDC               	movlw	low (STR_30+3)
  4445  0122FC  0100               	movlb	0	; () banked
  4446  0122FE  6F62               	movwf	strcmp@s2& (0+255),b
  4447  012300  0EFF               	movlw	high (STR_30+3)
  4448  012302  0100               	movlb	0	; () banked
  4449  012304  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4450  012306  ECFD  F0B2         	call	_strcmp	;wreg free
  4451  01230A  0100               	movlb	0	; () banked
  4452  01230C  5160               	movf	?_strcmp& (0+255),w,b
  4453  01230E  0100               	movlb	0	; () banked
  4454  012310  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4455  012312  A4D8               	btfss	status,2,c
  4456  012314  0012               	return	
  4457  012316                     l12389:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4461  012316  501C               	movf	_ctmu_ratio,w,c
  4462  012318  ECBA  F0A2         	call	_ctmu_set_ratio
  4463                           
  4464                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4465  01231C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4466  012320  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4467  012324  0E4D               	movlw	low STR_66
  4468  012326  0100               	movlb	0	; () banked
  4469  012328  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4470  01232A  0EFE               	movlw	high STR_66
  4471  01232C  0100               	movlb	0	; () banked
  4472  01232E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4473  012330  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
  4474  012334  0012               	return	
  4475  012336                     __end_of_terminal_operation:
  4476                           	opt stack 0
  4477                           tblptru	equ	0xFF8
  4478                           tblptrh	equ	0xFF7
  4479                           tblptrl	equ	0xFF6
  4480                           tablat	equ	0xFF5
  4481                           prodh	equ	0xFF4
  4482                           prodl	equ	0xFF3
  4483                           intcon	equ	0xFF2
  4484                           postinc0	equ	0xFEE
  4485                           wreg	equ	0xFE8
  4486                           postdec1	equ	0xFE5
  4487                           fsr1h	equ	0xFE2
  4488                           fsr1l	equ	0xFE1
  4489                           indf2	equ	0xFDF
  4490                           fsr2h	equ	0xFDA
  4491                           fsr2l	equ	0xFD9
  4492                           status	equ	0xFD8
  4493                           
  4494 ;; *************** function _terminal_time *****************
  4495 ;; Defined at:
  4496 ;;		line 93 in file "../My_library/My_terminal.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4499 ;;		 -> usb_tx(8), 
  4500 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4501 ;;		 -> terminal_task@op0(25), 
  4502 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4503 ;;		 -> terminal_task@op1(25), 
  4504 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4505 ;;		 -> terminal_task@op2(25), 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;		None               void
  4510 ;; Registers used:
  4511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4517 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4520 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4521 ;;Total ram usage:        9 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:   18
  4524 ;; This function calls:
  4525 ;;		_atoi
  4526 ;;		_month_length
  4527 ;;		_print_time
  4528 ;;		_strcmp
  4529 ;;		_terminal_at_hand
  4530 ;; This function is called by:
  4531 ;;		_terminal_operation
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text3
  4536  0109E0                     __ptext3:
  4537                           	opt stack 0
  4538  0109E0                     _terminal_time:
  4539                           	opt stack 10
  4540                           
  4541                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4542                           
  4543                           ;incstack = 0
  4544  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4545  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4546  0109E8  0E53               	movlw	low STR_25
  4547  0109EA  0100               	movlb	0	; () banked
  4548  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4549  0109EE  0EFF               	movlw	high STR_25
  4550  0109F0  0100               	movlb	0	; () banked
  4551  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4552  0109F4  ECFD  F0B2         	call	_strcmp	;wreg free
  4553  0109F8  0100               	movlb	0	; () banked
  4554  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4555  0109FC  0100               	movlb	0	; () banked
  4556  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4557  010A00  B4D8               	btfsc	status,2,c
  4558  010A02  D012               	goto	l11779
  4559                           
  4560                           ; BSR set to: 0
  4561  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4562  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4563  010A0C  0EEF               	movlw	low (STR_27+1)
  4564  010A0E  0100               	movlb	0	; () banked
  4565  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4566  010A12  0EFF               	movlw	high (STR_27+1)
  4567  010A14  0100               	movlb	0	; () banked
  4568  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4569  010A18  ECFD  F0B2         	call	_strcmp	;wreg free
  4570  010A1C  0100               	movlb	0	; () banked
  4571  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4572  010A20  0100               	movlb	0	; () banked
  4573  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4574  010A24  A4D8               	btfss	status,2,c
  4575  010A26  D006               	goto	l11781
  4576  010A28                     l11779:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;My_terminal.c: 95: print_time(tx);
  4580  010A28  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4581  010A2C  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4582  010A30  ECD9  F0AE         	call	_print_time	;wreg free
  4583  010A34                     l11781:
  4584                           
  4585                           ;My_terminal.c: 96: }
  4586                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4587  010A34  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4588  010A38  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4589  010A3C  0EEE               	movlw	low STR_27
  4590  010A3E  0100               	movlb	0	; () banked
  4591  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4592  010A42  0EFF               	movlw	high STR_27
  4593  010A44  0100               	movlb	0	; () banked
  4594  010A46  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4595  010A48  ECFD  F0B2         	call	_strcmp	;wreg free
  4596  010A4C  0100               	movlb	0	; () banked
  4597  010A4E  5160               	movf	?_strcmp& (0+255),w,b
  4598  010A50  0100               	movlb	0	; () banked
  4599  010A52  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4600  010A54  B4D8               	btfsc	status,2,c
  4601  010A56  D012               	goto	l11785
  4602                           
  4603                           ; BSR set to: 0
  4604  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4605  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4606  010A60  0E31               	movlw	low STR_28
  4607  010A62  0100               	movlb	0	; () banked
  4608  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4609  010A66  0EFF               	movlw	high STR_28
  4610  010A68  0100               	movlb	0	; () banked
  4611  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4612  010A6C  ECFD  F0B2         	call	_strcmp	;wreg free
  4613  010A70  0100               	movlb	0	; () banked
  4614  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4615  010A74  0100               	movlb	0	; () banked
  4616  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4617  010A78  A4D8               	btfss	status,2,c
  4618  010A7A  0012               	return	
  4619  010A7C                     l11785:
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4623  010A7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4624  010A80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4625  010A84  0EE9               	movlw	low (STR_34+2)
  4626  010A86  0100               	movlb	0	; () banked
  4627  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4628  010A8A  0EFF               	movlw	high (STR_34+2)
  4629  010A8C  0100               	movlb	0	; () banked
  4630  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4631  010A90  ECFD  F0B2         	call	_strcmp	;wreg free
  4632  010A94  0100               	movlb	0	; () banked
  4633  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4634  010A98  0100               	movlb	0	; () banked
  4635  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4636  010A9C  B4D8               	btfsc	status,2,c
  4637  010A9E  D012               	goto	l11789
  4638                           
  4639                           ; BSR set to: 0
  4640  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4641  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4642  010AA8  0ED9               	movlw	low STR_30
  4643  010AAA  0100               	movlb	0	; () banked
  4644  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4645  010AAE  0EFF               	movlw	high STR_30
  4646  010AB0  0100               	movlb	0	; () banked
  4647  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4648  010AB4  ECFD  F0B2         	call	_strcmp	;wreg free
  4649  010AB8  0100               	movlb	0	; () banked
  4650  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4651  010ABC  0100               	movlb	0	; () banked
  4652  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4653  010AC0  A4D8               	btfss	status,2,c
  4654  010AC2  D01C               	goto	l11791
  4655  010AC4                     l11789:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4659  010AC4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4660  010AC8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4661  010ACC  0E7D               	movlw	low (_now+10)
  4662  010ACE  0100               	movlb	0	; () banked
  4663  010AD0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4664  010AD2  0E01               	movlw	high (_now+10)
  4665  010AD4  0100               	movlb	0	; () banked
  4666  010AD6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4667  010AD8  0E00               	movlw	0
  4668  010ADA  0100               	movlb	0	; () banked
  4669  010ADC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4670  010ADE  0E63               	movlw	99
  4671  010AE0  0100               	movlb	0	; () banked
  4672  010AE2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4673  010AE4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4674  010AE8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4675  010AEC  EC51  F0A1         	call	_atoi	;wreg free
  4676  010AF0  0100               	movlb	0	; () banked
  4677  010AF2  517C               	movf	?_atoi& (0+255),w,b
  4678  010AF4  0100               	movlb	0	; () banked
  4679  010AF6  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4680  010AF8  EC9D  F0B2         	call	_terminal_at_hand	;wreg free
  4681  010AFC                     l11791:
  4682                           
  4683                           ;My_terminal.c: 100: }
  4684                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4685  010AFC  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4686  010B00  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4687  010B04  0EF3               	movlw	low STR_31
  4688  010B06  0100               	movlb	0	; () banked
  4689  010B08  6F62               	movwf	strcmp@s2& (0+255),b
  4690  010B0A  0EFF               	movlw	high STR_31
  4691  010B0C  0100               	movlb	0	; () banked
  4692  010B0E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4693  010B10  ECFD  F0B2         	call	_strcmp	;wreg free
  4694  010B14  0100               	movlb	0	; () banked
  4695  010B16  5160               	movf	?_strcmp& (0+255),w,b
  4696  010B18  0100               	movlb	0	; () banked
  4697  010B1A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4698  010B1C  B4D8               	btfsc	status,2,c
  4699  010B1E  D012               	goto	l11795
  4700                           
  4701                           ; BSR set to: 0
  4702  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4703  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4704  010B28  0EC9               	movlw	low STR_32
  4705  010B2A  0100               	movlb	0	; () banked
  4706  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4707  010B2E  0EFF               	movlw	high STR_32
  4708  010B30  0100               	movlb	0	; () banked
  4709  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4710  010B34  ECFD  F0B2         	call	_strcmp	;wreg free
  4711  010B38  0100               	movlb	0	; () banked
  4712  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4713  010B3C  0100               	movlb	0	; () banked
  4714  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4715  010B40  A4D8               	btfss	status,2,c
  4716  010B42  D01C               	goto	l11797
  4717  010B44                     l11795:
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4721  010B44  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4722  010B48  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4723  010B4C  0E7C               	movlw	low (_now+9)
  4724  010B4E  0100               	movlb	0	; () banked
  4725  010B50  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4726  010B52  0E01               	movlw	high (_now+9)
  4727  010B54  0100               	movlb	0	; () banked
  4728  010B56  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4729  010B58  0E01               	movlw	1
  4730  010B5A  0100               	movlb	0	; () banked
  4731  010B5C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4732  010B5E  0E0C               	movlw	12
  4733  010B60  0100               	movlb	0	; () banked
  4734  010B62  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4735  010B64  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4736  010B68  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4737  010B6C  EC51  F0A1         	call	_atoi	;wreg free
  4738  010B70  0100               	movlb	0	; () banked
  4739  010B72  517C               	movf	?_atoi& (0+255),w,b
  4740  010B74  0100               	movlb	0	; () banked
  4741  010B76  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4742  010B78  EC9D  F0B2         	call	_terminal_at_hand	;wreg free
  4743  010B7C                     l11797:
  4744                           
  4745                           ;My_terminal.c: 103: }
  4746                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4747  010B7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4748  010B80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4749  010B84  0EFF               	movlw	low (STR_67+30)
  4750  010B86  0100               	movlb	0	; () banked
  4751  010B88  6F62               	movwf	strcmp@s2& (0+255),b
  4752  010B8A  0EFD               	movlw	high (STR_67+30)
  4753  010B8C  0100               	movlb	0	; () banked
  4754  010B8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4755  010B90  ECFD  F0B2         	call	_strcmp	;wreg free
  4756  010B94  0100               	movlb	0	; () banked
  4757  010B96  5160               	movf	?_strcmp& (0+255),w,b
  4758  010B98  0100               	movlb	0	; () banked
  4759  010B9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4760  010B9C  B4D8               	btfsc	status,2,c
  4761  010B9E  D012               	goto	l11801
  4762                           
  4763                           ; BSR set to: 0
  4764  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4765  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4766  010BA8  0EE7               	movlw	low STR_34
  4767  010BAA  0100               	movlb	0	; () banked
  4768  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4769  010BAE  0EFF               	movlw	high STR_34
  4770  010BB0  0100               	movlb	0	; () banked
  4771  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4772  010BB4  ECFD  F0B2         	call	_strcmp	;wreg free
  4773  010BB8  0100               	movlb	0	; () banked
  4774  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4775  010BBC  0100               	movlb	0	; () banked
  4776  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4777  010BC0  A4D8               	btfss	status,2,c
  4778  010BC2  D023               	goto	l11805
  4779  010BC4                     l11801:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4783  010BC4  C17C  F066         	movff	_now+9,month_length@month
  4784  010BC8  0101               	movlb	1	; () banked
  4785  010BCA  517D               	movf	(_now+10)& (0+255),w,b
  4786  010BCC  EC7E  F0A4         	call	_month_length
  4787  010BD0  0100               	movlb	0	; () banked
  4788  010BD2  6FDA               	movwf	_terminal_time$7052& (0+255),b
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4792  010BD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4793  010BD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4794  010BDC  0E7B               	movlw	low (_now+8)
  4795  010BDE  0100               	movlb	0	; () banked
  4796  010BE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4797  010BE2  0E01               	movlw	high (_now+8)
  4798  010BE4  0100               	movlb	0	; () banked
  4799  010BE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4800  010BE8  0E01               	movlw	1
  4801  010BEA  0100               	movlb	0	; () banked
  4802  010BEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4803  010BEE  C0DA  F0D0         	movff	_terminal_time$7052,terminal_at_hand@max
  4804  010BF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4805  010BF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4806  010BFA  EC51  F0A1         	call	_atoi	;wreg free
  4807  010BFE  0100               	movlb	0	; () banked
  4808  010C00  517C               	movf	?_atoi& (0+255),w,b
  4809  010C02  0100               	movlb	0	; () banked
  4810  010C04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4811  010C06  EC9D  F0B2         	call	_terminal_at_hand	;wreg free
  4812  010C0A                     l11805:
  4813                           
  4814                           ;My_terminal.c: 106: }
  4815                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4816  010C0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4817  010C0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4818  010C12  0E4B               	movlw	low (STR_68+22)
  4819  010C14  0100               	movlb	0	; () banked
  4820  010C16  6F62               	movwf	strcmp@s2& (0+255),b
  4821  010C18  0EFE               	movlw	high (STR_68+22)
  4822  010C1A  0100               	movlb	0	; () banked
  4823  010C1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4824  010C1E  ECFD  F0B2         	call	_strcmp	;wreg free
  4825  010C22  0100               	movlb	0	; () banked
  4826  010C24  5160               	movf	?_strcmp& (0+255),w,b
  4827  010C26  0100               	movlb	0	; () banked
  4828  010C28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4829  010C2A  B4D8               	btfsc	status,2,c
  4830  010C2C  D012               	goto	l11809
  4831                           
  4832                           ; BSR set to: 0
  4833  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4834  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4835  010C36  0EDE               	movlw	low STR_36
  4836  010C38  0100               	movlb	0	; () banked
  4837  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4838  010C3C  0EFF               	movlw	high STR_36
  4839  010C3E  0100               	movlb	0	; () banked
  4840  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4841  010C42  ECFD  F0B2         	call	_strcmp	;wreg free
  4842  010C46  0100               	movlb	0	; () banked
  4843  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4844  010C4A  0100               	movlb	0	; () banked
  4845  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4846  010C4E  A4D8               	btfss	status,2,c
  4847  010C50  D01C               	goto	l11811
  4848  010C52                     l11809:
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4852  010C52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4853  010C56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4854  010C5A  0E79               	movlw	low (_now+6)
  4855  010C5C  0100               	movlb	0	; () banked
  4856  010C5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4857  010C60  0E01               	movlw	high (_now+6)
  4858  010C62  0100               	movlb	0	; () banked
  4859  010C64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4860  010C66  0E00               	movlw	0
  4861  010C68  0100               	movlb	0	; () banked
  4862  010C6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4863  010C6C  0E17               	movlw	23
  4864  010C6E  0100               	movlb	0	; () banked
  4865  010C70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4866  010C72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4867  010C76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4868  010C7A  EC51  F0A1         	call	_atoi	;wreg free
  4869  010C7E  0100               	movlb	0	; () banked
  4870  010C80  517C               	movf	?_atoi& (0+255),w,b
  4871  010C82  0100               	movlb	0	; () banked
  4872  010C84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4873  010C86  EC9D  F0B2         	call	_terminal_at_hand	;wreg free
  4874  010C8A                     l11811:
  4875                           
  4876                           ;My_terminal.c: 109: }
  4877                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4878  010C8A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4879  010C8E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4880  010C92  0EF5               	movlw	low STR_37
  4881  010C94  0100               	movlb	0	; () banked
  4882  010C96  6F62               	movwf	strcmp@s2& (0+255),b
  4883  010C98  0EFF               	movlw	high STR_37
  4884  010C9A  0100               	movlb	0	; () banked
  4885  010C9C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4886  010C9E  ECFD  F0B2         	call	_strcmp	;wreg free
  4887  010CA2  0100               	movlb	0	; () banked
  4888  010CA4  5160               	movf	?_strcmp& (0+255),w,b
  4889  010CA6  0100               	movlb	0	; () banked
  4890  010CA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4891  010CAA  B4D8               	btfsc	status,2,c
  4892  010CAC  D012               	goto	l11815
  4893                           
  4894                           ; BSR set to: 0
  4895  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4896  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4897  010CB6  0E98               	movlw	low STR_38
  4898  010CB8  0100               	movlb	0	; () banked
  4899  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4900  010CBC  0EFF               	movlw	high STR_38
  4901  010CBE  0100               	movlb	0	; () banked
  4902  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4903  010CC2  ECFD  F0B2         	call	_strcmp	;wreg free
  4904  010CC6  0100               	movlb	0	; () banked
  4905  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4906  010CCA  0100               	movlb	0	; () banked
  4907  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4908  010CCE  A4D8               	btfss	status,2,c
  4909  010CD0  D01C               	goto	l11817
  4910  010CD2                     l11815:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4914  010CD2  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4915  010CD6  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4916  010CDA  0E78               	movlw	low (_now+5)
  4917  010CDC  0100               	movlb	0	; () banked
  4918  010CDE  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4919  010CE0  0E01               	movlw	high (_now+5)
  4920  010CE2  0100               	movlb	0	; () banked
  4921  010CE4  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4922  010CE6  0E00               	movlw	0
  4923  010CE8  0100               	movlb	0	; () banked
  4924  010CEA  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4925  010CEC  0E3B               	movlw	59
  4926  010CEE  0100               	movlb	0	; () banked
  4927  010CF0  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4928  010CF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4929  010CF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4930  010CFA  EC51  F0A1         	call	_atoi	;wreg free
  4931  010CFE  0100               	movlb	0	; () banked
  4932  010D00  517C               	movf	?_atoi& (0+255),w,b
  4933  010D02  0100               	movlb	0	; () banked
  4934  010D04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4935  010D06  EC9D  F0B2         	call	_terminal_at_hand	;wreg free
  4936  010D0A                     l11817:
  4937                           
  4938                           ;My_terminal.c: 112: }
  4939                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4940  010D0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4941  010D0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4942  010D12  0EBB               	movlw	low (STR_70+4)
  4943  010D14  0100               	movlb	0	; () banked
  4944  010D16  6F62               	movwf	strcmp@s2& (0+255),b
  4945  010D18  0EFF               	movlw	high (STR_70+4)
  4946  010D1A  0100               	movlb	0	; () banked
  4947  010D1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4948  010D1E  ECFD  F0B2         	call	_strcmp	;wreg free
  4949  010D22  0100               	movlb	0	; () banked
  4950  010D24  5160               	movf	?_strcmp& (0+255),w,b
  4951  010D26  0100               	movlb	0	; () banked
  4952  010D28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4953  010D2A  B4D8               	btfsc	status,2,c
  4954  010D2C  D012               	goto	l11821
  4955                           
  4956                           ; BSR set to: 0
  4957  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4958  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4959  010D36  0E91               	movlw	low STR_40
  4960  010D38  0100               	movlb	0	; () banked
  4961  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4962  010D3C  0EFF               	movlw	high STR_40
  4963  010D3E  0100               	movlb	0	; () banked
  4964  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4965  010D42  ECFD  F0B2         	call	_strcmp	;wreg free
  4966  010D46  0100               	movlb	0	; () banked
  4967  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4968  010D4A  0100               	movlb	0	; () banked
  4969  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4970  010D4E  A4D8               	btfss	status,2,c
  4971  010D50  0012               	return	
  4972  010D52                     l11821:
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4976  010D52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4977  010D56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4978  010D5A  0E77               	movlw	low (_now+4)
  4979  010D5C  0100               	movlb	0	; () banked
  4980  010D5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4981  010D60  0E01               	movlw	high (_now+4)
  4982  010D62  0100               	movlb	0	; () banked
  4983  010D64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4984  010D66  0E00               	movlw	0
  4985  010D68  0100               	movlb	0	; () banked
  4986  010D6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4987  010D6C  0E3B               	movlw	59
  4988  010D6E  0100               	movlb	0	; () banked
  4989  010D70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4990  010D72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4991  010D76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4992  010D7A  EC51  F0A1         	call	_atoi	;wreg free
  4993  010D7E  0100               	movlb	0	; () banked
  4994  010D80  517C               	movf	?_atoi& (0+255),w,b
  4995  010D82  0100               	movlb	0	; () banked
  4996  010D84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4997  010D86  EC9D  F0B2         	call	_terminal_at_hand	;wreg free
  4998  010D8A  0012               	return	
  4999  010D8C                     __end_of_terminal_time:
  5000                           	opt stack 0
  5001                           tblptru	equ	0xFF8
  5002                           tblptrh	equ	0xFF7
  5003                           tblptrl	equ	0xFF6
  5004                           tablat	equ	0xFF5
  5005                           prodh	equ	0xFF4
  5006                           prodl	equ	0xFF3
  5007                           intcon	equ	0xFF2
  5008                           postinc0	equ	0xFEE
  5009                           wreg	equ	0xFE8
  5010                           postdec1	equ	0xFE5
  5011                           fsr1h	equ	0xFE2
  5012                           fsr1l	equ	0xFE1
  5013                           indf2	equ	0xFDF
  5014                           fsr2h	equ	0xFDA
  5015                           fsr2l	equ	0xFD9
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function _terminal_at_hand *****************
  5019 ;; Defined at:
  5020 ;;		line 82 in file "../My_library/My_terminal.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  5023 ;;		 -> usb_tx(8), 
  5024 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  5025 ;;		 -> now(14), 
  5026 ;;  min             1  111[BANK0 ] unsigned char 
  5027 ;;  max             1  112[BANK0 ] unsigned char 
  5028 ;;  value           1  113[BANK0 ] unsigned char 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;		None               void
  5033 ;; Registers used:
  5034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5040 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;Total ram usage:        7 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:   17
  5047 ;; This function calls:
  5048 ;;		_RTCC_from_caltime
  5049 ;;		_print_time
  5050 ;;		_ringbuf_put_str
  5051 ;; This function is called by:
  5052 ;;		_terminal_time
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text4
  5057  01653A                     __ptext4:
  5058                           	opt stack 0
  5059  01653A                     _terminal_at_hand:
  5060                           	opt stack 10
  5061                           
  5062                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  5063                           
  5064                           ;incstack = 0
  5065  01653A  0100               	movlb	0	; () banked
  5066  01653C  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  5067  01653E  0100               	movlb	0	; () banked
  5068  016540  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  5069  016542  A0D8               	btfss	status,0,c
  5070  016544  D01D               	goto	l11419
  5071                           
  5072                           ; BSR set to: 0
  5073  016546  0100               	movlb	0	; () banked
  5074  016548  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  5075  01654A  0100               	movlb	0	; () banked
  5076  01654C  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  5077  01654E  A0D8               	btfss	status,0,c
  5078  016550  D017               	goto	l11419
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;My_terminal.c: 84: *hand = value;
  5082  016552  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  5083  016556  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  5084  01655A  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  5088  01655E  0E73               	movlw	low _now
  5089  016560  0100               	movlb	0	; () banked
  5090  016562  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  5091  016564  0E01               	movlw	high _now
  5092  016566  0100               	movlb	0	; () banked
  5093  016568  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5094  01656A  ECAF  F0B6         	call	_RTCC_from_caltime	;wreg free
  5095                           
  5096                           ;My_terminal.c: 86: time_change_flag = 1;
  5097  01656E  0E01               	movlw	1
  5098  016570  6E22               	movwf	_time_change_flag,c
  5099                           
  5100                           ;My_terminal.c: 87: print_time(tx);
  5101  016572  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5102  016576  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5103  01657A  ECD9  F0AE         	call	_print_time	;wreg free
  5104                           
  5105                           ;My_terminal.c: 88: } else {
  5106  01657E  0012               	return	
  5107  016580                     l11419:
  5108                           
  5109                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5110  016580  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5111  016584  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5112  016588  0E82               	movlw	low STR_24
  5113  01658A  0100               	movlb	0	; () banked
  5114  01658C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5115  01658E  0EFF               	movlw	high STR_24
  5116  016590  0100               	movlb	0	; () banked
  5117  016592  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5118  016594  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
  5119  016598  0012               	return	
  5120  01659A                     __end_of_terminal_at_hand:
  5121                           	opt stack 0
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodh	equ	0xFF4
  5127                           prodl	equ	0xFF3
  5128                           intcon	equ	0xFF2
  5129                           postinc0	equ	0xFEE
  5130                           wreg	equ	0xFE8
  5131                           postdec1	equ	0xFE5
  5132                           fsr1h	equ	0xFE2
  5133                           fsr1l	equ	0xFE1
  5134                           indf2	equ	0xFDF
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function _print_time *****************
  5140 ;; Defined at:
  5141 ;;		line 68 in file "../My_library/My_terminal.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5144 ;;		 -> usb_tx(8), 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  str            30   77[BANK0 ] unsigned char [30]
  5147 ;; Return value:  Size  Location     Type
  5148 ;;		None               void
  5149 ;; Registers used:
  5150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5157 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;Total ram usage:       32 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:   16
  5163 ;; This function calls:
  5164 ;;		_RTCC_from_RTCC
  5165 ;;		_ringbuf_put_str
  5166 ;;		_sprintf
  5167 ;; This function is called by:
  5168 ;;		_terminal_at_hand
  5169 ;;		_terminal_time
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text5
  5174  015DB2                     __ptext5:
  5175                           	opt stack 0
  5176  015DB2                     _print_time:
  5177                           	opt stack 10
  5178                           
  5179                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5180                           
  5181                           ;incstack = 0
  5182  015DB2  0E73               	movlw	low _now
  5183  015DB4  0100               	movlb	0	; () banked
  5184  015DB6  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5185  015DB8  0E01               	movlw	high _now
  5186  015DBA  0100               	movlb	0	; () banked
  5187  015DBC  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5188  015DBE  EC52  F0B7         	call	_RTCC_from_RTCC	;wreg free
  5189                           
  5190                           ;My_terminal.c: 70: char str[30];
  5191                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5192                           ;My_terminal.c: 72: now.YY,
  5193                           ;My_terminal.c: 73: now.MM,
  5194                           ;My_terminal.c: 74: now.DD,
  5195                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5196                           ;My_terminal.c: 76: now.hh,
  5197                           ;My_terminal.c: 77: now.mm,
  5198                           ;My_terminal.c: 78: now.ss);
  5199  015DC2  0EAD               	movlw	low print_time@str
  5200  015DC4  0100               	movlb	0	; () banked
  5201  015DC6  6F83               	movwf	sprintf@sp& (0+255),b
  5202  015DC8  0E00               	movlw	high print_time@str
  5203  015DCA  0100               	movlb	0	; () banked
  5204  015DCC  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5205  015DCE  0E98               	movlw	low STR_23
  5206  015DD0  0100               	movlb	0	; () banked
  5207  015DD2  6F85               	movwf	sprintf@f& (0+255),b
  5208  015DD4  0EFD               	movlw	high STR_23
  5209  015DD6  0100               	movlb	0	; () banked
  5210  015DD8  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5211  015DDA  C17D  F087         	movff	_now+10,?_sprintf+4
  5212  015DDE  0100               	movlb	0	; () banked
  5213  015DE0  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5214  015DE2  C17C  F089         	movff	_now+9,?_sprintf+6
  5215  015DE6  0100               	movlb	0	; () banked
  5216  015DE8  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5217  015DEA  C17B  F08B         	movff	_now+8,?_sprintf+8
  5218  015DEE  0100               	movlb	0	; () banked
  5219  015DF0  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5220  015DF2  0101               	movlb	1	; () banked
  5221  015DF4  517A               	movf	(_now+7)& (0+255),w,b
  5222  015DF6  0D04               	mullw	4
  5223  015DF8  0EA4               	movlw	low _weekday_3char
  5224  015DFA  24F3               	addwf	prodl,w,c
  5225  015DFC  0100               	movlb	0	; () banked
  5226  015DFE  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5227  015E00  0EFB               	movlw	high _weekday_3char
  5228  015E02  20F4               	addwfc	prodh,w,c
  5229  015E04  0100               	movlb	0	; () banked
  5230  015E06  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5231  015E08  C179  F08F         	movff	_now+6,?_sprintf+12
  5232  015E0C  0100               	movlb	0	; () banked
  5233  015E0E  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5234  015E10  C178  F091         	movff	_now+5,?_sprintf+14
  5235  015E14  0100               	movlb	0	; () banked
  5236  015E16  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5237  015E18  C177  F093         	movff	_now+4,?_sprintf+16
  5238  015E1C  0100               	movlb	0	; () banked
  5239  015E1E  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5240  015E20  EC00  F080         	call	_sprintf	;wreg free
  5241                           
  5242                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5243  015E24  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5244  015E28  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5245  015E2C  0EAD               	movlw	low print_time@str
  5246  015E2E  0100               	movlb	0	; () banked
  5247  015E30  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5248  015E32  0E00               	movlw	high print_time@str
  5249  015E34  0100               	movlb	0	; () banked
  5250  015E36  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5251  015E38  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
  5252  015E3C  0012               	return		;funcret
  5253  015E3E                     __end_of_print_time:
  5254                           	opt stack 0
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           intcon	equ	0xFF2
  5262                           postinc0	equ	0xFEE
  5263                           wreg	equ	0xFE8
  5264                           postdec1	equ	0xFE5
  5265                           fsr1h	equ	0xFE2
  5266                           fsr1l	equ	0xFE1
  5267                           indf2	equ	0xFDF
  5268                           fsr2h	equ	0xFDA
  5269                           fsr2l	equ	0xFD9
  5270                           status	equ	0xFD8
  5271                           
  5272 ;; *************** function _RTCC_from_caltime *****************
  5273 ;; Defined at:
  5274 ;;		line 57 in file "../My_library/My_RTCC.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  tm              2   47[BANK0 ] PTR struct .
  5277 ;;		 -> now(14), 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;		None               void
  5282 ;; Registers used:
  5283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5289 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5292 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5293 ;;Total ram usage:        2 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:   15
  5296 ;; This function calls:
  5297 ;;		_caltime_to_RTCC
  5298 ;;		_caltime_to_epoch
  5299 ;;		_epoch_to_caltime
  5300 ;; This function is called by:
  5301 ;;		_terminal_at_hand
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text6
  5306  016D5E                     __ptext6:
  5307                           	opt stack 0
  5308  016D5E                     _RTCC_from_caltime:
  5309                           	opt stack 11
  5310                           
  5311                           ;My_RTCC.c: 58: caltime_to_epoch(tm);
  5312                           
  5313                           ;incstack = 0
  5314  016D5E  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5315  016D62  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5316  016D66  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
  5317                           
  5318                           ;My_RTCC.c: 59: epoch_to_caltime(tm);
  5319  016D6A  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5320  016D6E  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5321  016D72  EC25  F096         	call	_epoch_to_caltime	;wreg free
  5322                           
  5323                           ;My_RTCC.c: 60: caltime_to_RTCC(tm);
  5324  016D76  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5325  016D7A  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5326  016D7E  EC59  F0A5         	call	_caltime_to_RTCC	;wreg free
  5327  016D82  0012               	return		;funcret
  5328  016D84                     __end_of_RTCC_from_caltime:
  5329                           	opt stack 0
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           postinc0	equ	0xFEE
  5338                           wreg	equ	0xFE8
  5339                           postdec1	equ	0xFE5
  5340                           fsr1h	equ	0xFE2
  5341                           fsr1l	equ	0xFE1
  5342                           indf2	equ	0xFDF
  5343                           fsr2h	equ	0xFDA
  5344                           fsr2l	equ	0xFD9
  5345                           status	equ	0xFD8
  5346                           
  5347 ;; *************** function _strcmp *****************
  5348 ;; Defined at:
  5349 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5352 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5353 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5354 ;;		 -> STR_65(2), STR_64(6), STR_61(5), STR_60(11), 
  5355 ;;		 -> STR_59(6), STR_58(1), STR_57(12), STR_56(3), 
  5356 ;;		 -> STR_55(9), STR_54(9), STR_52(2), STR_51(5), 
  5357 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  5358 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  5359 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  5360 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  r               1    5[BANK0 ] char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2    0[BANK0 ] int 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;Total ram usage:        6 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:   12
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_terminal_time
  5383 ;;		_terminal_operation
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text7
  5388  0165FA                     __ptext7:
  5389                           	opt stack 0
  5390  0165FA                     _strcmp:
  5391                           	opt stack 15
  5392                           
  5393                           ;incstack = 0
  5394  0165FA  D006               	goto	l11425
  5395  0165FC                     l11423:
  5396  0165FC  0100               	movlb	0	; () banked
  5397  0165FE  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5398  016600  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5399  016602  0100               	movlb	0	; () banked
  5400  016604  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5401  016606  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5402  016608                     l11425:
  5403  016608  C060  FFD9         	movff	strcmp@s1,fsr2l
  5404  01660C  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5405  016610  50DF               	movf	indf2,w,c
  5406  016612  0100               	movlb	0	; () banked
  5407  016614  6F64               	movwf	??_strcmp& (0+255),b
  5408  016616  C062  FFF6         	movff	strcmp@s2,tblptrl
  5409  01661A  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5410  01661E                     	if	0	;tblptru may be non-zero
  5411  01661E                     	endif
  5412  01661E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5413  01661E  0E00               	movlw	low (__mediumconst shr (0+16))
  5414  016620  6EF8               	movwf	tblptru,c
  5415  016622                     	endif
  5416  016622  0008               	tblrd		*
  5417  016624  50F5               	movf	tablat,w,c
  5418  016626  0800               	sublw	0
  5419  016628  0100               	movlb	0	; () banked
  5420  01662A  2564               	addwf	??_strcmp& (0+255),w,b
  5421  01662C  0100               	movlb	0	; () banked
  5422  01662E  6F65               	movwf	strcmp@r& (0+255),b
  5423  016630  0100               	movlb	0	; () banked
  5424  016632  5165               	movf	strcmp@r& (0+255),w,b
  5425  016634  A4D8               	btfss	status,2,c
  5426  016636  D007               	goto	l11429
  5427                           
  5428                           ; BSR set to: 0
  5429  016638  C060  FFD9         	movff	strcmp@s1,fsr2l
  5430  01663C  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5431  016640  50DF               	movf	indf2,w,c
  5432  016642  A4D8               	btfss	status,2,c
  5433  016644  D7DB               	goto	l11423
  5434  016646                     l11429:
  5435                           
  5436                           ; BSR set to: 0
  5437  016646  0100               	movlb	0	; () banked
  5438  016648  5165               	movf	strcmp@r& (0+255),w,b
  5439  01664A  0100               	movlb	0	; () banked
  5440  01664C  6F60               	movwf	?_strcmp& (0+255),b
  5441  01664E  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5442  016650  BF60               	btfsc	?_strcmp& (0+255),7,b
  5443  016652  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5444  016654  0012               	return	
  5445  016656                     __end_of_strcmp:
  5446                           	opt stack 0
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           intcon	equ	0xFF2
  5454                           postinc0	equ	0xFEE
  5455                           wreg	equ	0xFE8
  5456                           postdec1	equ	0xFE5
  5457                           fsr1h	equ	0xFE2
  5458                           fsr1l	equ	0xFE1
  5459                           indf2	equ	0xFDF
  5460                           fsr2h	equ	0xFDA
  5461                           fsr2l	equ	0xFD9
  5462                           status	equ	0xFD8
  5463                           
  5464 ;; *************** function _atoi *****************
  5465 ;; Defined at:
  5466 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5469 ;;		 -> terminal_task@op2(25), 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  a               2   33[BANK0 ] int 
  5472 ;;  sign            1   32[BANK0 ] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  2   28[BANK0 ] int 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5483 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5485 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5486 ;;Total ram usage:        7 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:   13
  5489 ;; This function calls:
  5490 ;;		___wmul
  5491 ;;		_isdigit
  5492 ;; This function is called by:
  5493 ;;		_terminal_time
  5494 ;;		_terminal_operation
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text8
  5499  0142A2                     __ptext8:
  5500                           	opt stack 0
  5501  0142A2                     _atoi:
  5502                           	opt stack 14
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;incstack = 0
  5506  0142A2  D003               	goto	l11437
  5507  0142A4                     l11435:
  5508  0142A4  0100               	movlb	0	; () banked
  5509  0142A6  4B7C               	infsnz	atoi@s& (0+255),f,b
  5510  0142A8  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5511  0142AA                     l11437:
  5512  0142AA  C07C  FFD9         	movff	atoi@s,fsr2l
  5513  0142AE  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5514  0142B2  0E20               	movlw	32
  5515  0142B4  18DE               	xorwf	postinc2,w,c
  5516  0142B6  B4D8               	btfsc	status,2,c
  5517  0142B8  D7F5               	goto	l11435
  5518  0142BA  C07C  FFD9         	movff	atoi@s,fsr2l
  5519  0142BE  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5520  0142C2  0E09               	movlw	9
  5521  0142C4  18DE               	xorwf	postinc2,w,c
  5522  0142C6  B4D8               	btfsc	status,2,c
  5523  0142C8  D7ED               	goto	l11435
  5524  0142CA  0E00               	movlw	0
  5525  0142CC  0100               	movlb	0	; () banked
  5526  0142CE  6F82               	movwf	(atoi@a+1)& (0+255),b
  5527  0142D0  0E00               	movlw	0
  5528  0142D2  6F81               	movwf	atoi@a& (0+255),b
  5529  0142D4  0E00               	movlw	0
  5530  0142D6  0100               	movlb	0	; () banked
  5531  0142D8  6F80               	movwf	atoi@sign& (0+255),b
  5532                           
  5533                           ; BSR set to: 0
  5534  0142DA  C07C  FFD9         	movff	atoi@s,fsr2l
  5535  0142DE  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5536  0142E2  0E2D               	movlw	45
  5537  0142E4  18DE               	xorwf	postinc2,w,c
  5538  0142E6  A4D8               	btfss	status,2,c
  5539  0142E8  D003               	goto	l11447
  5540                           
  5541                           ; BSR set to: 0
  5542  0142EA  0100               	movlb	0	; () banked
  5543  0142EC  2B80               	incf	atoi@sign& (0+255),f,b
  5544  0142EE  D02E               	goto	l11453
  5545  0142F0                     l11447:
  5546                           
  5547                           ; BSR set to: 0
  5548  0142F0  C07C  FFD9         	movff	atoi@s,fsr2l
  5549  0142F4  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5550  0142F8  0E2B               	movlw	43
  5551  0142FA  18DE               	xorwf	postinc2,w,c
  5552  0142FC  A4D8               	btfss	status,2,c
  5553  0142FE  D029               	goto	l11455
  5554  014300  D025               	goto	l11453
  5555  014302                     l11451:
  5556  014302  C081  F076         	movff	atoi@a,___wmul@multiplier
  5557  014306  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5558  01430A  0E00               	movlw	0
  5559  01430C  0100               	movlb	0	; () banked
  5560  01430E  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5561  014310  0E0A               	movlw	10
  5562  014312  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5563  014314  EC72  F0B5         	call	___wmul	;wreg free
  5564  014318  C07C  FFD9         	movff	atoi@s,fsr2l
  5565  01431C  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5566  014320  50DF               	movf	indf2,w,c
  5567  014322  0100               	movlb	0	; () banked
  5568  014324  6F7E               	movwf	??_atoi& (0+255),b
  5569  014326  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5570  014328  0100               	movlb	0	; () banked
  5571  01432A  5176               	movf	?___wmul& (0+255),w,b
  5572  01432C  0100               	movlb	0	; () banked
  5573  01432E  277E               	addwf	??_atoi& (0+255),f,b
  5574  014330  0100               	movlb	0	; () banked
  5575  014332  5177               	movf	(?___wmul+1)& (0+255),w,b
  5576  014334  0100               	movlb	0	; () banked
  5577  014336  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5578  014338  0ED0               	movlw	208
  5579  01433A  0100               	movlb	0	; () banked
  5580  01433C  257E               	addwf	??_atoi& (0+255),w,b
  5581  01433E  0100               	movlb	0	; () banked
  5582  014340  6F81               	movwf	atoi@a& (0+255),b
  5583  014342  0EFF               	movlw	255
  5584  014344  0100               	movlb	0	; () banked
  5585  014346  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5586  014348  0100               	movlb	0	; () banked
  5587  01434A  6F82               	movwf	(atoi@a+1)& (0+255),b
  5588  01434C                     l11453:
  5589                           
  5590                           ; BSR set to: 0
  5591  01434C  0100               	movlb	0	; () banked
  5592  01434E  4B7C               	infsnz	atoi@s& (0+255),f,b
  5593  014350  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5594  014352                     l11455:
  5595                           
  5596                           ; BSR set to: 0
  5597  014352  C07C  FFD9         	movff	atoi@s,fsr2l
  5598  014356  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5599  01435A  50DF               	movf	indf2,w,c
  5600  01435C  EC48  F0B6         	call	_isdigit
  5601  014360  B0D8               	btfsc	status,0,c
  5602  014362  D7CF               	goto	l11451
  5603  014364  0100               	movlb	0	; () banked
  5604  014366  5180               	movf	atoi@sign& (0+255),w,b
  5605  014368  0100               	movlb	0	; () banked
  5606  01436A  B4D8               	btfsc	status,2,c
  5607  01436C  D00E               	goto	l2221
  5608                           
  5609                           ; BSR set to: 0
  5610  01436E  C081  F07E         	movff	atoi@a,??_atoi
  5611  014372  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5612  014376  0100               	movlb	0	; () banked
  5613  014378  1F7E               	comf	??_atoi& (0+255),f,b
  5614  01437A  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5615  01437C  4B7E               	infsnz	??_atoi& (0+255),f,b
  5616  01437E  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5617  014380  C07E  F07C         	movff	??_atoi,?_atoi
  5618  014384  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5619  014388  0012               	return	
  5620  01438A                     l2221:
  5621                           
  5622                           ; BSR set to: 0
  5623  01438A  C081  F07C         	movff	atoi@a,?_atoi
  5624  01438E  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5625                           
  5626                           ; BSR set to: 0
  5627  014392  0012               	return		;funcret
  5628  014394                     __end_of_atoi:
  5629                           	opt stack 0
  5630                           tblptru	equ	0xFF8
  5631                           tblptrh	equ	0xFF7
  5632                           tblptrl	equ	0xFF6
  5633                           tablat	equ	0xFF5
  5634                           prodh	equ	0xFF4
  5635                           prodl	equ	0xFF3
  5636                           intcon	equ	0xFF2
  5637                           postinc0	equ	0xFEE
  5638                           wreg	equ	0xFE8
  5639                           postdec1	equ	0xFE5
  5640                           fsr1h	equ	0xFE2
  5641                           fsr1l	equ	0xFE1
  5642                           indf2	equ	0xFDF
  5643                           postinc2	equ	0xFDE
  5644                           fsr2h	equ	0xFDA
  5645                           fsr2l	equ	0xFD9
  5646                           status	equ	0xFD8
  5647                           
  5648 ;; *************** function _bootload *****************
  5649 ;; Defined at:
  5650 ;;		line 191 in file "ChargeStation_task.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;		None               void
  5657 ;; Registers used:
  5658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;Total ram usage:        0 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:   16
  5671 ;; This function calls:
  5672 ;;		_ST7032_clear
  5673 ;;		_ST7032_cursor
  5674 ;;		_ST7032_puts
  5675 ;; This function is called by:
  5676 ;;		_terminal_operation
  5677 ;;		_main
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text9
  5682  016946                     __ptext9:
  5683                           	opt stack 0
  5684  016946                     _bootload:
  5685                           	opt stack 12
  5686                           
  5687                           ;ChargeStation_task.c: 192: ST7032_clear();
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;incstack = 0
  5691  016946  EC7C  F0B7         	call	_ST7032_clear	;wreg free
  5692                           
  5693                           ;ChargeStation_task.c: 193: ST7032_cursor(0, 0);
  5694  01694A  0E00               	movlw	0
  5695  01694C  0100               	movlb	0	; () banked
  5696  01694E  6F71               	movwf	ST7032_cursor@row& (0+255),b
  5697  016950  0E00               	movlw	0
  5698  016952  ECA7  F0B5         	call	_ST7032_cursor
  5699                           
  5700                           ;ChargeStation_task.c: 194: ST7032_puts("PIC18F27J53");
  5701  016956  0E19               	movlw	low STR_49
  5702  016958  0100               	movlb	0	; () banked
  5703  01695A  6F70               	movwf	ST7032_puts@s& (0+255),b
  5704  01695C  0EFF               	movlw	high STR_49
  5705  01695E  0100               	movlb	0	; () banked
  5706  016960  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5707  016962  EC87  F0B3         	call	_ST7032_puts	;wreg free
  5708                           
  5709                           ;ChargeStation_task.c: 195: ST7032_cursor(0, 1);
  5710  016966  0E01               	movlw	1
  5711  016968  0100               	movlb	0	; () banked
  5712  01696A  6F71               	movwf	ST7032_cursor@row& (0+255),b
  5713  01696C  0E00               	movlw	0
  5714  01696E  ECA7  F0B5         	call	_ST7032_cursor
  5715                           
  5716                           ;ChargeStation_task.c: 196: ST7032_puts("Bootloader mode");
  5717  016972  0EC3               	movlw	low STR_50
  5718  016974  0100               	movlb	0	; () banked
  5719  016976  6F70               	movwf	ST7032_puts@s& (0+255),b
  5720  016978  0EFE               	movlw	high STR_50
  5721  01697A  0100               	movlb	0	; () banked
  5722  01697C  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5723  01697E  EC87  F0B3         	call	_ST7032_puts	;wreg free
  5724  016982  EF0E F000          	goto	28	;# 
  5725  016986  0012               	return		;funcret
  5726  016988                     __end_of_bootload:
  5727                           	opt stack 0
  5728                           tblptru	equ	0xFF8
  5729                           tblptrh	equ	0xFF7
  5730                           tblptrl	equ	0xFF6
  5731                           tablat	equ	0xFF5
  5732                           prodh	equ	0xFF4
  5733                           prodl	equ	0xFF3
  5734                           intcon	equ	0xFF2
  5735                           postinc0	equ	0xFEE
  5736                           wreg	equ	0xFE8
  5737                           postdec1	equ	0xFE5
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           fsr2h	equ	0xFDA
  5743                           fsr2l	equ	0xFD9
  5744                           status	equ	0xFD8
  5745                           
  5746 ;; *************** function _ringbuf_put_num *****************
  5747 ;; Defined at:
  5748 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5751 ;;		 -> usb_tx(8), 
  5752 ;;  value           2   37[BANK0 ] const unsigned int 
  5753 ;;  digits          1   39[BANK0 ] unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  i               1   40[BANK0 ] unsigned char 
  5756 ;;  temp            2   41[BANK0 ] unsigned int 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;		None               void
  5759 ;; Registers used:
  5760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5766 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;Total ram usage:        8 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:   14
  5773 ;; This function calls:
  5774 ;;		___lwdiv
  5775 ;;		___lwmod
  5776 ;;		_ringbuf_put
  5777 ;; This function is called by:
  5778 ;;		_terminal_task
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text10
  5783  015EC2                     __ptext10:
  5784                           	opt stack 0
  5785  015EC2                     _ringbuf_put_num:
  5786                           	opt stack 15
  5787                           
  5788                           ;My_ringbuf.c: 29: while (digits--) {
  5789                           
  5790                           ;incstack = 0
  5791  015EC2  D039               	goto	l12257
  5792  015EC4                     l774:
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5796  015EC4  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5797  015EC8  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5801  015ECC  0E00               	movlw	0
  5802  015ECE  0100               	movlb	0	; () banked
  5803  015ED0  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5804  015ED2  D011               	goto	l12251
  5805  015ED4                     l12247:
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;My_ringbuf.c: 32: temp /= 10;
  5809  015ED4  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5810  015ED8  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5811  015EDC  0E00               	movlw	0
  5812  015EDE  0100               	movlb	0	; () banked
  5813  015EE0  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5814  015EE2  0E0A               	movlw	10
  5815  015EE4  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5816  015EE6  ECA2  F0AF         	call	___lwdiv	;wreg free
  5817  015EEA  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5818  015EEE  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5819  015EF2  0100               	movlb	0	; () banked
  5820  015EF4  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5821  015EF6                     l12251:
  5822                           
  5823                           ; BSR set to: 0
  5824  015EF6  0100               	movlb	0	; () banked
  5825  015EF8  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5826  015EFA  0100               	movlb	0	; () banked
  5827  015EFC  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5828  015EFE  A0D8               	btfss	status,0,c
  5829  015F00  D7E9               	goto	l12247
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;My_ringbuf.c: 33: }
  5833                           ;My_ringbuf.c: 34: temp %= 10;
  5834                           
  5835                           ; BSR set to: 0
  5836  015F02  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5837  015F06  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5838  015F0A  0E00               	movlw	0
  5839  015F0C  0100               	movlb	0	; () banked
  5840  015F0E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5841  015F10  0E0A               	movlw	10
  5842  015F12  6F62               	movwf	___lwmod@divisor& (0+255),b
  5843  015F14  EC6C  F0B2         	call	___lwmod	;wreg free
  5844  015F18  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5845  015F1C  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5846                           
  5847                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5848  015F20  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5849  015F24  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5850  015F28  0100               	movlb	0	; () banked
  5851  015F2A  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5852  015F2C  0F30               	addlw	48
  5853  015F2E  0100               	movlb	0	; () banked
  5854  015F30  6F6A               	movwf	ringbuf_put@data& (0+255),b
  5855  015F32  EC99  F0A6         	call	_ringbuf_put	;wreg free
  5856  015F36                     l12257:
  5857  015F36  0100               	movlb	0	; () banked
  5858  015F38  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5859  015F3A  0100               	movlb	0	; () banked
  5860  015F3C  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5861  015F3E  B4D8               	btfsc	status,2,c
  5862  015F40  0012               	return	
  5863  015F42  D7C0               	goto	l774
  5864  015F44                     __end_of_ringbuf_put_num:
  5865                           	opt stack 0
  5866                           tblptru	equ	0xFF8
  5867                           tblptrh	equ	0xFF7
  5868                           tblptrl	equ	0xFF6
  5869                           tablat	equ	0xFF5
  5870                           prodh	equ	0xFF4
  5871                           prodl	equ	0xFF3
  5872                           intcon	equ	0xFF2
  5873                           postinc0	equ	0xFEE
  5874                           wreg	equ	0xFE8
  5875                           postdec1	equ	0xFE5
  5876                           fsr1h	equ	0xFE2
  5877                           fsr1l	equ	0xFE1
  5878                           indf2	equ	0xFDF
  5879                           postinc2	equ	0xFDE
  5880                           fsr2h	equ	0xFDA
  5881                           fsr2l	equ	0xFD9
  5882                           status	equ	0xFD8
  5883                           
  5884 ;; *************** function _ringbuf_delete *****************
  5885 ;; Defined at:
  5886 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5889 ;;		 -> terminal_task@command(8), 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;		None               void
  5894 ;; Registers used:
  5895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5905 ;;Total ram usage:        2 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:   12
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_terminal_task
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text11
  5916  016D84                     __ptext11:
  5917                           	opt stack 0
  5918  016D84                     _ringbuf_delete:
  5919                           	opt stack 17
  5920                           
  5921                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;incstack = 0
  5925  016D84  0100               	movlb	0	; () banked
  5926  016D86  EE20 F006          	lfsr	2,6
  5927  016D8A  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5928  016D8C  26D9               	addwf	fsr2l,f,c
  5929  016D8E  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5930  016D90  22DA               	addwfc	fsr2h,f,c
  5931  016D92  0100               	movlb	0	; () banked
  5932  016D94  EE10 F004          	lfsr	1,4
  5933  016D98  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5934  016D9A  26E1               	addwf	fsr1l,f,c
  5935  016D9C  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5936  016D9E  22E2               	addwfc	fsr1h,f,c
  5937  016DA0  CFDE FFE6          	movff	postinc2,postinc1
  5938  016DA4  CFDD FFE5          	movff	postdec2,postdec1
  5939                           
  5940                           ; BSR set to: 0
  5941  016DA8  0012               	return		;funcret
  5942  016DAA                     __end_of_ringbuf_delete:
  5943                           	opt stack 0
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           postinc0	equ	0xFEE
  5952                           wreg	equ	0xFE8
  5953                           postinc1	equ	0xFE6
  5954                           postdec1	equ	0xFE5
  5955                           fsr1h	equ	0xFE2
  5956                           fsr1l	equ	0xFE1
  5957                           indf2	equ	0xFDF
  5958                           postinc2	equ	0xFDE
  5959                           postdec2	equ	0xFDD
  5960                           fsr2h	equ	0xFDA
  5961                           fsr2l	equ	0xFD9
  5962                           status	equ	0xFD8
  5963                           
  5964 ;; *************** function _ringbuf_backspace *****************
  5965 ;; Defined at:
  5966 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5969 ;;		 -> terminal_task@command(8), 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;		None               void
  5974 ;; Registers used:
  5975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5984 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;Total ram usage:        6 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:   13
  5988 ;; This function calls:
  5989 ;;		_ringbuf_num
  5990 ;; This function is called by:
  5991 ;;		_terminal_task
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text12
  5996  015C96                     __ptext12:
  5997                           	opt stack 0
  5998  015C96                     _ringbuf_backspace:
  5999                           	opt stack 16
  6000                           
  6001                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;incstack = 0
  6005  015C96  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6006  015C9A  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6007  015C9E  EC43  F0A2         	call	_ringbuf_num	;wreg free
  6008  015CA2  0100               	movlb	0	; () banked
  6009  015CA4  5160               	movf	?_ringbuf_num& (0+255),w,b
  6010  015CA6  0100               	movlb	0	; () banked
  6011  015CA8  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6012  015CAA  B4D8               	btfsc	status,2,c
  6013  015CAC  0012               	return	
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6017  015CAE  0100               	movlb	0	; () banked
  6018  015CB0  EE20 F004          	lfsr	2,4
  6019  015CB4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6020  015CB6  26D9               	addwf	fsr2l,f,c
  6021  015CB8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6022  015CBA  22DA               	addwfc	fsr2h,f,c
  6023  015CBC  50DE               	movf	postinc2,w,c
  6024  015CBE  10DE               	iorwf	postinc2,w,c
  6025  015CC0  B4D8               	btfsc	status,2,c
  6026  015CC2  D00B               	goto	l12285
  6027                           
  6028                           ; BSR set to: 0
  6029  015CC4  0100               	movlb	0	; () banked
  6030  015CC6  EE20 F004          	lfsr	2,4
  6031  015CCA  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6032  015CCC  26D9               	addwf	fsr2l,f,c
  6033  015CCE  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6034  015CD0  22DA               	addwfc	fsr2h,f,c
  6035  015CD2  06DE               	decf	postinc2,f,c
  6036  015CD4  0E00               	movlw	0
  6037  015CD6  5ADD               	subwfb	postdec2,f,c
  6038  015CD8  0012               	return	
  6039  015CDA                     l12285:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6043  015CDA  0EFF               	movlw	255
  6044  015CDC  0100               	movlb	0	; () banked
  6045  015CDE  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6046  015CE0  0EFF               	movlw	255
  6047  015CE2  0100               	movlb	0	; () banked
  6048  015CE4  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6049  015CE6  0100               	movlb	0	; () banked
  6050  015CE8  EE20 F002          	lfsr	2,2
  6051  015CEC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6052  015CEE  26D9               	addwf	fsr2l,f,c
  6053  015CF0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6054  015CF2  22DA               	addwfc	fsr2h,f,c
  6055  015CF4  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6056  015CF8  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6057  015CFC  0100               	movlb	0	; () banked
  6058  015CFE  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6059  015D00  0100               	movlb	0	; () banked
  6060  015D02  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6061  015D04  0100               	movlb	0	; () banked
  6062  015D06  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6063  015D08  0100               	movlb	0	; () banked
  6064  015D0A  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6065  015D0C  0100               	movlb	0	; () banked
  6066  015D0E  EE20 F004          	lfsr	2,4
  6067  015D12  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6068  015D14  26D9               	addwf	fsr2l,f,c
  6069  015D16  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6070  015D18  22DA               	addwfc	fsr2h,f,c
  6071  015D1A  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6072  015D1E  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6073                           
  6074                           ; BSR set to: 0
  6075  015D22  0012               	return	
  6076  015D24                     __end_of_ringbuf_backspace:
  6077                           	opt stack 0
  6078                           tblptru	equ	0xFF8
  6079                           tblptrh	equ	0xFF7
  6080                           tblptrl	equ	0xFF6
  6081                           tablat	equ	0xFF5
  6082                           prodh	equ	0xFF4
  6083                           prodl	equ	0xFF3
  6084                           intcon	equ	0xFF2
  6085                           postinc0	equ	0xFEE
  6086                           wreg	equ	0xFE8
  6087                           postinc1	equ	0xFE6
  6088                           postdec1	equ	0xFE5
  6089                           fsr1h	equ	0xFE2
  6090                           fsr1l	equ	0xFE1
  6091                           indf2	equ	0xFDF
  6092                           postinc2	equ	0xFDE
  6093                           postdec2	equ	0xFDD
  6094                           fsr2h	equ	0xFDA
  6095                           fsr2l	equ	0xFD9
  6096                           status	equ	0xFD8
  6097                           
  6098 ;; *************** function _software_init *****************
  6099 ;; Defined at:
  6100 ;;		line 105 in file "main.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  i               1   36[BANK0 ] unsigned char 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;		None               void
  6107 ;; Registers used:
  6108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;Total ram usage:        1 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:   15
  6121 ;; This function calls:
  6122 ;;		_LED_output
  6123 ;;		_OUT
  6124 ;;		_ctmu_set_ratio
  6125 ;;		_display
  6126 ;; This function is called by:
  6127 ;;		_main
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text13
  6132  015524                     __ptext13:
  6133                           	opt stack 0
  6134  015524                     _software_init:
  6135                           	opt stack 15
  6136                           
  6137                           ;main.c: 107: ctmu_ratio = 90;
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;incstack = 0
  6141  015524  0E5A               	movlw	90
  6142  015526  6E1C               	movwf	_ctmu_ratio,c
  6143                           
  6144                           ;main.c: 108: ctmu_set_ratio(ctmu_ratio);
  6145  015528  501C               	movf	_ctmu_ratio,w,c
  6146  01552A  ECBA  F0A2         	call	_ctmu_set_ratio
  6147                           
  6148                           ;main.c: 111: display(LOGO, "Charge Station", "Made by KERI");
  6149  01552E  0EE2               	movlw	low STR_47
  6150  015530  0100               	movlb	0	; () banked
  6151  015532  6F60               	movwf	display@str0& (0+255),b
  6152  015534  0EFE               	movlw	high STR_47
  6153  015536  0100               	movlb	0	; () banked
  6154  015538  6F61               	movwf	(display@str0+1)& (0+255),b
  6155  01553A  0EFF               	movlw	low STR_75
  6156  01553C  0100               	movlb	0	; () banked
  6157  01553E  6F62               	movwf	display@str1& (0+255),b
  6158  015540  0EFE               	movlw	high STR_75
  6159  015542  0100               	movlb	0	; () banked
  6160  015544  6F63               	movwf	(display@str1+1)& (0+255),b
  6161  015546  0E00               	movlw	0
  6162  015548  EC87  F09C         	call	_display
  6163                           
  6164                           ;main.c: 114: for (uint8_t i = 0; i < 3; i++) {
  6165  01554C  0E00               	movlw	0
  6166  01554E  0100               	movlb	0	; () banked
  6167  015550  6F84               	movwf	software_init@i& (0+255),b
  6168  015552                     l12969:
  6169                           
  6170                           ; BSR set to: 0
  6171  015552  0E02               	movlw	2
  6172  015554  0100               	movlb	0	; () banked
  6173  015556  6584               	cpfsgt	software_init@i& (0+255),b
  6174  015558  D001               	goto	l12973
  6175  01555A  D040               	goto	l12985
  6176  01555C                     l12973:
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;main.c: 115: OUT(i, 0);
  6180  01555C  0E00               	movlw	0
  6181  01555E  0100               	movlb	0	; () banked
  6182  015560  6F60               	movwf	OUT@value& (0+255),b
  6183  015562  0100               	movlb	0	; () banked
  6184  015564  5184               	movf	software_init@i& (0+255),w,b
  6185  015566  ECC6  F0B0         	call	_OUT
  6186                           
  6187                           ;main.c: 116: LED_output(i, 0);
  6188  01556A  0E00               	movlw	0
  6189  01556C  0100               	movlb	0	; () banked
  6190  01556E  6F60               	movwf	LED_output@value& (0+255),b
  6191  015570  0100               	movlb	0	; () banked
  6192  015572  5184               	movf	software_init@i& (0+255),w,b
  6193  015574  EC54  F0B0         	call	_LED_output
  6194                           
  6195                           ;main.c: 117: port[i].cut_cnt = 0;
  6196  015578  0100               	movlb	0	; () banked
  6197  01557A  5184               	movf	software_init@i& (0+255),w,b
  6198  01557C  0D17               	mullw	23
  6199  01557E  0E14               	movlw	20
  6200  015580  26F3               	addwf	prodl,f,c
  6201  015582  0E00               	movlw	0
  6202  015584  22F4               	addwfc	prodh,f,c
  6203  015586  0E2E               	movlw	low _port
  6204  015588  24F3               	addwf	prodl,w,c
  6205  01558A  6ED9               	movwf	fsr2l,c
  6206  01558C  0E01               	movlw	high _port
  6207  01558E  20F4               	addwfc	prodh,w,c
  6208  015590  6EDA               	movwf	fsr2h,c
  6209  015592  0E00               	movlw	0
  6210  015594  6EDE               	movwf	postinc2,c
  6211  015596  0E00               	movlw	0
  6212  015598  6EDD               	movwf	postdec2,c
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;main.c: 118: port[i].flag.auto_cut_ON = 1;
  6216  01559A  0100               	movlb	0	; () banked
  6217  01559C  5184               	movf	software_init@i& (0+255),w,b
  6218  01559E  0D17               	mullw	23
  6219  0155A0  0E16               	movlw	22
  6220  0155A2  26F3               	addwf	prodl,f,c
  6221  0155A4  0E00               	movlw	0
  6222  0155A6  22F4               	addwfc	prodh,f,c
  6223  0155A8  0E2E               	movlw	low _port
  6224  0155AA  24F3               	addwf	prodl,w,c
  6225  0155AC  6ED9               	movwf	fsr2l,c
  6226  0155AE  0E01               	movlw	high _port
  6227  0155B0  20F4               	addwfc	prodh,w,c
  6228  0155B2  6EDA               	movwf	fsr2h,c
  6229  0155B4  0101               	movlb	1	; () banked
  6230  0155B6  80DF               	bsf	indf2,0,c
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;main.c: 119: port[i].flag.led_indicator_ON = 1;
  6234  0155B8  0100               	movlb	0	; () banked
  6235  0155BA  5184               	movf	software_init@i& (0+255),w,b
  6236  0155BC  0D17               	mullw	23
  6237  0155BE  0E16               	movlw	22
  6238  0155C0  26F3               	addwf	prodl,f,c
  6239  0155C2  0E00               	movlw	0
  6240  0155C4  22F4               	addwfc	prodh,f,c
  6241  0155C6  0E2E               	movlw	low _port
  6242  0155C8  24F3               	addwf	prodl,w,c
  6243  0155CA  6ED9               	movwf	fsr2l,c
  6244  0155CC  0E01               	movlw	high _port
  6245  0155CE  20F4               	addwfc	prodh,w,c
  6246  0155D0  6EDA               	movwf	fsr2h,c
  6247  0155D2  0101               	movlb	1	; () banked
  6248  0155D4  82DF               	bsf	indf2,1,c
  6249                           
  6250                           ; BSR set to: 1
  6251  0155D6  0100               	movlb	0	; () banked
  6252  0155D8  2B84               	incf	software_init@i& (0+255),f,b
  6253  0155DA  D7BB               	goto	l12969
  6254  0155DC                     l12985:
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;main.c: 120: }
  6258                           ;main.c: 123: settings_flag = 0;
  6259  0155DC  0E00               	movlw	0
  6260  0155DE  0101               	movlb	1	; () banked
  6261  0155E0  6F22               	movwf	_settings_flag& (0+255),b
  6262                           
  6263                           ; BSR set to: 1
  6264  0155E2  0012               	return		;funcret
  6265  0155E4                     __end_of_software_init:
  6266                           	opt stack 0
  6267                           tblptru	equ	0xFF8
  6268                           tblptrh	equ	0xFF7
  6269                           tblptrl	equ	0xFF6
  6270                           tablat	equ	0xFF5
  6271                           prodh	equ	0xFF4
  6272                           prodl	equ	0xFF3
  6273                           intcon	equ	0xFF2
  6274                           postinc0	equ	0xFEE
  6275                           wreg	equ	0xFE8
  6276                           postinc1	equ	0xFE6
  6277                           postdec1	equ	0xFE5
  6278                           fsr1h	equ	0xFE2
  6279                           fsr1l	equ	0xFE1
  6280                           indf2	equ	0xFDF
  6281                           postinc2	equ	0xFDE
  6282                           postdec2	equ	0xFDD
  6283                           fsr2h	equ	0xFDA
  6284                           fsr2l	equ	0xFD9
  6285                           status	equ	0xFD8
  6286                           
  6287 ;; *************** function _ctmu_set_ratio *****************
  6288 ;; Defined at:
  6289 ;;		line 14 in file "ctmu.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  percentage      1    wreg     unsigned char 
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;  percentage      1   35[BANK0 ] unsigned char 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;		None               void
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6306 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6307 ;;Total ram usage:        1 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:   14
  6310 ;; This function calls:
  6311 ;;		_CTMU_read
  6312 ;;		___lwdiv
  6313 ;;		___wmul
  6314 ;; This function is called by:
  6315 ;;		_terminal_operation
  6316 ;;		_software_init
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text14
  6321  014574                     __ptext14:
  6322                           	opt stack 0
  6323  014574                     _ctmu_set_ratio:
  6324                           	opt stack 14
  6325                           
  6326                           ; BSR set to: 1
  6327                           ;incstack = 0
  6328                           ;ctmu_set_ratio@percentage stored from wreg
  6329  014574  0100               	movlb	0	; () banked
  6330  014576  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6331                           
  6332                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6333  014578  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6334  01457C  0100               	movlb	0	; () banked
  6335  01457E  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6336  014580  0E00               	movlw	0
  6337  014582  EC31  F0AA         	call	_CTMU_read
  6338  014586  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6339  01458A  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6340  01458E  EC72  F0B5         	call	___wmul	;wreg free
  6341  014592  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6342  014596  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6343  01459A  0E00               	movlw	0
  6344  01459C  0100               	movlb	0	; () banked
  6345  01459E  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6346  0145A0  0E64               	movlw	100
  6347  0145A2  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6348  0145A4  ECA2  F0AF         	call	___lwdiv	;wreg free
  6349  0145A8  C07C  F132         	movff	?___lwdiv,_port+4
  6350  0145AC  C07D  F133         	movff	?___lwdiv+1,_port+5
  6351                           
  6352                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6353  0145B0  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6354  0145B4  0100               	movlb	0	; () banked
  6355  0145B6  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6356  0145B8  0E01               	movlw	1
  6357  0145BA  EC31  F0AA         	call	_CTMU_read
  6358  0145BE  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6359  0145C2  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6360  0145C6  EC72  F0B5         	call	___wmul	;wreg free
  6361  0145CA  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6362  0145CE  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6363  0145D2  0E00               	movlw	0
  6364  0145D4  0100               	movlb	0	; () banked
  6365  0145D6  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6366  0145D8  0E64               	movlw	100
  6367  0145DA  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6368  0145DC  ECA2  F0AF         	call	___lwdiv	;wreg free
  6369  0145E0  C07C  F149         	movff	?___lwdiv,_port+27
  6370  0145E4  C07D  F14A         	movff	?___lwdiv+1,_port+28
  6371                           
  6372                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6373  0145E8  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6374  0145EC  0100               	movlb	0	; () banked
  6375  0145EE  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6376  0145F0  0E02               	movlw	2
  6377  0145F2  EC31  F0AA         	call	_CTMU_read
  6378  0145F6  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6379  0145FA  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6380  0145FE  EC72  F0B5         	call	___wmul	;wreg free
  6381  014602  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6382  014606  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6383  01460A  0E00               	movlw	0
  6384  01460C  0100               	movlb	0	; () banked
  6385  01460E  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6386  014610  0E64               	movlw	100
  6387  014612  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6388  014614  ECA2  F0AF         	call	___lwdiv	;wreg free
  6389  014618  C07C  F160         	movff	?___lwdiv,_port+50
  6390  01461C  C07D  F161         	movff	?___lwdiv+1,_port+51
  6391                           
  6392                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6393  014620  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6394  014624  0100               	movlb	0	; () banked
  6395  014626  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6396  014628  0E03               	movlw	3
  6397  01462A  EC31  F0AA         	call	_CTMU_read
  6398  01462E  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6399  014632  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6400  014636  EC72  F0B5         	call	___wmul	;wreg free
  6401  01463A  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6402  01463E  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6403  014642  0E00               	movlw	0
  6404  014644  0100               	movlb	0	; () banked
  6405  014646  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6406  014648  0E64               	movlw	100
  6407  01464A  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6408  01464C  ECA2  F0AF         	call	___lwdiv	;wreg free
  6409  014650  C07C  F110         	movff	?___lwdiv,_ctmu_value_m
  6410  014654  C07D  F111         	movff	?___lwdiv+1,_ctmu_value_m+1
  6411  014658  0012               	return		;funcret
  6412  01465A                     __end_of_ctmu_set_ratio:
  6413                           	opt stack 0
  6414                           tblptru	equ	0xFF8
  6415                           tblptrh	equ	0xFF7
  6416                           tblptrl	equ	0xFF6
  6417                           tablat	equ	0xFF5
  6418                           prodh	equ	0xFF4
  6419                           prodl	equ	0xFF3
  6420                           intcon	equ	0xFF2
  6421                           postinc0	equ	0xFEE
  6422                           wreg	equ	0xFE8
  6423                           postinc1	equ	0xFE6
  6424                           postdec1	equ	0xFE5
  6425                           fsr1h	equ	0xFE2
  6426                           fsr1l	equ	0xFE1
  6427                           indf2	equ	0xFDF
  6428                           postinc2	equ	0xFDE
  6429                           postdec2	equ	0xFDD
  6430                           fsr2h	equ	0xFDA
  6431                           fsr2l	equ	0xFD9
  6432                           status	equ	0xFD8
  6433                           
  6434 ;; *************** function _sleep_task *****************
  6435 ;; Defined at:
  6436 ;;		line 164 in file "ChargeStation_task.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  i               1   21[BANK0 ] unsigned char 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;		None               void
  6443 ;; Registers used:
  6444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6454 ;;Total ram usage:        1 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:   16
  6457 ;; This function calls:
  6458 ;;		_ADC
  6459 ;;		_LED_output
  6460 ;;		_OUT
  6461 ;;		_ST7032_clear
  6462 ;;		_ST7032_cursor
  6463 ;;		_ST7032_puts
  6464 ;;		_display
  6465 ;; This function is called by:
  6466 ;;		_main
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text15
  6471  014E06                     __ptext15:
  6472                           	opt stack 0
  6473  014E06                     _sleep_task:
  6474                           	opt stack 14
  6475                           
  6476                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6477                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6478                           
  6479                           ;incstack = 0
  6480  014E06  0E0C               	movlw	12
  6481  014E08  ECD9  F0B5         	call	_ADC
  6482  014E0C  0E08               	movlw	8
  6483  014E0E  0100               	movlb	0	; () banked
  6484  014E10  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6485  014E12  B0D8               	btfsc	status,0,c
  6486  014E14  D05B               	goto	l12931
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6490  014E16  0E01               	movlw	1
  6491  014E18  0101               	movlb	1	; () banked
  6492  014E1A  6F2C               	movwf	sleep_task@sleep_flag& (0+255),b
  6493                           
  6494                           ; BSR set to: 1
  6495                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6496  014E1C  9EF2               	bcf	intcon,7,c	;volatile
  6497                           
  6498                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6499  014E1E  0E00               	movlw	0
  6500  014E20  0100               	movlb	0	; () banked
  6501  014E22  6F75               	movwf	sleep_task@i& (0+255),b
  6502  014E24                     l12905:
  6503                           
  6504                           ; BSR set to: 0
  6505  014E24  0E02               	movlw	2
  6506  014E26  0100               	movlb	0	; () banked
  6507  014E28  6575               	cpfsgt	sleep_task@i& (0+255),b
  6508  014E2A  D001               	goto	l12909
  6509  014E2C  D011               	goto	l12915
  6510  014E2E                     l12909:
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6514  014E2E  0E00               	movlw	0
  6515  014E30  0100               	movlb	0	; () banked
  6516  014E32  6F60               	movwf	OUT@value& (0+255),b
  6517  014E34  0100               	movlb	0	; () banked
  6518  014E36  5175               	movf	sleep_task@i& (0+255),w,b
  6519  014E38  ECC6  F0B0         	call	_OUT
  6520                           
  6521                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6522  014E3C  0E00               	movlw	0
  6523  014E3E  0100               	movlb	0	; () banked
  6524  014E40  6F60               	movwf	LED_output@value& (0+255),b
  6525  014E42  0100               	movlb	0	; () banked
  6526  014E44  5175               	movf	sleep_task@i& (0+255),w,b
  6527  014E46  EC54  F0B0         	call	_LED_output
  6528  014E4A  0100               	movlb	0	; () banked
  6529  014E4C  2B75               	incf	sleep_task@i& (0+255),f,b
  6530  014E4E  D7EA               	goto	l12905
  6531  014E50                     l12915:
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;ChargeStation_task.c: 172: }
  6535                           ;ChargeStation_task.c: 173: ST7032_clear();
  6536  014E50  EC7C  F0B7         	call	_ST7032_clear	;wreg free
  6537                           
  6538                           ;ChargeStation_task.c: 174: ST7032_cursor(0, 0);
  6539  014E54  0E00               	movlw	0
  6540  014E56  0100               	movlb	0	; () banked
  6541  014E58  6F71               	movwf	ST7032_cursor@row& (0+255),b
  6542  014E5A  0E00               	movlw	0
  6543  014E5C  ECA7  F0B5         	call	_ST7032_cursor
  6544                           
  6545                           ;ChargeStation_task.c: 175: ST7032_puts("Charge Station 6");
  6546  014E60  0E92               	movlw	low STR_45
  6547  014E62  0100               	movlb	0	; () banked
  6548  014E64  6F70               	movwf	ST7032_puts@s& (0+255),b
  6549  014E66  0EFE               	movlw	high STR_45
  6550  014E68  0100               	movlb	0	; () banked
  6551  014E6A  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6552  014E6C  EC87  F0B3         	call	_ST7032_puts	;wreg free
  6553                           
  6554                           ;ChargeStation_task.c: 176: ST7032_cursor(0, 1);
  6555  014E70  0E01               	movlw	1
  6556  014E72  0100               	movlb	0	; () banked
  6557  014E74  6F71               	movwf	ST7032_cursor@row& (0+255),b
  6558  014E76  0E00               	movlw	0
  6559  014E78  ECA7  F0B5         	call	_ST7032_cursor
  6560                           
  6561                           ;ChargeStation_task.c: 177: ST7032_puts("SLEEPING NOW");
  6562  014E7C  0E0C               	movlw	low STR_46
  6563  014E7E  0100               	movlb	0	; () banked
  6564  014E80  6F70               	movwf	ST7032_puts@s& (0+255),b
  6565  014E82  0EFF               	movlw	high STR_46
  6566  014E84  0100               	movlb	0	; () banked
  6567  014E86  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6568  014E88  EC87  F0B3         	call	_ST7032_puts	;wreg free
  6569                           
  6570                           ;ChargeStation_task.c: 178: }
  6571                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6572  014E8C  D01F               	goto	l12931
  6573  014E8E                     l12925:
  6574                           
  6575                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6576  014E8E  0E0C               	movlw	12
  6577  014E90  ECD9  F0B5         	call	_ADC
  6578  014E94  0100               	movlb	0	; () banked
  6579  014E96  0560               	decf	?_ADC& (0+255),w,b
  6580  014E98  0E08               	movlw	8
  6581  014E9A  0100               	movlb	0	; () banked
  6582  014E9C  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6583  014E9E  A0D8               	btfss	status,0,c
  6584  014EA0  D013               	goto	l1556
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6588  014EA2  0E00               	movlw	0
  6589  014EA4  0101               	movlb	1	; () banked
  6590  014EA6  6F2C               	movwf	sleep_task@sleep_flag& (0+255),b
  6591                           
  6592                           ; BSR set to: 1
  6593                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6594  014EA8  0EE2               	movlw	low STR_47
  6595  014EAA  0100               	movlb	0	; () banked
  6596  014EAC  6F60               	movwf	display@str0& (0+255),b
  6597  014EAE  0EFE               	movlw	high STR_47
  6598  014EB0  0100               	movlb	0	; () banked
  6599  014EB2  6F61               	movwf	(display@str0+1)& (0+255),b
  6600  014EB4  0EF1               	movlw	low STR_48
  6601  014EB6  0100               	movlb	0	; () banked
  6602  014EB8  6F62               	movwf	display@str1& (0+255),b
  6603  014EBA  0EFE               	movlw	high STR_48
  6604  014EBC  0100               	movlb	0	; () banked
  6605  014EBE  6F63               	movwf	(display@str1+1)& (0+255),b
  6606  014EC0  0E00               	movlw	0
  6607  014EC2  EC87  F09C         	call	_display
  6608                           
  6609                           ;ChargeStation_task.c: 183: break;
  6610  014EC6  0012               	return	
  6611  014EC8                     l1556:
  6612                           
  6613                           ; BSR set to: 0
  6614  014EC8  0003               	sleep		;# 
  6615                           
  6616                           ;ChargeStation_task.c: 186: __nop();
  6617  014ECA  F000               	nop	
  6618  014ECC                     l12931:
  6619  014ECC  0101               	movlb	1	; () banked
  6620  014ECE  512C               	movf	sleep_task@sleep_flag& (0+255),w,b
  6621  014ED0  0101               	movlb	1	; () banked
  6622  014ED2  B4D8               	btfsc	status,2,c
  6623  014ED4  0012               	return	
  6624  014ED6  D7DB               	goto	l12925
  6625  014ED8                     __end_of_sleep_task:
  6626                           	opt stack 0
  6627                           tblptru	equ	0xFF8
  6628                           tblptrh	equ	0xFF7
  6629                           tblptrl	equ	0xFF6
  6630                           tablat	equ	0xFF5
  6631                           prodh	equ	0xFF4
  6632                           prodl	equ	0xFF3
  6633                           intcon	equ	0xFF2
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           postinc1	equ	0xFE6
  6637                           postdec1	equ	0xFE5
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           postdec2	equ	0xFDD
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function _normal_task *****************
  6648 ;; Defined at:
  6649 ;;		line 121 in file "ChargeStation_task.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;		None
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;		None               void
  6656 ;; Registers used:
  6657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;Total ram usage:        0 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:   19
  6670 ;; This function calls:
  6671 ;;		_Auto_cut
  6672 ;;		_data_out
  6673 ;;		_display
  6674 ;;		_display_LCD
  6675 ;;		_integrate_current
  6676 ;;		_integrate_time
  6677 ;;		_port_button_task
  6678 ;;		_settings_task
  6679 ;; This function is called by:
  6680 ;;		_main
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text16
  6685  014FAA                     __ptext16:
  6686                           	opt stack 0
  6687  014FAA                     _normal_task:
  6688                           	opt stack 11
  6689                           
  6690                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6691                           
  6692                           ;incstack = 0
  6693  014FAA  0101               	movlb	1	; () banked
  6694  014FAC  5122               	movf	_settings_flag& (0+255),w,b
  6695  014FAE  B4D8               	btfsc	status,2,c
  6696  014FB0  D003               	goto	l1536
  6697                           
  6698                           ; BSR set to: 1
  6699                           ;ChargeStation_task.c: 124: settings_task();
  6700  014FB2  EC15  F095         	call	_settings_task	;wreg free
  6701                           
  6702                           ;ChargeStation_task.c: 125: } else {
  6703  014FB6  D024               	goto	l12867
  6704  014FB8                     l1536:
  6705                           
  6706                           ; BSR set to: 1
  6707                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6708  014FB8  0100               	movlb	0	; () banked
  6709  014FBA  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  6710  014FBC  D014               	goto	l12861
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6714  014FBE  0E00               	movlw	0
  6715  014FC0  0100               	movlb	0	; () banked
  6716  014FC2  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6717  014FC4  0E00               	movlw	0
  6718  014FC6  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6722  014FC8  0EE6               	movlw	low (STR_19+3)
  6723  014FCA  0100               	movlb	0	; () banked
  6724  014FCC  6F60               	movwf	display@str0& (0+255),b
  6725  014FCE  0EFF               	movlw	high (STR_19+3)
  6726  014FD0  0100               	movlb	0	; () banked
  6727  014FD2  6F61               	movwf	(display@str0+1)& (0+255),b
  6728  014FD4  0EE6               	movlw	low (STR_19+3)
  6729  014FD6  0100               	movlb	0	; () banked
  6730  014FD8  6F62               	movwf	display@str1& (0+255),b
  6731  014FDA  0EFF               	movlw	high (STR_19+3)
  6732  014FDC  0100               	movlb	0	; () banked
  6733  014FDE  6F63               	movwf	(display@str1+1)& (0+255),b
  6734  014FE0  0E01               	movlw	1
  6735  014FE2  EC87  F09C         	call	_display
  6736  014FE6                     l12861:
  6737                           
  6738                           ;ChargeStation_task.c: 129: }
  6739                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6740  014FE6  0100               	movlb	0	; () banked
  6741  014FE8  A5FF               	btfss	(_ctmu_m+3)& (0+255),2,b
  6742  014FEA  D008               	goto	l12865
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6746  014FEC  0E00               	movlw	0
  6747  014FEE  0100               	movlb	0	; () banked
  6748  014FF0  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6749  014FF2  0E00               	movlw	0
  6750  014FF4  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6751                           
  6752                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6753  014FF6  0E01               	movlw	1
  6754  014FF8  0101               	movlb	1	; () banked
  6755  014FFA  6F22               	movwf	_settings_flag& (0+255),b
  6756  014FFC                     l12865:
  6757                           
  6758                           ;ChargeStation_task.c: 133: }
  6759                           ;ChargeStation_task.c: 134: port_button_task();
  6760  014FFC  EC92  F098         	call	_port_button_task	;wreg free
  6761  015000                     l12867:
  6762                           
  6763                           ;ChargeStation_task.c: 135: }
  6764                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6765  015000  0101               	movlb	1	; () banked
  6766  015002  511F               	movf	_cut_time_flag& (0+255),w,b
  6767  015004  B4D8               	btfsc	status,2,c
  6768  015006  D005               	goto	l12873
  6769                           
  6770                           ; BSR set to: 1
  6771                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6772  015008  0E00               	movlw	0
  6773  01500A  0101               	movlb	1	; () banked
  6774  01500C  6F1F               	movwf	_cut_time_flag& (0+255),b
  6775                           
  6776                           ; BSR set to: 1
  6777                           ;ChargeStation_task.c: 139: Auto_cut();
  6778  01500E  EC22  F09D         	call	_Auto_cut	;wreg free
  6779  015012                     l12873:
  6780                           
  6781                           ;ChargeStation_task.c: 140: }
  6782                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6783  015012  0101               	movlb	1	; () banked
  6784  015014  5121               	movf	_integrate_flag& (0+255),w,b
  6785  015016  B4D8               	btfsc	status,2,c
  6786  015018  D007               	goto	l1541
  6787                           
  6788                           ; BSR set to: 1
  6789                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6790  01501A  0E00               	movlw	0
  6791  01501C  0101               	movlb	1	; () banked
  6792  01501E  6F21               	movwf	_integrate_flag& (0+255),b
  6793                           
  6794                           ; BSR set to: 1
  6795                           ;ChargeStation_task.c: 144: integrate_current();
  6796  015020  ECDE  F09F         	call	_integrate_current	;wreg free
  6797                           
  6798                           ;ChargeStation_task.c: 145: integrate_time();
  6799  015024  EC3B  F0B2         	call	_integrate_time	;wreg free
  6800  015028                     l1541:
  6801                           
  6802                           ;ChargeStation_task.c: 146: }
  6803                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6804  015028  5022               	movf	_time_change_flag,w,c
  6805  01502A  B4D8               	btfsc	status,2,c
  6806  01502C  D008               	goto	l1542
  6807                           
  6808                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6809  01502E  0E00               	movlw	0
  6810  015030  6E22               	movwf	_time_change_flag,c
  6811                           
  6812                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6813  015032  041F               	decf	_print_item,w,c
  6814  015034  A4D8               	btfss	status,2,c
  6815  015036  D003               	goto	l1542
  6816  015038  0E01               	movlw	1
  6817  01503A  0101               	movlb	1	; () banked
  6818  01503C  6F20               	movwf	_display_flag& (0+255),b
  6819  01503E                     l1542:
  6820                           
  6821                           ;ChargeStation_task.c: 151: }
  6822                           ;ChargeStation_task.c: 153: if (display_flag) {
  6823  01503E  0101               	movlb	1	; () banked
  6824  015040  5120               	movf	_display_flag& (0+255),w,b
  6825  015042  B4D8               	btfsc	status,2,c
  6826  015044  D005               	goto	l12891
  6827                           
  6828                           ; BSR set to: 1
  6829                           ;ChargeStation_task.c: 154: display_flag = 0;
  6830  015046  0E00               	movlw	0
  6831  015048  0101               	movlb	1	; () banked
  6832  01504A  6F20               	movwf	_display_flag& (0+255),b
  6833                           
  6834                           ; BSR set to: 1
  6835                           ;ChargeStation_task.c: 155: display_LCD();
  6836  01504C  EC8E  F082         	call	_display_LCD	;wreg free
  6837  015050                     l12891:
  6838                           
  6839                           ;ChargeStation_task.c: 156: }
  6840                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6841  015050  0101               	movlb	1	; () banked
  6842  015052  5124               	movf	_terminal_data_out& (0+255),w,b
  6843  015054  B4D8               	btfsc	status,2,c
  6844  015056  0012               	return	
  6845                           
  6846                           ; BSR set to: 1
  6847  015058  0101               	movlb	1	; () banked
  6848  01505A  5125               	movf	_terminal_data_out_flag& (0+255),w,b
  6849  01505C  B4D8               	btfsc	status,2,c
  6850  01505E  0012               	return	
  6851                           
  6852                           ; BSR set to: 1
  6853                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6854  015060  0E00               	movlw	0
  6855  015062  0101               	movlb	1	; () banked
  6856  015064  6F25               	movwf	_terminal_data_out_flag& (0+255),b
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6860  015066  0EC6               	movlw	low _usb_tx
  6861  015068  0100               	movlb	0	; () banked
  6862  01506A  6FAB               	movwf	data_out@tx& (0+255),b
  6863  01506C  0E02               	movlw	high _usb_tx
  6864  01506E  0100               	movlb	0	; () banked
  6865  015070  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6866  015072  EC1E  F097         	call	_data_out	;wreg free
  6867  015076  0012               	return	
  6868  015078                     __end_of_normal_task:
  6869                           	opt stack 0
  6870                           tblptru	equ	0xFF8
  6871                           tblptrh	equ	0xFF7
  6872                           tblptrl	equ	0xFF6
  6873                           tablat	equ	0xFF5
  6874                           prodh	equ	0xFF4
  6875                           prodl	equ	0xFF3
  6876                           intcon	equ	0xFF2
  6877                           postinc0	equ	0xFEE
  6878                           wreg	equ	0xFE8
  6879                           postinc1	equ	0xFE6
  6880                           postdec1	equ	0xFE5
  6881                           fsr1h	equ	0xFE2
  6882                           fsr1l	equ	0xFE1
  6883                           indf2	equ	0xFDF
  6884                           postinc2	equ	0xFDE
  6885                           postdec2	equ	0xFDD
  6886                           fsr2h	equ	0xFDA
  6887                           fsr2l	equ	0xFD9
  6888                           status	equ	0xFD8
  6889                           
  6890 ;; *************** function _settings_task *****************
  6891 ;; Defined at:
  6892 ;;		line 193 in file "settings.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;		None
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;		None               void
  6899 ;; Registers used:
  6900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6907 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6909 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6910 ;;Total ram usage:        1 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:   18
  6913 ;; This function calls:
  6914 ;;		_display
  6915 ;;		_settings_adjust_time
  6916 ;;		_settings_auto_stop
  6917 ;;		_settings_integrating_reset
  6918 ;;		_settings_led_indicator
  6919 ;; This function is called by:
  6920 ;;		_normal_task
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text17
  6925  012A2A                     __ptext17:
  6926                           	opt stack 0
  6927  012A2A                     _settings_task:
  6928                           	opt stack 11
  6929                           
  6930                           ;settings.c: 194: static uint8_t settings_state = 0;
  6931                           ;settings.c: 195: switch (settings_state) {
  6932                           
  6933                           ;incstack = 0
  6934  012A2A  D103               	goto	l12595
  6935  012A2C                     l12513:
  6936                           
  6937                           ;settings.c: 197: settings_item = SELECT;
  6938  012A2C  0E00               	movlw	0
  6939  012A2E  6E20               	movwf	_settings_item,c
  6940                           
  6941                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6942  012A30  0E5E               	movlw	low STR_104
  6943  012A32  0100               	movlb	0	; () banked
  6944  012A34  6F60               	movwf	display@str0& (0+255),b
  6945  012A36  0EFF               	movlw	high STR_104
  6946  012A38  0100               	movlb	0	; () banked
  6947  012A3A  6F61               	movwf	(display@str0+1)& (0+255),b
  6948  012A3C  0E5F               	movlw	low STR_105
  6949  012A3E  0100               	movlb	0	; () banked
  6950  012A40  6F62               	movwf	display@str1& (0+255),b
  6951  012A42  0EFE               	movlw	high STR_105
  6952  012A44  0100               	movlb	0	; () banked
  6953  012A46  6F63               	movwf	(display@str1+1)& (0+255),b
  6954  012A48  0E03               	movlw	3
  6955  012A4A  EC87  F09C         	call	_display
  6956                           
  6957                           ;settings.c: 199: settings_state += 1;
  6958  012A4E  0101               	movlb	1	; () banked
  6959  012A50  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  6960                           
  6961                           ;settings.c: 200: break;
  6962  012A52  0012               	return	
  6963  012A54                     l12519:
  6964                           
  6965                           ; BSR set to: 1
  6966                           ;settings.c: 202: {
  6967                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6968  012A54  0E00               	movlw	0
  6969  012A56  0100               	movlb	0	; () banked
  6970  012A58  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6974  012A5A  0101               	movlb	1	; () banked
  6975  012A5C  A15E               	btfss	(_port+48)& (0+255),0,b
  6976  012A5E  D010               	goto	l12533
  6977                           
  6978                           ; BSR set to: 1
  6979                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6980  012A60  0E00               	movlw	0
  6981  012A62  0101               	movlb	1	; () banked
  6982  012A64  6F5F               	movwf	(_port+49)& (0+255),b
  6983  012A66  0E00               	movlw	0
  6984  012A68  6F5E               	movwf	(_port+48)& (0+255),b
  6985                           
  6986                           ; BSR set to: 1
  6987                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6988  012A6A  0E04               	movlw	4
  6989  012A6C  1820               	xorwf	_settings_item,w,c
  6990  012A6E  A4D8               	btfss	status,2,c
  6991  012A70  D003               	goto	l12529
  6992                           
  6993                           ; BSR set to: 1
  6994  012A72  0E00               	movlw	0
  6995  012A74  6E20               	movwf	_settings_item,c
  6996  012A76  D001               	goto	l12531
  6997  012A78                     l12529:
  6998                           
  6999                           ; BSR set to: 1
  7000                           ;settings.c: 207: else settings_item++;
  7001  012A78  2A20               	incf	_settings_item,f,c
  7002  012A7A                     l12531:
  7003                           
  7004                           ; BSR set to: 1
  7005                           ;settings.c: 208: item_change_flag = 1;
  7006  012A7A  0E01               	movlw	1
  7007  012A7C  0100               	movlb	0	; () banked
  7008  012A7E  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  7009  012A80                     l12533:
  7010                           
  7011                           ;settings.c: 209: }
  7012                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  7013  012A80  0101               	movlb	1	; () banked
  7014  012A82  A130               	btfss	(_port+2)& (0+255),0,b
  7015  012A84  D00F               	goto	l12543
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;settings.c: 211: port[0].ctmu.flags = 0;
  7019  012A86  0E00               	movlw	0
  7020  012A88  0101               	movlb	1	; () banked
  7021  012A8A  6F31               	movwf	(_port+3)& (0+255),b
  7022  012A8C  0E00               	movlw	0
  7023  012A8E  6F30               	movwf	(_port+2)& (0+255),b
  7024                           
  7025                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  7026  012A90  5020               	movf	_settings_item,w,c
  7027  012A92  A4D8               	btfss	status,2,c
  7028  012A94  D003               	goto	l12539
  7029                           
  7030                           ; BSR set to: 1
  7031  012A96  0E04               	movlw	4
  7032  012A98  6E20               	movwf	_settings_item,c
  7033  012A9A  D001               	goto	l12541
  7034  012A9C                     l12539:
  7035                           
  7036                           ; BSR set to: 1
  7037                           ;settings.c: 213: else settings_item--;
  7038  012A9C  0620               	decf	_settings_item,f,c
  7039  012A9E                     l12541:
  7040                           
  7041                           ; BSR set to: 1
  7042                           ;settings.c: 214: item_change_flag = 1;
  7043  012A9E  0E01               	movlw	1
  7044  012AA0  0100               	movlb	0	; () banked
  7045  012AA2  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  7046  012AA4                     l12543:
  7047                           
  7048                           ;settings.c: 215: }
  7049                           ;settings.c: 216: if (item_change_flag) {
  7050  012AA4  0100               	movlb	0	; () banked
  7051  012AA6  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  7052  012AA8  0100               	movlb	0	; () banked
  7053  012AAA  A4D8               	btfss	status,2,c
  7054  012AAC  D051               	goto	l12559
  7055  012AAE  D060               	goto	l1957
  7056  012AB0                     l12547:
  7057                           
  7058                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  7059  012AB0  0E5E               	movlw	low STR_104
  7060  012AB2  0100               	movlb	0	; () banked
  7061  012AB4  6F60               	movwf	display@str0& (0+255),b
  7062  012AB6  0EFF               	movlw	high STR_104
  7063  012AB8  0100               	movlb	0	; () banked
  7064  012ABA  6F61               	movwf	(display@str0+1)& (0+255),b
  7065  012ABC  0E5F               	movlw	low STR_105
  7066  012ABE  0100               	movlb	0	; () banked
  7067  012AC0  6F62               	movwf	display@str1& (0+255),b
  7068  012AC2  0EFE               	movlw	high STR_105
  7069  012AC4  0100               	movlb	0	; () banked
  7070  012AC6  6F63               	movwf	(display@str1+1)& (0+255),b
  7071  012AC8  0E03               	movlw	3
  7072  012ACA  EC87  F09C         	call	_display
  7073                           
  7074                           ;settings.c: 220: break;
  7075  012ACE  D050               	goto	l1957
  7076  012AD0                     l12549:
  7077                           
  7078                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7079  012AD0  0E5E               	movlw	low STR_104
  7080  012AD2  0100               	movlb	0	; () banked
  7081  012AD4  6F60               	movwf	display@str0& (0+255),b
  7082  012AD6  0EFF               	movlw	high STR_104
  7083  012AD8  0100               	movlb	0	; () banked
  7084  012ADA  6F61               	movwf	(display@str0+1)& (0+255),b
  7085  012ADC  0EA3               	movlw	low STR_109
  7086  012ADE  0100               	movlb	0	; () banked
  7087  012AE0  6F62               	movwf	display@str1& (0+255),b
  7088  012AE2  0EFE               	movlw	high STR_109
  7089  012AE4  0100               	movlb	0	; () banked
  7090  012AE6  6F63               	movwf	(display@str1+1)& (0+255),b
  7091  012AE8  0E03               	movlw	3
  7092  012AEA  EC87  F09C         	call	_display
  7093                           
  7094                           ;settings.c: 223: break;
  7095  012AEE  D040               	goto	l1957
  7096  012AF0                     l12551:
  7097                           
  7098                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7099  012AF0  0E5E               	movlw	low STR_104
  7100  012AF2  0100               	movlb	0	; () banked
  7101  012AF4  6F60               	movwf	display@str0& (0+255),b
  7102  012AF6  0EFF               	movlw	high STR_104
  7103  012AF8  0100               	movlb	0	; () banked
  7104  012AFA  6F61               	movwf	(display@str0+1)& (0+255),b
  7105  012AFC  0E70               	movlw	low STR_111
  7106  012AFE  0100               	movlb	0	; () banked
  7107  012B00  6F62               	movwf	display@str1& (0+255),b
  7108  012B02  0EFE               	movlw	high STR_111
  7109  012B04  0100               	movlb	0	; () banked
  7110  012B06  6F63               	movwf	(display@str1+1)& (0+255),b
  7111  012B08  0E03               	movlw	3
  7112  012B0A  EC87  F09C         	call	_display
  7113                           
  7114                           ;settings.c: 226: break;
  7115  012B0E  D030               	goto	l1957
  7116  012B10                     l12553:
  7117                           
  7118                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7119  012B10  0E5E               	movlw	low STR_104
  7120  012B12  0100               	movlb	0	; () banked
  7121  012B14  6F60               	movwf	display@str0& (0+255),b
  7122  012B16  0EFF               	movlw	high STR_104
  7123  012B18  0100               	movlb	0	; () banked
  7124  012B1A  6F61               	movwf	(display@str0+1)& (0+255),b
  7125  012B1C  0EB3               	movlw	low STR_113
  7126  012B1E  0100               	movlb	0	; () banked
  7127  012B20  6F62               	movwf	display@str1& (0+255),b
  7128  012B22  0EFE               	movlw	high STR_113
  7129  012B24  0100               	movlb	0	; () banked
  7130  012B26  6F63               	movwf	(display@str1+1)& (0+255),b
  7131  012B28  0E03               	movlw	3
  7132  012B2A  EC87  F09C         	call	_display
  7133                           
  7134                           ;settings.c: 229: break;
  7135  012B2E  D020               	goto	l1957
  7136  012B30                     l12555:
  7137                           
  7138                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7139  012B30  0E5E               	movlw	low STR_104
  7140  012B32  0100               	movlb	0	; () banked
  7141  012B34  6F60               	movwf	display@str0& (0+255),b
  7142  012B36  0EFF               	movlw	high STR_104
  7143  012B38  0100               	movlb	0	; () banked
  7144  012B3A  6F61               	movwf	(display@str0+1)& (0+255),b
  7145  012B3C  0ED3               	movlw	low STR_115
  7146  012B3E  0100               	movlb	0	; () banked
  7147  012B40  6F62               	movwf	display@str1& (0+255),b
  7148  012B42  0EFE               	movlw	high STR_115
  7149  012B44  0100               	movlb	0	; () banked
  7150  012B46  6F63               	movwf	(display@str1+1)& (0+255),b
  7151  012B48  0E03               	movlw	3
  7152  012B4A  EC87  F09C         	call	_display
  7153                           
  7154                           ;settings.c: 233: }
  7155                           
  7156                           ;settings.c: 232: break;
  7157  012B4E  D010               	goto	l1957
  7158  012B50                     l12559:
  7159  012B50  5020               	movf	_settings_item,w,c
  7160                           
  7161                           ; Switch size 1, requested type "space"
  7162                           ; Number of cases is 5, Range of values is 0 to 4
  7163                           ; switch strategies available:
  7164                           ; Name         Instructions Cycles
  7165                           ; simple_byte           16     9 (average)
  7166                           ;	Chosen strategy is simple_byte
  7167  012B52  0A00               	xorlw	0	; case 0
  7168  012B54  B4D8               	btfsc	status,2,c
  7169  012B56  D7AC               	goto	l12547
  7170  012B58  0A01               	xorlw	1	; case 1
  7171  012B5A  B4D8               	btfsc	status,2,c
  7172  012B5C  D7B9               	goto	l12549
  7173  012B5E  0A03               	xorlw	3	; case 2
  7174  012B60  B4D8               	btfsc	status,2,c
  7175  012B62  D7C6               	goto	l12551
  7176  012B64  0A01               	xorlw	1	; case 3
  7177  012B66  B4D8               	btfsc	status,2,c
  7178  012B68  D7D3               	goto	l12553
  7179  012B6A  0A07               	xorlw	7	; case 4
  7180  012B6C  B4D8               	btfsc	status,2,c
  7181  012B6E  D7E0               	goto	l12555
  7182  012B70                     l1957:
  7183                           
  7184                           ;settings.c: 234: }
  7185                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7186  012B70  0101               	movlb	1	; () banked
  7187  012B72  A147               	btfss	(_port+25)& (0+255),0,b
  7188  012B74  D007               	goto	l12565
  7189                           
  7190                           ; BSR set to: 1
  7191                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7192  012B76  0E00               	movlw	0
  7193  012B78  0101               	movlb	1	; () banked
  7194  012B7A  6F48               	movwf	(_port+26)& (0+255),b
  7195  012B7C  0E00               	movlw	0
  7196  012B7E  6F47               	movwf	(_port+25)& (0+255),b
  7197                           
  7198                           ; BSR set to: 1
  7199                           ;settings.c: 237: settings_state += 1;
  7200  012B80  0101               	movlb	1	; () banked
  7201  012B82  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  7202  012B84                     l12565:
  7203                           
  7204                           ; BSR set to: 1
  7205                           ;settings.c: 238: }
  7206                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7207  012B84  0100               	movlb	0	; () banked
  7208  012B86  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7209  012B88  0012               	return	
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;settings.c: 240: ctmu_m.flags = 0;
  7213  012B8A  0E00               	movlw	0
  7214  012B8C  0100               	movlb	0	; () banked
  7215  012B8E  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7216  012B90  0E00               	movlw	0
  7217  012B92  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7218                           
  7219                           ;settings.c: 241: settings_state = 0;
  7220  012B94  0E00               	movlw	0
  7221  012B96  0101               	movlb	1	; () banked
  7222  012B98  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7223                           
  7224                           ;settings.c: 242: settings_flag = 0;
  7225  012B9A  0E00               	movlw	0
  7226  012B9C  0101               	movlb	1	; () banked
  7227  012B9E  6F22               	movwf	_settings_flag& (0+255),b
  7228                           
  7229                           ; BSR set to: 1
  7230                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7231  012BA0  0EE6               	movlw	low (STR_19+3)
  7232  012BA2  0100               	movlb	0	; () banked
  7233  012BA4  6F60               	movwf	display@str0& (0+255),b
  7234  012BA6  0EFF               	movlw	high (STR_19+3)
  7235  012BA8  0100               	movlb	0	; () banked
  7236  012BAA  6F61               	movwf	(display@str0+1)& (0+255),b
  7237  012BAC  0EE6               	movlw	low (STR_19+3)
  7238  012BAE  0100               	movlb	0	; () banked
  7239  012BB0  6F62               	movwf	display@str1& (0+255),b
  7240  012BB2  0EFF               	movlw	high (STR_19+3)
  7241  012BB4  0100               	movlb	0	; () banked
  7242  012BB6  6F63               	movwf	(display@str1+1)& (0+255),b
  7243  012BB8  0E01               	movlw	1
  7244  012BBA  EC87  F09C         	call	_display
  7245                           
  7246                           ;settings.c: 244: }
  7247                           ;settings.c: 245: }
  7248                           ;settings.c: 246: break;
  7249  012BBE  0012               	return	
  7250  012BC0                     l12571:
  7251                           
  7252                           ;settings.c: 250: settings_state = 1;
  7253  012BC0  0E01               	movlw	1
  7254  012BC2  0101               	movlb	1	; () banked
  7255  012BC4  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7256                           
  7257                           ;settings.c: 251: break;
  7258  012BC6  0012               	return	
  7259  012BC8                     l12573:
  7260                           
  7261                           ;settings.c: 253: if (settings_adjust_time()) {
  7262  012BC8  EC9E  F0A3         	call	_settings_adjust_time	;wreg free
  7263  012BCC  0900               	iorlw	0
  7264  012BCE  B4D8               	btfsc	status,2,c
  7265  012BD0  0012               	return	
  7266                           
  7267                           ;settings.c: 254: settings_state = 0;
  7268  012BD2  0E00               	movlw	0
  7269  012BD4  0101               	movlb	1	; () banked
  7270  012BD6  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7271                           
  7272                           ; BSR set to: 1
  7273                           ;settings.c: 255: }
  7274                           ;settings.c: 256: break;
  7275  012BD8  0012               	return	
  7276  012BDA                     l12577:
  7277                           
  7278                           ;settings.c: 258: if (settings_auto_stop()) {
  7279  012BDA  ECF4  F093         	call	_settings_auto_stop	;wreg free
  7280  012BDE  0900               	iorlw	0
  7281  012BE0  B4D8               	btfsc	status,2,c
  7282  012BE2  0012               	return	
  7283                           
  7284                           ;settings.c: 259: settings_state = 0;
  7285  012BE4  0E00               	movlw	0
  7286  012BE6  0101               	movlb	1	; () banked
  7287  012BE8  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7288                           
  7289                           ; BSR set to: 1
  7290                           ;settings.c: 260: }
  7291                           ;settings.c: 261: break;
  7292  012BEA  0012               	return	
  7293  012BEC                     l12581:
  7294                           
  7295                           ;settings.c: 263: if (settings_led_indicator()) {
  7296  012BEC  ECCA  F092         	call	_settings_led_indicator	;wreg free
  7297  012BF0  0900               	iorlw	0
  7298  012BF2  B4D8               	btfsc	status,2,c
  7299  012BF4  0012               	return	
  7300                           
  7301                           ;settings.c: 264: settings_state = 0;
  7302  012BF6  0E00               	movlw	0
  7303  012BF8  0101               	movlb	1	; () banked
  7304  012BFA  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;settings.c: 265: }
  7308                           ;settings.c: 266: break;
  7309  012BFC  0012               	return	
  7310  012BFE                     l12585:
  7311                           
  7312                           ;settings.c: 268: if (settings_integrating_reset()) {
  7313  012BFE  EC9B  F091         	call	_settings_integrating_reset	;wreg free
  7314  012C02  0900               	iorlw	0
  7315  012C04  B4D8               	btfsc	status,2,c
  7316  012C06  0012               	return	
  7317                           
  7318                           ;settings.c: 269: settings_state = 0;
  7319  012C08  0E00               	movlw	0
  7320  012C0A  0101               	movlb	1	; () banked
  7321  012C0C  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7322                           
  7323                           ; BSR set to: 1
  7324                           ;settings.c: 274: }
  7325                           
  7326                           ; BSR set to: 1
  7327                           ;settings.c: 273: break;
  7328                           
  7329                           ;settings.c: 272: default:
  7330                           
  7331                           ; BSR set to: 1
  7332                           ;settings.c: 270: }
  7333                           ;settings.c: 271: break;
  7334  012C0E  0012               	return	
  7335  012C10                     l12591:
  7336  012C10  5020               	movf	_settings_item,w,c
  7337                           
  7338                           ; Switch size 1, requested type "space"
  7339                           ; Number of cases is 5, Range of values is 0 to 4
  7340                           ; switch strategies available:
  7341                           ; Name         Instructions Cycles
  7342                           ; simple_byte           16     9 (average)
  7343                           ;	Chosen strategy is simple_byte
  7344  012C12  0A00               	xorlw	0	; case 0
  7345  012C14  B4D8               	btfsc	status,2,c
  7346  012C16  D7D4               	goto	l12571
  7347  012C18  0A01               	xorlw	1	; case 1
  7348  012C1A  B4D8               	btfsc	status,2,c
  7349  012C1C  D7D5               	goto	l12573
  7350  012C1E  0A03               	xorlw	3	; case 2
  7351  012C20  B4D8               	btfsc	status,2,c
  7352  012C22  D7DB               	goto	l12577
  7353  012C24  0A01               	xorlw	1	; case 3
  7354  012C26  B4D8               	btfsc	status,2,c
  7355  012C28  D7E1               	goto	l12581
  7356  012C2A  0A07               	xorlw	7	; case 4
  7357  012C2C  A4D8               	btfss	status,2,c
  7358                           
  7359                           ;settings.c: 276: }
  7360                           
  7361                           ;settings.c: 275: break;
  7362  012C2E  0012               	return	
  7363  012C30  D7E6               	goto	l12585
  7364  012C32                     l12595:
  7365  012C32  0101               	movlb	1	; () banked
  7366  012C34  512B               	movf	settings_task@settings_state& (0+255),w,b
  7367                           
  7368                           ; Switch size 1, requested type "space"
  7369                           ; Number of cases is 3, Range of values is 0 to 2
  7370                           ; switch strategies available:
  7371                           ; Name         Instructions Cycles
  7372                           ; simple_byte           10     6 (average)
  7373                           ;	Chosen strategy is simple_byte
  7374  012C36  0A00               	xorlw	0	; case 0
  7375  012C38  B4D8               	btfsc	status,2,c
  7376  012C3A  D6F8               	goto	l12513
  7377  012C3C  0A01               	xorlw	1	; case 1
  7378  012C3E  B4D8               	btfsc	status,2,c
  7379  012C40  D709               	goto	l12519
  7380  012C42  0A03               	xorlw	3	; case 2
  7381  012C44  A4D8               	btfss	status,2,c
  7382  012C46  0012               	return	
  7383  012C48  D7E3               	goto	l12591
  7384  012C4A                     __end_of_settings_task:
  7385                           	opt stack 0
  7386                           tblptru	equ	0xFF8
  7387                           tblptrh	equ	0xFF7
  7388                           tblptrl	equ	0xFF6
  7389                           tablat	equ	0xFF5
  7390                           prodh	equ	0xFF4
  7391                           prodl	equ	0xFF3
  7392                           intcon	equ	0xFF2
  7393                           postinc0	equ	0xFEE
  7394                           wreg	equ	0xFE8
  7395                           postinc1	equ	0xFE6
  7396                           postdec1	equ	0xFE5
  7397                           fsr1h	equ	0xFE2
  7398                           fsr1l	equ	0xFE1
  7399                           indf2	equ	0xFDF
  7400                           postinc2	equ	0xFDE
  7401                           postdec2	equ	0xFDD
  7402                           fsr2h	equ	0xFDA
  7403                           fsr2l	equ	0xFD9
  7404                           status	equ	0xFD8
  7405                           
  7406 ;; *************** function _settings_led_indicator *****************
  7407 ;; Defined at:
  7408 ;;		line 96 in file "settings.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;		None
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  i               1   52[BANK0 ] unsigned char 
  7413 ;;  str            20   27[BANK0 ] unsigned char [20]
  7414 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7415 ;;		 -> settings_led_indicator@str_6158(20), 
  7416 ;;  i               1   51[BANK0 ] unsigned char 
  7417 ;;  j               1   53[BANK0 ] unsigned char 
  7418 ;;  str            20    7[BANK0 ] unsigned char [20]
  7419 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7420 ;;		 -> settings_led_indicator@str(20), 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      unsigned char 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7433 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7434 ;;Total ram usage:       48 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:   13
  7437 ;; This function calls:
  7438 ;;		_LED_output
  7439 ;;		_display
  7440 ;;		_strcpy
  7441 ;; This function is called by:
  7442 ;;		_settings_task
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text18
  7447  012594                     __ptext18:
  7448                           	opt stack 0
  7449  012594                     _settings_led_indicator:
  7450                           	opt stack 15
  7451                           
  7452                           ;settings.c: 97: static uint8_t state = 0;
  7453                           ;settings.c: 98: switch (state) {
  7454                           
  7455                           ;incstack = 0
  7456  012594  D100               	goto	l12049
  7457  012596                     l11985:
  7458                           
  7459                           ;settings.c: 100: {
  7460                           ;settings.c: 101: char str[20];
  7461                           ;settings.c: 102: char *strp;
  7462                           ;settings.c: 103: strp = str;
  7463  012596  0E67               	movlw	low settings_led_indicator@str
  7464  012598  0100               	movlb	0	; () banked
  7465  01259A  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7466  01259C  0E00               	movlw	high settings_led_indicator@str
  7467  01259E  0100               	movlb	0	; () banked
  7468  0125A0  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7472  0125A2  0E00               	movlw	0
  7473  0125A4  0100               	movlb	0	; () banked
  7474  0125A6  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7475  0125A8                     l11989:
  7476                           
  7477                           ; BSR set to: 0
  7478  0125A8  0E02               	movlw	2
  7479  0125AA  0100               	movlb	0	; () banked
  7480  0125AC  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7481  0125AE  D001               	goto	l11993
  7482  0125B0  D031               	goto	l12005
  7483  0125B2                     l11993:
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7487  0125B2  0100               	movlb	0	; () banked
  7488  0125B4  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7489  0125B6  0D17               	mullw	23
  7490  0125B8  0E16               	movlw	22
  7491  0125BA  26F3               	addwf	prodl,f,c
  7492  0125BC  0E00               	movlw	0
  7493  0125BE  22F4               	addwfc	prodh,f,c
  7494  0125C0  0E2E               	movlw	low _port
  7495  0125C2  24F3               	addwf	prodl,w,c
  7496  0125C4  6ED9               	movwf	fsr2l,c
  7497  0125C6  0E01               	movlw	high _port
  7498  0125C8  20F4               	addwfc	prodh,w,c
  7499  0125CA  6EDA               	movwf	fsr2h,c
  7500  0125CC  0101               	movlb	1	; () banked
  7501  0125CE  A2DF               	btfss	indf2,1,c
  7502  0125D0  D00D               	goto	l11997
  7503                           
  7504                           ; BSR set to: 1
  7505  0125D2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7506  0125D6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7507  0125DA  0EA5               	movlw	low STR_80
  7508  0125DC  0100               	movlb	0	; () banked
  7509  0125DE  6F62               	movwf	strcpy@from& (0+255),b
  7510  0125E0  0EFF               	movlw	high STR_80
  7511  0125E2  0100               	movlb	0	; () banked
  7512  0125E4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7513  0125E6  EC3A  F0B5         	call	_strcpy	;wreg free
  7514  0125EA  D00C               	goto	l11999
  7515  0125EC                     l11997:
  7516                           
  7517                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7518  0125EC  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7519  0125F0  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7520  0125F4  0EAB               	movlw	low STR_81
  7521  0125F6  0100               	movlb	0	; () banked
  7522  0125F8  6F62               	movwf	strcpy@from& (0+255),b
  7523  0125FA  0EFF               	movlw	high STR_81
  7524  0125FC  0100               	movlb	0	; () banked
  7525  0125FE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7526  012600  EC3A  F0B5         	call	_strcpy	;wreg free
  7527  012604                     l11999:
  7528                           
  7529                           ;settings.c: 107: strp += 5;
  7530  012604  0E05               	movlw	5
  7531  012606  0100               	movlb	0	; () banked
  7532  012608  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7533  01260A  0E00               	movlw	0
  7534  01260C  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7535                           
  7536                           ; BSR set to: 0
  7537  01260E  0100               	movlb	0	; () banked
  7538  012610  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7539  012612  D7CA               	goto	l11989
  7540  012614                     l12005:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;settings.c: 108: }
  7544                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7545  012614  0E81               	movlw	low STR_82
  7546  012616  0100               	movlb	0	; () banked
  7547  012618  6F60               	movwf	display@str0& (0+255),b
  7548  01261A  0EFE               	movlw	high STR_82
  7549  01261C  0100               	movlb	0	; () banked
  7550  01261E  6F61               	movwf	(display@str0+1)& (0+255),b
  7551  012620  0E67               	movlw	low settings_led_indicator@str
  7552  012622  0100               	movlb	0	; () banked
  7553  012624  6F62               	movwf	display@str1& (0+255),b
  7554  012626  0E00               	movlw	high settings_led_indicator@str
  7555  012628  0100               	movlb	0	; () banked
  7556  01262A  6F63               	movwf	(display@str1+1)& (0+255),b
  7557  01262C  0E03               	movlw	3
  7558  01262E  EC87  F09C         	call	_display
  7559                           
  7560                           ;settings.c: 110: state = 1;
  7561  012632  0E01               	movlw	1
  7562  012634  0101               	movlb	1	; () banked
  7563  012636  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7564                           
  7565                           ;settings.c: 111: }
  7566                           ;settings.c: 112: break;
  7567  012638  D0B6               	goto	l1909
  7568  01263A                     l12009:
  7569                           
  7570                           ; BSR set to: 1
  7571                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7572  01263A  0E00               	movlw	0
  7573  01263C  0100               	movlb	0	; () banked
  7574  01263E  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7575  012640                     l12011:
  7576                           
  7577                           ; BSR set to: 0
  7578  012640  0E02               	movlw	2
  7579  012642  0100               	movlb	0	; () banked
  7580  012644  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7581  012646  D001               	goto	l12015
  7582  012648  D0AE               	goto	l1909
  7583  01264A                     l12015:
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7587  01264A  0100               	movlb	0	; () banked
  7588  01264C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7589  01264E  0D17               	mullw	23
  7590  012650  0E02               	movlw	2
  7591  012652  26F3               	addwf	prodl,f,c
  7592  012654  0E00               	movlw	0
  7593  012656  22F4               	addwfc	prodh,f,c
  7594  012658  0E2E               	movlw	low _port
  7595  01265A  24F3               	addwf	prodl,w,c
  7596  01265C  6ED9               	movwf	fsr2l,c
  7597  01265E  0E01               	movlw	high _port
  7598  012660  20F4               	addwfc	prodh,w,c
  7599  012662  6EDA               	movwf	fsr2h,c
  7600  012664  0101               	movlb	1	; () banked
  7601  012666  A0DF               	btfss	indf2,0,c
  7602  012668  D093               	goto	l12043
  7603                           
  7604                           ; BSR set to: 1
  7605                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7606  01266A  0100               	movlb	0	; () banked
  7607  01266C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7608  01266E  0D17               	mullw	23
  7609  012670  0E02               	movlw	2
  7610  012672  26F3               	addwf	prodl,f,c
  7611  012674  0E00               	movlw	0
  7612  012676  22F4               	addwfc	prodh,f,c
  7613  012678  0E2E               	movlw	low _port
  7614  01267A  24F3               	addwf	prodl,w,c
  7615  01267C  6ED9               	movwf	fsr2l,c
  7616  01267E  0E01               	movlw	high _port
  7617  012680  20F4               	addwfc	prodh,w,c
  7618  012682  6EDA               	movwf	fsr2h,c
  7619  012684  0E00               	movlw	0
  7620  012686  6EDE               	movwf	postinc2,c
  7621  012688  0E00               	movlw	0
  7622  01268A  6EDD               	movwf	postdec2,c
  7623                           
  7624                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7625  01268C  0100               	movlb	0	; () banked
  7626  01268E  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7627  012690  0D17               	mullw	23
  7628  012692  0E16               	movlw	22
  7629  012694  26F3               	addwf	prodl,f,c
  7630  012696  0E00               	movlw	0
  7631  012698  22F4               	addwfc	prodh,f,c
  7632  01269A  0E2E               	movlw	low _port
  7633  01269C  24F3               	addwf	prodl,w,c
  7634  01269E  6ED9               	movwf	fsr2l,c
  7635  0126A0  0E01               	movlw	high _port
  7636  0126A2  20F4               	addwfc	prodh,w,c
  7637  0126A4  6EDA               	movwf	fsr2h,c
  7638  0126A6  0101               	movlb	1	; () banked
  7639  0126A8  B2DF               	btfsc	indf2,1,c
  7640  0126AA  D004               	goto	u13480
  7641  0126AC  0100               	movlb	0	; () banked
  7642  0126AE  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7643  0126B0  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7644  0126B2  D002               	goto	u13498
  7645  0126B4                     u13480:
  7646  0126B4  0100               	movlb	0	; () banked
  7647  0126B6  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7648  0126B8                     u13498:
  7649  0126B8  0100               	movlb	0	; () banked
  7650  0126BA  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7651  0126BC  0D17               	mullw	23
  7652  0126BE  0E16               	movlw	22
  7653  0126C0  26F3               	addwf	prodl,f,c
  7654  0126C2  0E00               	movlw	0
  7655  0126C4  22F4               	addwfc	prodh,f,c
  7656  0126C6  0E2E               	movlw	low _port
  7657  0126C8  24F3               	addwf	prodl,w,c
  7658  0126CA  6ED9               	movwf	fsr2l,c
  7659  0126CC  0E01               	movlw	high _port
  7660  0126CE  20F4               	addwfc	prodh,w,c
  7661  0126D0  6EDA               	movwf	fsr2h,c
  7662  0126D2  0100               	movlb	0	; () banked
  7663  0126D4  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7664  0126D6  0101               	movlb	1	; () banked
  7665  0126D8  50DF               	movf	223,w,c
  7666  0126DA  0100               	movlb	0	; () banked
  7667  0126DC  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7668  0126DE  0BFD               	andlw	-3
  7669  0126E0  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7670  0126E2  0101               	movlb	1	; () banked
  7671  0126E4  6EDF               	movwf	223,c
  7672                           
  7673                           ; BSR set to: 1
  7674                           ;settings.c: 118: LED_output(j, 0);
  7675  0126E6  0E00               	movlw	0
  7676  0126E8  0100               	movlb	0	; () banked
  7677  0126EA  6F60               	movwf	LED_output@value& (0+255),b
  7678  0126EC  0100               	movlb	0	; () banked
  7679  0126EE  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7680  0126F0  EC54  F0B0         	call	_LED_output
  7681                           
  7682                           ;settings.c: 119: char str[20];
  7683                           ;settings.c: 120: char *strp;
  7684                           ;settings.c: 121: strp = str;
  7685  0126F4  0E7B               	movlw	low settings_led_indicator@str_6158
  7686  0126F6  0100               	movlb	0	; () banked
  7687  0126F8  6F91               	movwf	settings_led_indicator@strp_6159& (0+255),b
  7688  0126FA  0E00               	movlw	high settings_led_indicator@str_6158
  7689  0126FC  0100               	movlb	0	; () banked
  7690  0126FE  6F92               	movwf	(settings_led_indicator@strp_6159+1)& (0+255),b
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7694  012700  0E00               	movlw	0
  7695  012702  0100               	movlb	0	; () banked
  7696  012704  6F94               	movwf	settings_led_indicator@i_6160& (0+255),b
  7697  012706                     l12025:
  7698                           
  7699                           ; BSR set to: 0
  7700  012706  0E02               	movlw	2
  7701  012708  0100               	movlb	0	; () banked
  7702  01270A  6594               	cpfsgt	settings_led_indicator@i_6160& (0+255),b
  7703  01270C  D001               	goto	l12029
  7704  01270E  D031               	goto	l12041
  7705  012710                     l12029:
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7709  012710  0100               	movlb	0	; () banked
  7710  012712  5194               	movf	settings_led_indicator@i_6160& (0+255),w,b
  7711  012714  0D17               	mullw	23
  7712  012716  0E16               	movlw	22
  7713  012718  26F3               	addwf	prodl,f,c
  7714  01271A  0E00               	movlw	0
  7715  01271C  22F4               	addwfc	prodh,f,c
  7716  01271E  0E2E               	movlw	low _port
  7717  012720  24F3               	addwf	prodl,w,c
  7718  012722  6ED9               	movwf	fsr2l,c
  7719  012724  0E01               	movlw	high _port
  7720  012726  20F4               	addwfc	prodh,w,c
  7721  012728  6EDA               	movwf	fsr2h,c
  7722  01272A  0101               	movlb	1	; () banked
  7723  01272C  A2DF               	btfss	indf2,1,c
  7724  01272E  D00D               	goto	l12033
  7725                           
  7726                           ; BSR set to: 1
  7727  012730  C091  F060         	movff	settings_led_indicator@strp_6159,strcpy@to
  7728  012734  C092  F061         	movff	settings_led_indicator@strp_6159+1,strcpy@to+1
  7729  012738  0EA5               	movlw	low STR_80
  7730  01273A  0100               	movlb	0	; () banked
  7731  01273C  6F62               	movwf	strcpy@from& (0+255),b
  7732  01273E  0EFF               	movlw	high STR_80
  7733  012740  0100               	movlb	0	; () banked
  7734  012742  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7735  012744  EC3A  F0B5         	call	_strcpy	;wreg free
  7736  012748  D00C               	goto	l12035
  7737  01274A                     l12033:
  7738                           
  7739                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7740  01274A  C091  F060         	movff	settings_led_indicator@strp_6159,strcpy@to
  7741  01274E  C092  F061         	movff	settings_led_indicator@strp_6159+1,strcpy@to+1
  7742  012752  0EAB               	movlw	low STR_81
  7743  012754  0100               	movlb	0	; () banked
  7744  012756  6F62               	movwf	strcpy@from& (0+255),b
  7745  012758  0EFF               	movlw	high STR_81
  7746  01275A  0100               	movlb	0	; () banked
  7747  01275C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7748  01275E  EC3A  F0B5         	call	_strcpy	;wreg free
  7749  012762                     l12035:
  7750                           
  7751                           ;settings.c: 125: strp += 5;
  7752  012762  0E05               	movlw	5
  7753  012764  0100               	movlb	0	; () banked
  7754  012766  2791               	addwf	settings_led_indicator@strp_6159& (0+255),f,b
  7755  012768  0E00               	movlw	0
  7756  01276A  2392               	addwfc	(settings_led_indicator@strp_6159+1)& (0+255),f,b
  7757                           
  7758                           ; BSR set to: 0
  7759  01276C  0100               	movlb	0	; () banked
  7760  01276E  2B94               	incf	settings_led_indicator@i_6160& (0+255),f,b
  7761  012770  D7CA               	goto	l12025
  7762  012772                     l12041:
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;settings.c: 126: }
  7766                           ;settings.c: 127: display(SETTINGS, "", str);
  7767  012772  0EE6               	movlw	low (STR_19+3)
  7768  012774  0100               	movlb	0	; () banked
  7769  012776  6F60               	movwf	display@str0& (0+255),b
  7770  012778  0EFF               	movlw	high (STR_19+3)
  7771  01277A  0100               	movlb	0	; () banked
  7772  01277C  6F61               	movwf	(display@str0+1)& (0+255),b
  7773  01277E  0E7B               	movlw	low settings_led_indicator@str_6158
  7774  012780  0100               	movlb	0	; () banked
  7775  012782  6F62               	movwf	display@str1& (0+255),b
  7776  012784  0E00               	movlw	high settings_led_indicator@str_6158
  7777  012786  0100               	movlb	0	; () banked
  7778  012788  6F63               	movwf	(display@str1+1)& (0+255),b
  7779  01278A  0E03               	movlw	3
  7780  01278C  EC87  F09C         	call	_display
  7781  012790                     l12043:
  7782  012790  0100               	movlb	0	; () banked
  7783  012792  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7784  012794  D755               	goto	l12011
  7785  012796                     l12049:
  7786  012796  0101               	movlb	1	; () banked
  7787  012798  512A               	movf	settings_led_indicator@state& (0+255),w,b
  7788                           
  7789                           ; Switch size 1, requested type "space"
  7790                           ; Number of cases is 2, Range of values is 0 to 1
  7791                           ; switch strategies available:
  7792                           ; Name         Instructions Cycles
  7793                           ; simple_byte            7     4 (average)
  7794                           ;	Chosen strategy is simple_byte
  7795  01279A  0A00               	xorlw	0	; case 0
  7796  01279C  B4D8               	btfsc	status,2,c
  7797  01279E  D6FB               	goto	l11985
  7798  0127A0  0A01               	xorlw	1	; case 1
  7799  0127A2  B4D8               	btfsc	status,2,c
  7800  0127A4  D74A               	goto	l12009
  7801  0127A6                     l1909:
  7802                           
  7803                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7804  0127A6  0100               	movlb	0	; () banked
  7805  0127A8  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7806  0127AA  D01C               	goto	l12059
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;settings.c: 135: ctmu_m.flags = 0;
  7810  0127AC  0E00               	movlw	0
  7811  0127AE  0100               	movlb	0	; () banked
  7812  0127B0  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7813  0127B2  0E00               	movlw	0
  7814  0127B4  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7815                           
  7816                           ;settings.c: 136: state = 0;
  7817  0127B6  0E00               	movlw	0
  7818  0127B8  0101               	movlb	1	; () banked
  7819  0127BA  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7820                           
  7821                           ;settings.c: 137: settings_flag = 0;
  7822  0127BC  0E00               	movlw	0
  7823  0127BE  0101               	movlb	1	; () banked
  7824  0127C0  6F22               	movwf	_settings_flag& (0+255),b
  7825                           
  7826                           ; BSR set to: 1
  7827                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7828  0127C2  0EE6               	movlw	low (STR_19+3)
  7829  0127C4  0100               	movlb	0	; () banked
  7830  0127C6  6F60               	movwf	display@str0& (0+255),b
  7831  0127C8  0EFF               	movlw	high (STR_19+3)
  7832  0127CA  0100               	movlb	0	; () banked
  7833  0127CC  6F61               	movwf	(display@str0+1)& (0+255),b
  7834  0127CE  0EE6               	movlw	low (STR_19+3)
  7835  0127D0  0100               	movlb	0	; () banked
  7836  0127D2  6F62               	movwf	display@str1& (0+255),b
  7837  0127D4  0EFF               	movlw	high (STR_19+3)
  7838  0127D6  0100               	movlb	0	; () banked
  7839  0127D8  6F63               	movwf	(display@str1+1)& (0+255),b
  7840  0127DA  0E01               	movlw	1
  7841  0127DC  EC87  F09C         	call	_display
  7842                           
  7843                           ;settings.c: 139: return 1;
  7844  0127E0  0E01               	movlw	1
  7845  0127E2  0012               	return	
  7846  0127E4                     l12059:
  7847                           
  7848                           ;settings.c: 140: }
  7849                           ;settings.c: 141: return 0;
  7850  0127E4  0E00               	movlw	0
  7851  0127E6  0012               	return	
  7852  0127E8                     __end_of_settings_led_indicator:
  7853                           	opt stack 0
  7854                           tblptru	equ	0xFF8
  7855                           tblptrh	equ	0xFF7
  7856                           tblptrl	equ	0xFF6
  7857                           tablat	equ	0xFF5
  7858                           prodh	equ	0xFF4
  7859                           prodl	equ	0xFF3
  7860                           intcon	equ	0xFF2
  7861                           postinc0	equ	0xFEE
  7862                           wreg	equ	0xFE8
  7863                           postinc1	equ	0xFE6
  7864                           postdec1	equ	0xFE5
  7865                           fsr1h	equ	0xFE2
  7866                           fsr1l	equ	0xFE1
  7867                           indf2	equ	0xFDF
  7868                           postinc2	equ	0xFDE
  7869                           postdec2	equ	0xFDD
  7870                           fsr2h	equ	0xFDA
  7871                           fsr2l	equ	0xFD9
  7872                           status	equ	0xFD8
  7873                           
  7874 ;; *************** function _settings_integrating_reset *****************
  7875 ;; Defined at:
  7876 ;;		line 144 in file "settings.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;		None
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  i               1   55[BANK0 ] unsigned char 
  7881 ;;  str            20   30[BANK0 ] unsigned char [20]
  7882 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7883 ;;		 -> settings_integrating_reset@str_6175(20), 
  7884 ;;  i               1   54[BANK0 ] unsigned char 
  7885 ;;  j               1   56[BANK0 ] unsigned char 
  7886 ;;  str            20   10[BANK0 ] unsigned char [20]
  7887 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7888 ;;		 -> settings_integrating_reset@str(20), 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7902 ;;Total ram usage:       51 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:   13
  7905 ;; This function calls:
  7906 ;;		_display
  7907 ;;		_strcpy
  7908 ;; This function is called by:
  7909 ;;		_settings_task
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text19
  7914  012336                     __ptext19:
  7915                           	opt stack 0
  7916  012336                     _settings_integrating_reset:
  7917                           	opt stack 15
  7918                           
  7919                           ;settings.c: 145: static uint8_t state = 0;
  7920                           ;settings.c: 146: switch (state) {
  7921                           
  7922                           ;incstack = 0
  7923  012336  D105               	goto	l12127
  7924  012338                     l12065:
  7925                           
  7926                           ;settings.c: 148: {
  7927                           ;settings.c: 149: char str[20];
  7928                           ;settings.c: 150: char *strp;
  7929                           ;settings.c: 151: strp = str;
  7930  012338  0E6A               	movlw	low settings_integrating_reset@str
  7931  01233A  0100               	movlb	0	; () banked
  7932  01233C  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7933  01233E  0E00               	movlw	high settings_integrating_reset@str
  7934  012340  0100               	movlb	0	; () banked
  7935  012342  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7939  012344  0E00               	movlw	0
  7940  012346  0100               	movlb	0	; () banked
  7941  012348  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7942  01234A                     l12069:
  7943                           
  7944                           ; BSR set to: 0
  7945  01234A  0E02               	movlw	2
  7946  01234C  0100               	movlb	0	; () banked
  7947  01234E  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7948  012350  D001               	goto	l12073
  7949  012352  D034               	goto	l12085
  7950  012354                     l12073:
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7954  012354  0100               	movlb	0	; () banked
  7955  012356  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7956  012358  0D17               	mullw	23
  7957  01235A  0E0C               	movlw	12
  7958  01235C  26F3               	addwf	prodl,f,c
  7959  01235E  0E00               	movlw	0
  7960  012360  22F4               	addwfc	prodh,f,c
  7961  012362  0E2E               	movlw	low _port
  7962  012364  24F3               	addwf	prodl,w,c
  7963  012366  6ED9               	movwf	fsr2l,c
  7964  012368  0E01               	movlw	high _port
  7965  01236A  20F4               	addwfc	prodh,w,c
  7966  01236C  6EDA               	movwf	fsr2h,c
  7967  01236E  50DE               	movf	postinc2,w,c
  7968  012370  10DE               	iorwf	postinc2,w,c
  7969  012372  10DE               	iorwf	postinc2,w,c
  7970  012374  10DE               	iorwf	postinc2,w,c
  7971  012376  B4D8               	btfsc	status,2,c
  7972  012378  D00D               	goto	l12077
  7973                           
  7974                           ; BSR set to: 0
  7975  01237A  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7976  01237E  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7977  012382  0EB1               	movlw	low STR_96
  7978  012384  0100               	movlb	0	; () banked
  7979  012386  6F62               	movwf	strcpy@from& (0+255),b
  7980  012388  0EFF               	movlw	high STR_96
  7981  01238A  0100               	movlb	0	; () banked
  7982  01238C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7983  01238E  EC3A  F0B5         	call	_strcpy	;wreg free
  7984  012392  D00C               	goto	l12079
  7985  012394                     l12077:
  7986                           
  7987                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7988  012394  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7989  012398  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7990  01239C  0E9F               	movlw	low STR_97
  7991  01239E  0100               	movlb	0	; () banked
  7992  0123A0  6F62               	movwf	strcpy@from& (0+255),b
  7993  0123A2  0EFF               	movlw	high STR_97
  7994  0123A4  0100               	movlb	0	; () banked
  7995  0123A6  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7996  0123A8  EC3A  F0B5         	call	_strcpy	;wreg free
  7997  0123AC                     l12079:
  7998                           
  7999                           ;settings.c: 155: strp += 5;
  8000  0123AC  0E05               	movlw	5
  8001  0123AE  0100               	movlb	0	; () banked
  8002  0123B0  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  8003  0123B2  0E00               	movlw	0
  8004  0123B4  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  8005                           
  8006                           ; BSR set to: 0
  8007  0123B6  0100               	movlb	0	; () banked
  8008  0123B8  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  8009  0123BA  D7C7               	goto	l12069
  8010  0123BC                     l12085:
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;settings.c: 156: }
  8014                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  8015  0123BC  0E81               	movlw	low STR_82
  8016  0123BE  0100               	movlb	0	; () banked
  8017  0123C0  6F60               	movwf	display@str0& (0+255),b
  8018  0123C2  0EFE               	movlw	high STR_82
  8019  0123C4  0100               	movlb	0	; () banked
  8020  0123C6  6F61               	movwf	(display@str0+1)& (0+255),b
  8021  0123C8  0E6A               	movlw	low settings_integrating_reset@str
  8022  0123CA  0100               	movlb	0	; () banked
  8023  0123CC  6F62               	movwf	display@str1& (0+255),b
  8024  0123CE  0E00               	movlw	high settings_integrating_reset@str
  8025  0123D0  0100               	movlb	0	; () banked
  8026  0123D2  6F63               	movwf	(display@str1+1)& (0+255),b
  8027  0123D4  0E03               	movlw	3
  8028  0123D6  EC87  F09C         	call	_display
  8029                           
  8030                           ;settings.c: 158: state = 1;
  8031  0123DA  0E01               	movlw	1
  8032  0123DC  0101               	movlb	1	; () banked
  8033  0123DE  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8034                           
  8035                           ;settings.c: 159: }
  8036                           ;settings.c: 160: break;
  8037  0123E0  D0B8               	goto	l1931
  8038  0123E2                     l12089:
  8039                           
  8040                           ; BSR set to: 1
  8041                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  8042  0123E2  0E00               	movlw	0
  8043  0123E4  0100               	movlb	0	; () banked
  8044  0123E6  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  8045  0123E8                     l12091:
  8046                           
  8047                           ; BSR set to: 0
  8048  0123E8  0E02               	movlw	2
  8049  0123EA  0100               	movlb	0	; () banked
  8050  0123EC  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  8051  0123EE  D001               	goto	l12095
  8052  0123F0  D0B0               	goto	l1931
  8053  0123F2                     l12095:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  8057  0123F2  0100               	movlb	0	; () banked
  8058  0123F4  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8059  0123F6  0D17               	mullw	23
  8060  0123F8  0E02               	movlw	2
  8061  0123FA  26F3               	addwf	prodl,f,c
  8062  0123FC  0E00               	movlw	0
  8063  0123FE  22F4               	addwfc	prodh,f,c
  8064  012400  0E2E               	movlw	low _port
  8065  012402  24F3               	addwf	prodl,w,c
  8066  012404  6ED9               	movwf	fsr2l,c
  8067  012406  0E01               	movlw	high _port
  8068  012408  20F4               	addwfc	prodh,w,c
  8069  01240A  6EDA               	movwf	fsr2h,c
  8070  01240C  0101               	movlb	1	; () banked
  8071  01240E  A0DF               	btfss	indf2,0,c
  8072  012410  D095               	goto	l12121
  8073                           
  8074                           ; BSR set to: 1
  8075                           ;settings.c: 164: port[j].ctmu.flags = 0;
  8076  012412  0100               	movlb	0	; () banked
  8077  012414  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8078  012416  0D17               	mullw	23
  8079  012418  0E02               	movlw	2
  8080  01241A  26F3               	addwf	prodl,f,c
  8081  01241C  0E00               	movlw	0
  8082  01241E  22F4               	addwfc	prodh,f,c
  8083  012420  0E2E               	movlw	low _port
  8084  012422  24F3               	addwf	prodl,w,c
  8085  012424  6ED9               	movwf	fsr2l,c
  8086  012426  0E01               	movlw	high _port
  8087  012428  20F4               	addwfc	prodh,w,c
  8088  01242A  6EDA               	movwf	fsr2h,c
  8089  01242C  0E00               	movlw	0
  8090  01242E  6EDE               	movwf	postinc2,c
  8091  012430  0E00               	movlw	0
  8092  012432  6EDD               	movwf	postdec2,c
  8093                           
  8094                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8095  012434  0100               	movlb	0	; () banked
  8096  012436  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8097  012438  0D17               	mullw	23
  8098  01243A  0E08               	movlw	8
  8099  01243C  26F3               	addwf	prodl,f,c
  8100  01243E  0E00               	movlw	0
  8101  012440  22F4               	addwfc	prodh,f,c
  8102  012442  0E2E               	movlw	low _port
  8103  012444  24F3               	addwf	prodl,w,c
  8104  012446  6ED9               	movwf	fsr2l,c
  8105  012448  0E01               	movlw	high _port
  8106  01244A  20F4               	addwfc	prodh,w,c
  8107  01244C  6EDA               	movwf	fsr2h,c
  8108  01244E  6ADE               	clrf	postinc2,c
  8109  012450  6ADE               	clrf	postinc2,c
  8110  012452  6ADE               	clrf	postinc2,c
  8111  012454  6ADD               	clrf	postdec2,c
  8112                           
  8113                           ;settings.c: 166: port[j].integrated_current = 0;
  8114  012456  0100               	movlb	0	; () banked
  8115  012458  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8116  01245A  0D17               	mullw	23
  8117  01245C  0E0C               	movlw	12
  8118  01245E  26F3               	addwf	prodl,f,c
  8119  012460  0E00               	movlw	0
  8120  012462  22F4               	addwfc	prodh,f,c
  8121  012464  0E2E               	movlw	low _port
  8122  012466  24F3               	addwf	prodl,w,c
  8123  012468  6ED9               	movwf	fsr2l,c
  8124  01246A  0E01               	movlw	high _port
  8125  01246C  20F4               	addwfc	prodh,w,c
  8126  01246E  6EDA               	movwf	fsr2h,c
  8127  012470  6ADE               	clrf	postinc2,c
  8128  012472  6ADE               	clrf	postinc2,c
  8129  012474  6ADE               	clrf	postinc2,c
  8130  012476  6ADD               	clrf	postdec2,c
  8131                           
  8132                           ;settings.c: 167: port[j].integrated_time = 0;
  8133  012478  0100               	movlb	0	; () banked
  8134  01247A  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8135  01247C  0D17               	mullw	23
  8136  01247E  0E10               	movlw	16
  8137  012480  26F3               	addwf	prodl,f,c
  8138  012482  0E00               	movlw	0
  8139  012484  22F4               	addwfc	prodh,f,c
  8140  012486  0E2E               	movlw	low _port
  8141  012488  24F3               	addwf	prodl,w,c
  8142  01248A  6ED9               	movwf	fsr2l,c
  8143  01248C  0E01               	movlw	high _port
  8144  01248E  20F4               	addwfc	prodh,w,c
  8145  012490  6EDA               	movwf	fsr2h,c
  8146  012492  6ADE               	clrf	postinc2,c
  8147  012494  6ADE               	clrf	postinc2,c
  8148  012496  6ADE               	clrf	postinc2,c
  8149  012498  6ADD               	clrf	postdec2,c
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;settings.c: 168: char str[20];
  8153                           ;settings.c: 169: char *strp;
  8154                           ;settings.c: 170: strp = str;
  8155  01249A  0E7E               	movlw	low settings_integrating_reset@str_6175
  8156  01249C  0100               	movlb	0	; () banked
  8157  01249E  6F94               	movwf	settings_integrating_reset@strp_6176& (0+255),b
  8158  0124A0  0E00               	movlw	high settings_integrating_reset@str_6175
  8159  0124A2  0100               	movlb	0	; () banked
  8160  0124A4  6F95               	movwf	(settings_integrating_reset@strp_6176+1)& (0+255),b
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8164  0124A6  0E00               	movlw	0
  8165  0124A8  0100               	movlb	0	; () banked
  8166  0124AA  6F97               	movwf	settings_integrating_reset@i_6177& (0+255),b
  8167  0124AC                     l12103:
  8168                           
  8169                           ; BSR set to: 0
  8170  0124AC  0E02               	movlw	2
  8171  0124AE  0100               	movlb	0	; () banked
  8172  0124B0  6597               	cpfsgt	settings_integrating_reset@i_6177& (0+255),b
  8173  0124B2  D001               	goto	l12107
  8174  0124B4  D034               	goto	l12119
  8175  0124B6                     l12107:
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8179  0124B6  0100               	movlb	0	; () banked
  8180  0124B8  5197               	movf	settings_integrating_reset@i_6177& (0+255),w,b
  8181  0124BA  0D17               	mullw	23
  8182  0124BC  0E0C               	movlw	12
  8183  0124BE  26F3               	addwf	prodl,f,c
  8184  0124C0  0E00               	movlw	0
  8185  0124C2  22F4               	addwfc	prodh,f,c
  8186  0124C4  0E2E               	movlw	low _port
  8187  0124C6  24F3               	addwf	prodl,w,c
  8188  0124C8  6ED9               	movwf	fsr2l,c
  8189  0124CA  0E01               	movlw	high _port
  8190  0124CC  20F4               	addwfc	prodh,w,c
  8191  0124CE  6EDA               	movwf	fsr2h,c
  8192  0124D0  50DE               	movf	postinc2,w,c
  8193  0124D2  10DE               	iorwf	postinc2,w,c
  8194  0124D4  10DE               	iorwf	postinc2,w,c
  8195  0124D6  10DE               	iorwf	postinc2,w,c
  8196  0124D8  B4D8               	btfsc	status,2,c
  8197  0124DA  D00D               	goto	l12111
  8198                           
  8199                           ; BSR set to: 0
  8200  0124DC  C094  F060         	movff	settings_integrating_reset@strp_6176,strcpy@to
  8201  0124E0  C095  F061         	movff	settings_integrating_reset@strp_6176+1,strcpy@to+1
  8202  0124E4  0EB1               	movlw	low STR_96
  8203  0124E6  0100               	movlb	0	; () banked
  8204  0124E8  6F62               	movwf	strcpy@from& (0+255),b
  8205  0124EA  0EFF               	movlw	high STR_96
  8206  0124EC  0100               	movlb	0	; () banked
  8207  0124EE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8208  0124F0  EC3A  F0B5         	call	_strcpy	;wreg free
  8209  0124F4  D00C               	goto	l12113
  8210  0124F6                     l12111:
  8211                           
  8212                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8213  0124F6  C094  F060         	movff	settings_integrating_reset@strp_6176,strcpy@to
  8214  0124FA  C095  F061         	movff	settings_integrating_reset@strp_6176+1,strcpy@to+1
  8215  0124FE  0E9F               	movlw	low STR_97
  8216  012500  0100               	movlb	0	; () banked
  8217  012502  6F62               	movwf	strcpy@from& (0+255),b
  8218  012504  0EFF               	movlw	high STR_97
  8219  012506  0100               	movlb	0	; () banked
  8220  012508  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8221  01250A  EC3A  F0B5         	call	_strcpy	;wreg free
  8222  01250E                     l12113:
  8223                           
  8224                           ;settings.c: 174: strp += 5;
  8225  01250E  0E05               	movlw	5
  8226  012510  0100               	movlb	0	; () banked
  8227  012512  2794               	addwf	settings_integrating_reset@strp_6176& (0+255),f,b
  8228  012514  0E00               	movlw	0
  8229  012516  2395               	addwfc	(settings_integrating_reset@strp_6176+1)& (0+255),f,b
  8230                           
  8231                           ; BSR set to: 0
  8232  012518  0100               	movlb	0	; () banked
  8233  01251A  2B97               	incf	settings_integrating_reset@i_6177& (0+255),f,b
  8234  01251C  D7C7               	goto	l12103
  8235  01251E                     l12119:
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;settings.c: 175: }
  8239                           ;settings.c: 176: display(SETTINGS, "", str);
  8240  01251E  0EE6               	movlw	low (STR_19+3)
  8241  012520  0100               	movlb	0	; () banked
  8242  012522  6F60               	movwf	display@str0& (0+255),b
  8243  012524  0EFF               	movlw	high (STR_19+3)
  8244  012526  0100               	movlb	0	; () banked
  8245  012528  6F61               	movwf	(display@str0+1)& (0+255),b
  8246  01252A  0E7E               	movlw	low settings_integrating_reset@str_6175
  8247  01252C  0100               	movlb	0	; () banked
  8248  01252E  6F62               	movwf	display@str1& (0+255),b
  8249  012530  0E00               	movlw	high settings_integrating_reset@str_6175
  8250  012532  0100               	movlb	0	; () banked
  8251  012534  6F63               	movwf	(display@str1+1)& (0+255),b
  8252  012536  0E03               	movlw	3
  8253  012538  EC87  F09C         	call	_display
  8254  01253C                     l12121:
  8255  01253C  0100               	movlb	0	; () banked
  8256  01253E  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8257  012540  D753               	goto	l12091
  8258  012542                     l12127:
  8259  012542  0101               	movlb	1	; () banked
  8260  012544  5129               	movf	settings_integrating_reset@state& (0+255),w,b
  8261                           
  8262                           ; Switch size 1, requested type "space"
  8263                           ; Number of cases is 2, Range of values is 0 to 1
  8264                           ; switch strategies available:
  8265                           ; Name         Instructions Cycles
  8266                           ; simple_byte            7     4 (average)
  8267                           ;	Chosen strategy is simple_byte
  8268  012546  0A00               	xorlw	0	; case 0
  8269  012548  B4D8               	btfsc	status,2,c
  8270  01254A  D6F6               	goto	l12065
  8271  01254C  0A01               	xorlw	1	; case 1
  8272  01254E  B4D8               	btfsc	status,2,c
  8273  012550  D748               	goto	l12089
  8274  012552                     l1931:
  8275                           
  8276                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8277  012552  0100               	movlb	0	; () banked
  8278  012554  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8279  012556  D01C               	goto	l12137
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;settings.c: 184: ctmu_m.flags = 0;
  8283  012558  0E00               	movlw	0
  8284  01255A  0100               	movlb	0	; () banked
  8285  01255C  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8286  01255E  0E00               	movlw	0
  8287  012560  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8288                           
  8289                           ;settings.c: 185: state = 0;
  8290  012562  0E00               	movlw	0
  8291  012564  0101               	movlb	1	; () banked
  8292  012566  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8293                           
  8294                           ;settings.c: 186: settings_flag = 0;
  8295  012568  0E00               	movlw	0
  8296  01256A  0101               	movlb	1	; () banked
  8297  01256C  6F22               	movwf	_settings_flag& (0+255),b
  8298                           
  8299                           ; BSR set to: 1
  8300                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8301  01256E  0EE6               	movlw	low (STR_19+3)
  8302  012570  0100               	movlb	0	; () banked
  8303  012572  6F60               	movwf	display@str0& (0+255),b
  8304  012574  0EFF               	movlw	high (STR_19+3)
  8305  012576  0100               	movlb	0	; () banked
  8306  012578  6F61               	movwf	(display@str0+1)& (0+255),b
  8307  01257A  0EE6               	movlw	low (STR_19+3)
  8308  01257C  0100               	movlb	0	; () banked
  8309  01257E  6F62               	movwf	display@str1& (0+255),b
  8310  012580  0EFF               	movlw	high (STR_19+3)
  8311  012582  0100               	movlb	0	; () banked
  8312  012584  6F63               	movwf	(display@str1+1)& (0+255),b
  8313  012586  0E01               	movlw	1
  8314  012588  EC87  F09C         	call	_display
  8315                           
  8316                           ;settings.c: 188: return 1;
  8317  01258C  0E01               	movlw	1
  8318  01258E  0012               	return	
  8319  012590                     l12137:
  8320                           
  8321                           ;settings.c: 189: }
  8322                           ;settings.c: 190: return 0;
  8323  012590  0E00               	movlw	0
  8324  012592  0012               	return	
  8325  012594                     __end_of_settings_integrating_reset:
  8326                           	opt stack 0
  8327                           tblptru	equ	0xFF8
  8328                           tblptrh	equ	0xFF7
  8329                           tblptrl	equ	0xFF6
  8330                           tablat	equ	0xFF5
  8331                           prodh	equ	0xFF4
  8332                           prodl	equ	0xFF3
  8333                           intcon	equ	0xFF2
  8334                           postinc0	equ	0xFEE
  8335                           wreg	equ	0xFE8
  8336                           postinc1	equ	0xFE6
  8337                           postdec1	equ	0xFE5
  8338                           fsr1h	equ	0xFE2
  8339                           fsr1l	equ	0xFE1
  8340                           indf2	equ	0xFDF
  8341                           postinc2	equ	0xFDE
  8342                           postdec2	equ	0xFDD
  8343                           fsr2h	equ	0xFDA
  8344                           fsr2l	equ	0xFD9
  8345                           status	equ	0xFD8
  8346                           
  8347 ;; *************** function _settings_auto_stop *****************
  8348 ;; Defined at:
  8349 ;;		line 49 in file "settings.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;		None
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  i               1   52[BANK0 ] unsigned char 
  8354 ;;  str            20   27[BANK0 ] unsigned char [20]
  8355 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8356 ;;		 -> settings_auto_stop@str_6141(20), 
  8357 ;;  i               1   51[BANK0 ] unsigned char 
  8358 ;;  j               1   53[BANK0 ] unsigned char 
  8359 ;;  str            20    7[BANK0 ] unsigned char [20]
  8360 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8361 ;;		 -> settings_auto_stop@str(20), 
  8362 ;; Return value:  Size  Location     Type
  8363 ;;                  1    wreg      unsigned char 
  8364 ;; Registers used:
  8365 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8366 ;; Tracked objects:
  8367 ;;		On entry : 0/0
  8368 ;;		On exit  : 0/0
  8369 ;;		Unchanged: 0/0
  8370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8372 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8374 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8375 ;;Total ram usage:       48 bytes
  8376 ;; Hardware stack levels used:    1
  8377 ;; Hardware stack levels required when called:   13
  8378 ;; This function calls:
  8379 ;;		_display
  8380 ;;		_strcpy
  8381 ;; This function is called by:
  8382 ;;		_settings_task
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text20
  8387  0127E8                     __ptext20:
  8388                           	opt stack 0
  8389  0127E8                     _settings_auto_stop:
  8390                           	opt stack 15
  8391                           
  8392                           ;settings.c: 50: static uint8_t state = 0;
  8393                           ;settings.c: 51: switch (state) {
  8394                           
  8395                           ;incstack = 0
  8396  0127E8  D0F7               	goto	l11969
  8397  0127EA                     l11907:
  8398                           
  8399                           ;settings.c: 53: {
  8400                           ;settings.c: 54: char str[20];
  8401                           ;settings.c: 55: char *strp;
  8402                           ;settings.c: 56: strp = str;
  8403  0127EA  0E67               	movlw	low settings_auto_stop@str
  8404  0127EC  0100               	movlb	0	; () banked
  8405  0127EE  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8406  0127F0  0E00               	movlw	high settings_auto_stop@str
  8407  0127F2  0100               	movlb	0	; () banked
  8408  0127F4  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8412  0127F6  0E00               	movlw	0
  8413  0127F8  0100               	movlb	0	; () banked
  8414  0127FA  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8415  0127FC                     l11911:
  8416                           
  8417                           ; BSR set to: 0
  8418  0127FC  0E02               	movlw	2
  8419  0127FE  0100               	movlb	0	; () banked
  8420  012800  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8421  012802  D001               	goto	l11915
  8422  012804  D031               	goto	l11927
  8423  012806                     l11915:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8427  012806  0100               	movlb	0	; () banked
  8428  012808  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8429  01280A  0D17               	mullw	23
  8430  01280C  0E16               	movlw	22
  8431  01280E  26F3               	addwf	prodl,f,c
  8432  012810  0E00               	movlw	0
  8433  012812  22F4               	addwfc	prodh,f,c
  8434  012814  0E2E               	movlw	low _port
  8435  012816  24F3               	addwf	prodl,w,c
  8436  012818  6ED9               	movwf	fsr2l,c
  8437  01281A  0E01               	movlw	high _port
  8438  01281C  20F4               	addwfc	prodh,w,c
  8439  01281E  6EDA               	movwf	fsr2h,c
  8440  012820  0101               	movlb	1	; () banked
  8441  012822  A0DF               	btfss	indf2,0,c
  8442  012824  D00D               	goto	l11919
  8443                           
  8444                           ; BSR set to: 1
  8445  012826  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8446  01282A  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8447  01282E  0EA5               	movlw	low STR_80
  8448  012830  0100               	movlb	0	; () banked
  8449  012832  6F62               	movwf	strcpy@from& (0+255),b
  8450  012834  0EFF               	movlw	high STR_80
  8451  012836  0100               	movlb	0	; () banked
  8452  012838  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8453  01283A  EC3A  F0B5         	call	_strcpy	;wreg free
  8454  01283E  D00C               	goto	l11921
  8455  012840                     l11919:
  8456                           
  8457                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8458  012840  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8459  012844  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8460  012848  0EAB               	movlw	low STR_81
  8461  01284A  0100               	movlb	0	; () banked
  8462  01284C  6F62               	movwf	strcpy@from& (0+255),b
  8463  01284E  0EFF               	movlw	high STR_81
  8464  012850  0100               	movlb	0	; () banked
  8465  012852  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8466  012854  EC3A  F0B5         	call	_strcpy	;wreg free
  8467  012858                     l11921:
  8468                           
  8469                           ;settings.c: 60: strp += 5;
  8470  012858  0E05               	movlw	5
  8471  01285A  0100               	movlb	0	; () banked
  8472  01285C  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8473  01285E  0E00               	movlw	0
  8474  012860  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8475                           
  8476                           ; BSR set to: 0
  8477  012862  0100               	movlb	0	; () banked
  8478  012864  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8479  012866  D7CA               	goto	l11911
  8480  012868                     l11927:
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;settings.c: 61: }
  8484                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8485  012868  0E81               	movlw	low STR_82
  8486  01286A  0100               	movlb	0	; () banked
  8487  01286C  6F60               	movwf	display@str0& (0+255),b
  8488  01286E  0EFE               	movlw	high STR_82
  8489  012870  0100               	movlb	0	; () banked
  8490  012872  6F61               	movwf	(display@str0+1)& (0+255),b
  8491  012874  0E67               	movlw	low settings_auto_stop@str
  8492  012876  0100               	movlb	0	; () banked
  8493  012878  6F62               	movwf	display@str1& (0+255),b
  8494  01287A  0E00               	movlw	high settings_auto_stop@str
  8495  01287C  0100               	movlb	0	; () banked
  8496  01287E  6F63               	movwf	(display@str1+1)& (0+255),b
  8497  012880  0E03               	movlw	3
  8498  012882  EC87  F09C         	call	_display
  8499                           
  8500                           ;settings.c: 63: state = 1;
  8501  012886  0E01               	movlw	1
  8502  012888  0101               	movlb	1	; () banked
  8503  01288A  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8504                           
  8505                           ;settings.c: 64: }
  8506                           ;settings.c: 65: break;
  8507  01288C  D0AD               	goto	l1887
  8508  01288E                     l11931:
  8509                           
  8510                           ; BSR set to: 1
  8511                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8512  01288E  0E00               	movlw	0
  8513  012890  0100               	movlb	0	; () banked
  8514  012892  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8515  012894                     l11933:
  8516                           
  8517                           ; BSR set to: 0
  8518  012894  0E02               	movlw	2
  8519  012896  0100               	movlb	0	; () banked
  8520  012898  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8521  01289A  D001               	goto	l11937
  8522  01289C  D0A5               	goto	l1887
  8523  01289E                     l11937:
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8527  01289E  0100               	movlb	0	; () banked
  8528  0128A0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8529  0128A2  0D17               	mullw	23
  8530  0128A4  0E02               	movlw	2
  8531  0128A6  26F3               	addwf	prodl,f,c
  8532  0128A8  0E00               	movlw	0
  8533  0128AA  22F4               	addwfc	prodh,f,c
  8534  0128AC  0E2E               	movlw	low _port
  8535  0128AE  24F3               	addwf	prodl,w,c
  8536  0128B0  6ED9               	movwf	fsr2l,c
  8537  0128B2  0E01               	movlw	high _port
  8538  0128B4  20F4               	addwfc	prodh,w,c
  8539  0128B6  6EDA               	movwf	fsr2h,c
  8540  0128B8  0101               	movlb	1	; () banked
  8541  0128BA  A0DF               	btfss	indf2,0,c
  8542  0128BC  D08A               	goto	l11963
  8543                           
  8544                           ; BSR set to: 1
  8545                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8546  0128BE  0100               	movlb	0	; () banked
  8547  0128C0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8548  0128C2  0D17               	mullw	23
  8549  0128C4  0E02               	movlw	2
  8550  0128C6  26F3               	addwf	prodl,f,c
  8551  0128C8  0E00               	movlw	0
  8552  0128CA  22F4               	addwfc	prodh,f,c
  8553  0128CC  0E2E               	movlw	low _port
  8554  0128CE  24F3               	addwf	prodl,w,c
  8555  0128D0  6ED9               	movwf	fsr2l,c
  8556  0128D2  0E01               	movlw	high _port
  8557  0128D4  20F4               	addwfc	prodh,w,c
  8558  0128D6  6EDA               	movwf	fsr2h,c
  8559  0128D8  0E00               	movlw	0
  8560  0128DA  6EDE               	movwf	postinc2,c
  8561  0128DC  0E00               	movlw	0
  8562  0128DE  6EDD               	movwf	postdec2,c
  8563                           
  8564                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8565  0128E0  0100               	movlb	0	; () banked
  8566  0128E2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8567  0128E4  0D17               	mullw	23
  8568  0128E6  0E16               	movlw	22
  8569  0128E8  26F3               	addwf	prodl,f,c
  8570  0128EA  0E00               	movlw	0
  8571  0128EC  22F4               	addwfc	prodh,f,c
  8572  0128EE  0E2E               	movlw	low _port
  8573  0128F0  24F3               	addwf	prodl,w,c
  8574  0128F2  6ED9               	movwf	fsr2l,c
  8575  0128F4  0E01               	movlw	high _port
  8576  0128F6  20F4               	addwfc	prodh,w,c
  8577  0128F8  6EDA               	movwf	fsr2h,c
  8578  0128FA  0101               	movlb	1	; () banked
  8579  0128FC  B0DF               	btfsc	indf2,0,c
  8580  0128FE  D004               	goto	u13360
  8581  012900  0100               	movlb	0	; () banked
  8582  012902  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8583  012904  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8584  012906  D002               	goto	u13378
  8585  012908                     u13360:
  8586  012908  0100               	movlb	0	; () banked
  8587  01290A  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8588  01290C                     u13378:
  8589  01290C  0100               	movlb	0	; () banked
  8590  01290E  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8591  012910  0D17               	mullw	23
  8592  012912  0E16               	movlw	22
  8593  012914  26F3               	addwf	prodl,f,c
  8594  012916  0E00               	movlw	0
  8595  012918  22F4               	addwfc	prodh,f,c
  8596  01291A  0E2E               	movlw	low _port
  8597  01291C  24F3               	addwf	prodl,w,c
  8598  01291E  6ED9               	movwf	fsr2l,c
  8599  012920  0E01               	movlw	high _port
  8600  012922  20F4               	addwfc	prodh,w,c
  8601  012924  6EDA               	movwf	fsr2h,c
  8602  012926  0101               	movlb	1	; () banked
  8603  012928  50DF               	movf	223,w,c
  8604  01292A  0100               	movlb	0	; () banked
  8605  01292C  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8606  01292E  0BFE               	andlw	-2
  8607  012930  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8608  012932  0101               	movlb	1	; () banked
  8609  012934  6EDF               	movwf	223,c
  8610                           
  8611                           ; BSR set to: 1
  8612                           ;settings.c: 71: char str[20];
  8613                           ;settings.c: 72: char *strp;
  8614                           ;settings.c: 73: strp = str;
  8615  012936  0E7B               	movlw	low settings_auto_stop@str_6141
  8616  012938  0100               	movlb	0	; () banked
  8617  01293A  6F91               	movwf	settings_auto_stop@strp_6142& (0+255),b
  8618  01293C  0E00               	movlw	high settings_auto_stop@str_6141
  8619  01293E  0100               	movlb	0	; () banked
  8620  012940  6F92               	movwf	(settings_auto_stop@strp_6142+1)& (0+255),b
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8624  012942  0E00               	movlw	0
  8625  012944  0100               	movlb	0	; () banked
  8626  012946  6F94               	movwf	settings_auto_stop@i_6143& (0+255),b
  8627  012948                     l11945:
  8628                           
  8629                           ; BSR set to: 0
  8630  012948  0E02               	movlw	2
  8631  01294A  0100               	movlb	0	; () banked
  8632  01294C  6594               	cpfsgt	settings_auto_stop@i_6143& (0+255),b
  8633  01294E  D001               	goto	l11949
  8634  012950  D031               	goto	l11961
  8635  012952                     l11949:
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8639  012952  0100               	movlb	0	; () banked
  8640  012954  5194               	movf	settings_auto_stop@i_6143& (0+255),w,b
  8641  012956  0D17               	mullw	23
  8642  012958  0E16               	movlw	22
  8643  01295A  26F3               	addwf	prodl,f,c
  8644  01295C  0E00               	movlw	0
  8645  01295E  22F4               	addwfc	prodh,f,c
  8646  012960  0E2E               	movlw	low _port
  8647  012962  24F3               	addwf	prodl,w,c
  8648  012964  6ED9               	movwf	fsr2l,c
  8649  012966  0E01               	movlw	high _port
  8650  012968  20F4               	addwfc	prodh,w,c
  8651  01296A  6EDA               	movwf	fsr2h,c
  8652  01296C  0101               	movlb	1	; () banked
  8653  01296E  A0DF               	btfss	indf2,0,c
  8654  012970  D00D               	goto	l11953
  8655                           
  8656                           ; BSR set to: 1
  8657  012972  C091  F060         	movff	settings_auto_stop@strp_6142,strcpy@to
  8658  012976  C092  F061         	movff	settings_auto_stop@strp_6142+1,strcpy@to+1
  8659  01297A  0EA5               	movlw	low STR_80
  8660  01297C  0100               	movlb	0	; () banked
  8661  01297E  6F62               	movwf	strcpy@from& (0+255),b
  8662  012980  0EFF               	movlw	high STR_80
  8663  012982  0100               	movlb	0	; () banked
  8664  012984  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8665  012986  EC3A  F0B5         	call	_strcpy	;wreg free
  8666  01298A  D00C               	goto	l11955
  8667  01298C                     l11953:
  8668                           
  8669                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8670  01298C  C091  F060         	movff	settings_auto_stop@strp_6142,strcpy@to
  8671  012990  C092  F061         	movff	settings_auto_stop@strp_6142+1,strcpy@to+1
  8672  012994  0EAB               	movlw	low STR_81
  8673  012996  0100               	movlb	0	; () banked
  8674  012998  6F62               	movwf	strcpy@from& (0+255),b
  8675  01299A  0EFF               	movlw	high STR_81
  8676  01299C  0100               	movlb	0	; () banked
  8677  01299E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8678  0129A0  EC3A  F0B5         	call	_strcpy	;wreg free
  8679  0129A4                     l11955:
  8680                           
  8681                           ;settings.c: 77: strp += 5;
  8682  0129A4  0E05               	movlw	5
  8683  0129A6  0100               	movlb	0	; () banked
  8684  0129A8  2791               	addwf	settings_auto_stop@strp_6142& (0+255),f,b
  8685  0129AA  0E00               	movlw	0
  8686  0129AC  2392               	addwfc	(settings_auto_stop@strp_6142+1)& (0+255),f,b
  8687                           
  8688                           ; BSR set to: 0
  8689  0129AE  0100               	movlb	0	; () banked
  8690  0129B0  2B94               	incf	settings_auto_stop@i_6143& (0+255),f,b
  8691  0129B2  D7CA               	goto	l11945
  8692  0129B4                     l11961:
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;settings.c: 78: }
  8696                           ;settings.c: 79: display(SETTINGS, "", str);
  8697  0129B4  0EE6               	movlw	low (STR_19+3)
  8698  0129B6  0100               	movlb	0	; () banked
  8699  0129B8  6F60               	movwf	display@str0& (0+255),b
  8700  0129BA  0EFF               	movlw	high (STR_19+3)
  8701  0129BC  0100               	movlb	0	; () banked
  8702  0129BE  6F61               	movwf	(display@str0+1)& (0+255),b
  8703  0129C0  0E7B               	movlw	low settings_auto_stop@str_6141
  8704  0129C2  0100               	movlb	0	; () banked
  8705  0129C4  6F62               	movwf	display@str1& (0+255),b
  8706  0129C6  0E00               	movlw	high settings_auto_stop@str_6141
  8707  0129C8  0100               	movlb	0	; () banked
  8708  0129CA  6F63               	movwf	(display@str1+1)& (0+255),b
  8709  0129CC  0E03               	movlw	3
  8710  0129CE  EC87  F09C         	call	_display
  8711  0129D2                     l11963:
  8712  0129D2  0100               	movlb	0	; () banked
  8713  0129D4  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8714  0129D6  D75E               	goto	l11933
  8715  0129D8                     l11969:
  8716  0129D8  0101               	movlb	1	; () banked
  8717  0129DA  5128               	movf	settings_auto_stop@state& (0+255),w,b
  8718                           
  8719                           ; Switch size 1, requested type "space"
  8720                           ; Number of cases is 2, Range of values is 0 to 1
  8721                           ; switch strategies available:
  8722                           ; Name         Instructions Cycles
  8723                           ; simple_byte            7     4 (average)
  8724                           ;	Chosen strategy is simple_byte
  8725  0129DC  0A00               	xorlw	0	; case 0
  8726  0129DE  B4D8               	btfsc	status,2,c
  8727  0129E0  D704               	goto	l11907
  8728  0129E2  0A01               	xorlw	1	; case 1
  8729  0129E4  B4D8               	btfsc	status,2,c
  8730  0129E6  D753               	goto	l11931
  8731  0129E8                     l1887:
  8732                           
  8733                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8734  0129E8  0100               	movlb	0	; () banked
  8735  0129EA  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8736  0129EC  D01C               	goto	l11979
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;settings.c: 87: ctmu_m.flags = 0;
  8740  0129EE  0E00               	movlw	0
  8741  0129F0  0100               	movlb	0	; () banked
  8742  0129F2  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8743  0129F4  0E00               	movlw	0
  8744  0129F6  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8745                           
  8746                           ;settings.c: 88: state = 0;
  8747  0129F8  0E00               	movlw	0
  8748  0129FA  0101               	movlb	1	; () banked
  8749  0129FC  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8750                           
  8751                           ;settings.c: 89: settings_flag = 0;
  8752  0129FE  0E00               	movlw	0
  8753  012A00  0101               	movlb	1	; () banked
  8754  012A02  6F22               	movwf	_settings_flag& (0+255),b
  8755                           
  8756                           ; BSR set to: 1
  8757                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8758  012A04  0EE6               	movlw	low (STR_19+3)
  8759  012A06  0100               	movlb	0	; () banked
  8760  012A08  6F60               	movwf	display@str0& (0+255),b
  8761  012A0A  0EFF               	movlw	high (STR_19+3)
  8762  012A0C  0100               	movlb	0	; () banked
  8763  012A0E  6F61               	movwf	(display@str0+1)& (0+255),b
  8764  012A10  0EE6               	movlw	low (STR_19+3)
  8765  012A12  0100               	movlb	0	; () banked
  8766  012A14  6F62               	movwf	display@str1& (0+255),b
  8767  012A16  0EFF               	movlw	high (STR_19+3)
  8768  012A18  0100               	movlb	0	; () banked
  8769  012A1A  6F63               	movwf	(display@str1+1)& (0+255),b
  8770  012A1C  0E01               	movlw	1
  8771  012A1E  EC87  F09C         	call	_display
  8772                           
  8773                           ;settings.c: 91: return 1;
  8774  012A22  0E01               	movlw	1
  8775  012A24  0012               	return	
  8776  012A26                     l11979:
  8777                           
  8778                           ;settings.c: 92: }
  8779                           ;settings.c: 93: return 0;
  8780  012A26  0E00               	movlw	0
  8781  012A28  0012               	return	
  8782  012A2A                     __end_of_settings_auto_stop:
  8783                           	opt stack 0
  8784                           tblptru	equ	0xFF8
  8785                           tblptrh	equ	0xFF7
  8786                           tblptrl	equ	0xFF6
  8787                           tablat	equ	0xFF5
  8788                           prodh	equ	0xFF4
  8789                           prodl	equ	0xFF3
  8790                           intcon	equ	0xFF2
  8791                           postinc0	equ	0xFEE
  8792                           wreg	equ	0xFE8
  8793                           postinc1	equ	0xFE6
  8794                           postdec1	equ	0xFE5
  8795                           fsr1h	equ	0xFE2
  8796                           fsr1l	equ	0xFE1
  8797                           indf2	equ	0xFDF
  8798                           postinc2	equ	0xFDE
  8799                           postdec2	equ	0xFDD
  8800                           fsr2h	equ	0xFDA
  8801                           fsr2l	equ	0xFD9
  8802                           status	equ	0xFD8
  8803                           
  8804 ;; *************** function _settings_adjust_time *****************
  8805 ;; Defined at:
  8806 ;;		line 13 in file "settings.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;		None
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      unsigned char 
  8813 ;; Registers used:
  8814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8824 ;;Total ram usage:        0 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:   17
  8827 ;; This function calls:
  8828 ;;		_RTCC_adjust_time_cursor
  8829 ;;		_RTCC_adjust_time_dec
  8830 ;;		_RTCC_adjust_time_inc
  8831 ;;		_RTCC_adjust_time_toggle
  8832 ;;		_display
  8833 ;; This function is called by:
  8834 ;;		_settings_task
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text21
  8839  01473C                     __ptext21:
  8840                           	opt stack 0
  8841  01473C                     _settings_adjust_time:
  8842                           	opt stack 11
  8843                           
  8844                           ;settings.c: 14: static uint8_t state = 0;
  8845                           ;settings.c: 15: switch (state) {
  8846                           
  8847                           ;incstack = 0
  8848  01473C  D043               	goto	l11891
  8849  01473E                     l11867:
  8850                           
  8851                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8852  01473E  0EE6               	movlw	low (STR_19+3)
  8853  014740  0100               	movlb	0	; () banked
  8854  014742  6F60               	movwf	display@str0& (0+255),b
  8855  014744  0EFF               	movlw	high (STR_19+3)
  8856  014746  0100               	movlb	0	; () banked
  8857  014748  6F61               	movwf	(display@str0+1)& (0+255),b
  8858  01474A  0EE6               	movlw	low (STR_19+3)
  8859  01474C  0100               	movlb	0	; () banked
  8860  01474E  6F62               	movwf	display@str1& (0+255),b
  8861  014750  0EFF               	movlw	high (STR_19+3)
  8862  014752  0100               	movlb	0	; () banked
  8863  014754  6F63               	movwf	(display@str1+1)& (0+255),b
  8864  014756  0E01               	movlw	1
  8865  014758  EC87  F09C         	call	_display
  8866                           
  8867                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8868  01475C  0E73               	movlw	low _now
  8869  01475E  0100               	movlb	0	; () banked
  8870  014760  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8871  014762  0E01               	movlw	high _now
  8872  014764  0100               	movlb	0	; () banked
  8873  014766  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8874  014768  ECC4  F0B4         	call	_RTCC_adjust_time_toggle	;wreg free
  8875                           
  8876                           ;settings.c: 19: state = 1;
  8877  01476C  0E01               	movlw	1
  8878  01476E  0101               	movlb	1	; () banked
  8879  014770  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8880                           
  8881                           ;settings.c: 20: break;
  8882  014772  D030               	goto	l1869
  8883  014774                     l1870:
  8884                           
  8885                           ; BSR set to: 1
  8886                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8887  014774  0101               	movlb	1	; () banked
  8888  014776  A147               	btfss	(_port+25)& (0+255),0,b
  8889  014778  D00A               	goto	l11877
  8890                           
  8891                           ; BSR set to: 1
  8892                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8893  01477A  0101               	movlb	1	; () banked
  8894  01477C  9147               	bcf	(_port+25)& (0+255),0,b
  8895                           
  8896                           ; BSR set to: 1
  8897                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8898  01477E  0E73               	movlw	low _now
  8899  014780  0100               	movlb	0	; () banked
  8900  014782  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8901  014784  0E01               	movlw	high _now
  8902  014786  0100               	movlb	0	; () banked
  8903  014788  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8904  01478A  ECDB  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8905  01478E                     l11877:
  8906                           
  8907                           ;settings.c: 25: }
  8908                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8909  01478E  0101               	movlb	1	; () banked
  8910  014790  A15E               	btfss	(_port+48)& (0+255),0,b
  8911  014792  D00A               	goto	l11883
  8912                           
  8913                           ; BSR set to: 1
  8914                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8915  014794  0101               	movlb	1	; () banked
  8916  014796  915E               	bcf	(_port+48)& (0+255),0,b
  8917                           
  8918                           ; BSR set to: 1
  8919                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8920  014798  0E73               	movlw	low _now
  8921  01479A  0100               	movlb	0	; () banked
  8922  01479C  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8923  01479E  0E01               	movlw	high _now
  8924  0147A0  0100               	movlb	0	; () banked
  8925  0147A2  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8926  0147A4  EC37  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8927  0147A8                     l11883:
  8928                           
  8929                           ;settings.c: 29: }
  8930                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8931  0147A8  0101               	movlb	1	; () banked
  8932  0147AA  A130               	btfss	(_port+2)& (0+255),0,b
  8933  0147AC  D013               	goto	l1869
  8934                           
  8935                           ; BSR set to: 1
  8936                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8937  0147AE  0101               	movlb	1	; () banked
  8938  0147B0  9130               	bcf	(_port+2)& (0+255),0,b
  8939                           
  8940                           ; BSR set to: 1
  8941                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8942  0147B2  0E73               	movlw	low _now
  8943  0147B4  0100               	movlb	0	; () banked
  8944  0147B6  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8945  0147B8  0E01               	movlw	high _now
  8946  0147BA  0100               	movlb	0	; () banked
  8947  0147BC  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8948  0147BE  EC89  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8949                           
  8950                           ;settings.c: 37: }
  8951                           
  8952                           ;settings.c: 36: break;
  8953                           
  8954                           ;settings.c: 35: default:
  8955                           
  8956                           ;settings.c: 33: }
  8957                           ;settings.c: 34: break;
  8958  0147C2  D008               	goto	l1869
  8959  0147C4                     l11891:
  8960  0147C4  0101               	movlb	1	; () banked
  8961  0147C6  5127               	movf	settings_adjust_time@state& (0+255),w,b
  8962                           
  8963                           ; Switch size 1, requested type "space"
  8964                           ; Number of cases is 2, Range of values is 0 to 1
  8965                           ; switch strategies available:
  8966                           ; Name         Instructions Cycles
  8967                           ; simple_byte            7     4 (average)
  8968                           ;	Chosen strategy is simple_byte
  8969  0147C8  0A00               	xorlw	0	; case 0
  8970  0147CA  B4D8               	btfsc	status,2,c
  8971  0147CC  D7B8               	goto	l11867
  8972  0147CE  0A01               	xorlw	1	; case 1
  8973  0147D0  B4D8               	btfsc	status,2,c
  8974  0147D2  D7D0               	goto	l1870
  8975  0147D4                     l1869:
  8976                           
  8977                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8978  0147D4  0100               	movlb	0	; () banked
  8979  0147D6  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8980  0147D8  D01F               	goto	l11901
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;settings.c: 39: ctmu_m.flags = 0;
  8984  0147DA  0E00               	movlw	0
  8985  0147DC  0100               	movlb	0	; () banked
  8986  0147DE  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8987  0147E0  0E00               	movlw	0
  8988  0147E2  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8989                           
  8990                           ;settings.c: 40: now.edit.flags = 0;
  8991  0147E4  0E00               	movlw	0
  8992  0147E6  0101               	movlb	1	; () banked
  8993  0147E8  6F80               	movwf	(_now+13)& (0+255),b
  8994                           
  8995                           ;settings.c: 41: state = 0;
  8996  0147EA  0E00               	movlw	0
  8997  0147EC  0101               	movlb	1	; () banked
  8998  0147EE  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8999                           
  9000                           ;settings.c: 42: settings_flag = 0;
  9001  0147F0  0E00               	movlw	0
  9002  0147F2  0101               	movlb	1	; () banked
  9003  0147F4  6F22               	movwf	_settings_flag& (0+255),b
  9004                           
  9005                           ; BSR set to: 1
  9006                           ;settings.c: 43: display(PRINT_TIME, "", "");
  9007  0147F6  0EE6               	movlw	low (STR_19+3)
  9008  0147F8  0100               	movlb	0	; () banked
  9009  0147FA  6F60               	movwf	display@str0& (0+255),b
  9010  0147FC  0EFF               	movlw	high (STR_19+3)
  9011  0147FE  0100               	movlb	0	; () banked
  9012  014800  6F61               	movwf	(display@str0+1)& (0+255),b
  9013  014802  0EE6               	movlw	low (STR_19+3)
  9014  014804  0100               	movlb	0	; () banked
  9015  014806  6F62               	movwf	display@str1& (0+255),b
  9016  014808  0EFF               	movlw	high (STR_19+3)
  9017  01480A  0100               	movlb	0	; () banked
  9018  01480C  6F63               	movwf	(display@str1+1)& (0+255),b
  9019  01480E  0E01               	movlw	1
  9020  014810  EC87  F09C         	call	_display
  9021                           
  9022                           ;settings.c: 44: return 1;
  9023  014814  0E01               	movlw	1
  9024  014816  0012               	return	
  9025  014818                     l11901:
  9026                           
  9027                           ;settings.c: 45: }
  9028                           ;settings.c: 46: return 0;
  9029  014818  0E00               	movlw	0
  9030  01481A  0012               	return	
  9031  01481C                     __end_of_settings_adjust_time:
  9032                           	opt stack 0
  9033                           tblptru	equ	0xFF8
  9034                           tblptrh	equ	0xFF7
  9035                           tblptrl	equ	0xFF6
  9036                           tablat	equ	0xFF5
  9037                           prodh	equ	0xFF4
  9038                           prodl	equ	0xFF3
  9039                           intcon	equ	0xFF2
  9040                           postinc0	equ	0xFEE
  9041                           wreg	equ	0xFE8
  9042                           postinc1	equ	0xFE6
  9043                           postdec1	equ	0xFE5
  9044                           fsr1h	equ	0xFE2
  9045                           fsr1l	equ	0xFE1
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           fsr2h	equ	0xFDA
  9050                           fsr2l	equ	0xFD9
  9051                           status	equ	0xFD8
  9052                           
  9053 ;; *************** function _RTCC_adjust_time_toggle *****************
  9054 ;; Defined at:
  9055 ;;		line 146 in file "../My_library/My_RTCC.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  tm              2    0[BANK0 ] PTR struct .
  9058 ;;		 -> now(14), 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;		None
  9061 ;; Return value:  Size  Location     Type
  9062 ;;		None               void
  9063 ;; Registers used:
  9064 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9073 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9074 ;;Total ram usage:        2 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:   12
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_settings_adjust_time
  9081 ;;		_RTCC_adjust_time_button
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text22
  9086  016988                     __ptext22:
  9087                           	opt stack 0
  9088  016988                     _RTCC_adjust_time_toggle:
  9089                           	opt stack 15
  9090                           
  9091                           ;My_RTCC.c: 147: if (tm->edit.flags) {
  9092                           
  9093                           ;incstack = 0
  9094  016988  0100               	movlb	0	; () banked
  9095  01698A  EE20 F00D          	lfsr	2,13
  9096  01698E  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9097  016990  26D9               	addwf	fsr2l,f,c
  9098  016992  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9099  016994  22DA               	addwfc	fsr2h,f,c
  9100  016996  50DF               	movf	indf2,w,c
  9101  016998  B4D8               	btfsc	status,2,c
  9102  01699A  D00A               	goto	l11265
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;My_RTCC.c: 148: tm->edit.flags = 0;
  9106  01699C  0100               	movlb	0	; () banked
  9107  01699E  EE20 F00D          	lfsr	2,13
  9108  0169A2  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9109  0169A4  26D9               	addwf	fsr2l,f,c
  9110  0169A6  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9111  0169A8  22DA               	addwfc	fsr2h,f,c
  9112  0169AA  0E00               	movlw	0
  9113  0169AC  6EDF               	movwf	indf2,c
  9114                           
  9115                           ;My_RTCC.c: 149: } else {
  9116  0169AE  0012               	return	
  9117  0169B0                     l11265:
  9118                           
  9119                           ; BSR set to: 0
  9120                           ;My_RTCC.c: 150: tm->edit.flag.ss = 1;
  9121  0169B0  0100               	movlb	0	; () banked
  9122  0169B2  EE20 F00D          	lfsr	2,13
  9123  0169B6  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9124  0169B8  26D9               	addwf	fsr2l,f,c
  9125  0169BA  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9126  0169BC  22DA               	addwfc	fsr2h,f,c
  9127  0169BE  0100               	movlb	0	; () banked
  9128  0169C0  80DF               	bsf	indf2,0,c
  9129  0169C2  0012               	return	
  9130  0169C4                     __end_of_RTCC_adjust_time_toggle:
  9131                           	opt stack 0
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           postinc0	equ	0xFEE
  9140                           wreg	equ	0xFE8
  9141                           postinc1	equ	0xFE6
  9142                           postdec1	equ	0xFE5
  9143                           fsr1h	equ	0xFE2
  9144                           fsr1l	equ	0xFE1
  9145                           indf2	equ	0xFDF
  9146                           postinc2	equ	0xFDE
  9147                           postdec2	equ	0xFDD
  9148                           fsr2h	equ	0xFDA
  9149                           fsr2l	equ	0xFD9
  9150                           status	equ	0xFD8
  9151                           
  9152 ;; *************** function _RTCC_adjust_time_inc *****************
  9153 ;; Defined at:
  9154 ;;		line 164 in file "../My_library/My_RTCC.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  tm              2   49[BANK0 ] PTR struct .
  9157 ;;		 -> now(14), 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  i               1   55[BANK0 ] unsigned char 
  9160 ;;  i               1   56[BANK0 ] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;		None               void
  9163 ;; Registers used:
  9164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;Total ram usage:        8 bytes
  9175 ;; Hardware stack levels used:    1
  9176 ;; Hardware stack levels required when called:   16
  9177 ;; This function calls:
  9178 ;;		_RTCC_from_RTCC
  9179 ;;		_RTCC_from_epoch
  9180 ;;		___lmul
  9181 ;;		_month_length
  9182 ;; This function is called by:
  9183 ;;		_settings_adjust_time
  9184 ;;		_RTCC_adjust_time_button
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text23
  9189  01166E                     __ptext23:
  9190                           	opt stack 0
  9191  01166E                     _RTCC_adjust_time_inc:
  9192                           	opt stack 11
  9193                           
  9194                           ;My_RTCC.c: 165: RTCC_from_RTCC(tm);
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;incstack = 0
  9198  01166E  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9199  011672  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9200  011676  EC52  F0B7         	call	_RTCC_from_RTCC	;wreg free
  9201                           
  9202                           ;My_RTCC.c: 166: if (tm->edit.flag.ss) tm->epoch += 1;
  9203  01167A  0100               	movlb	0	; () banked
  9204  01167C  EE20 F00D          	lfsr	2,13
  9205  011680  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9206  011682  26D9               	addwf	fsr2l,f,c
  9207  011684  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9208  011686  22DA               	addwfc	fsr2h,f,c
  9209  011688  0100               	movlb	0	; () banked
  9210  01168A  A0DF               	btfss	indf2,0,c
  9211  01168C  D009               	goto	l905
  9212                           
  9213                           ; BSR set to: 0
  9214  01168E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9215  011692  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9216  011696  2ADE               	incf	postinc2,f,c
  9217  011698  0E00               	movlw	0
  9218  01169A  22DE               	addwfc	postinc2,f,c
  9219  01169C  22DE               	addwfc	postinc2,f,c
  9220  01169E  22DE               	addwfc	postinc2,f,c
  9221  0116A0                     l905:
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;My_RTCC.c: 167: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9225  0116A0  0100               	movlb	0	; () banked
  9226  0116A2  EE20 F00D          	lfsr	2,13
  9227  0116A6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9228  0116A8  26D9               	addwf	fsr2l,f,c
  9229  0116AA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9230  0116AC  22DA               	addwfc	fsr2h,f,c
  9231  0116AE  0100               	movlb	0	; () banked
  9232  0116B0  A2DF               	btfss	indf2,1,c
  9233  0116B2  D00A               	goto	l11301
  9234                           
  9235                           ; BSR set to: 0
  9236  0116B4  0E3C               	movlw	60
  9237  0116B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9238  0116BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9239  0116BE  26DE               	addwf	postinc2,f,c
  9240  0116C0  0E00               	movlw	0
  9241  0116C2  22DE               	addwfc	postinc2,f,c
  9242  0116C4  22DE               	addwfc	postinc2,f,c
  9243  0116C6  22DE               	addwfc	postinc2,f,c
  9244  0116C8                     l11301:
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;My_RTCC.c: 168: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9248  0116C8  0100               	movlb	0	; () banked
  9249  0116CA  EE20 F00D          	lfsr	2,13
  9250  0116CE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9251  0116D0  26D9               	addwf	fsr2l,f,c
  9252  0116D2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9253  0116D4  22DA               	addwfc	fsr2h,f,c
  9254  0116D6  0100               	movlb	0	; () banked
  9255  0116D8  A4DF               	btfss	indf2,2,c
  9256  0116DA  D00C               	goto	l11305
  9257                           
  9258                           ; BSR set to: 0
  9259  0116DC  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9260  0116E0  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9261  0116E4  0E10               	movlw	16
  9262  0116E6  26DE               	addwf	postinc2,f,c
  9263  0116E8  0E0E               	movlw	14
  9264  0116EA  22DE               	addwfc	postinc2,f,c
  9265  0116EC  0E00               	movlw	0
  9266  0116EE  22DE               	addwfc	postinc2,f,c
  9267  0116F0  0E00               	movlw	0
  9268  0116F2  22DE               	addwfc	postinc2,f,c
  9269  0116F4                     l11305:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;My_RTCC.c: 169: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9273  0116F4  0100               	movlb	0	; () banked
  9274  0116F6  EE20 F00D          	lfsr	2,13
  9275  0116FA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9276  0116FC  26D9               	addwf	fsr2l,f,c
  9277  0116FE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9278  011700  22DA               	addwfc	fsr2h,f,c
  9279  011702  0100               	movlb	0	; () banked
  9280  011704  A6DF               	btfss	indf2,3,c
  9281  011706  D00C               	goto	l11309
  9282                           
  9283                           ; BSR set to: 0
  9284  011708  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9285  01170C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9286  011710  0E80               	movlw	128
  9287  011712  26DE               	addwf	postinc2,f,c
  9288  011714  0E51               	movlw	81
  9289  011716  22DE               	addwfc	postinc2,f,c
  9290  011718  0E01               	movlw	1
  9291  01171A  22DE               	addwfc	postinc2,f,c
  9292  01171C  0E00               	movlw	0
  9293  01171E  22DE               	addwfc	postinc2,f,c
  9294  011720                     l11309:
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;My_RTCC.c: 170: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9298  011720  0100               	movlb	0	; () banked
  9299  011722  EE20 F00D          	lfsr	2,13
  9300  011726  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9301  011728  26D9               	addwf	fsr2l,f,c
  9302  01172A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9303  01172C  22DA               	addwfc	fsr2h,f,c
  9304  01172E  0100               	movlb	0	; () banked
  9305  011730  A8DF               	btfss	indf2,4,c
  9306  011732  D038               	goto	l11313
  9307                           
  9308                           ; BSR set to: 0
  9309  011734  0100               	movlb	0	; () banked
  9310  011736  EE20 F009          	lfsr	2,9
  9311  01173A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9312  01173C  26D9               	addwf	fsr2l,f,c
  9313  01173E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9314  011740  22DA               	addwfc	fsr2h,f,c
  9315  011742  50DF               	movf	indf2,w,c
  9316  011744  0100               	movlb	0	; () banked
  9317  011746  6F66               	movwf	month_length@month& (0+255),b
  9318  011748  0100               	movlb	0	; () banked
  9319  01174A  EE20 F00A          	lfsr	2,10
  9320  01174E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9321  011750  26D9               	addwf	fsr2l,f,c
  9322  011752  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9323  011754  22DA               	addwfc	fsr2h,f,c
  9324  011756  50DF               	movf	indf2,w,c
  9325  011758  EC7E  F0A4         	call	_month_length
  9326  01175C  0100               	movlb	0	; () banked
  9327  01175E  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9328  011760  0100               	movlb	0	; () banked
  9329  011762  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9330  011764  0100               	movlb	0	; () banked
  9331  011766  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9332  011768  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9333  01176A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9334  01176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9335  01176E  0E80               	movlw	128
  9336  011770  0100               	movlb	0	; () banked
  9337  011772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9338  011774  0E51               	movlw	81
  9339  011776  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9340  011778  0E01               	movlw	1
  9341  01177A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9342  01177C  0E00               	movlw	0
  9343  01177E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9344  011780  EC19  F0B0         	call	___lmul	;wreg free
  9345  011784  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9346  011788  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9347  01178C  0100               	movlb	0	; () banked
  9348  01178E  516D               	movf	?___lmul& (0+255),w,b
  9349  011790  26DE               	addwf	postinc2,f,c
  9350  011792  0100               	movlb	0	; () banked
  9351  011794  516E               	movf	(?___lmul+1)& (0+255),w,b
  9352  011796  22DE               	addwfc	postinc2,f,c
  9353  011798  0100               	movlb	0	; () banked
  9354  01179A  516F               	movf	(?___lmul+2)& (0+255),w,b
  9355  01179C  22DE               	addwfc	postinc2,f,c
  9356  01179E  0100               	movlb	0	; () banked
  9357  0117A0  5170               	movf	(?___lmul+3)& (0+255),w,b
  9358  0117A2  22DE               	addwfc	postinc2,f,c
  9359  0117A4                     l11313:
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;My_RTCC.c: 171: if (tm->edit.flag.YY) {
  9363  0117A4  0100               	movlb	0	; () banked
  9364  0117A6  EE20 F00D          	lfsr	2,13
  9365  0117AA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9366  0117AC  26D9               	addwf	fsr2l,f,c
  9367  0117AE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9368  0117B0  22DA               	addwfc	fsr2h,f,c
  9369  0117B2  0100               	movlb	0	; () banked
  9370  0117B4  AADF               	btfss	indf2,5,c
  9371  0117B6  D088               	goto	l11335
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;My_RTCC.c: 172: for (uint8_t i = tm->MM; i <= 12; i++) {
  9375  0117B8  0100               	movlb	0	; () banked
  9376  0117BA  EE20 F009          	lfsr	2,9
  9377  0117BE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9378  0117C0  26D9               	addwf	fsr2l,f,c
  9379  0117C2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9380  0117C4  22DA               	addwfc	fsr2h,f,c
  9381  0117C6  50DF               	movf	indf2,w,c
  9382  0117C8  0100               	movlb	0	; () banked
  9383  0117CA  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9384  0117CC                     l11317:
  9385                           
  9386                           ; BSR set to: 0
  9387  0117CC  0E0C               	movlw	12
  9388  0117CE  0100               	movlb	0	; () banked
  9389  0117D0  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9390  0117D2  D001               	goto	l11321
  9391  0117D4  D033               	goto	l11327
  9392  0117D6                     l11321:
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;My_RTCC.c: 173: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9396  0117D6  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9397  0117DA  0100               	movlb	0	; () banked
  9398  0117DC  EE20 F00A          	lfsr	2,10
  9399  0117E0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9400  0117E2  26D9               	addwf	fsr2l,f,c
  9401  0117E4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9402  0117E6  22DA               	addwfc	fsr2h,f,c
  9403  0117E8  50DF               	movf	indf2,w,c
  9404  0117EA  EC7E  F0A4         	call	_month_length
  9405  0117EE  0100               	movlb	0	; () banked
  9406  0117F0  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9407  0117F2  0100               	movlb	0	; () banked
  9408  0117F4  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9409  0117F6  0100               	movlb	0	; () banked
  9410  0117F8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9411  0117FA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9412  0117FC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9413  0117FE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9414  011800  0E80               	movlw	128
  9415  011802  0100               	movlb	0	; () banked
  9416  011804  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9417  011806  0E51               	movlw	81
  9418  011808  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9419  01180A  0E01               	movlw	1
  9420  01180C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9421  01180E  0E00               	movlw	0
  9422  011810  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9423  011812  EC19  F0B0         	call	___lmul	;wreg free
  9424  011816  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9425  01181A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9426  01181E  0100               	movlb	0	; () banked
  9427  011820  516D               	movf	?___lmul& (0+255),w,b
  9428  011822  26DE               	addwf	postinc2,f,c
  9429  011824  0100               	movlb	0	; () banked
  9430  011826  516E               	movf	(?___lmul+1)& (0+255),w,b
  9431  011828  22DE               	addwfc	postinc2,f,c
  9432  01182A  0100               	movlb	0	; () banked
  9433  01182C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9434  01182E  22DE               	addwfc	postinc2,f,c
  9435  011830  0100               	movlb	0	; () banked
  9436  011832  5170               	movf	(?___lmul+3)& (0+255),w,b
  9437  011834  22DE               	addwfc	postinc2,f,c
  9438                           
  9439                           ; BSR set to: 0
  9440  011836  0100               	movlb	0	; () banked
  9441  011838  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9442  01183A  D7C8               	goto	l11317
  9443  01183C                     l11327:
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;My_RTCC.c: 174: }
  9447                           ;My_RTCC.c: 175: for (uint8_t i = 1; i < tm->MM; i++) {
  9448  01183C  0E01               	movlw	1
  9449  01183E  0100               	movlb	0	; () banked
  9450  011840  6F97               	movwf	RTCC_adjust_time_inc@i_3723& (0+255),b
  9451  011842  D036               	goto	l11333
  9452  011844                     l11329:
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;My_RTCC.c: 176: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9456  011844  C097  F066         	movff	RTCC_adjust_time_inc@i_3723,month_length@month
  9457  011848  0100               	movlb	0	; () banked
  9458  01184A  EE20 F00A          	lfsr	2,10
  9459  01184E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9460  011850  26D9               	addwf	fsr2l,f,c
  9461  011852  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9462  011854  22DA               	addwfc	fsr2h,f,c
  9463  011856  50DF               	movf	indf2,w,c
  9464  011858  0100               	movlb	0	; () banked
  9465  01185A  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9466  01185C  0100               	movlb	0	; () banked
  9467  01185E  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9468  011860  EC7E  F0A4         	call	_month_length
  9469  011864  0100               	movlb	0	; () banked
  9470  011866  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9471  011868  0100               	movlb	0	; () banked
  9472  01186A  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9473  01186C  0100               	movlb	0	; () banked
  9474  01186E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9475  011870  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9476  011872  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9477  011874  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9478  011876  0E80               	movlw	128
  9479  011878  0100               	movlb	0	; () banked
  9480  01187A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9481  01187C  0E51               	movlw	81
  9482  01187E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9483  011880  0E01               	movlw	1
  9484  011882  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9485  011884  0E00               	movlw	0
  9486  011886  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9487  011888  EC19  F0B0         	call	___lmul	;wreg free
  9488  01188C  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9489  011890  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9490  011894  0100               	movlb	0	; () banked
  9491  011896  516D               	movf	?___lmul& (0+255),w,b
  9492  011898  26DE               	addwf	postinc2,f,c
  9493  01189A  0100               	movlb	0	; () banked
  9494  01189C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9495  01189E  22DE               	addwfc	postinc2,f,c
  9496  0118A0  0100               	movlb	0	; () banked
  9497  0118A2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9498  0118A4  22DE               	addwfc	postinc2,f,c
  9499  0118A6  0100               	movlb	0	; () banked
  9500  0118A8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9501  0118AA  22DE               	addwfc	postinc2,f,c
  9502                           
  9503                           ; BSR set to: 0
  9504  0118AC  0100               	movlb	0	; () banked
  9505  0118AE  2B97               	incf	RTCC_adjust_time_inc@i_3723& (0+255),f,b
  9506  0118B0                     l11333:
  9507                           
  9508                           ; BSR set to: 0
  9509  0118B0  0100               	movlb	0	; () banked
  9510  0118B2  EE20 F009          	lfsr	2,9
  9511  0118B6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9512  0118B8  26D9               	addwf	fsr2l,f,c
  9513  0118BA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9514  0118BC  22DA               	addwfc	fsr2h,f,c
  9515  0118BE  50DE               	movf	postinc2,w,c
  9516  0118C0  0100               	movlb	0	; () banked
  9517  0118C2  5D97               	subwf	RTCC_adjust_time_inc@i_3723& (0+255),w,b
  9518  0118C4  A0D8               	btfss	status,0,c
  9519  0118C6  D7BE               	goto	l11329
  9520  0118C8                     l11335:
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;My_RTCC.c: 177: }
  9524                           ;My_RTCC.c: 178: }
  9525                           ;My_RTCC.c: 180: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9526  0118C8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9527  0118CC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9528  0118D0  0E80               	movlw	128
  9529  0118D2  5CDE               	subwf	postinc2,w,c
  9530  0118D4  0E13               	movlw	19
  9531  0118D6  58DE               	subwfb	postinc2,w,c
  9532  0118D8  0E19               	movlw	25
  9533  0118DA  58DE               	subwfb	postinc2,w,c
  9534  0118DC  0EBC               	movlw	188
  9535  0118DE  58DE               	subwfb	postinc2,w,c
  9536  0118E0  A0D8               	btfss	status,0,c
  9537  0118E2  D00C               	goto	l11339
  9538                           
  9539                           ; BSR set to: 0
  9540  0118E4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9541  0118E8  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9542  0118EC  0E80               	movlw	128
  9543  0118EE  5EDE               	subwf	postinc2,f,c
  9544  0118F0  0E13               	movlw	19
  9545  0118F2  5ADE               	subwfb	postinc2,f,c
  9546  0118F4  0E19               	movlw	25
  9547  0118F6  5ADE               	subwfb	postinc2,f,c
  9548  0118F8  0EBC               	movlw	188
  9549  0118FA  5ADE               	subwfb	postinc2,f,c
  9550  0118FC                     l11339:
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;My_RTCC.c: 181: RTCC_from_epoch(&now);
  9554  0118FC  0E73               	movlw	low _now
  9555  0118FE  0100               	movlb	0	; () banked
  9556  011900  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9557  011902  0E01               	movlw	high _now
  9558  011904  0100               	movlb	0	; () banked
  9559  011906  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9560  011908  EC45  F0B7         	call	_RTCC_from_epoch	;wreg free
  9561                           
  9562                           ;My_RTCC.c: 182: time_change_flag = 1;
  9563  01190C  0E01               	movlw	1
  9564  01190E  6E22               	movwf	_time_change_flag,c
  9565  011910  0012               	return		;funcret
  9566  011912                     __end_of_RTCC_adjust_time_inc:
  9567                           	opt stack 0
  9568                           tblptru	equ	0xFF8
  9569                           tblptrh	equ	0xFF7
  9570                           tblptrl	equ	0xFF6
  9571                           tablat	equ	0xFF5
  9572                           prodh	equ	0xFF4
  9573                           prodl	equ	0xFF3
  9574                           intcon	equ	0xFF2
  9575                           postinc0	equ	0xFEE
  9576                           wreg	equ	0xFE8
  9577                           postinc1	equ	0xFE6
  9578                           postdec1	equ	0xFE5
  9579                           fsr1h	equ	0xFE2
  9580                           fsr1l	equ	0xFE1
  9581                           indf2	equ	0xFDF
  9582                           postinc2	equ	0xFDE
  9583                           postdec2	equ	0xFDD
  9584                           fsr2h	equ	0xFDA
  9585                           fsr2l	equ	0xFD9
  9586                           status	equ	0xFD8
  9587                           
  9588 ;; *************** function _RTCC_adjust_time_dec *****************
  9589 ;; Defined at:
  9590 ;;		line 185 in file "../My_library/My_RTCC.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  tm              2   49[BANK0 ] PTR struct .
  9593 ;;		 -> now(14), 
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;  i               1   55[BANK0 ] unsigned char 
  9596 ;;  i               1   56[BANK0 ] unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;		None               void
  9599 ;; Registers used:
  9600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9607 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9608 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9609 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9610 ;;Total ram usage:        8 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:   16
  9613 ;; This function calls:
  9614 ;;		_RTCC_from_RTCC
  9615 ;;		_RTCC_from_epoch
  9616 ;;		___lmul
  9617 ;;		_month_length
  9618 ;; This function is called by:
  9619 ;;		_settings_adjust_time
  9620 ;;		_RTCC_adjust_time_button
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text24
  9625  011912                     __ptext24:
  9626                           	opt stack 0
  9627  011912                     _RTCC_adjust_time_dec:
  9628                           	opt stack 11
  9629                           
  9630                           ;My_RTCC.c: 186: RTCC_from_RTCC(tm);
  9631                           
  9632                           ;incstack = 0
  9633  011912  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9634  011916  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9635  01191A  EC52  F0B7         	call	_RTCC_from_RTCC	;wreg free
  9636                           
  9637                           ;My_RTCC.c: 187: if (tm->edit.flag.ss) tm->epoch -= 1;
  9638  01191E  0100               	movlb	0	; () banked
  9639  011920  EE20 F00D          	lfsr	2,13
  9640  011924  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9641  011926  26D9               	addwf	fsr2l,f,c
  9642  011928  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9643  01192A  22DA               	addwfc	fsr2h,f,c
  9644  01192C  0100               	movlb	0	; () banked
  9645  01192E  A0DF               	btfss	indf2,0,c
  9646  011930  D009               	goto	l920
  9647                           
  9648                           ; BSR set to: 0
  9649  011932  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9650  011936  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9651  01193A  06DE               	decf	postinc2,f,c
  9652  01193C  0E00               	movlw	0
  9653  01193E  5ADE               	subwfb	postinc2,f,c
  9654  011940  5ADE               	subwfb	postinc2,f,c
  9655  011942  5ADE               	subwfb	postinc2,f,c
  9656  011944                     l920:
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;My_RTCC.c: 188: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9660  011944  0100               	movlb	0	; () banked
  9661  011946  EE20 F00D          	lfsr	2,13
  9662  01194A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9663  01194C  26D9               	addwf	fsr2l,f,c
  9664  01194E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9665  011950  22DA               	addwfc	fsr2h,f,c
  9666  011952  0100               	movlb	0	; () banked
  9667  011954  A2DF               	btfss	indf2,1,c
  9668  011956  D00A               	goto	l11351
  9669                           
  9670                           ; BSR set to: 0
  9671  011958  0E3C               	movlw	60
  9672  01195A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9673  01195E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9674  011962  5EDE               	subwf	postinc2,f,c
  9675  011964  0E00               	movlw	0
  9676  011966  5ADE               	subwfb	postinc2,f,c
  9677  011968  5ADE               	subwfb	postinc2,f,c
  9678  01196A  5ADE               	subwfb	postinc2,f,c
  9679  01196C                     l11351:
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;My_RTCC.c: 189: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9683  01196C  0100               	movlb	0	; () banked
  9684  01196E  EE20 F00D          	lfsr	2,13
  9685  011972  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9686  011974  26D9               	addwf	fsr2l,f,c
  9687  011976  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9688  011978  22DA               	addwfc	fsr2h,f,c
  9689  01197A  0100               	movlb	0	; () banked
  9690  01197C  A4DF               	btfss	indf2,2,c
  9691  01197E  D00C               	goto	l11355
  9692                           
  9693                           ; BSR set to: 0
  9694  011980  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9695  011984  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9696  011988  0E10               	movlw	16
  9697  01198A  5EDE               	subwf	postinc2,f,c
  9698  01198C  0E0E               	movlw	14
  9699  01198E  5ADE               	subwfb	postinc2,f,c
  9700  011990  0E00               	movlw	0
  9701  011992  5ADE               	subwfb	postinc2,f,c
  9702  011994  0E00               	movlw	0
  9703  011996  5ADE               	subwfb	postinc2,f,c
  9704  011998                     l11355:
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;My_RTCC.c: 190: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9708  011998  0100               	movlb	0	; () banked
  9709  01199A  EE20 F00D          	lfsr	2,13
  9710  01199E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9711  0119A0  26D9               	addwf	fsr2l,f,c
  9712  0119A2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9713  0119A4  22DA               	addwfc	fsr2h,f,c
  9714  0119A6  0100               	movlb	0	; () banked
  9715  0119A8  A6DF               	btfss	indf2,3,c
  9716  0119AA  D00C               	goto	l11359
  9717                           
  9718                           ; BSR set to: 0
  9719  0119AC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9720  0119B0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9721  0119B4  0E80               	movlw	128
  9722  0119B6  5EDE               	subwf	postinc2,f,c
  9723  0119B8  0E51               	movlw	81
  9724  0119BA  5ADE               	subwfb	postinc2,f,c
  9725  0119BC  0E01               	movlw	1
  9726  0119BE  5ADE               	subwfb	postinc2,f,c
  9727  0119C0  0E00               	movlw	0
  9728  0119C2  5ADE               	subwfb	postinc2,f,c
  9729  0119C4                     l11359:
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;My_RTCC.c: 191: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9733  0119C4  0100               	movlb	0	; () banked
  9734  0119C6  EE20 F00D          	lfsr	2,13
  9735  0119CA  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9736  0119CC  26D9               	addwf	fsr2l,f,c
  9737  0119CE  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9738  0119D0  22DA               	addwfc	fsr2h,f,c
  9739  0119D2  0100               	movlb	0	; () banked
  9740  0119D4  A8DF               	btfss	indf2,4,c
  9741  0119D6  D038               	goto	l11363
  9742                           
  9743                           ; BSR set to: 0
  9744  0119D8  0100               	movlb	0	; () banked
  9745  0119DA  EE20 F009          	lfsr	2,9
  9746  0119DE  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9747  0119E0  26D9               	addwf	fsr2l,f,c
  9748  0119E2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9749  0119E4  22DA               	addwfc	fsr2h,f,c
  9750  0119E6  50DF               	movf	indf2,w,c
  9751  0119E8  0100               	movlb	0	; () banked
  9752  0119EA  6F66               	movwf	month_length@month& (0+255),b
  9753  0119EC  0100               	movlb	0	; () banked
  9754  0119EE  EE20 F00A          	lfsr	2,10
  9755  0119F2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9756  0119F4  26D9               	addwf	fsr2l,f,c
  9757  0119F6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9758  0119F8  22DA               	addwfc	fsr2h,f,c
  9759  0119FA  50DF               	movf	indf2,w,c
  9760  0119FC  EC7E  F0A4         	call	_month_length
  9761  011A00  0100               	movlb	0	; () banked
  9762  011A02  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9763  011A04  0100               	movlb	0	; () banked
  9764  011A06  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9765  011A08  0100               	movlb	0	; () banked
  9766  011A0A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9767  011A0C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9768  011A0E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9769  011A10  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9770  011A12  0E80               	movlw	128
  9771  011A14  0100               	movlb	0	; () banked
  9772  011A16  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9773  011A18  0E51               	movlw	81
  9774  011A1A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9775  011A1C  0E01               	movlw	1
  9776  011A1E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9777  011A20  0E00               	movlw	0
  9778  011A22  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9779  011A24  EC19  F0B0         	call	___lmul	;wreg free
  9780  011A28  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9781  011A2C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9782  011A30  0100               	movlb	0	; () banked
  9783  011A32  516D               	movf	?___lmul& (0+255),w,b
  9784  011A34  5EDE               	subwf	postinc2,f,c
  9785  011A36  0100               	movlb	0	; () banked
  9786  011A38  516E               	movf	(?___lmul+1)& (0+255),w,b
  9787  011A3A  5ADE               	subwfb	postinc2,f,c
  9788  011A3C  0100               	movlb	0	; () banked
  9789  011A3E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9790  011A40  5ADE               	subwfb	postinc2,f,c
  9791  011A42  0100               	movlb	0	; () banked
  9792  011A44  5170               	movf	(?___lmul+3)& (0+255),w,b
  9793  011A46  5ADE               	subwfb	postinc2,f,c
  9794  011A48                     l11363:
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;My_RTCC.c: 192: if (tm->edit.flag.YY) {
  9798  011A48  0100               	movlb	0	; () banked
  9799  011A4A  EE20 F00D          	lfsr	2,13
  9800  011A4E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9801  011A50  26D9               	addwf	fsr2l,f,c
  9802  011A52  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9803  011A54  22DA               	addwfc	fsr2h,f,c
  9804  011A56  0100               	movlb	0	; () banked
  9805  011A58  AADF               	btfss	indf2,5,c
  9806  011A5A  D088               	goto	l11385
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;My_RTCC.c: 193: for (uint8_t i = tm->MM; i >= 1; i--) {
  9810  011A5C  0100               	movlb	0	; () banked
  9811  011A5E  EE20 F009          	lfsr	2,9
  9812  011A62  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9813  011A64  26D9               	addwf	fsr2l,f,c
  9814  011A66  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9815  011A68  22DA               	addwfc	fsr2h,f,c
  9816  011A6A  50DF               	movf	indf2,w,c
  9817  011A6C  0100               	movlb	0	; () banked
  9818  011A6E  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9819  011A70                     l11367:
  9820                           
  9821                           ; BSR set to: 0
  9822  011A70  0100               	movlb	0	; () banked
  9823  011A72  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9824  011A74  0100               	movlb	0	; () banked
  9825  011A76  B4D8               	btfsc	status,2,c
  9826  011A78  D033               	goto	l11377
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;My_RTCC.c: 194: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9830                           
  9831                           ; BSR set to: 0
  9832                           
  9833                           ; BSR set to: 0
  9834  011A7A  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9835  011A7E  0100               	movlb	0	; () banked
  9836  011A80  EE20 F00A          	lfsr	2,10
  9837  011A84  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9838  011A86  26D9               	addwf	fsr2l,f,c
  9839  011A88  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9840  011A8A  22DA               	addwfc	fsr2h,f,c
  9841  011A8C  50DF               	movf	indf2,w,c
  9842  011A8E  EC7E  F0A4         	call	_month_length
  9843  011A92  0100               	movlb	0	; () banked
  9844  011A94  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9845  011A96  0100               	movlb	0	; () banked
  9846  011A98  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9847  011A9A  0100               	movlb	0	; () banked
  9848  011A9C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9849  011A9E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9850  011AA0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9851  011AA2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9852  011AA4  0E80               	movlw	128
  9853  011AA6  0100               	movlb	0	; () banked
  9854  011AA8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9855  011AAA  0E51               	movlw	81
  9856  011AAC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9857  011AAE  0E01               	movlw	1
  9858  011AB0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9859  011AB2  0E00               	movlw	0
  9860  011AB4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9861  011AB6  EC19  F0B0         	call	___lmul	;wreg free
  9862  011ABA  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9863  011ABE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9864  011AC2  0100               	movlb	0	; () banked
  9865  011AC4  516D               	movf	?___lmul& (0+255),w,b
  9866  011AC6  5EDE               	subwf	postinc2,f,c
  9867  011AC8  0100               	movlb	0	; () banked
  9868  011ACA  516E               	movf	(?___lmul+1)& (0+255),w,b
  9869  011ACC  5ADE               	subwfb	postinc2,f,c
  9870  011ACE  0100               	movlb	0	; () banked
  9871  011AD0  516F               	movf	(?___lmul+2)& (0+255),w,b
  9872  011AD2  5ADE               	subwfb	postinc2,f,c
  9873  011AD4  0100               	movlb	0	; () banked
  9874  011AD6  5170               	movf	(?___lmul+3)& (0+255),w,b
  9875  011AD8  5ADE               	subwfb	postinc2,f,c
  9876                           
  9877                           ; BSR set to: 0
  9878  011ADA  0100               	movlb	0	; () banked
  9879  011ADC  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9880  011ADE  D7C8               	goto	l11367
  9881  011AE0                     l11377:
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;My_RTCC.c: 195: }
  9885                           ;My_RTCC.c: 196: for (uint8_t i = 12; i > tm->MM; i--) {
  9886  011AE0  0E0C               	movlw	12
  9887  011AE2  0100               	movlb	0	; () banked
  9888  011AE4  6F97               	movwf	RTCC_adjust_time_dec@i_3753& (0+255),b
  9889  011AE6  D036               	goto	l11383
  9890  011AE8                     l11379:
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;My_RTCC.c: 197: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9894  011AE8  C097  F066         	movff	RTCC_adjust_time_dec@i_3753,month_length@month
  9895  011AEC  0100               	movlb	0	; () banked
  9896  011AEE  EE20 F00A          	lfsr	2,10
  9897  011AF2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9898  011AF4  26D9               	addwf	fsr2l,f,c
  9899  011AF6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9900  011AF8  22DA               	addwfc	fsr2h,f,c
  9901  011AFA  50DF               	movf	indf2,w,c
  9902  011AFC  0100               	movlb	0	; () banked
  9903  011AFE  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9904  011B00  0100               	movlb	0	; () banked
  9905  011B02  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9906  011B04  EC7E  F0A4         	call	_month_length
  9907  011B08  0100               	movlb	0	; () banked
  9908  011B0A  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9909  011B0C  0100               	movlb	0	; () banked
  9910  011B0E  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9911  011B10  0100               	movlb	0	; () banked
  9912  011B12  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9913  011B14  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9914  011B16  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9915  011B18  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9916  011B1A  0E80               	movlw	128
  9917  011B1C  0100               	movlb	0	; () banked
  9918  011B1E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9919  011B20  0E51               	movlw	81
  9920  011B22  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9921  011B24  0E01               	movlw	1
  9922  011B26  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9923  011B28  0E00               	movlw	0
  9924  011B2A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9925  011B2C  EC19  F0B0         	call	___lmul	;wreg free
  9926  011B30  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9927  011B34  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9928  011B38  0100               	movlb	0	; () banked
  9929  011B3A  516D               	movf	?___lmul& (0+255),w,b
  9930  011B3C  5EDE               	subwf	postinc2,f,c
  9931  011B3E  0100               	movlb	0	; () banked
  9932  011B40  516E               	movf	(?___lmul+1)& (0+255),w,b
  9933  011B42  5ADE               	subwfb	postinc2,f,c
  9934  011B44  0100               	movlb	0	; () banked
  9935  011B46  516F               	movf	(?___lmul+2)& (0+255),w,b
  9936  011B48  5ADE               	subwfb	postinc2,f,c
  9937  011B4A  0100               	movlb	0	; () banked
  9938  011B4C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9939  011B4E  5ADE               	subwfb	postinc2,f,c
  9940                           
  9941                           ; BSR set to: 0
  9942  011B50  0100               	movlb	0	; () banked
  9943  011B52  0797               	decf	RTCC_adjust_time_dec@i_3753& (0+255),f,b
  9944  011B54                     l11383:
  9945                           
  9946                           ; BSR set to: 0
  9947  011B54  0100               	movlb	0	; () banked
  9948  011B56  EE20 F009          	lfsr	2,9
  9949  011B5A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9950  011B5C  26D9               	addwf	fsr2l,f,c
  9951  011B5E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9952  011B60  22DA               	addwfc	fsr2h,f,c
  9953  011B62  0100               	movlb	0	; () banked
  9954  011B64  5197               	movf	RTCC_adjust_time_dec@i_3753& (0+255),w,b
  9955  011B66  5CDE               	subwf	postinc2,w,c
  9956  011B68  A0D8               	btfss	status,0,c
  9957  011B6A  D7BE               	goto	l11379
  9958  011B6C                     l11385:
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;My_RTCC.c: 198: }
  9962                           ;My_RTCC.c: 199: }
  9963                           ;My_RTCC.c: 201: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9964  011B6C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9965  011B70  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9966  011B74  0E80               	movlw	128
  9967  011B76  5CDE               	subwf	postinc2,w,c
  9968  011B78  0E13               	movlw	19
  9969  011B7A  58DE               	subwfb	postinc2,w,c
  9970  011B7C  0E19               	movlw	25
  9971  011B7E  58DE               	subwfb	postinc2,w,c
  9972  011B80  0EBC               	movlw	188
  9973  011B82  58DE               	subwfb	postinc2,w,c
  9974  011B84  A0D8               	btfss	status,0,c
  9975  011B86  D00C               	goto	l11389
  9976                           
  9977                           ; BSR set to: 0
  9978  011B88  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9979  011B8C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9980  011B90  0E80               	movlw	128
  9981  011B92  26DE               	addwf	postinc2,f,c
  9982  011B94  0E13               	movlw	19
  9983  011B96  22DE               	addwfc	postinc2,f,c
  9984  011B98  0E19               	movlw	25
  9985  011B9A  22DE               	addwfc	postinc2,f,c
  9986  011B9C  0EBC               	movlw	188
  9987  011B9E  22DE               	addwfc	postinc2,f,c
  9988  011BA0                     l11389:
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;My_RTCC.c: 202: RTCC_from_epoch(&now);
  9992  011BA0  0E73               	movlw	low _now
  9993  011BA2  0100               	movlb	0	; () banked
  9994  011BA4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9995  011BA6  0E01               	movlw	high _now
  9996  011BA8  0100               	movlb	0	; () banked
  9997  011BAA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9998  011BAC  EC45  F0B7         	call	_RTCC_from_epoch	;wreg free
  9999                           
 10000                           ;My_RTCC.c: 203: time_change_flag = 1;
 10001  011BB0  0E01               	movlw	1
 10002  011BB2  6E22               	movwf	_time_change_flag,c
 10003  011BB4  0012               	return		;funcret
 10004  011BB6                     __end_of_RTCC_adjust_time_dec:
 10005                           	opt stack 0
 10006                           tblptru	equ	0xFF8
 10007                           tblptrh	equ	0xFF7
 10008                           tblptrl	equ	0xFF6
 10009                           tablat	equ	0xFF5
 10010                           prodh	equ	0xFF4
 10011                           prodl	equ	0xFF3
 10012                           intcon	equ	0xFF2
 10013                           postinc0	equ	0xFEE
 10014                           wreg	equ	0xFE8
 10015                           postinc1	equ	0xFE6
 10016                           postdec1	equ	0xFE5
 10017                           fsr1h	equ	0xFE2
 10018                           fsr1l	equ	0xFE1
 10019                           indf2	equ	0xFDF
 10020                           postinc2	equ	0xFDE
 10021                           postdec2	equ	0xFDD
 10022                           fsr2h	equ	0xFDA
 10023                           fsr2l	equ	0xFD9
 10024                           status	equ	0xFD8
 10025                           
 10026 ;; *************** function _RTCC_adjust_time_cursor *****************
 10027 ;; Defined at:
 10028 ;;		line 154 in file "../My_library/My_RTCC.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  tm              2    0[BANK0 ] PTR struct .
 10031 ;;		 -> now(14), 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;		None               void
 10036 ;; Registers used:
 10037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10046 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10047 ;;Total ram usage:        2 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:   12
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		_settings_adjust_time
 10054 ;;		_RTCC_adjust_time_button
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text25
 10059  013DB6                     __ptext25:
 10060                           	opt stack 0
 10061  013DB6                     _RTCC_adjust_time_cursor:
 10062                           	opt stack 15
 10063                           
 10064                           ;My_RTCC.c: 155: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 10065                           
 10066                           ;incstack = 0
 10067  013DB6  0100               	movlb	0	; () banked
 10068  013DB8  EE20 F00D          	lfsr	2,13
 10069  013DBC  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10070  013DBE  26D9               	addwf	fsr2l,f,c
 10071  013DC0  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10072  013DC2  22DA               	addwfc	fsr2h,f,c
 10073  013DC4  0100               	movlb	0	; () banked
 10074  013DC6  A0DF               	btfss	indf2,0,c
 10075  013DC8  D00A               	goto	l11271
 10076                           
 10077                           ; BSR set to: 0
 10078  013DCA  0100               	movlb	0	; () banked
 10079  013DCC  EE20 F00D          	lfsr	2,13
 10080  013DD0  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10081  013DD2  26D9               	addwf	fsr2l,f,c
 10082  013DD4  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10083  013DD6  22DA               	addwfc	fsr2h,f,c
 10084  013DD8  0E02               	movlw	2
 10085  013DDA  6EDF               	movwf	indf2,c
 10086  013DDC  0012               	return	
 10087  013DDE                     l11271:
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;My_RTCC.c: 156: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 10091  013DDE  0100               	movlb	0	; () banked
 10092  013DE0  EE20 F00D          	lfsr	2,13
 10093  013DE4  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10094  013DE6  26D9               	addwf	fsr2l,f,c
 10095  013DE8  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10096  013DEA  22DA               	addwfc	fsr2h,f,c
 10097  013DEC  0100               	movlb	0	; () banked
 10098  013DEE  A2DF               	btfss	indf2,1,c
 10099  013DF0  D00A               	goto	l11275
 10100                           
 10101                           ; BSR set to: 0
 10102  013DF2  0100               	movlb	0	; () banked
 10103  013DF4  EE20 F00D          	lfsr	2,13
 10104  013DF8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10105  013DFA  26D9               	addwf	fsr2l,f,c
 10106  013DFC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10107  013DFE  22DA               	addwfc	fsr2h,f,c
 10108  013E00  0E04               	movlw	4
 10109  013E02  6EDF               	movwf	indf2,c
 10110  013E04  0012               	return	
 10111  013E06                     l11275:
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;My_RTCC.c: 157: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 10115  013E06  0100               	movlb	0	; () banked
 10116  013E08  EE20 F00D          	lfsr	2,13
 10117  013E0C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10118  013E0E  26D9               	addwf	fsr2l,f,c
 10119  013E10  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10120  013E12  22DA               	addwfc	fsr2h,f,c
 10121  013E14  0100               	movlb	0	; () banked
 10122  013E16  A4DF               	btfss	indf2,2,c
 10123  013E18  D00A               	goto	l11279
 10124                           
 10125                           ; BSR set to: 0
 10126  013E1A  0100               	movlb	0	; () banked
 10127  013E1C  EE20 F00D          	lfsr	2,13
 10128  013E20  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10129  013E22  26D9               	addwf	fsr2l,f,c
 10130  013E24  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10131  013E26  22DA               	addwfc	fsr2h,f,c
 10132  013E28  0E08               	movlw	8
 10133  013E2A  6EDF               	movwf	indf2,c
 10134  013E2C  0012               	return	
 10135  013E2E                     l11279:
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;My_RTCC.c: 158: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 10139  013E2E  0100               	movlb	0	; () banked
 10140  013E30  EE20 F00D          	lfsr	2,13
 10141  013E34  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10142  013E36  26D9               	addwf	fsr2l,f,c
 10143  013E38  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10144  013E3A  22DA               	addwfc	fsr2h,f,c
 10145  013E3C  0100               	movlb	0	; () banked
 10146  013E3E  A6DF               	btfss	indf2,3,c
 10147  013E40  D00A               	goto	l11283
 10148                           
 10149                           ; BSR set to: 0
 10150  013E42  0100               	movlb	0	; () banked
 10151  013E44  EE20 F00D          	lfsr	2,13
 10152  013E48  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10153  013E4A  26D9               	addwf	fsr2l,f,c
 10154  013E4C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10155  013E4E  22DA               	addwfc	fsr2h,f,c
 10156  013E50  0E10               	movlw	16
 10157  013E52  6EDF               	movwf	indf2,c
 10158  013E54  0012               	return	
 10159  013E56                     l11283:
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;My_RTCC.c: 159: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 10163  013E56  0100               	movlb	0	; () banked
 10164  013E58  EE20 F00D          	lfsr	2,13
 10165  013E5C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10166  013E5E  26D9               	addwf	fsr2l,f,c
 10167  013E60  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10168  013E62  22DA               	addwfc	fsr2h,f,c
 10169  013E64  0100               	movlb	0	; () banked
 10170  013E66  A8DF               	btfss	indf2,4,c
 10171  013E68  D00A               	goto	l11287
 10172                           
 10173                           ; BSR set to: 0
 10174  013E6A  0100               	movlb	0	; () banked
 10175  013E6C  EE20 F00D          	lfsr	2,13
 10176  013E70  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10177  013E72  26D9               	addwf	fsr2l,f,c
 10178  013E74  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10179  013E76  22DA               	addwfc	fsr2h,f,c
 10180  013E78  0E20               	movlw	32
 10181  013E7A  6EDF               	movwf	indf2,c
 10182  013E7C  0012               	return	
 10183  013E7E                     l11287:
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;My_RTCC.c: 160: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 10187  013E7E  0100               	movlb	0	; () banked
 10188  013E80  EE20 F00D          	lfsr	2,13
 10189  013E84  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10190  013E86  26D9               	addwf	fsr2l,f,c
 10191  013E88  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10192  013E8A  22DA               	addwfc	fsr2h,f,c
 10193  013E8C  0100               	movlb	0	; () banked
 10194  013E8E  AADF               	btfss	indf2,5,c
 10195  013E90  D00A               	goto	l11291
 10196                           
 10197                           ; BSR set to: 0
 10198  013E92  0100               	movlb	0	; () banked
 10199  013E94  EE20 F00D          	lfsr	2,13
 10200  013E98  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10201  013E9A  26D9               	addwf	fsr2l,f,c
 10202  013E9C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10203  013E9E  22DA               	addwfc	fsr2h,f,c
 10204  013EA0  0E01               	movlw	1
 10205  013EA2  6EDF               	movwf	indf2,c
 10206  013EA4  0012               	return	
 10207  013EA6                     l11291:
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;My_RTCC.c: 161: else tm->edit.flags = 0x00;
 10211  013EA6  0100               	movlb	0	; () banked
 10212  013EA8  EE20 F00D          	lfsr	2,13
 10213  013EAC  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10214  013EAE  26D9               	addwf	fsr2l,f,c
 10215  013EB0  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10216  013EB2  22DA               	addwfc	fsr2h,f,c
 10217  013EB4  0E00               	movlw	0
 10218  013EB6  6EDF               	movwf	indf2,c
 10219                           
 10220                           ; BSR set to: 0
 10221                           
 10222                           ; BSR set to: 0
 10223                           
 10224                           ; BSR set to: 0
 10225                           
 10226                           ; BSR set to: 0
 10227                           
 10228                           ; BSR set to: 0
 10229  013EB8  0012               	return	
 10230  013EBA                     __end_of_RTCC_adjust_time_cursor:
 10231                           	opt stack 0
 10232                           tblptru	equ	0xFF8
 10233                           tblptrh	equ	0xFF7
 10234                           tblptrl	equ	0xFF6
 10235                           tablat	equ	0xFF5
 10236                           prodh	equ	0xFF4
 10237                           prodl	equ	0xFF3
 10238                           intcon	equ	0xFF2
 10239                           postinc0	equ	0xFEE
 10240                           wreg	equ	0xFE8
 10241                           postinc1	equ	0xFE6
 10242                           postdec1	equ	0xFE5
 10243                           fsr1h	equ	0xFE2
 10244                           fsr1l	equ	0xFE1
 10245                           indf2	equ	0xFDF
 10246                           postinc2	equ	0xFDE
 10247                           postdec2	equ	0xFDD
 10248                           fsr2h	equ	0xFDA
 10249                           fsr2l	equ	0xFD9
 10250                           status	equ	0xFD8
 10251                           
 10252 ;; *************** function _port_button_task *****************
 10253 ;; Defined at:
 10254 ;;		line 82 in file "ChargeStation_task.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;		None
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;  i               1    6[BANK0 ] unsigned char 
 10259 ;; Return value:  Size  Location     Type
 10260 ;;		None               void
 10261 ;; Registers used:
 10262 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10263 ;; Tracked objects:
 10264 ;;		On entry : 0/0
 10265 ;;		On exit  : 0/0
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10271 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10272 ;;Total ram usage:        1 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:   13
 10275 ;; This function calls:
 10276 ;;		_LED_output
 10277 ;;		_OUT
 10278 ;;		_display
 10279 ;; This function is called by:
 10280 ;;		_normal_task
 10281 ;; This function uses a non-reentrant model
 10282 ;;
 10283                           
 10284                           	psect	text26
 10285  013124                     __ptext26:
 10286                           	opt stack 0
 10287  013124                     _port_button_task:
 10288                           	opt stack 16
 10289                           
 10290                           ;ChargeStation_task.c: 83: uint8_t i;
 10291                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;incstack = 0
 10295  013124  0E00               	movlw	0
 10296  013126  0100               	movlb	0	; () banked
 10297  013128  6F66               	movwf	port_button_task@i& (0+255),b
 10298  01312A                     l12467:
 10299                           
 10300                           ; BSR set to: 0
 10301  01312A  0E02               	movlw	2
 10302  01312C  0100               	movlb	0	; () banked
 10303  01312E  6566               	cpfsgt	port_button_task@i& (0+255),b
 10304  013130  D001               	goto	l12471
 10305  013132  0012               	return	
 10306  013134                     l12471:
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 10310  013134  0100               	movlb	0	; () banked
 10311  013136  5166               	movf	port_button_task@i& (0+255),w,b
 10312  013138  0D17               	mullw	23
 10313  01313A  0E03               	movlw	3
 10314  01313C  26F3               	addwf	prodl,f,c
 10315  01313E  0E00               	movlw	0
 10316  013140  22F4               	addwfc	prodh,f,c
 10317  013142  0E2E               	movlw	low _port
 10318  013144  24F3               	addwf	prodl,w,c
 10319  013146  6ED9               	movwf	fsr2l,c
 10320  013148  0E01               	movlw	high _port
 10321  01314A  20F4               	addwfc	prodh,w,c
 10322  01314C  6EDA               	movwf	fsr2h,c
 10323  01314E  0101               	movlb	1	; () banked
 10324  013150  A0DF               	btfss	indf2,0,c
 10325  013152  D008               	goto	l12475
 10326                           
 10327                           ; BSR set to: 1
 10328                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 10329  013154  0E01               	movlw	1
 10330  013156  0100               	movlb	0	; () banked
 10331  013158  6F60               	movwf	LED_output@value& (0+255),b
 10332  01315A  0100               	movlb	0	; () banked
 10333  01315C  5166               	movf	port_button_task@i& (0+255),w,b
 10334  01315E  EC54  F0B0         	call	_LED_output
 10335                           
 10336                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 10337  013162  D027               	goto	l12481
 10338  013164                     l12475:
 10339  013164  0100               	movlb	0	; () banked
 10340  013166  5166               	movf	port_button_task@i& (0+255),w,b
 10341  013168  0D17               	mullw	23
 10342  01316A  0E16               	movlw	22
 10343  01316C  26F3               	addwf	prodl,f,c
 10344  01316E  0E00               	movlw	0
 10345  013170  22F4               	addwfc	prodh,f,c
 10346  013172  0E2E               	movlw	low _port
 10347  013174  24F3               	addwf	prodl,w,c
 10348  013176  6ED9               	movwf	fsr2l,c
 10349  013178  0E01               	movlw	high _port
 10350  01317A  20F4               	addwfc	prodh,w,c
 10351  01317C  6EDA               	movwf	fsr2h,c
 10352  01317E  0101               	movlb	1	; () banked
 10353  013180  B2DF               	btfsc	indf2,1,c
 10354  013182  D017               	goto	l12481
 10355                           
 10356                           ; BSR set to: 1
 10357  013184  0100               	movlb	0	; () banked
 10358  013186  5166               	movf	port_button_task@i& (0+255),w,b
 10359  013188  0D17               	mullw	23
 10360  01318A  0E16               	movlw	22
 10361  01318C  26F3               	addwf	prodl,f,c
 10362  01318E  0E00               	movlw	0
 10363  013190  22F4               	addwfc	prodh,f,c
 10364  013192  0E2E               	movlw	low _port
 10365  013194  24F3               	addwf	prodl,w,c
 10366  013196  6ED9               	movwf	fsr2l,c
 10367  013198  0E01               	movlw	high _port
 10368  01319A  20F4               	addwfc	prodh,w,c
 10369  01319C  6EDA               	movwf	fsr2h,c
 10370  01319E  0101               	movlb	1	; () banked
 10371  0131A0  A6DF               	btfss	indf2,3,c
 10372  0131A2  D007               	goto	l12481
 10373                           
 10374                           ; BSR set to: 1
 10375                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 10376  0131A4  0E00               	movlw	0
 10377  0131A6  0100               	movlb	0	; () banked
 10378  0131A8  6F60               	movwf	LED_output@value& (0+255),b
 10379  0131AA  0100               	movlb	0	; () banked
 10380  0131AC  5166               	movf	port_button_task@i& (0+255),w,b
 10381  0131AE  EC54  F0B0         	call	_LED_output
 10382  0131B2                     l12481:
 10383                           
 10384                           ;ChargeStation_task.c: 90: }
 10385                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 10386  0131B2  0100               	movlb	0	; () banked
 10387  0131B4  5166               	movf	port_button_task@i& (0+255),w,b
 10388  0131B6  0D17               	mullw	23
 10389  0131B8  0E02               	movlw	2
 10390  0131BA  26F3               	addwf	prodl,f,c
 10391  0131BC  0E00               	movlw	0
 10392  0131BE  22F4               	addwfc	prodh,f,c
 10393  0131C0  0E2E               	movlw	low _port
 10394  0131C2  24F3               	addwf	prodl,w,c
 10395  0131C4  6ED9               	movwf	fsr2l,c
 10396  0131C6  0E01               	movlw	high _port
 10397  0131C8  20F4               	addwfc	prodh,w,c
 10398  0131CA  6EDA               	movwf	fsr2h,c
 10399  0131CC  0101               	movlb	1	; () banked
 10400  0131CE  A0DF               	btfss	indf2,0,c
 10401  0131D0  D058               	goto	l12507
 10402                           
 10403                           ; BSR set to: 1
 10404                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 10405  0131D2  0100               	movlb	0	; () banked
 10406  0131D4  5166               	movf	port_button_task@i& (0+255),w,b
 10407  0131D6  0D17               	mullw	23
 10408  0131D8  0E02               	movlw	2
 10409  0131DA  26F3               	addwf	prodl,f,c
 10410  0131DC  0E00               	movlw	0
 10411  0131DE  22F4               	addwfc	prodh,f,c
 10412  0131E0  0E2E               	movlw	low _port
 10413  0131E2  24F3               	addwf	prodl,w,c
 10414  0131E4  6ED9               	movwf	fsr2l,c
 10415  0131E6  0E01               	movlw	high _port
 10416  0131E8  20F4               	addwfc	prodh,w,c
 10417  0131EA  6EDA               	movwf	fsr2h,c
 10418  0131EC  0E00               	movlw	0
 10419  0131EE  6EDE               	movwf	postinc2,c
 10420  0131F0  0E00               	movlw	0
 10421  0131F2  6EDD               	movwf	postdec2,c
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 10425  0131F4  0E00               	movlw	0
 10426  0131F6  0100               	movlb	0	; () banked
 10427  0131F8  6F60               	movwf	LED_output@value& (0+255),b
 10428  0131FA  0100               	movlb	0	; () banked
 10429  0131FC  5166               	movf	port_button_task@i& (0+255),w,b
 10430  0131FE  EC54  F0B0         	call	_LED_output
 10431                           
 10432                           ;ChargeStation_task.c: 97: if (print_port == i) {
 10433  013202  0100               	movlb	0	; () banked
 10434  013204  5166               	movf	port_button_task@i& (0+255),w,b
 10435  013206  0100               	movlb	0	; () banked
 10436  013208  19FB               	xorwf	_print_port& (0+255),w,b
 10437  01320A  B4D8               	btfsc	status,2,c
 10438  01320C  D008               	goto	l12499
 10439  01320E  D010               	goto	l1525
 10440  013210                     l12491:
 10441                           
 10442                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 10443  013210  0E01               	movlw	1
 10444  013212  D003               	goto	L2
 10445  013214                     l12493:
 10446                           
 10447                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 10448  013214  0E02               	movlw	2
 10449  013216  D001               	goto	L2
 10450  013218                     l12495:
 10451                           
 10452                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 10453  013218  0E00               	movlw	0
 10454  01321A                     L2:
 10455  01321A  6E1D               	movwf	_data_item,c
 10456                           
 10457                           ;ChargeStation_task.c: 109: }
 10458                           
 10459                           ;ChargeStation_task.c: 108: break;
 10460  01321C  D00B               	goto	l12501
 10461  01321E                     l12499:
 10462  01321E  501D               	movf	_data_item,w,c
 10463                           
 10464                           ; Switch size 1, requested type "space"
 10465                           ; Number of cases is 3, Range of values is 0 to 2
 10466                           ; switch strategies available:
 10467                           ; Name         Instructions Cycles
 10468                           ; simple_byte           10     6 (average)
 10469                           ;	Chosen strategy is simple_byte
 10470  013220  0A00               	xorlw	0	; case 0
 10471  013222  B4D8               	btfsc	status,2,c
 10472  013224  D7F5               	goto	l12491
 10473  013226  0A01               	xorlw	1	; case 1
 10474  013228  B4D8               	btfsc	status,2,c
 10475  01322A  D7F4               	goto	l12493
 10476  01322C  0A03               	xorlw	3	; case 2
 10477  01322E  D7F4               	goto	l12495
 10478  013230                     l1525:
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;ChargeStation_task.c: 111: print_port = i;
 10482  013230  C066  F0FB         	movff	port_button_task@i,_print_port
 10483  013234                     l12501:
 10484                           
 10485                           ;ChargeStation_task.c: 112: }
 10486                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 10487  013234  0EE6               	movlw	low (STR_19+3)
 10488  013236  0100               	movlb	0	; () banked
 10489  013238  6F60               	movwf	display@str0& (0+255),b
 10490  01323A  0EFF               	movlw	high (STR_19+3)
 10491  01323C  0100               	movlb	0	; () banked
 10492  01323E  6F61               	movwf	(display@str0+1)& (0+255),b
 10493  013240  0EE6               	movlw	low (STR_19+3)
 10494  013242  0100               	movlb	0	; () banked
 10495  013244  6F62               	movwf	display@str1& (0+255),b
 10496  013246  0EFF               	movlw	high (STR_19+3)
 10497  013248  0100               	movlb	0	; () banked
 10498  01324A  6F63               	movwf	(display@str1+1)& (0+255),b
 10499  01324C  0E02               	movlw	2
 10500  01324E  EC87  F09C         	call	_display
 10501                           
 10502                           ;ChargeStation_task.c: 115: OUT(i, 1);
 10503  013252  0E01               	movlw	1
 10504  013254  0100               	movlb	0	; () banked
 10505  013256  6F60               	movwf	OUT@value& (0+255),b
 10506  013258  0100               	movlb	0	; () banked
 10507  01325A  5166               	movf	port_button_task@i& (0+255),w,b
 10508  01325C  ECC6  F0B0         	call	_OUT
 10509                           
 10510                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 10511  013260  0100               	movlb	0	; () banked
 10512  013262  5166               	movf	port_button_task@i& (0+255),w,b
 10513  013264  0D17               	mullw	23
 10514  013266  0E14               	movlw	20
 10515  013268  26F3               	addwf	prodl,f,c
 10516  01326A  0E00               	movlw	0
 10517  01326C  22F4               	addwfc	prodh,f,c
 10518  01326E  0E2E               	movlw	low _port
 10519  013270  24F3               	addwf	prodl,w,c
 10520  013272  6ED9               	movwf	fsr2l,c
 10521  013274  0E01               	movlw	high _port
 10522  013276  20F4               	addwfc	prodh,w,c
 10523  013278  6EDA               	movwf	fsr2h,c
 10524  01327A  0E00               	movlw	0
 10525  01327C  6EDE               	movwf	postinc2,c
 10526  01327E  0E00               	movlw	0
 10527  013280  6EDD               	movwf	postdec2,c
 10528  013282                     l12507:
 10529  013282  0100               	movlb	0	; () banked
 10530  013284  2B66               	incf	port_button_task@i& (0+255),f,b
 10531  013286  D751               	goto	l12467
 10532  013288                     __end_of_port_button_task:
 10533                           	opt stack 0
 10534                           tblptru	equ	0xFF8
 10535                           tblptrh	equ	0xFF7
 10536                           tblptrl	equ	0xFF6
 10537                           tablat	equ	0xFF5
 10538                           prodh	equ	0xFF4
 10539                           prodl	equ	0xFF3
 10540                           intcon	equ	0xFF2
 10541                           postinc0	equ	0xFEE
 10542                           wreg	equ	0xFE8
 10543                           postinc1	equ	0xFE6
 10544                           postdec1	equ	0xFE5
 10545                           fsr1h	equ	0xFE2
 10546                           fsr1l	equ	0xFE1
 10547                           indf2	equ	0xFDF
 10548                           postinc2	equ	0xFDE
 10549                           postdec2	equ	0xFDD
 10550                           fsr2h	equ	0xFDA
 10551                           fsr2l	equ	0xFD9
 10552                           status	equ	0xFD8
 10553                           
 10554 ;; *************** function _display *****************
 10555 ;; Defined at:
 10556 ;;		line 15 in file "LCD_print.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;  item            1    wreg     enum E8527
 10559 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 10560 ;;		 -> STR_116(1), STR_114(9), STR_112(9), STR_110(9), 
 10561 ;;		 -> STR_108(9), STR_106(9), STR_104(9), STR_102(1), 
 10562 ;;		 -> STR_101(1), STR_98(17), STR_94(1), STR_93(1), 
 10563 ;;		 -> STR_90(17), STR_86(1), STR_85(1), STR_82(17), 
 10564 ;;		 -> STR_78(1), STR_76(1), STR_74(15), STR_47(15), 
 10565 ;;		 -> STR_43(1), STR_41(1), 
 10566 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 10567 ;;		 -> STR_117(1), STR_115(15), STR_113(16), STR_111(17), 
 10568 ;;		 -> STR_109(16), STR_107(17), STR_105(17), STR_103(1), 
 10569 ;;		 -> settings_integrating_reset@str_6175(20), settings_integrating_reset@str(20), STR_95(1), settings_led_indicator@s
      +tr_6158(20), 
 10570 ;;		 -> settings_led_indicator@str(20), STR_87(1), settings_auto_stop@str_6141(20), settings_auto_stop@str(20), 
 10571 ;;		 -> STR_79(1), STR_77(1), STR_75(13), STR_48(14), 
 10572 ;;		 -> STR_44(1), STR_42(1), 
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;  item            1    4[BANK0 ] enum E8527
 10575 ;;  i               1    5[BANK0 ] unsigned char 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;		None               void
 10578 ;; Registers used:
 10579 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10585 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10588 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10589 ;;Total ram usage:        6 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:   12
 10592 ;; This function calls:
 10593 ;;		Nothing
 10594 ;; This function is called by:
 10595 ;;		_port_button_task
 10596 ;;		_normal_task
 10597 ;;		_sleep_task
 10598 ;;		_software_init
 10599 ;;		_settings_adjust_time
 10600 ;;		_settings_auto_stop
 10601 ;;		_settings_led_indicator
 10602 ;;		_settings_integrating_reset
 10603 ;;		_settings_task
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607                           	psect	text27
 10608  01390E                     __ptext27:
 10609                           	opt stack 0
 10610  01390E                     _display:
 10611                           	opt stack 17
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;incstack = 0
 10615                           ;display@item stored from wreg
 10616  01390E  0100               	movlb	0	; () banked
 10617  013910  6F64               	movwf	display@item& (0+255),b
 10618                           
 10619                           ;LCD_print.c: 16: print_item = item;
 10620  013912  C064  F01F         	movff	display@item,_print_item
 10621                           
 10622                           ;LCD_print.c: 17: uint8_t i;
 10623                           ;LCD_print.c: 18: if (*str0) {
 10624  013916  C060  FFF6         	movff	display@str0,tblptrl
 10625  01391A  C061  FFF7         	movff	display@str0+1,tblptrh
 10626  01391E                     	if	0	;tblptru may be non-zero
 10627  01391E                     	endif
 10628  01391E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10629  01391E  0E00               	movlw	low (__mediumconst shr (0+16))
 10630  013920  6EF8               	movwf	tblptru,c
 10631  013922                     	endif
 10632  013922  0008               	tblrd		*
 10633  013924  50F5               	movf	tablat,w,c
 10634  013926  0900               	iorlw	0
 10635  013928  B4D8               	btfsc	status,2,c
 10636  01392A  D031               	goto	l11483
 10637                           
 10638                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 10639  01392C  0E00               	movlw	0
 10640  01392E  0100               	movlb	0	; () banked
 10641  013930  6F65               	movwf	display@i& (0+255),b
 10642  013932  D017               	goto	l11479
 10643  013934                     l11473:
 10644                           
 10645                           ; BSR set to: 0
 10646                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 10647  013934  C060  FFF6         	movff	display@str0,tblptrl
 10648  013938  C061  FFF7         	movff	display@str0+1,tblptrh
 10649  01393C                     	if	0	;tblptru may be non-zero
 10650  01393C                     	endif
 10651  01393C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10652  01393C  0E00               	movlw	low (__mediumconst shr (0+16))
 10653  01393E  6EF8               	movwf	tblptru,c
 10654  013940                     	endif
 10655  013940  0100               	movlb	0	; () banked
 10656  013942  5165               	movf	display@i& (0+255),w,b
 10657  013944  0D01               	mullw	1
 10658  013946  0E1A               	movlw	low _display_char
 10659  013948  24F3               	addwf	prodl,w,c
 10660  01394A  6ED9               	movwf	fsr2l,c
 10661  01394C  0E02               	movlw	high _display_char
 10662  01394E  20F4               	addwfc	prodh,w,c
 10663  013950  6EDA               	movwf	fsr2h,c
 10664  013952  0008               	tblrd		*
 10665  013954  CFF5 FFDF          	movff	tablat,indf2
 10666                           
 10667                           ; BSR set to: 0
 10668  013958  0100               	movlb	0	; () banked
 10669  01395A  4B60               	infsnz	display@str0& (0+255),f,b
 10670  01395C  2B61               	incf	(display@str0+1)& (0+255),f,b
 10671                           
 10672                           ; BSR set to: 0
 10673  01395E  0100               	movlb	0	; () banked
 10674  013960  2B65               	incf	display@i& (0+255),f,b
 10675  013962                     l11479:
 10676                           
 10677                           ; BSR set to: 0
 10678  013962  C060  FFF6         	movff	display@str0,tblptrl
 10679  013966  C061  FFF7         	movff	display@str0+1,tblptrh
 10680  01396A                     	if	0	;tblptru may be non-zero
 10681  01396A                     	endif
 10682  01396A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10683  01396A  0E00               	movlw	low (__mediumconst shr (0+16))
 10684  01396C  6EF8               	movwf	tblptru,c
 10685  01396E                     	endif
 10686  01396E  0008               	tblrd		*
 10687  013970  50F5               	movf	tablat,w,c
 10688  013972  0900               	iorlw	0
 10689  013974  A4D8               	btfss	status,2,c
 10690  013976  D7DE               	goto	l11473
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;LCD_print.c: 21: }
 10694                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 10695                           
 10696                           ; BSR set to: 0
 10697  013978  0100               	movlb	0	; () banked
 10698  01397A  5165               	movf	display@i& (0+255),w,b
 10699  01397C  0D01               	mullw	1
 10700  01397E  0E1A               	movlw	low _display_char
 10701  013980  24F3               	addwf	prodl,w,c
 10702  013982  6ED9               	movwf	fsr2l,c
 10703  013984  0E02               	movlw	high _display_char
 10704  013986  20F4               	addwfc	prodh,w,c
 10705  013988  6EDA               	movwf	fsr2h,c
 10706  01398A  0E00               	movlw	0
 10707  01398C  6EDF               	movwf	indf2,c
 10708  01398E                     l11483:
 10709                           
 10710                           ;LCD_print.c: 23: }
 10711                           ;LCD_print.c: 24: if (*str1) {
 10712  01398E  C062  FFF6         	movff	display@str1,tblptrl
 10713  013992  C063  FFF7         	movff	display@str1+1,tblptrh
 10714  013996  0E00               	movlw	low (__mediumconst shr (0+16))
 10715  013998  6EF8               	movwf	tblptru,c
 10716  01399A  0E0E               	movlw	(high __ramtop+-1)
 10717  01399C  64F7               	cpfsgt	tblptrh,c
 10718  01399E  D003               	bra	u12687
 10719  0139A0  0008               	tblrd		*
 10720  0139A2  50F5               	movf	tablat,w,c
 10721  0139A4  D005               	bra	u12680
 10722  0139A6                     u12687:
 10723  0139A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 10724  0139AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 10725  0139AE  50EF               	movf	indf0,w,c
 10726  0139B0                     u12680:
 10727  0139B0  0900               	iorlw	0
 10728  0139B2  B4D8               	btfsc	status,2,c
 10729  0139B4  D043               	goto	l11497
 10730                           
 10731                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 10732  0139B6  0E00               	movlw	0
 10733  0139B8  0100               	movlb	0	; () banked
 10734  0139BA  6F65               	movwf	display@i& (0+255),b
 10735  0139BC  D020               	goto	l11493
 10736  0139BE                     l11487:
 10737                           
 10738                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 10739  0139BE  C062  FFF6         	movff	display@str1,tblptrl
 10740  0139C2  C063  FFF7         	movff	display@str1+1,tblptrh
 10741  0139C6  0E00               	movlw	low (__mediumconst shr (0+16))
 10742  0139C8  6EF8               	movwf	tblptru,c
 10743  0139CA  0100               	movlb	0	; () banked
 10744  0139CC  5165               	movf	display@i& (0+255),w,b
 10745  0139CE  0D01               	mullw	1
 10746  0139D0  0E2E               	movlw	low (_display_char+20)
 10747  0139D2  24F3               	addwf	prodl,w,c
 10748  0139D4  6ED9               	movwf	fsr2l,c
 10749  0139D6  0E02               	movlw	high (_display_char+20)
 10750  0139D8  20F4               	addwfc	prodh,w,c
 10751  0139DA  6EDA               	movwf	fsr2h,c
 10752  0139DC  0E0E               	movlw	(high __ramtop+-1)
 10753  0139DE  64F7               	cpfsgt	tblptrh,c
 10754  0139E0  D003               	bra	u12707
 10755  0139E2  0008               	tblrd		*
 10756  0139E4  50F5               	movf	tablat,w,c
 10757  0139E6  D005               	bra	u12700
 10758  0139E8                     u12707:
 10759  0139E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 10760  0139EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 10761  0139F0  50EF               	movf	indf0,w,c
 10762  0139F2                     u12700:
 10763  0139F2  6EDF               	movwf	indf2,c
 10764  0139F4  0100               	movlb	0	; () banked
 10765  0139F6  4B62               	infsnz	display@str1& (0+255),f,b
 10766  0139F8  2B63               	incf	(display@str1+1)& (0+255),f,b
 10767                           
 10768                           ; BSR set to: 0
 10769  0139FA  0100               	movlb	0	; () banked
 10770  0139FC  2B65               	incf	display@i& (0+255),f,b
 10771  0139FE                     l11493:
 10772                           
 10773                           ; BSR set to: 0
 10774  0139FE  C062  FFF6         	movff	display@str1,tblptrl
 10775  013A02  C063  FFF7         	movff	display@str1+1,tblptrh
 10776  013A06  0E00               	movlw	low (__mediumconst shr (0+16))
 10777  013A08  6EF8               	movwf	tblptru,c
 10778  013A0A  0E0E               	movlw	(high __ramtop+-1)
 10779  013A0C  64F7               	cpfsgt	tblptrh,c
 10780  013A0E  D003               	bra	u12717
 10781  013A10  0008               	tblrd		*
 10782  013A12  50F5               	movf	tablat,w,c
 10783  013A14  D005               	bra	u12710
 10784  013A16                     u12717:
 10785  013A16  CFF6 FFE9          	movff	tblptrl,fsr0l
 10786  013A1A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10787  013A1E  50EF               	movf	indf0,w,c
 10788  013A20                     u12710:
 10789  013A20  0900               	iorlw	0
 10790  013A22  A4D8               	btfss	status,2,c
 10791  013A24  D7CC               	goto	l11487
 10792                           
 10793                           ;LCD_print.c: 27: }
 10794                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 10795  013A26  0100               	movlb	0	; () banked
 10796  013A28  5165               	movf	display@i& (0+255),w,b
 10797  013A2A  0D01               	mullw	1
 10798  013A2C  0E2E               	movlw	low (_display_char+20)
 10799  013A2E  24F3               	addwf	prodl,w,c
 10800  013A30  6ED9               	movwf	fsr2l,c
 10801  013A32  0E02               	movlw	high (_display_char+20)
 10802  013A34  20F4               	addwfc	prodh,w,c
 10803  013A36  6EDA               	movwf	fsr2h,c
 10804  013A38  0E00               	movlw	0
 10805  013A3A  6EDF               	movwf	indf2,c
 10806  013A3C                     l11497:
 10807                           
 10808                           ;LCD_print.c: 29: }
 10809                           ;LCD_print.c: 30: display_flag = 1;
 10810  013A3C  0E01               	movlw	1
 10811  013A3E  0101               	movlb	1	; () banked
 10812  013A40  6F20               	movwf	_display_flag& (0+255),b
 10813                           
 10814                           ; BSR set to: 1
 10815  013A42  0012               	return		;funcret
 10816  013A44                     __end_of_display:
 10817                           	opt stack 0
 10818                           tblptru	equ	0xFF8
 10819                           tblptrh	equ	0xFF7
 10820                           tblptrl	equ	0xFF6
 10821                           tablat	equ	0xFF5
 10822                           prodh	equ	0xFF4
 10823                           prodl	equ	0xFF3
 10824                           intcon	equ	0xFF2
 10825                           indf0	equ	0xFEF
 10826                           postinc0	equ	0xFEE
 10827                           fsr0h	equ	0xFEA
 10828                           fsr0l	equ	0xFE9
 10829                           wreg	equ	0xFE8
 10830                           postinc1	equ	0xFE6
 10831                           postdec1	equ	0xFE5
 10832                           fsr1h	equ	0xFE2
 10833                           fsr1l	equ	0xFE1
 10834                           indf2	equ	0xFDF
 10835                           postinc2	equ	0xFDE
 10836                           postdec2	equ	0xFDD
 10837                           fsr2h	equ	0xFDA
 10838                           fsr2l	equ	0xFD9
 10839                           status	equ	0xFD8
 10840                           
 10841 ;; *************** function _LED_output *****************
 10842 ;; Defined at:
 10843 ;;		line 36 in file "io.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;  b               1    wreg     unsigned char 
 10846 ;;  value           1    0[BANK0 ] unsigned char 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;  b               1    1[BANK0 ] unsigned char 
 10849 ;; Return value:  Size  Location     Type
 10850 ;;		None               void
 10851 ;; Registers used:
 10852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10858 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10862 ;;Total ram usage:        2 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:   12
 10865 ;; This function calls:
 10866 ;;		Nothing
 10867 ;; This function is called by:
 10868 ;;		_port_button_task
 10869 ;;		_sleep_task
 10870 ;;		_software_init
 10871 ;;		_settings_led_indicator
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text28
 10876  0160A8                     __ptext28:
 10877                           	opt stack 0
 10878  0160A8                     _LED_output:
 10879                           	opt stack 17
 10880                           
 10881                           ; BSR set to: 1
 10882                           ;incstack = 0
 10883                           ;LED_output@b stored from wreg
 10884  0160A8  0100               	movlb	0	; () banked
 10885  0160AA  6F61               	movwf	LED_output@b& (0+255),b
 10886                           
 10887                           ;io.c: 37: port[b].flag.led_flag = value;
 10888  0160AC  0100               	movlb	0	; () banked
 10889  0160AE  5161               	movf	LED_output@b& (0+255),w,b
 10890  0160B0  0D17               	mullw	23
 10891  0160B2  0E16               	movlw	22
 10892  0160B4  26F3               	addwf	prodl,f,c
 10893  0160B6  0E00               	movlw	0
 10894  0160B8  22F4               	addwfc	prodh,f,c
 10895  0160BA  0E2E               	movlw	low _port
 10896  0160BC  24F3               	addwf	prodl,w,c
 10897  0160BE  6ED9               	movwf	fsr2l,c
 10898  0160C0  0E01               	movlw	high _port
 10899  0160C2  20F4               	addwfc	prodh,w,c
 10900  0160C4  6EDA               	movwf	fsr2h,c
 10901  0160C6  0100               	movlb	0	; () banked
 10902  0160C8  B160               	btfsc	LED_output@value& (0+255),0,b
 10903  0160CA  D003               	bra	u12595
 10904  0160CC  0101               	movlb	1	; () banked
 10905  0160CE  96DF               	bcf	indf2,3,c
 10906  0160D0  D002               	bra	u12596
 10907  0160D2                     u12595:
 10908  0160D2  0101               	movlb	1	; () banked
 10909  0160D4  86DF               	bsf	indf2,3,c
 10910  0160D6                     u12596:
 10911                           
 10912                           ;io.c: 38: switch (b) {
 10913  0160D6  D015               	goto	l11465
 10914  0160D8                     l1704:
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;io.c: 40: LATB7 = value;
 10918  0160D8  0100               	movlb	0	; () banked
 10919  0160DA  A160               	btfss	LED_output@value& (0+255),0,b
 10920  0160DC  D002               	goto	u12600
 10921  0160DE  8E8A               	bsf	3978,7,c	;volatile
 10922  0160E0  0012               	return	
 10923  0160E2                     u12600:
 10924  0160E2  9E8A               	bcf	3978,7,c	;volatile
 10925                           
 10926                           ;io.c: 41: break;
 10927  0160E4  0012               	return	
 10928  0160E6                     l1706:
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;io.c: 43: LATB6 = value;
 10932  0160E6  0100               	movlb	0	; () banked
 10933  0160E8  A160               	btfss	LED_output@value& (0+255),0,b
 10934  0160EA  D002               	goto	u12620
 10935  0160EC  8C8A               	bsf	3978,6,c	;volatile
 10936  0160EE  0012               	return	
 10937  0160F0                     u12620:
 10938  0160F0  9C8A               	bcf	3978,6,c	;volatile
 10939                           
 10940                           ;io.c: 44: break;
 10941  0160F2  0012               	return	
 10942  0160F4                     l1707:
 10943                           
 10944                           ; BSR set to: 0
 10945                           ;io.c: 46: LATC2 = value;
 10946  0160F4  0100               	movlb	0	; () banked
 10947  0160F6  A160               	btfss	LED_output@value& (0+255),0,b
 10948  0160F8  D002               	goto	u12640
 10949  0160FA  848B               	bsf	3979,2,c	;volatile
 10950  0160FC  0012               	return	
 10951  0160FE                     u12640:
 10952  0160FE  948B               	bcf	3979,2,c	;volatile
 10953                           
 10954                           ;io.c: 48: }
 10955                           
 10956                           ;io.c: 47: break;
 10957  016100  0012               	return	
 10958  016102                     l11465:
 10959  016102  0100               	movlb	0	; () banked
 10960  016104  5161               	movf	LED_output@b& (0+255),w,b
 10961                           
 10962                           ; Switch size 1, requested type "space"
 10963                           ; Number of cases is 3, Range of values is 0 to 2
 10964                           ; switch strategies available:
 10965                           ; Name         Instructions Cycles
 10966                           ; simple_byte           10     6 (average)
 10967                           ;	Chosen strategy is simple_byte
 10968  016106  0A00               	xorlw	0	; case 0
 10969  016108  B4D8               	btfsc	status,2,c
 10970  01610A  D7E6               	goto	l1704
 10971  01610C  0A01               	xorlw	1	; case 1
 10972  01610E  B4D8               	btfsc	status,2,c
 10973  016110  D7EA               	goto	l1706
 10974  016112  0A03               	xorlw	3	; case 2
 10975  016114  A4D8               	btfss	status,2,c
 10976  016116  0012               	return	
 10977  016118  D7ED               	goto	l1707
 10978  01611A                     __end_of_LED_output:
 10979                           	opt stack 0
 10980                           tblptru	equ	0xFF8
 10981                           tblptrh	equ	0xFF7
 10982                           tblptrl	equ	0xFF6
 10983                           tablat	equ	0xFF5
 10984                           prodh	equ	0xFF4
 10985                           prodl	equ	0xFF3
 10986                           intcon	equ	0xFF2
 10987                           indf0	equ	0xFEF
 10988                           postinc0	equ	0xFEE
 10989                           fsr0h	equ	0xFEA
 10990                           fsr0l	equ	0xFE9
 10991                           wreg	equ	0xFE8
 10992                           postinc1	equ	0xFE6
 10993                           postdec1	equ	0xFE5
 10994                           fsr1h	equ	0xFE2
 10995                           fsr1l	equ	0xFE1
 10996                           indf2	equ	0xFDF
 10997                           postinc2	equ	0xFDE
 10998                           postdec2	equ	0xFDD
 10999                           fsr2h	equ	0xFDA
 11000                           fsr2l	equ	0xFD9
 11001                           status	equ	0xFD8
 11002                           
 11003 ;; *************** function _integrate_time *****************
 11004 ;; Defined at:
 11005 ;;		line 76 in file "ChargeStation_task.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;		None
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;  i               1    2[BANK0 ] unsigned char 
 11010 ;; Return value:  Size  Location     Type
 11011 ;;		None               void
 11012 ;; Registers used:
 11013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/0
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11021 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11022 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11023 ;;Total ram usage:        3 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:   12
 11026 ;; This function calls:
 11027 ;;		Nothing
 11028 ;; This function is called by:
 11029 ;;		_normal_task
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           	psect	text29
 11034  016476                     __ptext29:
 11035                           	opt stack 0
 11036  016476                     _integrate_time:
 11037                           	opt stack 17
 11038                           
 11039                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 11040                           
 11041                           ;incstack = 0
 11042  016476  0E00               	movlw	0
 11043  016478  0100               	movlb	0	; () banked
 11044  01647A  6F62               	movwf	integrate_time@i& (0+255),b
 11045  01647C                     l12453:
 11046                           
 11047                           ; BSR set to: 0
 11048  01647C  0E02               	movlw	2
 11049  01647E  0100               	movlb	0	; () banked
 11050  016480  6562               	cpfsgt	integrate_time@i& (0+255),b
 11051  016482  D001               	goto	l12457
 11052  016484  0012               	return	
 11053  016486                     l12457:
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 11057  016486  0100               	movlb	0	; () banked
 11058  016488  5162               	movf	integrate_time@i& (0+255),w,b
 11059  01648A  0D17               	mullw	23
 11060  01648C  0E06               	movlw	6
 11061  01648E  26F3               	addwf	prodl,f,c
 11062  016490  0E00               	movlw	0
 11063  016492  22F4               	addwfc	prodh,f,c
 11064  016494  0E2E               	movlw	low _port
 11065  016496  24F3               	addwf	prodl,w,c
 11066  016498  6ED9               	movwf	fsr2l,c
 11067  01649A  0E01               	movlw	high _port
 11068  01649C  20F4               	addwfc	prodh,w,c
 11069  01649E  6EDA               	movwf	fsr2h,c
 11070  0164A0  0E01               	movlw	1
 11071  0164A2  50DB               	movf	plusw2,w,c
 11072  0164A4  E104               	bnz	u14040
 11073  0164A6  0E65               	movlw	101
 11074  0164A8  5CDE               	subwf	postinc2,w,c
 11075  0164AA  A0D8               	btfss	status,0,c
 11076  0164AC  D012               	goto	l12461
 11077  0164AE                     u14040:
 11078                           
 11079                           ; BSR set to: 0
 11080  0164AE  0100               	movlb	0	; () banked
 11081  0164B0  5162               	movf	integrate_time@i& (0+255),w,b
 11082  0164B2  0D17               	mullw	23
 11083  0164B4  0E10               	movlw	16
 11084  0164B6  26F3               	addwf	prodl,f,c
 11085  0164B8  0E00               	movlw	0
 11086  0164BA  22F4               	addwfc	prodh,f,c
 11087  0164BC  0E2E               	movlw	low _port
 11088  0164BE  24F3               	addwf	prodl,w,c
 11089  0164C0  6ED9               	movwf	fsr2l,c
 11090  0164C2  0E01               	movlw	high _port
 11091  0164C4  20F4               	addwfc	prodh,w,c
 11092  0164C6  6EDA               	movwf	fsr2h,c
 11093  0164C8  2ADE               	incf	postinc2,f,c
 11094  0164CA  0E00               	movlw	0
 11095  0164CC  22DE               	addwfc	postinc2,f,c
 11096  0164CE  22DE               	addwfc	postinc2,f,c
 11097  0164D0  22DE               	addwfc	postinc2,f,c
 11098  0164D2                     l12461:
 11099                           
 11100                           ; BSR set to: 0
 11101  0164D2  0100               	movlb	0	; () banked
 11102  0164D4  2B62               	incf	integrate_time@i& (0+255),f,b
 11103  0164D6  D7D2               	goto	l12453
 11104  0164D8                     __end_of_integrate_time:
 11105                           	opt stack 0
 11106                           tblptru	equ	0xFF8
 11107                           tblptrh	equ	0xFF7
 11108                           tblptrl	equ	0xFF6
 11109                           tablat	equ	0xFF5
 11110                           prodh	equ	0xFF4
 11111                           prodl	equ	0xFF3
 11112                           intcon	equ	0xFF2
 11113                           indf0	equ	0xFEF
 11114                           postinc0	equ	0xFEE
 11115                           fsr0h	equ	0xFEA
 11116                           fsr0l	equ	0xFE9
 11117                           wreg	equ	0xFE8
 11118                           postinc1	equ	0xFE6
 11119                           postdec1	equ	0xFE5
 11120                           fsr1h	equ	0xFE2
 11121                           fsr1l	equ	0xFE1
 11122                           indf2	equ	0xFDF
 11123                           postinc2	equ	0xFDE
 11124                           postdec2	equ	0xFDD
 11125                           plusw2	equ	0xFDB
 11126                           fsr2h	equ	0xFDA
 11127                           fsr2l	equ	0xFD9
 11128                           status	equ	0xFD8
 11129                           
 11130 ;; *************** function _integrate_current *****************
 11131 ;; Defined at:
 11132 ;;		line 67 in file "ChargeStation_task.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;		None
 11135 ;; Auto vars:     Size  Location     Type
 11136 ;;  i               1   15[BANK0 ] unsigned char 
 11137 ;; Return value:  Size  Location     Type
 11138 ;;		None               void
 11139 ;; Registers used:
 11140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11148 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11149 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11150 ;;Total ram usage:        3 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; Hardware stack levels required when called:   13
 11153 ;; This function calls:
 11154 ;;		___lldiv
 11155 ;; This function is called by:
 11156 ;;		_normal_task
 11157 ;; This function uses a non-reentrant model
 11158 ;;
 11159                           
 11160                           	psect	text30
 11161  013FBC                     __ptext30:
 11162                           	opt stack 0
 11163  013FBC                     _integrate_current:
 11164                           	opt stack 16
 11165                           
 11166                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;incstack = 0
 11170  013FBC  0E00               	movlw	0
 11171  013FBE  0100               	movlb	0	; () banked
 11172  013FC0  6F6F               	movwf	integrate_current@i& (0+255),b
 11173  013FC2                     l12437:
 11174                           
 11175                           ; BSR set to: 0
 11176  013FC2  0E02               	movlw	2
 11177  013FC4  0100               	movlb	0	; () banked
 11178  013FC6  656F               	cpfsgt	integrate_current@i& (0+255),b
 11179  013FC8  D001               	goto	l12441
 11180  013FCA  0012               	return	
 11181  013FCC                     l12441:
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 11185  013FCC  0100               	movlb	0	; () banked
 11186  013FCE  516F               	movf	integrate_current@i& (0+255),w,b
 11187  013FD0  0D17               	mullw	23
 11188  013FD2  0E06               	movlw	6
 11189  013FD4  26F3               	addwf	prodl,f,c
 11190  013FD6  0E00               	movlw	0
 11191  013FD8  22F4               	addwfc	prodh,f,c
 11192  013FDA  0E2E               	movlw	low _port
 11193  013FDC  24F3               	addwf	prodl,w,c
 11194  013FDE  6ED9               	movwf	fsr2l,c
 11195  013FE0  0E01               	movlw	high _port
 11196  013FE2  20F4               	addwfc	prodh,w,c
 11197  013FE4  6EDA               	movwf	fsr2h,c
 11198  013FE6  0E01               	movlw	1
 11199  013FE8  50DB               	movf	plusw2,w,c
 11200  013FEA  E104               	bnz	u14010
 11201  013FEC  0E65               	movlw	101
 11202  013FEE  5CDE               	subwf	postinc2,w,c
 11203  013FF0  A0D8               	btfss	status,0,c
 11204  013FF2  D05F               	goto	l12447
 11205  013FF4                     u14010:
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 11209  013FF4  0100               	movlb	0	; () banked
 11210  013FF6  516F               	movf	integrate_current@i& (0+255),w,b
 11211  013FF8  0D17               	mullw	23
 11212  013FFA  0E06               	movlw	6
 11213  013FFC  26F3               	addwf	prodl,f,c
 11214  013FFE  0E00               	movlw	0
 11215  014000  22F4               	addwfc	prodh,f,c
 11216  014002  0E2E               	movlw	low _port
 11217  014004  24F3               	addwf	prodl,w,c
 11218  014006  6ED9               	movwf	fsr2l,c
 11219  014008  0E01               	movlw	high _port
 11220  01400A  20F4               	addwfc	prodh,w,c
 11221  01400C  6EDA               	movwf	fsr2h,c
 11222  01400E  CFDE F06D          	movff	postinc2,??_integrate_current
 11223  014012  CFDD F06E          	movff	postdec2,??_integrate_current+1
 11224  014016  0100               	movlb	0	; () banked
 11225  014018  516F               	movf	integrate_current@i& (0+255),w,b
 11226  01401A  0D17               	mullw	23
 11227  01401C  0E08               	movlw	8
 11228  01401E  26F3               	addwf	prodl,f,c
 11229  014020  0E00               	movlw	0
 11230  014022  22F4               	addwfc	prodh,f,c
 11231  014024  0E2E               	movlw	low _port
 11232  014026  24F3               	addwf	prodl,w,c
 11233  014028  6ED9               	movwf	fsr2l,c
 11234  01402A  0E01               	movlw	high _port
 11235  01402C  20F4               	addwfc	prodh,w,c
 11236  01402E  6EDA               	movwf	fsr2h,c
 11237  014030  0100               	movlb	0	; () banked
 11238  014032  516D               	movf	??_integrate_current& (0+255),w,b
 11239  014034  26DE               	addwf	postinc2,f,c
 11240  014036  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 11241  014038  22DE               	addwfc	postinc2,f,c
 11242  01403A  0E00               	movlw	0
 11243  01403C  22DE               	addwfc	postinc2,f,c
 11244  01403E  22DE               	addwfc	postinc2,f,c
 11245                           
 11246                           ; BSR set to: 0
 11247                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 11248  014040  0100               	movlb	0	; () banked
 11249  014042  516F               	movf	integrate_current@i& (0+255),w,b
 11250  014044  0D17               	mullw	23
 11251  014046  0E08               	movlw	8
 11252  014048  26F3               	addwf	prodl,f,c
 11253  01404A  0E00               	movlw	0
 11254  01404C  22F4               	addwfc	prodh,f,c
 11255  01404E  0E2E               	movlw	low _port
 11256  014050  24F3               	addwf	prodl,w,c
 11257  014052  6ED9               	movwf	fsr2l,c
 11258  014054  0E01               	movlw	high _port
 11259  014056  20F4               	addwfc	prodh,w,c
 11260  014058  6EDA               	movwf	fsr2h,c
 11261  01405A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11262  01405E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11263  014062  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11264  014066  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11265  01406A  0E10               	movlw	16
 11266  01406C  0100               	movlb	0	; () banked
 11267  01406E  6F64               	movwf	___lldiv@divisor& (0+255),b
 11268  014070  0E0E               	movlw	14
 11269  014072  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11270  014074  0E00               	movlw	0
 11271  014076  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11272  014078  0E00               	movlw	0
 11273  01407A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11274  01407C  EC51  F0AB         	call	___lldiv	;wreg free
 11275  014080  0100               	movlb	0	; () banked
 11276  014082  516F               	movf	integrate_current@i& (0+255),w,b
 11277  014084  0D17               	mullw	23
 11278  014086  0E0C               	movlw	12
 11279  014088  26F3               	addwf	prodl,f,c
 11280  01408A  0E00               	movlw	0
 11281  01408C  22F4               	addwfc	prodh,f,c
 11282  01408E  0E2E               	movlw	low _port
 11283  014090  24F3               	addwf	prodl,w,c
 11284  014092  6ED9               	movwf	fsr2l,c
 11285  014094  0E01               	movlw	high _port
 11286  014096  20F4               	addwfc	prodh,w,c
 11287  014098  6EDA               	movwf	fsr2h,c
 11288  01409A  0100               	movlb	0	; () banked
 11289  01409C  C060  FFDE         	movff	?___lldiv,postinc2
 11290  0140A0  0100               	movlb	0	; () banked
 11291  0140A2  C061  FFDE         	movff	?___lldiv+1,postinc2
 11292  0140A6  0100               	movlb	0	; () banked
 11293  0140A8  C062  FFDE         	movff	?___lldiv+2,postinc2
 11294  0140AC  0100               	movlb	0	; () banked
 11295  0140AE  C063  FFDE         	movff	?___lldiv+3,postinc2
 11296  0140B2                     l12447:
 11297                           
 11298                           ; BSR set to: 0
 11299  0140B2  0100               	movlb	0	; () banked
 11300  0140B4  2B6F               	incf	integrate_current@i& (0+255),f,b
 11301  0140B6  D785               	goto	l12437
 11302  0140B8                     __end_of_integrate_current:
 11303                           	opt stack 0
 11304                           tblptru	equ	0xFF8
 11305                           tblptrh	equ	0xFF7
 11306                           tblptrl	equ	0xFF6
 11307                           tablat	equ	0xFF5
 11308                           prodh	equ	0xFF4
 11309                           prodl	equ	0xFF3
 11310                           intcon	equ	0xFF2
 11311                           indf0	equ	0xFEF
 11312                           postinc0	equ	0xFEE
 11313                           fsr0h	equ	0xFEA
 11314                           fsr0l	equ	0xFE9
 11315                           wreg	equ	0xFE8
 11316                           postinc1	equ	0xFE6
 11317                           postdec1	equ	0xFE5
 11318                           fsr1h	equ	0xFE2
 11319                           fsr1l	equ	0xFE1
 11320                           indf2	equ	0xFDF
 11321                           postinc2	equ	0xFDE
 11322                           postdec2	equ	0xFDD
 11323                           plusw2	equ	0xFDB
 11324                           fsr2h	equ	0xFDA
 11325                           fsr2l	equ	0xFD9
 11326                           status	equ	0xFD8
 11327                           
 11328 ;; *************** function _display_LCD *****************
 11329 ;; Defined at:
 11330 ;;		line 33 in file "LCD_print.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;		None
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;  str            20   40[BANK1 ] unsigned char [20]
 11335 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 11336 ;; Return value:  Size  Location     Type
 11337 ;;		None               void
 11338 ;; Registers used:
 11339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : 0/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11346 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11347 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11348 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11349 ;;Total ram usage:       85 bytes
 11350 ;; Hardware stack levels used:    1
 11351 ;; Hardware stack levels required when called:   17
 11352 ;; This function calls:
 11353 ;;		_ST7032_clear
 11354 ;;		_ST7032_cursor
 11355 ;;		_ST7032_puts
 11356 ;;		___lldiv
 11357 ;;		___llmod
 11358 ;;		___lwdiv
 11359 ;;		___lwmod
 11360 ;;		_display_time_1602
 11361 ;;		_sprintf
 11362 ;; This function is called by:
 11363 ;;		_normal_task
 11364 ;; This function uses a non-reentrant model
 11365 ;;
 11366                           
 11367                           	psect	text31
 11368  01051C                     __ptext31:
 11369                           	opt stack 0
 11370  01051C                     _display_LCD:
 11371                           	opt stack 12
 11372                           
 11373                           ;LCD_print.c: 34: ST7032_clear();
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;incstack = 0
 11377  01051C  EC7C  F0B7         	call	_ST7032_clear	;wreg free
 11378                           
 11379                           ;LCD_print.c: 35: switch (print_item) {
 11380  010520  D251               	goto	l12647
 11381  010522                     l12599:
 11382                           
 11383                           ;LCD_print.c: 37: case SETTINGS:
 11384                           ;LCD_print.c: 38: ST7032_cursor(0, 0);
 11385  010522  0E00               	movlw	0
 11386  010524  0100               	movlb	0	; () banked
 11387  010526  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11388  010528  0E00               	movlw	0
 11389  01052A  ECA7  F0B5         	call	_ST7032_cursor
 11390                           
 11391                           ;LCD_print.c: 39: ST7032_puts(display_char[0]);
 11392  01052E  0E1A               	movlw	low _display_char
 11393  010530  0100               	movlb	0	; () banked
 11394  010532  6F70               	movwf	ST7032_puts@s& (0+255),b
 11395  010534  0E02               	movlw	high _display_char
 11396  010536  0100               	movlb	0	; () banked
 11397  010538  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11398  01053A  EC87  F0B3         	call	_ST7032_puts	;wreg free
 11399                           
 11400                           ;LCD_print.c: 40: ST7032_cursor(0, 1);
 11401  01053E  0E01               	movlw	1
 11402  010540  0100               	movlb	0	; () banked
 11403  010542  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11404  010544  0E00               	movlw	0
 11405  010546  ECA7  F0B5         	call	_ST7032_cursor
 11406                           
 11407                           ;LCD_print.c: 41: ST7032_puts(display_char[1]);
 11408  01054A  0E2E               	movlw	low (_display_char+20)
 11409  01054C  0100               	movlb	0	; () banked
 11410  01054E  6F70               	movwf	ST7032_puts@s& (0+255),b
 11411  010550  0E02               	movlw	high (_display_char+20)
 11412  010552  0100               	movlb	0	; () banked
 11413  010554  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11414  010556  EC87  F0B3         	call	_ST7032_puts	;wreg free
 11415                           
 11416                           ;LCD_print.c: 42: break;
 11417  01055A  0012               	return	
 11418  01055C                     l12605:
 11419                           
 11420                           ;LCD_print.c: 44: {
 11421                           ;LCD_print.c: 45: char str[2][20];
 11422                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 11423  01055C  0E73               	movlw	low _now
 11424  01055E  0100               	movlb	0	; () banked
 11425  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 11426  010562  0E01               	movlw	high _now
 11427  010564  0100               	movlb	0	; () banked
 11428  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 11429  010568  0E92               	movlw	low display_LCD@str
 11430  01056A  0100               	movlb	0	; () banked
 11431  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 11432  01056E  0E01               	movlw	high display_LCD@str
 11433  010570  0100               	movlb	0	; () banked
 11434  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 11435  010574  0EA6               	movlw	low (display_LCD@str+20)
 11436  010576  0100               	movlb	0	; () banked
 11437  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 11438  01057A  0E01               	movlw	high (display_LCD@str+20)
 11439  01057C  0100               	movlb	0	; () banked
 11440  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 11441  010580  ECDF  F089         	call	_display_time_1602	;wreg free
 11442                           
 11443                           ;LCD_print.c: 47: ST7032_cursor(0, 0);
 11444  010584  0E00               	movlw	0
 11445  010586  0100               	movlb	0	; () banked
 11446  010588  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11447  01058A  0E00               	movlw	0
 11448  01058C  ECA7  F0B5         	call	_ST7032_cursor
 11449                           
 11450                           ;LCD_print.c: 48: ST7032_puts(str[0]);
 11451  010590  0E92               	movlw	low display_LCD@str
 11452  010592  0100               	movlb	0	; () banked
 11453  010594  6F70               	movwf	ST7032_puts@s& (0+255),b
 11454  010596  0E01               	movlw	high display_LCD@str
 11455  010598  0100               	movlb	0	; () banked
 11456  01059A  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11457  01059C  EC87  F0B3         	call	_ST7032_puts	;wreg free
 11458                           
 11459                           ;LCD_print.c: 49: ST7032_cursor(0, 1);
 11460  0105A0  0E01               	movlw	1
 11461  0105A2  0100               	movlb	0	; () banked
 11462  0105A4  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11463  0105A6  0E00               	movlw	0
 11464  0105A8  ECA7  F0B5         	call	_ST7032_cursor
 11465                           
 11466                           ;LCD_print.c: 50: ST7032_puts(str[1]);
 11467  0105AC  0EA6               	movlw	low (display_LCD@str+20)
 11468  0105AE  0100               	movlb	0	; () banked
 11469  0105B0  6F70               	movwf	ST7032_puts@s& (0+255),b
 11470  0105B2  0E01               	movlw	high (display_LCD@str+20)
 11471  0105B4  0100               	movlb	0	; () banked
 11472  0105B6  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11473  0105B8  EC87  F0B3         	call	_ST7032_puts	;wreg free
 11474                           
 11475                           ;LCD_print.c: 51: }
 11476                           ;LCD_print.c: 52: break;
 11477  0105BC  0012               	return	
 11478  0105BE                     l12615:
 11479                           
 11480                           ;LCD_print.c: 54: {
 11481                           ;LCD_print.c: 55: char str[20];
 11482                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 11483                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 11484                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 11485                           ;LCD_print.c: 59: };
 11486                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 11487                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 11488                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 11489  0105BE  0EBA               	movlw	low display_LCD@str_5618
 11490  0105C0  0100               	movlb	0	; () banked
 11491  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 11492  0105C4  0E01               	movlw	high display_LCD@str_5618
 11493  0105C6  0100               	movlb	0	; () banked
 11494  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11495  0105CA  0EB7               	movlw	low STR_70
 11496  0105CC  0100               	movlb	0	; () banked
 11497  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 11498  0105D0  0EFF               	movlw	high STR_70
 11499  0105D2  0100               	movlb	0	; () banked
 11500  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11501  0105D6  0100               	movlb	0	; () banked
 11502  0105D8  51FB               	movf	_print_port& (0+255),w,b
 11503  0105DA  0D17               	mullw	23
 11504  0105DC  0E16               	movlw	22
 11505  0105DE  26F3               	addwf	prodl,f,c
 11506  0105E0  0E00               	movlw	0
 11507  0105E2  22F4               	addwfc	prodh,f,c
 11508  0105E4  0E2E               	movlw	low _port
 11509  0105E6  24F3               	addwf	prodl,w,c
 11510  0105E8  6ED9               	movwf	fsr2l,c
 11511  0105EA  0E01               	movlw	high _port
 11512  0105EC  20F4               	addwfc	prodh,w,c
 11513  0105EE  6EDA               	movwf	fsr2h,c
 11514  0105F0  0101               	movlb	1	; () banked
 11515  0105F2  A0DF               	btfss	indf2,0,c
 11516  0105F4  D004               	goto	u14240
 11517  0105F6  0100               	movlb	0	; () banked
 11518  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 11519  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 11520  0105FC  D002               	goto	u14248
 11521  0105FE                     u14240:
 11522  0105FE  0100               	movlb	0	; () banked
 11523  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 11524  010602                     u14248:
 11525  010602  0100               	movlb	0	; () banked
 11526  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 11527  010606  0D3C               	mullw	60
 11528  010608  0E81               	movlw	low display_LCD@port_char
 11529  01060A  0100               	movlb	0	; () banked
 11530  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 11531  01060E  0EFA               	movlw	high display_LCD@port_char
 11532  010610  0100               	movlb	0	; () banked
 11533  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 11534  010614  50F3               	movf	prodl,w,c
 11535  010616  0100               	movlb	0	; () banked
 11536  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 11537  01061A  50F4               	movf	prodh,w,c
 11538  01061C  0100               	movlb	0	; () banked
 11539  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 11540  010620  0100               	movlb	0	; () banked
 11541  010622  51FB               	movf	_print_port& (0+255),w,b
 11542  010624  0D14               	mullw	20
 11543  010626  50F3               	movf	prodl,w,c
 11544  010628  0100               	movlb	0	; () banked
 11545  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 11546  01062C  0100               	movlb	0	; () banked
 11547  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11548  010630  50F4               	movf	prodh,w,c
 11549  010632  0100               	movlb	0	; () banked
 11550  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 11551  010636  0100               	movlb	0	; () banked
 11552  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11553  01063A  0100               	movlb	0	; () banked
 11554  01063C  51FB               	movf	_print_port& (0+255),w,b
 11555  01063E  0D17               	mullw	23
 11556  010640  0E06               	movlw	6
 11557  010642  26F3               	addwf	prodl,f,c
 11558  010644  0E00               	movlw	0
 11559  010646  22F4               	addwfc	prodh,f,c
 11560  010648  0E2E               	movlw	low _port
 11561  01064A  24F3               	addwf	prodl,w,c
 11562  01064C  6ED9               	movwf	fsr2l,c
 11563  01064E  0E01               	movlw	high _port
 11564  010650  20F4               	addwfc	prodh,w,c
 11565  010652  6EDA               	movwf	fsr2h,c
 11566  010654  0E01               	movlw	1
 11567  010656  50DB               	movf	plusw2,w,c
 11568  010658  E104               	bnz	u14251
 11569  01065A  0E65               	movlw	101
 11570  01065C  5CDE               	subwf	postinc2,w,c
 11571  01065E  A0D8               	btfss	status,0,c
 11572  010660  D002               	goto	u14250
 11573  010662                     u14251:
 11574  010662  0E01               	movlw	1
 11575  010664  D001               	goto	u14260
 11576  010666                     u14250:
 11577  010666  0E00               	movlw	0
 11578  010668                     u14260:
 11579  010668  0D05               	mullw	5
 11580  01066A  0ED2               	movlw	low display_LCD@onoff
 11581  01066C  24F3               	addwf	prodl,w,c
 11582  01066E  0100               	movlb	0	; () banked
 11583  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 11584  010672  0EFB               	movlw	high display_LCD@onoff
 11585  010674  20F4               	addwfc	prodh,w,c
 11586  010676  0100               	movlb	0	; () banked
 11587  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 11588  01067A  EC00  F080         	call	_sprintf	;wreg free
 11589                           
 11590                           ;LCD_print.c: 63: ST7032_cursor(0, 0);
 11591  01067E  0E00               	movlw	0
 11592  010680  0100               	movlb	0	; () banked
 11593  010682  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11594  010684  0E00               	movlw	0
 11595  010686  ECA7  F0B5         	call	_ST7032_cursor
 11596                           
 11597                           ;LCD_print.c: 64: ST7032_puts(str);
 11598  01068A  0EBA               	movlw	low display_LCD@str_5618
 11599  01068C  0100               	movlb	0	; () banked
 11600  01068E  6F70               	movwf	ST7032_puts@s& (0+255),b
 11601  010690  0E01               	movlw	high display_LCD@str_5618
 11602  010692  0100               	movlb	0	; () banked
 11603  010694  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11604  010696  EC87  F0B3         	call	_ST7032_puts	;wreg free
 11605                           
 11606                           ;LCD_print.c: 65: switch (data_item) {
 11607  01069A  D17B               	goto	l12639
 11608  01069C                     l12621:
 11609                           
 11610                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 11611  01069C  0EBA               	movlw	low display_LCD@str_5618
 11612  01069E  0100               	movlb	0	; () banked
 11613  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 11614  0106A2  0E01               	movlw	high display_LCD@str_5618
 11615  0106A4  0100               	movlb	0	; () banked
 11616  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11617  0106A8  0E3D               	movlw	low STR_71
 11618  0106AA  0100               	movlb	0	; () banked
 11619  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 11620  0106AE  0EFF               	movlw	high STR_71
 11621  0106B0  0100               	movlb	0	; () banked
 11622  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11623  0106B4  0100               	movlb	0	; () banked
 11624  0106B6  51FB               	movf	_print_port& (0+255),w,b
 11625  0106B8  0D17               	mullw	23
 11626  0106BA  0E06               	movlw	6
 11627  0106BC  26F3               	addwf	prodl,f,c
 11628  0106BE  0E00               	movlw	0
 11629  0106C0  22F4               	addwfc	prodh,f,c
 11630  0106C2  0E2E               	movlw	low _port
 11631  0106C4  24F3               	addwf	prodl,w,c
 11632  0106C6  6ED9               	movwf	fsr2l,c
 11633  0106C8  0E01               	movlw	high _port
 11634  0106CA  20F4               	addwfc	prodh,w,c
 11635  0106CC  6EDA               	movwf	fsr2h,c
 11636  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11637  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11638  0106D6  0E03               	movlw	3
 11639  0106D8  0100               	movlb	0	; () banked
 11640  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11641  0106DC  0EE8               	movlw	232
 11642  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11643  0106E0  ECA2  F0AF         	call	___lwdiv	;wreg free
 11644  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 11645  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 11646  0106EC  0100               	movlb	0	; () banked
 11647  0106EE  51FB               	movf	_print_port& (0+255),w,b
 11648  0106F0  0D17               	mullw	23
 11649  0106F2  0E06               	movlw	6
 11650  0106F4  26F3               	addwf	prodl,f,c
 11651  0106F6  0E00               	movlw	0
 11652  0106F8  22F4               	addwfc	prodh,f,c
 11653  0106FA  0E2E               	movlw	low _port
 11654  0106FC  24F3               	addwf	prodl,w,c
 11655  0106FE  6ED9               	movwf	fsr2l,c
 11656  010700  0E01               	movlw	high _port
 11657  010702  20F4               	addwfc	prodh,w,c
 11658  010704  6EDA               	movwf	fsr2h,c
 11659  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 11660  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11661  01070E  0E03               	movlw	3
 11662  010710  0100               	movlb	0	; () banked
 11663  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11664  010714  0EE8               	movlw	232
 11665  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 11666  010718  EC6C  F0B2         	call	___lwmod	;wreg free
 11667  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 11668  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 11669  010724  EC00  F080         	call	_sprintf	;wreg free
 11670                           
 11671                           ;LCD_print.c: 68: break;
 11672  010728  D13E               	goto	l12641
 11673  01072A                     l12623:
 11674                           
 11675                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 11676  01072A  0EBA               	movlw	low display_LCD@str_5618
 11677  01072C  0100               	movlb	0	; () banked
 11678  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 11679  010730  0E01               	movlw	high display_LCD@str_5618
 11680  010732  0100               	movlb	0	; () banked
 11681  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11682  010736  0E44               	movlw	low (STR_68+15)
 11683  010738  0100               	movlb	0	; () banked
 11684  01073A  6F85               	movwf	sprintf@f& (0+255),b
 11685  01073C  0EFE               	movlw	high (STR_68+15)
 11686  01073E  0100               	movlb	0	; () banked
 11687  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11688  010742  0100               	movlb	0	; () banked
 11689  010744  51FB               	movf	_print_port& (0+255),w,b
 11690  010746  0D17               	mullw	23
 11691  010748  0E0C               	movlw	12
 11692  01074A  26F3               	addwf	prodl,f,c
 11693  01074C  0E00               	movlw	0
 11694  01074E  22F4               	addwfc	prodh,f,c
 11695  010750  0E2E               	movlw	low _port
 11696  010752  24F3               	addwf	prodl,w,c
 11697  010754  6ED9               	movwf	fsr2l,c
 11698  010756  0E01               	movlw	high _port
 11699  010758  20F4               	addwfc	prodh,w,c
 11700  01075A  6EDA               	movwf	fsr2h,c
 11701  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 11702  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 11703  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 11704  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 11705  01076C  EC00  F080         	call	_sprintf	;wreg free
 11706                           
 11707                           ;LCD_print.c: 71: break;
 11708  010770  D11A               	goto	l12641
 11709  010772                     l12625:
 11710                           
 11711                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11712                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11713                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11714                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11715                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11716  010772  0E10               	movlw	16
 11717  010774  0100               	movlb	0	; () banked
 11718  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 11719  010778  0E0E               	movlw	14
 11720  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11721  01077C  0E00               	movlw	0
 11722  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11723  010780  0E00               	movlw	0
 11724  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11725  010784  0100               	movlb	0	; () banked
 11726  010786  51FB               	movf	_print_port& (0+255),w,b
 11727  010788  0D17               	mullw	23
 11728  01078A  0E10               	movlw	16
 11729  01078C  26F3               	addwf	prodl,f,c
 11730  01078E  0E00               	movlw	0
 11731  010790  22F4               	addwfc	prodh,f,c
 11732  010792  0E2E               	movlw	low _port
 11733  010794  24F3               	addwf	prodl,w,c
 11734  010796  6ED9               	movwf	fsr2l,c
 11735  010798  0E01               	movlw	high _port
 11736  01079A  20F4               	addwfc	prodh,w,c
 11737  01079C  6EDA               	movwf	fsr2h,c
 11738  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 11739  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11740  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11741  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11742  0107AE  EC51  F0AB         	call	___lldiv	;wreg free
 11743  0107B2  C060  F1CE         	movff	?___lldiv,_display_LCD$7053
 11744  0107B6  C061  F1CF         	movff	?___lldiv+1,_display_LCD$7053+1
 11745  0107BA  C062  F1D0         	movff	?___lldiv+2,_display_LCD$7053+2
 11746  0107BE  C063  F1D1         	movff	?___lldiv+3,_display_LCD$7053+3
 11747                           
 11748                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11749                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11750                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11751                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11752                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11753  0107C2  C1CE  F060         	movff	_display_LCD$7053,___lldiv@dividend
 11754  0107C6  C1CF  F061         	movff	_display_LCD$7053+1,___lldiv@dividend+1
 11755  0107CA  C1D0  F062         	movff	_display_LCD$7053+2,___lldiv@dividend+2
 11756  0107CE  C1D1  F063         	movff	_display_LCD$7053+3,___lldiv@dividend+3
 11757  0107D2  0E18               	movlw	24
 11758  0107D4  0100               	movlb	0	; () banked
 11759  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 11760  0107D8  0E00               	movlw	0
 11761  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11762  0107DC  0E00               	movlw	0
 11763  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11764  0107E0  0E00               	movlw	0
 11765  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11766  0107E4  EC51  F0AB         	call	___lldiv	;wreg free
 11767  0107E8  C060  F1D2         	movff	?___lldiv,_display_LCD$7054
 11768  0107EC  C061  F1D3         	movff	?___lldiv+1,_display_LCD$7054+1
 11769  0107F0  C062  F1D4         	movff	?___lldiv+2,_display_LCD$7054+2
 11770  0107F4  C063  F1D5         	movff	?___lldiv+3,_display_LCD$7054+3
 11771                           
 11772                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11773                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11774                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11775                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11776                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11777  0107F8  0E10               	movlw	16
 11778  0107FA  0100               	movlb	0	; () banked
 11779  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 11780  0107FE  0E0E               	movlw	14
 11781  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11782  010802  0E00               	movlw	0
 11783  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11784  010806  0E00               	movlw	0
 11785  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11786  01080A  0100               	movlb	0	; () banked
 11787  01080C  51FB               	movf	_print_port& (0+255),w,b
 11788  01080E  0D17               	mullw	23
 11789  010810  0E10               	movlw	16
 11790  010812  26F3               	addwf	prodl,f,c
 11791  010814  0E00               	movlw	0
 11792  010816  22F4               	addwfc	prodh,f,c
 11793  010818  0E2E               	movlw	low _port
 11794  01081A  24F3               	addwf	prodl,w,c
 11795  01081C  6ED9               	movwf	fsr2l,c
 11796  01081E  0E01               	movlw	high _port
 11797  010820  20F4               	addwfc	prodh,w,c
 11798  010822  6EDA               	movwf	fsr2h,c
 11799  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 11800  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11801  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11802  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11803  010834  EC51  F0AB         	call	___lldiv	;wreg free
 11804  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11805  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11806  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11807  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11808  010848  0E18               	movlw	24
 11809  01084A  0100               	movlb	0	; () banked
 11810  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 11811  01084E  0E00               	movlw	0
 11812  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11813  010852  0E00               	movlw	0
 11814  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11815  010856  0E00               	movlw	0
 11816  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11817  01085A  ECB4  F0AD         	call	___llmod	;wreg free
 11818  01085E  C06D  F1D6         	movff	?___llmod,_display_LCD$7055
 11819  010862  C06E  F1D7         	movff	?___llmod+1,_display_LCD$7055+1
 11820  010866  C06F  F1D8         	movff	?___llmod+2,_display_LCD$7055+2
 11821  01086A  C070  F1D9         	movff	?___llmod+3,_display_LCD$7055+3
 11822                           
 11823                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11824                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11825                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11826                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11827                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11828  01086E  0E3C               	movlw	60
 11829  010870  0100               	movlb	0	; () banked
 11830  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 11831  010874  0E00               	movlw	0
 11832  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11833  010878  0E00               	movlw	0
 11834  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11835  01087C  0E00               	movlw	0
 11836  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11837  010880  0100               	movlb	0	; () banked
 11838  010882  51FB               	movf	_print_port& (0+255),w,b
 11839  010884  0D17               	mullw	23
 11840  010886  0E10               	movlw	16
 11841  010888  26F3               	addwf	prodl,f,c
 11842  01088A  0E00               	movlw	0
 11843  01088C  22F4               	addwfc	prodh,f,c
 11844  01088E  0E2E               	movlw	low _port
 11845  010890  24F3               	addwf	prodl,w,c
 11846  010892  6ED9               	movwf	fsr2l,c
 11847  010894  0E01               	movlw	high _port
 11848  010896  20F4               	addwfc	prodh,w,c
 11849  010898  6EDA               	movwf	fsr2h,c
 11850  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11851  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11852  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11853  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11854  0108AA  EC51  F0AB         	call	___lldiv	;wreg free
 11855  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11856  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11857  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11858  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11859  0108BE  0E3C               	movlw	60
 11860  0108C0  0100               	movlb	0	; () banked
 11861  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 11862  0108C4  0E00               	movlw	0
 11863  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11864  0108C8  0E00               	movlw	0
 11865  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11866  0108CC  0E00               	movlw	0
 11867  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11868  0108D0  ECB4  F0AD         	call	___llmod	;wreg free
 11869  0108D4  C06D  F1DA         	movff	?___llmod,_display_LCD$7056
 11870  0108D8  C06E  F1DB         	movff	?___llmod+1,_display_LCD$7056+1
 11871  0108DC  C06F  F1DC         	movff	?___llmod+2,_display_LCD$7056+2
 11872  0108E0  C070  F1DD         	movff	?___llmod+3,_display_LCD$7056+3
 11873                           
 11874                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11875                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11876                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11877                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11878                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11879  0108E4  0100               	movlb	0	; () banked
 11880  0108E6  51FB               	movf	_print_port& (0+255),w,b
 11881  0108E8  0D17               	mullw	23
 11882  0108EA  0E10               	movlw	16
 11883  0108EC  26F3               	addwf	prodl,f,c
 11884  0108EE  0E00               	movlw	0
 11885  0108F0  22F4               	addwfc	prodh,f,c
 11886  0108F2  0E2E               	movlw	low _port
 11887  0108F4  24F3               	addwf	prodl,w,c
 11888  0108F6  6ED9               	movwf	fsr2l,c
 11889  0108F8  0E01               	movlw	high _port
 11890  0108FA  20F4               	addwfc	prodh,w,c
 11891  0108FC  6EDA               	movwf	fsr2h,c
 11892  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 11893  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 11894  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 11895  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 11896  01090E  0E3C               	movlw	60
 11897  010910  0100               	movlb	0	; () banked
 11898  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 11899  010914  0E00               	movlw	0
 11900  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11901  010918  0E00               	movlw	0
 11902  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11903  01091C  0E00               	movlw	0
 11904  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11905  010920  ECB4  F0AD         	call	___llmod	;wreg free
 11906  010924  C06D  F1DE         	movff	?___llmod,_display_LCD$7057
 11907  010928  C06E  F1DF         	movff	?___llmod+1,_display_LCD$7057+1
 11908  01092C  C06F  F1E0         	movff	?___llmod+2,_display_LCD$7057+2
 11909  010930  C070  F1E1         	movff	?___llmod+3,_display_LCD$7057+3
 11910                           
 11911                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11912                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11913                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11914                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11915                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11916  010934  0EBA               	movlw	low display_LCD@str_5618
 11917  010936  0100               	movlb	0	; () banked
 11918  010938  6F83               	movwf	sprintf@sp& (0+255),b
 11919  01093A  0E01               	movlw	high display_LCD@str_5618
 11920  01093C  0100               	movlb	0	; () banked
 11921  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11922  010940  0E01               	movlw	low STR_73
 11923  010942  0100               	movlb	0	; () banked
 11924  010944  6F85               	movwf	sprintf@f& (0+255),b
 11925  010946  0EFE               	movlw	high STR_73
 11926  010948  0100               	movlb	0	; () banked
 11927  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11928  01094C  C1D2  F087         	movff	_display_LCD$7054,?_sprintf+4
 11929  010950  C1D3  F088         	movff	_display_LCD$7054+1,?_sprintf+5
 11930  010954  C1D4  F089         	movff	_display_LCD$7054+2,?_sprintf+6
 11931  010958  C1D5  F08A         	movff	_display_LCD$7054+3,?_sprintf+7
 11932  01095C  C1D6  F08B         	movff	_display_LCD$7055,?_sprintf+8
 11933  010960  C1D7  F08C         	movff	_display_LCD$7055+1,?_sprintf+9
 11934  010964  C1D8  F08D         	movff	_display_LCD$7055+2,?_sprintf+10
 11935  010968  C1D9  F08E         	movff	_display_LCD$7055+3,?_sprintf+11
 11936  01096C  C1DA  F08F         	movff	_display_LCD$7056,?_sprintf+12
 11937  010970  C1DB  F090         	movff	_display_LCD$7056+1,?_sprintf+13
 11938  010974  C1DC  F091         	movff	_display_LCD$7056+2,?_sprintf+14
 11939  010978  C1DD  F092         	movff	_display_LCD$7056+3,?_sprintf+15
 11940  01097C  C1DE  F093         	movff	_display_LCD$7057,?_sprintf+16
 11941  010980  C1DF  F094         	movff	_display_LCD$7057+1,?_sprintf+17
 11942  010984  C1E0  F095         	movff	_display_LCD$7057+2,?_sprintf+18
 11943  010988  C1E1  F096         	movff	_display_LCD$7057+3,?_sprintf+19
 11944  01098C  EC00  F080         	call	_sprintf	;wreg free
 11945                           
 11946                           ;LCD_print.c: 79: }
 11947                           
 11948                           ;LCD_print.c: 78: break;
 11949  010990  D00A               	goto	l12641
 11950  010992                     l12639:
 11951  010992  501D               	movf	_data_item,w,c
 11952                           
 11953                           ; Switch size 1, requested type "space"
 11954                           ; Number of cases is 3, Range of values is 0 to 2
 11955                           ; switch strategies available:
 11956                           ; Name         Instructions Cycles
 11957                           ; simple_byte           10     6 (average)
 11958                           ;	Chosen strategy is simple_byte
 11959  010994  0A00               	xorlw	0	; case 0
 11960  010996  B4D8               	btfsc	status,2,c
 11961  010998  D681               	goto	l12621
 11962  01099A  0A01               	xorlw	1	; case 1
 11963  01099C  B4D8               	btfsc	status,2,c
 11964  01099E  D6C5               	goto	l12623
 11965  0109A0  0A03               	xorlw	3	; case 2
 11966  0109A2  B4D8               	btfsc	status,2,c
 11967  0109A4  D6E6               	goto	l12625
 11968  0109A6                     l12641:
 11969                           
 11970                           ;LCD_print.c: 80: ST7032_cursor(0, 1);
 11971  0109A6  0E01               	movlw	1
 11972  0109A8  0100               	movlb	0	; () banked
 11973  0109AA  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11974  0109AC  0E00               	movlw	0
 11975  0109AE  ECA7  F0B5         	call	_ST7032_cursor
 11976                           
 11977                           ;LCD_print.c: 81: ST7032_puts(str);
 11978  0109B2  0EBA               	movlw	low display_LCD@str_5618
 11979  0109B4  0100               	movlb	0	; () banked
 11980  0109B6  6F70               	movwf	ST7032_puts@s& (0+255),b
 11981  0109B8  0E01               	movlw	high display_LCD@str_5618
 11982  0109BA  0100               	movlb	0	; () banked
 11983  0109BC  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11984  0109BE  EC87  F0B3         	call	_ST7032_puts	;wreg free
 11985                           
 11986                           ;LCD_print.c: 84: }
 11987                           
 11988                           ;LCD_print.c: 82: }
 11989                           ;LCD_print.c: 83: break;
 11990  0109C2  0012               	return	
 11991  0109C4                     l12647:
 11992  0109C4  501F               	movf	_print_item,w,c
 11993                           
 11994                           ; Switch size 1, requested type "space"
 11995                           ; Number of cases is 4, Range of values is 0 to 3
 11996                           ; switch strategies available:
 11997                           ; Name         Instructions Cycles
 11998                           ; simple_byte           13     7 (average)
 11999                           ;	Chosen strategy is simple_byte
 12000  0109C6  0A00               	xorlw	0	; case 0
 12001  0109C8  B4D8               	btfsc	status,2,c
 12002  0109CA  D5AB               	goto	l12599
 12003  0109CC  0A01               	xorlw	1	; case 1
 12004  0109CE  B4D8               	btfsc	status,2,c
 12005  0109D0  D5C5               	goto	l12605
 12006  0109D2  0A03               	xorlw	3	; case 2
 12007  0109D4  B4D8               	btfsc	status,2,c
 12008  0109D6  D5F3               	goto	l12615
 12009  0109D8  0A01               	xorlw	1	; case 3
 12010  0109DA  A4D8               	btfss	status,2,c
 12011  0109DC  0012               	return	
 12012  0109DE  D5A1               	goto	l12599
 12013  0109E0                     __end_of_display_LCD:
 12014                           	opt stack 0
 12015                           tblptru	equ	0xFF8
 12016                           tblptrh	equ	0xFF7
 12017                           tblptrl	equ	0xFF6
 12018                           tablat	equ	0xFF5
 12019                           prodh	equ	0xFF4
 12020                           prodl	equ	0xFF3
 12021                           intcon	equ	0xFF2
 12022                           indf0	equ	0xFEF
 12023                           postinc0	equ	0xFEE
 12024                           fsr0h	equ	0xFEA
 12025                           fsr0l	equ	0xFE9
 12026                           wreg	equ	0xFE8
 12027                           postinc1	equ	0xFE6
 12028                           postdec1	equ	0xFE5
 12029                           fsr1h	equ	0xFE2
 12030                           fsr1l	equ	0xFE1
 12031                           indf2	equ	0xFDF
 12032                           postinc2	equ	0xFDE
 12033                           postdec2	equ	0xFDD
 12034                           plusw2	equ	0xFDB
 12035                           fsr2h	equ	0xFDA
 12036                           fsr2l	equ	0xFD9
 12037                           status	equ	0xFD8
 12038                           
 12039 ;; *************** function _display_time_1602 *****************
 12040 ;; Defined at:
 12041 ;;		line 121 in file "../My_library/My_RTCC.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  tm              2   83[BANK0 ] PTR struct .
 12044 ;;		 -> now(14), 
 12045 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 12046 ;;		 -> display_LCD@str(40), 
 12047 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 12048 ;;		 -> display_LCD@str(40), 
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;		None
 12051 ;; Return value:  Size  Location     Type
 12052 ;;		None               void
 12053 ;; Registers used:
 12054 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 0/0
 12057 ;;		On exit  : 0/0
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12062 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12063 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12064 ;;Total ram usage:        7 bytes
 12065 ;; Hardware stack levels used:    1
 12066 ;; Hardware stack levels required when called:   16
 12067 ;; This function calls:
 12068 ;;		_RTCC_from_RTCC
 12069 ;;		_display_dec
 12070 ;;		_strcat
 12071 ;;		_strcpy
 12072 ;; This function is called by:
 12073 ;;		_display_LCD
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text32
 12078  0113BE                     __ptext32:
 12079                           	opt stack 0
 12080  0113BE                     _display_time_1602:
 12081                           	opt stack 12
 12082                           
 12083                           ;My_RTCC.c: 122: RTCC_from_RTCC(&now);
 12084                           
 12085                           ;incstack = 0
 12086  0113BE  0E73               	movlw	low _now
 12087  0113C0  0100               	movlb	0	; () banked
 12088  0113C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12089  0113C4  0E01               	movlw	high _now
 12090  0113C6  0100               	movlb	0	; () banked
 12091  0113C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12092  0113CA  EC52  F0B7         	call	_RTCC_from_RTCC	;wreg free
 12093                           
 12094                           ;My_RTCC.c: 124: strcpy(line0, "");
 12095  0113CE  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 12096  0113D2  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 12097  0113D6  0EE6               	movlw	low (STR_19+3)
 12098  0113D8  0100               	movlb	0	; () banked
 12099  0113DA  6F62               	movwf	strcpy@from& (0+255),b
 12100  0113DC  0EFF               	movlw	high (STR_19+3)
 12101  0113DE  0100               	movlb	0	; () banked
 12102  0113E0  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12103  0113E2  EC3A  F0B5         	call	_strcpy	;wreg free
 12104                           
 12105                           ;My_RTCC.c: 125: display_dec(line0, 20, tm->edit.flag.YY);
 12106  0113E6  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12107  0113EA  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12108  0113EE  0E14               	movlw	20
 12109  0113F0  0100               	movlb	0	; () banked
 12110  0113F2  6FAD               	movwf	display_dec@dec& (0+255),b
 12111  0113F4  0100               	movlb	0	; () banked
 12112  0113F6  EE20 F00D          	lfsr	2,13
 12113  0113FA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12114  0113FC  26D9               	addwf	fsr2l,f,c
 12115  0113FE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12116  011400  22DA               	addwfc	fsr2h,f,c
 12117  011402  0E00               	movlw	0
 12118  011404  BADF               	btfsc	indf2,5,c
 12119  011406  0E01               	movlw	1
 12120  011408  0100               	movlb	0	; () banked
 12121  01140A  6FAE               	movwf	display_dec@edit& (0+255),b
 12122  01140C  EC6D  F0B1         	call	_display_dec	;wreg free
 12123                           
 12124                           ;My_RTCC.c: 126: display_dec(line0, tm->YY, tm->edit.flag.YY);
 12125  011410  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12126  011414  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12127  011418  0100               	movlb	0	; () banked
 12128  01141A  EE20 F00A          	lfsr	2,10
 12129  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12130  011420  26D9               	addwf	fsr2l,f,c
 12131  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12132  011424  22DA               	addwfc	fsr2h,f,c
 12133  011426  50DF               	movf	indf2,w,c
 12134  011428  0100               	movlb	0	; () banked
 12135  01142A  6FAD               	movwf	display_dec@dec& (0+255),b
 12136  01142C  0100               	movlb	0	; () banked
 12137  01142E  EE20 F00D          	lfsr	2,13
 12138  011432  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12139  011434  26D9               	addwf	fsr2l,f,c
 12140  011436  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12141  011438  22DA               	addwfc	fsr2h,f,c
 12142  01143A  0E00               	movlw	0
 12143  01143C  BADF               	btfsc	indf2,5,c
 12144  01143E  0E01               	movlw	1
 12145  011440  0100               	movlb	0	; () banked
 12146  011442  6FAE               	movwf	display_dec@edit& (0+255),b
 12147  011444  EC6D  F0B1         	call	_display_dec	;wreg free
 12148                           
 12149                           ;My_RTCC.c: 127: strcat(line0, "/");
 12150  011448  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12151  01144C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12152  011450  0EFB               	movlw	low STR_4
 12153  011452  0100               	movlb	0	; () banked
 12154  011454  6F62               	movwf	strcat@from& (0+255),b
 12155  011456  0EFF               	movlw	high STR_4
 12156  011458  0100               	movlb	0	; () banked
 12157  01145A  6F63               	movwf	(strcat@from+1)& (0+255),b
 12158  01145C  ECCD  F0B2         	call	_strcat	;wreg free
 12159                           
 12160                           ;My_RTCC.c: 128: display_dec(line0, tm->MM, tm->edit.flag.MM);
 12161  011460  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12162  011464  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12163  011468  0100               	movlb	0	; () banked
 12164  01146A  EE20 F009          	lfsr	2,9
 12165  01146E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12166  011470  26D9               	addwf	fsr2l,f,c
 12167  011472  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12168  011474  22DA               	addwfc	fsr2h,f,c
 12169  011476  50DF               	movf	indf2,w,c
 12170  011478  0100               	movlb	0	; () banked
 12171  01147A  6FAD               	movwf	display_dec@dec& (0+255),b
 12172  01147C  0100               	movlb	0	; () banked
 12173  01147E  EE20 F00D          	lfsr	2,13
 12174  011482  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12175  011484  26D9               	addwf	fsr2l,f,c
 12176  011486  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12177  011488  22DA               	addwfc	fsr2h,f,c
 12178  01148A  0E00               	movlw	0
 12179  01148C  B8DF               	btfsc	indf2,4,c
 12180  01148E  0E01               	movlw	1
 12181  011490  0100               	movlb	0	; () banked
 12182  011492  6FAE               	movwf	display_dec@edit& (0+255),b
 12183  011494  EC6D  F0B1         	call	_display_dec	;wreg free
 12184                           
 12185                           ;My_RTCC.c: 129: strcat(line0, "/");
 12186  011498  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12187  01149C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12188  0114A0  0EFB               	movlw	low STR_4
 12189  0114A2  0100               	movlb	0	; () banked
 12190  0114A4  6F62               	movwf	strcat@from& (0+255),b
 12191  0114A6  0EFF               	movlw	high STR_4
 12192  0114A8  0100               	movlb	0	; () banked
 12193  0114AA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12194  0114AC  ECCD  F0B2         	call	_strcat	;wreg free
 12195                           
 12196                           ;My_RTCC.c: 130: display_dec(line0, tm->DD, tm->edit.flag.DD);
 12197  0114B0  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12198  0114B4  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12199  0114B8  0100               	movlb	0	; () banked
 12200  0114BA  EE20 F008          	lfsr	2,8
 12201  0114BE  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12202  0114C0  26D9               	addwf	fsr2l,f,c
 12203  0114C2  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12204  0114C4  22DA               	addwfc	fsr2h,f,c
 12205  0114C6  50DF               	movf	indf2,w,c
 12206  0114C8  0100               	movlb	0	; () banked
 12207  0114CA  6FAD               	movwf	display_dec@dec& (0+255),b
 12208  0114CC  0100               	movlb	0	; () banked
 12209  0114CE  EE20 F00D          	lfsr	2,13
 12210  0114D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12211  0114D4  26D9               	addwf	fsr2l,f,c
 12212  0114D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12213  0114D8  22DA               	addwfc	fsr2h,f,c
 12214  0114DA  0E00               	movlw	0
 12215  0114DC  B6DF               	btfsc	indf2,3,c
 12216  0114DE  0E01               	movlw	1
 12217  0114E0  0100               	movlb	0	; () banked
 12218  0114E2  6FAE               	movwf	display_dec@edit& (0+255),b
 12219  0114E4  EC6D  F0B1         	call	_display_dec	;wreg free
 12220                           
 12221                           ;My_RTCC.c: 131: strcat(line0, "(");
 12222  0114E8  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12223  0114EC  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12224  0114F0  0EF7               	movlw	low STR_13
 12225  0114F2  0100               	movlb	0	; () banked
 12226  0114F4  6F62               	movwf	strcat@from& (0+255),b
 12227  0114F6  0EFF               	movlw	high STR_13
 12228  0114F8  0100               	movlb	0	; () banked
 12229  0114FA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12230  0114FC  ECCD  F0B2         	call	_strcat	;wreg free
 12231                           
 12232                           ;My_RTCC.c: 132: strcat(line0, weekday_3char[tm->EE]);
 12233  011500  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12234  011504  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12235  011508  0100               	movlb	0	; () banked
 12236  01150A  EE20 F007          	lfsr	2,7
 12237  01150E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12238  011510  26D9               	addwf	fsr2l,f,c
 12239  011512  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12240  011514  22DA               	addwfc	fsr2h,f,c
 12241  011516  50DF               	movf	indf2,w,c
 12242  011518  0100               	movlb	0	; () banked
 12243  01151A  6FB9               	movwf	??_display_time_1602& (0+255),b
 12244  01151C  0100               	movlb	0	; () banked
 12245  01151E  51B9               	movf	??_display_time_1602& (0+255),w,b
 12246  011520  0D04               	mullw	4
 12247  011522  0EA4               	movlw	low _weekday_3char
 12248  011524  24F3               	addwf	prodl,w,c
 12249  011526  0100               	movlb	0	; () banked
 12250  011528  6F62               	movwf	strcat@from& (0+255),b
 12251  01152A  0EFB               	movlw	high _weekday_3char
 12252  01152C  20F4               	addwfc	prodh,w,c
 12253  01152E  0100               	movlb	0	; () banked
 12254  011530  6F63               	movwf	(strcat@from+1)& (0+255),b
 12255  011532  ECCD  F0B2         	call	_strcat	;wreg free
 12256                           
 12257                           ;My_RTCC.c: 133: strcat(line0, ")");
 12258  011536  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12259  01153A  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12260  01153E  0E8F               	movlw	low (STR_118+5)
 12261  011540  0100               	movlb	0	; () banked
 12262  011542  6F62               	movwf	strcat@from& (0+255),b
 12263  011544  0EFF               	movlw	high (STR_118+5)
 12264  011546  0100               	movlb	0	; () banked
 12265  011548  6F63               	movwf	(strcat@from+1)& (0+255),b
 12266  01154A  ECCD  F0B2         	call	_strcat	;wreg free
 12267                           
 12268                           ;My_RTCC.c: 135: strcpy(line1, "        ");
 12269  01154E  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 12270  011552  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 12271  011556  0E79               	movlw	low STR_15
 12272  011558  0100               	movlb	0	; () banked
 12273  01155A  6F62               	movwf	strcpy@from& (0+255),b
 12274  01155C  0EFF               	movlw	high STR_15
 12275  01155E  0100               	movlb	0	; () banked
 12276  011560  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12277  011562  EC3A  F0B5         	call	_strcpy	;wreg free
 12278                           
 12279                           ;My_RTCC.c: 136: display_dec(line1, tm->hh, tm->edit.flag.hh);
 12280  011566  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12281  01156A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12282  01156E  0100               	movlb	0	; () banked
 12283  011570  EE20 F006          	lfsr	2,6
 12284  011574  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12285  011576  26D9               	addwf	fsr2l,f,c
 12286  011578  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12287  01157A  22DA               	addwfc	fsr2h,f,c
 12288  01157C  50DF               	movf	indf2,w,c
 12289  01157E  0100               	movlb	0	; () banked
 12290  011580  6FAD               	movwf	display_dec@dec& (0+255),b
 12291  011582  0100               	movlb	0	; () banked
 12292  011584  EE20 F00D          	lfsr	2,13
 12293  011588  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12294  01158A  26D9               	addwf	fsr2l,f,c
 12295  01158C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12296  01158E  22DA               	addwfc	fsr2h,f,c
 12297  011590  0E00               	movlw	0
 12298  011592  B4DF               	btfsc	indf2,2,c
 12299  011594  0E01               	movlw	1
 12300  011596  0100               	movlb	0	; () banked
 12301  011598  6FAE               	movwf	display_dec@edit& (0+255),b
 12302  01159A  EC6D  F0B1         	call	_display_dec	;wreg free
 12303                           
 12304                           ;My_RTCC.c: 137: if (tm->colon) strcat(line1, ":");
 12305  01159E  0100               	movlb	0	; () banked
 12306  0115A0  EE20 F00B          	lfsr	2,11
 12307  0115A4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12308  0115A6  26D9               	addwf	fsr2l,f,c
 12309  0115A8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12310  0115AA  22DA               	addwfc	fsr2h,f,c
 12311  0115AC  50DF               	movf	indf2,w,c
 12312  0115AE  B4D8               	btfsc	status,2,c
 12313  0115B0  D00D               	goto	l11769
 12314                           
 12315                           ; BSR set to: 0
 12316  0115B2  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12317  0115B6  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12318  0115BA  0EFD               	movlw	low STR_7
 12319  0115BC  0100               	movlb	0	; () banked
 12320  0115BE  6F62               	movwf	strcat@from& (0+255),b
 12321  0115C0  0EFF               	movlw	high STR_7
 12322  0115C2  0100               	movlb	0	; () banked
 12323  0115C4  6F63               	movwf	(strcat@from+1)& (0+255),b
 12324  0115C6  ECCD  F0B2         	call	_strcat	;wreg free
 12325  0115CA  D00C               	goto	l11771
 12326  0115CC                     l11769:
 12327                           
 12328                           ;My_RTCC.c: 138: else strcat(line1, " ");
 12329  0115CC  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12330  0115D0  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12331  0115D4  0E80               	movlw	low (STR_15+7)
 12332  0115D6  0100               	movlb	0	; () banked
 12333  0115D8  6F62               	movwf	strcat@from& (0+255),b
 12334  0115DA  0EFF               	movlw	high (STR_15+7)
 12335  0115DC  0100               	movlb	0	; () banked
 12336  0115DE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12337  0115E0  ECCD  F0B2         	call	_strcat	;wreg free
 12338  0115E4                     l11771:
 12339                           
 12340                           ;My_RTCC.c: 139: display_dec(line1, tm->mm, tm->edit.flag.mm);
 12341  0115E4  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12342  0115E8  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12343  0115EC  0100               	movlb	0	; () banked
 12344  0115EE  EE20 F005          	lfsr	2,5
 12345  0115F2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12346  0115F4  26D9               	addwf	fsr2l,f,c
 12347  0115F6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12348  0115F8  22DA               	addwfc	fsr2h,f,c
 12349  0115FA  50DF               	movf	indf2,w,c
 12350  0115FC  0100               	movlb	0	; () banked
 12351  0115FE  6FAD               	movwf	display_dec@dec& (0+255),b
 12352  011600  0100               	movlb	0	; () banked
 12353  011602  EE20 F00D          	lfsr	2,13
 12354  011606  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12355  011608  26D9               	addwf	fsr2l,f,c
 12356  01160A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12357  01160C  22DA               	addwfc	fsr2h,f,c
 12358  01160E  0E00               	movlw	0
 12359  011610  B2DF               	btfsc	indf2,1,c
 12360  011612  0E01               	movlw	1
 12361  011614  0100               	movlb	0	; () banked
 12362  011616  6FAE               	movwf	display_dec@edit& (0+255),b
 12363  011618  EC6D  F0B1         	call	_display_dec	;wreg free
 12364                           
 12365                           ;My_RTCC.c: 140: strcat(line1, "-");
 12366  01161C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12367  011620  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12368  011624  0EF9               	movlw	low STR_9
 12369  011626  0100               	movlb	0	; () banked
 12370  011628  6F62               	movwf	strcat@from& (0+255),b
 12371  01162A  0EFF               	movlw	high STR_9
 12372  01162C  0100               	movlb	0	; () banked
 12373  01162E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12374  011630  ECCD  F0B2         	call	_strcat	;wreg free
 12375                           
 12376                           ;My_RTCC.c: 141: display_dec(line1, tm->ss, tm->edit.flag.ss);
 12377  011634  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12378  011638  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12379  01163C  0100               	movlb	0	; () banked
 12380  01163E  EE20 F004          	lfsr	2,4
 12381  011642  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12382  011644  26D9               	addwf	fsr2l,f,c
 12383  011646  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12384  011648  22DA               	addwfc	fsr2h,f,c
 12385  01164A  50DF               	movf	indf2,w,c
 12386  01164C  0100               	movlb	0	; () banked
 12387  01164E  6FAD               	movwf	display_dec@dec& (0+255),b
 12388  011650  0100               	movlb	0	; () banked
 12389  011652  EE20 F00D          	lfsr	2,13
 12390  011656  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12391  011658  26D9               	addwf	fsr2l,f,c
 12392  01165A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12393  01165C  22DA               	addwfc	fsr2h,f,c
 12394  01165E  0E00               	movlw	0
 12395  011660  B0DF               	btfsc	indf2,0,c
 12396  011662  0E01               	movlw	1
 12397  011664  0100               	movlb	0	; () banked
 12398  011666  6FAE               	movwf	display_dec@edit& (0+255),b
 12399  011668  EC6D  F0B1         	call	_display_dec	;wreg free
 12400  01166C  0012               	return		;funcret
 12401  01166E                     __end_of_display_time_1602:
 12402                           	opt stack 0
 12403                           tblptru	equ	0xFF8
 12404                           tblptrh	equ	0xFF7
 12405                           tblptrl	equ	0xFF6
 12406                           tablat	equ	0xFF5
 12407                           prodh	equ	0xFF4
 12408                           prodl	equ	0xFF3
 12409                           intcon	equ	0xFF2
 12410                           indf0	equ	0xFEF
 12411                           postinc0	equ	0xFEE
 12412                           fsr0h	equ	0xFEA
 12413                           fsr0l	equ	0xFE9
 12414                           wreg	equ	0xFE8
 12415                           postinc1	equ	0xFE6
 12416                           postdec1	equ	0xFE5
 12417                           fsr1h	equ	0xFE2
 12418                           fsr1l	equ	0xFE1
 12419                           indf2	equ	0xFDF
 12420                           postinc2	equ	0xFDE
 12421                           postdec2	equ	0xFDD
 12422                           plusw2	equ	0xFDB
 12423                           fsr2h	equ	0xFDA
 12424                           fsr2l	equ	0xFD9
 12425                           status	equ	0xFD8
 12426                           
 12427 ;; *************** function _strcpy *****************
 12428 ;; Defined at:
 12429 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12432 ;;		 -> settings_integrating_reset@str_6175(20), settings_integrating_reset@str(20), settings_led_indicator@str_6158(20)
      +, settings_led_indicator@str(20), 
 12433 ;;		 -> settings_auto_stop@str_6141(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12434 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12435 ;;		 -> STR_100(6), STR_99(6), STR_97(6), STR_96(6), 
 12436 ;;		 -> STR_92(6), STR_91(6), STR_89(6), STR_88(6), 
 12437 ;;		 -> STR_84(6), STR_83(6), STR_81(6), STR_80(6), 
 12438 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12441 ;;		 -> settings_integrating_reset@str_6175(20), settings_integrating_reset@str(20), settings_led_indicator@str_6158(20)
      +, settings_led_indicator@str(20), 
 12442 ;;		 -> settings_auto_stop@str_6141(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  2    0[BANK0 ] PTR unsigned char 
 12445 ;; Registers used:
 12446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/0
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12455 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12456 ;;Total ram usage:        6 bytes
 12457 ;; Hardware stack levels used:    1
 12458 ;; Hardware stack levels required when called:   12
 12459 ;; This function calls:
 12460 ;;		Nothing
 12461 ;; This function is called by:
 12462 ;;		_display_time_1602
 12463 ;;		_settings_auto_stop
 12464 ;;		_settings_led_indicator
 12465 ;;		_settings_integrating_reset
 12466 ;;		_display_time_0802
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text33
 12471  016A74                     __ptext33:
 12472                           	opt stack 0
 12473  016A74                     _strcpy:
 12474                           	opt stack 15
 12475                           
 12476                           ;incstack = 0
 12477  016A74  C060  F064         	movff	strcpy@to,strcpy@cp
 12478  016A78  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 12479  016A7C  D006               	goto	l11259
 12480  016A7E                     l11257:
 12481  016A7E  0100               	movlb	0	; () banked
 12482  016A80  4B64               	infsnz	strcpy@cp& (0+255),f,b
 12483  016A82  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 12484  016A84  0100               	movlb	0	; () banked
 12485  016A86  4B62               	infsnz	strcpy@from& (0+255),f,b
 12486  016A88  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 12487  016A8A                     l11259:
 12488  016A8A  C062  FFF6         	movff	strcpy@from,tblptrl
 12489  016A8E  C063  FFF7         	movff	strcpy@from+1,tblptrh
 12490  016A92                     	if	0	;tblptru may be non-zero
 12491  016A92                     	endif
 12492  016A92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12493  016A92  0E00               	movlw	low (__mediumconst shr (0+16))
 12494  016A94  6EF8               	movwf	tblptru,c
 12495  016A96                     	endif
 12496  016A96  C064  FFD9         	movff	strcpy@cp,fsr2l
 12497  016A9A  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 12498  016A9E  0008               	tblrd		*
 12499  016AA0  CFF5 FFDF          	movff	tablat,indf2
 12500  016AA4  50DF               	movf	indf2,w,c
 12501  016AA6  B4D8               	btfsc	status,2,c
 12502  016AA8  0012               	return	
 12503  016AAA  D7E9               	goto	l11257
 12504  016AAC                     __end_of_strcpy:
 12505                           	opt stack 0
 12506                           tblptru	equ	0xFF8
 12507                           tblptrh	equ	0xFF7
 12508                           tblptrl	equ	0xFF6
 12509                           tablat	equ	0xFF5
 12510                           prodh	equ	0xFF4
 12511                           prodl	equ	0xFF3
 12512                           intcon	equ	0xFF2
 12513                           indf0	equ	0xFEF
 12514                           postinc0	equ	0xFEE
 12515                           fsr0h	equ	0xFEA
 12516                           fsr0l	equ	0xFE9
 12517                           wreg	equ	0xFE8
 12518                           postinc1	equ	0xFE6
 12519                           postdec1	equ	0xFE5
 12520                           fsr1h	equ	0xFE2
 12521                           fsr1l	equ	0xFE1
 12522                           indf2	equ	0xFDF
 12523                           postinc2	equ	0xFDE
 12524                           postdec2	equ	0xFDD
 12525                           plusw2	equ	0xFDB
 12526                           fsr2h	equ	0xFDA
 12527                           fsr2l	equ	0xFD9
 12528                           status	equ	0xFD8
 12529                           
 12530 ;; *************** function _display_dec *****************
 12531 ;; Defined at:
 12532 ;;		line 95 in file "../My_library/My_RTCC.c"
 12533 ;; Parameters:    Size  Location     Type
 12534 ;;  str             2   75[BANK0 ] PTR unsigned char 
 12535 ;;		 -> display_LCD@str(40), 
 12536 ;;  dec             1   77[BANK0 ] unsigned char 
 12537 ;;  edit            1   78[BANK0 ] unsigned char 
 12538 ;; Auto vars:     Size  Location     Type
 12539 ;;  s               4   79[BANK0 ] unsigned char [4]
 12540 ;; Return value:  Size  Location     Type
 12541 ;;		None               void
 12542 ;; Registers used:
 12543 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12544 ;; Tracked objects:
 12545 ;;		On entry : 0/0
 12546 ;;		On exit  : 0/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12549 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12550 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12552 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12553 ;;Total ram usage:        8 bytes
 12554 ;; Hardware stack levels used:    1
 12555 ;; Hardware stack levels required when called:   14
 12556 ;; This function calls:
 12557 ;;		_sprintf
 12558 ;;		_strcat
 12559 ;; This function is called by:
 12560 ;;		_display_time_1602
 12561 ;;		_display_time_0802
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text34
 12566  0162DA                     __ptext34:
 12567                           	opt stack 0
 12568  0162DA                     _display_dec:
 12569                           	opt stack 13
 12570                           
 12571                           ;My_RTCC.c: 96: char s[4];
 12572                           ;My_RTCC.c: 97: sprintf(s, "%02d", dec);
 12573                           
 12574                           ;incstack = 0
 12575  0162DA  0EAF               	movlw	low display_dec@s
 12576  0162DC  0100               	movlb	0	; () banked
 12577  0162DE  6F83               	movwf	sprintf@sp& (0+255),b
 12578  0162E0  0E00               	movlw	high display_dec@s
 12579  0162E2  0100               	movlb	0	; () banked
 12580  0162E4  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12581  0162E6  0EFC               	movlw	low (STR_67+27)
 12582  0162E8  0100               	movlb	0	; () banked
 12583  0162EA  6F85               	movwf	sprintf@f& (0+255),b
 12584  0162EC  0EFD               	movlw	high (STR_67+27)
 12585  0162EE  0100               	movlb	0	; () banked
 12586  0162F0  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12587  0162F2  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 12588  0162F6  0100               	movlb	0	; () banked
 12589  0162F8  6B88               	clrf	(?_sprintf+5)& (0+255),b
 12590  0162FA  EC00  F080         	call	_sprintf	;wreg free
 12591                           
 12592                           ;My_RTCC.c: 98: if (edit && now.halfsec)strcat(str, "  ");
 12593  0162FE  0100               	movlb	0	; () banked
 12594  016300  51AE               	movf	display_dec@edit& (0+255),w,b
 12595  016302  0100               	movlb	0	; () banked
 12596  016304  B4D8               	btfsc	status,2,c
 12597  016306  D011               	goto	l11253
 12598                           
 12599                           ; BSR set to: 0
 12600  016308  0101               	movlb	1	; () banked
 12601  01630A  517F               	movf	(_now+12)& (0+255),w,b
 12602  01630C  B4D8               	btfsc	status,2,c
 12603  01630E  D00D               	goto	l11253
 12604                           
 12605                           ; BSR set to: 1
 12606  016310  C0AB  F060         	movff	display_dec@str,strcat@to
 12607  016314  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12608  016318  0E7F               	movlw	low (STR_15+6)
 12609  01631A  0100               	movlb	0	; () banked
 12610  01631C  6F62               	movwf	strcat@from& (0+255),b
 12611  01631E  0EFF               	movlw	high (STR_15+6)
 12612  016320  0100               	movlb	0	; () banked
 12613  016322  6F63               	movwf	(strcat@from+1)& (0+255),b
 12614  016324  ECCD  F0B2         	call	_strcat	;wreg free
 12615  016328  0012               	return	
 12616  01632A                     l11253:
 12617                           
 12618                           ;My_RTCC.c: 99: else strcat(str, s);
 12619  01632A  C0AB  F060         	movff	display_dec@str,strcat@to
 12620  01632E  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12621  016332  0EAF               	movlw	low display_dec@s
 12622  016334  0100               	movlb	0	; () banked
 12623  016336  6F62               	movwf	strcat@from& (0+255),b
 12624  016338  0E00               	movlw	high display_dec@s
 12625  01633A  0100               	movlb	0	; () banked
 12626  01633C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12627  01633E  ECCD  F0B2         	call	_strcat	;wreg free
 12628  016342  0012               	return	
 12629  016344                     __end_of_display_dec:
 12630                           	opt stack 0
 12631                           tblptru	equ	0xFF8
 12632                           tblptrh	equ	0xFF7
 12633                           tblptrl	equ	0xFF6
 12634                           tablat	equ	0xFF5
 12635                           prodh	equ	0xFF4
 12636                           prodl	equ	0xFF3
 12637                           intcon	equ	0xFF2
 12638                           indf0	equ	0xFEF
 12639                           postinc0	equ	0xFEE
 12640                           fsr0h	equ	0xFEA
 12641                           fsr0l	equ	0xFE9
 12642                           wreg	equ	0xFE8
 12643                           postinc1	equ	0xFE6
 12644                           postdec1	equ	0xFE5
 12645                           fsr1h	equ	0xFE2
 12646                           fsr1l	equ	0xFE1
 12647                           indf2	equ	0xFDF
 12648                           postinc2	equ	0xFDE
 12649                           postdec2	equ	0xFDD
 12650                           plusw2	equ	0xFDB
 12651                           fsr2h	equ	0xFDA
 12652                           fsr2l	equ	0xFD9
 12653                           status	equ	0xFD8
 12654                           
 12655 ;; *************** function _strcat *****************
 12656 ;; Defined at:
 12657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12660 ;;		 -> display_LCD@str(40), 
 12661 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12662 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
 12663 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
 12664 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
 12665 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12668 ;;		 -> display_LCD@str(40), 
 12669 ;; Return value:  Size  Location     Type
 12670 ;;                  2    0[BANK0 ] PTR unsigned char 
 12671 ;; Registers used:
 12672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12673 ;; Tracked objects:
 12674 ;;		On entry : 0/0
 12675 ;;		On exit  : 0/0
 12676 ;;		Unchanged: 0/0
 12677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12681 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12682 ;;Total ram usage:        6 bytes
 12683 ;; Hardware stack levels used:    1
 12684 ;; Hardware stack levels required when called:   12
 12685 ;; This function calls:
 12686 ;;		Nothing
 12687 ;; This function is called by:
 12688 ;;		_display_dec
 12689 ;;		_display_time_1602
 12690 ;;		_display_time_0802
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text35
 12695  01659A                     __ptext35:
 12696                           	opt stack 0
 12697  01659A                     _strcat:
 12698                           	opt stack 15
 12699                           
 12700                           ;incstack = 0
 12701  01659A  C060  F064         	movff	strcat@to,strcat@cp
 12702  01659E  C061  F065         	movff	strcat@to+1,strcat@cp+1
 12703  0165A2  D003               	goto	l11145
 12704  0165A4                     l11143:
 12705  0165A4  0100               	movlb	0	; () banked
 12706  0165A6  4B64               	infsnz	strcat@cp& (0+255),f,b
 12707  0165A8  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12708  0165AA                     l11145:
 12709  0165AA  C064  FFD9         	movff	strcat@cp,fsr2l
 12710  0165AE  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12711  0165B2  50DF               	movf	indf2,w,c
 12712  0165B4  B4D8               	btfsc	status,2,c
 12713  0165B6  D007               	goto	l11149
 12714  0165B8  D7F5               	goto	l11143
 12715  0165BA                     l11147:
 12716  0165BA  0100               	movlb	0	; () banked
 12717  0165BC  4B64               	infsnz	strcat@cp& (0+255),f,b
 12718  0165BE  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12719  0165C0  0100               	movlb	0	; () banked
 12720  0165C2  4B62               	infsnz	strcat@from& (0+255),f,b
 12721  0165C4  2B63               	incf	(strcat@from+1)& (0+255),f,b
 12722  0165C6                     l11149:
 12723  0165C6  C062  FFF6         	movff	strcat@from,tblptrl
 12724  0165CA  C063  FFF7         	movff	strcat@from+1,tblptrh
 12725  0165CE  0E00               	movlw	low (__mediumconst shr (0+16))
 12726  0165D0  6EF8               	movwf	tblptru,c
 12727  0165D2  C064  FFD9         	movff	strcat@cp,fsr2l
 12728  0165D6  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12729  0165DA  0E0E               	movlw	(high __ramtop+-1)
 12730  0165DC  64F7               	cpfsgt	tblptrh,c
 12731  0165DE  D003               	bra	u12067
 12732  0165E0  0008               	tblrd		*
 12733  0165E2  50F5               	movf	tablat,w,c
 12734  0165E4  D005               	bra	u12060
 12735  0165E6                     u12067:
 12736  0165E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 12737  0165EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 12738  0165EE  50EF               	movf	indf0,w,c
 12739  0165F0                     u12060:
 12740  0165F0  6EDF               	movwf	indf2,c
 12741  0165F2  50DF               	movf	indf2,w,c
 12742  0165F4  B4D8               	btfsc	status,2,c
 12743  0165F6  0012               	return	
 12744  0165F8  D7E0               	goto	l11147
 12745  0165FA                     __end_of_strcat:
 12746                           	opt stack 0
 12747                           tblptru	equ	0xFF8
 12748                           tblptrh	equ	0xFF7
 12749                           tblptrl	equ	0xFF6
 12750                           tablat	equ	0xFF5
 12751                           prodh	equ	0xFF4
 12752                           prodl	equ	0xFF3
 12753                           intcon	equ	0xFF2
 12754                           indf0	equ	0xFEF
 12755                           postinc0	equ	0xFEE
 12756                           fsr0h	equ	0xFEA
 12757                           fsr0l	equ	0xFE9
 12758                           wreg	equ	0xFE8
 12759                           postinc1	equ	0xFE6
 12760                           postdec1	equ	0xFE5
 12761                           fsr1h	equ	0xFE2
 12762                           fsr1l	equ	0xFE1
 12763                           indf2	equ	0xFDF
 12764                           postinc2	equ	0xFDE
 12765                           postdec2	equ	0xFDD
 12766                           plusw2	equ	0xFDB
 12767                           fsr2h	equ	0xFDA
 12768                           fsr2l	equ	0xFD9
 12769                           status	equ	0xFD8
 12770                           
 12771 ;; *************** function _ST7032_puts *****************
 12772 ;; Defined at:
 12773 ;;		line 39 in file "../My_library/My_ST7032.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 12776 ;;		 -> display_LCD@str_5618(20), display_LCD@str(40), display_char(40), STR_50(16), 
 12777 ;;		 -> STR_49(12), STR_46(13), STR_45(17), 
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;		None
 12780 ;; Return value:  Size  Location     Type
 12781 ;;		None               void
 12782 ;; Registers used:
 12783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12784 ;; Tracked objects:
 12785 ;;		On entry : 0/0
 12786 ;;		On exit  : 0/0
 12787 ;;		Unchanged: 0/0
 12788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12793 ;;Total ram usage:        2 bytes
 12794 ;; Hardware stack levels used:    1
 12795 ;; Hardware stack levels required when called:   15
 12796 ;; This function calls:
 12797 ;;		_ST7032_put
 12798 ;; This function is called by:
 12799 ;;		_sleep_task
 12800 ;;		_bootload
 12801 ;;		_display_LCD
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           	psect	text36
 12806  01670E                     __ptext36:
 12807                           	opt stack 0
 12808  01670E                     _ST7032_puts:
 12809                           	opt stack 12
 12810                           
 12811                           ;My_ST7032.c: 40: while (*s) {
 12812                           
 12813                           ;incstack = 0
 12814  01670E  D016               	goto	l11405
 12815  016710                     l11401:
 12816                           
 12817                           ;My_ST7032.c: 41: ST7032_put(*s++);
 12818  016710  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12819  016714  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12820  016718  0E00               	movlw	low (__mediumconst shr (0+16))
 12821  01671A  6EF8               	movwf	tblptru,c
 12822  01671C  0E0E               	movlw	(high __ramtop+-1)
 12823  01671E  64F7               	cpfsgt	tblptrh,c
 12824  016720  D003               	bra	u12467
 12825  016722  0008               	tblrd		*
 12826  016724  50F5               	movf	tablat,w,c
 12827  016726  D005               	bra	u12460
 12828  016728                     u12467:
 12829  016728  CFF6 FFE9          	movff	tblptrl,fsr0l
 12830  01672C  CFF7 FFEA          	movff	tblptrh,fsr0h
 12831  016730  50EF               	movf	indf0,w,c
 12832  016732                     u12460:
 12833  016732  EC8D  F0B0         	call	_ST7032_put
 12834  016736  0100               	movlb	0	; () banked
 12835  016738  4B70               	infsnz	ST7032_puts@s& (0+255),f,b
 12836  01673A  2B71               	incf	(ST7032_puts@s+1)& (0+255),f,b
 12837  01673C                     l11405:
 12838  01673C  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12839  016740  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12840  016744  0E00               	movlw	low (__mediumconst shr (0+16))
 12841  016746  6EF8               	movwf	tblptru,c
 12842  016748  0E0E               	movlw	(high __ramtop+-1)
 12843  01674A  64F7               	cpfsgt	tblptrh,c
 12844  01674C  D003               	bra	u12477
 12845  01674E  0008               	tblrd		*
 12846  016750  50F5               	movf	tablat,w,c
 12847  016752  D005               	bra	u12470
 12848  016754                     u12477:
 12849  016754  CFF6 FFE9          	movff	tblptrl,fsr0l
 12850  016758  CFF7 FFEA          	movff	tblptrh,fsr0h
 12851  01675C  50EF               	movf	indf0,w,c
 12852  01675E                     u12470:
 12853  01675E  0900               	iorlw	0
 12854  016760  B4D8               	btfsc	status,2,c
 12855  016762  0012               	return	
 12856  016764  D7D5               	goto	l11401
 12857  016766                     __end_of_ST7032_puts:
 12858                           	opt stack 0
 12859                           tblptru	equ	0xFF8
 12860                           tblptrh	equ	0xFF7
 12861                           tblptrl	equ	0xFF6
 12862                           tablat	equ	0xFF5
 12863                           prodh	equ	0xFF4
 12864                           prodl	equ	0xFF3
 12865                           intcon	equ	0xFF2
 12866                           indf0	equ	0xFEF
 12867                           postinc0	equ	0xFEE
 12868                           fsr0h	equ	0xFEA
 12869                           fsr0l	equ	0xFE9
 12870                           wreg	equ	0xFE8
 12871                           postinc1	equ	0xFE6
 12872                           postdec1	equ	0xFE5
 12873                           fsr1h	equ	0xFE2
 12874                           fsr1l	equ	0xFE1
 12875                           indf2	equ	0xFDF
 12876                           postinc2	equ	0xFDE
 12877                           postdec2	equ	0xFDD
 12878                           plusw2	equ	0xFDB
 12879                           fsr2h	equ	0xFDA
 12880                           fsr2l	equ	0xFD9
 12881                           status	equ	0xFD8
 12882                           
 12883 ;; *************** function _ST7032_put *****************
 12884 ;; Defined at:
 12885 ;;		line 31 in file "../My_library/My_ST7032.c"
 12886 ;; Parameters:    Size  Location     Type
 12887 ;;  c               1    wreg     unsigned char 
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;  c               1   15[BANK0 ] unsigned char 
 12890 ;; Return value:  Size  Location     Type
 12891 ;;		None               void
 12892 ;; Registers used:
 12893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12894 ;; Tracked objects:
 12895 ;;		On entry : 0/0
 12896 ;;		On exit  : 0/0
 12897 ;;		Unchanged: 0/0
 12898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12902 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12903 ;;Total ram usage:        1 bytes
 12904 ;; Hardware stack levels used:    1
 12905 ;; Hardware stack levels required when called:   14
 12906 ;; This function calls:
 12907 ;;		_ringbuf_put
 12908 ;; This function is called by:
 12909 ;;		_ST7032_puts
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913                           	psect	text37
 12914  01611A                     __ptext37:
 12915                           	opt stack 0
 12916  01611A                     _ST7032_put:
 12917                           	opt stack 12
 12918                           
 12919                           ;incstack = 0
 12920                           ;ST7032_put@c stored from wreg
 12921  01611A  0100               	movlb	0	; () banked
 12922  01611C  6F6F               	movwf	ST7032_put@c& (0+255),b
 12923                           
 12924                           ;My_ST7032.c: 32: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 12925  01611E  0E23               	movlw	low _lcd_tx
 12926  016120  0100               	movlb	0	; () banked
 12927  016122  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12928  016124  0E00               	movlw	high _lcd_tx
 12929  016126  0100               	movlb	0	; () banked
 12930  016128  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12931  01612A  0E7C               	movlw	124
 12932  01612C  0100               	movlb	0	; () banked
 12933  01612E  6F6A               	movwf	ringbuf_put@data& (0+255),b
 12934  016130  EC99  F0A6         	call	_ringbuf_put	;wreg free
 12935                           
 12936                           ;My_ST7032.c: 33: ringbuf_put(&lcd_tx, 0b11000000);
 12937  016134  0E23               	movlw	low _lcd_tx
 12938  016136  0100               	movlb	0	; () banked
 12939  016138  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12940  01613A  0E00               	movlw	high _lcd_tx
 12941  01613C  0100               	movlb	0	; () banked
 12942  01613E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12943  016140  0EC0               	movlw	192
 12944  016142  0100               	movlb	0	; () banked
 12945  016144  6F6A               	movwf	ringbuf_put@data& (0+255),b
 12946  016146  EC99  F0A6         	call	_ringbuf_put	;wreg free
 12947                           
 12948                           ;My_ST7032.c: 34: ringbuf_put(&lcd_tx, c);
 12949  01614A  0E23               	movlw	low _lcd_tx
 12950  01614C  0100               	movlb	0	; () banked
 12951  01614E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12952  016150  0E00               	movlw	high _lcd_tx
 12953  016152  0100               	movlb	0	; () banked
 12954  016154  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12955  016156  C06F  F06A         	movff	ST7032_put@c,ringbuf_put@data
 12956  01615A  EC99  F0A6         	call	_ringbuf_put	;wreg free
 12957                           
 12958                           ;My_ST7032.c: 35: ringbuf_put(&lcd_tx, 0);
 12959  01615E  0E23               	movlw	low _lcd_tx
 12960  016160  0100               	movlb	0	; () banked
 12961  016162  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12962  016164  0E00               	movlw	high _lcd_tx
 12963  016166  0100               	movlb	0	; () banked
 12964  016168  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12965  01616A  0E00               	movlw	0
 12966  01616C  0100               	movlb	0	; () banked
 12967  01616E  6F6A               	movwf	ringbuf_put@data& (0+255),b
 12968  016170  EC99  F0A6         	call	_ringbuf_put	;wreg free
 12969                           
 12970                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, 1);
 12971  016174  0E23               	movlw	low _lcd_tx
 12972  016176  0100               	movlb	0	; () banked
 12973  016178  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12974  01617A  0E00               	movlw	high _lcd_tx
 12975  01617C  0100               	movlb	0	; () banked
 12976  01617E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12977  016180  0E01               	movlw	1
 12978  016182  0100               	movlb	0	; () banked
 12979  016184  6F6A               	movwf	ringbuf_put@data& (0+255),b
 12980  016186  EC99  F0A6         	call	_ringbuf_put	;wreg free
 12981  01618A  0012               	return		;funcret
 12982  01618C                     __end_of_ST7032_put:
 12983                           	opt stack 0
 12984                           tblptru	equ	0xFF8
 12985                           tblptrh	equ	0xFF7
 12986                           tblptrl	equ	0xFF6
 12987                           tablat	equ	0xFF5
 12988                           prodh	equ	0xFF4
 12989                           prodl	equ	0xFF3
 12990                           intcon	equ	0xFF2
 12991                           indf0	equ	0xFEF
 12992                           postinc0	equ	0xFEE
 12993                           fsr0h	equ	0xFEA
 12994                           fsr0l	equ	0xFE9
 12995                           wreg	equ	0xFE8
 12996                           postinc1	equ	0xFE6
 12997                           postdec1	equ	0xFE5
 12998                           fsr1h	equ	0xFE2
 12999                           fsr1l	equ	0xFE1
 13000                           indf2	equ	0xFDF
 13001                           postinc2	equ	0xFDE
 13002                           postdec2	equ	0xFDD
 13003                           plusw2	equ	0xFDB
 13004                           fsr2h	equ	0xFDA
 13005                           fsr2l	equ	0xFD9
 13006                           status	equ	0xFD8
 13007                           
 13008 ;; *************** function _ST7032_cursor *****************
 13009 ;; Defined at:
 13010 ;;		line 26 in file "../My_library/My_ST7032.c"
 13011 ;; Parameters:    Size  Location     Type
 13012 ;;  col             1    wreg     unsigned char 
 13013 ;;  row             1   17[BANK0 ] unsigned char 
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;  col             1   20[BANK0 ] unsigned char 
 13016 ;;  row_offsets     2   18[BANK0 ] unsigned char [2]
 13017 ;; Return value:  Size  Location     Type
 13018 ;;		None               void
 13019 ;; Registers used:
 13020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13026 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13027 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13029 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13030 ;;Total ram usage:        4 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:   15
 13033 ;; This function calls:
 13034 ;;		_ST7032_command
 13035 ;; This function is called by:
 13036 ;;		_sleep_task
 13037 ;;		_bootload
 13038 ;;		_display_LCD
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           	psect	text38
 13043  016B4E                     __ptext38:
 13044                           	opt stack 0
 13045  016B4E                     _ST7032_cursor:
 13046                           	opt stack 12
 13047                           
 13048                           ;incstack = 0
 13049                           ;ST7032_cursor@col stored from wreg
 13050  016B4E  0100               	movlb	0	; () banked
 13051  016B50  6F74               	movwf	ST7032_cursor@col& (0+255),b
 13052                           
 13053                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
 13054  016B52  C1E4  F072         	movff	ST7032_cursor@F8640,ST7032_cursor@row_offsets
 13055  016B56  C1E5  F073         	movff	ST7032_cursor@F8640+1,ST7032_cursor@row_offsets+1
 13056                           
 13057                           ;My_ST7032.c: 28: ST7032_command(0x80 | (col + row_offsets[row]), 0);
 13058  016B5A  0E00               	movlw	0
 13059  016B5C  0100               	movlb	0	; () banked
 13060  016B5E  6F6F               	movwf	ST7032_command@wait& (0+255),b
 13061  016B60  0100               	movlb	0	; () banked
 13062  016B62  5171               	movf	ST7032_cursor@row& (0+255),w,b
 13063  016B64  0D01               	mullw	1
 13064  016B66  0E72               	movlw	low ST7032_cursor@row_offsets
 13065  016B68  24F3               	addwf	prodl,w,c
 13066  016B6A  6ED9               	movwf	fsr2l,c
 13067  016B6C  0E00               	movlw	high ST7032_cursor@row_offsets
 13068  016B6E  20F4               	addwfc	prodh,w,c
 13069  016B70  6EDA               	movwf	fsr2h,c
 13070  016B72  50DF               	movf	indf2,w,c
 13071  016B74  0100               	movlb	0	; () banked
 13072  016B76  2574               	addwf	ST7032_cursor@col& (0+255),w,b
 13073  016B78  0980               	iorlw	128
 13074  016B7A  ECFF  F0B0         	call	_ST7032_command
 13075  016B7E  0012               	return		;funcret
 13076  016B80                     __end_of_ST7032_cursor:
 13077                           	opt stack 0
 13078                           tblptru	equ	0xFF8
 13079                           tblptrh	equ	0xFF7
 13080                           tblptrl	equ	0xFF6
 13081                           tablat	equ	0xFF5
 13082                           prodh	equ	0xFF4
 13083                           prodl	equ	0xFF3
 13084                           intcon	equ	0xFF2
 13085                           indf0	equ	0xFEF
 13086                           postinc0	equ	0xFEE
 13087                           fsr0h	equ	0xFEA
 13088                           fsr0l	equ	0xFE9
 13089                           wreg	equ	0xFE8
 13090                           postinc1	equ	0xFE6
 13091                           postdec1	equ	0xFE5
 13092                           fsr1h	equ	0xFE2
 13093                           fsr1l	equ	0xFE1
 13094                           indf2	equ	0xFDF
 13095                           postinc2	equ	0xFDE
 13096                           postdec2	equ	0xFDD
 13097                           plusw2	equ	0xFDB
 13098                           fsr2h	equ	0xFDA
 13099                           fsr2l	equ	0xFD9
 13100                           status	equ	0xFD8
 13101                           
 13102 ;; *************** function _data_out *****************
 13103 ;; Defined at:
 13104 ;;		line 248 in file "ChargeStation_task.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 13107 ;;		 -> usb_tx(8), 
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;  i               1  107[BANK0 ] unsigned char 
 13110 ;;  str            30   77[BANK0 ] unsigned char [30]
 13111 ;; Return value:  Size  Location     Type
 13112 ;;		None               void
 13113 ;; Registers used:
 13114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13115 ;; Tracked objects:
 13116 ;;		On entry : 0/0
 13117 ;;		On exit  : 0/0
 13118 ;;		Unchanged: 0/0
 13119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13121 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13123 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13124 ;;Total ram usage:       33 bytes
 13125 ;; Hardware stack levels used:    1
 13126 ;; Hardware stack levels required when called:   15
 13127 ;; This function calls:
 13128 ;;		___lwdiv
 13129 ;;		___lwmod
 13130 ;;		_ringbuf_put_str
 13131 ;;		_sprintf
 13132 ;; This function is called by:
 13133 ;;		_normal_task
 13134 ;; This function uses a non-reentrant model
 13135 ;;
 13136                           
 13137                           	psect	text39
 13138  012E3C                     __ptext39:
 13139                           	opt stack 0
 13140  012E3C                     _data_out:
 13141                           	opt stack 14
 13142                           
 13143                           ;ChargeStation_task.c: 249: char str[30];
 13144                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 13145                           ;ChargeStation_task.c: 251: now.YY,
 13146                           ;ChargeStation_task.c: 252: now.MM,
 13147                           ;ChargeStation_task.c: 253: now.DD,
 13148                           ;ChargeStation_task.c: 254: now.hh,
 13149                           ;ChargeStation_task.c: 255: now.mm,
 13150                           ;ChargeStation_task.c: 256: now.ss
 13151                           ;ChargeStation_task.c: 257: );
 13152                           
 13153                           ;incstack = 0
 13154  012E3C  0EAD               	movlw	low data_out@str
 13155  012E3E  0100               	movlb	0	; () banked
 13156  012E40  6F83               	movwf	sprintf@sp& (0+255),b
 13157  012E42  0E00               	movlw	high data_out@str
 13158  012E44  0100               	movlb	0	; () banked
 13159  012E46  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13160  012E48  0EE1               	movlw	low STR_67
 13161  012E4A  0100               	movlb	0	; () banked
 13162  012E4C  6F85               	movwf	sprintf@f& (0+255),b
 13163  012E4E  0EFD               	movlw	high STR_67
 13164  012E50  0100               	movlb	0	; () banked
 13165  012E52  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13166  012E54  C17D  F087         	movff	_now+10,?_sprintf+4
 13167  012E58  0100               	movlb	0	; () banked
 13168  012E5A  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13169  012E5C  C17C  F089         	movff	_now+9,?_sprintf+6
 13170  012E60  0100               	movlb	0	; () banked
 13171  012E62  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13172  012E64  C17B  F08B         	movff	_now+8,?_sprintf+8
 13173  012E68  0100               	movlb	0	; () banked
 13174  012E6A  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13175  012E6C  C179  F08D         	movff	_now+6,?_sprintf+10
 13176  012E70  0100               	movlb	0	; () banked
 13177  012E72  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 13178  012E74  C178  F08F         	movff	_now+5,?_sprintf+12
 13179  012E78  0100               	movlb	0	; () banked
 13180  012E7A  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13181  012E7C  C177  F091         	movff	_now+4,?_sprintf+14
 13182  012E80  0100               	movlb	0	; () banked
 13183  012E82  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13184  012E84  EC00  F080         	call	_sprintf	;wreg free
 13185                           
 13186                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 13187  012E88  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13188  012E8C  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13189  012E90  0EAD               	movlw	low data_out@str
 13190  012E92  0100               	movlb	0	; () banked
 13191  012E94  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13192  012E96  0E00               	movlw	high data_out@str
 13193  012E98  0100               	movlb	0	; () banked
 13194  012E9A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13195  012E9C  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
 13196                           
 13197                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 13198  012EA0  0E00               	movlw	0
 13199  012EA2  0100               	movlb	0	; () banked
 13200  012EA4  6FCB               	movwf	data_out@i& (0+255),b
 13201  012EA6                     l12655:
 13202                           
 13203                           ; BSR set to: 0
 13204  012EA6  0E02               	movlw	2
 13205  012EA8  0100               	movlb	0	; () banked
 13206  012EAA  65CB               	cpfsgt	data_out@i& (0+255),b
 13207  012EAC  D001               	goto	l12659
 13208  012EAE  D075               	goto	l12667
 13209  012EB0                     l12659:
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 13213                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 13214                           ;ChargeStation_task.c: 262: p[i],
 13215                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 13216                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 13217                           ;ChargeStation_task.c: 265: port[i].integrated_current
 13218                           ;ChargeStation_task.c: 266: );
 13219  012EB0  0EAD               	movlw	low data_out@str
 13220  012EB2  0100               	movlb	0	; () banked
 13221  012EB4  6F83               	movwf	sprintf@sp& (0+255),b
 13222  012EB6  0E00               	movlw	high data_out@str
 13223  012EB8  0100               	movlb	0	; () banked
 13224  012EBA  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13225  012EBC  0E35               	movlw	low STR_68
 13226  012EBE  0100               	movlb	0	; () banked
 13227  012EC0  6F85               	movwf	sprintf@f& (0+255),b
 13228  012EC2  0EFE               	movlw	high STR_68
 13229  012EC4  0100               	movlb	0	; () banked
 13230  012EC6  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13231  012EC8  0100               	movlb	0	; () banked
 13232  012ECA  51CB               	movf	data_out@i& (0+255),w,b
 13233  012ECC  0D02               	mullw	2
 13234  012ECE  0EDC               	movlw	low data_out@p
 13235  012ED0  24F3               	addwf	prodl,w,c
 13236  012ED2  0100               	movlb	0	; () banked
 13237  012ED4  6F87               	movwf	(?_sprintf+4)& (0+255),b
 13238  012ED6  0EFB               	movlw	high data_out@p
 13239  012ED8  20F4               	addwfc	prodh,w,c
 13240  012EDA  0100               	movlb	0	; () banked
 13241  012EDC  6F88               	movwf	(?_sprintf+5)& (0+255),b
 13242  012EDE  0100               	movlb	0	; () banked
 13243  012EE0  51CB               	movf	data_out@i& (0+255),w,b
 13244  012EE2  0D17               	mullw	23
 13245  012EE4  0E06               	movlw	6
 13246  012EE6  26F3               	addwf	prodl,f,c
 13247  012EE8  0E00               	movlw	0
 13248  012EEA  22F4               	addwfc	prodh,f,c
 13249  012EEC  0E2E               	movlw	low _port
 13250  012EEE  24F3               	addwf	prodl,w,c
 13251  012EF0  6ED9               	movwf	fsr2l,c
 13252  012EF2  0E01               	movlw	high _port
 13253  012EF4  20F4               	addwfc	prodh,w,c
 13254  012EF6  6EDA               	movwf	fsr2h,c
 13255  012EF8  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 13256  012EFC  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 13257  012F00  0E03               	movlw	3
 13258  012F02  0100               	movlb	0	; () banked
 13259  012F04  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13260  012F06  0EE8               	movlw	232
 13261  012F08  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13262  012F0A  ECA2  F0AF         	call	___lwdiv	;wreg free
 13263  012F0E  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 13264  012F12  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 13265  012F16  0100               	movlb	0	; () banked
 13266  012F18  51CB               	movf	data_out@i& (0+255),w,b
 13267  012F1A  0D17               	mullw	23
 13268  012F1C  0E06               	movlw	6
 13269  012F1E  26F3               	addwf	prodl,f,c
 13270  012F20  0E00               	movlw	0
 13271  012F22  22F4               	addwfc	prodh,f,c
 13272  012F24  0E2E               	movlw	low _port
 13273  012F26  24F3               	addwf	prodl,w,c
 13274  012F28  6ED9               	movwf	fsr2l,c
 13275  012F2A  0E01               	movlw	high _port
 13276  012F2C  20F4               	addwfc	prodh,w,c
 13277  012F2E  6EDA               	movwf	fsr2h,c
 13278  012F30  CFDE F060          	movff	postinc2,___lwmod@dividend
 13279  012F34  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13280  012F38  0E03               	movlw	3
 13281  012F3A  0100               	movlb	0	; () banked
 13282  012F3C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13283  012F3E  0EE8               	movlw	232
 13284  012F40  6F62               	movwf	___lwmod@divisor& (0+255),b
 13285  012F42  EC6C  F0B2         	call	___lwmod	;wreg free
 13286  012F46  C060  F08B         	movff	?___lwmod,?_sprintf+8
 13287  012F4A  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 13288  012F4E  0100               	movlb	0	; () banked
 13289  012F50  51CB               	movf	data_out@i& (0+255),w,b
 13290  012F52  0D17               	mullw	23
 13291  012F54  0E0C               	movlw	12
 13292  012F56  26F3               	addwf	prodl,f,c
 13293  012F58  0E00               	movlw	0
 13294  012F5A  22F4               	addwfc	prodh,f,c
 13295  012F5C  0E2E               	movlw	low _port
 13296  012F5E  24F3               	addwf	prodl,w,c
 13297  012F60  6ED9               	movwf	fsr2l,c
 13298  012F62  0E01               	movlw	high _port
 13299  012F64  20F4               	addwfc	prodh,w,c
 13300  012F66  6EDA               	movwf	fsr2h,c
 13301  012F68  CFDE F08D          	movff	postinc2,?_sprintf+10
 13302  012F6C  CFDE F08E          	movff	postinc2,?_sprintf+11
 13303  012F70  CFDE F08F          	movff	postinc2,?_sprintf+12
 13304  012F74  CFDE F090          	movff	postinc2,?_sprintf+13
 13305  012F78  EC00  F080         	call	_sprintf	;wreg free
 13306                           
 13307                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 13308  012F7C  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13309  012F80  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13310  012F84  0EAD               	movlw	low data_out@str
 13311  012F86  0100               	movlb	0	; () banked
 13312  012F88  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13313  012F8A  0E00               	movlw	high data_out@str
 13314  012F8C  0100               	movlb	0	; () banked
 13315  012F8E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13316  012F90  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
 13317  012F94  0100               	movlb	0	; () banked
 13318  012F96  2BCB               	incf	data_out@i& (0+255),f,b
 13319  012F98  D786               	goto	l12655
 13320  012F9A                     l12667:
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;ChargeStation_task.c: 268: }
 13324                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 13325  012F9A  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13326  012F9E  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13327  012FA2  0EBB               	movlw	low (STR_23+35)
 13328  012FA4  0100               	movlb	0	; () banked
 13329  012FA6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13330  012FA8  0EFD               	movlw	high (STR_23+35)
 13331  012FAA  0100               	movlb	0	; () banked
 13332  012FAC  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13333  012FAE  ECD7  F0B1         	call	_ringbuf_put_str	;wreg free
 13334  012FB2  0012               	return		;funcret
 13335  012FB4                     __end_of_data_out:
 13336                           	opt stack 0
 13337                           tblptru	equ	0xFF8
 13338                           tblptrh	equ	0xFF7
 13339                           tblptrl	equ	0xFF6
 13340                           tablat	equ	0xFF5
 13341                           prodh	equ	0xFF4
 13342                           prodl	equ	0xFF3
 13343                           intcon	equ	0xFF2
 13344                           indf0	equ	0xFEF
 13345                           postinc0	equ	0xFEE
 13346                           fsr0h	equ	0xFEA
 13347                           fsr0l	equ	0xFE9
 13348                           wreg	equ	0xFE8
 13349                           postinc1	equ	0xFE6
 13350                           postdec1	equ	0xFE5
 13351                           fsr1h	equ	0xFE2
 13352                           fsr1l	equ	0xFE1
 13353                           indf2	equ	0xFDF
 13354                           postinc2	equ	0xFDE
 13355                           postdec2	equ	0xFDD
 13356                           plusw2	equ	0xFDB
 13357                           fsr2h	equ	0xFDA
 13358                           fsr2l	equ	0xFD9
 13359                           status	equ	0xFD8
 13360                           
 13361 ;; *************** function _sprintf *****************
 13362 ;; Defined at:
 13363 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13364 ;; Parameters:    Size  Location     Type
 13365 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13366 ;;		 -> display_LCD@str_5618(20), data_out@str(30), print_time@str(30), print_time_dec@str(10), 
 13367 ;;		 -> display_dec@s(4), 
 13368 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13369 ;;		 -> STR_73(28), STR_72(9), STR_71(11), STR_70(6), 
 13370 ;;		 -> STR_68(24), STR_67(32), STR_23(37), STR_21(5), 
 13371 ;;		 -> STR_1(5), 
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;  val             4   67[BANK0 ] unsigned long 
 13374 ;;  tmpval          4    0        struct .
 13375 ;;  width           2   73[BANK0 ] int 
 13376 ;;  len             2   65[BANK0 ] unsigned int 
 13377 ;;  ap              2   63[BANK0 ] PTR void [1]
 13378 ;;		 -> ?_sprintf(2), 
 13379 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 13380 ;;		 -> STR_118(7), display_LCD@onoff(10), display_LCD@port_char(120), data_out@p(6), 
 13381 ;;		 -> sp__ADC(2), weekday_3char(28), 
 13382 ;;  prec            2   59[BANK0 ] int 
 13383 ;;  c               1   72[BANK0 ] char 
 13384 ;;  flag            1   71[BANK0 ] unsigned char 
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  2   35[BANK0 ] int 
 13387 ;; Registers used:
 13388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/0
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13394 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13395 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13396 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13397 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13398 ;;Total ram usage:       40 bytes
 13399 ;; Hardware stack levels used:    1
 13400 ;; Hardware stack levels required when called:   13
 13401 ;; This function calls:
 13402 ;;		___lldiv
 13403 ;;		___llmod
 13404 ;;		___wmul
 13405 ;;		_isdigit
 13406 ;; This function is called by:
 13407 ;;		_display_dec
 13408 ;;		_print_time
 13409 ;;		_data_out
 13410 ;;		_display_LCD
 13411 ;;		_print_time_dec
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415                           	psect	text40
 13416  010000                     __ptext40:
 13417                           	opt stack 0
 13418  010000                     _sprintf:
 13419                           	opt stack 12
 13420                           
 13421                           ;doprnt.c: 494: va_list ap;
 13422                           ;doprnt.c: 499: signed char c;
 13423                           ;doprnt.c: 501: int width;
 13424                           ;doprnt.c: 504: int prec;
 13425                           ;doprnt.c: 508: unsigned char flag;
 13426                           ;doprnt.c: 523: union {
 13427                           ;doprnt.c: 524: unsigned long vd;
 13428                           ;doprnt.c: 525: double integ;
 13429                           ;doprnt.c: 526: } tmpval;
 13430                           ;doprnt.c: 528: unsigned long val;
 13431                           ;doprnt.c: 529: unsigned len;
 13432                           ;doprnt.c: 530: const char * cp;
 13433                           ;doprnt.c: 533: *ap = __va_start();
 13434                           
 13435                           ;incstack = 0
 13436  010000  0E87               	movlw	low (?_sprintf+4)
 13437  010002  0100               	movlb	0	; () banked
 13438  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 13439  010006  0E00               	movlw	high (?_sprintf+4)
 13440  010008  0100               	movlb	0	; () banked
 13441  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 13442                           
 13443                           ;doprnt.c: 536: while(c = *f++) {
 13444  01000C  D270               	goto	l11127
 13445  01000E                     l10981:
 13446                           
 13447                           ; BSR set to: 0
 13448                           ;doprnt.c: 538: if(c != '%')
 13449  01000E  0E25               	movlw	37
 13450  010010  0100               	movlb	0	; () banked
 13451  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 13452  010014  B4D8               	btfsc	status,2,c
 13453  010016  D00A               	goto	l10987
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;doprnt.c: 540: {
 13457                           ;doprnt.c: 541: ((*sp++ = (c)));
 13458  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 13459  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13460  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 13461                           
 13462                           ; BSR set to: 0
 13463  010024  0100               	movlb	0	; () banked
 13464  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13465  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13466                           
 13467                           ;doprnt.c: 542: continue;
 13468  01002A  D261               	goto	l11127
 13469  01002C                     l10987:
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;doprnt.c: 543: }
 13473                           ;doprnt.c: 546: width = 0;
 13474  01002C  0E00               	movlw	0
 13475  01002E  0100               	movlb	0	; () banked
 13476  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13477  010032  0E00               	movlw	0
 13478  010034  6FA9               	movwf	sprintf@width& (0+255),b
 13479                           
 13480                           ;doprnt.c: 548: flag = 0;
 13481  010036  0E00               	movlw	0
 13482  010038  0100               	movlb	0	; () banked
 13483  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;doprnt.c: 551: switch(*f) {
 13487                           
 13488                           ;doprnt.c: 550: for(;;) {
 13489  01003C  D005               	goto	l10993
 13490  01003E                     l10989:
 13491                           
 13492                           ;doprnt.c: 580: flag |= 0x04;
 13493  01003E  0100               	movlb	0	; () banked
 13494  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 13495                           
 13496                           ;doprnt.c: 581: f++;
 13497  010042  0100               	movlb	0	; () banked
 13498  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 13499  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13500  010048                     l10993:
 13501  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 13502  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13503  010050                     	if	0	;tblptru may be non-zero
 13504  010050                     	endif
 13505  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13506  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 13507  010052  6EF8               	movwf	tblptru,c
 13508  010054                     	endif
 13509  010054  0008               	tblrd		*
 13510  010056  50F5               	movf	tablat,w,c
 13511                           
 13512                           ; Switch size 1, requested type "space"
 13513                           ; Number of cases is 1, Range of values is 48 to 48
 13514                           ; switch strategies available:
 13515                           ; Name         Instructions Cycles
 13516                           ; simple_byte            4     3 (average)
 13517                           ;	Chosen strategy is simple_byte
 13518  010058  0A30               	xorlw	48	; case 48
 13519  01005A  B4D8               	btfsc	status,2,c
 13520  01005C  D7F0               	goto	l10989
 13521                           
 13522                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13523                           
 13524                           ;doprnt.c: 586: }
 13525                           
 13526                           ;doprnt.c: 585: break;
 13527  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 13528  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13529  010066                     	if	0	;tblptru may be non-zero
 13530  010066                     	endif
 13531  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13532  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 13533  010068  6EF8               	movwf	tblptru,c
 13534  01006A                     	endif
 13535  01006A  0008               	tblrd		*
 13536  01006C  50F5               	movf	tablat,w,c
 13537  01006E  EC48  F0B6         	call	_isdigit
 13538  010072  A0D8               	btfss	status,0,c
 13539  010074  D0E0               	goto	l11045
 13540                           
 13541                           ;doprnt.c: 598: width = 0;
 13542  010076  0E00               	movlw	0
 13543  010078  0100               	movlb	0	; () banked
 13544  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13545  01007C  0E00               	movlw	0
 13546  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 13547  010080                     l10999:
 13548                           
 13549                           ;doprnt.c: 600: width *= 10;
 13550  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 13551  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13552  010088  0E00               	movlw	0
 13553  01008A  0100               	movlb	0	; () banked
 13554  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13555  01008E  0E0A               	movlw	10
 13556  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13557  010092  EC72  F0B5         	call	___wmul	;wreg free
 13558  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 13559  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 13560                           
 13561                           ;doprnt.c: 601: width += *f++ - '0';
 13562  01009E  0ED0               	movlw	208
 13563  0100A0  0100               	movlb	0	; () banked
 13564  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 13565  0100A4  0EFF               	movlw	255
 13566  0100A6  0100               	movlb	0	; () banked
 13567  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13568  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 13569  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13570  0100B2                     	if	0	;tblptru may be non-zero
 13571  0100B2                     	endif
 13572  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13573  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13574  0100B4  6EF8               	movwf	tblptru,c
 13575  0100B6                     	endif
 13576  0100B6  0008               	tblrd		*
 13577  0100B8  50F5               	movf	tablat,w,c
 13578  0100BA  0100               	movlb	0	; () banked
 13579  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 13580  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 13581  0100C0  0100               	movlb	0	; () banked
 13582  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 13583  0100C4  0100               	movlb	0	; () banked
 13584  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 13585  0100C8  0100               	movlb	0	; () banked
 13586  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 13587  0100CC  0100               	movlb	0	; () banked
 13588  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 13589  0100D0  0100               	movlb	0	; () banked
 13590  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 13591  0100D4  0100               	movlb	0	; () banked
 13592  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 13593  0100D8  0100               	movlb	0	; () banked
 13594  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 13595  0100DC  0100               	movlb	0	; () banked
 13596  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 13597                           
 13598                           ; BSR set to: 0
 13599  0100E0  0100               	movlb	0	; () banked
 13600  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 13601  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13605  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 13606  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13607  0100EE                     	if	0	;tblptru may be non-zero
 13608  0100EE                     	endif
 13609  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13610  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13611  0100F0  6EF8               	movwf	tblptru,c
 13612  0100F2                     	endif
 13613  0100F2  0008               	tblrd		*
 13614  0100F4  50F5               	movf	tablat,w,c
 13615  0100F6  EC48  F0B6         	call	_isdigit
 13616  0100FA  A0D8               	btfss	status,0,c
 13617  0100FC  D09C               	goto	l11045
 13618  0100FE  D7C0               	goto	l10999
 13619  010100                     l11007:
 13620                           
 13621                           ;doprnt.c: 643: flag |= 0x10;
 13622  010100  0100               	movlb	0	; () banked
 13623  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 13624                           
 13625                           ;doprnt.c: 644: goto loop;
 13626  010104  D098               	goto	l11045
 13627  010106                     l11009:
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13631  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13632  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13633  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 13634  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 13635                           
 13636                           ; BSR set to: 0
 13637  010116  0E02               	movlw	2
 13638  010118  0100               	movlb	0	; () banked
 13639  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 13640  01011C  0E00               	movlw	0
 13641  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;doprnt.c: 740: if(!cp)
 13645  010120  0100               	movlb	0	; () banked
 13646  010122  519D               	movf	sprintf@cp& (0+255),w,b
 13647  010124  0100               	movlb	0	; () banked
 13648  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13649  010128  A4D8               	btfss	status,2,c
 13650  01012A  D006               	goto	l11017
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;doprnt.c: 741: cp = "(null)";
 13654  01012C  0E8A               	movlw	low STR_118
 13655  01012E  0100               	movlb	0	; () banked
 13656  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 13657  010132  0EFF               	movlw	high STR_118
 13658  010134  0100               	movlb	0	; () banked
 13659  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 13660  010138                     l11017:
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;doprnt.c: 745: len = 0;
 13664  010138  0E00               	movlw	0
 13665  01013A  0100               	movlb	0	; () banked
 13666  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 13667  01013E  0E00               	movlw	0
 13668  010140  6FA1               	movwf	sprintf@len& (0+255),b
 13669                           
 13670                           ;doprnt.c: 746: while(cp[len])
 13671  010142  D003               	goto	l11021
 13672  010144                     l11019:
 13673                           
 13674                           ;doprnt.c: 747: len++;
 13675  010144  0100               	movlb	0	; () banked
 13676  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 13677  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 13678  01014A                     l11021:
 13679                           
 13680                           ; BSR set to: 0
 13681  01014A  0100               	movlb	0	; () banked
 13682  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 13683  01014E  0100               	movlb	0	; () banked
 13684  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 13685  010152  0100               	movlb	0	; () banked
 13686  010154  6F97               	movwf	??_sprintf& (0+255),b
 13687  010156  0100               	movlb	0	; () banked
 13688  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13689  01015A  0100               	movlb	0	; () banked
 13690  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13691  01015E  0100               	movlb	0	; () banked
 13692  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13693  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 13694  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 13695  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 13696  01016C  6EF8               	movwf	tblptru,c
 13697  01016E  0E0E               	movlw	(high __ramtop+-1)
 13698  010170  64F7               	cpfsgt	tblptrh,c
 13699  010172  D003               	bra	u11827
 13700  010174  0008               	tblrd		*
 13701  010176  50F5               	movf	tablat,w,c
 13702  010178  D005               	bra	u11820
 13703  01017A                     u11827:
 13704  01017A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13705  01017E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13706  010182  50EF               	movf	indf0,w,c
 13707  010184                     u11820:
 13708  010184  0900               	iorlw	0
 13709  010186  A4D8               	btfss	status,2,c
 13710  010188  D7DD               	goto	l11019
 13711                           
 13712                           ;doprnt.c: 757: if(width > len)
 13713  01018A  0100               	movlb	0	; () banked
 13714  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 13715  01018E  0100               	movlb	0	; () banked
 13716  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 13717  010192  0100               	movlb	0	; () banked
 13718  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13719  010196  0100               	movlb	0	; () banked
 13720  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 13721  01019A  B0D8               	btfsc	status,0,c
 13722  01019C  D009               	goto	l11027
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;doprnt.c: 758: width -= len;
 13726  01019E  0100               	movlb	0	; () banked
 13727  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 13728  0101A2  0100               	movlb	0	; () banked
 13729  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 13730  0101A6  0100               	movlb	0	; () banked
 13731  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13732  0101AA  0100               	movlb	0	; () banked
 13733  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13734  0101AE  D00F               	goto	l11033
 13735  0101B0                     l11027:
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;doprnt.c: 759: else
 13739                           ;doprnt.c: 760: width = 0;
 13740  0101B0  0E00               	movlw	0
 13741  0101B2  0100               	movlb	0	; () banked
 13742  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13743  0101B6  0E00               	movlw	0
 13744  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;doprnt.c: 764: while(width--)
 13748  0101BA  D009               	goto	l11033
 13749  0101BC                     l11029:
 13750                           
 13751                           ; BSR set to: 0
 13752                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13753  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 13754  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13755  0101C4  0E20               	movlw	32
 13756  0101C6  6EDF               	movwf	indf2,c
 13757                           
 13758                           ; BSR set to: 0
 13759  0101C8  0100               	movlb	0	; () banked
 13760  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13761  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13762  0101CE                     l11033:
 13763                           
 13764                           ; BSR set to: 0
 13765  0101CE  0100               	movlb	0	; () banked
 13766  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 13767  0101D2  A0D8               	btfss	status,0,c
 13768  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13769  0101D6  0100               	movlb	0	; () banked
 13770  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 13771  0101DA  E1F0               	bnz	l11029
 13772  0101DC  0100               	movlb	0	; () banked
 13773  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 13774  0101E0  B4D8               	btfsc	status,2,c
 13775  0101E2  D01D               	goto	l11041
 13776  0101E4  D7EB               	goto	l11029
 13777  0101E6                     l11035:
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13781  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 13782  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 13783  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13784  0101F0  6EF8               	movwf	tblptru,c
 13785  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13786  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13787  0101FA  0E0E               	movlw	(high __ramtop+-1)
 13788  0101FC  64F7               	cpfsgt	tblptrh,c
 13789  0101FE  D003               	bra	u11867
 13790  010200  0008               	tblrd		*
 13791  010202  50F5               	movf	tablat,w,c
 13792  010204  D005               	bra	u11860
 13793  010206                     u11867:
 13794  010206  CFF6 FFE9          	movff	tblptrl,fsr0l
 13795  01020A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13796  01020E  50EF               	movf	indf0,w,c
 13797  010210                     u11860:
 13798  010210  6EDF               	movwf	indf2,c
 13799  010212  0100               	movlb	0	; () banked
 13800  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 13801  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 13802                           
 13803                           ; BSR set to: 0
 13804  010218  0100               	movlb	0	; () banked
 13805  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13806  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13807  01021E                     l11041:
 13808                           
 13809                           ; BSR set to: 0
 13810  01021E  0100               	movlb	0	; () banked
 13811  010220  07A1               	decf	sprintf@len& (0+255),f,b
 13812  010222  A0D8               	btfss	status,0,c
 13813  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 13814  010226  0100               	movlb	0	; () banked
 13815  010228  29A1               	incf	sprintf@len& (0+255),w,b
 13816  01022A  E1DD               	bnz	l11035
 13817  01022C  0100               	movlb	0	; () banked
 13818  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 13819  010230  B4D8               	btfsc	status,2,c
 13820  010232  D15D               	goto	l11127
 13821  010234  D7D8               	goto	l11035
 13822  010236                     l11045:
 13823  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 13824  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13825  01023E  0100               	movlb	0	; () banked
 13826  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 13827  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13828  010244                     	if	0	;tblptru may be non-zero
 13829  010244                     	endif
 13830  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13831  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 13832  010246  6EF8               	movwf	tblptru,c
 13833  010248                     	endif
 13834  010248  0008               	tblrd		*
 13835  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 13836  01024E  0100               	movlb	0	; () banked
 13837  010250  51A8               	movf	sprintf@c& (0+255),w,b
 13838                           
 13839                           ; Switch size 1, requested type "space"
 13840                           ; Number of cases is 5, Range of values is 0 to 115
 13841                           ; switch strategies available:
 13842                           ; Name         Instructions Cycles
 13843                           ; simple_byte           16     9 (average)
 13844                           ;	Chosen strategy is simple_byte
 13845  010252  0A00               	xorlw	0	; case 0
 13846  010254  B4D8               	btfsc	status,2,c
 13847  010256  D15B               	goto	l11129
 13848  010258  0A64               	xorlw	100	; case 100
 13849  01025A  B4D8               	btfsc	status,2,c
 13850  01025C  D00A               	goto	l2010
 13851  01025E  0A0D               	xorlw	13	; case 105
 13852  010260  B4D8               	btfsc	status,2,c
 13853  010262  D007               	goto	l2010
 13854  010264  0A05               	xorlw	5	; case 108
 13855  010266  B4D8               	btfsc	status,2,c
 13856  010268  D74B               	goto	l11007
 13857  01026A  0A1F               	xorlw	31	; case 115
 13858  01026C  B4D8               	btfsc	status,2,c
 13859  01026E  D74B               	goto	l11009
 13860  010270  D13E               	goto	l11127
 13861  010272                     l2010:
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;doprnt.c: 1253: {
 13865                           ;doprnt.c: 1255: if(flag & 0x10)
 13866  010272  0100               	movlb	0	; () banked
 13867  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 13868  010276  D00E               	goto	l11051
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13872  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13873  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13874  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 13875  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 13876  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 13877  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 13878                           
 13879                           ; BSR set to: 0
 13880  010290  0E04               	movlw	4
 13881  010292  D00F               	goto	L3
 13882  010294                     l11051:
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;doprnt.c: 1257: else
 13886                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13887  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13888  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13889  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 13890  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 13891  0102A4  0100               	movlb	0	; () banked
 13892  0102A6  0E00               	movlw	0
 13893  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 13894  0102AA  0EFF               	movlw	-1
 13895  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 13896  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 13897                           
 13898                           ; BSR set to: 0
 13899  0102B0  0E02               	movlw	2
 13900  0102B2                     L3:
 13901  0102B2  0100               	movlb	0	; () banked
 13902  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 13903  0102B6  0E00               	movlw	0
 13904  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;doprnt.c: 1261: if((long)val < 0) {
 13908                           
 13909                           ; BSR set to: 0
 13910  0102BA  0100               	movlb	0	; () banked
 13911  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 13912  0102BE  D00C               	goto	l11061
 13913                           
 13914                           ; BSR set to: 0
 13915                           ;doprnt.c: 1262: flag |= 0x03;
 13916  0102C0  0E03               	movlw	3
 13917  0102C2  0100               	movlb	0	; () banked
 13918  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;doprnt.c: 1263: val = -val;
 13922  0102C6  0100               	movlb	0	; () banked
 13923  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 13924  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 13925  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 13926  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 13927  0102D0  0E00               	movlw	0
 13928  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 13929  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 13930  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 13931  0102D8                     l11061:
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;doprnt.c: 1264: }
 13935                           ;doprnt.c: 1266: }
 13936                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13937  0102D8  0E01               	movlw	1
 13938  0102DA  0100               	movlb	0	; () banked
 13939  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 13940  0102DE                     l11063:
 13941                           
 13942                           ; BSR set to: 0
 13943  0102DE  0E0A               	movlw	10
 13944  0102E0  0100               	movlb	0	; () banked
 13945  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 13946  0102E4  B4D8               	btfsc	status,2,c
 13947  0102E6  D021               	goto	l11075
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;doprnt.c: 1306: if(val < dpowers[c])
 13951                           
 13952                           ; BSR set to: 0
 13953                           
 13954                           ; BSR set to: 0
 13955  0102E8  0100               	movlb	0	; () banked
 13956  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 13957  0102EC  0D04               	mullw	4
 13958  0102EE  0E51               	movlw	low _dpowers
 13959  0102F0  24F3               	addwf	prodl,w,c
 13960  0102F2  6EF6               	movwf	tblptrl,c
 13961  0102F4  0EFA               	movlw	high _dpowers
 13962  0102F6  20F4               	addwfc	prodh,w,c
 13963  0102F8  6EF7               	movwf	tblptrh,c
 13964  0102FA                     	if	1	;There are 3 active tblptr bytes
 13965  0102FA  6AF8               	clrf	tblptru,c
 13966  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13967  0102FE  22F8               	addwfc	tblptru,f,c
 13968  010300                     	endif
 13969  010300  0009               	tblrd		*+
 13970  010302  50F5               	movf	tablat,w,c
 13971  010304  0100               	movlb	0	; () banked
 13972  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 13973  010308  0009               	tblrd		*+
 13974  01030A  50F5               	movf	tablat,w,c
 13975  01030C  0100               	movlb	0	; () banked
 13976  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 13977  010310  0009               	tblrd		*+
 13978  010312  50F5               	movf	tablat,w,c
 13979  010314  0100               	movlb	0	; () banked
 13980  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 13981  010318  0009               	tblrd		*+
 13982  01031A  50F5               	movf	tablat,w,c
 13983  01031C  0100               	movlb	0	; () banked
 13984  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 13985  010320  A0D8               	btfss	status,0,c
 13986  010322  D003               	goto	l11075
 13987                           
 13988                           ; BSR set to: 0
 13989                           
 13990                           ; BSR set to: 0
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;doprnt.c: 1307: break;
 13994  010324  0100               	movlb	0	; () banked
 13995  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 13996  010328  D7DA               	goto	l11063
 13997  01032A                     l11075:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14001  01032A  0100               	movlb	0	; () banked
 14002  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 14003  01032E  0100               	movlb	0	; () banked
 14004  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14005  010332  B4D8               	btfsc	status,2,c
 14006  010334  D00B               	goto	l11081
 14007                           
 14008                           ; BSR set to: 0
 14009  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14010  01033A  0E03               	movlw	3
 14011  01033C  0100               	movlb	0	; () banked
 14012  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 14013  010340  B4D8               	btfsc	status,2,c
 14014  010342  D004               	goto	l11081
 14015                           
 14016                           ; BSR set to: 0
 14017                           ;doprnt.c: 1346: width--;
 14018  010344  0100               	movlb	0	; () banked
 14019  010346  07A9               	decf	sprintf@width& (0+255),f,b
 14020  010348  A0D8               	btfss	status,0,c
 14021  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14022  01034C                     l11081:
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;doprnt.c: 1381: if(width > c)
 14026  01034C  0E80               	movlw	128
 14027  01034E  0100               	movlb	0	; () banked
 14028  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14029  010352  0E7F               	movlw	127
 14030  010354  0100               	movlb	0	; () banked
 14031  010356  6F97               	movwf	??_sprintf& (0+255),b
 14032  010358  0100               	movlb	0	; () banked
 14033  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 14034  01035C  0100               	movlb	0	; () banked
 14035  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 14036  010360  0100               	movlb	0	; () banked
 14037  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14038  010364  0A80               	xorlw	128
 14039  010366  0100               	movlb	0	; () banked
 14040  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 14041  01036A  B0D8               	btfsc	status,0,c
 14042  01036C  D00B               	goto	l11085
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;doprnt.c: 1382: width -= c;
 14046  01036E  0100               	movlb	0	; () banked
 14047  010370  51A8               	movf	sprintf@c& (0+255),w,b
 14048  010372  0100               	movlb	0	; () banked
 14049  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 14050  010376  0E00               	movlw	0
 14051  010378  0100               	movlb	0	; () banked
 14052  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14053  01037C  0EFF               	movlw	255
 14054  01037E  0100               	movlb	0	; () banked
 14055  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14056  010382  D005               	goto	l11087
 14057  010384                     l11085:
 14058                           
 14059                           ; BSR set to: 0
 14060                           ;doprnt.c: 1383: else
 14061                           ;doprnt.c: 1384: width = 0;
 14062  010384  0E00               	movlw	0
 14063  010386  0100               	movlb	0	; () banked
 14064  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14065  01038A  0E00               	movlw	0
 14066  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 14067  01038E                     l11087:
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;doprnt.c: 1387: if(flag & 0x04) {
 14071  01038E  0100               	movlb	0	; () banked
 14072  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 14073  010392  D024               	goto	l11103
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;doprnt.c: 1392: if(flag & 0x03)
 14077  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14078  010398  0E03               	movlw	3
 14079  01039A  0100               	movlb	0	; () banked
 14080  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 14081  01039E  B4D8               	btfsc	status,2,c
 14082  0103A0  D009               	goto	l11095
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14086  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14087  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14088  0103AA  0E2D               	movlw	45
 14089  0103AC  6EDF               	movwf	indf2,c
 14090                           
 14091                           ; BSR set to: 0
 14092  0103AE  0100               	movlb	0	; () banked
 14093  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14094  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14095  0103B4                     l11095:
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;doprnt.c: 1415: if(width)
 14099  0103B4  0100               	movlb	0	; () banked
 14100  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 14101  0103B8  0100               	movlb	0	; () banked
 14102  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14103  0103BC  B4D8               	btfsc	status,2,c
 14104  0103BE  D037               	goto	l11117
 14105                           
 14106                           ; BSR set to: 0
 14107                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14108                           
 14109                           ; BSR set to: 0
 14110                           
 14111                           ;doprnt.c: 1416: do
 14112  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 14113  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14114  0103C8  0E30               	movlw	48
 14115  0103CA  6EDF               	movwf	indf2,c
 14116                           
 14117                           ; BSR set to: 0
 14118  0103CC  0100               	movlb	0	; () banked
 14119  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14120  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14121                           
 14122                           ; BSR set to: 0
 14123                           ;doprnt.c: 1418: while(--width);
 14124  0103D2  0100               	movlb	0	; () banked
 14125  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 14126  0103D6  A0D8               	btfss	status,0,c
 14127  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14128  0103DA  D7EC               	goto	l11095
 14129  0103DC                     l11103:
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;doprnt.c: 1422: {
 14133                           ;doprnt.c: 1424: if(width
 14134                           ;doprnt.c: 1428: )
 14135  0103DC  0100               	movlb	0	; () banked
 14136  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 14137  0103E0  0100               	movlb	0	; () banked
 14138  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14139  0103E4  B4D8               	btfsc	status,2,c
 14140  0103E6  D013               	goto	l11111
 14141  0103E8                     l11105:
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14145  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 14146  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14147  0103F0  0E20               	movlw	32
 14148  0103F2  6EDF               	movwf	indf2,c
 14149                           
 14150                           ; BSR set to: 0
 14151  0103F4  0100               	movlb	0	; () banked
 14152  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14153  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14154                           
 14155                           ; BSR set to: 0
 14156                           ;doprnt.c: 1431: while(--width);
 14157  0103FA  0100               	movlb	0	; () banked
 14158  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 14159  0103FE  A0D8               	btfss	status,0,c
 14160  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14161  010402  0100               	movlb	0	; () banked
 14162  010404  51A9               	movf	sprintf@width& (0+255),w,b
 14163  010406  0100               	movlb	0	; () banked
 14164  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14165  01040A  A4D8               	btfss	status,2,c
 14166  01040C  D7ED               	goto	l11105
 14167  01040E                     l11111:
 14168                           
 14169                           ; BSR set to: 0
 14170                           ;doprnt.c: 1438: if(flag & 0x03)
 14171  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14172  010412  0E03               	movlw	3
 14173  010414  0100               	movlb	0	; () banked
 14174  010416  1797               	andwf	??_sprintf& (0+255),f,b
 14175  010418  B4D8               	btfsc	status,2,c
 14176  01041A  D009               	goto	l11117
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14180  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 14181  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14182  010424  0E2D               	movlw	45
 14183  010426  6EDF               	movwf	indf2,c
 14184                           
 14185                           ; BSR set to: 0
 14186  010428  0100               	movlb	0	; () banked
 14187  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14188  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14189  01042E                     l11117:
 14190                           
 14191                           ; BSR set to: 0
 14192                           ;doprnt.c: 1469: }
 14193                           ;doprnt.c: 1472: prec = c;
 14194  01042E  0100               	movlb	0	; () banked
 14195  010430  51A8               	movf	sprintf@c& (0+255),w,b
 14196  010432  0100               	movlb	0	; () banked
 14197  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 14198  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 14199  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 14200  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14201                           
 14202                           ;doprnt.c: 1474: while(prec--) {
 14203  01043C  D04D               	goto	l11125
 14204  01043E                     l11119:
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;doprnt.c: 1478: {
 14208                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14209  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 14210  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 14211  010446  0100               	movlb	0	; () banked
 14212  010448  90D8               	bcf	status,0,c
 14213  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 14214  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14215  01044E  0100               	movlb	0	; () banked
 14216  010450  90D8               	bcf	status,0,c
 14217  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 14218  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14219  010456  0E51               	movlw	low _dpowers
 14220  010458  0100               	movlb	0	; () banked
 14221  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 14222  01045C  6EF6               	movwf	tblptrl,c
 14223  01045E  0EFA               	movlw	high _dpowers
 14224  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 14225  010462  6EF7               	movwf	tblptrh,c
 14226  010464                     	if	1	;There are 3 active tblptr bytes
 14227  010464  6AF8               	clrf	tblptru,c
 14228  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 14229  010468  22F8               	addwfc	tblptru,f,c
 14230  01046A                     	endif
 14231  01046A  0009               	tblrd		*+
 14232  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 14233  010470  0009               	tblrd		*+
 14234  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14235  010476  0009               	tblrd		*+
 14236  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14237  01047C  000A               	tblrd		*-
 14238  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14239  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 14240  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14241  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14242  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14243  010492  EC51  F0AB         	call	___lldiv	;wreg free
 14244  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14245  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14246  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14247  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14248  0104A6  0E0A               	movlw	10
 14249  0104A8  0100               	movlb	0	; () banked
 14250  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 14251  0104AC  0E00               	movlw	0
 14252  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14253  0104B0  0E00               	movlw	0
 14254  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14255  0104B4  0E00               	movlw	0
 14256  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14257  0104B8  ECB4  F0AD         	call	___llmod	;wreg free
 14258  0104BC  0100               	movlb	0	; () banked
 14259  0104BE  516D               	movf	?___llmod& (0+255),w,b
 14260  0104C0  0F30               	addlw	48
 14261  0104C2  0100               	movlb	0	; () banked
 14262  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;doprnt.c: 1523: }
 14266                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14267  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 14268  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14269  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 14270                           
 14271                           ; BSR set to: 0
 14272  0104D2  0100               	movlb	0	; () banked
 14273  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14274  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14275  0104D8                     l11125:
 14276                           
 14277                           ; BSR set to: 0
 14278  0104D8  0100               	movlb	0	; () banked
 14279  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 14280  0104DC  A0D8               	btfss	status,0,c
 14281  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14282  0104E0  0100               	movlb	0	; () banked
 14283  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 14284  0104E4  E1AC               	bnz	l11119
 14285  0104E6  0100               	movlb	0	; () banked
 14286  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 14287  0104EA  A4D8               	btfss	status,2,c
 14288  0104EC  D7A8               	goto	l11119
 14289  0104EE                     l11127:
 14290                           
 14291                           ; BSR set to: 0
 14292  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 14293  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14294  0104F6  0100               	movlb	0	; () banked
 14295  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 14296  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14297  0104FC                     	if	0	;tblptru may be non-zero
 14298  0104FC                     	endif
 14299  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14300  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14301  0104FE  6EF8               	movwf	tblptru,c
 14302  010500                     	endif
 14303  010500  0008               	tblrd		*
 14304  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 14305  010506  0100               	movlb	0	; () banked
 14306  010508  51A8               	movf	sprintf@c& (0+255),w,b
 14307  01050A  A4D8               	btfss	status,2,c
 14308  01050C  D580               	goto	l10981
 14309  01050E                     l11129:
 14310                           
 14311                           ;doprnt.c: 1538: *sp = 0;
 14312  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14313  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14314  010516  0E00               	movlw	0
 14315  010518  6EDF               	movwf	indf2,c
 14316  01051A  0012               	return	
 14317  01051C                     __end_of_sprintf:
 14318                           	opt stack 0
 14319                           tblptru	equ	0xFF8
 14320                           tblptrh	equ	0xFF7
 14321                           tblptrl	equ	0xFF6
 14322                           tablat	equ	0xFF5
 14323                           prodh	equ	0xFF4
 14324                           prodl	equ	0xFF3
 14325                           intcon	equ	0xFF2
 14326                           indf0	equ	0xFEF
 14327                           postinc0	equ	0xFEE
 14328                           fsr0h	equ	0xFEA
 14329                           fsr0l	equ	0xFE9
 14330                           wreg	equ	0xFE8
 14331                           postinc1	equ	0xFE6
 14332                           postdec1	equ	0xFE5
 14333                           fsr1h	equ	0xFE2
 14334                           fsr1l	equ	0xFE1
 14335                           indf2	equ	0xFDF
 14336                           postinc2	equ	0xFDE
 14337                           postdec2	equ	0xFDD
 14338                           plusw2	equ	0xFDB
 14339                           fsr2h	equ	0xFDA
 14340                           fsr2l	equ	0xFD9
 14341                           status	equ	0xFD8
 14342                           
 14343 ;; *************** function _isdigit *****************
 14344 ;; Defined at:
 14345 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14346 ;; Parameters:    Size  Location     Type
 14347 ;;  c               1    wreg     unsigned char 
 14348 ;; Auto vars:     Size  Location     Type
 14349 ;;  c               1    2[BANK0 ] unsigned char 
 14350 ;; Return value:  Size  Location     Type
 14351 ;;		None               void
 14352 ;; Registers used:
 14353 ;;		wreg, status,2, status,0
 14354 ;; Tracked objects:
 14355 ;;		On entry : 0/0
 14356 ;;		On exit  : 0/0
 14357 ;;		Unchanged: 0/0
 14358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14362 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14363 ;;Total ram usage:        3 bytes
 14364 ;; Hardware stack levels used:    1
 14365 ;; Hardware stack levels required when called:   12
 14366 ;; This function calls:
 14367 ;;		Nothing
 14368 ;; This function is called by:
 14369 ;;		_sprintf
 14370 ;;		_atoi
 14371 ;; This function uses a non-reentrant model
 14372 ;;
 14373                           
 14374                           	psect	text41
 14375  016C90                     __ptext41:
 14376                           	opt stack 0
 14377  016C90                     _isdigit:
 14378                           	opt stack 12
 14379                           
 14380                           ;incstack = 0
 14381                           ;isdigit@c stored from wreg
 14382  016C90  0100               	movlb	0	; () banked
 14383  016C92  6F62               	movwf	isdigit@c& (0+255),b
 14384  016C94  0E00               	movlw	0
 14385  016C96  0100               	movlb	0	; () banked
 14386  016C98  6F61               	movwf	_isdigit$6456& (0+255),b
 14387                           
 14388                           ; BSR set to: 0
 14389  016C9A  0E3A               	movlw	58
 14390  016C9C  0100               	movlb	0	; () banked
 14391  016C9E  6162               	cpfslt	isdigit@c& (0+255),b
 14392  016CA0  D007               	goto	l10861
 14393                           
 14394                           ; BSR set to: 0
 14395  016CA2  0E2F               	movlw	47
 14396  016CA4  0100               	movlb	0	; () banked
 14397  016CA6  6562               	cpfsgt	isdigit@c& (0+255),b
 14398  016CA8  D003               	goto	l10861
 14399                           
 14400                           ; BSR set to: 0
 14401  016CAA  0E01               	movlw	1
 14402  016CAC  0100               	movlb	0	; () banked
 14403  016CAE  6F61               	movwf	_isdigit$6456& (0+255),b
 14404  016CB0                     l10861:
 14405                           
 14406                           ; BSR set to: 0
 14407  016CB0  C061  F060         	movff	_isdigit$6456,??_isdigit
 14408  016CB4  0100               	movlb	0	; () banked
 14409  016CB6  3160               	rrcf	??_isdigit& (0+255),w,b
 14410  016CB8  0012               	return	
 14411  016CBA                     __end_of_isdigit:
 14412                           	opt stack 0
 14413                           tblptru	equ	0xFF8
 14414                           tblptrh	equ	0xFF7
 14415                           tblptrl	equ	0xFF6
 14416                           tablat	equ	0xFF5
 14417                           prodh	equ	0xFF4
 14418                           prodl	equ	0xFF3
 14419                           intcon	equ	0xFF2
 14420                           indf0	equ	0xFEF
 14421                           postinc0	equ	0xFEE
 14422                           fsr0h	equ	0xFEA
 14423                           fsr0l	equ	0xFE9
 14424                           wreg	equ	0xFE8
 14425                           postinc1	equ	0xFE6
 14426                           postdec1	equ	0xFE5
 14427                           fsr1h	equ	0xFE2
 14428                           fsr1l	equ	0xFE1
 14429                           indf2	equ	0xFDF
 14430                           postinc2	equ	0xFDE
 14431                           postdec2	equ	0xFDD
 14432                           plusw2	equ	0xFDB
 14433                           fsr2h	equ	0xFDA
 14434                           fsr2l	equ	0xFD9
 14435                           status	equ	0xFD8
 14436                           
 14437 ;; *************** function ___llmod *****************
 14438 ;; Defined at:
 14439 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;  dividend        4   13[BANK0 ] unsigned long 
 14442 ;;  divisor         4   17[BANK0 ] unsigned long 
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;  counter         1   21[BANK0 ] unsigned char 
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  4   13[BANK0 ] unsigned long 
 14447 ;; Registers used:
 14448 ;;		wreg, status,2, status,0
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14454 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14457 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14458 ;;Total ram usage:        9 bytes
 14459 ;; Hardware stack levels used:    1
 14460 ;; Hardware stack levels required when called:   12
 14461 ;; This function calls:
 14462 ;;		Nothing
 14463 ;; This function is called by:
 14464 ;;		_display_LCD
 14465 ;;		_sprintf
 14466 ;; This function uses a non-reentrant model
 14467 ;;
 14468                           
 14469                           	psect	text42
 14470  015B68                     __ptext42:
 14471                           	opt stack 0
 14472  015B68                     ___llmod:
 14473                           	opt stack 12
 14474                           
 14475                           ; BSR set to: 0
 14476                           ;incstack = 0
 14477  015B68  0100               	movlb	0	; () banked
 14478  015B6A  5171               	movf	___llmod@divisor& (0+255),w,b
 14479  015B6C  0100               	movlb	0	; () banked
 14480  015B6E  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14481  015B70  0100               	movlb	0	; () banked
 14482  015B72  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14483  015B74  0100               	movlb	0	; () banked
 14484  015B76  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14485  015B78  B4D8               	btfsc	status,2,c
 14486  015B7A  D03A               	goto	l2428
 14487                           
 14488                           ; BSR set to: 0
 14489  015B7C  0E01               	movlw	1
 14490  015B7E  0100               	movlb	0	; () banked
 14491  015B80  6F75               	movwf	___llmod@counter& (0+255),b
 14492  015B82  D008               	goto	l10877
 14493  015B84                     l10875:
 14494                           
 14495                           ; BSR set to: 0
 14496  015B84  0100               	movlb	0	; () banked
 14497  015B86  90D8               	bcf	status,0,c
 14498  015B88  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14499  015B8A  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14500  015B8C  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14501  015B8E  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14502  015B90  0100               	movlb	0	; () banked
 14503  015B92  2B75               	incf	___llmod@counter& (0+255),f,b
 14504  015B94                     l10877:
 14505                           
 14506                           ; BSR set to: 0
 14507  015B94  0100               	movlb	0	; () banked
 14508  015B96  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14509  015B98  D7F5               	goto	l10875
 14510  015B9A                     l10879:
 14511                           
 14512                           ; BSR set to: 0
 14513  015B9A  0100               	movlb	0	; () banked
 14514  015B9C  5171               	movf	___llmod@divisor& (0+255),w,b
 14515  015B9E  0100               	movlb	0	; () banked
 14516  015BA0  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14517  015BA2  0100               	movlb	0	; () banked
 14518  015BA4  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14519  015BA6  0100               	movlb	0	; () banked
 14520  015BA8  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14521  015BAA  0100               	movlb	0	; () banked
 14522  015BAC  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14523  015BAE  0100               	movlb	0	; () banked
 14524  015BB0  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14525  015BB2  0100               	movlb	0	; () banked
 14526  015BB4  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14527  015BB6  0100               	movlb	0	; () banked
 14528  015BB8  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14529  015BBA  A0D8               	btfss	status,0,c
 14530  015BBC  D010               	goto	l10883
 14531                           
 14532                           ; BSR set to: 0
 14533  015BBE  0100               	movlb	0	; () banked
 14534  015BC0  5171               	movf	___llmod@divisor& (0+255),w,b
 14535  015BC2  0100               	movlb	0	; () banked
 14536  015BC4  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14537  015BC6  0100               	movlb	0	; () banked
 14538  015BC8  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14539  015BCA  0100               	movlb	0	; () banked
 14540  015BCC  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14541  015BCE  0100               	movlb	0	; () banked
 14542  015BD0  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14543  015BD2  0100               	movlb	0	; () banked
 14544  015BD4  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14545  015BD6  0100               	movlb	0	; () banked
 14546  015BD8  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14547  015BDA  0100               	movlb	0	; () banked
 14548  015BDC  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14549  015BDE                     l10883:
 14550                           
 14551                           ; BSR set to: 0
 14552  015BDE  0100               	movlb	0	; () banked
 14553  015BE0  90D8               	bcf	status,0,c
 14554  015BE2  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14555  015BE4  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14556  015BE6  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14557  015BE8  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14558                           
 14559                           ; BSR set to: 0
 14560  015BEA  0100               	movlb	0	; () banked
 14561  015BEC  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14562  015BEE  D7D5               	goto	l10879
 14563  015BF0                     l2428:
 14564                           
 14565                           ; BSR set to: 0
 14566  015BF0  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14567  015BF4  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14568  015BF8  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14569  015BFC  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14570                           
 14571                           ; BSR set to: 0
 14572  015C00  0012               	return		;funcret
 14573  015C02                     __end_of___llmod:
 14574                           	opt stack 0
 14575                           tblptru	equ	0xFF8
 14576                           tblptrh	equ	0xFF7
 14577                           tblptrl	equ	0xFF6
 14578                           tablat	equ	0xFF5
 14579                           prodh	equ	0xFF4
 14580                           prodl	equ	0xFF3
 14581                           intcon	equ	0xFF2
 14582                           indf0	equ	0xFEF
 14583                           postinc0	equ	0xFEE
 14584                           fsr0h	equ	0xFEA
 14585                           fsr0l	equ	0xFE9
 14586                           wreg	equ	0xFE8
 14587                           postinc1	equ	0xFE6
 14588                           postdec1	equ	0xFE5
 14589                           fsr1h	equ	0xFE2
 14590                           fsr1l	equ	0xFE1
 14591                           indf2	equ	0xFDF
 14592                           postinc2	equ	0xFDE
 14593                           postdec2	equ	0xFDD
 14594                           plusw2	equ	0xFDB
 14595                           fsr2h	equ	0xFDA
 14596                           fsr2l	equ	0xFD9
 14597                           status	equ	0xFD8
 14598                           
 14599 ;; *************** function _ringbuf_put_str *****************
 14600 ;; Defined at:
 14601 ;;		line 39 in file "../My_library/My_ringbuf.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 14604 ;;		 -> usb_tx(8), 
 14605 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 14606 ;;		 -> STR_69(2), data_out@str(30), STR_66(18), STR_63(36), 
 14607 ;;		 -> STR_62(24), STR_53(434), STR_24(8), print_time@str(30), 
 14608 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;		None
 14611 ;; Return value:  Size  Location     Type
 14612 ;;		None               void
 14613 ;; Registers used:
 14614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/0
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14620 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14624 ;;Total ram usage:        4 bytes
 14625 ;; Hardware stack levels used:    1
 14626 ;; Hardware stack levels required when called:   14
 14627 ;; This function calls:
 14628 ;;		_ringbuf_put
 14629 ;; This function is called by:
 14630 ;;		_terminal_task
 14631 ;;		_print_time
 14632 ;;		_terminal_at_hand
 14633 ;;		_terminal_operation
 14634 ;;		_data_out
 14635 ;;		_print_time_dec
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           	psect	text43
 14640  0163AE                     __ptext43:
 14641                           	opt stack 0
 14642  0163AE                     _ringbuf_put_str:
 14643                           	opt stack 12
 14644                           
 14645                           ;My_ringbuf.c: 40: while (*str) {
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;incstack = 0
 14649  0163AE  D01C               	goto	l10893
 14650  0163B0                     l10889:
 14651                           
 14652                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 14653  0163B0  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 14654  0163B4  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 14655  0163B8  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14656  0163BC  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14657  0163C0  0E00               	movlw	low (__mediumconst shr (0+16))
 14658  0163C2  6EF8               	movwf	tblptru,c
 14659  0163C4  0E0E               	movlw	(high __ramtop+-1)
 14660  0163C6  64F7               	cpfsgt	tblptrh,c
 14661  0163C8  D003               	bra	u11717
 14662  0163CA  0008               	tblrd		*
 14663  0163CC  50F5               	movf	tablat,w,c
 14664  0163CE  D005               	bra	u11710
 14665  0163D0                     u11717:
 14666  0163D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 14667  0163D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 14668  0163D8  50EF               	movf	indf0,w,c
 14669  0163DA                     u11710:
 14670  0163DA  0100               	movlb	0	; () banked
 14671  0163DC  6F6A               	movwf	ringbuf_put@data& (0+255),b
 14672  0163DE  EC99  F0A6         	call	_ringbuf_put	;wreg free
 14673  0163E2  0100               	movlb	0	; () banked
 14674  0163E4  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 14675  0163E6  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 14676  0163E8                     l10893:
 14677  0163E8  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14678  0163EC  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14679  0163F0  0E00               	movlw	low (__mediumconst shr (0+16))
 14680  0163F2  6EF8               	movwf	tblptru,c
 14681  0163F4  0E0E               	movlw	(high __ramtop+-1)
 14682  0163F6  64F7               	cpfsgt	tblptrh,c
 14683  0163F8  D003               	bra	u11727
 14684  0163FA  0008               	tblrd		*
 14685  0163FC  50F5               	movf	tablat,w,c
 14686  0163FE  D005               	bra	u11720
 14687  016400                     u11727:
 14688  016400  CFF6 FFE9          	movff	tblptrl,fsr0l
 14689  016404  CFF7 FFEA          	movff	tblptrh,fsr0h
 14690  016408  50EF               	movf	indf0,w,c
 14691  01640A                     u11720:
 14692  01640A  0900               	iorlw	0
 14693  01640C  B4D8               	btfsc	status,2,c
 14694  01640E  0012               	return	
 14695  016410  D7CF               	goto	l10889
 14696  016412                     __end_of_ringbuf_put_str:
 14697                           	opt stack 0
 14698                           tblptru	equ	0xFF8
 14699                           tblptrh	equ	0xFF7
 14700                           tblptrl	equ	0xFF6
 14701                           tablat	equ	0xFF5
 14702                           prodh	equ	0xFF4
 14703                           prodl	equ	0xFF3
 14704                           intcon	equ	0xFF2
 14705                           indf0	equ	0xFEF
 14706                           postinc0	equ	0xFEE
 14707                           fsr0h	equ	0xFEA
 14708                           fsr0l	equ	0xFE9
 14709                           wreg	equ	0xFE8
 14710                           postinc1	equ	0xFE6
 14711                           postdec1	equ	0xFE5
 14712                           fsr1h	equ	0xFE2
 14713                           fsr1l	equ	0xFE1
 14714                           indf2	equ	0xFDF
 14715                           postinc2	equ	0xFDE
 14716                           postdec2	equ	0xFDD
 14717                           plusw2	equ	0xFDB
 14718                           fsr2h	equ	0xFDA
 14719                           fsr2l	equ	0xFD9
 14720                           status	equ	0xFD8
 14721                           
 14722 ;; *************** function ___lwmod *****************
 14723 ;; Defined at:
 14724 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14725 ;; Parameters:    Size  Location     Type
 14726 ;;  dividend        2    0[BANK0 ] unsigned int 
 14727 ;;  divisor         2    2[BANK0 ] unsigned int 
 14728 ;; Auto vars:     Size  Location     Type
 14729 ;;  counter         1    4[BANK0 ] unsigned char 
 14730 ;; Return value:  Size  Location     Type
 14731 ;;                  2    0[BANK0 ] unsigned int 
 14732 ;; Registers used:
 14733 ;;		wreg, status,2, status,0
 14734 ;; Tracked objects:
 14735 ;;		On entry : 0/0
 14736 ;;		On exit  : 0/0
 14737 ;;		Unchanged: 0/0
 14738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14739 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14742 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14743 ;;Total ram usage:        5 bytes
 14744 ;; Hardware stack levels used:    1
 14745 ;; Hardware stack levels required when called:   12
 14746 ;; This function calls:
 14747 ;;		Nothing
 14748 ;; This function is called by:
 14749 ;;		_ringbuf_put_num
 14750 ;;		_data_out
 14751 ;;		_display_LCD
 14752 ;; This function uses a non-reentrant model
 14753 ;;
 14754                           
 14755                           	psect	text44
 14756  0164D8                     __ptext44:
 14757                           	opt stack 0
 14758  0164D8                     ___lwmod:
 14759                           	opt stack 16
 14760                           
 14761                           ;incstack = 0
 14762  0164D8  0100               	movlb	0	; () banked
 14763  0164DA  5162               	movf	___lwmod@divisor& (0+255),w,b
 14764  0164DC  0100               	movlb	0	; () banked
 14765  0164DE  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14766  0164E0  B4D8               	btfsc	status,2,c
 14767  0164E2  D026               	goto	l2481
 14768                           
 14769                           ; BSR set to: 0
 14770  0164E4  0E01               	movlw	1
 14771  0164E6  0100               	movlb	0	; () banked
 14772  0164E8  6F64               	movwf	___lwmod@counter& (0+255),b
 14773  0164EA  D006               	goto	l12147
 14774  0164EC                     l12145:
 14775                           
 14776                           ; BSR set to: 0
 14777  0164EC  0100               	movlb	0	; () banked
 14778  0164EE  90D8               	bcf	status,0,c
 14779  0164F0  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 14780  0164F2  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14781  0164F4  0100               	movlb	0	; () banked
 14782  0164F6  2B64               	incf	___lwmod@counter& (0+255),f,b
 14783  0164F8                     l12147:
 14784                           
 14785                           ; BSR set to: 0
 14786  0164F8  0100               	movlb	0	; () banked
 14787  0164FA  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14788  0164FC  D7F7               	goto	l12145
 14789  0164FE                     l12149:
 14790                           
 14791                           ; BSR set to: 0
 14792  0164FE  0100               	movlb	0	; () banked
 14793  016500  5162               	movf	___lwmod@divisor& (0+255),w,b
 14794  016502  0100               	movlb	0	; () banked
 14795  016504  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 14796  016506  0100               	movlb	0	; () banked
 14797  016508  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14798  01650A  0100               	movlb	0	; () banked
 14799  01650C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14800  01650E  A0D8               	btfss	status,0,c
 14801  016510  D008               	goto	l12153
 14802                           
 14803                           ; BSR set to: 0
 14804  016512  0100               	movlb	0	; () banked
 14805  016514  5162               	movf	___lwmod@divisor& (0+255),w,b
 14806  016516  0100               	movlb	0	; () banked
 14807  016518  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 14808  01651A  0100               	movlb	0	; () banked
 14809  01651C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14810  01651E  0100               	movlb	0	; () banked
 14811  016520  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14812  016522                     l12153:
 14813                           
 14814                           ; BSR set to: 0
 14815  016522  0100               	movlb	0	; () banked
 14816  016524  90D8               	bcf	status,0,c
 14817  016526  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14818  016528  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 14819                           
 14820                           ; BSR set to: 0
 14821  01652A  0100               	movlb	0	; () banked
 14822  01652C  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 14823  01652E  D7E7               	goto	l12149
 14824  016530                     l2481:
 14825                           
 14826                           ; BSR set to: 0
 14827  016530  C060  F060         	movff	___lwmod@dividend,?___lwmod
 14828  016534  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 14829                           
 14830                           ; BSR set to: 0
 14831  016538  0012               	return		;funcret
 14832  01653A                     __end_of___lwmod:
 14833                           	opt stack 0
 14834                           tblptru	equ	0xFF8
 14835                           tblptrh	equ	0xFF7
 14836                           tblptrl	equ	0xFF6
 14837                           tablat	equ	0xFF5
 14838                           prodh	equ	0xFF4
 14839                           prodl	equ	0xFF3
 14840                           intcon	equ	0xFF2
 14841                           indf0	equ	0xFEF
 14842                           postinc0	equ	0xFEE
 14843                           fsr0h	equ	0xFEA
 14844                           fsr0l	equ	0xFE9
 14845                           wreg	equ	0xFE8
 14846                           postinc1	equ	0xFE6
 14847                           postdec1	equ	0xFE5
 14848                           fsr1h	equ	0xFE2
 14849                           fsr1l	equ	0xFE1
 14850                           indf2	equ	0xFDF
 14851                           postinc2	equ	0xFDE
 14852                           postdec2	equ	0xFDD
 14853                           plusw2	equ	0xFDB
 14854                           fsr2h	equ	0xFDA
 14855                           fsr2l	equ	0xFD9
 14856                           status	equ	0xFD8
 14857                           
 14858 ;; *************** function _Auto_cut *****************
 14859 ;; Defined at:
 14860 ;;		line 49 in file "ChargeStation_task.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;		None
 14863 ;; Auto vars:     Size  Location     Type
 14864 ;;  i               1   30[BANK0 ] unsigned char 
 14865 ;; Return value:  Size  Location     Type
 14866 ;;		None               void
 14867 ;; Registers used:
 14868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14869 ;; Tracked objects:
 14870 ;;		On entry : 0/0
 14871 ;;		On exit  : 0/0
 14872 ;;		Unchanged: 0/0
 14873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14876 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14878 ;;Total ram usage:        3 bytes
 14879 ;; Hardware stack levels used:    1
 14880 ;; Hardware stack levels required when called:   13
 14881 ;; This function calls:
 14882 ;;		_ADC
 14883 ;;		_ANALOG_IN
 14884 ;;		_OUT
 14885 ;;		___wmul
 14886 ;; This function is called by:
 14887 ;;		_normal_task
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891                           	psect	text45
 14892  013A44                     __ptext45:
 14893                           	opt stack 0
 14894  013A44                     _Auto_cut:
 14895                           	opt stack 16
 14896                           
 14897                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;incstack = 0
 14901  013A44  0E00               	movlw	0
 14902  013A46  0100               	movlb	0	; () banked
 14903  013A48  6F7E               	movwf	Auto_cut@i& (0+255),b
 14904  013A4A                     l12415:
 14905                           
 14906                           ; BSR set to: 0
 14907  013A4A  0E02               	movlw	2
 14908  013A4C  0100               	movlb	0	; () banked
 14909  013A4E  657E               	cpfsgt	Auto_cut@i& (0+255),b
 14910  013A50  D001               	goto	l12419
 14911  013A52  0012               	return	
 14912  013A54                     l12419:
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 14916  013A54  0100               	movlb	0	; () banked
 14917  013A56  517E               	movf	Auto_cut@i& (0+255),w,b
 14918  013A58  ECF0  F0B5         	call	_ANALOG_IN
 14919  013A5C  ECD9  F0B5         	call	_ADC
 14920  013A60  C060  F076         	movff	?_ADC,___wmul@multiplier
 14921  013A64  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 14922  013A68  0E00               	movlw	0
 14923  013A6A  0100               	movlb	0	; () banked
 14924  013A6C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14925  013A6E  0E0D               	movlw	13
 14926  013A70  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14927  013A72  EC72  F0B5         	call	___wmul	;wreg free
 14928  013A76  0E04               	movlw	4
 14929  013A78  0100               	movlb	0	; () banked
 14930  013A7A  6F7C               	movwf	??_Auto_cut& (0+255),b
 14931  013A7C                     u13955:
 14932  013A7C  0100               	movlb	0	; () banked
 14933  013A7E  90D8               	bcf	status,0,c
 14934  013A80  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 14935  013A82  3376               	rrcf	?___wmul& (0+255),f,b
 14936  013A84  0100               	movlb	0	; () banked
 14937  013A86  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 14938  013A88  D7F9               	goto	u13955
 14939  013A8A  0100               	movlb	0	; () banked
 14940  013A8C  517E               	movf	Auto_cut@i& (0+255),w,b
 14941  013A8E  0D17               	mullw	23
 14942  013A90  0E06               	movlw	6
 14943  013A92  26F3               	addwf	prodl,f,c
 14944  013A94  0E00               	movlw	0
 14945  013A96  22F4               	addwfc	prodh,f,c
 14946  013A98  0E2E               	movlw	low _port
 14947  013A9A  24F3               	addwf	prodl,w,c
 14948  013A9C  6ED9               	movwf	fsr2l,c
 14949  013A9E  0E01               	movlw	high _port
 14950  013AA0  20F4               	addwfc	prodh,w,c
 14951  013AA2  6EDA               	movwf	fsr2h,c
 14952  013AA4  0100               	movlb	0	; () banked
 14953  013AA6  C076  FFDE         	movff	?___wmul,postinc2
 14954  013AAA  0100               	movlb	0	; () banked
 14955  013AAC  C077  FFDD         	movff	?___wmul+1,postdec2
 14956                           
 14957                           ; BSR set to: 0
 14958                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 14959  013AB0  0100               	movlb	0	; () banked
 14960  013AB2  517E               	movf	Auto_cut@i& (0+255),w,b
 14961  013AB4  0D17               	mullw	23
 14962  013AB6  0E16               	movlw	22
 14963  013AB8  26F3               	addwf	prodl,f,c
 14964  013ABA  0E00               	movlw	0
 14965  013ABC  22F4               	addwfc	prodh,f,c
 14966  013ABE  0E2E               	movlw	low _port
 14967  013AC0  24F3               	addwf	prodl,w,c
 14968  013AC2  6ED9               	movwf	fsr2l,c
 14969  013AC4  0E01               	movlw	high _port
 14970  013AC6  20F4               	addwfc	prodh,w,c
 14971  013AC8  6EDA               	movwf	fsr2h,c
 14972  013ACA  0101               	movlb	1	; () banked
 14973  013ACC  A0DF               	btfss	indf2,0,c
 14974  013ACE  D051               	goto	l12431
 14975                           
 14976                           ; BSR set to: 1
 14977                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 14978  013AD0  0100               	movlb	0	; () banked
 14979  013AD2  517E               	movf	Auto_cut@i& (0+255),w,b
 14980  013AD4  0D17               	mullw	23
 14981  013AD6  0E06               	movlw	6
 14982  013AD8  26F3               	addwf	prodl,f,c
 14983  013ADA  0E00               	movlw	0
 14984  013ADC  22F4               	addwfc	prodh,f,c
 14985  013ADE  0E2E               	movlw	low _port
 14986  013AE0  24F3               	addwf	prodl,w,c
 14987  013AE2  6ED9               	movwf	fsr2l,c
 14988  013AE4  0E01               	movlw	high _port
 14989  013AE6  20F4               	addwfc	prodh,w,c
 14990  013AE8  6EDA               	movwf	fsr2h,c
 14991  013AEA  0E01               	movlw	1
 14992  013AEC  50DB               	movf	plusw2,w,c
 14993  013AEE  E130               	bnz	l12429
 14994  013AF0  0E64               	movlw	100
 14995  013AF2  5CDE               	subwf	postinc2,w,c
 14996  013AF4  B0D8               	btfsc	status,0,c
 14997  013AF6  D02C               	goto	l12429
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 15001  013AF8  0100               	movlb	0	; () banked
 15002  013AFA  517E               	movf	Auto_cut@i& (0+255),w,b
 15003  013AFC  0D17               	mullw	23
 15004  013AFE  0E14               	movlw	20
 15005  013B00  26F3               	addwf	prodl,f,c
 15006  013B02  0E00               	movlw	0
 15007  013B04  22F4               	addwfc	prodh,f,c
 15008  013B06  0E2E               	movlw	low _port
 15009  013B08  24F3               	addwf	prodl,w,c
 15010  013B0A  6ED9               	movwf	fsr2l,c
 15011  013B0C  0E01               	movlw	high _port
 15012  013B0E  20F4               	addwfc	prodh,w,c
 15013  013B10  6EDA               	movwf	fsr2h,c
 15014  013B12  2ADE               	incf	postinc2,f,c
 15015  013B14  0E00               	movlw	0
 15016  013B16  22DD               	addwfc	postdec2,f,c
 15017                           
 15018                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 15019  013B18  0100               	movlb	0	; () banked
 15020  013B1A  517E               	movf	Auto_cut@i& (0+255),w,b
 15021  013B1C  0D17               	mullw	23
 15022  013B1E  0E14               	movlw	20
 15023  013B20  26F3               	addwf	prodl,f,c
 15024  013B22  0E00               	movlw	0
 15025  013B24  22F4               	addwfc	prodh,f,c
 15026  013B26  0E2E               	movlw	low _port
 15027  013B28  24F3               	addwf	prodl,w,c
 15028  013B2A  6ED9               	movwf	fsr2l,c
 15029  013B2C  0E01               	movlw	high _port
 15030  013B2E  20F4               	addwfc	prodh,w,c
 15031  013B30  6EDA               	movwf	fsr2h,c
 15032  013B32  0E01               	movlw	1
 15033  013B34  50DB               	movf	plusw2,w,c
 15034  013B36  E104               	bnz	u13980
 15035  013B38  0E07               	movlw	7
 15036  013B3A  5CDE               	subwf	postinc2,w,c
 15037  013B3C  A0D8               	btfss	status,0,c
 15038  013B3E  D019               	goto	l12431
 15039  013B40                     u13980:
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;ChargeStation_task.c: 57: OUT(i, 0);
 15043  013B40  0E00               	movlw	0
 15044  013B42  0100               	movlb	0	; () banked
 15045  013B44  6F60               	movwf	OUT@value& (0+255),b
 15046  013B46  0100               	movlb	0	; () banked
 15047  013B48  517E               	movf	Auto_cut@i& (0+255),w,b
 15048  013B4A  ECC6  F0B0         	call	_OUT
 15049                           
 15050                           ;ChargeStation_task.c: 58: }
 15051                           ;ChargeStation_task.c: 59: } else {
 15052  013B4E  D011               	goto	l12431
 15053  013B50                     l12429:
 15054                           
 15055                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 15056  013B50  0100               	movlb	0	; () banked
 15057  013B52  517E               	movf	Auto_cut@i& (0+255),w,b
 15058  013B54  0D17               	mullw	23
 15059  013B56  0E14               	movlw	20
 15060  013B58  26F3               	addwf	prodl,f,c
 15061  013B5A  0E00               	movlw	0
 15062  013B5C  22F4               	addwfc	prodh,f,c
 15063  013B5E  0E2E               	movlw	low _port
 15064  013B60  24F3               	addwf	prodl,w,c
 15065  013B62  6ED9               	movwf	fsr2l,c
 15066  013B64  0E01               	movlw	high _port
 15067  013B66  20F4               	addwfc	prodh,w,c
 15068  013B68  6EDA               	movwf	fsr2h,c
 15069  013B6A  0E00               	movlw	0
 15070  013B6C  6EDE               	movwf	postinc2,c
 15071  013B6E  0E00               	movlw	0
 15072  013B70  6EDD               	movwf	postdec2,c
 15073  013B72                     l12431:
 15074  013B72  0100               	movlb	0	; () banked
 15075  013B74  2B7E               	incf	Auto_cut@i& (0+255),f,b
 15076  013B76  D769               	goto	l12415
 15077  013B78                     __end_of_Auto_cut:
 15078                           	opt stack 0
 15079                           tblptru	equ	0xFF8
 15080                           tblptrh	equ	0xFF7
 15081                           tblptrl	equ	0xFF6
 15082                           tablat	equ	0xFF5
 15083                           prodh	equ	0xFF4
 15084                           prodl	equ	0xFF3
 15085                           intcon	equ	0xFF2
 15086                           indf0	equ	0xFEF
 15087                           postinc0	equ	0xFEE
 15088                           fsr0h	equ	0xFEA
 15089                           fsr0l	equ	0xFE9
 15090                           wreg	equ	0xFE8
 15091                           postinc1	equ	0xFE6
 15092                           postdec1	equ	0xFE5
 15093                           fsr1h	equ	0xFE2
 15094                           fsr1l	equ	0xFE1
 15095                           indf2	equ	0xFDF
 15096                           postinc2	equ	0xFDE
 15097                           postdec2	equ	0xFDD
 15098                           plusw2	equ	0xFDB
 15099                           fsr2h	equ	0xFDA
 15100                           fsr2l	equ	0xFD9
 15101                           status	equ	0xFD8
 15102                           
 15103 ;; *************** function ___wmul *****************
 15104 ;; Defined at:
 15105 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15106 ;; Parameters:    Size  Location     Type
 15107 ;;  multiplier      2   22[BANK0 ] unsigned int 
 15108 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 15109 ;; Auto vars:     Size  Location     Type
 15110 ;;  product         2   26[BANK0 ] unsigned int 
 15111 ;; Return value:  Size  Location     Type
 15112 ;;                  2   22[BANK0 ] unsigned int 
 15113 ;; Registers used:
 15114 ;;		wreg, status,2, status,0, prodl, prodh
 15115 ;; Tracked objects:
 15116 ;;		On entry : 0/0
 15117 ;;		On exit  : 0/0
 15118 ;;		Unchanged: 0/0
 15119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15123 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15124 ;;Total ram usage:        6 bytes
 15125 ;; Hardware stack levels used:    1
 15126 ;; Hardware stack levels required when called:   12
 15127 ;; This function calls:
 15128 ;;		Nothing
 15129 ;; This function is called by:
 15130 ;;		_Auto_cut
 15131 ;;		_ctmu_set_ratio
 15132 ;;		_sprintf
 15133 ;;		_atoi
 15134 ;; This function uses a non-reentrant model
 15135 ;;
 15136                           
 15137                           	psect	text46
 15138  016AE4                     __ptext46:
 15139                           	opt stack 0
 15140  016AE4                     ___wmul:
 15141                           	opt stack 12
 15142                           
 15143                           ; BSR set to: 0
 15144                           ;incstack = 0
 15145  016AE4  0100               	movlb	0	; () banked
 15146  016AE6  5176               	movf	___wmul@multiplier& (0+255),w,b
 15147  016AE8  0100               	movlb	0	; () banked
 15148  016AEA  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15149  016AEC  CFF3 F07A          	movff	prodl,___wmul@product
 15150  016AF0  CFF4 F07B          	movff	prodh,___wmul@product+1
 15151  016AF4  0100               	movlb	0	; () banked
 15152  016AF6  5176               	movf	___wmul@multiplier& (0+255),w,b
 15153  016AF8  0100               	movlb	0	; () banked
 15154  016AFA  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15155  016AFC  50F3               	movf	prodl,w,c
 15156  016AFE  0100               	movlb	0	; () banked
 15157  016B00  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15158  016B02  0100               	movlb	0	; () banked
 15159  016B04  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15160  016B06  0100               	movlb	0	; () banked
 15161  016B08  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15162  016B0A  50F3               	movf	prodl,w,c
 15163  016B0C  0100               	movlb	0	; () banked
 15164  016B0E  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15165                           
 15166                           ; BSR set to: 0
 15167  016B10  C07A  F076         	movff	___wmul@product,?___wmul
 15168  016B14  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 15169  016B18  0012               	return	
 15170  016B1A                     __end_of___wmul:
 15171                           	opt stack 0
 15172                           tblptru	equ	0xFF8
 15173                           tblptrh	equ	0xFF7
 15174                           tblptrl	equ	0xFF6
 15175                           tablat	equ	0xFF5
 15176                           prodh	equ	0xFF4
 15177                           prodl	equ	0xFF3
 15178                           intcon	equ	0xFF2
 15179                           indf0	equ	0xFEF
 15180                           postinc0	equ	0xFEE
 15181                           fsr0h	equ	0xFEA
 15182                           fsr0l	equ	0xFE9
 15183                           wreg	equ	0xFE8
 15184                           postinc1	equ	0xFE6
 15185                           postdec1	equ	0xFE5
 15186                           fsr1h	equ	0xFE2
 15187                           fsr1l	equ	0xFE1
 15188                           indf2	equ	0xFDF
 15189                           postinc2	equ	0xFDE
 15190                           postdec2	equ	0xFDD
 15191                           plusw2	equ	0xFDB
 15192                           fsr2h	equ	0xFDA
 15193                           fsr2l	equ	0xFD9
 15194                           status	equ	0xFD8
 15195                           
 15196 ;; *************** function _OUT *****************
 15197 ;; Defined at:
 15198 ;;		line 7 in file "io.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;  b               1    wreg     unsigned char 
 15201 ;;  value           1    0[BANK0 ] unsigned char 
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;  b               1    1[BANK0 ] unsigned char 
 15204 ;; Return value:  Size  Location     Type
 15205 ;;		None               void
 15206 ;; Registers used:
 15207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15208 ;; Tracked objects:
 15209 ;;		On entry : 0/0
 15210 ;;		On exit  : 0/0
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15213 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15217 ;;Total ram usage:        2 bytes
 15218 ;; Hardware stack levels used:    1
 15219 ;; Hardware stack levels required when called:   12
 15220 ;; This function calls:
 15221 ;;		Nothing
 15222 ;; This function is called by:
 15223 ;;		_Auto_cut
 15224 ;;		_port_button_task
 15225 ;;		_sleep_task
 15226 ;;		_software_init
 15227 ;; This function uses a non-reentrant model
 15228 ;;
 15229                           
 15230                           	psect	text47
 15231  01618C                     __ptext47:
 15232                           	opt stack 0
 15233  01618C                     _OUT:
 15234                           	opt stack 17
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;incstack = 0
 15238                           ;OUT@b stored from wreg
 15239  01618C  0100               	movlb	0	; () banked
 15240  01618E  6F61               	movwf	OUT@b& (0+255),b
 15241                           
 15242                           ;io.c: 8: port[b].flag.out_flag = value;
 15243  016190  0100               	movlb	0	; () banked
 15244  016192  5161               	movf	OUT@b& (0+255),w,b
 15245  016194  0D17               	mullw	23
 15246  016196  0E16               	movlw	22
 15247  016198  26F3               	addwf	prodl,f,c
 15248  01619A  0E00               	movlw	0
 15249  01619C  22F4               	addwfc	prodh,f,c
 15250  01619E  0E2E               	movlw	low _port
 15251  0161A0  24F3               	addwf	prodl,w,c
 15252  0161A2  6ED9               	movwf	fsr2l,c
 15253  0161A4  0E01               	movlw	high _port
 15254  0161A6  20F4               	addwfc	prodh,w,c
 15255  0161A8  6EDA               	movwf	fsr2h,c
 15256  0161AA  0100               	movlb	0	; () banked
 15257  0161AC  B160               	btfsc	OUT@value& (0+255),0,b
 15258  0161AE  D003               	bra	u13205
 15259  0161B0  0101               	movlb	1	; () banked
 15260  0161B2  94DF               	bcf	indf2,2,c
 15261  0161B4  D002               	bra	u13206
 15262  0161B6                     u13205:
 15263  0161B6  0101               	movlb	1	; () banked
 15264  0161B8  84DF               	bsf	indf2,2,c
 15265  0161BA                     u13206:
 15266                           
 15267                           ;io.c: 9: switch (b) {
 15268  0161BA  D015               	goto	l11851
 15269  0161BC                     l1688:
 15270                           
 15271                           ; BSR set to: 0
 15272                           ;io.c: 11: LATA5 = value;
 15273  0161BC  0100               	movlb	0	; () banked
 15274  0161BE  A160               	btfss	OUT@value& (0+255),0,b
 15275  0161C0  D002               	goto	u13210
 15276  0161C2  8A89               	bsf	3977,5,c	;volatile
 15277  0161C4  0012               	return	
 15278  0161C6                     u13210:
 15279  0161C6  9A89               	bcf	3977,5,c	;volatile
 15280                           
 15281                           ;io.c: 12: break;
 15282  0161C8  0012               	return	
 15283  0161CA                     l1690:
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;io.c: 14: LATA6 = value;
 15287  0161CA  0100               	movlb	0	; () banked
 15288  0161CC  A160               	btfss	OUT@value& (0+255),0,b
 15289  0161CE  D002               	goto	u13230
 15290  0161D0  8C89               	bsf	3977,6,c	;volatile
 15291  0161D2  0012               	return	
 15292  0161D4                     u13230:
 15293  0161D4  9C89               	bcf	3977,6,c	;volatile
 15294                           
 15295                           ;io.c: 15: break;
 15296  0161D6  0012               	return	
 15297  0161D8                     l1691:
 15298                           
 15299                           ; BSR set to: 0
 15300                           ;io.c: 17: LATA7 = value;
 15301  0161D8  0100               	movlb	0	; () banked
 15302  0161DA  A160               	btfss	OUT@value& (0+255),0,b
 15303  0161DC  D002               	goto	u13250
 15304  0161DE  8E89               	bsf	3977,7,c	;volatile
 15305  0161E0  0012               	return	
 15306  0161E2                     u13250:
 15307  0161E2  9E89               	bcf	3977,7,c	;volatile
 15308                           
 15309                           ;io.c: 19: }
 15310                           
 15311                           ;io.c: 18: break;
 15312  0161E4  0012               	return	
 15313  0161E6                     l11851:
 15314  0161E6  0100               	movlb	0	; () banked
 15315  0161E8  5161               	movf	OUT@b& (0+255),w,b
 15316                           
 15317                           ; Switch size 1, requested type "space"
 15318                           ; Number of cases is 3, Range of values is 0 to 2
 15319                           ; switch strategies available:
 15320                           ; Name         Instructions Cycles
 15321                           ; simple_byte           10     6 (average)
 15322                           ;	Chosen strategy is simple_byte
 15323  0161EA  0A00               	xorlw	0	; case 0
 15324  0161EC  B4D8               	btfsc	status,2,c
 15325  0161EE  D7E6               	goto	l1688
 15326  0161F0  0A01               	xorlw	1	; case 1
 15327  0161F2  B4D8               	btfsc	status,2,c
 15328  0161F4  D7EA               	goto	l1690
 15329  0161F6  0A03               	xorlw	3	; case 2
 15330  0161F8  A4D8               	btfss	status,2,c
 15331  0161FA  0012               	return	
 15332  0161FC  D7ED               	goto	l1691
 15333  0161FE                     __end_of_OUT:
 15334                           	opt stack 0
 15335                           tblptru	equ	0xFF8
 15336                           tblptrh	equ	0xFF7
 15337                           tblptrl	equ	0xFF6
 15338                           tablat	equ	0xFF5
 15339                           prodh	equ	0xFF4
 15340                           prodl	equ	0xFF3
 15341                           intcon	equ	0xFF2
 15342                           indf0	equ	0xFEF
 15343                           postinc0	equ	0xFEE
 15344                           fsr0h	equ	0xFEA
 15345                           fsr0l	equ	0xFE9
 15346                           wreg	equ	0xFE8
 15347                           postinc1	equ	0xFE6
 15348                           postdec1	equ	0xFE5
 15349                           fsr1h	equ	0xFE2
 15350                           fsr1l	equ	0xFE1
 15351                           indf2	equ	0xFDF
 15352                           postinc2	equ	0xFDE
 15353                           postdec2	equ	0xFDD
 15354                           plusw2	equ	0xFDB
 15355                           fsr2h	equ	0xFDA
 15356                           fsr2l	equ	0xFD9
 15357                           status	equ	0xFD8
 15358                           
 15359 ;; *************** function _ANALOG_IN *****************
 15360 ;; Defined at:
 15361 ;;		line 23 in file "io.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;  b               1    wreg     unsigned char 
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;  b               1    0[BANK0 ] unsigned char 
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  1    wreg      unsigned char 
 15368 ;; Registers used:
 15369 ;;		wreg, status,2, status,0
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15378 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15379 ;;Total ram usage:        1 bytes
 15380 ;; Hardware stack levels used:    1
 15381 ;; Hardware stack levels required when called:   12
 15382 ;; This function calls:
 15383 ;;		Nothing
 15384 ;; This function is called by:
 15385 ;;		_Auto_cut
 15386 ;; This function uses a non-reentrant model
 15387 ;;
 15388                           
 15389                           	psect	text48
 15390  016BE0                     __ptext48:
 15391                           	opt stack 0
 15392  016BE0                     _ANALOG_IN:
 15393                           	opt stack 16
 15394                           
 15395                           ;incstack = 0
 15396                           ;ANALOG_IN@b stored from wreg
 15397  016BE0  0100               	movlb	0	; () banked
 15398  016BE2  6F60               	movwf	ANALOG_IN@b& (0+255),b
 15399                           
 15400                           ;io.c: 24: switch (b) {
 15401  016BE4  D006               	goto	l11841
 15402  016BE6                     l11827:
 15403                           
 15404                           ;io.c: 26: return 8;
 15405  016BE6  0E08               	movlw	8
 15406  016BE8  0012               	return	
 15407  016BEA                     l11831:
 15408                           
 15409                           ;io.c: 28: return 9;
 15410  016BEA  0E09               	movlw	9
 15411  016BEC  0012               	return	
 15412  016BEE                     l11835:
 15413                           
 15414                           ;io.c: 30: return 10;
 15415  016BEE  0E0A               	movlw	10
 15416  016BF0  0012               	return	
 15417  016BF2                     l11841:
 15418  016BF2  0100               	movlb	0	; () banked
 15419  016BF4  5160               	movf	ANALOG_IN@b& (0+255),w,b
 15420                           
 15421                           ; Switch size 1, requested type "space"
 15422                           ; Number of cases is 3, Range of values is 0 to 2
 15423                           ; switch strategies available:
 15424                           ; Name         Instructions Cycles
 15425                           ; simple_byte           10     6 (average)
 15426                           ;	Chosen strategy is simple_byte
 15427  016BF6  0A00               	xorlw	0	; case 0
 15428  016BF8  B4D8               	btfsc	status,2,c
 15429  016BFA  D7F5               	goto	l11827
 15430  016BFC  0A01               	xorlw	1	; case 1
 15431  016BFE  B4D8               	btfsc	status,2,c
 15432  016C00  D7F4               	goto	l11831
 15433  016C02  0A03               	xorlw	3	; case 2
 15434  016C04  B4D8               	btfsc	status,2,c
 15435  016C06  D7F3               	goto	l11835
 15436                           
 15437                           ;io.c: 32: return 0;
 15438                           
 15439                           ; BSR set to: 0
 15440  016C08  0E00               	movlw	0
 15441  016C0A  0012               	return	
 15442  016C0C                     __end_of_ANALOG_IN:
 15443                           	opt stack 0
 15444                           tblptru	equ	0xFF8
 15445                           tblptrh	equ	0xFF7
 15446                           tblptrl	equ	0xFF6
 15447                           tablat	equ	0xFF5
 15448                           prodh	equ	0xFF4
 15449                           prodl	equ	0xFF3
 15450                           intcon	equ	0xFF2
 15451                           indf0	equ	0xFEF
 15452                           postinc0	equ	0xFEE
 15453                           fsr0h	equ	0xFEA
 15454                           fsr0l	equ	0xFE9
 15455                           wreg	equ	0xFE8
 15456                           postinc1	equ	0xFE6
 15457                           postdec1	equ	0xFE5
 15458                           fsr1h	equ	0xFE2
 15459                           fsr1l	equ	0xFE1
 15460                           indf2	equ	0xFDF
 15461                           postinc2	equ	0xFDE
 15462                           postdec2	equ	0xFDD
 15463                           plusw2	equ	0xFDB
 15464                           fsr2h	equ	0xFDA
 15465                           fsr2l	equ	0xFD9
 15466                           status	equ	0xFD8
 15467                           
 15468 ;; *************** function _ADC *****************
 15469 ;; Defined at:
 15470 ;;		line 156 in file "../My_library/My_PIC.c"
 15471 ;; Parameters:    Size  Location     Type
 15472 ;;  ch              1    wreg     unsigned char 
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;  ch              1    3[BANK0 ] unsigned char 
 15475 ;; Return value:  Size  Location     Type
 15476 ;;                  2    0[BANK0 ] unsigned int 
 15477 ;; Registers used:
 15478 ;;		wreg, status,2, status,0
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15484 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15486 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15487 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15488 ;;Total ram usage:        4 bytes
 15489 ;; Hardware stack levels used:    1
 15490 ;; Hardware stack levels required when called:   12
 15491 ;; This function calls:
 15492 ;;		Nothing
 15493 ;; This function is called by:
 15494 ;;		_Auto_cut
 15495 ;;		_sleep_task
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499                           	psect	text49
 15500  016BB2                     __ptext49:
 15501                           	opt stack 0
 15502  016BB2                     _ADC:
 15503                           	opt stack 17
 15504                           
 15505                           ;incstack = 0
 15506                           ;ADC@ch stored from wreg
 15507  016BB2  0100               	movlb	0	; () banked
 15508  016BB4  6F63               	movwf	ADC@ch& (0+255),b
 15509                           
 15510                           ;My_PIC.c: 157: ADCON0bits.CHS = ch;
 15511  016BB6  C063  F062         	movff	ADC@ch,??_ADC
 15512  016BBA  0100               	movlb	0	; () banked
 15513  016BBC  4762               	rlncf	??_ADC& (0+255),f,b
 15514  016BBE  4762               	rlncf	??_ADC& (0+255),f,b
 15515  016BC0  50C2               	movf	4034,w,c	;volatile
 15516  016BC2  0100               	movlb	0	; () banked
 15517  016BC4  1962               	xorwf	??_ADC& (0+255),w,b
 15518  016BC6  0BC3               	andlw	-61
 15519  016BC8  1962               	xorwf	??_ADC& (0+255),w,b
 15520  016BCA  6EC2               	movwf	4034,c	;volatile
 15521                           
 15522                           ; BSR set to: 0
 15523                           ;My_PIC.c: 158: ADCON0bits.ADON = 1;
 15524  016BCC  80C2               	bsf	4034,0,c	;volatile
 15525                           
 15526                           ; BSR set to: 0
 15527                           ;My_PIC.c: 160: PIR1bits.ADIF = 0;
 15528  016BCE  9C9E               	bcf	3998,6,c	;volatile
 15529                           
 15530                           ; BSR set to: 0
 15531                           ;My_PIC.c: 161: ADCON0bits.GO_nDONE = 1;
 15532  016BD0  82C2               	bsf	4034,1,c	;volatile
 15533  016BD2                     l724:
 15534  016BD2  AC9E               	btfss	3998,6,c	;volatile
 15535  016BD4  D7FE               	goto	l724
 15536                           
 15537                           ;My_PIC.c: 163: return ADRES;
 15538  016BD6  CFC3 F060          	movff	4035,?_ADC	;volatile
 15539  016BDA  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 15540  016BDE  0012               	return		;funcret
 15541  016BE0                     __end_of_ADC:
 15542                           	opt stack 0
 15543                           tblptru	equ	0xFF8
 15544                           tblptrh	equ	0xFF7
 15545                           tblptrl	equ	0xFF6
 15546                           tablat	equ	0xFF5
 15547                           prodh	equ	0xFF4
 15548                           prodl	equ	0xFF3
 15549                           intcon	equ	0xFF2
 15550                           indf0	equ	0xFEF
 15551                           postinc0	equ	0xFEE
 15552                           fsr0h	equ	0xFEA
 15553                           fsr0l	equ	0xFE9
 15554                           wreg	equ	0xFE8
 15555                           postinc1	equ	0xFE6
 15556                           postdec1	equ	0xFE5
 15557                           fsr1h	equ	0xFE2
 15558                           fsr1l	equ	0xFE1
 15559                           indf2	equ	0xFDF
 15560                           postinc2	equ	0xFDE
 15561                           postdec2	equ	0xFDD
 15562                           plusw2	equ	0xFDB
 15563                           fsr2h	equ	0xFDA
 15564                           fsr2l	equ	0xFD9
 15565                           status	equ	0xFD8
 15566                           
 15567 ;; *************** function _hardware_init *****************
 15568 ;; Defined at:
 15569 ;;		line 84 in file "main.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;		None
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;		None
 15574 ;; Return value:  Size  Location     Type
 15575 ;;		None               void
 15576 ;; Registers used:
 15577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15587 ;;Total ram usage:        0 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; Hardware stack levels required when called:   17
 15590 ;; This function calls:
 15591 ;;		_ADC_init
 15592 ;;		_CTMU_init
 15593 ;;		_RTCC_init
 15594 ;;		_ST7032_init
 15595 ;;		_USB_CDC_init
 15596 ;;		_timer0_init
 15597 ;;		_timer1_init
 15598 ;;		_timer3_init
 15599 ;; This function is called by:
 15600 ;;		_main
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text50
 15605  016766                     __ptext50:
 15606                           	opt stack 0
 15607  016766                     _hardware_init:
 15608                           	opt stack 13
 15609                           
 15610                           ;main.c: 85: OSCCONbits.IRCF = 7;
 15611                           
 15612                           ;incstack = 0
 15613  016766  88D3               	bsf	4051,4,c	;volatile
 15614  016768  8AD3               	bsf	4051,5,c	;volatile
 15615  01676A  8CD3               	bsf	4051,6,c	;volatile
 15616                           
 15617                           ;main.c: 86: OSCTUNEbits.PLLEN = 1;
 15618  01676C  8C9B               	bsf	3995,6,c	;volatile
 15619                           
 15620                           ;main.c: 87: OSCCONbits.SCS = 0;
 15621  01676E  0EFC               	movlw	-4
 15622  016770  16D3               	andwf	4051,f,c	;volatile
 15623                           
 15624                           ;main.c: 88: TRISA = 0b00011111;
 15625  016772  0E1F               	movlw	31
 15626  016774  6E92               	movwf	3986,c	;volatile
 15627                           
 15628                           ;main.c: 89: TRISB = 0b00111111;
 15629  016776  0E3F               	movlw	63
 15630  016778  6E93               	movwf	3987,c	;volatile
 15631                           
 15632                           ;main.c: 90: TRISC = 0b10110010;
 15633  01677A  0EB2               	movlw	178
 15634  01677C  6E94               	movwf	3988,c	;volatile
 15635                           
 15636                           ;main.c: 91: ANCON0 = 0b11110000;
 15637  01677E  0EF0               	movlw	240
 15638  016780  010F               	movlb	15	; () banked
 15639  016782  6F48               	movwf	72,b	;volatile
 15640                           
 15641                           ;main.c: 92: ANCON1 = 0b00001000;
 15642  016784  0E08               	movlw	8
 15643  016786  010F               	movlb	15	; () banked
 15644  016788  6F49               	movwf	73,b	;volatile
 15645                           
 15646                           ; BSR set to: 15
 15647                           ;main.c: 93: INTCON2bits.RBPU = 0;
 15648  01678A  9EF1               	bcf	intcon2,7,c	;volatile
 15649                           
 15650                           ; BSR set to: 15
 15651                           ;main.c: 95: timer0_init(0);
 15652  01678C  0E00               	movlw	0
 15653  01678E  EC00  F0B5         	call	_timer0_init
 15654                           
 15655                           ;main.c: 96: timer1_init(0, 2);
 15656  016792  0E02               	movlw	2
 15657  016794  0100               	movlb	0	; () banked
 15658  016796  6F60               	movwf	timer1_init@clock_select& (0+255),b
 15659  016798  0E00               	movlw	0
 15660  01679A  EC31  F0B4         	call	_timer1_init
 15661                           
 15662                           ;main.c: 97: timer3_init(2);
 15663  01679E  0E02               	movlw	2
 15664  0167A0  EC06  F0B6         	call	_timer3_init
 15665                           
 15666                           ;main.c: 98: ST7032_init();
 15667  0167A4  EC09  F0A9         	call	_ST7032_init	;wreg free
 15668                           
 15669                           ;main.c: 99: RTCC_init();
 15670  0167A8  ECA2  F0B1         	call	_RTCC_init	;wreg free
 15671                           
 15672                           ;main.c: 100: ADC_init(0);
 15673  0167AC  0E00               	movlw	0
 15674  0167AE  ECE8  F0B6         	call	_ADC_init
 15675                           
 15676                           ;main.c: 101: CTMU_init();
 15677  0167B2  EC9B  F0B6         	call	_CTMU_init	;wreg free
 15678                           
 15679                           ;main.c: 102: USB_CDC_init();
 15680  0167B6  EC75  F0B7         	call	_USB_CDC_init	;wreg free
 15681  0167BA  0012               	return		;funcret
 15682  0167BC                     __end_of_hardware_init:
 15683                           	opt stack 0
 15684                           tblptru	equ	0xFF8
 15685                           tblptrh	equ	0xFF7
 15686                           tblptrl	equ	0xFF6
 15687                           tablat	equ	0xFF5
 15688                           prodh	equ	0xFF4
 15689                           prodl	equ	0xFF3
 15690                           intcon	equ	0xFF2
 15691                           intcon2	equ	0xFF1
 15692                           indf0	equ	0xFEF
 15693                           postinc0	equ	0xFEE
 15694                           fsr0h	equ	0xFEA
 15695                           fsr0l	equ	0xFE9
 15696                           wreg	equ	0xFE8
 15697                           postinc1	equ	0xFE6
 15698                           postdec1	equ	0xFE5
 15699                           fsr1h	equ	0xFE2
 15700                           fsr1l	equ	0xFE1
 15701                           indf2	equ	0xFDF
 15702                           postinc2	equ	0xFDE
 15703                           postdec2	equ	0xFDD
 15704                           plusw2	equ	0xFDB
 15705                           fsr2h	equ	0xFDA
 15706                           fsr2l	equ	0xFD9
 15707                           status	equ	0xFD8
 15708                           
 15709 ;; *************** function _timer3_init *****************
 15710 ;; Defined at:
 15711 ;;		line 101 in file "../My_library/My_PIC.c"
 15712 ;; Parameters:    Size  Location     Type
 15713 ;;  prescaler       1    wreg     unsigned char 
 15714 ;; Auto vars:     Size  Location     Type
 15715 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15716 ;; Return value:  Size  Location     Type
 15717 ;;		None               void
 15718 ;; Registers used:
 15719 ;;		wreg, status,2, status,0
 15720 ;; Tracked objects:
 15721 ;;		On entry : 0/0
 15722 ;;		On exit  : 0/0
 15723 ;;		Unchanged: 0/0
 15724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15727 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15728 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15729 ;;Total ram usage:        2 bytes
 15730 ;; Hardware stack levels used:    1
 15731 ;; Hardware stack levels required when called:   12
 15732 ;; This function calls:
 15733 ;;		Nothing
 15734 ;; This function is called by:
 15735 ;;		_hardware_init
 15736 ;; This function uses a non-reentrant model
 15737 ;;
 15738                           
 15739                           	psect	text51
 15740  016C0C                     __ptext51:
 15741                           	opt stack 0
 15742  016C0C                     _timer3_init:
 15743                           	opt stack 17
 15744                           
 15745                           ;incstack = 0
 15746                           ;timer3_init@prescaler stored from wreg
 15747  016C0C  0100               	movlb	0	; () banked
 15748  016C0E  6F61               	movwf	timer3_init@prescaler& (0+255),b
 15749                           
 15750                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
 15751  016C10  0E3F               	movlw	-193
 15752  016C12  1679               	andwf	3961,f,c	;volatile
 15753                           
 15754                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
 15755  016C14  9679               	bcf	3961,3,c	;volatile
 15756                           
 15757                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
 15758  016C16  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 15759  016C1A  0100               	movlb	0	; () banked
 15760  016C1C  3B60               	swapf	??_timer3_init& (0+255),f,b
 15761  016C1E  5079               	movf	3961,w,c	;volatile
 15762  016C20  0100               	movlb	0	; () banked
 15763  016C22  1960               	xorwf	??_timer3_init& (0+255),w,b
 15764  016C24  0BCF               	andlw	-49
 15765  016C26  1960               	xorwf	??_timer3_init& (0+255),w,b
 15766  016C28  6E79               	movwf	3961,c	;volatile
 15767                           
 15768                           ; BSR set to: 0
 15769                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
 15770  016C2A  9E79               	bcf	3961,7,c	;volatile
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
 15774  016C2C  8079               	bsf	3961,0,c	;volatile
 15775                           
 15776                           ; BSR set to: 0
 15777                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
 15778  016C2E  92A2               	bcf	4002,1,c	;volatile
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
 15782  016C30  92A1               	bcf	4001,1,c	;volatile
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
 15786  016C32  82A0               	bsf	4000,1,c	;volatile
 15787                           
 15788                           ; BSR set to: 0
 15789                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
 15790  016C34  8CF2               	bsf	intcon,6,c	;volatile
 15791                           
 15792                           ; BSR set to: 0
 15793  016C36  0012               	return		;funcret
 15794  016C38                     __end_of_timer3_init:
 15795                           	opt stack 0
 15796                           tblptru	equ	0xFF8
 15797                           tblptrh	equ	0xFF7
 15798                           tblptrl	equ	0xFF6
 15799                           tablat	equ	0xFF5
 15800                           prodh	equ	0xFF4
 15801                           prodl	equ	0xFF3
 15802                           intcon	equ	0xFF2
 15803                           intcon2	equ	0xFF1
 15804                           indf0	equ	0xFEF
 15805                           postinc0	equ	0xFEE
 15806                           fsr0h	equ	0xFEA
 15807                           fsr0l	equ	0xFE9
 15808                           wreg	equ	0xFE8
 15809                           postinc1	equ	0xFE6
 15810                           postdec1	equ	0xFE5
 15811                           fsr1h	equ	0xFE2
 15812                           fsr1l	equ	0xFE1
 15813                           indf2	equ	0xFDF
 15814                           postinc2	equ	0xFDE
 15815                           postdec2	equ	0xFDD
 15816                           plusw2	equ	0xFDB
 15817                           fsr2h	equ	0xFDA
 15818                           fsr2l	equ	0xFD9
 15819                           status	equ	0xFD8
 15820                           
 15821 ;; *************** function _timer1_init *****************
 15822 ;; Defined at:
 15823 ;;		line 70 in file "../My_library/My_PIC.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;  prescaler       1    wreg     unsigned char 
 15826 ;;  clock_select    1    0[BANK0 ] unsigned char 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  prescaler       1    2[BANK0 ] unsigned char 
 15829 ;; Return value:  Size  Location     Type
 15830 ;;		None               void
 15831 ;; Registers used:
 15832 ;;		wreg, status,2, status,0
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15838 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15841 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15842 ;;Total ram usage:        3 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:   12
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_hardware_init
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text52
 15853  016862                     __ptext52:
 15854                           	opt stack 0
 15855  016862                     _timer1_init:
 15856                           	opt stack 17
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;incstack = 0
 15860                           ;timer1_init@prescaler stored from wreg
 15861  016862  0100               	movlb	0	; () banked
 15862  016864  6F62               	movwf	timer1_init@prescaler& (0+255),b
 15863                           
 15864                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
 15865  016866  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 15866  01686A  0100               	movlb	0	; () banked
 15867  01686C  3B61               	swapf	??_timer1_init& (0+255),f,b
 15868  01686E  4761               	rlncf	??_timer1_init& (0+255),f,b
 15869  016870  4761               	rlncf	??_timer1_init& (0+255),f,b
 15870  016872  50CD               	movf	4045,w,c	;volatile
 15871  016874  0100               	movlb	0	; () banked
 15872  016876  1961               	xorwf	??_timer1_init& (0+255),w,b
 15873  016878  0B3F               	andlw	-193
 15874  01687A  1961               	xorwf	??_timer1_init& (0+255),w,b
 15875  01687C  6ECD               	movwf	4045,c	;volatile
 15876                           
 15877                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 15878  01687E  0E02               	movlw	2
 15879  016880  0100               	movlb	0	; () banked
 15880  016882  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 15881  016884  A4D8               	btfss	status,2,c
 15882  016886  D002               	goto	l710
 15883                           
 15884                           ; BSR set to: 0
 15885  016888  86CD               	bsf	4045,3,c	;volatile
 15886  01688A  D001               	goto	l12187
 15887  01688C                     l710:
 15888                           
 15889                           ; BSR set to: 0
 15890                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
 15891  01688C  96CD               	bcf	4045,3,c	;volatile
 15892  01688E                     l12187:
 15893                           
 15894                           ; BSR set to: 0
 15895                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
 15896  01688E  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 15897  016892  0100               	movlb	0	; () banked
 15898  016894  3B61               	swapf	??_timer1_init& (0+255),f,b
 15899  016896  50CD               	movf	4045,w,c	;volatile
 15900  016898  0100               	movlb	0	; () banked
 15901  01689A  1961               	xorwf	??_timer1_init& (0+255),w,b
 15902  01689C  0BCF               	andlw	-49
 15903  01689E  1961               	xorwf	??_timer1_init& (0+255),w,b
 15904  0168A0  6ECD               	movwf	4045,c	;volatile
 15905                           
 15906                           ; BSR set to: 0
 15907                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
 15908  0168A2  84CD               	bsf	4045,2,c	;volatile
 15909                           
 15910                           ; BSR set to: 0
 15911                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
 15912  0168A4  92CD               	bcf	4045,1,c	;volatile
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
 15916  0168A6  80CD               	bsf	4045,0,c	;volatile
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
 15920  0168A8  909F               	bcf	3999,0,c	;volatile
 15921                           
 15922                           ; BSR set to: 0
 15923                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
 15924  0168AA  909E               	bcf	3998,0,c	;volatile
 15925                           
 15926                           ; BSR set to: 0
 15927                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
 15928  0168AC  809D               	bsf	3997,0,c	;volatile
 15929                           
 15930                           ; BSR set to: 0
 15931                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 15932  0168AE  8CF2               	bsf	intcon,6,c	;volatile
 15933                           
 15934                           ; BSR set to: 0
 15935  0168B0  0012               	return		;funcret
 15936  0168B2                     __end_of_timer1_init:
 15937                           	opt stack 0
 15938                           tblptru	equ	0xFF8
 15939                           tblptrh	equ	0xFF7
 15940                           tblptrl	equ	0xFF6
 15941                           tablat	equ	0xFF5
 15942                           prodh	equ	0xFF4
 15943                           prodl	equ	0xFF3
 15944                           intcon	equ	0xFF2
 15945                           intcon2	equ	0xFF1
 15946                           indf0	equ	0xFEF
 15947                           postinc0	equ	0xFEE
 15948                           fsr0h	equ	0xFEA
 15949                           fsr0l	equ	0xFE9
 15950                           wreg	equ	0xFE8
 15951                           postinc1	equ	0xFE6
 15952                           postdec1	equ	0xFE5
 15953                           fsr1h	equ	0xFE2
 15954                           fsr1l	equ	0xFE1
 15955                           indf2	equ	0xFDF
 15956                           postinc2	equ	0xFDE
 15957                           postdec2	equ	0xFDD
 15958                           plusw2	equ	0xFDB
 15959                           fsr2h	equ	0xFDA
 15960                           fsr2l	equ	0xFD9
 15961                           status	equ	0xFD8
 15962                           
 15963 ;; *************** function _timer0_init *****************
 15964 ;; Defined at:
 15965 ;;		line 34 in file "../My_library/My_PIC.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;  prescaler       1    wreg     unsigned char 
 15968 ;; Auto vars:     Size  Location     Type
 15969 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15970 ;; Return value:  Size  Location     Type
 15971 ;;		None               void
 15972 ;; Registers used:
 15973 ;;		wreg, status,2, status,0
 15974 ;; Tracked objects:
 15975 ;;		On entry : 0/0
 15976 ;;		On exit  : 0/0
 15977 ;;		Unchanged: 0/0
 15978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15982 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15983 ;;Total ram usage:        2 bytes
 15984 ;; Hardware stack levels used:    1
 15985 ;; Hardware stack levels required when called:   12
 15986 ;; This function calls:
 15987 ;;		Nothing
 15988 ;; This function is called by:
 15989 ;;		_hardware_init
 15990 ;; This function uses a non-reentrant model
 15991 ;;
 15992                           
 15993                           	psect	text53
 15994  016A00                     __ptext53:
 15995                           	opt stack 0
 15996  016A00                     _timer0_init:
 15997                           	opt stack 17
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;incstack = 0
 16001                           ;timer0_init@prescaler stored from wreg
 16002  016A00  0100               	movlb	0	; () banked
 16003  016A02  6F61               	movwf	timer0_init@prescaler& (0+255),b
 16004                           
 16005                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
 16006  016A04  8ED5               	bsf	4053,7,c	;volatile
 16007                           
 16008                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
 16009  016A06  8CD5               	bsf	4053,6,c	;volatile
 16010                           
 16011                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
 16012  016A08  9AD5               	bcf	4053,5,c	;volatile
 16013                           
 16014                           ;My_PIC.c: 38: if (prescaler == 0) {
 16015  016A0A  0100               	movlb	0	; () banked
 16016  016A0C  5161               	movf	timer0_init@prescaler& (0+255),w,b
 16017  016A0E  0100               	movlb	0	; () banked
 16018  016A10  A4D8               	btfss	status,2,c
 16019  016A12  D002               	goto	l705
 16020                           
 16021                           ; BSR set to: 0
 16022                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
 16023  016A14  86D5               	bsf	4053,3,c	;volatile
 16024                           
 16025                           ;My_PIC.c: 40: } else {
 16026  016A16  D00C               	goto	l12175
 16027  016A18                     l705:
 16028                           
 16029                           ; BSR set to: 0
 16030                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
 16031  016A18  96D5               	bcf	4053,3,c	;volatile
 16032                           
 16033                           ; BSR set to: 0
 16034                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
 16035  016A1A  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 16036  016A1E  0EFF               	movlw	255
 16037  016A20  0100               	movlb	0	; () banked
 16038  016A22  2760               	addwf	??_timer0_init& (0+255),f,b
 16039  016A24  50D5               	movf	4053,w,c	;volatile
 16040  016A26  0100               	movlb	0	; () banked
 16041  016A28  1960               	xorwf	??_timer0_init& (0+255),w,b
 16042  016A2A  0BF8               	andlw	-8
 16043  016A2C  1960               	xorwf	??_timer0_init& (0+255),w,b
 16044  016A2E  6ED5               	movwf	4053,c	;volatile
 16045  016A30                     l12175:
 16046                           
 16047                           ; BSR set to: 0
 16048                           ;My_PIC.c: 43: }
 16049                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
 16050  016A30  8AF2               	bsf	intcon,5,c	;volatile
 16051                           
 16052                           ; BSR set to: 0
 16053                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
 16054  016A32  94F2               	bcf	intcon,2,c	;volatile
 16055                           
 16056                           ; BSR set to: 0
 16057                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
 16058  016A34  94F1               	bcf	intcon2,2,c	;volatile
 16059                           
 16060                           ; BSR set to: 0
 16061                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
 16062  016A36  8CF2               	bsf	intcon,6,c	;volatile
 16063                           
 16064                           ; BSR set to: 0
 16065  016A38  0012               	return		;funcret
 16066  016A3A                     __end_of_timer0_init:
 16067                           	opt stack 0
 16068                           tblptru	equ	0xFF8
 16069                           tblptrh	equ	0xFF7
 16070                           tblptrl	equ	0xFF6
 16071                           tablat	equ	0xFF5
 16072                           prodh	equ	0xFF4
 16073                           prodl	equ	0xFF3
 16074                           intcon	equ	0xFF2
 16075                           intcon2	equ	0xFF1
 16076                           indf0	equ	0xFEF
 16077                           postinc0	equ	0xFEE
 16078                           fsr0h	equ	0xFEA
 16079                           fsr0l	equ	0xFE9
 16080                           wreg	equ	0xFE8
 16081                           postinc1	equ	0xFE6
 16082                           postdec1	equ	0xFE5
 16083                           fsr1h	equ	0xFE2
 16084                           fsr1l	equ	0xFE1
 16085                           indf2	equ	0xFDF
 16086                           postinc2	equ	0xFDE
 16087                           postdec2	equ	0xFDD
 16088                           plusw2	equ	0xFDB
 16089                           fsr2h	equ	0xFDA
 16090                           fsr2l	equ	0xFD9
 16091                           status	equ	0xFD8
 16092                           
 16093 ;; *************** function _USB_CDC_init *****************
 16094 ;; Defined at:
 16095 ;;		line 20 in file "../My_library/My_usb_cdc.c"
 16096 ;; Parameters:    Size  Location     Type
 16097 ;;		None
 16098 ;; Auto vars:     Size  Location     Type
 16099 ;;		None
 16100 ;; Return value:  Size  Location     Type
 16101 ;;		None               void
 16102 ;; Registers used:
 16103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16104 ;; Tracked objects:
 16105 ;;		On entry : 0/0
 16106 ;;		On exit  : 0/0
 16107 ;;		Unchanged: 0/0
 16108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16113 ;;Total ram usage:        0 bytes
 16114 ;; Hardware stack levels used:    1
 16115 ;; Hardware stack levels required when called:   14
 16116 ;; This function calls:
 16117 ;;		_USBDeviceAttach
 16118 ;;		_USBDeviceInit
 16119 ;;		_USB_CDC_buffer_init
 16120 ;; This function is called by:
 16121 ;;		_hardware_init
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text54
 16126  016EEA                     __ptext54:
 16127                           	opt stack 0
 16128  016EEA                     _USB_CDC_init:
 16129                           	opt stack 15
 16130                           
 16131                           ;My_usb_cdc.c: 21: USBDeviceInit();
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;incstack = 0
 16135  016EEA  EC44  F099         	call	_USBDeviceInit	;wreg free
 16136                           
 16137                           ;My_usb_cdc.c: 22: USBDeviceAttach();
 16138  016EEE  EC56  F0B5         	call	_USBDeviceAttach	;wreg free
 16139                           
 16140                           ;My_usb_cdc.c: 23: USB_CDC_buffer_init();
 16141  016EF2  EC59  F0B4         	call	_USB_CDC_buffer_init	;wreg free
 16142  016EF6  0012               	return		;funcret
 16143  016EF8                     __end_of_USB_CDC_init:
 16144                           	opt stack 0
 16145                           tblptru	equ	0xFF8
 16146                           tblptrh	equ	0xFF7
 16147                           tblptrl	equ	0xFF6
 16148                           tablat	equ	0xFF5
 16149                           prodh	equ	0xFF4
 16150                           prodl	equ	0xFF3
 16151                           intcon	equ	0xFF2
 16152                           intcon2	equ	0xFF1
 16153                           indf0	equ	0xFEF
 16154                           postinc0	equ	0xFEE
 16155                           fsr0h	equ	0xFEA
 16156                           fsr0l	equ	0xFE9
 16157                           wreg	equ	0xFE8
 16158                           postinc1	equ	0xFE6
 16159                           postdec1	equ	0xFE5
 16160                           fsr1h	equ	0xFE2
 16161                           fsr1l	equ	0xFE1
 16162                           indf2	equ	0xFDF
 16163                           postinc2	equ	0xFDE
 16164                           postdec2	equ	0xFDD
 16165                           plusw2	equ	0xFDB
 16166                           fsr2h	equ	0xFDA
 16167                           fsr2l	equ	0xFD9
 16168                           status	equ	0xFD8
 16169                           
 16170 ;; *************** function _USB_CDC_buffer_init *****************
 16171 ;; Defined at:
 16172 ;;		line 26 in file "../My_library/My_usb_cdc.c"
 16173 ;; Parameters:    Size  Location     Type
 16174 ;;		None
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;		None
 16177 ;; Return value:  Size  Location     Type
 16178 ;;		None               void
 16179 ;; Registers used:
 16180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16190 ;;Total ram usage:        0 bytes
 16191 ;; Hardware stack levels used:    1
 16192 ;; Hardware stack levels required when called:   13
 16193 ;; This function calls:
 16194 ;;		_ringbuf_init
 16195 ;; This function is called by:
 16196 ;;		_USB_CDC_init
 16197 ;; This function uses a non-reentrant model
 16198 ;;
 16199                           
 16200                           	psect	text55
 16201  0168B2                     __ptext55:
 16202                           	opt stack 0
 16203  0168B2                     _USB_CDC_buffer_init:
 16204                           	opt stack 15
 16205                           
 16206                           ;My_usb_cdc.c: 27: static uint8_t txbuf[800];
 16207                           ;My_usb_cdc.c: 28: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
 16208                           
 16209                           ;incstack = 0
 16210  0168B2  0EC6               	movlw	low _usb_tx
 16211  0168B4  0100               	movlb	0	; () banked
 16212  0168B6  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16213  0168B8  0E02               	movlw	high _usb_tx
 16214  0168BA  0100               	movlb	0	; () banked
 16215  0168BC  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16216  0168BE  0E69               	movlw	low USB_CDC_buffer_init@txbuf
 16217  0168C0  0100               	movlb	0	; () banked
 16218  0168C2  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16219  0168C4  0E06               	movlw	high USB_CDC_buffer_init@txbuf
 16220  0168C6  0100               	movlb	0	; () banked
 16221  0168C8  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16222  0168CA  0E03               	movlw	3
 16223  0168CC  0100               	movlb	0	; () banked
 16224  0168CE  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16225  0168D0  0E20               	movlw	32
 16226  0168D2  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16227  0168D4  ECDE  F0B3         	call	_ringbuf_init	;wreg free
 16228                           
 16229                           ;My_usb_cdc.c: 29: static uint8_t rxbuf[100];
 16230                           ;My_usb_cdc.c: 30: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
 16231  0168D8  0EBE               	movlw	low _usb_rx
 16232  0168DA  0100               	movlb	0	; () banked
 16233  0168DC  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16234  0168DE  0E02               	movlw	high _usb_rx
 16235  0168E0  0100               	movlb	0	; () banked
 16236  0168E2  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16237  0168E4  0E64               	movlw	low USB_CDC_buffer_init@rxbuf
 16238  0168E6  0100               	movlb	0	; () banked
 16239  0168E8  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16240  0168EA  0E04               	movlw	high USB_CDC_buffer_init@rxbuf
 16241  0168EC  0100               	movlb	0	; () banked
 16242  0168EE  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16243  0168F0  0E00               	movlw	0
 16244  0168F2  0100               	movlb	0	; () banked
 16245  0168F4  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16246  0168F6  0E64               	movlw	100
 16247  0168F8  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16248  0168FA  ECDE  F0B3         	call	_ringbuf_init	;wreg free
 16249  0168FE  0012               	return		;funcret
 16250  016900                     __end_of_USB_CDC_buffer_init:
 16251                           	opt stack 0
 16252                           tblptru	equ	0xFF8
 16253                           tblptrh	equ	0xFF7
 16254                           tblptrl	equ	0xFF6
 16255                           tablat	equ	0xFF5
 16256                           prodh	equ	0xFF4
 16257                           prodl	equ	0xFF3
 16258                           intcon	equ	0xFF2
 16259                           intcon2	equ	0xFF1
 16260                           indf0	equ	0xFEF
 16261                           postinc0	equ	0xFEE
 16262                           fsr0h	equ	0xFEA
 16263                           fsr0l	equ	0xFE9
 16264                           wreg	equ	0xFE8
 16265                           postinc1	equ	0xFE6
 16266                           postdec1	equ	0xFE5
 16267                           fsr1h	equ	0xFE2
 16268                           fsr1l	equ	0xFE1
 16269                           indf2	equ	0xFDF
 16270                           postinc2	equ	0xFDE
 16271                           postdec2	equ	0xFDD
 16272                           plusw2	equ	0xFDB
 16273                           fsr2h	equ	0xFDA
 16274                           fsr2l	equ	0xFD9
 16275                           status	equ	0xFD8
 16276                           
 16277 ;; *************** function _USBDeviceInit *****************
 16278 ;; Defined at:
 16279 ;;		line 299 in file "../My_library/usb/usb_device.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;		None
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;  i               1    8[BANK0 ] unsigned char 
 16284 ;; Return value:  Size  Location     Type
 16285 ;;		None               void
 16286 ;; Registers used:
 16287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16288 ;; Tracked objects:
 16289 ;;		On entry : 0/0
 16290 ;;		On exit  : 0/0
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16297 ;;Total ram usage:        1 bytes
 16298 ;; Hardware stack levels used:    1
 16299 ;; Hardware stack levels required when called:   13
 16300 ;; This function calls:
 16301 ;;		_memset
 16302 ;; This function is called by:
 16303 ;;		_USB_CDC_init
 16304 ;; This function uses a non-reentrant model
 16305 ;;
 16306                           
 16307                           	psect	text56
 16308  013288                     __ptext56:
 16309                           	opt stack 0
 16310  013288                     _USBDeviceInit:
 16311                           	opt stack 15
 16312                           
 16313                           ;usb_device.c: 301: uint8_t i;
 16314                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 16315                           
 16316                           ;incstack = 0
 16317  013288  98A0               	bcf	4000,4,c	;volatile
 16318                           
 16319                           ;usb_device.c: 306: {UEIR = 0;};
 16320  01328A  0E00               	movlw	0
 16321  01328C  6E63               	movwf	3939,c	;volatile
 16322                           
 16323                           ;usb_device.c: 309: {UIR = 0;};
 16324  01328E  0E00               	movlw	0
 16325  013290  6E62               	movwf	3938,c	;volatile
 16326                           
 16327                           ;usb_device.c: 312: UEP0 = 0;
 16328  013292  0E00               	movlw	0
 16329  013294  010F               	movlb	15	; () banked
 16330  013296  6F26               	movwf	38,b	;volatile
 16331                           
 16332                           ; BSR set to: 15
 16333                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 16334  013298  0E27               	movlw	39
 16335  01329A  0100               	movlb	0	; () banked
 16336  01329C  6F60               	movwf	memset@p1& (0+255),b
 16337  01329E  0E0F               	movlw	15
 16338  0132A0  0100               	movlb	0	; () banked
 16339  0132A2  6F61               	movwf	(memset@p1+1)& (0+255),b
 16340  0132A4  0E00               	movlw	0
 16341  0132A6  0100               	movlb	0	; () banked
 16342  0132A8  6F63               	movwf	(memset@c+1)& (0+255),b
 16343  0132AA  0E00               	movlw	0
 16344  0132AC  6F62               	movwf	memset@c& (0+255),b
 16345  0132AE  0E00               	movlw	0
 16346  0132B0  0100               	movlb	0	; () banked
 16347  0132B2  6F65               	movwf	(memset@n+1)& (0+255),b
 16348  0132B4  0E02               	movlw	2
 16349  0132B6  6F64               	movwf	memset@n& (0+255),b
 16350  0132B8  EC8D  F0B5         	call	_memset	;wreg free
 16351                           
 16352                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16353  0132BC  0E16               	movlw	22
 16354  0132BE  010F               	movlb	15	; () banked
 16355  0132C0  6F39               	movwf	57,b	;volatile
 16356                           
 16357                           ; BSR set to: 15
 16358  0132C2  0E9F               	movlw	159
 16359  0132C4  010F               	movlb	15	; () banked
 16360  0132C6  6F37               	movwf	55,b	;volatile
 16361                           
 16362                           ; BSR set to: 15
 16363  0132C8  0E7B               	movlw	123
 16364  0132CA  010F               	movlb	15	; () banked
 16365  0132CC  6F36               	movwf	54,b	;volatile
 16366                           
 16367                           ; BSR set to: 15
 16368                           ;usb_device.c: 319: ;
 16369                           ;usb_device.c: 322: ;
 16370                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16371  0132CE  0E00               	movlw	0
 16372  0132D0  0100               	movlb	0	; () banked
 16373  0132D2  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16374  0132D4                     l11535:
 16375                           
 16376                           ; BSR set to: 0
 16377  0132D4  0E0B               	movlw	11
 16378  0132D6  0100               	movlb	0	; () banked
 16379  0132D8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16380  0132DA  D001               	goto	l11539
 16381  0132DC  D010               	goto	l146
 16382  0132DE                     l11539:
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;usb_device.c: 326: {
 16386                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 16387  0132DE  0100               	movlb	0	; () banked
 16388  0132E0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16389  0132E2  0D04               	mullw	4
 16390  0132E4  0E00               	movlw	0
 16391  0132E6  24F3               	addwf	prodl,w,c
 16392  0132E8  6ED9               	movwf	fsr2l,c
 16393  0132EA  0E0D               	movlw	13
 16394  0132EC  20F4               	addwfc	prodh,w,c
 16395  0132EE  6EDA               	movwf	fsr2h,c
 16396  0132F0  6ADE               	clrf	postinc2,c
 16397  0132F2  6ADE               	clrf	postinc2,c
 16398  0132F4  6ADE               	clrf	postinc2,c
 16399  0132F6  6ADD               	clrf	postdec2,c
 16400                           
 16401                           ; BSR set to: 0
 16402  0132F8  0100               	movlb	0	; () banked
 16403  0132FA  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16404  0132FC  D7EB               	goto	l11535
 16405  0132FE                     l146:
 16406                           
 16407                           ; BSR set to: 0
 16408                           ;usb_device.c: 328: }
 16409                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 16410  0132FE  8C65               	bsf	3941,6,c	;volatile
 16411                           
 16412                           ; BSR set to: 0
 16413                           ;usb_device.c: 334: UADDR = 0x00;
 16414  013300  0E00               	movlw	0
 16415  013302  010F               	movlb	15	; () banked
 16416  013304  6F38               	movwf	56,b	;volatile
 16417                           
 16418                           ; BSR set to: 15
 16419                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 16420  013306  9865               	bcf	3941,4,c	;volatile
 16421                           
 16422                           ; BSR set to: 15
 16423                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 16424  013308  9C65               	bcf	3941,6,c	;volatile
 16425                           
 16426                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 16427  01330A  D00C               	goto	l11559
 16428  01330C                     l11551:
 16429                           
 16430                           ;usb_device.c: 344: {
 16431                           ;usb_device.c: 345: (UIR &= 0xF7);
 16432  01330C  9662               	bcf	3938,3,c	;volatile
 16433                           
 16434                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 16435  01330E  0E00               	movlw	0
 16436  013310  0100               	movlb	0	; () banked
 16437  013312  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16438                           
 16439                           ; BSR set to: 0
 16440                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 16441  013314  0E00               	movlw	0
 16442  013316  0100               	movlb	0	; () banked
 16443  013318  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 16444                           
 16445                           ; BSR set to: 0
 16446                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 16447  01331A  0E00               	movlw	0
 16448  01331C  0100               	movlb	0	; () banked
 16449  01331E  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 16450  013320  0E00               	movlw	0
 16451  013322  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 16452  013324                     l11559:
 16453  013324  B662               	btfsc	3938,3,c	;volatile
 16454  013326  D7F2               	goto	l11551
 16455                           
 16456                           ;usb_device.c: 350: }
 16457                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 16458  013328  0E01               	movlw	1
 16459  01332A  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16460                           
 16461                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 16462  01332C  0E01               	movlw	1
 16463  01332E  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16464                           
 16465                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 16466  013330  0E00               	movlw	0
 16467  013332  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16468                           
 16469                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 16470  013334  0E00               	movlw	0
 16471  013336  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16472                           
 16473                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 16474  013338  0E00               	movlw	0
 16475  01333A  0101               	movlb	1	; () banked
 16476  01333C  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16477                           
 16478                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 16479  01333E  0E00               	movlw	0
 16480  013340  0100               	movlb	0	; () banked
 16481  013342  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16482  013344                     l11563:
 16483                           
 16484                           ; BSR set to: 0
 16485  013344  0E02               	movlw	2
 16486  013346  0100               	movlb	0	; () banked
 16487  013348  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16488  01334A  D001               	goto	l11567
 16489  01334C  D033               	goto	l11573
 16490  01334E                     l11567:
 16491                           
 16492                           ; BSR set to: 0
 16493                           ;usb_device.c: 364: {
 16494                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 16495  01334E  0100               	movlb	0	; () banked
 16496  013350  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16497  013352  0D02               	mullw	2
 16498  013354  0EF5               	movlw	low _pBDTEntryIn
 16499  013356  24F3               	addwf	prodl,w,c
 16500  013358  6ED9               	movwf	fsr2l,c
 16501  01335A  0E00               	movlw	high _pBDTEntryIn
 16502  01335C  20F4               	addwfc	prodh,w,c
 16503  01335E  6EDA               	movwf	fsr2h,c
 16504  013360  0E00               	movlw	0
 16505  013362  6EDE               	movwf	postinc2,c
 16506  013364  0E00               	movlw	0
 16507  013366  6EDD               	movwf	postdec2,c
 16508                           
 16509                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 16510  013368  0100               	movlb	0	; () banked
 16511  01336A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16512  01336C  0D02               	mullw	2
 16513  01336E  0E00               	movlw	low _pBDTEntryOut
 16514  013370  24F3               	addwf	prodl,w,c
 16515  013372  6ED9               	movwf	fsr2l,c
 16516  013374  0E01               	movlw	high _pBDTEntryOut
 16517  013376  20F4               	addwfc	prodh,w,c
 16518  013378  6EDA               	movwf	fsr2h,c
 16519  01337A  0E00               	movlw	0
 16520  01337C  6EDE               	movwf	postinc2,c
 16521  01337E  0E00               	movlw	0
 16522  013380  6EDD               	movwf	postdec2,c
 16523                           
 16524                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 16525  013382  0100               	movlb	0	; () banked
 16526  013384  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16527  013386  0D01               	mullw	1
 16528  013388  0E01               	movlw	low _ep_data_in
 16529  01338A  24F3               	addwf	prodl,w,c
 16530  01338C  6ED9               	movwf	fsr2l,c
 16531  01338E  0E00               	movlw	high _ep_data_in
 16532  013390  20F4               	addwfc	prodh,w,c
 16533  013392  6EDA               	movwf	fsr2h,c
 16534  013394  0E00               	movlw	0
 16535  013396  6EDF               	movwf	indf2,c
 16536                           
 16537                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 16538  013398  0100               	movlb	0	; () banked
 16539  01339A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16540  01339C  0D01               	mullw	1
 16541  01339E  0E04               	movlw	low _ep_data_out
 16542  0133A0  24F3               	addwf	prodl,w,c
 16543  0133A2  6ED9               	movwf	fsr2l,c
 16544  0133A4  0E00               	movlw	high _ep_data_out
 16545  0133A6  20F4               	addwfc	prodh,w,c
 16546  0133A8  6EDA               	movwf	fsr2h,c
 16547  0133AA  0E00               	movlw	0
 16548  0133AC  6EDF               	movwf	indf2,c
 16549                           
 16550                           ; BSR set to: 0
 16551  0133AE  0100               	movlb	0	; () banked
 16552  0133B0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16553  0133B2  D7C8               	goto	l11563
 16554  0133B4                     l11573:
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;usb_device.c: 369: }
 16558                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16559  0133B4  0E08               	movlw	8
 16560  0133B6  0100               	movlb	0	; () banked
 16561  0133B8  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 16562  0133BA  0E0D               	movlw	13
 16563  0133BC  0100               	movlb	0	; () banked
 16564  0133BE  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 16568  0133C0  0E16               	movlw	22
 16569  0133C2  010F               	movlb	15	; () banked
 16570  0133C4  6F26               	movwf	38,b	;volatile
 16571                           
 16572                           ; BSR set to: 15
 16573                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16574  0133C6  0E0D               	movlw	13
 16575  0133C8  010D               	movlb	13	; () banked
 16576  0133CA  6F03               	movwf	3,b	;volatile
 16577  0133CC  0E30               	movlw	48
 16578  0133CE  6F02               	movwf	2,b	;volatile
 16579                           
 16580                           ; BSR set to: 13
 16581                           ;usb_device.c: 377: BDT[0].CNT = 8;
 16582  0133D0  0E08               	movlw	8
 16583  0133D2  010D               	movlb	13	; () banked
 16584  0133D4  6F01               	movwf	1,b	;volatile
 16585                           
 16586                           ; BSR set to: 13
 16587                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 16588  0133D6  0E04               	movlw	4
 16589  0133D8  010D               	movlb	13	; () banked
 16590  0133DA  6F00               	movwf	0,b	;volatile
 16591                           
 16592                           ; BSR set to: 13
 16593                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 16594  0133DC  010D               	movlb	13	; () banked
 16595  0133DE  8F00               	bsf	0,7,b	;volatile
 16596                           
 16597                           ; BSR set to: 13
 16598                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 16599  0133E0  0E00               	movlw	0
 16600  0133E2  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 16601                           
 16602                           ; BSR set to: 13
 16603                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 16604  0133E4  0E00               	movlw	0
 16605  0133E6  6E13               	movwf	_USBDeviceState,c	;volatile
 16606                           
 16607                           ; BSR set to: 13
 16608  0133E8  0012               	return		;funcret
 16609  0133EA                     __end_of_USBDeviceInit:
 16610                           	opt stack 0
 16611                           tblptru	equ	0xFF8
 16612                           tblptrh	equ	0xFF7
 16613                           tblptrl	equ	0xFF6
 16614                           tablat	equ	0xFF5
 16615                           prodh	equ	0xFF4
 16616                           prodl	equ	0xFF3
 16617                           intcon	equ	0xFF2
 16618                           intcon2	equ	0xFF1
 16619                           indf0	equ	0xFEF
 16620                           postinc0	equ	0xFEE
 16621                           fsr0h	equ	0xFEA
 16622                           fsr0l	equ	0xFE9
 16623                           wreg	equ	0xFE8
 16624                           postinc1	equ	0xFE6
 16625                           postdec1	equ	0xFE5
 16626                           fsr1h	equ	0xFE2
 16627                           fsr1l	equ	0xFE1
 16628                           indf2	equ	0xFDF
 16629                           postinc2	equ	0xFDE
 16630                           postdec2	equ	0xFDD
 16631                           plusw2	equ	0xFDB
 16632                           fsr2h	equ	0xFDA
 16633                           fsr2l	equ	0xFD9
 16634                           status	equ	0xFD8
 16635                           
 16636 ;; *************** function _memset *****************
 16637 ;; Defined at:
 16638 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16639 ;; Parameters:    Size  Location     Type
 16640 ;;  p1              2    0[BANK0 ] PTR void 
 16641 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16642 ;;  c               2    2[BANK0 ] int 
 16643 ;;  n               2    4[BANK0 ] unsigned int 
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16646 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  2    0[BANK0 ] PTR void 
 16649 ;; Registers used:
 16650 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16659 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16660 ;;Total ram usage:        8 bytes
 16661 ;; Hardware stack levels used:    1
 16662 ;; Hardware stack levels required when called:   12
 16663 ;; This function calls:
 16664 ;;		Nothing
 16665 ;; This function is called by:
 16666 ;;		_USBDeviceInit
 16667 ;; This function uses a non-reentrant model
 16668 ;;
 16669                           
 16670                           	psect	text57
 16671  016B1A                     __ptext57:
 16672                           	opt stack 0
 16673  016B1A                     _memset:
 16674                           	opt stack 15
 16675                           
 16676                           ; BSR set to: 13
 16677                           ;incstack = 0
 16678  016B1A  C060  F066         	movff	memset@p1,memset@p
 16679  016B1E  C061  F067         	movff	memset@p1+1,memset@p+1
 16680  016B22  D009               	goto	l11167
 16681  016B24                     l11163:
 16682  016B24  C066  FFD9         	movff	memset@p,fsr2l
 16683  016B28  C067  FFDA         	movff	memset@p+1,fsr2h
 16684  016B2C  C062  FFDF         	movff	memset@c,indf2
 16685  016B30  0100               	movlb	0	; () banked
 16686  016B32  4B66               	infsnz	memset@p& (0+255),f,b
 16687  016B34  2B67               	incf	(memset@p+1)& (0+255),f,b
 16688  016B36                     l11167:
 16689  016B36  0100               	movlb	0	; () banked
 16690  016B38  0764               	decf	memset@n& (0+255),f,b
 16691  016B3A  A0D8               	btfss	status,0,c
 16692  016B3C  0765               	decf	(memset@n+1)& (0+255),f,b
 16693  016B3E  0100               	movlb	0	; () banked
 16694  016B40  2964               	incf	memset@n& (0+255),w,b
 16695  016B42  E1F0               	bnz	l11163
 16696  016B44  0100               	movlb	0	; () banked
 16697  016B46  2965               	incf	(memset@n+1)& (0+255),w,b
 16698  016B48  B4D8               	btfsc	status,2,c
 16699  016B4A  0012               	return	
 16700  016B4C  D7EB               	goto	l11163
 16701  016B4E                     __end_of_memset:
 16702                           	opt stack 0
 16703                           tblptru	equ	0xFF8
 16704                           tblptrh	equ	0xFF7
 16705                           tblptrl	equ	0xFF6
 16706                           tablat	equ	0xFF5
 16707                           prodh	equ	0xFF4
 16708                           prodl	equ	0xFF3
 16709                           intcon	equ	0xFF2
 16710                           intcon2	equ	0xFF1
 16711                           indf0	equ	0xFEF
 16712                           postinc0	equ	0xFEE
 16713                           fsr0h	equ	0xFEA
 16714                           fsr0l	equ	0xFE9
 16715                           wreg	equ	0xFE8
 16716                           postinc1	equ	0xFE6
 16717                           postdec1	equ	0xFE5
 16718                           fsr1h	equ	0xFE2
 16719                           fsr1l	equ	0xFE1
 16720                           indf2	equ	0xFDF
 16721                           postinc2	equ	0xFDE
 16722                           postdec2	equ	0xFDD
 16723                           plusw2	equ	0xFDB
 16724                           fsr2h	equ	0xFDA
 16725                           fsr2l	equ	0xFD9
 16726                           status	equ	0xFD8
 16727                           
 16728 ;; *************** function _USBDeviceAttach *****************
 16729 ;; Defined at:
 16730 ;;		line 1353 in file "../My_library/usb/usb_device.c"
 16731 ;; Parameters:    Size  Location     Type
 16732 ;;		None
 16733 ;; Auto vars:     Size  Location     Type
 16734 ;;		None
 16735 ;; Return value:  Size  Location     Type
 16736 ;;		None               void
 16737 ;; Registers used:
 16738 ;;		wreg, status,2
 16739 ;; Tracked objects:
 16740 ;;		On entry : 0/0
 16741 ;;		On exit  : 0/0
 16742 ;;		Unchanged: 0/0
 16743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16748 ;;Total ram usage:        0 bytes
 16749 ;; Hardware stack levels used:    1
 16750 ;; Hardware stack levels required when called:   12
 16751 ;; This function calls:
 16752 ;;		Nothing
 16753 ;; This function is called by:
 16754 ;;		_USB_CDC_init
 16755 ;; This function uses a non-reentrant model
 16756 ;;
 16757                           
 16758                           	psect	text58
 16759  016AAC                     __ptext58:
 16760                           	opt stack 0
 16761  016AAC                     _USBDeviceAttach:
 16762                           	opt stack 16
 16763                           
 16764                           ;usb_device.c: 1357: {
 16765                           ;usb_device.c: 1358: if(1 == 1)
 16766                           
 16767                           ; BSR set to: 0
 16768                           ;incstack = 0
 16769  016AAC  5013               	movf	_USBDeviceState,w,c	;volatile
 16770  016AAE  A4D8               	btfss	status,2,c
 16771  016AB0  0012               	return	
 16772                           
 16773                           ;usb_device.c: 1359: {
 16774                           ;usb_device.c: 1361: UCON = 0;
 16775  016AB2  0E00               	movlw	0
 16776  016AB4  6E65               	movwf	3941,c	;volatile
 16777                           
 16778                           ;usb_device.c: 1364: UIE = 0;
 16779  016AB6  0E00               	movlw	0
 16780  016AB8  010F               	movlb	15	; () banked
 16781  016ABA  6F36               	movwf	54,b	;volatile
 16782                           
 16783                           ;usb_device.c: 1368: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 16784  016ABC  0E16               	movlw	22
 16785  016ABE  010F               	movlb	15	; () banked
 16786  016AC0  6F39               	movwf	57,b	;volatile
 16787  016AC2  0E9F               	movlw	159
 16788  016AC4  010F               	movlb	15	; () banked
 16789  016AC6  6F37               	movwf	55,b	;volatile
 16790  016AC8  0E7B               	movlw	123
 16791  016ACA  010F               	movlb	15	; () banked
 16792  016ACC  6F36               	movwf	54,b	;volatile
 16793                           
 16794                           ; BSR set to: 15
 16795                           ;usb_device.c: 1370: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 16796  016ACE  8ED0               	bsf	4048,7,c	;volatile
 16797                           
 16798                           ; BSR set to: 15
 16799  016AD0  88A2               	bsf	4002,4,c	;volatile
 16800                           
 16801                           ; BSR set to: 15
 16802  016AD2  88A0               	bsf	4000,4,c	;volatile
 16803                           
 16804                           ; BSR set to: 15
 16805  016AD4  8EF2               	bsf	intcon,7,c	;volatile
 16806                           
 16807                           ;usb_device.c: 1373: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16808  016AD6  D001               	goto	l207
 16809  016AD8                     l208:
 16810  016AD8  8665               	bsf	3941,3,c	;volatile
 16811  016ADA                     l207:
 16812  016ADA  A665               	btfss	3941,3,c	;volatile
 16813  016ADC  D7FD               	goto	l208
 16814                           
 16815                           ;usb_device.c: 1376: USBDeviceState = ATTACHED_STATE;
 16816  016ADE  0E01               	movlw	1
 16817  016AE0  6E13               	movwf	_USBDeviceState,c	;volatile
 16818  016AE2  0012               	return	
 16819  016AE4                     __end_of_USBDeviceAttach:
 16820                           	opt stack 0
 16821                           tblptru	equ	0xFF8
 16822                           tblptrh	equ	0xFF7
 16823                           tblptrl	equ	0xFF6
 16824                           tablat	equ	0xFF5
 16825                           prodh	equ	0xFF4
 16826                           prodl	equ	0xFF3
 16827                           intcon	equ	0xFF2
 16828                           intcon2	equ	0xFF1
 16829                           indf0	equ	0xFEF
 16830                           postinc0	equ	0xFEE
 16831                           fsr0h	equ	0xFEA
 16832                           fsr0l	equ	0xFE9
 16833                           wreg	equ	0xFE8
 16834                           postinc1	equ	0xFE6
 16835                           postdec1	equ	0xFE5
 16836                           fsr1h	equ	0xFE2
 16837                           fsr1l	equ	0xFE1
 16838                           indf2	equ	0xFDF
 16839                           postinc2	equ	0xFDE
 16840                           postdec2	equ	0xFDD
 16841                           plusw2	equ	0xFDB
 16842                           fsr2h	equ	0xFDA
 16843                           fsr2l	equ	0xFD9
 16844                           status	equ	0xFD8
 16845                           
 16846 ;; *************** function _ST7032_init *****************
 16847 ;; Defined at:
 16848 ;;		line 58 in file "../My_library/My_ST7032.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;		None
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;		None
 16853 ;; Return value:  Size  Location     Type
 16854 ;;		None               void
 16855 ;; Registers used:
 16856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16857 ;; Tracked objects:
 16858 ;;		On entry : 0/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16866 ;;Total ram usage:        0 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:   16
 16869 ;; This function calls:
 16870 ;;		_I2C_init_new
 16871 ;;		_ST7032_clear
 16872 ;;		_ST7032_command
 16873 ;;		_ringbuf_init
 16874 ;;		_ringbuf_put
 16875 ;; This function is called by:
 16876 ;;		_hardware_init
 16877 ;; This function uses a non-reentrant model
 16878 ;;
 16879                           
 16880                           	psect	text59
 16881  015212                     __ptext59:
 16882                           	opt stack 0
 16883  015212                     _ST7032_init:
 16884                           	opt stack 13
 16885                           
 16886                           ;My_ST7032.c: 59: I2C_init_new();
 16887                           
 16888                           ;incstack = 0
 16889  015212  EC37  F0B7         	call	_I2C_init_new	;wreg free
 16890                           
 16891                           ;My_ST7032.c: 61: static char buf[200];
 16892                           ;My_ST7032.c: 62: ringbuf_init(&lcd_tx, buf, sizeof (buf));
 16893  015216  0E23               	movlw	low _lcd_tx
 16894  015218  0100               	movlb	0	; () banked
 16895  01521A  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16896  01521C  0E00               	movlw	high _lcd_tx
 16897  01521E  0100               	movlb	0	; () banked
 16898  015220  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16899  015222  0E00               	movlw	low ST7032_init@buf
 16900  015224  0100               	movlb	0	; () banked
 16901  015226  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16902  015228  0E05               	movlw	high ST7032_init@buf
 16903  01522A  0100               	movlb	0	; () banked
 16904  01522C  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16905  01522E  0E00               	movlw	0
 16906  015230  0100               	movlb	0	; () banked
 16907  015232  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16908  015234  0EC8               	movlw	200
 16909  015236  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16910  015238  ECDE  F0B3         	call	_ringbuf_init	;wreg free
 16911                           
 16912                           ;My_ST7032.c: 64: ringbuf_put(&lcd_tx, 0);
 16913  01523C  0E23               	movlw	low _lcd_tx
 16914  01523E  0100               	movlb	0	; () banked
 16915  015240  6F68               	movwf	ringbuf_put@rb& (0+255),b
 16916  015242  0E00               	movlw	high _lcd_tx
 16917  015244  0100               	movlb	0	; () banked
 16918  015246  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16919  015248  0E00               	movlw	0
 16920  01524A  0100               	movlb	0	; () banked
 16921  01524C  6F6A               	movwf	ringbuf_put@data& (0+255),b
 16922  01524E  EC99  F0A6         	call	_ringbuf_put	;wreg free
 16923                           
 16924                           ;My_ST7032.c: 65: ringbuf_put(&lcd_tx, 3);
 16925  015252  0E23               	movlw	low _lcd_tx
 16926  015254  0100               	movlb	0	; () banked
 16927  015256  6F68               	movwf	ringbuf_put@rb& (0+255),b
 16928  015258  0E00               	movlw	high _lcd_tx
 16929  01525A  0100               	movlb	0	; () banked
 16930  01525C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16931  01525E  0E03               	movlw	3
 16932  015260  0100               	movlb	0	; () banked
 16933  015262  6F6A               	movwf	ringbuf_put@data& (0+255),b
 16934  015264  EC99  F0A6         	call	_ringbuf_put	;wreg free
 16935                           
 16936                           ;My_ST7032.c: 67: ST7032_command(0x38, 1);
 16937  015268  0E01               	movlw	1
 16938  01526A  0100               	movlb	0	; () banked
 16939  01526C  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16940  01526E  0E38               	movlw	56
 16941  015270  ECFF  F0B0         	call	_ST7032_command
 16942                           
 16943                           ;My_ST7032.c: 68: ST7032_command(0x39, 1);
 16944  015274  0E01               	movlw	1
 16945  015276  0100               	movlb	0	; () banked
 16946  015278  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16947  01527A  0E39               	movlw	57
 16948  01527C  ECFF  F0B0         	call	_ST7032_command
 16949                           
 16950                           ;My_ST7032.c: 69: ST7032_command(0x14, 1);
 16951  015280  0E01               	movlw	1
 16952  015282  0100               	movlb	0	; () banked
 16953  015284  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16954  015286  0E14               	movlw	20
 16955  015288  ECFF  F0B0         	call	_ST7032_command
 16956                           
 16957                           ;My_ST7032.c: 70: ST7032_command(0x70, 1);
 16958  01528C  0E01               	movlw	1
 16959  01528E  0100               	movlb	0	; () banked
 16960  015290  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16961  015292  0E70               	movlw	112
 16962  015294  ECFF  F0B0         	call	_ST7032_command
 16963                           
 16964                           ;My_ST7032.c: 71: ST7032_command(0x56, 1);
 16965  015298  0E01               	movlw	1
 16966  01529A  0100               	movlb	0	; () banked
 16967  01529C  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16968  01529E  0E56               	movlw	86
 16969  0152A0  ECFF  F0B0         	call	_ST7032_command
 16970                           
 16971                           ;My_ST7032.c: 72: ST7032_command(0x6C, 3);
 16972  0152A4  0E03               	movlw	3
 16973  0152A6  0100               	movlb	0	; () banked
 16974  0152A8  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16975  0152AA  0E6C               	movlw	108
 16976  0152AC  ECFF  F0B0         	call	_ST7032_command
 16977                           
 16978                           ;My_ST7032.c: 73: ST7032_command(0x38, 1);
 16979  0152B0  0E01               	movlw	1
 16980  0152B2  0100               	movlb	0	; () banked
 16981  0152B4  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16982  0152B6  0E38               	movlw	56
 16983  0152B8  ECFF  F0B0         	call	_ST7032_command
 16984                           
 16985                           ;My_ST7032.c: 74: ST7032_command(0x0C, 1);
 16986  0152BC  0E01               	movlw	1
 16987  0152BE  0100               	movlb	0	; () banked
 16988  0152C0  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16989  0152C2  0E0C               	movlw	12
 16990  0152C4  ECFF  F0B0         	call	_ST7032_command
 16991                           
 16992                           ;My_ST7032.c: 75: ST7032_command(0x06, 1);
 16993  0152C8  0E01               	movlw	1
 16994  0152CA  0100               	movlb	0	; () banked
 16995  0152CC  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16996  0152CE  0E06               	movlw	6
 16997  0152D0  ECFF  F0B0         	call	_ST7032_command
 16998                           
 16999                           ;My_ST7032.c: 76: ST7032_clear();
 17000  0152D4  EC7C  F0B7         	call	_ST7032_clear	;wreg free
 17001  0152D8  0012               	return		;funcret
 17002  0152DA                     __end_of_ST7032_init:
 17003                           	opt stack 0
 17004                           tblptru	equ	0xFF8
 17005                           tblptrh	equ	0xFF7
 17006                           tblptrl	equ	0xFF6
 17007                           tablat	equ	0xFF5
 17008                           prodh	equ	0xFF4
 17009                           prodl	equ	0xFF3
 17010                           intcon	equ	0xFF2
 17011                           intcon2	equ	0xFF1
 17012                           indf0	equ	0xFEF
 17013                           postinc0	equ	0xFEE
 17014                           fsr0h	equ	0xFEA
 17015                           fsr0l	equ	0xFE9
 17016                           wreg	equ	0xFE8
 17017                           postinc1	equ	0xFE6
 17018                           postdec1	equ	0xFE5
 17019                           fsr1h	equ	0xFE2
 17020                           fsr1l	equ	0xFE1
 17021                           indf2	equ	0xFDF
 17022                           postinc2	equ	0xFDE
 17023                           postdec2	equ	0xFDD
 17024                           plusw2	equ	0xFDB
 17025                           fsr2h	equ	0xFDA
 17026                           fsr2l	equ	0xFD9
 17027                           status	equ	0xFD8
 17028                           
 17029 ;; *************** function _ringbuf_init *****************
 17030 ;; Defined at:
 17031 ;;		line 5 in file "../My_library/My_ringbuf.c"
 17032 ;; Parameters:    Size  Location     Type
 17033 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17034 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
 17035 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 17036 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 17037 ;;		 -> USB_CDC_buffer_init@rxbuf(100), USB_CDC_buffer_init@txbuf(800), UART_buffer_init@uartrx(100), UART_buffer_init@u
      +arttx(500), 
 17038 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
 17039 ;;  bufsize         2    4[BANK0 ] unsigned int 
 17040 ;; Auto vars:     Size  Location     Type
 17041 ;;		None
 17042 ;; Return value:  Size  Location     Type
 17043 ;;		None               void
 17044 ;; Registers used:
 17045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17046 ;; Tracked objects:
 17047 ;;		On entry : 0/0
 17048 ;;		On exit  : 0/0
 17049 ;;		Unchanged: 0/0
 17050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17051 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17054 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17055 ;;Total ram usage:        6 bytes
 17056 ;; Hardware stack levels used:    1
 17057 ;; Hardware stack levels required when called:   12
 17058 ;; This function calls:
 17059 ;;		Nothing
 17060 ;; This function is called by:
 17061 ;;		_ST7032_init
 17062 ;;		_terminal_task
 17063 ;;		_USB_CDC_buffer_init
 17064 ;;		_UART_buffer_init
 17065 ;; This function uses a non-reentrant model
 17066 ;;
 17067                           
 17068                           	psect	text60
 17069  0167BC                     __ptext60:
 17070                           	opt stack 0
 17071  0167BC                     _ringbuf_init:
 17072                           	opt stack 17
 17073                           
 17074                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 17075                           
 17076                           ;incstack = 0
 17077  0167BC  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 17078  0167C0  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 17079  0167C4  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 17080  0167C8  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 17081                           
 17082                           ;My_ringbuf.c: 7: rb->size = bufsize;
 17083  0167CC  0100               	movlb	0	; () banked
 17084  0167CE  EE20 F002          	lfsr	2,2
 17085  0167D2  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17086  0167D4  26D9               	addwf	fsr2l,f,c
 17087  0167D6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17088  0167D8  22DA               	addwfc	fsr2h,f,c
 17089  0167DA  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 17090  0167DE  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;My_ringbuf.c: 8: rb->head = 0;
 17094  0167E2  0100               	movlb	0	; () banked
 17095  0167E4  EE20 F004          	lfsr	2,4
 17096  0167E8  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17097  0167EA  26D9               	addwf	fsr2l,f,c
 17098  0167EC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17099  0167EE  22DA               	addwfc	fsr2h,f,c
 17100  0167F0  0E00               	movlw	0
 17101  0167F2  6EDE               	movwf	postinc2,c
 17102  0167F4  0E00               	movlw	0
 17103  0167F6  6EDD               	movwf	postdec2,c
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;My_ringbuf.c: 9: rb->tail = 0;
 17107  0167F8  0100               	movlb	0	; () banked
 17108  0167FA  EE20 F006          	lfsr	2,6
 17109  0167FE  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17110  016800  26D9               	addwf	fsr2l,f,c
 17111  016802  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17112  016804  22DA               	addwfc	fsr2h,f,c
 17113  016806  0E00               	movlw	0
 17114  016808  6EDE               	movwf	postinc2,c
 17115  01680A  0E00               	movlw	0
 17116  01680C  6EDD               	movwf	postdec2,c
 17117                           
 17118                           ; BSR set to: 0
 17119  01680E  0012               	return		;funcret
 17120  016810                     __end_of_ringbuf_init:
 17121                           	opt stack 0
 17122                           tblptru	equ	0xFF8
 17123                           tblptrh	equ	0xFF7
 17124                           tblptrl	equ	0xFF6
 17125                           tablat	equ	0xFF5
 17126                           prodh	equ	0xFF4
 17127                           prodl	equ	0xFF3
 17128                           intcon	equ	0xFF2
 17129                           intcon2	equ	0xFF1
 17130                           indf0	equ	0xFEF
 17131                           postinc0	equ	0xFEE
 17132                           fsr0h	equ	0xFEA
 17133                           fsr0l	equ	0xFE9
 17134                           wreg	equ	0xFE8
 17135                           postinc1	equ	0xFE6
 17136                           postdec1	equ	0xFE5
 17137                           fsr1h	equ	0xFE2
 17138                           fsr1l	equ	0xFE1
 17139                           indf2	equ	0xFDF
 17140                           postinc2	equ	0xFDE
 17141                           postdec2	equ	0xFDD
 17142                           plusw2	equ	0xFDB
 17143                           fsr2h	equ	0xFDA
 17144                           fsr2l	equ	0xFD9
 17145                           status	equ	0xFD8
 17146                           
 17147 ;; *************** function _ST7032_clear *****************
 17148 ;; Defined at:
 17149 ;;		line 22 in file "../My_library/My_ST7032.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;		None
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;		None
 17154 ;; Return value:  Size  Location     Type
 17155 ;;		None               void
 17156 ;; Registers used:
 17157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17158 ;; Tracked objects:
 17159 ;;		On entry : 0/0
 17160 ;;		On exit  : 0/0
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17167 ;;Total ram usage:        0 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; Hardware stack levels required when called:   15
 17170 ;; This function calls:
 17171 ;;		_ST7032_command
 17172 ;; This function is called by:
 17173 ;;		_ST7032_init
 17174 ;;		_sleep_task
 17175 ;;		_bootload
 17176 ;;		_display_LCD
 17177 ;; This function uses a non-reentrant model
 17178 ;;
 17179                           
 17180                           	psect	text61
 17181  016EF8                     __ptext61:
 17182                           	opt stack 0
 17183  016EF8                     _ST7032_clear:
 17184                           	opt stack 12
 17185                           
 17186                           ;My_ST7032.c: 23: ST7032_command(0x01, 2);
 17187                           
 17188                           ; BSR set to: 0
 17189                           ;incstack = 0
 17190  016EF8  0E02               	movlw	2
 17191  016EFA  0100               	movlb	0	; () banked
 17192  016EFC  6F6F               	movwf	ST7032_command@wait& (0+255),b
 17193  016EFE  0E01               	movlw	1
 17194  016F00  ECFF  F0B0         	call	_ST7032_command
 17195  016F04  0012               	return		;funcret
 17196  016F06                     __end_of_ST7032_clear:
 17197                           	opt stack 0
 17198                           tblptru	equ	0xFF8
 17199                           tblptrh	equ	0xFF7
 17200                           tblptrl	equ	0xFF6
 17201                           tablat	equ	0xFF5
 17202                           prodh	equ	0xFF4
 17203                           prodl	equ	0xFF3
 17204                           intcon	equ	0xFF2
 17205                           intcon2	equ	0xFF1
 17206                           indf0	equ	0xFEF
 17207                           postinc0	equ	0xFEE
 17208                           fsr0h	equ	0xFEA
 17209                           fsr0l	equ	0xFE9
 17210                           wreg	equ	0xFE8
 17211                           postinc1	equ	0xFE6
 17212                           postdec1	equ	0xFE5
 17213                           fsr1h	equ	0xFE2
 17214                           fsr1l	equ	0xFE1
 17215                           indf2	equ	0xFDF
 17216                           postinc2	equ	0xFDE
 17217                           postdec2	equ	0xFDD
 17218                           plusw2	equ	0xFDB
 17219                           fsr2h	equ	0xFDA
 17220                           fsr2l	equ	0xFD9
 17221                           status	equ	0xFD8
 17222                           
 17223 ;; *************** function _ST7032_command *****************
 17224 ;; Defined at:
 17225 ;;		line 14 in file "../My_library/My_ST7032.c"
 17226 ;; Parameters:    Size  Location     Type
 17227 ;;  command         1    wreg     unsigned char 
 17228 ;;  wait            1   15[BANK0 ] unsigned char 
 17229 ;; Auto vars:     Size  Location     Type
 17230 ;;  command         1   16[BANK0 ] unsigned char 
 17231 ;; Return value:  Size  Location     Type
 17232 ;;		None               void
 17233 ;; Registers used:
 17234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17235 ;; Tracked objects:
 17236 ;;		On entry : 0/0
 17237 ;;		On exit  : 0/0
 17238 ;;		Unchanged: 0/0
 17239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17240 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17243 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17244 ;;Total ram usage:        2 bytes
 17245 ;; Hardware stack levels used:    1
 17246 ;; Hardware stack levels required when called:   14
 17247 ;; This function calls:
 17248 ;;		_ringbuf_put
 17249 ;; This function is called by:
 17250 ;;		_ST7032_clear
 17251 ;;		_ST7032_cursor
 17252 ;;		_ST7032_init
 17253 ;; This function uses a non-reentrant model
 17254 ;;
 17255                           
 17256                           	psect	text62
 17257  0161FE                     __ptext62:
 17258                           	opt stack 0
 17259  0161FE                     _ST7032_command:
 17260                           	opt stack 12
 17261                           
 17262                           ;incstack = 0
 17263                           ;ST7032_command@command stored from wreg
 17264  0161FE  0100               	movlb	0	; () banked
 17265  016200  6F70               	movwf	ST7032_command@command& (0+255),b
 17266                           
 17267                           ;My_ST7032.c: 15: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 17268  016202  0E23               	movlw	low _lcd_tx
 17269  016204  0100               	movlb	0	; () banked
 17270  016206  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17271  016208  0E00               	movlw	high _lcd_tx
 17272  01620A  0100               	movlb	0	; () banked
 17273  01620C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17274  01620E  0E7C               	movlw	124
 17275  016210  0100               	movlb	0	; () banked
 17276  016212  6F6A               	movwf	ringbuf_put@data& (0+255),b
 17277  016214  EC99  F0A6         	call	_ringbuf_put	;wreg free
 17278                           
 17279                           ;My_ST7032.c: 16: ringbuf_put(&lcd_tx, 0x80);
 17280  016218  0E23               	movlw	low _lcd_tx
 17281  01621A  0100               	movlb	0	; () banked
 17282  01621C  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17283  01621E  0E00               	movlw	high _lcd_tx
 17284  016220  0100               	movlb	0	; () banked
 17285  016222  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17286  016224  0E80               	movlw	128
 17287  016226  0100               	movlb	0	; () banked
 17288  016228  6F6A               	movwf	ringbuf_put@data& (0+255),b
 17289  01622A  EC99  F0A6         	call	_ringbuf_put	;wreg free
 17290                           
 17291                           ;My_ST7032.c: 17: ringbuf_put(&lcd_tx, command);
 17292  01622E  0E23               	movlw	low _lcd_tx
 17293  016230  0100               	movlb	0	; () banked
 17294  016232  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17295  016234  0E00               	movlw	high _lcd_tx
 17296  016236  0100               	movlb	0	; () banked
 17297  016238  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17298  01623A  C070  F06A         	movff	ST7032_command@command,ringbuf_put@data
 17299  01623E  EC99  F0A6         	call	_ringbuf_put	;wreg free
 17300                           
 17301                           ;My_ST7032.c: 18: ringbuf_put(&lcd_tx, 0);
 17302  016242  0E23               	movlw	low _lcd_tx
 17303  016244  0100               	movlb	0	; () banked
 17304  016246  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17305  016248  0E00               	movlw	high _lcd_tx
 17306  01624A  0100               	movlb	0	; () banked
 17307  01624C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17308  01624E  0E00               	movlw	0
 17309  016250  0100               	movlb	0	; () banked
 17310  016252  6F6A               	movwf	ringbuf_put@data& (0+255),b
 17311  016254  EC99  F0A6         	call	_ringbuf_put	;wreg free
 17312                           
 17313                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, wait);
 17314  016258  0E23               	movlw	low _lcd_tx
 17315  01625A  0100               	movlb	0	; () banked
 17316  01625C  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17317  01625E  0E00               	movlw	high _lcd_tx
 17318  016260  0100               	movlb	0	; () banked
 17319  016262  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17320  016264  C06F  F06A         	movff	ST7032_command@wait,ringbuf_put@data
 17321  016268  EC99  F0A6         	call	_ringbuf_put	;wreg free
 17322  01626C  0012               	return		;funcret
 17323  01626E                     __end_of_ST7032_command:
 17324                           	opt stack 0
 17325                           tblptru	equ	0xFF8
 17326                           tblptrh	equ	0xFF7
 17327                           tblptrl	equ	0xFF6
 17328                           tablat	equ	0xFF5
 17329                           prodh	equ	0xFF4
 17330                           prodl	equ	0xFF3
 17331                           intcon	equ	0xFF2
 17332                           intcon2	equ	0xFF1
 17333                           indf0	equ	0xFEF
 17334                           postinc0	equ	0xFEE
 17335                           fsr0h	equ	0xFEA
 17336                           fsr0l	equ	0xFE9
 17337                           wreg	equ	0xFE8
 17338                           postinc1	equ	0xFE6
 17339                           postdec1	equ	0xFE5
 17340                           fsr1h	equ	0xFE2
 17341                           fsr1l	equ	0xFE1
 17342                           indf2	equ	0xFDF
 17343                           postinc2	equ	0xFDE
 17344                           postdec2	equ	0xFDD
 17345                           plusw2	equ	0xFDB
 17346                           fsr2h	equ	0xFDA
 17347                           fsr2l	equ	0xFD9
 17348                           status	equ	0xFD8
 17349                           
 17350 ;; *************** function _I2C_init_new *****************
 17351 ;; Defined at:
 17352 ;;		line 31 in file "../My_library/My_I2C.c"
 17353 ;; Parameters:    Size  Location     Type
 17354 ;;		None
 17355 ;; Auto vars:     Size  Location     Type
 17356 ;;		None
 17357 ;; Return value:  Size  Location     Type
 17358 ;;		None               void
 17359 ;; Registers used:
 17360 ;;		wreg, status,2
 17361 ;; Tracked objects:
 17362 ;;		On entry : 0/0
 17363 ;;		On exit  : 0/0
 17364 ;;		Unchanged: 0/0
 17365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17370 ;;Total ram usage:        0 bytes
 17371 ;; Hardware stack levels used:    1
 17372 ;; Hardware stack levels required when called:   12
 17373 ;; This function calls:
 17374 ;;		Nothing
 17375 ;; This function is called by:
 17376 ;;		_ST7032_init
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           	psect	text63
 17381  016E6E                     __ptext63:
 17382                           	opt stack 0
 17383  016E6E                     _I2C_init_new:
 17384                           	opt stack 16
 17385                           
 17386                           ;My_I2C.c: 32: SSP1STAT = 0b10000000;
 17387                           
 17388                           ;incstack = 0
 17389  016E6E  0E80               	movlw	128
 17390  016E70  6EC7               	movwf	4039,c	;volatile
 17391                           
 17392                           ;My_I2C.c: 33: SSP1CON1 = 0b00101000;
 17393  016E72  0E28               	movlw	40
 17394  016E74  6EC6               	movwf	4038,c	;volatile
 17395                           
 17396                           ;My_I2C.c: 34: SSP1ADD = 0x13;
 17397  016E76  0E13               	movlw	19
 17398  016E78  6EC8               	movwf	4040,c	;volatile
 17399                           
 17400                           ;My_I2C.c: 35: PIE1bits.SSP1IE = 1;
 17401  016E7A  869D               	bsf	3997,3,c	;volatile
 17402                           
 17403                           ;My_I2C.c: 36: IPR1bits.SSP1IP = 0;
 17404  016E7C  969F               	bcf	3999,3,c	;volatile
 17405                           
 17406                           ;My_I2C.c: 37: PIR1bits.SSP1IF = 0;
 17407  016E7E  969E               	bcf	3998,3,c	;volatile
 17408                           
 17409                           ;My_I2C.c: 38: PIE2bits.BCL1IE = 1;
 17410  016E80  86A0               	bsf	4000,3,c	;volatile
 17411                           
 17412                           ;My_I2C.c: 39: IPR2bits.BCL1IP = 0;
 17413  016E82  96A2               	bcf	4002,3,c	;volatile
 17414                           
 17415                           ;My_I2C.c: 40: PIR2bits.BCL1IF = 0;
 17416  016E84  96A1               	bcf	4001,3,c	;volatile
 17417                           
 17418                           ;My_I2C.c: 41: INTCONbits.PEIE = 1;
 17419  016E86  8CF2               	bsf	intcon,6,c	;volatile
 17420  016E88  0012               	return		;funcret
 17421  016E8A                     __end_of_I2C_init_new:
 17422                           	opt stack 0
 17423                           tblptru	equ	0xFF8
 17424                           tblptrh	equ	0xFF7
 17425                           tblptrl	equ	0xFF6
 17426                           tablat	equ	0xFF5
 17427                           prodh	equ	0xFF4
 17428                           prodl	equ	0xFF3
 17429                           intcon	equ	0xFF2
 17430                           intcon2	equ	0xFF1
 17431                           indf0	equ	0xFEF
 17432                           postinc0	equ	0xFEE
 17433                           fsr0h	equ	0xFEA
 17434                           fsr0l	equ	0xFE9
 17435                           wreg	equ	0xFE8
 17436                           postinc1	equ	0xFE6
 17437                           postdec1	equ	0xFE5
 17438                           fsr1h	equ	0xFE2
 17439                           fsr1l	equ	0xFE1
 17440                           indf2	equ	0xFDF
 17441                           postinc2	equ	0xFDE
 17442                           postdec2	equ	0xFDD
 17443                           plusw2	equ	0xFDB
 17444                           fsr2h	equ	0xFDA
 17445                           fsr2l	equ	0xFD9
 17446                           status	equ	0xFD8
 17447                           
 17448 ;; *************** function _RTCC_init *****************
 17449 ;; Defined at:
 17450 ;;		line 17 in file "../My_library/My_RTCC.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;		None
 17453 ;; Auto vars:     Size  Location     Type
 17454 ;;		None
 17455 ;; Return value:  Size  Location     Type
 17456 ;;		None               void
 17457 ;; Registers used:
 17458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17459 ;; Tracked objects:
 17460 ;;		On entry : 0/0
 17461 ;;		On exit  : 0/0
 17462 ;;		Unchanged: 0/0
 17463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17468 ;;Total ram usage:        0 bytes
 17469 ;; Hardware stack levels used:    1
 17470 ;; Hardware stack levels required when called:   16
 17471 ;; This function calls:
 17472 ;;		_RTCC_from_RTCC
 17473 ;;		_RTCC_from_epoch
 17474 ;; This function is called by:
 17475 ;;		_hardware_init
 17476 ;; This function uses a non-reentrant model
 17477 ;;
 17478                           
 17479                           	psect	text64
 17480  016344                     __ptext64:
 17481                           	opt stack 0
 17482  016344                     _RTCC_init:
 17483                           	opt stack 13
 17484                           
 17485                           ;My_RTCC.c: 18: RTCCFGbits.RTCWREN = 1;
 17486                           
 17487                           ;incstack = 0
 17488  016344  010F               	movlb	15	; () banked
 17489  016346  8B3F               	bsf	63,5,b	;volatile
 17490                           
 17491                           ;My_RTCC.c: 19: if (RTCCFGbits.RTCWREN != 1) {
 17492  016348  010F               	movlb	15	; () banked
 17493  01634A  BB3F               	btfsc	63,5,b	;volatile
 17494  01634C  D006               	goto	l12295
 17495                           
 17496                           ; BSR set to: 15
 17497                           ;My_RTCC.c: 20: EECON2 = 0x55;
 17498  01634E  0E55               	movlw	85
 17499  016350  6EA7               	movwf	4007,c	;volatile
 17500                           
 17501                           ;My_RTCC.c: 21: EECON2 = 0xAA;
 17502  016352  0EAA               	movlw	170
 17503  016354  6EA7               	movwf	4007,c	;volatile
 17504                           
 17505                           ; BSR set to: 15
 17506                           ;My_RTCC.c: 22: RTCCFGbits.RTCWREN = 1;
 17507  016356  010F               	movlb	15	; () banked
 17508  016358  8B3F               	bsf	63,5,b	;volatile
 17509  01635A                     l12295:
 17510                           
 17511                           ; BSR set to: 15
 17512                           ;My_RTCC.c: 23: }
 17513                           ;My_RTCC.c: 24: RTCCFGbits.RTCEN = 1;
 17514  01635A  010F               	movlb	15	; () banked
 17515  01635C  8F3F               	bsf	63,7,b	;volatile
 17516                           
 17517                           ; BSR set to: 15
 17518                           ;My_RTCC.c: 25: RTCCFGbits.RTCOE = 0;
 17519  01635E  010F               	movlb	15	; () banked
 17520  016360  953F               	bcf	63,2,b	;volatile
 17521                           
 17522                           ; BSR set to: 15
 17523                           ;My_RTCC.c: 26: PADCFG1bits.RTSECSEL0 = 1;
 17524  016362  010F               	movlb	15	; () banked
 17525  016364  833C               	bsf	60,1,b	;volatile
 17526                           
 17527                           ; BSR set to: 15
 17528                           ;My_RTCC.c: 27: PADCFG1bits.RTSECSEL1 = 1;
 17529  016366  010F               	movlb	15	; () banked
 17530  016368  853C               	bsf	60,2,b	;volatile
 17531                           
 17532                           ;My_RTCC.c: 28: RTCCAL = 0x00;
 17533  01636A  0E00               	movlw	0
 17534  01636C  010F               	movlb	15	; () banked
 17535  01636E  6F3E               	movwf	62,b	;volatile
 17536                           
 17537                           ; BSR set to: 15
 17538                           ;My_RTCC.c: 29: T1CONbits.T1OSCEN = 1;
 17539  016370  86CD               	bsf	4045,3,c	;volatile
 17540                           
 17541                           ; BSR set to: 15
 17542                           ;My_RTCC.c: 31: RTCC_from_RTCC(&now);
 17543  016372  0E73               	movlw	low _now
 17544  016374  0100               	movlb	0	; () banked
 17545  016376  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 17546  016378  0E01               	movlw	high _now
 17547  01637A  0100               	movlb	0	; () banked
 17548  01637C  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 17549  01637E  EC52  F0B7         	call	_RTCC_from_RTCC	;wreg free
 17550                           
 17551                           ;My_RTCC.c: 32: if (now.DD == 0) {
 17552  016382  0101               	movlb	1	; () banked
 17553  016384  517B               	movf	(_now+8)& (0+255),w,b
 17554  016386  A4D8               	btfss	status,2,c
 17555  016388  0012               	return	
 17556                           
 17557                           ; BSR set to: 1
 17558                           ;My_RTCC.c: 33: now.epoch = 0;
 17559  01638A  0E00               	movlw	0
 17560  01638C  0101               	movlb	1	; () banked
 17561  01638E  6F73               	movwf	_now& (0+255),b
 17562  016390  0E00               	movlw	0
 17563  016392  6F74               	movwf	(_now+1)& (0+255),b
 17564  016394  0E00               	movlw	0
 17565  016396  6F75               	movwf	(_now+2)& (0+255),b
 17566  016398  0E00               	movlw	0
 17567  01639A  6F76               	movwf	(_now+3)& (0+255),b
 17568                           
 17569                           ; BSR set to: 1
 17570                           ;My_RTCC.c: 34: RTCC_from_epoch(&now);
 17571  01639C  0E73               	movlw	low _now
 17572  01639E  0100               	movlb	0	; () banked
 17573  0163A0  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 17574  0163A2  0E01               	movlw	high _now
 17575  0163A4  0100               	movlb	0	; () banked
 17576  0163A6  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 17577  0163A8  EC45  F0B7         	call	_RTCC_from_epoch	;wreg free
 17578  0163AC  0012               	return	
 17579  0163AE                     __end_of_RTCC_init:
 17580                           	opt stack 0
 17581                           tblptru	equ	0xFF8
 17582                           tblptrh	equ	0xFF7
 17583                           tblptrl	equ	0xFF6
 17584                           tablat	equ	0xFF5
 17585                           prodh	equ	0xFF4
 17586                           prodl	equ	0xFF3
 17587                           intcon	equ	0xFF2
 17588                           intcon2	equ	0xFF1
 17589                           indf0	equ	0xFEF
 17590                           postinc0	equ	0xFEE
 17591                           fsr0h	equ	0xFEA
 17592                           fsr0l	equ	0xFE9
 17593                           wreg	equ	0xFE8
 17594                           postinc1	equ	0xFE6
 17595                           postdec1	equ	0xFE5
 17596                           fsr1h	equ	0xFE2
 17597                           fsr1l	equ	0xFE1
 17598                           indf2	equ	0xFDF
 17599                           postinc2	equ	0xFDE
 17600                           postdec2	equ	0xFDD
 17601                           plusw2	equ	0xFDB
 17602                           fsr2h	equ	0xFDA
 17603                           fsr2l	equ	0xFD9
 17604                           status	equ	0xFD8
 17605                           
 17606 ;; *************** function _RTCC_from_epoch *****************
 17607 ;; Defined at:
 17608 ;;		line 63 in file "../My_library/My_RTCC.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;  tm              2   47[BANK0 ] PTR struct .
 17611 ;;		 -> now(14), 
 17612 ;; Auto vars:     Size  Location     Type
 17613 ;;		None
 17614 ;; Return value:  Size  Location     Type
 17615 ;;		None               void
 17616 ;; Registers used:
 17617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17618 ;; Tracked objects:
 17619 ;;		On entry : 0/0
 17620 ;;		On exit  : 0/0
 17621 ;;		Unchanged: 0/0
 17622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17623 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17627 ;;Total ram usage:        2 bytes
 17628 ;; Hardware stack levels used:    1
 17629 ;; Hardware stack levels required when called:   15
 17630 ;; This function calls:
 17631 ;;		_caltime_to_RTCC
 17632 ;;		_epoch_to_caltime
 17633 ;; This function is called by:
 17634 ;;		_RTCC_init
 17635 ;;		_RTCC_adjust_time_inc
 17636 ;;		_RTCC_adjust_time_dec
 17637 ;; This function uses a non-reentrant model
 17638 ;;
 17639                           
 17640                           	psect	text65
 17641  016E8A                     __ptext65:
 17642                           	opt stack 0
 17643  016E8A                     _RTCC_from_epoch:
 17644                           	opt stack 11
 17645                           
 17646                           ;My_RTCC.c: 64: epoch_to_caltime(tm);
 17647                           
 17648                           ;incstack = 0
 17649  016E8A  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 17650  016E8E  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 17651  016E92  EC25  F096         	call	_epoch_to_caltime	;wreg free
 17652                           
 17653                           ;My_RTCC.c: 65: caltime_to_RTCC(tm);
 17654  016E96  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 17655  016E9A  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 17656  016E9E  EC59  F0A5         	call	_caltime_to_RTCC	;wreg free
 17657  016EA2  0012               	return		;funcret
 17658  016EA4                     __end_of_RTCC_from_epoch:
 17659                           	opt stack 0
 17660                           tblptru	equ	0xFF8
 17661                           tblptrh	equ	0xFF7
 17662                           tblptrl	equ	0xFF6
 17663                           tablat	equ	0xFF5
 17664                           prodh	equ	0xFF4
 17665                           prodl	equ	0xFF3
 17666                           intcon	equ	0xFF2
 17667                           intcon2	equ	0xFF1
 17668                           indf0	equ	0xFEF
 17669                           postinc0	equ	0xFEE
 17670                           fsr0h	equ	0xFEA
 17671                           fsr0l	equ	0xFE9
 17672                           wreg	equ	0xFE8
 17673                           postinc1	equ	0xFE6
 17674                           postdec1	equ	0xFE5
 17675                           fsr1h	equ	0xFE2
 17676                           fsr1l	equ	0xFE1
 17677                           indf2	equ	0xFDF
 17678                           postinc2	equ	0xFDE
 17679                           postdec2	equ	0xFDD
 17680                           plusw2	equ	0xFDB
 17681                           fsr2h	equ	0xFDA
 17682                           fsr2l	equ	0xFD9
 17683                           status	equ	0xFD8
 17684                           
 17685 ;; *************** function _epoch_to_caltime *****************
 17686 ;; Defined at:
 17687 ;;		line 289 in file "../My_library/My_RTCC.c"
 17688 ;; Parameters:    Size  Location     Type
 17689 ;;  tm              2   33[BANK0 ] PTR struct .
 17690 ;;		 -> now(14), 
 17691 ;; Auto vars:     Size  Location     Type
 17692 ;;  num             4   43[BANK0 ] unsigned long 
 17693 ;;  day             2   39[BANK0 ] unsigned int 
 17694 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 17695 ;;  month           1   42[BANK0 ] unsigned char 
 17696 ;;  year            1   41[BANK0 ] unsigned char 
 17697 ;; Return value:  Size  Location     Type
 17698 ;;		None               void
 17699 ;; Registers used:
 17700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17706 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17707 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17710 ;;Total ram usage:       14 bytes
 17711 ;; Hardware stack levels used:    1
 17712 ;; Hardware stack levels required when called:   14
 17713 ;; This function calls:
 17714 ;;		_get_quot_rem
 17715 ;;		_month_length
 17716 ;; This function is called by:
 17717 ;;		_RTCC_from_caltime
 17718 ;;		_RTCC_from_epoch
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           
 17722                           	psect	text66
 17723  012C4A                     __ptext66:
 17724                           	opt stack 0
 17725  012C4A                     _epoch_to_caltime:
 17726                           	opt stack 11
 17727                           
 17728                           ;My_RTCC.c: 292: static uint16_t day_cache = 0;
 17729                           ;My_RTCC.c: 293: static uint8_t month_cache = 1;
 17730                           ;My_RTCC.c: 294: static uint8_t year_cache = 0;
 17731                           ;My_RTCC.c: 295: uint16_t day_since_epoch;
 17732                           ;My_RTCC.c: 296: uint16_t day;
 17733                           ;My_RTCC.c: 297: uint8_t year = 0;
 17734                           
 17735                           ;incstack = 0
 17736  012C4A  0E00               	movlw	0
 17737  012C4C  0100               	movlb	0	; () banked
 17738  012C4E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17739                           
 17740                           ;My_RTCC.c: 298: uint8_t month = 1;
 17741  012C50  0E01               	movlw	1
 17742  012C52  0100               	movlb	0	; () banked
 17743  012C54  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17744                           
 17745                           ; BSR set to: 0
 17746                           ;My_RTCC.c: 299: epoch_t num;
 17747                           ;My_RTCC.c: 301: num = tm->epoch;
 17748  012C56  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17749  012C5A  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17750  012C5E  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 17751  012C62  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 17752  012C66  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 17753  012C6A  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;My_RTCC.c: 302: tm->ss = get_quot_rem(&num, 60);
 17757  012C6E  0E8B               	movlw	low epoch_to_caltime@num
 17758  012C70  0100               	movlb	0	; () banked
 17759  012C72  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17760  012C74  0E00               	movlw	high epoch_to_caltime@num
 17761  012C76  0100               	movlb	0	; () banked
 17762  012C78  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17763  012C7A  0E3C               	movlw	60
 17764  012C7C  0100               	movlb	0	; () banked
 17765  012C7E  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17766  012C80  EC2F  F0A6         	call	_get_quot_rem	;wreg free
 17767  012C84  0100               	movlb	0	; () banked
 17768  012C86  EE20 F004          	lfsr	2,4
 17769  012C8A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17770  012C8C  26D9               	addwf	fsr2l,f,c
 17771  012C8E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17772  012C90  22DA               	addwfc	fsr2h,f,c
 17773  012C92  0100               	movlb	0	; () banked
 17774  012C94  C079  FFDF         	movff	?_get_quot_rem,indf2
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;My_RTCC.c: 303: tm->mm = get_quot_rem(&num, 60);
 17778  012C98  0E8B               	movlw	low epoch_to_caltime@num
 17779  012C9A  0100               	movlb	0	; () banked
 17780  012C9C  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17781  012C9E  0E00               	movlw	high epoch_to_caltime@num
 17782  012CA0  0100               	movlb	0	; () banked
 17783  012CA2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17784  012CA4  0E3C               	movlw	60
 17785  012CA6  0100               	movlb	0	; () banked
 17786  012CA8  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17787  012CAA  EC2F  F0A6         	call	_get_quot_rem	;wreg free
 17788  012CAE  0100               	movlb	0	; () banked
 17789  012CB0  EE20 F005          	lfsr	2,5
 17790  012CB4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17791  012CB6  26D9               	addwf	fsr2l,f,c
 17792  012CB8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17793  012CBA  22DA               	addwfc	fsr2h,f,c
 17794  012CBC  0100               	movlb	0	; () banked
 17795  012CBE  C079  FFDF         	movff	?_get_quot_rem,indf2
 17796                           
 17797                           ; BSR set to: 0
 17798                           ;My_RTCC.c: 304: tm->hh = get_quot_rem(&num, 24);
 17799  012CC2  0E8B               	movlw	low epoch_to_caltime@num
 17800  012CC4  0100               	movlb	0	; () banked
 17801  012CC6  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17802  012CC8  0E00               	movlw	high epoch_to_caltime@num
 17803  012CCA  0100               	movlb	0	; () banked
 17804  012CCC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17805  012CCE  0E18               	movlw	24
 17806  012CD0  0100               	movlb	0	; () banked
 17807  012CD2  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17808  012CD4  EC2F  F0A6         	call	_get_quot_rem	;wreg free
 17809  012CD8  0100               	movlb	0	; () banked
 17810  012CDA  EE20 F006          	lfsr	2,6
 17811  012CDE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17812  012CE0  26D9               	addwf	fsr2l,f,c
 17813  012CE2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17814  012CE4  22DA               	addwfc	fsr2h,f,c
 17815  012CE6  0100               	movlb	0	; () banked
 17816  012CE8  C079  FFDF         	movff	?_get_quot_rem,indf2
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;My_RTCC.c: 305: day = num;
 17820  012CEC  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 17821  012CF0  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;My_RTCC.c: 306: day_since_epoch = day;
 17825  012CF4  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 17826  012CF8  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 17827                           
 17828                           ; BSR set to: 0
 17829                           ;My_RTCC.c: 308: num += 6;
 17830  012CFC  0E06               	movlw	6
 17831  012CFE  0100               	movlb	0	; () banked
 17832  012D00  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 17833  012D02  0E00               	movlw	0
 17834  012D04  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 17835  012D06  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 17836  012D08  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 17837                           
 17838                           ; BSR set to: 0
 17839                           ;My_RTCC.c: 309: tm->EE = get_quot_rem(&num, 7);
 17840  012D0A  0E8B               	movlw	low epoch_to_caltime@num
 17841  012D0C  0100               	movlb	0	; () banked
 17842  012D0E  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17843  012D10  0E00               	movlw	high epoch_to_caltime@num
 17844  012D12  0100               	movlb	0	; () banked
 17845  012D14  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17846  012D16  0E07               	movlw	7
 17847  012D18  0100               	movlb	0	; () banked
 17848  012D1A  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17849  012D1C  EC2F  F0A6         	call	_get_quot_rem	;wreg free
 17850  012D20  0100               	movlb	0	; () banked
 17851  012D22  EE20 F007          	lfsr	2,7
 17852  012D26  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17853  012D28  26D9               	addwf	fsr2l,f,c
 17854  012D2A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17855  012D2C  22DA               	addwfc	fsr2h,f,c
 17856  012D2E  0100               	movlb	0	; () banked
 17857  012D30  C079  FFDF         	movff	?_get_quot_rem,indf2
 17858                           
 17859                           ;My_RTCC.c: 318: while (day >= month_length(year, month)) {
 17860  012D34  D03F               	goto	l10937
 17861  012D36                     l971:
 17862                           
 17863                           ; BSR set to: 0
 17864                           ;My_RTCC.c: 319: LATB2 = 1;
 17865  012D36  848A               	bsf	3978,2,c	;volatile
 17866                           
 17867                           ; BSR set to: 0
 17868                           ;My_RTCC.c: 320: day = day - month_length(year, month);
 17869  012D38  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17870  012D3C  0100               	movlb	0	; () banked
 17871  012D3E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17872  012D40  EC7E  F0A4         	call	_month_length
 17873  012D44  0100               	movlb	0	; () banked
 17874  012D46  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17875  012D48  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 17876  012D4A  0100               	movlb	0	; () banked
 17877  012D4C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17878  012D4E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17879  012D50  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17880  012D52  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17881  012D54  0100               	movlb	0	; () banked
 17882  012D56  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 17883  012D58  0100               	movlb	0	; () banked
 17884  012D5A  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17885  012D5C  0100               	movlb	0	; () banked
 17886  012D5E  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 17887  012D60  0100               	movlb	0	; () banked
 17888  012D62  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 17889  012D64  0100               	movlb	0	; () banked
 17890  012D66  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17891  012D68  0100               	movlb	0	; () banked
 17892  012D6A  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;My_RTCC.c: 321: if (month == 12) {
 17896  012D6C  0E0C               	movlw	12
 17897  012D6E  0100               	movlb	0	; () banked
 17898  012D70  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 17899  012D72  A4D8               	btfss	status,2,c
 17900  012D74  D019               	goto	l10931
 17901                           
 17902                           ; BSR set to: 0
 17903                           ;My_RTCC.c: 322: month = 1;
 17904  012D76  0E01               	movlw	1
 17905  012D78  0100               	movlb	0	; () banked
 17906  012D7A  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;My_RTCC.c: 323: year++;
 17910  012D7C  0100               	movlb	0	; () banked
 17911  012D7E  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;My_RTCC.c: 325: if (year >= 100) {
 17915  012D80  0E63               	movlw	99
 17916  012D82  0100               	movlb	0	; () banked
 17917  012D84  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 17918  012D86  D012               	goto	l10933
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;My_RTCC.c: 326: tm->epoch -= 3155760000;
 17922  012D88  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17923  012D8C  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17924  012D90  0E80               	movlw	128
 17925  012D92  5EDE               	subwf	postinc2,f,c
 17926  012D94  0E13               	movlw	19
 17927  012D96  5ADE               	subwfb	postinc2,f,c
 17928  012D98  0E19               	movlw	25
 17929  012D9A  5ADE               	subwfb	postinc2,f,c
 17930  012D9C  0EBC               	movlw	188
 17931  012D9E  5ADE               	subwfb	postinc2,f,c
 17932                           
 17933                           ; BSR set to: 0
 17934                           ;My_RTCC.c: 327: year = 0;
 17935  012DA0  0E00               	movlw	0
 17936  012DA2  0100               	movlb	0	; () banked
 17937  012DA4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17938                           
 17939                           ; BSR set to: 0
 17940                           ;My_RTCC.c: 328: }
 17941                           ;My_RTCC.c: 329: } else {
 17942  012DA6  D002               	goto	l10933
 17943  012DA8                     l10931:
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;My_RTCC.c: 330: month++;
 17947  012DA8  0100               	movlb	0	; () banked
 17948  012DAA  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 17949  012DAC                     l10933:
 17950                           
 17951                           ; BSR set to: 0
 17952                           ;My_RTCC.c: 331: }
 17953                           ;My_RTCC.c: 332: month_cache = month;
 17954  012DAC  C08A  F1E6         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 17955                           
 17956                           ; BSR set to: 0
 17957                           ;My_RTCC.c: 333: year_cache = year;
 17958  012DB0  C089  F126         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 17959  012DB4                     l10937:
 17960                           
 17961                           ; BSR set to: 0
 17962  012DB4  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17963  012DB8  0100               	movlb	0	; () banked
 17964  012DBA  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17965  012DBC  EC7E  F0A4         	call	_month_length
 17966  012DC0  0100               	movlb	0	; () banked
 17967  012DC2  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17968  012DC4  0100               	movlb	0	; () banked
 17969  012DC6  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 17970  012DC8  0100               	movlb	0	; () banked
 17971  012DCA  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 17972  012DCC  0E00               	movlw	0
 17973  012DCE  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 17974  012DD0  B0D8               	btfsc	status,0,c
 17975  012DD2  D7B1               	goto	l971
 17976                           
 17977                           ; BSR set to: 0
 17978                           ;My_RTCC.c: 334: }
 17979                           ;My_RTCC.c: 335: day_cache = day_since_epoch - day;
 17980                           
 17981                           ; BSR set to: 0
 17982  012DD4  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 17983  012DD8  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 17984  012DDC  0100               	movlb	0	; () banked
 17985  012DDE  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17986  012DE0  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17987  012DE2  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17988  012DE4  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17989  012DE6  0100               	movlb	0	; () banked
 17990  012DE8  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 17991  012DEA  0100               	movlb	0	; () banked
 17992  012DEC  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17993  012DEE  0102               	movlb	2	; () banked
 17994  012DF0  6F18               	movwf	epoch_to_caltime@day_cache& (0+255),b
 17995  012DF2  0100               	movlb	0	; () banked
 17996  012DF4  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 17997  012DF6  0100               	movlb	0	; () banked
 17998  012DF8  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17999  012DFA  0102               	movlb	2	; () banked
 18000  012DFC  6F19               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 18001                           
 18002                           ; BSR set to: 2
 18003                           ;My_RTCC.c: 336: day++;
 18004  012DFE  0100               	movlb	0	; () banked
 18005  012E00  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 18006  012E02  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 18007                           
 18008                           ; BSR set to: 0
 18009                           ;My_RTCC.c: 338: tm->YY = year;
 18010  012E04  0100               	movlb	0	; () banked
 18011  012E06  EE20 F00A          	lfsr	2,10
 18012  012E0A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 18013  012E0C  26D9               	addwf	fsr2l,f,c
 18014  012E0E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 18015  012E10  22DA               	addwfc	fsr2h,f,c
 18016  012E12  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 18017                           
 18018                           ; BSR set to: 0
 18019                           ;My_RTCC.c: 339: tm->MM = month;
 18020  012E16  0100               	movlb	0	; () banked
 18021  012E18  EE20 F009          	lfsr	2,9
 18022  012E1C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 18023  012E1E  26D9               	addwf	fsr2l,f,c
 18024  012E20  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 18025  012E22  22DA               	addwfc	fsr2h,f,c
 18026  012E24  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 18027                           
 18028                           ; BSR set to: 0
 18029                           ;My_RTCC.c: 340: tm->DD = day;
 18030  012E28  0100               	movlb	0	; () banked
 18031  012E2A  EE20 F008          	lfsr	2,8
 18032  012E2E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 18033  012E30  26D9               	addwf	fsr2l,f,c
 18034  012E32  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 18035  012E34  22DA               	addwfc	fsr2h,f,c
 18036  012E36  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 18037                           
 18038                           ; BSR set to: 0
 18039  012E3A  0012               	return		;funcret
 18040  012E3C                     __end_of_epoch_to_caltime:
 18041                           	opt stack 0
 18042                           tblptru	equ	0xFF8
 18043                           tblptrh	equ	0xFF7
 18044                           tblptrl	equ	0xFF6
 18045                           tablat	equ	0xFF5
 18046                           prodh	equ	0xFF4
 18047                           prodl	equ	0xFF3
 18048                           intcon	equ	0xFF2
 18049                           intcon2	equ	0xFF1
 18050                           indf0	equ	0xFEF
 18051                           postinc0	equ	0xFEE
 18052                           fsr0h	equ	0xFEA
 18053                           fsr0l	equ	0xFE9
 18054                           wreg	equ	0xFE8
 18055                           postinc1	equ	0xFE6
 18056                           postdec1	equ	0xFE5
 18057                           fsr1h	equ	0xFE2
 18058                           fsr1l	equ	0xFE1
 18059                           indf2	equ	0xFDF
 18060                           postinc2	equ	0xFDE
 18061                           postdec2	equ	0xFDD
 18062                           plusw2	equ	0xFDB
 18063                           fsr2h	equ	0xFDA
 18064                           fsr2l	equ	0xFD9
 18065                           status	equ	0xFD8
 18066                           
 18067 ;; *************** function _get_quot_rem *****************
 18068 ;; Defined at:
 18069 ;;		line 244 in file "../My_library/My_RTCC.c"
 18070 ;; Parameters:    Size  Location     Type
 18071 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 18072 ;;		 -> epoch_to_caltime@num(4), 
 18073 ;;  div             1   27[BANK0 ] unsigned char 
 18074 ;; Auto vars:     Size  Location     Type
 18075 ;;  num             4   29[BANK0 ] unsigned long 
 18076 ;; Return value:  Size  Location     Type
 18077 ;;                  4   25[BANK0 ] unsigned long 
 18078 ;; Registers used:
 18079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18080 ;; Tracked objects:
 18081 ;;		On entry : 0/0
 18082 ;;		On exit  : 0/0
 18083 ;;		Unchanged: 0/0
 18084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18086 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18088 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18089 ;;Total ram usage:        8 bytes
 18090 ;; Hardware stack levels used:    1
 18091 ;; Hardware stack levels required when called:   13
 18092 ;; This function calls:
 18093 ;;		___lldiv
 18094 ;;		___lmul
 18095 ;; This function is called by:
 18096 ;;		_epoch_to_caltime
 18097 ;; This function uses a non-reentrant model
 18098 ;;
 18099                           
 18100                           	psect	text67
 18101  014C5E                     __ptext67:
 18102                           	opt stack 0
 18103  014C5E                     _get_quot_rem:
 18104                           	opt stack 11
 18105                           
 18106                           ;My_RTCC.c: 247: epoch_t num = *quot;
 18107                           
 18108                           ; BSR set to: 0
 18109                           ;incstack = 0
 18110  014C5E  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 18111  014C62  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 18112  014C66  CFDE F07D          	movff	postinc2,get_quot_rem@num
 18113  014C6A  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 18114  014C6E  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 18115  014C72  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 18116                           
 18117                           ;My_RTCC.c: 248: return num - (*quot = num / div) * div;
 18118  014C76  0100               	movlb	0	; () banked
 18119  014C78  517B               	movf	get_quot_rem@div& (0+255),w,b
 18120  014C7A  0100               	movlb	0	; () banked
 18121  014C7C  6F64               	movwf	___lldiv@divisor& (0+255),b
 18122  014C7E  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 18123  014C80  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 18124  014C82  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 18125  014C84  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 18126  014C88  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 18127  014C8C  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 18128  014C90  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 18129  014C94  EC51  F0AB         	call	___lldiv	;wreg free
 18130  014C98  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 18131  014C9C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 18132  014CA0  0100               	movlb	0	; () banked
 18133  014CA2  C060  FFDE         	movff	?___lldiv,postinc2
 18134  014CA6  0100               	movlb	0	; () banked
 18135  014CA8  C061  FFDE         	movff	?___lldiv+1,postinc2
 18136  014CAC  0100               	movlb	0	; () banked
 18137  014CAE  C062  FFDE         	movff	?___lldiv+2,postinc2
 18138  014CB2  0100               	movlb	0	; () banked
 18139  014CB4  C063  FFDD         	movff	?___lldiv+3,postdec2
 18140  014CB8  52DD               	movf	postdec2,f,c
 18141  014CBA  52DD               	movf	postdec2,f,c
 18142  014CBC  CFDE F06D          	movff	postinc2,___lmul@multiplier
 18143  014CC0  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 18144  014CC4  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 18145  014CC8  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 18146  014CCC  0100               	movlb	0	; () banked
 18147  014CCE  517B               	movf	get_quot_rem@div& (0+255),w,b
 18148  014CD0  0100               	movlb	0	; () banked
 18149  014CD2  6F71               	movwf	___lmul@multiplicand& (0+255),b
 18150  014CD4  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 18151  014CD6  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 18152  014CD8  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 18153  014CDA  EC19  F0B0         	call	___lmul	;wreg free
 18154  014CDE  0100               	movlb	0	; () banked
 18155  014CE0  1F6D               	comf	?___lmul& (0+255),f,b
 18156  014CE2  0100               	movlb	0	; () banked
 18157  014CE4  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 18158  014CE6  0100               	movlb	0	; () banked
 18159  014CE8  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 18160  014CEA  0100               	movlb	0	; () banked
 18161  014CEC  1F70               	comf	(?___lmul+3)& (0+255),f,b
 18162  014CEE  0100               	movlb	0	; () banked
 18163  014CF0  2B6D               	incf	?___lmul& (0+255),f,b
 18164  014CF2  0E00               	movlw	0
 18165  014CF4  0100               	movlb	0	; () banked
 18166  014CF6  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 18167  014CF8  0100               	movlb	0	; () banked
 18168  014CFA  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 18169  014CFC  0100               	movlb	0	; () banked
 18170  014CFE  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 18171  014D00  0100               	movlb	0	; () banked
 18172  014D02  517D               	movf	get_quot_rem@num& (0+255),w,b
 18173  014D04  0100               	movlb	0	; () banked
 18174  014D06  256D               	addwf	?___lmul& (0+255),w,b
 18175  014D08  0100               	movlb	0	; () banked
 18176  014D0A  6F79               	movwf	?_get_quot_rem& (0+255),b
 18177  014D0C  0100               	movlb	0	; () banked
 18178  014D0E  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 18179  014D10  0100               	movlb	0	; () banked
 18180  014D12  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 18181  014D14  0100               	movlb	0	; () banked
 18182  014D16  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 18183  014D18  0100               	movlb	0	; () banked
 18184  014D1A  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 18185  014D1C  0100               	movlb	0	; () banked
 18186  014D1E  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 18187  014D20  0100               	movlb	0	; () banked
 18188  014D22  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 18189  014D24  0100               	movlb	0	; () banked
 18190  014D26  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 18191  014D28  0100               	movlb	0	; () banked
 18192  014D2A  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 18193  014D2C  0100               	movlb	0	; () banked
 18194  014D2E  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 18195  014D30  0012               	return	
 18196  014D32                     __end_of_get_quot_rem:
 18197                           	opt stack 0
 18198                           tblptru	equ	0xFF8
 18199                           tblptrh	equ	0xFF7
 18200                           tblptrl	equ	0xFF6
 18201                           tablat	equ	0xFF5
 18202                           prodh	equ	0xFF4
 18203                           prodl	equ	0xFF3
 18204                           intcon	equ	0xFF2
 18205                           intcon2	equ	0xFF1
 18206                           indf0	equ	0xFEF
 18207                           postinc0	equ	0xFEE
 18208                           fsr0h	equ	0xFEA
 18209                           fsr0l	equ	0xFE9
 18210                           wreg	equ	0xFE8
 18211                           postinc1	equ	0xFE6
 18212                           postdec1	equ	0xFE5
 18213                           fsr1h	equ	0xFE2
 18214                           fsr1l	equ	0xFE1
 18215                           indf2	equ	0xFDF
 18216                           postinc2	equ	0xFDE
 18217                           postdec2	equ	0xFDD
 18218                           plusw2	equ	0xFDB
 18219                           fsr2h	equ	0xFDA
 18220                           fsr2l	equ	0xFD9
 18221                           status	equ	0xFD8
 18222                           
 18223 ;; *************** function _caltime_to_RTCC *****************
 18224 ;; Defined at:
 18225 ;;		line 269 in file "../My_library/My_RTCC.c"
 18226 ;; Parameters:    Size  Location     Type
 18227 ;;  tm              2    9[BANK0 ] PTR struct .
 18228 ;;		 -> now(14), 
 18229 ;; Auto vars:     Size  Location     Type
 18230 ;;		None
 18231 ;; Return value:  Size  Location     Type
 18232 ;;		None               void
 18233 ;; Registers used:
 18234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18235 ;; Tracked objects:
 18236 ;;		On entry : 0/0
 18237 ;;		On exit  : 0/0
 18238 ;;		Unchanged: 0/0
 18239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18240 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18243 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18244 ;;Total ram usage:        2 bytes
 18245 ;; Hardware stack levels used:    1
 18246 ;; Hardware stack levels required when called:   14
 18247 ;; This function calls:
 18248 ;;		_d_to_x
 18249 ;; This function is called by:
 18250 ;;		_RTCC_from_caltime
 18251 ;;		_RTCC_from_epoch
 18252 ;; This function uses a non-reentrant model
 18253 ;;
 18254                           
 18255                           	psect	text68
 18256  014AB2                     __ptext68:
 18257                           	opt stack 0
 18258  014AB2                     _caltime_to_RTCC:
 18259                           	opt stack 11
 18260  014AB2                     l958:
 18261  014AB2  010F               	movlb	15	; () banked
 18262  014AB4  B93F               	btfsc	63,4,b	;volatile
 18263  014AB6  D7FD               	goto	l958
 18264                           
 18265                           ; BSR set to: 15
 18266                           ;My_RTCC.c: 271: RTCCFGbits.RTCPTR0 = 1;
 18267  014AB8  010F               	movlb	15	; () banked
 18268  014ABA  813F               	bsf	63,0,b	;volatile
 18269                           
 18270                           ;My_RTCC.c: 272: RTCCFGbits.RTCPTR1 = 1;
 18271  014ABC  010F               	movlb	15	; () banked
 18272  014ABE  833F               	bsf	63,1,b	;volatile
 18273                           
 18274                           ; BSR set to: 15
 18275                           ;My_RTCC.c: 273: RTCVALL = d_to_x(tm->YY);
 18276  014AC0  0100               	movlb	0	; () banked
 18277  014AC2  EE20 F00A          	lfsr	2,10
 18278  014AC6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18279  014AC8  26D9               	addwf	fsr2l,f,c
 18280  014ACA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18281  014ACC  22DA               	addwfc	fsr2h,f,c
 18282  014ACE  50DF               	movf	indf2,w,c
 18283  014AD0  EC87  F0B6         	call	_d_to_x
 18284  014AD4  010F               	movlb	15	; () banked
 18285  014AD6  6F3A               	movwf	58,b	;volatile
 18286                           
 18287                           ; BSR set to: 15
 18288                           ;My_RTCC.c: 274: RTCVALH = 0x00;
 18289  014AD8  0E00               	movlw	0
 18290  014ADA  010F               	movlb	15	; () banked
 18291  014ADC  6F3B               	movwf	59,b	;volatile
 18292                           
 18293                           ; BSR set to: 15
 18294                           ;My_RTCC.c: 275: RTCCFGbits.RTCPTR0 = 0;
 18295  014ADE  010F               	movlb	15	; () banked
 18296  014AE0  913F               	bcf	63,0,b	;volatile
 18297                           
 18298                           ; BSR set to: 15
 18299                           ;My_RTCC.c: 276: RTCCFGbits.RTCPTR1 = 1;
 18300  014AE2  010F               	movlb	15	; () banked
 18301  014AE4  833F               	bsf	63,1,b	;volatile
 18302                           
 18303                           ; BSR set to: 15
 18304                           ;My_RTCC.c: 277: RTCVALL = d_to_x(tm->DD);
 18305  014AE6  0100               	movlb	0	; () banked
 18306  014AE8  EE20 F008          	lfsr	2,8
 18307  014AEC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18308  014AEE  26D9               	addwf	fsr2l,f,c
 18309  014AF0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18310  014AF2  22DA               	addwfc	fsr2h,f,c
 18311  014AF4  50DF               	movf	indf2,w,c
 18312  014AF6  EC87  F0B6         	call	_d_to_x
 18313  014AFA  010F               	movlb	15	; () banked
 18314  014AFC  6F3A               	movwf	58,b	;volatile
 18315                           
 18316                           ; BSR set to: 15
 18317                           ;My_RTCC.c: 278: RTCVALH = d_to_x(tm->MM);
 18318  014AFE  0100               	movlb	0	; () banked
 18319  014B00  EE20 F009          	lfsr	2,9
 18320  014B04  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18321  014B06  26D9               	addwf	fsr2l,f,c
 18322  014B08  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18323  014B0A  22DA               	addwfc	fsr2h,f,c
 18324  014B0C  50DF               	movf	indf2,w,c
 18325  014B0E  EC87  F0B6         	call	_d_to_x
 18326  014B12  010F               	movlb	15	; () banked
 18327  014B14  6F3B               	movwf	59,b	;volatile
 18328                           
 18329                           ; BSR set to: 15
 18330                           ;My_RTCC.c: 279: RTCCFGbits.RTCPTR0 = 1;
 18331  014B16  010F               	movlb	15	; () banked
 18332  014B18  813F               	bsf	63,0,b	;volatile
 18333                           
 18334                           ; BSR set to: 15
 18335                           ;My_RTCC.c: 280: RTCCFGbits.RTCPTR1 = 0;
 18336  014B1A  010F               	movlb	15	; () banked
 18337  014B1C  933F               	bcf	63,1,b	;volatile
 18338                           
 18339                           ; BSR set to: 15
 18340                           ;My_RTCC.c: 281: RTCVALL = d_to_x(tm->hh);
 18341  014B1E  0100               	movlb	0	; () banked
 18342  014B20  EE20 F006          	lfsr	2,6
 18343  014B24  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18344  014B26  26D9               	addwf	fsr2l,f,c
 18345  014B28  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18346  014B2A  22DA               	addwfc	fsr2h,f,c
 18347  014B2C  50DF               	movf	indf2,w,c
 18348  014B2E  EC87  F0B6         	call	_d_to_x
 18349  014B32  010F               	movlb	15	; () banked
 18350  014B34  6F3A               	movwf	58,b	;volatile
 18351                           
 18352                           ; BSR set to: 15
 18353                           ;My_RTCC.c: 282: RTCVALH = d_to_x(tm->EE);
 18354  014B36  0100               	movlb	0	; () banked
 18355  014B38  EE20 F007          	lfsr	2,7
 18356  014B3C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18357  014B3E  26D9               	addwf	fsr2l,f,c
 18358  014B40  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18359  014B42  22DA               	addwfc	fsr2h,f,c
 18360  014B44  50DF               	movf	indf2,w,c
 18361  014B46  EC87  F0B6         	call	_d_to_x
 18362  014B4A  010F               	movlb	15	; () banked
 18363  014B4C  6F3B               	movwf	59,b	;volatile
 18364                           
 18365                           ; BSR set to: 15
 18366                           ;My_RTCC.c: 283: RTCCFGbits.RTCPTR0 = 0;
 18367  014B4E  010F               	movlb	15	; () banked
 18368  014B50  913F               	bcf	63,0,b	;volatile
 18369                           
 18370                           ; BSR set to: 15
 18371                           ;My_RTCC.c: 284: RTCCFGbits.RTCPTR1 = 0;
 18372  014B52  010F               	movlb	15	; () banked
 18373  014B54  933F               	bcf	63,1,b	;volatile
 18374                           
 18375                           ; BSR set to: 15
 18376                           ;My_RTCC.c: 285: RTCVALL = d_to_x(tm->ss);
 18377  014B56  0100               	movlb	0	; () banked
 18378  014B58  EE20 F004          	lfsr	2,4
 18379  014B5C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18380  014B5E  26D9               	addwf	fsr2l,f,c
 18381  014B60  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18382  014B62  22DA               	addwfc	fsr2h,f,c
 18383  014B64  50DF               	movf	indf2,w,c
 18384  014B66  EC87  F0B6         	call	_d_to_x
 18385  014B6A  010F               	movlb	15	; () banked
 18386  014B6C  6F3A               	movwf	58,b	;volatile
 18387                           
 18388                           ; BSR set to: 15
 18389                           ;My_RTCC.c: 286: RTCVALH = d_to_x(tm->mm);
 18390  014B6E  0100               	movlb	0	; () banked
 18391  014B70  EE20 F005          	lfsr	2,5
 18392  014B74  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18393  014B76  26D9               	addwf	fsr2l,f,c
 18394  014B78  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18395  014B7A  22DA               	addwfc	fsr2h,f,c
 18396  014B7C  50DF               	movf	indf2,w,c
 18397  014B7E  EC87  F0B6         	call	_d_to_x
 18398  014B82  010F               	movlb	15	; () banked
 18399  014B84  6F3B               	movwf	59,b	;volatile
 18400                           
 18401                           ; BSR set to: 15
 18402  014B86  0012               	return		;funcret
 18403  014B88                     __end_of_caltime_to_RTCC:
 18404                           	opt stack 0
 18405                           tblptru	equ	0xFF8
 18406                           tblptrh	equ	0xFF7
 18407                           tblptrl	equ	0xFF6
 18408                           tablat	equ	0xFF5
 18409                           prodh	equ	0xFF4
 18410                           prodl	equ	0xFF3
 18411                           intcon	equ	0xFF2
 18412                           intcon2	equ	0xFF1
 18413                           indf0	equ	0xFEF
 18414                           postinc0	equ	0xFEE
 18415                           fsr0h	equ	0xFEA
 18416                           fsr0l	equ	0xFE9
 18417                           wreg	equ	0xFE8
 18418                           postinc1	equ	0xFE6
 18419                           postdec1	equ	0xFE5
 18420                           fsr1h	equ	0xFE2
 18421                           fsr1l	equ	0xFE1
 18422                           indf2	equ	0xFDF
 18423                           postinc2	equ	0xFDE
 18424                           postdec2	equ	0xFDD
 18425                           plusw2	equ	0xFDB
 18426                           fsr2h	equ	0xFDA
 18427                           fsr2l	equ	0xFD9
 18428                           status	equ	0xFD8
 18429                           
 18430 ;; *************** function _d_to_x *****************
 18431 ;; Defined at:
 18432 ;;		line 234 in file "../My_library/My_RTCC.c"
 18433 ;; Parameters:    Size  Location     Type
 18434 ;;  dec             1    wreg     unsigned char 
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;  dec             1    8[BANK0 ] unsigned char 
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      unsigned char 
 18439 ;; Registers used:
 18440 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18449 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18450 ;;Total ram usage:        1 bytes
 18451 ;; Hardware stack levels used:    1
 18452 ;; Hardware stack levels required when called:   13
 18453 ;; This function calls:
 18454 ;;		___awdiv
 18455 ;; This function is called by:
 18456 ;;		_caltime_to_RTCC
 18457 ;; This function uses a non-reentrant model
 18458 ;;
 18459                           
 18460                           	psect	text69
 18461  016D0E                     __ptext69:
 18462                           	opt stack 0
 18463  016D0E                     _d_to_x:
 18464                           	opt stack 11
 18465                           
 18466                           ; BSR set to: 15
 18467                           ;incstack = 0
 18468                           ;d_to_x@dec stored from wreg
 18469  016D0E  0100               	movlb	0	; () banked
 18470  016D10  6F68               	movwf	d_to_x@dec& (0+255),b
 18471                           
 18472                           ;My_RTCC.c: 237: return dec / 10 * 6 + dec;
 18473  016D12  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 18474  016D16  0100               	movlb	0	; () banked
 18475  016D18  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 18476  016D1A  0E00               	movlw	0
 18477  016D1C  0100               	movlb	0	; () banked
 18478  016D1E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 18479  016D20  0E0A               	movlw	10
 18480  016D22  6F62               	movwf	___awdiv@divisor& (0+255),b
 18481  016D24  ECF2  F0AA         	call	___awdiv	;wreg free
 18482  016D28  0100               	movlb	0	; () banked
 18483  016D2A  5160               	movf	?___awdiv& (0+255),w,b
 18484  016D2C  0D06               	mullw	6
 18485  016D2E  50F3               	movf	prodl,w,c
 18486  016D30  0100               	movlb	0	; () banked
 18487  016D32  2568               	addwf	d_to_x@dec& (0+255),w,b
 18488  016D34  0012               	return	
 18489  016D36                     __end_of_d_to_x:
 18490                           	opt stack 0
 18491                           tblptru	equ	0xFF8
 18492                           tblptrh	equ	0xFF7
 18493                           tblptrl	equ	0xFF6
 18494                           tablat	equ	0xFF5
 18495                           prodh	equ	0xFF4
 18496                           prodl	equ	0xFF3
 18497                           intcon	equ	0xFF2
 18498                           intcon2	equ	0xFF1
 18499                           indf0	equ	0xFEF
 18500                           postinc0	equ	0xFEE
 18501                           fsr0h	equ	0xFEA
 18502                           fsr0l	equ	0xFE9
 18503                           wreg	equ	0xFE8
 18504                           postinc1	equ	0xFE6
 18505                           postdec1	equ	0xFE5
 18506                           fsr1h	equ	0xFE2
 18507                           fsr1l	equ	0xFE1
 18508                           indf2	equ	0xFDF
 18509                           postinc2	equ	0xFDE
 18510                           postdec2	equ	0xFDD
 18511                           plusw2	equ	0xFDB
 18512                           fsr2h	equ	0xFDA
 18513                           fsr2l	equ	0xFD9
 18514                           status	equ	0xFD8
 18515                           
 18516 ;; *************** function ___awdiv *****************
 18517 ;; Defined at:
 18518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;  dividend        2    0[BANK0 ] int 
 18521 ;;  divisor         2    2[BANK0 ] int 
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;  quotient        2    6[BANK0 ] int 
 18524 ;;  sign            1    5[BANK0 ] unsigned char 
 18525 ;;  counter         1    4[BANK0 ] unsigned char 
 18526 ;; Return value:  Size  Location     Type
 18527 ;;                  2    0[BANK0 ] int 
 18528 ;; Registers used:
 18529 ;;		wreg, status,2, status,0
 18530 ;; Tracked objects:
 18531 ;;		On entry : 0/0
 18532 ;;		On exit  : 0/0
 18533 ;;		Unchanged: 0/0
 18534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18535 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18536 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18538 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18539 ;;Total ram usage:        8 bytes
 18540 ;; Hardware stack levels used:    1
 18541 ;; Hardware stack levels required when called:   12
 18542 ;; This function calls:
 18543 ;;		Nothing
 18544 ;; This function is called by:
 18545 ;;		_d_to_x
 18546 ;; This function uses a non-reentrant model
 18547 ;;
 18548                           
 18549                           	psect	text70
 18550  0155E4                     __ptext70:
 18551                           	opt stack 0
 18552  0155E4                     ___awdiv:
 18553                           	opt stack 11
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;incstack = 0
 18557  0155E4  0E00               	movlw	0
 18558  0155E6  0100               	movlb	0	; () banked
 18559  0155E8  6F65               	movwf	___awdiv@sign& (0+255),b
 18560                           
 18561                           ; BSR set to: 0
 18562  0155EA  0100               	movlb	0	; () banked
 18563  0155EC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18564  0155EE  D008               	goto	l10737
 18565                           
 18566                           ; BSR set to: 0
 18567  0155F0  0100               	movlb	0	; () banked
 18568  0155F2  6D62               	negf	___awdiv@divisor& (0+255),b
 18569  0155F4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 18570  0155F6  B0D8               	btfsc	status,0,c
 18571  0155F8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 18572                           
 18573                           ; BSR set to: 0
 18574  0155FA  0E01               	movlw	1
 18575  0155FC  0100               	movlb	0	; () banked
 18576  0155FE  6F65               	movwf	___awdiv@sign& (0+255),b
 18577  015600                     l10737:
 18578                           
 18579                           ; BSR set to: 0
 18580  015600  0100               	movlb	0	; () banked
 18581  015602  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 18582  015604  D008               	goto	l10743
 18583                           
 18584                           ; BSR set to: 0
 18585  015606  0100               	movlb	0	; () banked
 18586  015608  6D60               	negf	___awdiv@dividend& (0+255),b
 18587  01560A  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 18588  01560C  B0D8               	btfsc	status,0,c
 18589  01560E  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 18590                           
 18591                           ; BSR set to: 0
 18592  015610  0E01               	movlw	1
 18593  015612  0100               	movlb	0	; () banked
 18594  015614  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 18595  015616                     l10743:
 18596                           
 18597                           ; BSR set to: 0
 18598  015616  0E00               	movlw	0
 18599  015618  0100               	movlb	0	; () banked
 18600  01561A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 18601  01561C  0E00               	movlw	0
 18602  01561E  6F66               	movwf	___awdiv@quotient& (0+255),b
 18603                           
 18604                           ; BSR set to: 0
 18605  015620  0100               	movlb	0	; () banked
 18606  015622  5162               	movf	___awdiv@divisor& (0+255),w,b
 18607  015624  0100               	movlb	0	; () banked
 18608  015626  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 18609  015628  B4D8               	btfsc	status,2,c
 18610  01562A  D02C               	goto	l10765
 18611                           
 18612                           ; BSR set to: 0
 18613  01562C  0E01               	movlw	1
 18614  01562E  0100               	movlb	0	; () banked
 18615  015630  6F64               	movwf	___awdiv@counter& (0+255),b
 18616  015632  D006               	goto	l10751
 18617  015634                     l10749:
 18618                           
 18619                           ; BSR set to: 0
 18620  015634  0100               	movlb	0	; () banked
 18621  015636  90D8               	bcf	status,0,c
 18622  015638  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 18623  01563A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 18624  01563C  0100               	movlb	0	; () banked
 18625  01563E  2B64               	incf	___awdiv@counter& (0+255),f,b
 18626  015640                     l10751:
 18627                           
 18628                           ; BSR set to: 0
 18629  015640  0100               	movlb	0	; () banked
 18630  015642  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18631  015644  D7F7               	goto	l10749
 18632  015646                     l10753:
 18633                           
 18634                           ; BSR set to: 0
 18635  015646  0100               	movlb	0	; () banked
 18636  015648  90D8               	bcf	status,0,c
 18637  01564A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 18638  01564C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18639                           
 18640                           ; BSR set to: 0
 18641  01564E  0100               	movlb	0	; () banked
 18642  015650  5162               	movf	___awdiv@divisor& (0+255),w,b
 18643  015652  0100               	movlb	0	; () banked
 18644  015654  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 18645  015656  0100               	movlb	0	; () banked
 18646  015658  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18647  01565A  0100               	movlb	0	; () banked
 18648  01565C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18649  01565E  A0D8               	btfss	status,0,c
 18650  015660  D00A               	goto	l10761
 18651                           
 18652                           ; BSR set to: 0
 18653  015662  0100               	movlb	0	; () banked
 18654  015664  5162               	movf	___awdiv@divisor& (0+255),w,b
 18655  015666  0100               	movlb	0	; () banked
 18656  015668  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 18657  01566A  0100               	movlb	0	; () banked
 18658  01566C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18659  01566E  0100               	movlb	0	; () banked
 18660  015670  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18661                           
 18662                           ; BSR set to: 0
 18663  015672  0100               	movlb	0	; () banked
 18664  015674  8166               	bsf	___awdiv@quotient& (0+255),0,b
 18665  015676                     l10761:
 18666                           
 18667                           ; BSR set to: 0
 18668  015676  0100               	movlb	0	; () banked
 18669  015678  90D8               	bcf	status,0,c
 18670  01567A  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18671  01567C  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 18672                           
 18673                           ; BSR set to: 0
 18674  01567E  0100               	movlb	0	; () banked
 18675  015680  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 18676  015682  D7E1               	goto	l10753
 18677  015684                     l10765:
 18678                           
 18679                           ; BSR set to: 0
 18680  015684  0100               	movlb	0	; () banked
 18681  015686  5165               	movf	___awdiv@sign& (0+255),w,b
 18682  015688  0100               	movlb	0	; () banked
 18683  01568A  B4D8               	btfsc	status,2,c
 18684  01568C  D005               	goto	l10769
 18685                           
 18686                           ; BSR set to: 0
 18687  01568E  0100               	movlb	0	; () banked
 18688  015690  6D66               	negf	___awdiv@quotient& (0+255),b
 18689  015692  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18690  015694  B0D8               	btfsc	status,0,c
 18691  015696  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18692  015698                     l10769:
 18693                           
 18694                           ; BSR set to: 0
 18695  015698  C066  F060         	movff	___awdiv@quotient,?___awdiv
 18696  01569C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 18697  0156A0  0012               	return	
 18698  0156A2                     __end_of___awdiv:
 18699                           	opt stack 0
 18700                           tblptru	equ	0xFF8
 18701                           tblptrh	equ	0xFF7
 18702                           tblptrl	equ	0xFF6
 18703                           tablat	equ	0xFF5
 18704                           prodh	equ	0xFF4
 18705                           prodl	equ	0xFF3
 18706                           intcon	equ	0xFF2
 18707                           intcon2	equ	0xFF1
 18708                           indf0	equ	0xFEF
 18709                           postinc0	equ	0xFEE
 18710                           fsr0h	equ	0xFEA
 18711                           fsr0l	equ	0xFE9
 18712                           wreg	equ	0xFE8
 18713                           postinc1	equ	0xFE6
 18714                           postdec1	equ	0xFE5
 18715                           fsr1h	equ	0xFE2
 18716                           fsr1l	equ	0xFE1
 18717                           indf2	equ	0xFDF
 18718                           postinc2	equ	0xFDE
 18719                           postdec2	equ	0xFDD
 18720                           plusw2	equ	0xFDB
 18721                           fsr2h	equ	0xFDA
 18722                           fsr2l	equ	0xFD9
 18723                           status	equ	0xFD8
 18724                           
 18725 ;; *************** function _CTMU_init *****************
 18726 ;; Defined at:
 18727 ;;		line 169 in file "../My_library/My_PIC.c"
 18728 ;; Parameters:    Size  Location     Type
 18729 ;;		None
 18730 ;; Auto vars:     Size  Location     Type
 18731 ;;		None
 18732 ;; Return value:  Size  Location     Type
 18733 ;;		None               void
 18734 ;; Registers used:
 18735 ;;		wreg, status,2
 18736 ;; Tracked objects:
 18737 ;;		On entry : 0/0
 18738 ;;		On exit  : 0/0
 18739 ;;		Unchanged: 0/0
 18740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18745 ;;Total ram usage:        0 bytes
 18746 ;; Hardware stack levels used:    1
 18747 ;; Hardware stack levels required when called:   12
 18748 ;; This function calls:
 18749 ;;		Nothing
 18750 ;; This function is called by:
 18751 ;;		_hardware_init
 18752 ;; This function uses a non-reentrant model
 18753 ;;
 18754                           
 18755                           	psect	text71
 18756  016D36                     __ptext71:
 18757                           	opt stack 0
 18758  016D36                     _CTMU_init:
 18759                           	opt stack 17
 18760                           
 18761                           ;My_PIC.c: 170: CTMUCONH = 0x00;
 18762                           
 18763                           ; BSR set to: 0
 18764                           ;incstack = 0
 18765  016D36  0E00               	movlw	0
 18766  016D38  6EB3               	movwf	4019,c	;volatile
 18767                           
 18768                           ;My_PIC.c: 171: CTMUCONL = 0x90;
 18769  016D3A  0E90               	movlw	144
 18770  016D3C  6EB2               	movwf	4018,c	;volatile
 18771                           
 18772                           ;My_PIC.c: 172: CTMUICON = 0x01;
 18773  016D3E  0E01               	movlw	1
 18774  016D40  6EB1               	movwf	4017,c	;volatile
 18775                           
 18776                           ;My_PIC.c: 174: ADCON1bits.ADFM = 1;
 18777  016D42  8EC1               	bsf	4033,7,c	;volatile
 18778                           
 18779                           ;My_PIC.c: 175: ADCON1bits.ADCAL = 0;
 18780  016D44  9CC1               	bcf	4033,6,c	;volatile
 18781                           
 18782                           ;My_PIC.c: 176: ADCON1bits.ACQT = 1;
 18783  016D46  50C1               	movf	4033,w,c	;volatile
 18784  016D48  0BC7               	andlw	-57
 18785  016D4A  0908               	iorlw	8
 18786  016D4C  6EC1               	movwf	4033,c	;volatile
 18787                           
 18788                           ;My_PIC.c: 177: ADCON1bits.ADCS = 6;
 18789  016D4E  50C1               	movf	4033,w,c	;volatile
 18790  016D50  0BF8               	andlw	-8
 18791  016D52  0906               	iorlw	6
 18792  016D54  6EC1               	movwf	4033,c	;volatile
 18793                           
 18794                           ;My_PIC.c: 179: ADCON0bits.VCFG0 = 0;
 18795  016D56  9CC2               	bcf	4034,6,c	;volatile
 18796                           
 18797                           ;My_PIC.c: 180: ADCON0bits.VCFG1 = 0;
 18798  016D58  9EC2               	bcf	4034,7,c	;volatile
 18799                           
 18800                           ;My_PIC.c: 181: ADCON0bits.ADON = 1;
 18801  016D5A  80C2               	bsf	4034,0,c	;volatile
 18802  016D5C  0012               	return		;funcret
 18803  016D5E                     __end_of_CTMU_init:
 18804                           	opt stack 0
 18805                           tblptru	equ	0xFF8
 18806                           tblptrh	equ	0xFF7
 18807                           tblptrl	equ	0xFF6
 18808                           tablat	equ	0xFF5
 18809                           prodh	equ	0xFF4
 18810                           prodl	equ	0xFF3
 18811                           intcon	equ	0xFF2
 18812                           intcon2	equ	0xFF1
 18813                           indf0	equ	0xFEF
 18814                           postinc0	equ	0xFEE
 18815                           fsr0h	equ	0xFEA
 18816                           fsr0l	equ	0xFE9
 18817                           wreg	equ	0xFE8
 18818                           postinc1	equ	0xFE6
 18819                           postdec1	equ	0xFE5
 18820                           fsr1h	equ	0xFE2
 18821                           fsr1l	equ	0xFE1
 18822                           indf2	equ	0xFDF
 18823                           postinc2	equ	0xFDE
 18824                           postdec2	equ	0xFDD
 18825                           plusw2	equ	0xFDB
 18826                           fsr2h	equ	0xFDA
 18827                           fsr2l	equ	0xFD9
 18828                           status	equ	0xFD8
 18829                           
 18830 ;; *************** function _ADC_init *****************
 18831 ;; Defined at:
 18832 ;;		line 133 in file "../My_library/My_PIC.c"
 18833 ;; Parameters:    Size  Location     Type
 18834 ;;  p_ref           1    wreg     unsigned char 
 18835 ;; Auto vars:     Size  Location     Type
 18836 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18837 ;; Return value:  Size  Location     Type
 18838 ;;		None               void
 18839 ;; Registers used:
 18840 ;;		wreg, status,2
 18841 ;; Tracked objects:
 18842 ;;		On entry : 0/0
 18843 ;;		On exit  : 0/0
 18844 ;;		Unchanged: 0/0
 18845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18850 ;;Total ram usage:        1 bytes
 18851 ;; Hardware stack levels used:    1
 18852 ;; Hardware stack levels required when called:   12
 18853 ;; This function calls:
 18854 ;;		Nothing
 18855 ;; This function is called by:
 18856 ;;		_hardware_init
 18857 ;; This function uses a non-reentrant model
 18858 ;;
 18859                           
 18860                           	psect	text72
 18861  016DD0                     __ptext72:
 18862                           	opt stack 0
 18863  016DD0                     _ADC_init:
 18864                           	opt stack 17
 18865                           
 18866                           ;incstack = 0
 18867                           ;ADC_init@p_ref stored from wreg
 18868  016DD0  0100               	movlb	0	; () banked
 18869  016DD2  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18870                           
 18871                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
 18872  016DD4  9EC2               	bcf	4034,7,c	;volatile
 18873                           
 18874                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
 18875  016DD6  0100               	movlb	0	; () banked
 18876  016DD8  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18877  016DDA  D002               	bra	u13705
 18878  016DDC  9CC2               	bcf	4034,6,c	;volatile
 18879  016DDE  D001               	bra	u13706
 18880  016DE0                     u13705:
 18881  016DE0  8CC2               	bsf	4034,6,c	;volatile
 18882  016DE2                     u13706:
 18883                           
 18884                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
 18885  016DE2  8EC1               	bsf	4033,7,c	;volatile
 18886                           
 18887                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
 18888  016DE4  9CC1               	bcf	4033,6,c	;volatile
 18889                           
 18890                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
 18891  016DE6  50C1               	movf	4033,w,c	;volatile
 18892  016DE8  0BF8               	andlw	-8
 18893  016DEA  0906               	iorlw	6
 18894  016DEC  6EC1               	movwf	4033,c	;volatile
 18895  016DEE  0012               	return		;funcret
 18896  016DF0                     __end_of_ADC_init:
 18897                           	opt stack 0
 18898                           tblptru	equ	0xFF8
 18899                           tblptrh	equ	0xFF7
 18900                           tblptrl	equ	0xFF6
 18901                           tablat	equ	0xFF5
 18902                           prodh	equ	0xFF4
 18903                           prodl	equ	0xFF3
 18904                           intcon	equ	0xFF2
 18905                           intcon2	equ	0xFF1
 18906                           indf0	equ	0xFEF
 18907                           postinc0	equ	0xFEE
 18908                           fsr0h	equ	0xFEA
 18909                           fsr0l	equ	0xFE9
 18910                           wreg	equ	0xFE8
 18911                           postinc1	equ	0xFE6
 18912                           postdec1	equ	0xFE5
 18913                           fsr1h	equ	0xFE2
 18914                           fsr1l	equ	0xFE1
 18915                           indf2	equ	0xFDF
 18916                           postinc2	equ	0xFDE
 18917                           postdec2	equ	0xFDD
 18918                           plusw2	equ	0xFDB
 18919                           fsr2h	equ	0xFDA
 18920                           fsr2l	equ	0xFD9
 18921                           status	equ	0xFD8
 18922                           
 18923 ;; *************** function _ctmu_task *****************
 18924 ;; Defined at:
 18925 ;;		line 29 in file "ctmu.c"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;		None
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;		None
 18930 ;; Return value:  Size  Location     Type
 18931 ;;		None               void
 18932 ;; Registers used:
 18933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18943 ;;Total ram usage:        0 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; Hardware stack levels required when called:   15
 18946 ;; This function calls:
 18947 ;;		_ctmu_sampling
 18948 ;; This function is called by:
 18949 ;;		_main
 18950 ;; This function uses a non-reentrant model
 18951 ;;
 18952                           
 18953                           	psect	text73
 18954  016ED6                     __ptext73:
 18955                           	opt stack 0
 18956  016ED6                     _ctmu_task:
 18957                           	opt stack 15
 18958                           
 18959                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 18960                           
 18961                           ;incstack = 0
 18962  016ED6  0101               	movlb	1	; () banked
 18963  016ED8  511E               	movf	_ctmu_sampling_flag& (0+255),w,b
 18964  016EDA  B4D8               	btfsc	status,2,c
 18965  016EDC  0012               	return	
 18966                           
 18967                           ; BSR set to: 1
 18968                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 18969  016EDE  0E00               	movlw	0
 18970  016EE0  0101               	movlb	1	; () banked
 18971  016EE2  6F1E               	movwf	_ctmu_sampling_flag& (0+255),b
 18972                           
 18973                           ; BSR set to: 1
 18974                           ;ctmu.c: 32: ctmu_sampling();
 18975  016EE4  EC5D  F09F         	call	_ctmu_sampling	;wreg free
 18976  016EE8  0012               	return	
 18977  016EEA                     __end_of_ctmu_task:
 18978                           	opt stack 0
 18979                           tblptru	equ	0xFF8
 18980                           tblptrh	equ	0xFF7
 18981                           tblptrl	equ	0xFF6
 18982                           tablat	equ	0xFF5
 18983                           prodh	equ	0xFF4
 18984                           prodl	equ	0xFF3
 18985                           intcon	equ	0xFF2
 18986                           intcon2	equ	0xFF1
 18987                           indf0	equ	0xFEF
 18988                           postinc0	equ	0xFEE
 18989                           fsr0h	equ	0xFEA
 18990                           fsr0l	equ	0xFE9
 18991                           wreg	equ	0xFE8
 18992                           postinc1	equ	0xFE6
 18993                           postdec1	equ	0xFE5
 18994                           fsr1h	equ	0xFE2
 18995                           fsr1l	equ	0xFE1
 18996                           indf2	equ	0xFDF
 18997                           postinc2	equ	0xFDE
 18998                           postdec2	equ	0xFDD
 18999                           plusw2	equ	0xFDB
 19000                           fsr2h	equ	0xFDA
 19001                           fsr2l	equ	0xFD9
 19002                           status	equ	0xFD8
 19003                           
 19004 ;; *************** function _ctmu_sampling *****************
 19005 ;; Defined at:
 19006 ;;		line 22 in file "ctmu.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;		None
 19009 ;; Auto vars:     Size  Location     Type
 19010 ;;		None
 19011 ;; Return value:  Size  Location     Type
 19012 ;;		None               void
 19013 ;; Registers used:
 19014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19015 ;; Tracked objects:
 19016 ;;		On entry : 0/0
 19017 ;;		On exit  : 0/0
 19018 ;;		Unchanged: 0/0
 19019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19024 ;;Total ram usage:        0 bytes
 19025 ;; Hardware stack levels used:    1
 19026 ;; Hardware stack levels required when called:   14
 19027 ;; This function calls:
 19028 ;;		_CTMU_read
 19029 ;;		___lwdiv
 19030 ;;		_button_timer_interrupt
 19031 ;; This function is called by:
 19032 ;;		_ctmu_task
 19033 ;; This function uses a non-reentrant model
 19034 ;;
 19035                           
 19036                           	psect	text74
 19037  013EBA                     __ptext74:
 19038                           	opt stack 0
 19039  013EBA                     _ctmu_sampling:
 19040                           	opt stack 15
 19041                           
 19042                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 19043                           
 19044                           ;incstack = 0
 19045  013EBA  0E2E               	movlw	low _port
 19046  013EBC  0100               	movlb	0	; () banked
 19047  013EBE  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19048  013EC0  0E01               	movlw	high _port
 19049  013EC2  0100               	movlb	0	; () banked
 19050  013EC4  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19051  013EC6  0E00               	movlw	0
 19052  013EC8  EC31  F0AA         	call	_CTMU_read
 19053  013ECC  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19054  013ED0  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19055  013ED4  C132  F07E         	movff	_port+4,___lwdiv@divisor
 19056  013ED8  C133  F07F         	movff	_port+5,___lwdiv@divisor+1
 19057  013EDC  ECA2  F0AF         	call	___lwdiv	;wreg free
 19058  013EE0  0100               	movlb	0	; () banked
 19059  013EE2  517C               	movf	?___lwdiv& (0+255),w,b
 19060  013EE4  0100               	movlb	0	; () banked
 19061  013EE6  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19062  013EE8  A4D8               	btfss	status,2,c
 19063  013EEA  D002               	goto	u14290
 19064  013EEC  0E01               	movlw	1
 19065  013EEE  D001               	goto	u14300
 19066  013EF0                     u14290:
 19067  013EF0  0E00               	movlw	0
 19068  013EF2                     u14300:
 19069  013EF2  0100               	movlb	0	; () banked
 19070  013EF4  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19071  013EF6  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19072                           
 19073                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 19074  013EFA  0E45               	movlw	low (_port+23)
 19075  013EFC  0100               	movlb	0	; () banked
 19076  013EFE  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19077  013F00  0E01               	movlw	high (_port+23)
 19078  013F02  0100               	movlb	0	; () banked
 19079  013F04  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19080  013F06  0E01               	movlw	1
 19081  013F08  EC31  F0AA         	call	_CTMU_read
 19082  013F0C  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19083  013F10  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19084  013F14  C149  F07E         	movff	_port+27,___lwdiv@divisor
 19085  013F18  C14A  F07F         	movff	_port+28,___lwdiv@divisor+1
 19086  013F1C  ECA2  F0AF         	call	___lwdiv	;wreg free
 19087  013F20  0100               	movlb	0	; () banked
 19088  013F22  517C               	movf	?___lwdiv& (0+255),w,b
 19089  013F24  0100               	movlb	0	; () banked
 19090  013F26  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19091  013F28  A4D8               	btfss	status,2,c
 19092  013F2A  D002               	goto	u14310
 19093  013F2C  0E01               	movlw	1
 19094  013F2E  D001               	goto	u14320
 19095  013F30                     u14310:
 19096  013F30  0E00               	movlw	0
 19097  013F32                     u14320:
 19098  013F32  0100               	movlb	0	; () banked
 19099  013F34  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19100  013F36  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19101                           
 19102                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 19103  013F3A  0E5C               	movlw	low (_port+46)
 19104  013F3C  0100               	movlb	0	; () banked
 19105  013F3E  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19106  013F40  0E01               	movlw	high (_port+46)
 19107  013F42  0100               	movlb	0	; () banked
 19108  013F44  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19109  013F46  0E02               	movlw	2
 19110  013F48  EC31  F0AA         	call	_CTMU_read
 19111  013F4C  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19112  013F50  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19113  013F54  C160  F07E         	movff	_port+50,___lwdiv@divisor
 19114  013F58  C161  F07F         	movff	_port+51,___lwdiv@divisor+1
 19115  013F5C  ECA2  F0AF         	call	___lwdiv	;wreg free
 19116  013F60  0100               	movlb	0	; () banked
 19117  013F62  517C               	movf	?___lwdiv& (0+255),w,b
 19118  013F64  0100               	movlb	0	; () banked
 19119  013F66  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19120  013F68  A4D8               	btfss	status,2,c
 19121  013F6A  D002               	goto	u14330
 19122  013F6C  0E01               	movlw	1
 19123  013F6E  D001               	goto	u14340
 19124  013F70                     u14330:
 19125  013F70  0E00               	movlw	0
 19126  013F72                     u14340:
 19127  013F72  0100               	movlb	0	; () banked
 19128  013F74  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19129  013F76  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19130                           
 19131                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19132  013F7A  0EFC               	movlw	low _ctmu_m
 19133  013F7C  0100               	movlb	0	; () banked
 19134  013F7E  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19135  013F80  0E00               	movlw	high _ctmu_m
 19136  013F82  0100               	movlb	0	; () banked
 19137  013F84  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19138  013F86  0E03               	movlw	3
 19139  013F88  EC31  F0AA         	call	_CTMU_read
 19140  013F8C  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19141  013F90  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19142  013F94  C110  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19143  013F98  C111  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19144  013F9C  ECA2  F0AF         	call	___lwdiv	;wreg free
 19145  013FA0  0100               	movlb	0	; () banked
 19146  013FA2  517C               	movf	?___lwdiv& (0+255),w,b
 19147  013FA4  0100               	movlb	0	; () banked
 19148  013FA6  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19149  013FA8  A4D8               	btfss	status,2,c
 19150  013FAA  D002               	goto	u14350
 19151  013FAC  0E01               	movlw	1
 19152  013FAE  D001               	goto	u14360
 19153  013FB0                     u14350:
 19154  013FB0  0E00               	movlw	0
 19155  013FB2                     u14360:
 19156  013FB2  0100               	movlb	0	; () banked
 19157  013FB4  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19158  013FB6  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19159  013FBA  0012               	return		;funcret
 19160  013FBC                     __end_of_ctmu_sampling:
 19161                           	opt stack 0
 19162                           tblptru	equ	0xFF8
 19163                           tblptrh	equ	0xFF7
 19164                           tblptrl	equ	0xFF6
 19165                           tablat	equ	0xFF5
 19166                           prodh	equ	0xFF4
 19167                           prodl	equ	0xFF3
 19168                           intcon	equ	0xFF2
 19169                           intcon2	equ	0xFF1
 19170                           indf0	equ	0xFEF
 19171                           postinc0	equ	0xFEE
 19172                           fsr0h	equ	0xFEA
 19173                           fsr0l	equ	0xFE9
 19174                           wreg	equ	0xFE8
 19175                           postinc1	equ	0xFE6
 19176                           postdec1	equ	0xFE5
 19177                           fsr1h	equ	0xFE2
 19178                           fsr1l	equ	0xFE1
 19179                           indf2	equ	0xFDF
 19180                           postinc2	equ	0xFDE
 19181                           postdec2	equ	0xFDD
 19182                           plusw2	equ	0xFDB
 19183                           fsr2h	equ	0xFDA
 19184                           fsr2l	equ	0xFD9
 19185                           status	equ	0xFD8
 19186                           
 19187 ;; *************** function _button_timer_interrupt *****************
 19188 ;; Defined at:
 19189 ;;		line 3 in file "../My_library/My_button.c"
 19190 ;; Parameters:    Size  Location     Type
 19191 ;;  bt              2   35[BANK0 ] PTR struct button
 19192 ;;		 -> ctmu_m(4), port(69), 
 19193 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19194 ;; Auto vars:     Size  Location     Type
 19195 ;;		None
 19196 ;; Return value:  Size  Location     Type
 19197 ;;		None               void
 19198 ;; Registers used:
 19199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19200 ;; Tracked objects:
 19201 ;;		On entry : 0/0
 19202 ;;		On exit  : 0/0
 19203 ;;		Unchanged: 0/0
 19204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19205 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19207 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19208 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19209 ;;Total ram usage:        5 bytes
 19210 ;; Hardware stack levels used:    1
 19211 ;; Hardware stack levels required when called:   12
 19212 ;; This function calls:
 19213 ;;		Nothing
 19214 ;; This function is called by:
 19215 ;;		_ctmu_sampling
 19216 ;; This function uses a non-reentrant model
 19217 ;;
 19218                           
 19219                           	psect	text75
 19220  0110F6                     __ptext75:
 19221                           	opt stack 0
 19222  0110F6                     _button_timer_interrupt:
 19223                           	opt stack 16
 19224                           
 19225                           ;My_button.c: 4: if (sw_value) {
 19226                           
 19227                           ;incstack = 0
 19228  0110F6  0100               	movlb	0	; () banked
 19229  0110F8  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19230  0110FA  0100               	movlb	0	; () banked
 19231  0110FC  B4D8               	btfsc	status,2,c
 19232  0110FE  D0A8               	goto	l8521
 19233                           
 19234                           ; BSR set to: 0
 19235                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19236  011100  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19237  011104  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19238  011108  0E84               	movlw	132
 19239  01110A  18DE               	xorwf	postinc2,w,c
 19240  01110C  E10D               	bnz	l525
 19241  01110E  0E03               	movlw	3
 19242  011110  18DE               	xorwf	postinc2,w,c
 19243  011112  A4D8               	btfss	status,2,c
 19244  011114  D009               	goto	l525
 19245                           
 19246                           ; BSR set to: 0
 19247  011116  0100               	movlb	0	; () banked
 19248  011118  EE20 F003          	lfsr	2,3
 19249  01111C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19250  01111E  26D9               	addwf	fsr2l,f,c
 19251  011120  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19252  011122  22DA               	addwfc	fsr2h,f,c
 19253  011124  0100               	movlb	0	; () banked
 19254  011126  8EDF               	bsf	indf2,7,c
 19255  011128                     l525:
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19259  011128  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19260  01112C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19261  011130  0EBC               	movlw	188
 19262  011132  18DE               	xorwf	postinc2,w,c
 19263  011134  E10D               	bnz	l526
 19264  011136  0E02               	movlw	2
 19265  011138  18DE               	xorwf	postinc2,w,c
 19266  01113A  A4D8               	btfss	status,2,c
 19267  01113C  D009               	goto	l526
 19268                           
 19269                           ; BSR set to: 0
 19270  01113E  0100               	movlb	0	; () banked
 19271  011140  EE20 F003          	lfsr	2,3
 19272  011144  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19273  011146  26D9               	addwf	fsr2l,f,c
 19274  011148  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19275  01114A  22DA               	addwfc	fsr2h,f,c
 19276  01114C  0100               	movlb	0	; () banked
 19277  01114E  8CDF               	bsf	indf2,6,c
 19278  011150                     l526:
 19279                           
 19280                           ; BSR set to: 0
 19281                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19282  011150  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19283  011154  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19284  011158  0EF4               	movlw	244
 19285  01115A  18DE               	xorwf	postinc2,w,c
 19286  01115C  E10C               	bnz	l527
 19287  01115E  04DE               	decf	postinc2,w,c
 19288  011160  A4D8               	btfss	status,2,c
 19289  011162  D009               	goto	l527
 19290                           
 19291                           ; BSR set to: 0
 19292  011164  0100               	movlb	0	; () banked
 19293  011166  EE20 F003          	lfsr	2,3
 19294  01116A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19295  01116C  26D9               	addwf	fsr2l,f,c
 19296  01116E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19297  011170  22DA               	addwfc	fsr2h,f,c
 19298  011172  0100               	movlb	0	; () banked
 19299  011174  8ADF               	bsf	indf2,5,c
 19300  011176                     l527:
 19301                           
 19302                           ; BSR set to: 0
 19303                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19304  011176  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19305  01117A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19306  01117E  0E2C               	movlw	44
 19307  011180  18DE               	xorwf	postinc2,w,c
 19308  011182  E10C               	bnz	l528
 19309  011184  04DE               	decf	postinc2,w,c
 19310  011186  A4D8               	btfss	status,2,c
 19311  011188  D009               	goto	l528
 19312                           
 19313                           ; BSR set to: 0
 19314  01118A  0100               	movlb	0	; () banked
 19315  01118C  EE20 F003          	lfsr	2,3
 19316  011190  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19317  011192  26D9               	addwf	fsr2l,f,c
 19318  011194  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19319  011196  22DA               	addwfc	fsr2h,f,c
 19320  011198  0100               	movlb	0	; () banked
 19321  01119A  88DF               	bsf	indf2,4,c
 19322  01119C                     l528:
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19326  01119C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19327  0111A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19328  0111A4  0E96               	movlw	150
 19329  0111A6  18DE               	xorwf	postinc2,w,c
 19330  0111A8  10DE               	iorwf	postinc2,w,c
 19331  0111AA  A4D8               	btfss	status,2,c
 19332  0111AC  D009               	goto	l529
 19333                           
 19334                           ; BSR set to: 0
 19335  0111AE  0100               	movlb	0	; () banked
 19336  0111B0  EE20 F003          	lfsr	2,3
 19337  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19338  0111B6  26D9               	addwf	fsr2l,f,c
 19339  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19340  0111BA  22DA               	addwfc	fsr2h,f,c
 19341  0111BC  0100               	movlb	0	; () banked
 19342  0111BE  86DF               	bsf	indf2,3,c
 19343  0111C0                     l529:
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19347  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19348  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19349  0111C8  0E3C               	movlw	60
 19350  0111CA  18DE               	xorwf	postinc2,w,c
 19351  0111CC  10DE               	iorwf	postinc2,w,c
 19352  0111CE  A4D8               	btfss	status,2,c
 19353  0111D0  D009               	goto	l530
 19354                           
 19355                           ; BSR set to: 0
 19356  0111D2  0100               	movlb	0	; () banked
 19357  0111D4  EE20 F003          	lfsr	2,3
 19358  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19359  0111DA  26D9               	addwf	fsr2l,f,c
 19360  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19361  0111DE  22DA               	addwfc	fsr2h,f,c
 19362  0111E0  0100               	movlb	0	; () banked
 19363  0111E2  84DF               	bsf	indf2,2,c
 19364  0111E4                     l530:
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19368  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19369  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19370  0111EC  0E10               	movlw	16
 19371  0111EE  18DE               	xorwf	postinc2,w,c
 19372  0111F0  10DE               	iorwf	postinc2,w,c
 19373  0111F2  A4D8               	btfss	status,2,c
 19374  0111F4  D009               	goto	l531
 19375                           
 19376                           ; BSR set to: 0
 19377  0111F6  0100               	movlb	0	; () banked
 19378  0111F8  EE20 F003          	lfsr	2,3
 19379  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19380  0111FE  26D9               	addwf	fsr2l,f,c
 19381  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19382  011202  22DA               	addwfc	fsr2h,f,c
 19383  011204  0100               	movlb	0	; () banked
 19384  011206  82DF               	bsf	indf2,1,c
 19385  011208                     l531:
 19386                           
 19387                           ; BSR set to: 0
 19388                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19389  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19390  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19391  011210  0E02               	movlw	2
 19392  011212  18DE               	xorwf	postinc2,w,c
 19393  011214  10DE               	iorwf	postinc2,w,c
 19394  011216  A4D8               	btfss	status,2,c
 19395  011218  D009               	goto	l532
 19396                           
 19397                           ; BSR set to: 0
 19398  01121A  0100               	movlb	0	; () banked
 19399  01121C  EE20 F003          	lfsr	2,3
 19400  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19401  011222  26D9               	addwf	fsr2l,f,c
 19402  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19403  011226  22DA               	addwfc	fsr2h,f,c
 19404  011228  0100               	movlb	0	; () banked
 19405  01122A  80DF               	bsf	indf2,0,c
 19406  01122C                     l532:
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19410  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19411  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19412  011234  0E85               	movlw	133
 19413  011236  5CDE               	subwf	postinc2,w,c
 19414  011238  0E03               	movlw	3
 19415  01123A  58DE               	subwfb	postinc2,w,c
 19416  01123C  B0D8               	btfsc	status,0,c
 19417  01123E  0012               	return	
 19418                           
 19419                           ; BSR set to: 0
 19420  011240  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19421  011244  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19422  011248  2ADE               	incf	postinc2,f,c
 19423  01124A  0E00               	movlw	0
 19424  01124C  22DD               	addwfc	postdec2,f,c
 19425                           
 19426                           ; BSR set to: 0
 19427                           ;My_button.c: 14: } else {
 19428  01124E  0012               	return	
 19429  011250                     l8521:
 19430                           
 19431                           ; BSR set to: 0
 19432                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19433  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19434  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19435  011258  0E84               	movlw	132
 19436  01125A  5CDE               	subwf	postinc2,w,c
 19437  01125C  0E03               	movlw	3
 19438  01125E  58DE               	subwfb	postinc2,w,c
 19439  011260  A0D8               	btfss	status,0,c
 19440  011262  D00A               	goto	l8525
 19441                           
 19442                           ; BSR set to: 0
 19443  011264  0100               	movlb	0	; () banked
 19444  011266  EE20 F002          	lfsr	2,2
 19445  01126A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19446  01126C  26D9               	addwf	fsr2l,f,c
 19447  01126E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19448  011270  22DA               	addwfc	fsr2h,f,c
 19449  011272  0100               	movlb	0	; () banked
 19450  011274  8EDF               	bsf	indf2,7,c
 19451  011276  D08F               	goto	l8553
 19452  011278                     l8525:
 19453                           
 19454                           ; BSR set to: 0
 19455                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19456  011278  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19457  01127C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19458  011280  0EBC               	movlw	188
 19459  011282  5CDE               	subwf	postinc2,w,c
 19460  011284  0E02               	movlw	2
 19461  011286  58DE               	subwfb	postinc2,w,c
 19462  011288  A0D8               	btfss	status,0,c
 19463  01128A  D00A               	goto	l8529
 19464                           
 19465                           ; BSR set to: 0
 19466  01128C  0100               	movlb	0	; () banked
 19467  01128E  EE20 F002          	lfsr	2,2
 19468  011292  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19469  011294  26D9               	addwf	fsr2l,f,c
 19470  011296  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19471  011298  22DA               	addwfc	fsr2h,f,c
 19472  01129A  0100               	movlb	0	; () banked
 19473  01129C  8CDF               	bsf	indf2,6,c
 19474  01129E  D07B               	goto	l8553
 19475  0112A0                     l8529:
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19479  0112A0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19480  0112A4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19481  0112A8  0EF4               	movlw	244
 19482  0112AA  5CDE               	subwf	postinc2,w,c
 19483  0112AC  0E01               	movlw	1
 19484  0112AE  58DE               	subwfb	postinc2,w,c
 19485  0112B0  A0D8               	btfss	status,0,c
 19486  0112B2  D00A               	goto	l8533
 19487                           
 19488                           ; BSR set to: 0
 19489  0112B4  0100               	movlb	0	; () banked
 19490  0112B6  EE20 F002          	lfsr	2,2
 19491  0112BA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19492  0112BC  26D9               	addwf	fsr2l,f,c
 19493  0112BE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19494  0112C0  22DA               	addwfc	fsr2h,f,c
 19495  0112C2  0100               	movlb	0	; () banked
 19496  0112C4  8ADF               	bsf	indf2,5,c
 19497  0112C6  D067               	goto	l8553
 19498  0112C8                     l8533:
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19502  0112C8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19503  0112CC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19504  0112D0  0E2C               	movlw	44
 19505  0112D2  5CDE               	subwf	postinc2,w,c
 19506  0112D4  0E01               	movlw	1
 19507  0112D6  58DE               	subwfb	postinc2,w,c
 19508  0112D8  A0D8               	btfss	status,0,c
 19509  0112DA  D00A               	goto	l8537
 19510                           
 19511                           ; BSR set to: 0
 19512  0112DC  0100               	movlb	0	; () banked
 19513  0112DE  EE20 F002          	lfsr	2,2
 19514  0112E2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19515  0112E4  26D9               	addwf	fsr2l,f,c
 19516  0112E6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19517  0112E8  22DA               	addwfc	fsr2h,f,c
 19518  0112EA  0100               	movlb	0	; () banked
 19519  0112EC  88DF               	bsf	indf2,4,c
 19520  0112EE  D053               	goto	l8553
 19521  0112F0                     l8537:
 19522                           
 19523                           ; BSR set to: 0
 19524                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19525  0112F0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19526  0112F4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19527  0112F8  0E01               	movlw	1
 19528  0112FA  50DB               	movf	plusw2,w,c
 19529  0112FC  E104               	bnz	u8410
 19530  0112FE  0E96               	movlw	150
 19531  011300  5CDE               	subwf	postinc2,w,c
 19532  011302  A0D8               	btfss	status,0,c
 19533  011304  D00A               	goto	l8541
 19534  011306                     u8410:
 19535                           
 19536                           ; BSR set to: 0
 19537  011306  0100               	movlb	0	; () banked
 19538  011308  EE20 F002          	lfsr	2,2
 19539  01130C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19540  01130E  26D9               	addwf	fsr2l,f,c
 19541  011310  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19542  011312  22DA               	addwfc	fsr2h,f,c
 19543  011314  0100               	movlb	0	; () banked
 19544  011316  86DF               	bsf	indf2,3,c
 19545  011318  D03E               	goto	l8553
 19546  01131A                     l8541:
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19550  01131A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19551  01131E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19552  011322  0E01               	movlw	1
 19553  011324  50DB               	movf	plusw2,w,c
 19554  011326  E104               	bnz	u8420
 19555  011328  0E3C               	movlw	60
 19556  01132A  5CDE               	subwf	postinc2,w,c
 19557  01132C  A0D8               	btfss	status,0,c
 19558  01132E  D00A               	goto	l8545
 19559  011330                     u8420:
 19560                           
 19561                           ; BSR set to: 0
 19562  011330  0100               	movlb	0	; () banked
 19563  011332  EE20 F002          	lfsr	2,2
 19564  011336  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19565  011338  26D9               	addwf	fsr2l,f,c
 19566  01133A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19567  01133C  22DA               	addwfc	fsr2h,f,c
 19568  01133E  0100               	movlb	0	; () banked
 19569  011340  84DF               	bsf	indf2,2,c
 19570  011342  D029               	goto	l8553
 19571  011344                     l8545:
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19575  011344  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19576  011348  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19577  01134C  0E01               	movlw	1
 19578  01134E  50DB               	movf	plusw2,w,c
 19579  011350  E104               	bnz	u8430
 19580  011352  0E10               	movlw	16
 19581  011354  5CDE               	subwf	postinc2,w,c
 19582  011356  A0D8               	btfss	status,0,c
 19583  011358  D00A               	goto	l8549
 19584  01135A                     u8430:
 19585                           
 19586                           ; BSR set to: 0
 19587  01135A  0100               	movlb	0	; () banked
 19588  01135C  EE20 F002          	lfsr	2,2
 19589  011360  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19590  011362  26D9               	addwf	fsr2l,f,c
 19591  011364  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19592  011366  22DA               	addwfc	fsr2h,f,c
 19593  011368  0100               	movlb	0	; () banked
 19594  01136A  82DF               	bsf	indf2,1,c
 19595  01136C  D014               	goto	l8553
 19596  01136E                     l8549:
 19597                           
 19598                           ; BSR set to: 0
 19599                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19600  01136E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19601  011372  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19602  011376  0E01               	movlw	1
 19603  011378  50DB               	movf	plusw2,w,c
 19604  01137A  E104               	bnz	u8440
 19605  01137C  0E02               	movlw	2
 19606  01137E  5CDE               	subwf	postinc2,w,c
 19607  011380  A0D8               	btfss	status,0,c
 19608  011382  D009               	goto	l8553
 19609  011384                     u8440:
 19610                           
 19611                           ; BSR set to: 0
 19612  011384  0100               	movlb	0	; () banked
 19613  011386  EE20 F002          	lfsr	2,2
 19614  01138A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19615  01138C  26D9               	addwf	fsr2l,f,c
 19616  01138E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19617  011390  22DA               	addwfc	fsr2h,f,c
 19618  011392  0100               	movlb	0	; () banked
 19619  011394  80DF               	bsf	indf2,0,c
 19620  011396                     l8553:
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;My_button.c: 23: bt->cnt_sw = 0;
 19624  011396  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19625  01139A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19626  01139E  0E00               	movlw	0
 19627  0113A0  6EDE               	movwf	postinc2,c
 19628  0113A2  0E00               	movlw	0
 19629  0113A4  6EDD               	movwf	postdec2,c
 19630                           
 19631                           ; BSR set to: 0
 19632                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19633  0113A6  0100               	movlb	0	; () banked
 19634  0113A8  EE20 F002          	lfsr	2,2
 19635  0113AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19636  0113AE  26D9               	addwf	fsr2l,f,c
 19637  0113B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19638  0113B2  22DA               	addwfc	fsr2h,f,c
 19639  0113B4  0EFF               	movlw	255
 19640  0113B6  16DE               	andwf	postinc2,f,c
 19641  0113B8  0E00               	movlw	0
 19642  0113BA  16DD               	andwf	postdec2,f,c
 19643  0113BC  0012               	return	
 19644  0113BE                     __end_of_button_timer_interrupt:
 19645                           	opt stack 0
 19646                           tblptru	equ	0xFF8
 19647                           tblptrh	equ	0xFF7
 19648                           tblptrl	equ	0xFF6
 19649                           tablat	equ	0xFF5
 19650                           prodh	equ	0xFF4
 19651                           prodl	equ	0xFF3
 19652                           intcon	equ	0xFF2
 19653                           intcon2	equ	0xFF1
 19654                           indf0	equ	0xFEF
 19655                           postinc0	equ	0xFEE
 19656                           fsr0h	equ	0xFEA
 19657                           fsr0l	equ	0xFE9
 19658                           wreg	equ	0xFE8
 19659                           postinc1	equ	0xFE6
 19660                           postdec1	equ	0xFE5
 19661                           fsr1h	equ	0xFE2
 19662                           fsr1l	equ	0xFE1
 19663                           indf2	equ	0xFDF
 19664                           postinc2	equ	0xFDE
 19665                           postdec2	equ	0xFDD
 19666                           plusw2	equ	0xFDB
 19667                           fsr2h	equ	0xFDA
 19668                           fsr2l	equ	0xFD9
 19669                           status	equ	0xFD8
 19670                           
 19671 ;; *************** function ___lwdiv *****************
 19672 ;; Defined at:
 19673 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19674 ;; Parameters:    Size  Location     Type
 19675 ;;  dividend        2   28[BANK0 ] unsigned int 
 19676 ;;  divisor         2   30[BANK0 ] unsigned int 
 19677 ;; Auto vars:     Size  Location     Type
 19678 ;;  quotient        2   33[BANK0 ] unsigned int 
 19679 ;;  counter         1   32[BANK0 ] unsigned char 
 19680 ;; Return value:  Size  Location     Type
 19681 ;;                  2   28[BANK0 ] unsigned int 
 19682 ;; Registers used:
 19683 ;;		wreg, status,2, status,0
 19684 ;; Tracked objects:
 19685 ;;		On entry : 0/0
 19686 ;;		On exit  : 0/0
 19687 ;;		Unchanged: 0/0
 19688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19689 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19690 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19692 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19693 ;;Total ram usage:        7 bytes
 19694 ;; Hardware stack levels used:    1
 19695 ;; Hardware stack levels required when called:   12
 19696 ;; This function calls:
 19697 ;;		Nothing
 19698 ;; This function is called by:
 19699 ;;		_ringbuf_put_num
 19700 ;;		_data_out
 19701 ;;		_display_LCD
 19702 ;;		_ctmu_set_ratio
 19703 ;;		_ctmu_sampling
 19704 ;; This function uses a non-reentrant model
 19705 ;;
 19706                           
 19707                           	psect	text76
 19708  015F44                     __ptext76:
 19709                           	opt stack 0
 19710  015F44                     ___lwdiv:
 19711                           	opt stack 15
 19712                           
 19713                           ; BSR set to: 0
 19714                           ;incstack = 0
 19715  015F44  0E00               	movlw	0
 19716  015F46  0100               	movlb	0	; () banked
 19717  015F48  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19718  015F4A  0E00               	movlw	0
 19719  015F4C  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19720                           
 19721                           ; BSR set to: 0
 19722  015F4E  0100               	movlb	0	; () banked
 19723  015F50  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19724  015F52  0100               	movlb	0	; () banked
 19725  015F54  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19726  015F56  B4D8               	btfsc	status,2,c
 19727  015F58  D02C               	goto	l2471
 19728                           
 19729                           ; BSR set to: 0
 19730  015F5A  0E01               	movlw	1
 19731  015F5C  0100               	movlb	0	; () banked
 19732  015F5E  6F80               	movwf	___lwdiv@counter& (0+255),b
 19733  015F60  D006               	goto	l11507
 19734  015F62                     l11505:
 19735                           
 19736                           ; BSR set to: 0
 19737  015F62  0100               	movlb	0	; () banked
 19738  015F64  90D8               	bcf	status,0,c
 19739  015F66  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19740  015F68  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19741  015F6A  0100               	movlb	0	; () banked
 19742  015F6C  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19743  015F6E                     l11507:
 19744                           
 19745                           ; BSR set to: 0
 19746  015F6E  0100               	movlb	0	; () banked
 19747  015F70  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19748  015F72  D7F7               	goto	l11505
 19749  015F74                     l11509:
 19750                           
 19751                           ; BSR set to: 0
 19752  015F74  0100               	movlb	0	; () banked
 19753  015F76  90D8               	bcf	status,0,c
 19754  015F78  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19755  015F7A  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19756                           
 19757                           ; BSR set to: 0
 19758  015F7C  0100               	movlb	0	; () banked
 19759  015F7E  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19760  015F80  0100               	movlb	0	; () banked
 19761  015F82  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19762  015F84  0100               	movlb	0	; () banked
 19763  015F86  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19764  015F88  0100               	movlb	0	; () banked
 19765  015F8A  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19766  015F8C  A0D8               	btfss	status,0,c
 19767  015F8E  D00A               	goto	l11517
 19768                           
 19769                           ; BSR set to: 0
 19770  015F90  0100               	movlb	0	; () banked
 19771  015F92  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19772  015F94  0100               	movlb	0	; () banked
 19773  015F96  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19774  015F98  0100               	movlb	0	; () banked
 19775  015F9A  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19776  015F9C  0100               	movlb	0	; () banked
 19777  015F9E  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19778                           
 19779                           ; BSR set to: 0
 19780  015FA0  0100               	movlb	0	; () banked
 19781  015FA2  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19782  015FA4                     l11517:
 19783                           
 19784                           ; BSR set to: 0
 19785  015FA4  0100               	movlb	0	; () banked
 19786  015FA6  90D8               	bcf	status,0,c
 19787  015FA8  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19788  015FAA  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19789                           
 19790                           ; BSR set to: 0
 19791  015FAC  0100               	movlb	0	; () banked
 19792  015FAE  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19793  015FB0  D7E1               	goto	l11509
 19794  015FB2                     l2471:
 19795                           
 19796                           ; BSR set to: 0
 19797  015FB2  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19798  015FB6  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19799                           
 19800                           ; BSR set to: 0
 19801  015FBA  0012               	return		;funcret
 19802  015FBC                     __end_of___lwdiv:
 19803                           	opt stack 0
 19804                           tblptru	equ	0xFF8
 19805                           tblptrh	equ	0xFF7
 19806                           tblptrl	equ	0xFF6
 19807                           tablat	equ	0xFF5
 19808                           prodh	equ	0xFF4
 19809                           prodl	equ	0xFF3
 19810                           intcon	equ	0xFF2
 19811                           intcon2	equ	0xFF1
 19812                           indf0	equ	0xFEF
 19813                           postinc0	equ	0xFEE
 19814                           fsr0h	equ	0xFEA
 19815                           fsr0l	equ	0xFE9
 19816                           wreg	equ	0xFE8
 19817                           postinc1	equ	0xFE6
 19818                           postdec1	equ	0xFE5
 19819                           fsr1h	equ	0xFE2
 19820                           fsr1l	equ	0xFE1
 19821                           indf2	equ	0xFDF
 19822                           postinc2	equ	0xFDE
 19823                           postdec2	equ	0xFDD
 19824                           plusw2	equ	0xFDB
 19825                           fsr2h	equ	0xFDA
 19826                           fsr2l	equ	0xFD9
 19827                           status	equ	0xFD8
 19828                           
 19829 ;; *************** function _CTMU_read *****************
 19830 ;; Defined at:
 19831 ;;		line 184 in file "../My_library/My_PIC.c"
 19832 ;; Parameters:    Size  Location     Type
 19833 ;;  ch              1    wreg     unsigned char 
 19834 ;; Auto vars:     Size  Location     Type
 19835 ;;  ch              1   16[BANK0 ] unsigned char 
 19836 ;;  i               1   21[BANK0 ] unsigned char 
 19837 ;;  sum             4   17[BANK0 ] unsigned long 
 19838 ;; Return value:  Size  Location     Type
 19839 ;;                  2   13[BANK0 ] unsigned int 
 19840 ;; Registers used:
 19841 ;;		wreg, status,2, status,0, cstack
 19842 ;; Tracked objects:
 19843 ;;		On entry : 0/0
 19844 ;;		On exit  : 0/0
 19845 ;;		Unchanged: 0/0
 19846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19848 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19850 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19851 ;;Total ram usage:        9 bytes
 19852 ;; Hardware stack levels used:    1
 19853 ;; Hardware stack levels required when called:   13
 19854 ;; This function calls:
 19855 ;;		___lldiv
 19856 ;; This function is called by:
 19857 ;;		_ctmu_set_ratio
 19858 ;;		_ctmu_sampling
 19859 ;; This function uses a non-reentrant model
 19860 ;;
 19861                           
 19862                           	psect	text77
 19863  015462                     __ptext77:
 19864                           	opt stack 0
 19865  015462                     _CTMU_read:
 19866                           	opt stack 14
 19867                           
 19868                           ; BSR set to: 0
 19869                           ;incstack = 0
 19870                           ;CTMU_read@ch stored from wreg
 19871  015462  0100               	movlb	0	; () banked
 19872  015464  6F70               	movwf	CTMU_read@ch& (0+255),b
 19873                           
 19874                           ;My_PIC.c: 185: uint32_t sum = 0;
 19875  015466  0E00               	movlw	0
 19876  015468  0100               	movlb	0	; () banked
 19877  01546A  6F71               	movwf	CTMU_read@sum& (0+255),b
 19878  01546C  0E00               	movlw	0
 19879  01546E  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19880  015470  0E00               	movlw	0
 19881  015472  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19882  015474  0E00               	movlw	0
 19883  015476  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19884                           
 19885                           ;My_PIC.c: 186: for (uint8_t i = 0; i < 10; i++) {
 19886  015478  0E00               	movlw	0
 19887  01547A  0100               	movlb	0	; () banked
 19888  01547C  6F75               	movwf	CTMU_read@i& (0+255),b
 19889  01547E                     l11201:
 19890                           
 19891                           ; BSR set to: 0
 19892  01547E  0E09               	movlw	9
 19893  015480  0100               	movlb	0	; () banked
 19894  015482  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19895  015484  D001               	goto	l11205
 19896  015486  D02B               	goto	l11233
 19897  015488                     l11205:
 19898                           
 19899                           ; BSR set to: 0
 19900                           ;My_PIC.c: 187: ADCON0bits.CHS = ch;
 19901  015488  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19902  01548C  0100               	movlb	0	; () banked
 19903  01548E  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19904  015490  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19905  015492  50C2               	movf	4034,w,c	;volatile
 19906  015494  0100               	movlb	0	; () banked
 19907  015496  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19908  015498  0BC3               	andlw	-61
 19909  01549A  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19910  01549C  6EC2               	movwf	4034,c	;volatile
 19911                           
 19912                           ; BSR set to: 0
 19913                           ;My_PIC.c: 188: CTMUCONHbits.CTMUEN = 1;
 19914  01549E  8EB3               	bsf	4019,7,c	;volatile
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;My_PIC.c: 189: CTMUCONLbits.EDG1STAT = 0;
 19918  0154A0  90B2               	bcf	4018,0,c	;volatile
 19919                           
 19920                           ; BSR set to: 0
 19921                           ;My_PIC.c: 190: CTMUCONLbits.EDG2STAT = 0;
 19922  0154A2  92B2               	bcf	4018,1,c	;volatile
 19923                           
 19924                           ; BSR set to: 0
 19925                           ;My_PIC.c: 193: CTMUCONHbits.IDISSEN = 1;
 19926  0154A4  82B3               	bsf	4019,1,c	;volatile
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;My_PIC.c: 194: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19930  0154A6  0E50               	movlw	80
 19931  0154A8                     u15007:
 19932  0154A8  2EE8               	decfsz	wreg,f,c
 19933  0154AA  D7FE               	goto	u15007
 19934                           
 19935                           ;My_PIC.c: 195: CTMUCONHbits.IDISSEN = 0;
 19936  0154AC  92B3               	bcf	4019,1,c	;volatile
 19937                           
 19938                           ;My_PIC.c: 197: CTMUCONLbits.EDG1STAT = 1;
 19939  0154AE  80B2               	bsf	4018,0,c	;volatile
 19940                           
 19941                           ;My_PIC.c: 198: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19942  0154B0  0E14               	movlw	20
 19943  0154B2                     u15017:
 19944  0154B2  2EE8               	decfsz	wreg,f,c
 19945  0154B4  D7FE               	goto	u15017
 19946                           
 19947                           ;My_PIC.c: 199: CTMUCONLbits.EDG1STAT = 0;
 19948  0154B6  90B2               	bcf	4018,0,c	;volatile
 19949                           
 19950                           ;My_PIC.c: 201: PIR1bits.ADIF = 0;
 19951  0154B8  9C9E               	bcf	3998,6,c	;volatile
 19952                           
 19953                           ;My_PIC.c: 202: ADCON0bits.GO = 1;
 19954  0154BA  82C2               	bsf	4034,1,c	;volatile
 19955  0154BC                     l735:
 19956  0154BC  AC9E               	btfss	3998,6,c	;volatile
 19957  0154BE  D7FE               	goto	l735
 19958                           
 19959                           ;My_PIC.c: 204: sum += ADRES;
 19960  0154C0  50C3               	movf	4035,w,c	;volatile
 19961  0154C2  0100               	movlb	0	; () banked
 19962  0154C4  2771               	addwf	CTMU_read@sum& (0+255),f,b
 19963  0154C6  50C4               	movf	4036,w,c	;volatile
 19964  0154C8  0100               	movlb	0	; () banked
 19965  0154CA  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 19966  0154CC  0E00               	movlw	0
 19967  0154CE  0100               	movlb	0	; () banked
 19968  0154D0  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 19969  0154D2  0E00               	movlw	0
 19970  0154D4  0100               	movlb	0	; () banked
 19971  0154D6  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 19972  0154D8  0100               	movlb	0	; () banked
 19973  0154DA  2B75               	incf	CTMU_read@i& (0+255),f,b
 19974  0154DC  D7D0               	goto	l11201
 19975  0154DE                     l11233:
 19976                           
 19977                           ; BSR set to: 0
 19978                           ;My_PIC.c: 205: }
 19979                           ;My_PIC.c: 206: return sum / 10 / 4;
 19980  0154DE  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 19981  0154E2  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 19982  0154E6  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 19983  0154EA  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 19984  0154EE  0E0A               	movlw	10
 19985  0154F0  0100               	movlb	0	; () banked
 19986  0154F2  6F64               	movwf	___lldiv@divisor& (0+255),b
 19987  0154F4  0E00               	movlw	0
 19988  0154F6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 19989  0154F8  0E00               	movlw	0
 19990  0154FA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 19991  0154FC  0E00               	movlw	0
 19992  0154FE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 19993  015500  EC51  F0AB         	call	___lldiv	;wreg free
 19994  015504  0E03               	movlw	3
 19995  015506  D007               	goto	u12150
 19996  015508                     u12155:
 19997  015508  0100               	movlb	0	; () banked
 19998  01550A  90D8               	bcf	status,0,c
 19999  01550C  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 20000  01550E  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 20001  015510  0100               	movlb	0	; () banked
 20002  015512  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 20003  015514  3360               	rrcf	?___lldiv& (0+255),f,b
 20004  015516                     u12150:
 20005  015516  2EE8               	decfsz	wreg,f,c
 20006  015518  D7F7               	goto	u12155
 20007  01551A  C060  F06D         	movff	?___lldiv,?_CTMU_read
 20008  01551E  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 20009  015522  0012               	return	
 20010  015524                     __end_of_CTMU_read:
 20011                           	opt stack 0
 20012                           tblptru	equ	0xFF8
 20013                           tblptrh	equ	0xFF7
 20014                           tblptrl	equ	0xFF6
 20015                           tablat	equ	0xFF5
 20016                           prodh	equ	0xFF4
 20017                           prodl	equ	0xFF3
 20018                           intcon	equ	0xFF2
 20019                           intcon2	equ	0xFF1
 20020                           indf0	equ	0xFEF
 20021                           postinc0	equ	0xFEE
 20022                           fsr0h	equ	0xFEA
 20023                           fsr0l	equ	0xFE9
 20024                           wreg	equ	0xFE8
 20025                           postinc1	equ	0xFE6
 20026                           postdec1	equ	0xFE5
 20027                           fsr1h	equ	0xFE2
 20028                           fsr1l	equ	0xFE1
 20029                           indf2	equ	0xFDF
 20030                           postinc2	equ	0xFDE
 20031                           postdec2	equ	0xFDD
 20032                           plusw2	equ	0xFDB
 20033                           fsr2h	equ	0xFDA
 20034                           fsr2l	equ	0xFD9
 20035                           status	equ	0xFD8
 20036                           
 20037 ;; *************** function ___lldiv *****************
 20038 ;; Defined at:
 20039 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 20040 ;; Parameters:    Size  Location     Type
 20041 ;;  dividend        4    0[BANK0 ] unsigned long 
 20042 ;;  divisor         4    4[BANK0 ] unsigned long 
 20043 ;; Auto vars:     Size  Location     Type
 20044 ;;  quotient        4    8[BANK0 ] unsigned long 
 20045 ;;  counter         1   12[BANK0 ] unsigned char 
 20046 ;; Return value:  Size  Location     Type
 20047 ;;                  4    0[BANK0 ] unsigned long 
 20048 ;; Registers used:
 20049 ;;		wreg, status,2, status,0
 20050 ;; Tracked objects:
 20051 ;;		On entry : 0/0
 20052 ;;		On exit  : 0/0
 20053 ;;		Unchanged: 0/0
 20054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20055 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20056 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20058 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20059 ;;Total ram usage:       13 bytes
 20060 ;; Hardware stack levels used:    1
 20061 ;; Hardware stack levels required when called:   12
 20062 ;; This function calls:
 20063 ;;		Nothing
 20064 ;; This function is called by:
 20065 ;;		_CTMU_read
 20066 ;;		_get_quot_rem
 20067 ;;		_integrate_current
 20068 ;;		_display_LCD
 20069 ;;		_sprintf
 20070 ;; This function uses a non-reentrant model
 20071 ;;
 20072                           
 20073                           	psect	text78
 20074  0156A2                     __ptext78:
 20075                           	opt stack 0
 20076  0156A2                     ___lldiv:
 20077                           	opt stack 12
 20078                           
 20079                           ; BSR set to: 0
 20080                           ;incstack = 0
 20081  0156A2  0E00               	movlw	0
 20082  0156A4  0100               	movlb	0	; () banked
 20083  0156A6  6F68               	movwf	___lldiv@quotient& (0+255),b
 20084  0156A8  0E00               	movlw	0
 20085  0156AA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20086  0156AC  0E00               	movlw	0
 20087  0156AE  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20088  0156B0  0E00               	movlw	0
 20089  0156B2  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20090                           
 20091                           ; BSR set to: 0
 20092  0156B4  0100               	movlb	0	; () banked
 20093  0156B6  5164               	movf	___lldiv@divisor& (0+255),w,b
 20094  0156B8  0100               	movlb	0	; () banked
 20095  0156BA  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20096  0156BC  0100               	movlb	0	; () banked
 20097  0156BE  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20098  0156C0  0100               	movlb	0	; () banked
 20099  0156C2  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20100  0156C4  B4D8               	btfsc	status,2,c
 20101  0156C6  D042               	goto	l2418
 20102                           
 20103                           ; BSR set to: 0
 20104  0156C8  0E01               	movlw	1
 20105  0156CA  0100               	movlb	0	; () banked
 20106  0156CC  6F6C               	movwf	___lldiv@counter& (0+255),b
 20107  0156CE  D008               	goto	l10781
 20108  0156D0                     l10779:
 20109                           
 20110                           ; BSR set to: 0
 20111  0156D0  0100               	movlb	0	; () banked
 20112  0156D2  90D8               	bcf	status,0,c
 20113  0156D4  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20114  0156D6  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20115  0156D8  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20116  0156DA  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20117  0156DC  0100               	movlb	0	; () banked
 20118  0156DE  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20119  0156E0                     l10781:
 20120                           
 20121                           ; BSR set to: 0
 20122  0156E0  0100               	movlb	0	; () banked
 20123  0156E2  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20124  0156E4  D7F5               	goto	l10779
 20125  0156E6                     l10783:
 20126                           
 20127                           ; BSR set to: 0
 20128  0156E6  0100               	movlb	0	; () banked
 20129  0156E8  90D8               	bcf	status,0,c
 20130  0156EA  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20131  0156EC  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20132  0156EE  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20133  0156F0  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20134                           
 20135                           ; BSR set to: 0
 20136  0156F2  0100               	movlb	0	; () banked
 20137  0156F4  5164               	movf	___lldiv@divisor& (0+255),w,b
 20138  0156F6  0100               	movlb	0	; () banked
 20139  0156F8  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20140  0156FA  0100               	movlb	0	; () banked
 20141  0156FC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20142  0156FE  0100               	movlb	0	; () banked
 20143  015700  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20144  015702  0100               	movlb	0	; () banked
 20145  015704  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20146  015706  0100               	movlb	0	; () banked
 20147  015708  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20148  01570A  0100               	movlb	0	; () banked
 20149  01570C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20150  01570E  0100               	movlb	0	; () banked
 20151  015710  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20152  015712  A0D8               	btfss	status,0,c
 20153  015714  D012               	goto	l10791
 20154                           
 20155                           ; BSR set to: 0
 20156  015716  0100               	movlb	0	; () banked
 20157  015718  5164               	movf	___lldiv@divisor& (0+255),w,b
 20158  01571A  0100               	movlb	0	; () banked
 20159  01571C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20160  01571E  0100               	movlb	0	; () banked
 20161  015720  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20162  015722  0100               	movlb	0	; () banked
 20163  015724  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20164  015726  0100               	movlb	0	; () banked
 20165  015728  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20166  01572A  0100               	movlb	0	; () banked
 20167  01572C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20168  01572E  0100               	movlb	0	; () banked
 20169  015730  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20170  015732  0100               	movlb	0	; () banked
 20171  015734  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20172                           
 20173                           ; BSR set to: 0
 20174  015736  0100               	movlb	0	; () banked
 20175  015738  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20176  01573A                     l10791:
 20177                           
 20178                           ; BSR set to: 0
 20179  01573A  0100               	movlb	0	; () banked
 20180  01573C  90D8               	bcf	status,0,c
 20181  01573E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20182  015740  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20183  015742  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20184  015744  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20185                           
 20186                           ; BSR set to: 0
 20187  015746  0100               	movlb	0	; () banked
 20188  015748  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20189  01574A  D7CD               	goto	l10783
 20190  01574C                     l2418:
 20191                           
 20192                           ; BSR set to: 0
 20193  01574C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20194  015750  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20195  015754  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20196  015758  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20197                           
 20198                           ; BSR set to: 0
 20199  01575C  0012               	return		;funcret
 20200  01575E                     __end_of___lldiv:
 20201                           	opt stack 0
 20202                           tblptru	equ	0xFF8
 20203                           tblptrh	equ	0xFF7
 20204                           tblptrl	equ	0xFF6
 20205                           tablat	equ	0xFF5
 20206                           prodh	equ	0xFF4
 20207                           prodl	equ	0xFF3
 20208                           intcon	equ	0xFF2
 20209                           intcon2	equ	0xFF1
 20210                           indf0	equ	0xFEF
 20211                           postinc0	equ	0xFEE
 20212                           fsr0h	equ	0xFEA
 20213                           fsr0l	equ	0xFE9
 20214                           wreg	equ	0xFE8
 20215                           postinc1	equ	0xFE6
 20216                           postdec1	equ	0xFE5
 20217                           fsr1h	equ	0xFE2
 20218                           fsr1l	equ	0xFE1
 20219                           indf2	equ	0xFDF
 20220                           postinc2	equ	0xFDE
 20221                           postdec2	equ	0xFDD
 20222                           plusw2	equ	0xFDB
 20223                           fsr2h	equ	0xFDA
 20224                           fsr2l	equ	0xFD9
 20225                           status	equ	0xFD8
 20226                           
 20227 ;; *************** function _USB_CDC_task *****************
 20228 ;; Defined at:
 20229 ;;		line 39 in file "../My_library/My_usb_cdc.c"
 20230 ;; Parameters:    Size  Location     Type
 20231 ;;		None
 20232 ;; Auto vars:     Size  Location     Type
 20233 ;;  i               2   16[BANK0 ] unsigned int 
 20234 ;;  length          2   18[BANK0 ] unsigned int 
 20235 ;; Return value:  Size  Location     Type
 20236 ;;		None               void
 20237 ;; Registers used:
 20238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20239 ;; Tracked objects:
 20240 ;;		On entry : 0/0
 20241 ;;		On exit  : 0/0
 20242 ;;		Unchanged: 0/0
 20243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20245 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20246 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20247 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20248 ;;Total ram usage:        5 bytes
 20249 ;; Hardware stack levels used:    1
 20250 ;; Hardware stack levels required when called:   15
 20251 ;; This function calls:
 20252 ;;		_USB_CDC_get
 20253 ;;		_USB_CDC_send
 20254 ;;		_ringbuf_num
 20255 ;;		_ringbuf_pop
 20256 ;;		_ringbuf_put
 20257 ;; This function is called by:
 20258 ;;		_main
 20259 ;; This function uses a non-reentrant model
 20260 ;;
 20261                           
 20262                           	psect	text79
 20263  0140B8                     __ptext79:
 20264                           	opt stack 0
 20265  0140B8                     _USB_CDC_task:
 20266                           	opt stack 15
 20267                           
 20268                           ;My_usb_cdc.c: 60: if (USBDeviceState < CONFIGURED_STATE) {
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;incstack = 0
 20272  0140B8  0E20               	movlw	32
 20273  0140BA  6013               	cpfslt	_USBDeviceState,c	;volatile
 20274  0140BC  D001               	goto	l1375
 20275  0140BE  0012               	return	
 20276  0140C0                     l1375:
 20277                           
 20278                           ;My_usb_cdc.c: 63: }
 20279                           ;My_usb_cdc.c: 69: if (UCONbits.SUSPND == 1) {
 20280  0140C0  B265               	btfsc	3941,1,c	;volatile
 20281  0140C2  0012               	return	
 20282                           
 20283                           ;My_usb_cdc.c: 72: }
 20284                           ;My_usb_cdc.c: 75: uint16_t length = 0;
 20285                           
 20286                           ;My_usb_cdc.c: 71: return;
 20287  0140C4  0E00               	movlw	0
 20288  0140C6  0100               	movlb	0	; () banked
 20289  0140C8  6F73               	movwf	(USB_CDC_task@length+1)& (0+255),b
 20290  0140CA  0E00               	movlw	0
 20291  0140CC  6F72               	movwf	USB_CDC_task@length& (0+255),b
 20292                           
 20293                           ;My_usb_cdc.c: 76: while (ringbuf_num(&usb_tx)) {
 20294  0140CE  D01F               	goto	l12837
 20295  0140D0                     l12829:
 20296                           
 20297                           ; BSR set to: 0
 20298                           ;My_usb_cdc.c: 77: writeBuffer[length++] = ringbuf_pop(&usb_tx);
 20299  0140D0  0EC6               	movlw	low _usb_tx
 20300  0140D2  0100               	movlb	0	; () banked
 20301  0140D4  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20302  0140D6  0E02               	movlw	high _usb_tx
 20303  0140D8  0100               	movlb	0	; () banked
 20304  0140DA  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20305  0140DC  ECA3  F0A8         	call	_ringbuf_pop	;wreg free
 20306  0140E0  0100               	movlb	0	; () banked
 20307  0140E2  6F6F               	movwf	??_USB_CDC_task& (0+255),b
 20308  0140E4  0EC0               	movlw	low _writeBuffer
 20309  0140E6  0100               	movlb	0	; () banked
 20310  0140E8  2572               	addwf	USB_CDC_task@length& (0+255),w,b
 20311  0140EA  6ED9               	movwf	fsr2l,c
 20312  0140EC  0E03               	movlw	high _writeBuffer
 20313  0140EE  0100               	movlb	0	; () banked
 20314  0140F0  2173               	addwfc	(USB_CDC_task@length+1)& (0+255),w,b
 20315  0140F2  6EDA               	movwf	fsr2h,c
 20316  0140F4  C06F  FFDF         	movff	??_USB_CDC_task,indf2
 20317                           
 20318                           ; BSR set to: 0
 20319  0140F8  0100               	movlb	0	; () banked
 20320  0140FA  4B72               	infsnz	USB_CDC_task@length& (0+255),f,b
 20321  0140FC  2B73               	incf	(USB_CDC_task@length+1)& (0+255),f,b
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;My_usb_cdc.c: 78: if (length >= 64) {
 20325  0140FE  0100               	movlb	0	; () banked
 20326  014100  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
 20327  014102  E113               	bnz	l12839
 20328  014104  0E40               	movlw	64
 20329  014106  0100               	movlb	0	; () banked
 20330  014108  5D72               	subwf	USB_CDC_task@length& (0+255),w,b
 20331  01410A  B0D8               	btfsc	status,0,c
 20332  01410C  D00E               	goto	l12839
 20333  01410E                     l12837:
 20334                           
 20335                           ; BSR set to: 0
 20336  01410E  0EC6               	movlw	low _usb_tx
 20337  014110  0100               	movlb	0	; () banked
 20338  014112  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20339  014114  0E02               	movlw	high _usb_tx
 20340  014116  0100               	movlb	0	; () banked
 20341  014118  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20342  01411A  EC43  F0A2         	call	_ringbuf_num	;wreg free
 20343  01411E  0100               	movlb	0	; () banked
 20344  014120  5160               	movf	?_ringbuf_num& (0+255),w,b
 20345  014122  0100               	movlb	0	; () banked
 20346  014124  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20347  014126  A4D8               	btfss	status,2,c
 20348  014128  D7D3               	goto	l12829
 20349  01412A                     l12839:
 20350                           
 20351                           ; BSR set to: 0
 20352                           ;My_usb_cdc.c: 80: }
 20353                           ;My_usb_cdc.c: 81: }
 20354                           ;My_usb_cdc.c: 82: if (length) {
 20355  01412A  0100               	movlb	0	; () banked
 20356  01412C  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20357  01412E  0100               	movlb	0	; () banked
 20358  014130  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
 20359  014132  B4D8               	btfsc	status,2,c
 20360  014134  D006               	goto	l1382
 20361                           
 20362                           ; BSR set to: 0
 20363                           ;My_usb_cdc.c: 83: USB_CDC_send(length);
 20364  014136  C072  F06C         	movff	USB_CDC_task@length,USB_CDC_send@length
 20365  01413A  C073  F06D         	movff	USB_CDC_task@length+1,USB_CDC_send@length+1
 20366  01413E  ECF8  F0B6         	call	_USB_CDC_send	;wreg free
 20367  014142                     l1382:
 20368                           
 20369                           ;My_usb_cdc.c: 84: }
 20370                           ;My_usb_cdc.c: 86: length = USB_CDC_get();
 20371  014142  EC5D  F0B6         	call	_USB_CDC_get	;wreg free
 20372  014146  0100               	movlb	0	; () banked
 20373  014148  6F6F               	movwf	??_USB_CDC_task& (0+255),b
 20374  01414A  0100               	movlb	0	; () banked
 20375  01414C  516F               	movf	??_USB_CDC_task& (0+255),w,b
 20376  01414E  0100               	movlb	0	; () banked
 20377  014150  6F72               	movwf	USB_CDC_task@length& (0+255),b
 20378  014152  6B73               	clrf	(USB_CDC_task@length+1)& (0+255),b
 20379                           
 20380                           ; BSR set to: 0
 20381                           ;My_usb_cdc.c: 87: if (length) {
 20382  014154  0100               	movlb	0	; () banked
 20383  014156  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20384  014158  0100               	movlb	0	; () banked
 20385  01415A  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
 20386  01415C  B4D8               	btfsc	status,2,c
 20387  01415E  0012               	return	
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;My_usb_cdc.c: 88: for (uint16_t i = 0; i < length; i++) {
 20391  014160  0E00               	movlw	0
 20392  014162  0100               	movlb	0	; () banked
 20393  014164  6F71               	movwf	(USB_CDC_task@i+1)& (0+255),b
 20394  014166  0E00               	movlw	0
 20395  014168  6F70               	movwf	USB_CDC_task@i& (0+255),b
 20396  01416A  D016               	goto	l12851
 20397  01416C                     l12847:
 20398                           
 20399                           ; BSR set to: 0
 20400                           ;My_usb_cdc.c: 89: ringbuf_put(&usb_rx, readBuffer[i]);
 20401  01416C  0EBE               	movlw	low _usb_rx
 20402  01416E  0100               	movlb	0	; () banked
 20403  014170  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20404  014172  0E02               	movlw	high _usb_rx
 20405  014174  0100               	movlb	0	; () banked
 20406  014176  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20407  014178  0E80               	movlw	low _readBuffer
 20408  01417A  0100               	movlb	0	; () banked
 20409  01417C  2570               	addwf	USB_CDC_task@i& (0+255),w,b
 20410  01417E  6ED9               	movwf	fsr2l,c
 20411  014180  0E03               	movlw	high _readBuffer
 20412  014182  0100               	movlb	0	; () banked
 20413  014184  2171               	addwfc	(USB_CDC_task@i+1)& (0+255),w,b
 20414  014186  6EDA               	movwf	fsr2h,c
 20415  014188  50DF               	movf	indf2,w,c
 20416  01418A  0100               	movlb	0	; () banked
 20417  01418C  6F6A               	movwf	ringbuf_put@data& (0+255),b
 20418  01418E  EC99  F0A6         	call	_ringbuf_put	;wreg free
 20419  014192  0100               	movlb	0	; () banked
 20420  014194  4B70               	infsnz	USB_CDC_task@i& (0+255),f,b
 20421  014196  2B71               	incf	(USB_CDC_task@i+1)& (0+255),f,b
 20422  014198                     l12851:
 20423                           
 20424                           ; BSR set to: 0
 20425  014198  0100               	movlb	0	; () banked
 20426  01419A  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20427  01419C  0100               	movlb	0	; () banked
 20428  01419E  5D70               	subwf	USB_CDC_task@i& (0+255),w,b
 20429  0141A0  0100               	movlb	0	; () banked
 20430  0141A2  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
 20431  0141A4  0100               	movlb	0	; () banked
 20432  0141A6  5971               	subwfb	(USB_CDC_task@i+1)& (0+255),w,b
 20433  0141A8  B0D8               	btfsc	status,0,c
 20434  0141AA  0012               	return	
 20435  0141AC  D7DF               	goto	l12847
 20436  0141AE                     __end_of_USB_CDC_task:
 20437                           	opt stack 0
 20438                           tblptru	equ	0xFF8
 20439                           tblptrh	equ	0xFF7
 20440                           tblptrl	equ	0xFF6
 20441                           tablat	equ	0xFF5
 20442                           prodh	equ	0xFF4
 20443                           prodl	equ	0xFF3
 20444                           intcon	equ	0xFF2
 20445                           intcon2	equ	0xFF1
 20446                           indf0	equ	0xFEF
 20447                           postinc0	equ	0xFEE
 20448                           fsr0h	equ	0xFEA
 20449                           fsr0l	equ	0xFE9
 20450                           wreg	equ	0xFE8
 20451                           postinc1	equ	0xFE6
 20452                           postdec1	equ	0xFE5
 20453                           fsr1h	equ	0xFE2
 20454                           fsr1l	equ	0xFE1
 20455                           indf2	equ	0xFDF
 20456                           postinc2	equ	0xFDE
 20457                           postdec2	equ	0xFDD
 20458                           plusw2	equ	0xFDB
 20459                           fsr2h	equ	0xFDA
 20460                           fsr2l	equ	0xFD9
 20461                           status	equ	0xFD8
 20462                           
 20463 ;; *************** function _ringbuf_put *****************
 20464 ;; Defined at:
 20465 ;;		line 20 in file "../My_library/My_ringbuf.c"
 20466 ;; Parameters:    Size  Location     Type
 20467 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20468 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), terminal_task@command(8), 
 20469 ;;		 -> lcd_tx(8), 
 20470 ;;  data            1   10[BANK0 ] unsigned char 
 20471 ;; Auto vars:     Size  Location     Type
 20472 ;;		None
 20473 ;; Return value:  Size  Location     Type
 20474 ;;		None               void
 20475 ;; Registers used:
 20476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20477 ;; Tracked objects:
 20478 ;;		On entry : 0/0
 20479 ;;		On exit  : 0/0
 20480 ;;		Unchanged: 0/0
 20481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20482 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20484 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20485 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20486 ;;Total ram usage:        7 bytes
 20487 ;; Hardware stack levels used:    1
 20488 ;; Hardware stack levels required when called:   13
 20489 ;; This function calls:
 20490 ;;		_ringbuf_num
 20491 ;; This function is called by:
 20492 ;;		_ringbuf_put_num
 20493 ;;		_ringbuf_put_str
 20494 ;;		_ST7032_command
 20495 ;;		_ST7032_put
 20496 ;;		_ST7032_init
 20497 ;;		_terminal_task
 20498 ;;		_USB_CDC_task
 20499 ;;		_ST7032_create_char
 20500 ;;		_UART_ISR
 20501 ;; This function uses a non-reentrant model
 20502 ;;
 20503                           
 20504                           	psect	text80
 20505  014D32                     __ptext80:
 20506                           	opt stack 0
 20507  014D32                     _ringbuf_put:
 20508                           	opt stack 12
 20509                           
 20510                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20511                           
 20512                           ;incstack = 0
 20513  014D32  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20514  014D36  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20515  014D3A  EC43  F0A2         	call	_ringbuf_num	;wreg free
 20516  014D3E  0100               	movlb	0	; () banked
 20517  014D40  EE20 F002          	lfsr	2,2
 20518  014D44  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20519  014D46  26D9               	addwf	fsr2l,f,c
 20520  014D48  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20521  014D4A  22DA               	addwfc	fsr2h,f,c
 20522  014D4C  50DE               	movf	postinc2,w,c
 20523  014D4E  0100               	movlb	0	; () banked
 20524  014D50  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20525  014D52  50DE               	movf	postinc2,w,c
 20526  014D54  0100               	movlb	0	; () banked
 20527  014D56  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20528  014D58  B0D8               	btfsc	status,0,c
 20529  014D5A  0012               	return	
 20530                           
 20531                           ; BSR set to: 0
 20532                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
 20533  014D5C  0100               	movlb	0	; () banked
 20534  014D5E  EE20 F004          	lfsr	2,4
 20535  014D62  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20536  014D64  26D9               	addwf	fsr2l,f,c
 20537  014D66  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20538  014D68  22DA               	addwfc	fsr2h,f,c
 20539  014D6A  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20540  014D6E  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20541  014D72  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20542  014D76  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20543  014D7A  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20544  014D7E  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20545  014D82  0100               	movlb	0	; () banked
 20546  014D84  516B               	movf	??_ringbuf_put& (0+255),w,b
 20547  014D86  0100               	movlb	0	; () banked
 20548  014D88  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20549  014D8A  6ED9               	movwf	fsr2l,c
 20550  014D8C  0100               	movlb	0	; () banked
 20551  014D8E  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20552  014D90  0100               	movlb	0	; () banked
 20553  014D92  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20554  014D94  6EDA               	movwf	fsr2h,c
 20555  014D96  C06A  FFDF         	movff	ringbuf_put@data,indf2
 20556                           
 20557                           ; BSR set to: 0
 20558                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20559  014D9A  0100               	movlb	0	; () banked
 20560  014D9C  EE20 F002          	lfsr	2,2
 20561  014DA0  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20562  014DA2  26D9               	addwf	fsr2l,f,c
 20563  014DA4  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20564  014DA6  22DA               	addwfc	fsr2h,f,c
 20565  014DA8  0100               	movlb	0	; () banked
 20566  014DAA  EE10 F004          	lfsr	1,4
 20567  014DAE  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20568  014DB0  26E1               	addwf	fsr1l,f,c
 20569  014DB2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20570  014DB4  22E2               	addwfc	fsr1h,f,c
 20571  014DB6  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20572  014DBA  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20573  014DBE  0E01               	movlw	1
 20574  014DC0  0100               	movlb	0	; () banked
 20575  014DC2  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20576  014DC4  0E00               	movlw	0
 20577  014DC6  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20578  014DC8  50DE               	movf	postinc2,w,c
 20579  014DCA  0100               	movlb	0	; () banked
 20580  014DCC  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20581  014DCE  50DE               	movf	postinc2,w,c
 20582  014DD0  0100               	movlb	0	; () banked
 20583  014DD2  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20584  014DD4  B0D8               	btfsc	status,0,c
 20585  014DD6  D00B               	goto	l10803
 20586                           
 20587                           ; BSR set to: 0
 20588  014DD8  0100               	movlb	0	; () banked
 20589  014DDA  EE20 F004          	lfsr	2,4
 20590  014DDE  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20591  014DE0  26D9               	addwf	fsr2l,f,c
 20592  014DE2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20593  014DE4  22DA               	addwfc	fsr2h,f,c
 20594  014DE6  2ADE               	incf	postinc2,f,c
 20595  014DE8  0E00               	movlw	0
 20596  014DEA  22DD               	addwfc	postdec2,f,c
 20597  014DEC  0012               	return	
 20598  014DEE                     l10803:
 20599                           
 20600                           ; BSR set to: 0
 20601                           ;My_ringbuf.c: 24: else rb->head = 0;
 20602  014DEE  0100               	movlb	0	; () banked
 20603  014DF0  EE20 F004          	lfsr	2,4
 20604  014DF4  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20605  014DF6  26D9               	addwf	fsr2l,f,c
 20606  014DF8  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20607  014DFA  22DA               	addwfc	fsr2h,f,c
 20608  014DFC  0E00               	movlw	0
 20609  014DFE  6EDE               	movwf	postinc2,c
 20610  014E00  0E00               	movlw	0
 20611  014E02  6EDD               	movwf	postdec2,c
 20612                           
 20613                           ; BSR set to: 0
 20614  014E04  0012               	return	
 20615  014E06                     __end_of_ringbuf_put:
 20616                           	opt stack 0
 20617                           tblptru	equ	0xFF8
 20618                           tblptrh	equ	0xFF7
 20619                           tblptrl	equ	0xFF6
 20620                           tablat	equ	0xFF5
 20621                           prodh	equ	0xFF4
 20622                           prodl	equ	0xFF3
 20623                           intcon	equ	0xFF2
 20624                           intcon2	equ	0xFF1
 20625                           indf0	equ	0xFEF
 20626                           postinc0	equ	0xFEE
 20627                           fsr0h	equ	0xFEA
 20628                           fsr0l	equ	0xFE9
 20629                           wreg	equ	0xFE8
 20630                           postinc1	equ	0xFE6
 20631                           postdec1	equ	0xFE5
 20632                           fsr1h	equ	0xFE2
 20633                           fsr1l	equ	0xFE1
 20634                           indf2	equ	0xFDF
 20635                           postinc2	equ	0xFDE
 20636                           postdec2	equ	0xFDD
 20637                           plusw2	equ	0xFDB
 20638                           fsr2h	equ	0xFDA
 20639                           fsr2l	equ	0xFD9
 20640                           status	equ	0xFD8
 20641                           
 20642 ;; *************** function _USB_CDC_send *****************
 20643 ;; Defined at:
 20644 ;;		line 94 in file "../My_library/My_usb_cdc.c"
 20645 ;; Parameters:    Size  Location     Type
 20646 ;;  length          2   12[BANK0 ] unsigned int 
 20647 ;; Auto vars:     Size  Location     Type
 20648 ;;		None
 20649 ;; Return value:  Size  Location     Type
 20650 ;;		None               void
 20651 ;; Registers used:
 20652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20653 ;; Tracked objects:
 20654 ;;		On entry : 0/0
 20655 ;;		On exit  : 0/0
 20656 ;;		Unchanged: 0/0
 20657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20658 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20662 ;;Total ram usage:        2 bytes
 20663 ;; Hardware stack levels used:    1
 20664 ;; Hardware stack levels required when called:   14
 20665 ;; This function calls:
 20666 ;;		_CDCTxService
 20667 ;;		_putUSBUSART
 20668 ;; This function is called by:
 20669 ;;		_USB_CDC_task
 20670 ;; This function uses a non-reentrant model
 20671 ;;
 20672                           
 20673                           	psect	text81
 20674  016DF0                     __ptext81:
 20675                           	opt stack 0
 20676  016DF0                     _USB_CDC_send:
 20677                           	opt stack 15
 20678                           
 20679                           ;My_usb_cdc.c: 95: if ((cdc_trf_state == 0) == 1) {
 20680                           
 20681                           ; BSR set to: 0
 20682                           ;incstack = 0
 20683  016DF0  5019               	movf	_cdc_trf_state,w,c
 20684  016DF2  A4D8               	btfss	status,2,c
 20685  016DF4  D00A               	goto	l12403
 20686                           
 20687                           ;My_usb_cdc.c: 96: putUSBUSART(writeBuffer, length);
 20688  016DF6  0EC0               	movlw	low _writeBuffer
 20689  016DF8  0100               	movlb	0	; () banked
 20690  016DFA  6F60               	movwf	putUSBUSART@data& (0+255),b
 20691  016DFC  0E03               	movlw	high _writeBuffer
 20692  016DFE  0100               	movlb	0	; () banked
 20693  016E00  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 20694  016E02  C06C  F062         	movff	USB_CDC_send@length,putUSBUSART@length
 20695  016E06  EC08  F0B7         	call	_putUSBUSART	;wreg free
 20696  016E0A                     l12403:
 20697                           
 20698                           ;My_usb_cdc.c: 97: }
 20699                           ;My_usb_cdc.c: 98: CDCTxService();
 20700  016E0A  ECDA  F097         	call	_CDCTxService	;wreg free
 20701  016E0E  0012               	return		;funcret
 20702  016E10                     __end_of_USB_CDC_send:
 20703                           	opt stack 0
 20704                           tblptru	equ	0xFF8
 20705                           tblptrh	equ	0xFF7
 20706                           tblptrl	equ	0xFF6
 20707                           tablat	equ	0xFF5
 20708                           prodh	equ	0xFF4
 20709                           prodl	equ	0xFF3
 20710                           intcon	equ	0xFF2
 20711                           intcon2	equ	0xFF1
 20712                           indf0	equ	0xFEF
 20713                           postinc0	equ	0xFEE
 20714                           fsr0h	equ	0xFEA
 20715                           fsr0l	equ	0xFE9
 20716                           wreg	equ	0xFE8
 20717                           postinc1	equ	0xFE6
 20718                           postdec1	equ	0xFE5
 20719                           fsr1h	equ	0xFE2
 20720                           fsr1l	equ	0xFE1
 20721                           indf2	equ	0xFDF
 20722                           postinc2	equ	0xFDE
 20723                           postdec2	equ	0xFDD
 20724                           plusw2	equ	0xFDB
 20725                           fsr2h	equ	0xFDA
 20726                           fsr2l	equ	0xFD9
 20727                           status	equ	0xFD8
 20728                           
 20729 ;; *************** function _putUSBUSART *****************
 20730 ;; Defined at:
 20731 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20734 ;;		 -> writeBuffer(64), 
 20735 ;;  length          1    2[BANK0 ] unsigned char 
 20736 ;; Auto vars:     Size  Location     Type
 20737 ;;		None
 20738 ;; Return value:  Size  Location     Type
 20739 ;;		None               void
 20740 ;; Registers used:
 20741 ;;		wreg, status,2, status,0
 20742 ;; Tracked objects:
 20743 ;;		On entry : 0/0
 20744 ;;		On exit  : 0/0
 20745 ;;		Unchanged: 0/0
 20746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20747 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20750 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20751 ;;Total ram usage:        3 bytes
 20752 ;; Hardware stack levels used:    1
 20753 ;; Hardware stack levels required when called:   12
 20754 ;; This function calls:
 20755 ;;		Nothing
 20756 ;; This function is called by:
 20757 ;;		_USB_CDC_send
 20758 ;; This function uses a non-reentrant model
 20759 ;;
 20760                           
 20761                           	psect	text82
 20762  016E10                     __ptext82:
 20763                           	opt stack 0
 20764  016E10                     _putUSBUSART:
 20765                           	opt stack 16
 20766                           
 20767                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 20768                           
 20769                           ;incstack = 0
 20770  016E10  98A0               	bcf	4000,4,c	;volatile
 20771                           
 20772                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 20773  016E12  5019               	movf	_cdc_trf_state,w,c
 20774  016E14  A4D8               	btfss	status,2,c
 20775  016E16  D00A               	goto	l11643
 20776                           
 20777                           ;usb_device_cdc.c: 640: {
 20778                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20779  016E18  C060  F109         	movff	putUSBUSART@data,_pCDCSrc
 20780  016E1C  C061  F10A         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20781  016E20  C062  F01A         	movff	putUSBUSART@length,_cdc_tx_len
 20782  016E24  0E01               	movlw	1
 20783  016E26  6E17               	movwf	_cdc_mem_type,c
 20784  016E28  0E01               	movlw	1
 20785  016E2A  6E19               	movwf	_cdc_trf_state,c
 20786  016E2C                     l11643:
 20787                           
 20788                           ;usb_device_cdc.c: 642: }
 20789                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 20790  016E2C  88A0               	bsf	4000,4,c	;volatile
 20791  016E2E  0012               	return		;funcret
 20792  016E30                     __end_of_putUSBUSART:
 20793                           	opt stack 0
 20794                           tblptru	equ	0xFF8
 20795                           tblptrh	equ	0xFF7
 20796                           tblptrl	equ	0xFF6
 20797                           tablat	equ	0xFF5
 20798                           prodh	equ	0xFF4
 20799                           prodl	equ	0xFF3
 20800                           intcon	equ	0xFF2
 20801                           intcon2	equ	0xFF1
 20802                           indf0	equ	0xFEF
 20803                           postinc0	equ	0xFEE
 20804                           fsr0h	equ	0xFEA
 20805                           fsr0l	equ	0xFE9
 20806                           wreg	equ	0xFE8
 20807                           postinc1	equ	0xFE6
 20808                           postdec1	equ	0xFE5
 20809                           fsr1h	equ	0xFE2
 20810                           fsr1l	equ	0xFE1
 20811                           indf2	equ	0xFDF
 20812                           postinc2	equ	0xFDE
 20813                           postdec2	equ	0xFDD
 20814                           plusw2	equ	0xFDB
 20815                           fsr2h	equ	0xFDA
 20816                           fsr2l	equ	0xFD9
 20817                           status	equ	0xFD8
 20818                           
 20819 ;; *************** function _USB_CDC_get *****************
 20820 ;; Defined at:
 20821 ;;		line 101 in file "../My_library/My_usb_cdc.c"
 20822 ;; Parameters:    Size  Location     Type
 20823 ;;		None
 20824 ;; Auto vars:     Size  Location     Type
 20825 ;;  numBytesRead    1   13[BANK0 ] unsigned char 
 20826 ;; Return value:  Size  Location     Type
 20827 ;;                  1    wreg      unsigned char 
 20828 ;; Registers used:
 20829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20830 ;; Tracked objects:
 20831 ;;		On entry : 0/0
 20832 ;;		On exit  : 0/0
 20833 ;;		Unchanged: 0/0
 20834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20839 ;;Total ram usage:        1 bytes
 20840 ;; Hardware stack levels used:    1
 20841 ;; Hardware stack levels required when called:   14
 20842 ;; This function calls:
 20843 ;;		_CDCTxService
 20844 ;;		_getsUSBUSART
 20845 ;; This function is called by:
 20846 ;;		_USB_CDC_task
 20847 ;; This function uses a non-reentrant model
 20848 ;;
 20849                           
 20850                           	psect	text83
 20851  016CBA                     __ptext83:
 20852                           	opt stack 0
 20853  016CBA                     _USB_CDC_get:
 20854                           	opt stack 15
 20855                           
 20856                           ;My_usb_cdc.c: 102: uint8_t numBytesRead;
 20857                           ;My_usb_cdc.c: 103: if ((cdc_trf_state == 0) == 1) {
 20858                           
 20859                           ;incstack = 0
 20860  016CBA  5019               	movf	_cdc_trf_state,w,c
 20861  016CBC  A4D8               	btfss	status,2,c
 20862  016CBE  D00D               	goto	l1393
 20863                           
 20864                           ;My_usb_cdc.c: 104: numBytesRead = getsUSBUSART(readBuffer, sizeof (readBuffer));
 20865  016CC0  0E80               	movlw	low _readBuffer
 20866  016CC2  0100               	movlb	0	; () banked
 20867  016CC4  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 20868  016CC6  0E03               	movlw	high _readBuffer
 20869  016CC8  0100               	movlb	0	; () banked
 20870  016CCA  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 20871  016CCC  0E40               	movlw	64
 20872  016CCE  0100               	movlb	0	; () banked
 20873  016CD0  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20874  016CD2  EC6C  F0A7         	call	_getsUSBUSART	;wreg free
 20875  016CD6  0100               	movlb	0	; () banked
 20876  016CD8  6F6D               	movwf	USB_CDC_get@numBytesRead& (0+255),b
 20877  016CDA                     l1393:
 20878                           
 20879                           ;My_usb_cdc.c: 105: }
 20880                           ;My_usb_cdc.c: 106: CDCTxService();
 20881  016CDA  ECDA  F097         	call	_CDCTxService	;wreg free
 20882                           
 20883                           ;My_usb_cdc.c: 107: return numBytesRead;
 20884  016CDE  0100               	movlb	0	; () banked
 20885  016CE0  516D               	movf	USB_CDC_get@numBytesRead& (0+255),w,b
 20886  016CE2  0012               	return	
 20887  016CE4                     __end_of_USB_CDC_get:
 20888                           	opt stack 0
 20889                           tblptru	equ	0xFF8
 20890                           tblptrh	equ	0xFF7
 20891                           tblptrl	equ	0xFF6
 20892                           tablat	equ	0xFF5
 20893                           prodh	equ	0xFF4
 20894                           prodl	equ	0xFF3
 20895                           intcon	equ	0xFF2
 20896                           intcon2	equ	0xFF1
 20897                           indf0	equ	0xFEF
 20898                           postinc0	equ	0xFEE
 20899                           fsr0h	equ	0xFEA
 20900                           fsr0l	equ	0xFE9
 20901                           wreg	equ	0xFE8
 20902                           postinc1	equ	0xFE6
 20903                           postdec1	equ	0xFE5
 20904                           fsr1h	equ	0xFE2
 20905                           fsr1l	equ	0xFE1
 20906                           indf2	equ	0xFDF
 20907                           postinc2	equ	0xFDE
 20908                           postdec2	equ	0xFDD
 20909                           plusw2	equ	0xFDB
 20910                           fsr2h	equ	0xFDA
 20911                           fsr2l	equ	0xFD9
 20912                           status	equ	0xFD8
 20913                           
 20914 ;; *************** function _getsUSBUSART *****************
 20915 ;; Defined at:
 20916 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 20917 ;; Parameters:    Size  Location     Type
 20918 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20919 ;;		 -> readBuffer(64), 
 20920 ;;  len             1    9[BANK0 ] unsigned char 
 20921 ;; Auto vars:     Size  Location     Type
 20922 ;;		None
 20923 ;; Return value:  Size  Location     Type
 20924 ;;                  1    wreg      unsigned char 
 20925 ;; Registers used:
 20926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20927 ;; Tracked objects:
 20928 ;;		On entry : 0/0
 20929 ;;		On exit  : 0/0
 20930 ;;		Unchanged: 0/0
 20931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20932 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20935 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20936 ;;Total ram usage:        6 bytes
 20937 ;; Hardware stack levels used:    1
 20938 ;; Hardware stack levels required when called:   13
 20939 ;; This function calls:
 20940 ;;		_USBTransferOnePacket
 20941 ;; This function is called by:
 20942 ;;		_USB_CDC_get
 20943 ;; This function uses a non-reentrant model
 20944 ;;
 20945                           
 20946                           	psect	text84
 20947  014ED8                     __ptext84:
 20948                           	opt stack 0
 20949  014ED8                     _getsUSBUSART:
 20950                           	opt stack 15
 20951                           
 20952                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 20953                           
 20954                           ; BSR set to: 0
 20955                           ;incstack = 0
 20956  014ED8  0E00               	movlw	0
 20957  014EDA  6E18               	movwf	_cdc_rx_len,c
 20958                           
 20959                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20960  014EDC  5007               	movf	_CDCDataOutHandle,w,c
 20961  014EDE  1008               	iorwf	_CDCDataOutHandle+1,w,c
 20962  014EE0  B4D8               	btfsc	status,2,c
 20963  014EE2  D012               	goto	l11609
 20964  014EE4  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20965  014EE8  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20966  014EEC  AEDF               	btfss	indf2,7,c
 20967  014EEE  D004               	goto	u12840
 20968  014EF0  0100               	movlb	0	; () banked
 20969  014EF2  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20970  014EF4  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20971  014EF6  D002               	goto	u12848
 20972  014EF8                     u12840:
 20973  014EF8  0100               	movlb	0	; () banked
 20974  014EFA  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20975  014EFC                     u12848:
 20976  014EFC  0100               	movlb	0	; () banked
 20977  014EFE  516A               	movf	??_getsUSBUSART& (0+255),w,b
 20978  014F00  0100               	movlb	0	; () banked
 20979  014F02  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 20980  014F04  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 20981  014F06  D005               	goto	l11611
 20982  014F08                     l11609:
 20983  014F08  0E00               	movlw	0
 20984  014F0A  0100               	movlb	0	; () banked
 20985  014F0C  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 20986  014F0E  0E00               	movlw	0
 20987  014F10  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 20988  014F12                     l11611:
 20989                           
 20990                           ; BSR set to: 0
 20991  014F12  0100               	movlb	0	; () banked
 20992  014F14  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 20993  014F16  0100               	movlb	0	; () banked
 20994  014F18  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 20995  014F1A  A4D8               	btfss	status,2,c
 20996  014F1C  D044               	goto	l11627
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;usb_device_cdc.c: 547: {
 21000                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21001  014F1E  EE20 F001          	lfsr	2,1
 21002  014F22  5007               	movf	_CDCDataOutHandle,w,c
 21003  014F24  26D9               	addwf	fsr2l,f,c
 21004  014F26  5008               	movf	_CDCDataOutHandle+1,w,c
 21005  014F28  22DA               	addwfc	fsr2h,f,c
 21006  014F2A  0100               	movlb	0	; () banked
 21007  014F2C  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21008  014F2E  5CDE               	subwf	postinc2,w,c
 21009  014F30  B0D8               	btfsc	status,0,c
 21010  014F32  D009               	goto	l11617
 21011                           
 21012                           ; BSR set to: 0
 21013                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21014  014F34  EE20 F001          	lfsr	2,1
 21015  014F38  5007               	movf	_CDCDataOutHandle,w,c
 21016  014F3A  26D9               	addwf	fsr2l,f,c
 21017  014F3C  5008               	movf	_CDCDataOutHandle+1,w,c
 21018  014F3E  22DA               	addwfc	fsr2h,f,c
 21019  014F40  50DF               	movf	indf2,w,c
 21020  014F42  0100               	movlb	0	; () banked
 21021  014F44  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21022  014F46                     l11617:
 21023                           
 21024                           ; BSR set to: 0
 21025                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21026  014F46  0E00               	movlw	0
 21027  014F48  6E18               	movwf	_cdc_rx_len,c
 21028  014F4A  D015               	goto	l11623
 21029  014F4C                     l11619:
 21030                           
 21031                           ; BSR set to: 0
 21032                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21033  014F4C  5018               	movf	_cdc_rx_len,w,c
 21034  014F4E  0D01               	mullw	1
 21035  014F50  0E00               	movlw	low _cdc_data_rx
 21036  014F52  24F3               	addwf	prodl,w,c
 21037  014F54  6ED9               	movwf	fsr2l,c
 21038  014F56  0E03               	movlw	high _cdc_data_rx
 21039  014F58  20F4               	addwfc	prodh,w,c
 21040  014F5A  6EDA               	movwf	fsr2h,c
 21041  014F5C  5018               	movf	_cdc_rx_len,w,c
 21042  014F5E  0D01               	mullw	1
 21043  014F60  50F3               	movf	prodl,w,c
 21044  014F62  0100               	movlb	0	; () banked
 21045  014F64  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21046  014F66  6EE1               	movwf	fsr1l,c
 21047  014F68  50F4               	movf	prodh,w,c
 21048  014F6A  0100               	movlb	0	; () banked
 21049  014F6C  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21050  014F6E  6EE2               	movwf	fsr1h,c
 21051  014F70  CFDF FFE7          	movff	indf2,indf1
 21052                           
 21053                           ; BSR set to: 0
 21054  014F74  2A18               	incf	_cdc_rx_len,f,c
 21055  014F76                     l11623:
 21056                           
 21057                           ; BSR set to: 0
 21058  014F76  0100               	movlb	0	; () banked
 21059  014F78  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21060  014F7A  5C18               	subwf	_cdc_rx_len,w,c
 21061  014F7C  A0D8               	btfss	status,0,c
 21062  014F7E  D7E6               	goto	l11619
 21063                           
 21064                           ; BSR set to: 0
 21065                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21066                           
 21067                           ; BSR set to: 0
 21068  014F80  0E00               	movlw	0
 21069  014F82  0100               	movlb	0	; () banked
 21070  014F84  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21071  014F86  0E00               	movlw	low _cdc_data_rx
 21072  014F88  0100               	movlb	0	; () banked
 21073  014F8A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21074  014F8C  0E03               	movlw	high _cdc_data_rx
 21075  014F8E  0100               	movlb	0	; () banked
 21076  014F90  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21077  014F92  0E40               	movlw	64
 21078  014F94  0100               	movlb	0	; () banked
 21079  014F96  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21080  014F98  0E02               	movlw	2
 21081  014F9A  ECED  F0A4         	call	_USBTransferOnePacket
 21082  014F9E  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21083  014FA2  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21084  014FA6                     l11627:
 21085                           
 21086                           ;usb_device_cdc.c: 567: }
 21087                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 21088  014FA6  5018               	movf	_cdc_rx_len,w,c
 21089  014FA8  0012               	return	
 21090  014FAA                     __end_of_getsUSBUSART:
 21091                           	opt stack 0
 21092                           tblptru	equ	0xFF8
 21093                           tblptrh	equ	0xFF7
 21094                           tblptrl	equ	0xFF6
 21095                           tablat	equ	0xFF5
 21096                           prodh	equ	0xFF4
 21097                           prodl	equ	0xFF3
 21098                           intcon	equ	0xFF2
 21099                           intcon2	equ	0xFF1
 21100                           indf0	equ	0xFEF
 21101                           postinc0	equ	0xFEE
 21102                           fsr0h	equ	0xFEA
 21103                           fsr0l	equ	0xFE9
 21104                           wreg	equ	0xFE8
 21105                           indf1	equ	0xFE7
 21106                           postinc1	equ	0xFE6
 21107                           postdec1	equ	0xFE5
 21108                           fsr1h	equ	0xFE2
 21109                           fsr1l	equ	0xFE1
 21110                           indf2	equ	0xFDF
 21111                           postinc2	equ	0xFDE
 21112                           postdec2	equ	0xFDD
 21113                           plusw2	equ	0xFDB
 21114                           fsr2h	equ	0xFDA
 21115                           fsr2l	equ	0xFD9
 21116                           status	equ	0xFD8
 21117                           
 21118 ;; *************** function _CDCTxService *****************
 21119 ;; Defined at:
 21120 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 21121 ;; Parameters:    Size  Location     Type
 21122 ;;		None
 21123 ;; Auto vars:     Size  Location     Type
 21124 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21125 ;;  i               1   10[BANK0 ] unsigned char 
 21126 ;; Return value:  Size  Location     Type
 21127 ;;		None               void
 21128 ;; Registers used:
 21129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21130 ;; Tracked objects:
 21131 ;;		On entry : 0/0
 21132 ;;		On exit  : 0/0
 21133 ;;		Unchanged: 0/0
 21134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21136 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21139 ;;Total ram usage:        5 bytes
 21140 ;; Hardware stack levels used:    1
 21141 ;; Hardware stack levels required when called:   13
 21142 ;; This function calls:
 21143 ;;		_USBTransferOnePacket
 21144 ;; This function is called by:
 21145 ;;		_USB_CDC_send
 21146 ;;		_USB_CDC_get
 21147 ;; This function uses a non-reentrant model
 21148 ;;
 21149                           
 21150                           	psect	text85
 21151  012FB4                     __ptext85:
 21152                           	opt stack 0
 21153  012FB4                     _CDCTxService:
 21154                           	opt stack 15
 21155                           
 21156                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21157                           ;usb_device_cdc.c: 896: uint8_t i;
 21158                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21159                           
 21160                           ;incstack = 0
 21161  012FB4  98A0               	bcf	4000,4,c	;volatile
 21162                           
 21163                           ;usb_device_cdc.c: 900: {};
 21164                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21165  012FB6  0101               	movlb	1	; () banked
 21166  012FB8  510E               	movf	_CDCDataInHandle& (0+255),w,b
 21167  012FBA  0101               	movlb	1	; () banked
 21168  012FBC  110F               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21169  012FBE  B4D8               	btfsc	status,2,c
 21170  012FC0  D013               	goto	l11651
 21171                           
 21172                           ; BSR set to: 1
 21173  012FC2  C10E  FFD9         	movff	_CDCDataInHandle,fsr2l
 21174  012FC6  C10F  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21175  012FCA  0101               	movlb	1	; () banked
 21176  012FCC  AEDF               	btfss	indf2,7,c
 21177  012FCE  D004               	goto	u12900
 21178  012FD0  0100               	movlb	0	; () banked
 21179  012FD2  6B67               	clrf	??_CDCTxService& (0+255),b
 21180  012FD4  2B67               	incf	??_CDCTxService& (0+255),f,b
 21181  012FD6  D002               	goto	u12908
 21182  012FD8                     u12900:
 21183  012FD8  0100               	movlb	0	; () banked
 21184  012FDA  6B67               	clrf	??_CDCTxService& (0+255),b
 21185  012FDC                     u12908:
 21186  012FDC  0100               	movlb	0	; () banked
 21187  012FDE  5167               	movf	??_CDCTxService& (0+255),w,b
 21188  012FE0  0100               	movlb	0	; () banked
 21189  012FE2  6F68               	movwf	_CDCTxService$2005& (0+255),b
 21190  012FE4  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 21191  012FE6  D005               	goto	l11653
 21192  012FE8                     l11651:
 21193  012FE8  0E00               	movlw	0
 21194  012FEA  0100               	movlb	0	; () banked
 21195  012FEC  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 21196  012FEE  0E00               	movlw	0
 21197  012FF0  6F68               	movwf	_CDCTxService$2005& (0+255),b
 21198  012FF2                     l11653:
 21199                           
 21200                           ; BSR set to: 0
 21201  012FF2  0100               	movlb	0	; () banked
 21202  012FF4  5168               	movf	_CDCTxService$2005& (0+255),w,b
 21203  012FF6  0100               	movlb	0	; () banked
 21204  012FF8  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 21205  012FFA  B4D8               	btfsc	status,2,c
 21206  012FFC  D002               	goto	l11657
 21207                           
 21208                           ; BSR set to: 0
 21209                           ;usb_device_cdc.c: 903: {
 21210                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21211  012FFE  88A0               	bsf	4000,4,c	;volatile
 21212                           
 21213                           ;usb_device_cdc.c: 905: return;
 21214  013000  0012               	return	
 21215  013002                     l11657:
 21216                           
 21217                           ; BSR set to: 0
 21218                           ;usb_device_cdc.c: 906: }
 21219                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21220  013002  0E03               	movlw	3
 21221  013004  1819               	xorwf	_cdc_trf_state,w,c
 21222  013006  A4D8               	btfss	status,2,c
 21223  013008  D002               	goto	l504
 21224                           
 21225                           ; BSR set to: 0
 21226                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21227  01300A  0E00               	movlw	0
 21228  01300C  6E19               	movwf	_cdc_trf_state,c
 21229  01300E                     l504:
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21233  01300E  5019               	movf	_cdc_trf_state,w,c
 21234  013010  A4D8               	btfss	status,2,c
 21235  013012  D002               	goto	l11663
 21236                           
 21237                           ; BSR set to: 0
 21238                           ;usb_device_cdc.c: 920: {
 21239                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21240  013014  88A0               	bsf	4000,4,c	;volatile
 21241                           
 21242                           ;usb_device_cdc.c: 922: return;
 21243  013016  0012               	return	
 21244  013018                     l11663:
 21245                           
 21246                           ; BSR set to: 0
 21247                           ;usb_device_cdc.c: 923: }
 21248                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21249  013018  0E02               	movlw	2
 21250  01301A  1819               	xorwf	_cdc_trf_state,w,c
 21251  01301C  A4D8               	btfss	status,2,c
 21252  01301E  D016               	goto	l11669
 21253                           
 21254                           ; BSR set to: 0
 21255                           ;usb_device_cdc.c: 929: {
 21256                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21257  013020  0E01               	movlw	1
 21258  013022  0100               	movlb	0	; () banked
 21259  013024  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21260  013026  0E00               	movlw	0
 21261  013028  0100               	movlb	0	; () banked
 21262  01302A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21263  01302C  0E00               	movlw	0
 21264  01302E  0100               	movlb	0	; () banked
 21265  013030  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21266  013032  0E00               	movlw	0
 21267  013034  0100               	movlb	0	; () banked
 21268  013036  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21269  013038  0E02               	movlw	2
 21270  01303A  ECED  F0A4         	call	_USBTransferOnePacket
 21271  01303E  C060  F10E         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21272  013042  C061  F10F         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21273                           
 21274                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21275  013046  0E03               	movlw	3
 21276  013048  6E19               	movwf	_cdc_trf_state,c
 21277                           
 21278                           ;usb_device_cdc.c: 933: }
 21279  01304A  D06A               	goto	l11713
 21280  01304C                     l11669:
 21281                           
 21282                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21283  01304C  0419               	decf	_cdc_trf_state,w,c
 21284  01304E  A4D8               	btfss	status,2,c
 21285  013050  D067               	goto	l11713
 21286                           
 21287                           ;usb_device_cdc.c: 935: {
 21288                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21289  013052  0E40               	movlw	64
 21290  013054  641A               	cpfsgt	_cdc_tx_len,c
 21291  013056  D004               	goto	l509
 21292                           
 21293                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21294  013058  0E40               	movlw	64
 21295  01305A  0100               	movlb	0	; () banked
 21296  01305C  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21297  01305E  D002               	goto	l11675
 21298  013060                     l509:
 21299                           
 21300                           ;usb_device_cdc.c: 941: else
 21301                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21302  013060  C01A  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21303  013064                     l11675:
 21304                           
 21305                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21306  013064  0100               	movlb	0	; () banked
 21307  013066  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21308  013068  0800               	sublw	0
 21309  01306A  241A               	addwf	_cdc_tx_len,w,c
 21310  01306C  6E1A               	movwf	_cdc_tx_len,c
 21311                           
 21312                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21313  01306E  0E40               	movlw	low _cdc_data_tx
 21314  013070  0101               	movlb	1	; () banked
 21315  013072  6F06               	movwf	_pCDCDst& (0+255),b
 21316  013074  0E03               	movlw	high _cdc_data_tx
 21317  013076  0101               	movlb	1	; () banked
 21318  013078  6F07               	movwf	(_pCDCDst+1)& (0+255),b
 21319                           
 21320                           ; BSR set to: 1
 21321                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21322  01307A  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21323                           
 21324                           ; BSR set to: 1
 21325                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21326  01307E  5017               	movf	_cdc_mem_type,w,c
 21327  013080  B4D8               	btfsc	status,2,c
 21328  013082  D013               	goto	l11691
 21329  013084  D02A               	goto	l11701
 21330  013086                     l11683:
 21331                           
 21332                           ;usb_device_cdc.c: 955: {
 21333                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21334  013086  C109  FFD9         	movff	_pCDCSrc,fsr2l
 21335  01308A  C10A  FFDA         	movff	_pCDCSrc+1,fsr2h
 21336  01308E  C106  FFE1         	movff	_pCDCDst,fsr1l
 21337  013092  C107  FFE2         	movff	_pCDCDst+1,fsr1h
 21338  013096  CFDF FFE7          	movff	indf2,indf1
 21339                           
 21340                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21341  01309A  0101               	movlb	1	; () banked
 21342  01309C  4B06               	infsnz	_pCDCDst& (0+255),f,b
 21343  01309E  2B07               	incf	(_pCDCDst+1)& (0+255),f,b
 21344                           
 21345                           ; BSR set to: 1
 21346                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21347  0130A0  0101               	movlb	1	; () banked
 21348  0130A2  4B09               	infsnz	_pCDCSrc& (0+255),f,b
 21349  0130A4  2B0A               	incf	(_pCDCSrc+1)& (0+255),f,b
 21350                           
 21351                           ; BSR set to: 1
 21352                           ;usb_device_cdc.c: 959: i--;
 21353  0130A6  0100               	movlb	0	; () banked
 21354  0130A8  076A               	decf	CDCTxService@i& (0+255),f,b
 21355  0130AA                     l11691:
 21356  0130AA  0100               	movlb	0	; () banked
 21357  0130AC  516A               	movf	CDCTxService@i& (0+255),w,b
 21358  0130AE  0100               	movlb	0	; () banked
 21359  0130B0  B4D8               	btfsc	status,2,c
 21360  0130B2  D018               	goto	l11703
 21361  0130B4  D7E8               	goto	l11683
 21362  0130B6                     l11693:
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;usb_device_cdc.c: 965: {
 21366                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21367  0130B6  C109  FFD9         	movff	_pCDCSrc,fsr2l
 21368  0130BA  C10A  FFDA         	movff	_pCDCSrc+1,fsr2h
 21369  0130BE  C106  FFE1         	movff	_pCDCDst,fsr1l
 21370  0130C2  C107  FFE2         	movff	_pCDCDst+1,fsr1h
 21371  0130C6  CFDF FFE7          	movff	indf2,indf1
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21375  0130CA  0101               	movlb	1	; () banked
 21376  0130CC  4B06               	infsnz	_pCDCDst& (0+255),f,b
 21377  0130CE  2B07               	incf	(_pCDCDst+1)& (0+255),f,b
 21378                           
 21379                           ; BSR set to: 1
 21380                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21381  0130D0  0101               	movlb	1	; () banked
 21382  0130D2  4B09               	infsnz	_pCDCSrc& (0+255),f,b
 21383  0130D4  2B0A               	incf	(_pCDCSrc+1)& (0+255),f,b
 21384                           
 21385                           ; BSR set to: 1
 21386                           ;usb_device_cdc.c: 969: i--;
 21387  0130D6  0100               	movlb	0	; () banked
 21388  0130D8  076A               	decf	CDCTxService@i& (0+255),f,b
 21389  0130DA                     l11701:
 21390  0130DA  0100               	movlb	0	; () banked
 21391  0130DC  516A               	movf	CDCTxService@i& (0+255),w,b
 21392  0130DE  0100               	movlb	0	; () banked
 21393  0130E0  A4D8               	btfss	status,2,c
 21394  0130E2  D7E9               	goto	l11693
 21395  0130E4                     l11703:
 21396                           
 21397                           ; BSR set to: 0
 21398                           ;usb_device_cdc.c: 970: }
 21399                           ;usb_device_cdc.c: 971: }
 21400                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21401  0130E4  501A               	movf	_cdc_tx_len,w,c
 21402  0130E6  A4D8               	btfss	status,2,c
 21403  0130E8  D009               	goto	l11711
 21404                           
 21405                           ; BSR set to: 0
 21406                           ;usb_device_cdc.c: 978: {
 21407                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21408  0130EA  0E40               	movlw	64
 21409  0130EC  0100               	movlb	0	; () banked
 21410  0130EE  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21411  0130F0  A4D8               	btfss	status,2,c
 21412  0130F2  D002               	goto	l11709
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21416  0130F4  0E02               	movlw	2
 21417  0130F6  D001               	goto	L4
 21418  0130F8                     l11709:
 21419                           
 21420                           ; BSR set to: 0
 21421                           ;usb_device_cdc.c: 981: else
 21422                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21423  0130F8  0E03               	movlw	3
 21424  0130FA                     L4:
 21425  0130FA  6E19               	movwf	_cdc_trf_state,c
 21426  0130FC                     l11711:
 21427                           
 21428                           ; BSR set to: 0
 21429                           ;usb_device_cdc.c: 983: }
 21430                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21431  0130FC  0E01               	movlw	1
 21432  0130FE  0100               	movlb	0	; () banked
 21433  013100  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21434  013102  0E40               	movlw	low _cdc_data_tx
 21435  013104  0100               	movlb	0	; () banked
 21436  013106  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21437  013108  0E03               	movlw	high _cdc_data_tx
 21438  01310A  0100               	movlb	0	; () banked
 21439  01310C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21440  01310E  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21441  013112  0E02               	movlw	2
 21442  013114  ECED  F0A4         	call	_USBTransferOnePacket
 21443  013118  C060  F10E         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21444  01311C  C061  F10F         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21445  013120                     l11713:
 21446                           
 21447                           ;usb_device_cdc.c: 986: }
 21448                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21449  013120  88A0               	bsf	4000,4,c	;volatile
 21450  013122  0012               	return		;funcret
 21451  013124                     __end_of_CDCTxService:
 21452                           	opt stack 0
 21453                           tblptru	equ	0xFF8
 21454                           tblptrh	equ	0xFF7
 21455                           tblptrl	equ	0xFF6
 21456                           tablat	equ	0xFF5
 21457                           prodh	equ	0xFF4
 21458                           prodl	equ	0xFF3
 21459                           intcon	equ	0xFF2
 21460                           intcon2	equ	0xFF1
 21461                           indf0	equ	0xFEF
 21462                           postinc0	equ	0xFEE
 21463                           fsr0h	equ	0xFEA
 21464                           fsr0l	equ	0xFE9
 21465                           wreg	equ	0xFE8
 21466                           indf1	equ	0xFE7
 21467                           postinc1	equ	0xFE6
 21468                           postdec1	equ	0xFE5
 21469                           fsr1h	equ	0xFE2
 21470                           fsr1l	equ	0xFE1
 21471                           indf2	equ	0xFDF
 21472                           postinc2	equ	0xFDE
 21473                           postdec2	equ	0xFDD
 21474                           plusw2	equ	0xFDB
 21475                           fsr2h	equ	0xFDA
 21476                           fsr2l	equ	0xFD9
 21477                           status	equ	0xFD8
 21478                           
 21479 ;; *************** function _USBTransferOnePacket *****************
 21480 ;; Defined at:
 21481 ;;		line 996 in file "../My_library/usb/usb_device.c"
 21482 ;; Parameters:    Size  Location     Type
 21483 ;;  ep              1    wreg     unsigned char 
 21484 ;;  dir             1    0[BANK0 ] unsigned char 
 21485 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21486 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21487 ;;  len             1    3[BANK0 ] unsigned char 
 21488 ;; Auto vars:     Size  Location     Type
 21489 ;;  ep              1    4[BANK0 ] unsigned char 
 21490 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21491 ;;		 -> NULL(0), BDT(48), 
 21492 ;; Return value:  Size  Location     Type
 21493 ;;                  2    0[BANK0 ] PTR void 
 21494 ;; Registers used:
 21495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21496 ;; Tracked objects:
 21497 ;;		On entry : 0/0
 21498 ;;		On exit  : 0/0
 21499 ;;		Unchanged: 0/0
 21500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21501 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21502 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21504 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21505 ;;Total ram usage:        7 bytes
 21506 ;; Hardware stack levels used:    1
 21507 ;; Hardware stack levels required when called:   12
 21508 ;; This function calls:
 21509 ;;		Nothing
 21510 ;; This function is called by:
 21511 ;;		_getsUSBUSART
 21512 ;;		_CDCTxService
 21513 ;;		_USBCDCEventHandler
 21514 ;; This function uses a non-reentrant model
 21515 ;;
 21516                           
 21517                           	psect	text86
 21518  0149DA                     __ptext86:
 21519                           	opt stack 0
 21520  0149DA                     _USBTransferOnePacket:
 21521                           	opt stack 15
 21522                           
 21523                           ;incstack = 0
 21524                           ;USBTransferOnePacket@ep stored from wreg
 21525  0149DA  0100               	movlb	0	; () banked
 21526  0149DC  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21527                           
 21528                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 21529                           ;usb_device.c: 1001: if(dir != 0)
 21530  0149DE  0100               	movlb	0	; () banked
 21531  0149E0  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21532  0149E2  0100               	movlb	0	; () banked
 21533  0149E4  B4D8               	btfsc	status,2,c
 21534  0149E6  D008               	goto	l11173
 21535                           
 21536                           ; BSR set to: 0
 21537                           ;usb_device.c: 1002: {
 21538                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 21539  0149E8  0100               	movlb	0	; () banked
 21540  0149EA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21541  0149EC  0D02               	mullw	2
 21542  0149EE  0EF5               	movlw	low _pBDTEntryIn
 21543  0149F0  24F3               	addwf	prodl,w,c
 21544  0149F2  6ED9               	movwf	fsr2l,c
 21545  0149F4  0E00               	movlw	high _pBDTEntryIn
 21546  0149F6  D007               	goto	L5
 21547  0149F8                     l11173:
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;usb_device.c: 1006: else
 21551                           ;usb_device.c: 1007: {
 21552                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 21553  0149F8  0100               	movlb	0	; () banked
 21554  0149FA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21555  0149FC  0D02               	mullw	2
 21556  0149FE  0E00               	movlw	low _pBDTEntryOut
 21557  014A00  24F3               	addwf	prodl,w,c
 21558  014A02  6ED9               	movwf	fsr2l,c
 21559  014A04  0E01               	movlw	high _pBDTEntryOut
 21560  014A06                     L5:
 21561  014A06  20F4               	addwfc	prodh,w,c
 21562  014A08  6EDA               	movwf	fsr2h,c
 21563  014A0A  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21564  014A0E  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21565                           
 21566                           ; BSR set to: 0
 21567                           ;usb_device.c: 1010: }
 21568                           ;usb_device.c: 1014: if(handle == 0)
 21569                           
 21570                           ; BSR set to: 0
 21571  014A12  0100               	movlb	0	; () banked
 21572  014A14  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21573  014A16  0100               	movlb	0	; () banked
 21574  014A18  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21575  014A1A  A4D8               	btfss	status,2,c
 21576  014A1C  D007               	goto	l11181
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;usb_device.c: 1015: {
 21580                           ;usb_device.c: 1016: return 0;
 21581  014A1E  0E00               	movlw	0
 21582  014A20  0100               	movlb	0	; () banked
 21583  014A22  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21584  014A24  0E00               	movlw	0
 21585  014A26  0100               	movlb	0	; () banked
 21586  014A28  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21587                           
 21588                           ; BSR set to: 0
 21589  014A2A  0012               	return	
 21590  014A2C                     l11181:
 21591                           
 21592                           ; BSR set to: 0
 21593                           ;usb_device.c: 1017: }
 21594                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 21595  014A2C  0100               	movlb	0	; () banked
 21596  014A2E  EE20 F002          	lfsr	2,2
 21597  014A32  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21598  014A34  26D9               	addwf	fsr2l,f,c
 21599  014A36  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21600  014A38  22DA               	addwfc	fsr2h,f,c
 21601  014A3A  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21602  014A3E  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21603                           
 21604                           ;usb_device.c: 1031: handle->CNT = len;
 21605  014A42  0100               	movlb	0	; () banked
 21606  014A44  EE20 F001          	lfsr	2,1
 21607  014A48  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21608  014A4A  26D9               	addwf	fsr2l,f,c
 21609  014A4C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21610  014A4E  22DA               	addwfc	fsr2h,f,c
 21611  014A50  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21612                           
 21613                           ; BSR set to: 0
 21614                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 21615  014A54  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21616  014A58  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21617  014A5C  0E40               	movlw	64
 21618  014A5E  16DF               	andwf	indf2,f,c
 21619                           
 21620                           ; BSR set to: 0
 21621                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 21622  014A60  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21623  014A64  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21624  014A68  0E00               	movlw	0
 21625  014A6A  86DB               	bsf	plusw2,3,c
 21626                           
 21627                           ; BSR set to: 0
 21628                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 21629  014A6C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21630  014A70  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21631  014A74  0E00               	movlw	0
 21632  014A76  8EDB               	bsf	plusw2,7,c
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;usb_device.c: 1037: if(dir != 0)
 21636  014A78  0100               	movlb	0	; () banked
 21637  014A7A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21638  014A7C  0100               	movlb	0	; () banked
 21639  014A7E  B4D8               	btfsc	status,2,c
 21640  014A80  D008               	goto	l11193
 21641                           
 21642                           ; BSR set to: 0
 21643                           ;usb_device.c: 1038: {
 21644                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21645  014A82  0100               	movlb	0	; () banked
 21646  014A84  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21647  014A86  0D02               	mullw	2
 21648  014A88  0EF5               	movlw	low _pBDTEntryIn
 21649  014A8A  24F3               	addwf	prodl,w,c
 21650  014A8C  6ED9               	movwf	fsr2l,c
 21651  014A8E  0E00               	movlw	high _pBDTEntryIn
 21652  014A90  D007               	goto	L6
 21653  014A92                     l11193:
 21654                           
 21655                           ; BSR set to: 0
 21656                           ;usb_device.c: 1042: else
 21657                           ;usb_device.c: 1043: {
 21658                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21659  014A92  0100               	movlb	0	; () banked
 21660  014A94  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21661  014A96  0D02               	mullw	2
 21662  014A98  0E00               	movlw	low _pBDTEntryOut
 21663  014A9A  24F3               	addwf	prodl,w,c
 21664  014A9C  6ED9               	movwf	fsr2l,c
 21665  014A9E  0E01               	movlw	high _pBDTEntryOut
 21666  014AA0                     L6:
 21667  014AA0  20F4               	addwfc	prodh,w,c
 21668  014AA2  6EDA               	movwf	fsr2h,c
 21669  014AA4  0E04               	movlw	4
 21670  014AA6  1ADF               	xorwf	indf2,f,c
 21671                           
 21672                           ; BSR set to: 0
 21673                           ;usb_device.c: 1046: }
 21674                           ;usb_device.c: 1047: return (void*)handle;
 21675                           
 21676                           ; BSR set to: 0
 21677  014AA8  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21678  014AAC  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21679  014AB0  0012               	return	
 21680  014AB2                     __end_of_USBTransferOnePacket:
 21681                           	opt stack 0
 21682                           tblptru	equ	0xFF8
 21683                           tblptrh	equ	0xFF7
 21684                           tblptrl	equ	0xFF6
 21685                           tablat	equ	0xFF5
 21686                           prodh	equ	0xFF4
 21687                           prodl	equ	0xFF3
 21688                           intcon	equ	0xFF2
 21689                           intcon2	equ	0xFF1
 21690                           indf0	equ	0xFEF
 21691                           postinc0	equ	0xFEE
 21692                           fsr0h	equ	0xFEA
 21693                           fsr0l	equ	0xFE9
 21694                           wreg	equ	0xFE8
 21695                           indf1	equ	0xFE7
 21696                           postinc1	equ	0xFE6
 21697                           postdec1	equ	0xFE5
 21698                           fsr1h	equ	0xFE2
 21699                           fsr1l	equ	0xFE1
 21700                           indf2	equ	0xFDF
 21701                           postinc2	equ	0xFDE
 21702                           postdec2	equ	0xFDD
 21703                           plusw2	equ	0xFDB
 21704                           fsr2h	equ	0xFDA
 21705                           fsr2l	equ	0xFD9
 21706                           status	equ	0xFD8
 21707                           
 21708 ;; *************** function _ST7032_task *****************
 21709 ;; Defined at:
 21710 ;;		line 79 in file "../My_library/My_ST7032.c"
 21711 ;; Parameters:    Size  Location     Type
 21712 ;;		None
 21713 ;; Auto vars:     Size  Location     Type
 21714 ;;  data            1   17[BANK0 ] unsigned char 
 21715 ;; Return value:  Size  Location     Type
 21716 ;;		None               void
 21717 ;; Registers used:
 21718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21719 ;; Tracked objects:
 21720 ;;		On entry : 0/0
 21721 ;;		On exit  : 0/0
 21722 ;;		Unchanged: 0/0
 21723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21725 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21727 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21728 ;;Total ram usage:        3 bytes
 21729 ;; Hardware stack levels used:    1
 21730 ;; Hardware stack levels required when called:   14
 21731 ;; This function calls:
 21732 ;;		_I2C_idle_check
 21733 ;;		_I2C_send
 21734 ;;		_I2C_start
 21735 ;;		_I2C_stop
 21736 ;;		_ringbuf_num
 21737 ;;		_ringbuf_pop
 21738 ;; This function is called by:
 21739 ;;		_main
 21740 ;; This function uses a non-reentrant model
 21741 ;;
 21742                           
 21743                           	psect	text87
 21744  0133EA                     __ptext87:
 21745                           	opt stack 0
 21746  0133EA                     _ST7032_task:
 21747                           	opt stack 16
 21748                           
 21749                           ;My_ST7032.c: 80: if (I2C_idle_check(0x05)) return;
 21750                           
 21751                           ; BSR set to: 0
 21752                           ;incstack = 0
 21753  0133EA  0E05               	movlw	5
 21754  0133EC  EC5F  F0B7         	call	_I2C_idle_check
 21755  0133F0  0900               	iorlw	0
 21756  0133F2  A4D8               	btfss	status,2,c
 21757  0133F4  0012               	return	
 21758  0133F6  D08E               	goto	l12741
 21759  0133F8                     l12689:
 21760                           
 21761                           ;My_ST7032.c: 87: if (ringbuf_num(&lcd_tx)) {
 21762  0133F8  0E23               	movlw	low _lcd_tx
 21763  0133FA  0100               	movlb	0	; () banked
 21764  0133FC  6F60               	movwf	ringbuf_num@rb& (0+255),b
 21765  0133FE  0E00               	movlw	high _lcd_tx
 21766  013400  0100               	movlb	0	; () banked
 21767  013402  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 21768  013404  EC43  F0A2         	call	_ringbuf_num	;wreg free
 21769  013408  0100               	movlb	0	; () banked
 21770  01340A  5160               	movf	?_ringbuf_num& (0+255),w,b
 21771  01340C  0100               	movlb	0	; () banked
 21772  01340E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21773  013410  B4D8               	btfsc	status,2,c
 21774  013412  0012               	return	
 21775                           
 21776                           ; BSR set to: 0
 21777                           ;My_ST7032.c: 88: st7032_state = ST7032_START;
 21778  013414  0E01               	movlw	1
 21779  013416  0101               	movlb	1	; () banked
 21780  013418  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 21781                           
 21782                           ; BSR set to: 1
 21783                           ;My_ST7032.c: 89: }
 21784                           ;My_ST7032.c: 90: break;
 21785  01341A  0012               	return	
 21786  01341C                     l12693:
 21787                           
 21788                           ; BSR set to: 1
 21789                           ;My_ST7032.c: 92: I2C_sent_flag = 1;
 21790  01341C  0E01               	movlw	1
 21791  01341E  6E0E               	movwf	_I2C_sent_flag,c
 21792                           
 21793                           ; BSR set to: 1
 21794                           ;My_ST7032.c: 93: I2C_start();
 21795  013420  EC90  F0B7         	call	_I2C_start	;wreg free
 21796                           
 21797                           ;My_ST7032.c: 94: st7032_state = ST7032_SEND;
 21798  013424  0E02               	movlw	2
 21799  013426  0101               	movlb	1	; () banked
 21800  013428  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 21801                           
 21802                           ;My_ST7032.c: 95: break;
 21803  01342A  0012               	return	
 21804  01342C                     l12699:
 21805                           
 21806                           ; BSR set to: 1
 21807                           ;My_ST7032.c: 97: if (!I2C_sent_flag) return;
 21808  01342C  500E               	movf	_I2C_sent_flag,w,c
 21809  01342E  B4D8               	btfsc	status,2,c
 21810  013430  0012               	return	
 21811                           
 21812                           ; BSR set to: 1
 21813                           ;My_ST7032.c: 98: uint8_t data = ringbuf_pop(&lcd_tx);
 21814                           
 21815                           ; BSR set to: 1
 21816                           
 21817                           ; BSR set to: 1
 21818  013432  0E23               	movlw	low _lcd_tx
 21819  013434  0100               	movlb	0	; () banked
 21820  013436  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21821  013438  0E00               	movlw	high _lcd_tx
 21822  01343A  0100               	movlb	0	; () banked
 21823  01343C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21824  01343E  ECA3  F0A8         	call	_ringbuf_pop	;wreg free
 21825  013442  0100               	movlb	0	; () banked
 21826  013444  6F71               	movwf	ST7032_task@data& (0+255),b
 21827                           
 21828                           ; BSR set to: 0
 21829                           ;My_ST7032.c: 99: if (data != 0) {
 21830  013446  0100               	movlb	0	; () banked
 21831  013448  5171               	movf	ST7032_task@data& (0+255),w,b
 21832  01344A  0100               	movlb	0	; () banked
 21833  01344C  B4D8               	btfsc	status,2,c
 21834  01344E  D007               	goto	l12711
 21835                           
 21836                           ; BSR set to: 0
 21837                           ;My_ST7032.c: 100: I2C_sent_flag = 0;
 21838  013450  0E00               	movlw	0
 21839  013452  6E0E               	movwf	_I2C_sent_flag,c
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;My_ST7032.c: 101: I2C_send(data);
 21843  013454  0100               	movlb	0	; () banked
 21844  013456  5171               	movf	ST7032_task@data& (0+255),w,b
 21845  013458  EC83  F0B7         	call	_I2C_send
 21846                           
 21847                           ;My_ST7032.c: 102: } else {
 21848  01345C  0012               	return	
 21849  01345E                     l12711:
 21850                           
 21851                           ;My_ST7032.c: 103: wait = ringbuf_pop(&lcd_tx);
 21852  01345E  0E23               	movlw	low _lcd_tx
 21853  013460  0100               	movlb	0	; () banked
 21854  013462  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21855  013464  0E00               	movlw	high _lcd_tx
 21856  013466  0100               	movlb	0	; () banked
 21857  013468  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21858  01346A  ECA3  F0A8         	call	_ringbuf_pop	;wreg free
 21859  01346E  0100               	movlb	0	; () banked
 21860  013470  6F6F               	movwf	??_ST7032_task& (0+255),b
 21861  013472  0100               	movlb	0	; () banked
 21862  013474  516F               	movf	??_ST7032_task& (0+255),w,b
 21863  013476  0101               	movlb	1	; () banked
 21864  013478  6F0C               	movwf	ST7032_task@wait& (0+255),b
 21865  01347A  6B0D               	clrf	(ST7032_task@wait+1)& (0+255),b
 21866                           
 21867                           ;My_ST7032.c: 104: switch (wait) {
 21868  01347C  D01A               	goto	l12725
 21869  01347E                     l12713:
 21870                           
 21871                           ;My_ST7032.c: 106: wait = 0;
 21872  01347E  0E00               	movlw	0
 21873  013480  0101               	movlb	1	; () banked
 21874  013482  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21875  013484  0E00               	movlw	0
 21876  013486  D013               	goto	L10
 21877  013488                     l12715:
 21878                           
 21879                           ;My_ST7032.c: 109: wait = 2;
 21880  013488  0E00               	movlw	0
 21881  01348A  0101               	movlb	1	; () banked
 21882  01348C  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21883  01348E  0E02               	movlw	2
 21884  013490  D00E               	goto	L10
 21885  013492                     l12717:
 21886                           
 21887                           ;My_ST7032.c: 112: wait = 25;
 21888  013492  0E00               	movlw	0
 21889  013494  0101               	movlb	1	; () banked
 21890  013496  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21891  013498  0E19               	movlw	25
 21892  01349A  D009               	goto	L10
 21893  01349C                     l12719:
 21894                           
 21895                           ;My_ST7032.c: 115: wait = 800;
 21896  01349C  0E03               	movlw	3
 21897  01349E  0101               	movlb	1	; () banked
 21898  0134A0  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21899  0134A2  0E20               	movlw	32
 21900  0134A4  D004               	goto	L10
 21901  0134A6                     l12721:
 21902                           
 21903                           ;My_ST7032.c: 118: wait = 1;
 21904  0134A6  0E00               	movlw	0
 21905  0134A8  0101               	movlb	1	; () banked
 21906  0134AA  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21907  0134AC  0E01               	movlw	1
 21908  0134AE                     L10:
 21909  0134AE  6F0C               	movwf	ST7032_task@wait& (0+255),b
 21910                           
 21911                           ; BSR set to: 1
 21912                           ;My_ST7032.c: 120: }
 21913                           
 21914                           ;My_ST7032.c: 119: break;
 21915  0134B0  D018               	goto	l12727
 21916  0134B2                     l12725:
 21917                           
 21918                           ; BSR set to: 1
 21919  0134B2  C10C  F06F         	movff	ST7032_task@wait,??_ST7032_task
 21920  0134B6  C10D  F070         	movff	ST7032_task@wait+1,??_ST7032_task+1
 21921                           
 21922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21923                           ; Switch size 1, requested type "space"
 21924                           ; Number of cases is 1, Range of values is 0 to 0
 21925                           ; switch strategies available:
 21926                           ; Name         Instructions Cycles
 21927                           ; simple_byte            4     3 (average)
 21928                           ;	Chosen strategy is simple_byte
 21929  0134BA  0100               	movlb	0	; () banked
 21930  0134BC  5170               	movf	(??_ST7032_task+1)& (0+255),w,b
 21931  0134BE  0A00               	xorlw	0	; case 0
 21932  0134C0  A4D8               	btfss	status,2,c
 21933  0134C2  D7F1               	goto	l12721
 21934                           
 21935                           ; BSR set to: 0
 21936                           ; Switch size 1, requested type "space"
 21937                           ; Number of cases is 4, Range of values is 0 to 3
 21938                           ; switch strategies available:
 21939                           ; Name         Instructions Cycles
 21940                           ; simple_byte           13     7 (average)
 21941                           ;	Chosen strategy is simple_byte
 21942  0134C4  0100               	movlb	0	; () banked
 21943  0134C6  516F               	movf	??_ST7032_task& (0+255),w,b
 21944  0134C8  0A00               	xorlw	0	; case 0
 21945  0134CA  B4D8               	btfsc	status,2,c
 21946  0134CC  D7D8               	goto	l12713
 21947  0134CE  0A01               	xorlw	1	; case 1
 21948  0134D0  B4D8               	btfsc	status,2,c
 21949  0134D2  D7DA               	goto	l12715
 21950  0134D4  0A03               	xorlw	3	; case 2
 21951  0134D6  B4D8               	btfsc	status,2,c
 21952  0134D8  D7DC               	goto	l12717
 21953  0134DA  0A01               	xorlw	1	; case 3
 21954  0134DC  B4D8               	btfsc	status,2,c
 21955  0134DE  D7DE               	goto	l12719
 21956  0134E0  D7E2               	goto	l12721
 21957  0134E2                     l12727:
 21958                           
 21959                           ;My_ST7032.c: 121: st7032_state = ST7032_STOP;
 21960  0134E2  0E03               	movlw	3
 21961  0134E4  0101               	movlb	1	; () banked
 21962  0134E6  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 21963                           
 21964                           ; BSR set to: 1
 21965                           ;My_ST7032.c: 122: }
 21966                           ;My_ST7032.c: 123: break;
 21967  0134E8  0012               	return	
 21968  0134EA                     l12729:
 21969                           
 21970                           ; BSR set to: 1
 21971                           ;My_ST7032.c: 125: I2C_stop();
 21972  0134EA  EC8E  F0B7         	call	_I2C_stop	;wreg free
 21973                           
 21974                           ;My_ST7032.c: 126: st7032_state = ST7032_WAIT;
 21975  0134EE  0E04               	movlw	4
 21976  0134F0  0101               	movlb	1	; () banked
 21977  0134F2  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 21978                           
 21979                           ;My_ST7032.c: 127: break;
 21980  0134F4  0012               	return	
 21981  0134F6                     l12733:
 21982                           
 21983                           ; BSR set to: 1
 21984                           ;My_ST7032.c: 129: if (wait == 0) st7032_state = ST7032_IDLE;
 21985  0134F6  0101               	movlb	1	; () banked
 21986  0134F8  510C               	movf	ST7032_task@wait& (0+255),w,b
 21987  0134FA  0101               	movlb	1	; () banked
 21988  0134FC  110D               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
 21989  0134FE  A4D8               	btfss	status,2,c
 21990  013500  D004               	goto	l12737
 21991                           
 21992                           ; BSR set to: 1
 21993  013502  0E00               	movlw	0
 21994  013504  0101               	movlb	1	; () banked
 21995  013506  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 21996  013508  0012               	return	
 21997  01350A                     l12737:
 21998                           
 21999                           ; BSR set to: 1
 22000                           ;My_ST7032.c: 130: else wait--;
 22001  01350A  0101               	movlb	1	; () banked
 22002  01350C  070C               	decf	ST7032_task@wait& (0+255),f,b
 22003  01350E  A0D8               	btfss	status,0,c
 22004  013510  070D               	decf	(ST7032_task@wait+1)& (0+255),f,b
 22005                           
 22006                           ; BSR set to: 1
 22007                           ;My_ST7032.c: 132: }
 22008                           
 22009                           ; BSR set to: 1
 22010                           ;My_ST7032.c: 131: break;
 22011  013512  0012               	return	
 22012  013514                     l12741:
 22013  013514  0101               	movlb	1	; () banked
 22014  013516  5119               	movf	ST7032_task@st7032_state& (0+255),w,b
 22015                           
 22016                           ; Switch size 1, requested type "space"
 22017                           ; Number of cases is 5, Range of values is 0 to 4
 22018                           ; switch strategies available:
 22019                           ; Name         Instructions Cycles
 22020                           ; simple_byte           16     9 (average)
 22021                           ;	Chosen strategy is simple_byte
 22022  013518  0A00               	xorlw	0	; case 0
 22023  01351A  B4D8               	btfsc	status,2,c
 22024  01351C  D76D               	goto	l12689
 22025  01351E  0A01               	xorlw	1	; case 1
 22026  013520  B4D8               	btfsc	status,2,c
 22027  013522  D77C               	goto	l12693
 22028  013524  0A03               	xorlw	3	; case 2
 22029  013526  B4D8               	btfsc	status,2,c
 22030  013528  D781               	goto	l12699
 22031  01352A  0A01               	xorlw	1	; case 3
 22032  01352C  B4D8               	btfsc	status,2,c
 22033  01352E  D7DD               	goto	l12729
 22034  013530  0A07               	xorlw	7	; case 4
 22035  013532  A4D8               	btfss	status,2,c
 22036  013534  0012               	return	
 22037  013536  D7DF               	goto	l12733
 22038  013538                     __end_of_ST7032_task:
 22039                           	opt stack 0
 22040                           tblptru	equ	0xFF8
 22041                           tblptrh	equ	0xFF7
 22042                           tblptrl	equ	0xFF6
 22043                           tablat	equ	0xFF5
 22044                           prodh	equ	0xFF4
 22045                           prodl	equ	0xFF3
 22046                           intcon	equ	0xFF2
 22047                           intcon2	equ	0xFF1
 22048                           indf0	equ	0xFEF
 22049                           postinc0	equ	0xFEE
 22050                           fsr0h	equ	0xFEA
 22051                           fsr0l	equ	0xFE9
 22052                           wreg	equ	0xFE8
 22053                           indf1	equ	0xFE7
 22054                           postinc1	equ	0xFE6
 22055                           postdec1	equ	0xFE5
 22056                           fsr1h	equ	0xFE2
 22057                           fsr1l	equ	0xFE1
 22058                           indf2	equ	0xFDF
 22059                           postinc2	equ	0xFDE
 22060                           postdec2	equ	0xFDD
 22061                           plusw2	equ	0xFDB
 22062                           fsr2h	equ	0xFDA
 22063                           fsr2l	equ	0xFD9
 22064                           status	equ	0xFD8
 22065                           
 22066 ;; *************** function _ringbuf_pop *****************
 22067 ;; Defined at:
 22068 ;;		line 45 in file "../My_library/My_ringbuf.c"
 22069 ;; Parameters:    Size  Location     Type
 22070 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 22071 ;;		 -> usb_rx(8), usb_tx(8), uart_tx(8), terminal_task@command(8), 
 22072 ;;		 -> lcd_tx(8), 
 22073 ;; Auto vars:     Size  Location     Type
 22074 ;;  ret             1   14[BANK0 ] unsigned char 
 22075 ;; Return value:  Size  Location     Type
 22076 ;;                  1    wreg      unsigned char 
 22077 ;; Registers used:
 22078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22079 ;; Tracked objects:
 22080 ;;		On entry : 0/0
 22081 ;;		On exit  : 0/0
 22082 ;;		Unchanged: 0/0
 22083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22086 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22087 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22088 ;;Total ram usage:        7 bytes
 22089 ;; Hardware stack levels used:    1
 22090 ;; Hardware stack levels required when called:   13
 22091 ;; This function calls:
 22092 ;;		_ringbuf_num
 22093 ;; This function is called by:
 22094 ;;		_ST7032_task
 22095 ;;		_terminal_task
 22096 ;;		_USB_CDC_task
 22097 ;;		_UART_ISR
 22098 ;; This function uses a non-reentrant model
 22099 ;;
 22100                           
 22101                           	psect	text88
 22102  015146                     __ptext88:
 22103                           	opt stack 0
 22104  015146                     _ringbuf_pop:
 22105                           	opt stack 16
 22106                           
 22107                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 22108                           
 22109                           ;incstack = 0
 22110  015146  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 22111  01514A  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 22112  01514E  EC43  F0A2         	call	_ringbuf_num	;wreg free
 22113  015152  0100               	movlb	0	; () banked
 22114  015154  5160               	movf	?_ringbuf_num& (0+255),w,b
 22115  015156  0100               	movlb	0	; () banked
 22116  015158  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 22117  01515A  B4D8               	btfsc	status,2,c
 22118  01515C  D058               	goto	l12275
 22119                           
 22120                           ; BSR set to: 0
 22121                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 22122  01515E  0100               	movlb	0	; () banked
 22123  015160  EE20 F006          	lfsr	2,6
 22124  015164  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22125  015166  26D9               	addwf	fsr2l,f,c
 22126  015168  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22127  01516A  22DA               	addwfc	fsr2h,f,c
 22128  01516C  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 22129  015170  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 22130  015174  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 22131  015178  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 22132  01517C  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 22133  015180  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 22134  015184  0100               	movlb	0	; () banked
 22135  015186  516A               	movf	??_ringbuf_pop& (0+255),w,b
 22136  015188  0100               	movlb	0	; () banked
 22137  01518A  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 22138  01518C  6ED9               	movwf	fsr2l,c
 22139  01518E  0100               	movlb	0	; () banked
 22140  015190  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 22141  015192  0100               	movlb	0	; () banked
 22142  015194  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 22143  015196  6EDA               	movwf	fsr2h,c
 22144  015198  50DF               	movf	indf2,w,c
 22145  01519A  0100               	movlb	0	; () banked
 22146  01519C  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 22147                           
 22148                           ; BSR set to: 0
 22149                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 22150  01519E  0100               	movlb	0	; () banked
 22151  0151A0  EE20 F002          	lfsr	2,2
 22152  0151A4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22153  0151A6  26D9               	addwf	fsr2l,f,c
 22154  0151A8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22155  0151AA  22DA               	addwfc	fsr2h,f,c
 22156  0151AC  0100               	movlb	0	; () banked
 22157  0151AE  EE10 F006          	lfsr	1,6
 22158  0151B2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22159  0151B4  26E1               	addwf	fsr1l,f,c
 22160  0151B6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22161  0151B8  22E2               	addwfc	fsr1h,f,c
 22162  0151BA  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 22163  0151BE  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 22164  0151C2  0E01               	movlw	1
 22165  0151C4  0100               	movlb	0	; () banked
 22166  0151C6  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 22167  0151C8  0E00               	movlw	0
 22168  0151CA  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 22169  0151CC  50DE               	movf	postinc2,w,c
 22170  0151CE  0100               	movlb	0	; () banked
 22171  0151D0  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 22172  0151D2  50DE               	movf	postinc2,w,c
 22173  0151D4  0100               	movlb	0	; () banked
 22174  0151D6  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 22175  0151D8  B0D8               	btfsc	status,0,c
 22176  0151DA  D00B               	goto	l12267
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;My_ringbuf.c: 49: rb->tail++;
 22180  0151DC  0100               	movlb	0	; () banked
 22181  0151DE  EE20 F006          	lfsr	2,6
 22182  0151E2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22183  0151E4  26D9               	addwf	fsr2l,f,c
 22184  0151E6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22185  0151E8  22DA               	addwfc	fsr2h,f,c
 22186  0151EA  2ADE               	incf	postinc2,f,c
 22187  0151EC  0E00               	movlw	0
 22188  0151EE  22DD               	addwfc	postdec2,f,c
 22189                           
 22190                           ;My_ringbuf.c: 50: } else {
 22191  0151F0  D00B               	goto	l12269
 22192  0151F2                     l12267:
 22193                           
 22194                           ; BSR set to: 0
 22195                           ;My_ringbuf.c: 51: rb->tail = 0;
 22196  0151F2  0100               	movlb	0	; () banked
 22197  0151F4  EE20 F006          	lfsr	2,6
 22198  0151F8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22199  0151FA  26D9               	addwf	fsr2l,f,c
 22200  0151FC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22201  0151FE  22DA               	addwfc	fsr2h,f,c
 22202  015200  0E00               	movlw	0
 22203  015202  6EDE               	movwf	postinc2,c
 22204  015204  0E00               	movlw	0
 22205  015206  6EDD               	movwf	postdec2,c
 22206  015208                     l12269:
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;My_ringbuf.c: 52: }
 22210                           ;My_ringbuf.c: 53: return ret;
 22211  015208  0100               	movlb	0	; () banked
 22212  01520A  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 22213                           
 22214                           ; BSR set to: 0
 22215                           ;My_ringbuf.c: 54: } else {
 22216                           
 22217                           ; BSR set to: 0
 22218  01520C  0012               	return	
 22219  01520E                     l12275:
 22220                           
 22221                           ; BSR set to: 0
 22222                           ;My_ringbuf.c: 55: return 0;
 22223  01520E  0E00               	movlw	0
 22224                           
 22225                           ; BSR set to: 0
 22226  015210  0012               	return	
 22227  015212                     __end_of_ringbuf_pop:
 22228                           	opt stack 0
 22229                           tblptru	equ	0xFF8
 22230                           tblptrh	equ	0xFF7
 22231                           tblptrl	equ	0xFF6
 22232                           tablat	equ	0xFF5
 22233                           prodh	equ	0xFF4
 22234                           prodl	equ	0xFF3
 22235                           intcon	equ	0xFF2
 22236                           intcon2	equ	0xFF1
 22237                           indf0	equ	0xFEF
 22238                           postinc0	equ	0xFEE
 22239                           fsr0h	equ	0xFEA
 22240                           fsr0l	equ	0xFE9
 22241                           wreg	equ	0xFE8
 22242                           indf1	equ	0xFE7
 22243                           postinc1	equ	0xFE6
 22244                           postdec1	equ	0xFE5
 22245                           fsr1h	equ	0xFE2
 22246                           fsr1l	equ	0xFE1
 22247                           indf2	equ	0xFDF
 22248                           postinc2	equ	0xFDE
 22249                           postdec2	equ	0xFDD
 22250                           plusw2	equ	0xFDB
 22251                           fsr2h	equ	0xFDA
 22252                           fsr2l	equ	0xFD9
 22253                           status	equ	0xFD8
 22254                           
 22255 ;; *************** function _ringbuf_num *****************
 22256 ;; Defined at:
 22257 ;;		line 12 in file "../My_library/My_ringbuf.c"
 22258 ;; Parameters:    Size  Location     Type
 22259 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 22260 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
 22261 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 22262 ;; Auto vars:     Size  Location     Type
 22263 ;;		None
 22264 ;; Return value:  Size  Location     Type
 22265 ;;                  2    0[BANK0 ] unsigned int 
 22266 ;; Registers used:
 22267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22268 ;; Tracked objects:
 22269 ;;		On entry : 0/0
 22270 ;;		On exit  : 0/0
 22271 ;;		Unchanged: 0/0
 22272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22275 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22276 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22277 ;;Total ram usage:        8 bytes
 22278 ;; Hardware stack levels used:    1
 22279 ;; Hardware stack levels required when called:   12
 22280 ;; This function calls:
 22281 ;;		Nothing
 22282 ;; This function is called by:
 22283 ;;		_ringbuf_put
 22284 ;;		_ringbuf_pop
 22285 ;;		_ringbuf_backspace
 22286 ;;		_ST7032_task
 22287 ;;		_terminal_task
 22288 ;;		_USB_CDC_task
 22289 ;;		_UART_ISR
 22290 ;;		_UART_task
 22291 ;; This function uses a non-reentrant model
 22292 ;;
 22293                           
 22294                           	psect	text89
 22295  014486                     __ptext89:
 22296                           	opt stack 0
 22297  014486                     _ringbuf_num:
 22298                           	opt stack 12
 22299                           
 22300                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 22301                           
 22302                           ; BSR set to: 0
 22303                           ;incstack = 0
 22304  014486  0100               	movlb	0	; () banked
 22305  014488  EE20 F006          	lfsr	2,6
 22306  01448C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22307  01448E  26D9               	addwf	fsr2l,f,c
 22308  014490  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22309  014492  22DA               	addwfc	fsr2h,f,c
 22310  014494  0100               	movlb	0	; () banked
 22311  014496  EE10 F004          	lfsr	1,4
 22312  01449A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22313  01449C  26E1               	addwf	fsr1l,f,c
 22314  01449E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22315  0144A0  22E2               	addwfc	fsr1h,f,c
 22316  0144A2  50DE               	movf	postinc2,w,c
 22317  0144A4  5CE6               	subwf	postinc1,w,c
 22318  0144A6  50DE               	movf	postinc2,w,c
 22319  0144A8  58E6               	subwfb	postinc1,w,c
 22320  0144AA  A0D8               	btfss	status,0,c
 22321  0144AC  D028               	goto	l10699
 22322                           
 22323                           ; BSR set to: 0
 22324                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 22325  0144AE  0100               	movlb	0	; () banked
 22326  0144B0  EE20 F004          	lfsr	2,4
 22327  0144B4  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22328  0144B6  26D9               	addwf	fsr2l,f,c
 22329  0144B8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22330  0144BA  22DA               	addwfc	fsr2h,f,c
 22331  0144BC  CFDE F062          	movff	postinc2,??_ringbuf_num
 22332  0144C0  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22333  0144C4  0100               	movlb	0	; () banked
 22334  0144C6  EE20 F006          	lfsr	2,6
 22335  0144CA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22336  0144CC  26D9               	addwf	fsr2l,f,c
 22337  0144CE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22338  0144D0  22DA               	addwfc	fsr2h,f,c
 22339  0144D2  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22340  0144D6  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22341  0144DA  0100               	movlb	0	; () banked
 22342  0144DC  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 22343  0144DE  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 22344  0144E0  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 22345  0144E2  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 22346  0144E4  0100               	movlb	0	; () banked
 22347  0144E6  5162               	movf	??_ringbuf_num& (0+255),w,b
 22348  0144E8  0100               	movlb	0	; () banked
 22349  0144EA  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 22350  0144EC  0100               	movlb	0	; () banked
 22351  0144EE  6F60               	movwf	?_ringbuf_num& (0+255),b
 22352  0144F0  0100               	movlb	0	; () banked
 22353  0144F2  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22354  0144F4  0100               	movlb	0	; () banked
 22355  0144F6  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 22356  0144F8  0100               	movlb	0	; () banked
 22357  0144FA  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22358                           
 22359                           ; BSR set to: 0
 22360                           ;My_ringbuf.c: 15: } else {
 22361                           
 22362                           ; BSR set to: 0
 22363  0144FC  0012               	return	
 22364  0144FE                     l10699:
 22365                           
 22366                           ; BSR set to: 0
 22367                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 22368  0144FE  0100               	movlb	0	; () banked
 22369  014500  EE20 F004          	lfsr	2,4
 22370  014504  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22371  014506  26D9               	addwf	fsr2l,f,c
 22372  014508  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22373  01450A  22DA               	addwfc	fsr2h,f,c
 22374  01450C  CFDE F062          	movff	postinc2,??_ringbuf_num
 22375  014510  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22376  014514  0100               	movlb	0	; () banked
 22377  014516  EE20 F002          	lfsr	2,2
 22378  01451A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22379  01451C  26D9               	addwf	fsr2l,f,c
 22380  01451E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22381  014520  22DA               	addwfc	fsr2h,f,c
 22382  014522  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22383  014526  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22384  01452A  0100               	movlb	0	; () banked
 22385  01452C  EE20 F006          	lfsr	2,6
 22386  014530  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22387  014532  26D9               	addwf	fsr2l,f,c
 22388  014534  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22389  014536  22DA               	addwfc	fsr2h,f,c
 22390  014538  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 22391  01453C  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 22392  014540  0100               	movlb	0	; () banked
 22393  014542  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 22394  014544  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 22395  014546  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 22396  014548  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 22397  01454A  0100               	movlb	0	; () banked
 22398  01454C  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 22399  01454E  0100               	movlb	0	; () banked
 22400  014550  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 22401  014552  0100               	movlb	0	; () banked
 22402  014554  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 22403  014556  0100               	movlb	0	; () banked
 22404  014558  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 22405  01455A  0100               	movlb	0	; () banked
 22406  01455C  5162               	movf	??_ringbuf_num& (0+255),w,b
 22407  01455E  0100               	movlb	0	; () banked
 22408  014560  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 22409  014562  0100               	movlb	0	; () banked
 22410  014564  6F60               	movwf	?_ringbuf_num& (0+255),b
 22411  014566  0100               	movlb	0	; () banked
 22412  014568  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22413  01456A  0100               	movlb	0	; () banked
 22414  01456C  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 22415  01456E  0100               	movlb	0	; () banked
 22416  014570  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22417                           
 22418                           ; BSR set to: 0
 22419  014572  0012               	return	
 22420  014574                     __end_of_ringbuf_num:
 22421                           	opt stack 0
 22422                           tblptru	equ	0xFF8
 22423                           tblptrh	equ	0xFF7
 22424                           tblptrl	equ	0xFF6
 22425                           tablat	equ	0xFF5
 22426                           prodh	equ	0xFF4
 22427                           prodl	equ	0xFF3
 22428                           intcon	equ	0xFF2
 22429                           intcon2	equ	0xFF1
 22430                           indf0	equ	0xFEF
 22431                           postinc0	equ	0xFEE
 22432                           fsr0h	equ	0xFEA
 22433                           fsr0l	equ	0xFE9
 22434                           wreg	equ	0xFE8
 22435                           indf1	equ	0xFE7
 22436                           postinc1	equ	0xFE6
 22437                           postdec1	equ	0xFE5
 22438                           fsr1h	equ	0xFE2
 22439                           fsr1l	equ	0xFE1
 22440                           indf2	equ	0xFDF
 22441                           postinc2	equ	0xFDE
 22442                           postdec2	equ	0xFDD
 22443                           plusw2	equ	0xFDB
 22444                           fsr2h	equ	0xFDA
 22445                           fsr2l	equ	0xFD9
 22446                           status	equ	0xFD8
 22447                           
 22448 ;; *************** function _I2C_stop *****************
 22449 ;; Defined at:
 22450 ;;		line 19 in file "../My_library/My_I2C.c"
 22451 ;; Parameters:    Size  Location     Type
 22452 ;;		None
 22453 ;; Auto vars:     Size  Location     Type
 22454 ;;		None
 22455 ;; Return value:  Size  Location     Type
 22456 ;;		None               void
 22457 ;; Registers used:
 22458 ;;		None
 22459 ;; Tracked objects:
 22460 ;;		On entry : 0/0
 22461 ;;		On exit  : 0/0
 22462 ;;		Unchanged: 0/0
 22463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22468 ;;Total ram usage:        0 bytes
 22469 ;; Hardware stack levels used:    1
 22470 ;; Hardware stack levels required when called:   12
 22471 ;; This function calls:
 22472 ;;		Nothing
 22473 ;; This function is called by:
 22474 ;;		_ST7032_task
 22475 ;; This function uses a non-reentrant model
 22476 ;;
 22477                           
 22478                           	psect	text90
 22479  016F1C                     __ptext90:
 22480                           	opt stack 0
 22481  016F1C                     _I2C_stop:
 22482                           	opt stack 17
 22483                           
 22484                           ;My_I2C.c: 20: SSP1CON2bits.PEN = 1;
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;incstack = 0
 22488  016F1C  84C5               	bsf	4037,2,c	;volatile
 22489  016F1E  0012               	return		;funcret
 22490  016F20                     __end_of_I2C_stop:
 22491                           	opt stack 0
 22492                           tblptru	equ	0xFF8
 22493                           tblptrh	equ	0xFF7
 22494                           tblptrl	equ	0xFF6
 22495                           tablat	equ	0xFF5
 22496                           prodh	equ	0xFF4
 22497                           prodl	equ	0xFF3
 22498                           intcon	equ	0xFF2
 22499                           intcon2	equ	0xFF1
 22500                           indf0	equ	0xFEF
 22501                           postinc0	equ	0xFEE
 22502                           fsr0h	equ	0xFEA
 22503                           fsr0l	equ	0xFE9
 22504                           wreg	equ	0xFE8
 22505                           indf1	equ	0xFE7
 22506                           postinc1	equ	0xFE6
 22507                           postdec1	equ	0xFE5
 22508                           fsr1h	equ	0xFE2
 22509                           fsr1l	equ	0xFE1
 22510                           indf2	equ	0xFDF
 22511                           postinc2	equ	0xFDE
 22512                           postdec2	equ	0xFDD
 22513                           plusw2	equ	0xFDB
 22514                           fsr2h	equ	0xFDA
 22515                           fsr2l	equ	0xFD9
 22516                           status	equ	0xFD8
 22517                           
 22518 ;; *************** function _I2C_start *****************
 22519 ;; Defined at:
 22520 ;;		line 11 in file "../My_library/My_I2C.c"
 22521 ;; Parameters:    Size  Location     Type
 22522 ;;		None
 22523 ;; Auto vars:     Size  Location     Type
 22524 ;;		None
 22525 ;; Return value:  Size  Location     Type
 22526 ;;		None               void
 22527 ;; Registers used:
 22528 ;;		None
 22529 ;; Tracked objects:
 22530 ;;		On entry : 0/0
 22531 ;;		On exit  : 0/0
 22532 ;;		Unchanged: 0/0
 22533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22538 ;;Total ram usage:        0 bytes
 22539 ;; Hardware stack levels used:    1
 22540 ;; Hardware stack levels required when called:   12
 22541 ;; This function calls:
 22542 ;;		Nothing
 22543 ;; This function is called by:
 22544 ;;		_ST7032_task
 22545 ;; This function uses a non-reentrant model
 22546 ;;
 22547                           
 22548                           	psect	text91
 22549  016F20                     __ptext91:
 22550                           	opt stack 0
 22551  016F20                     _I2C_start:
 22552                           	opt stack 17
 22553                           
 22554                           ;My_I2C.c: 12: SSP1CON2bits.SEN = 1;
 22555                           
 22556                           ;incstack = 0
 22557  016F20  80C5               	bsf	4037,0,c	;volatile
 22558  016F22  0012               	return		;funcret
 22559  016F24                     __end_of_I2C_start:
 22560                           	opt stack 0
 22561                           tblptru	equ	0xFF8
 22562                           tblptrh	equ	0xFF7
 22563                           tblptrl	equ	0xFF6
 22564                           tablat	equ	0xFF5
 22565                           prodh	equ	0xFF4
 22566                           prodl	equ	0xFF3
 22567                           intcon	equ	0xFF2
 22568                           intcon2	equ	0xFF1
 22569                           indf0	equ	0xFEF
 22570                           postinc0	equ	0xFEE
 22571                           fsr0h	equ	0xFEA
 22572                           fsr0l	equ	0xFE9
 22573                           wreg	equ	0xFE8
 22574                           indf1	equ	0xFE7
 22575                           postinc1	equ	0xFE6
 22576                           postdec1	equ	0xFE5
 22577                           fsr1h	equ	0xFE2
 22578                           fsr1l	equ	0xFE1
 22579                           indf2	equ	0xFDF
 22580                           postinc2	equ	0xFDE
 22581                           postdec2	equ	0xFDD
 22582                           plusw2	equ	0xFDB
 22583                           fsr2h	equ	0xFDA
 22584                           fsr2l	equ	0xFD9
 22585                           status	equ	0xFD8
 22586                           
 22587 ;; *************** function _I2C_send *****************
 22588 ;; Defined at:
 22589 ;;		line 23 in file "../My_library/My_I2C.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;  data            1    wreg     unsigned char 
 22592 ;; Auto vars:     Size  Location     Type
 22593 ;;  data            1    0[BANK0 ] unsigned char 
 22594 ;; Return value:  Size  Location     Type
 22595 ;;		None               void
 22596 ;; Registers used:
 22597 ;;		wreg
 22598 ;; Tracked objects:
 22599 ;;		On entry : 0/0
 22600 ;;		On exit  : 0/0
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22606 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22607 ;;Total ram usage:        1 bytes
 22608 ;; Hardware stack levels used:    1
 22609 ;; Hardware stack levels required when called:   12
 22610 ;; This function calls:
 22611 ;;		Nothing
 22612 ;; This function is called by:
 22613 ;;		_ST7032_task
 22614 ;; This function uses a non-reentrant model
 22615 ;;
 22616                           
 22617                           	psect	text92
 22618  016F06                     __ptext92:
 22619                           	opt stack 0
 22620  016F06                     _I2C_send:
 22621                           	opt stack 17
 22622                           
 22623                           ;incstack = 0
 22624                           ;I2C_send@data stored from wreg
 22625  016F06  0100               	movlb	0	; () banked
 22626  016F08  6F60               	movwf	I2C_send@data& (0+255),b
 22627                           
 22628                           ;My_I2C.c: 24: SSPBUF = data;
 22629  016F0A  C060  FFC9         	movff	I2C_send@data,4041	;volatile
 22630  016F0E  0012               	return		;funcret
 22631  016F10                     __end_of_I2C_send:
 22632                           	opt stack 0
 22633                           tblptru	equ	0xFF8
 22634                           tblptrh	equ	0xFF7
 22635                           tblptrl	equ	0xFF6
 22636                           tablat	equ	0xFF5
 22637                           prodh	equ	0xFF4
 22638                           prodl	equ	0xFF3
 22639                           intcon	equ	0xFF2
 22640                           intcon2	equ	0xFF1
 22641                           indf0	equ	0xFEF
 22642                           postinc0	equ	0xFEE
 22643                           fsr0h	equ	0xFEA
 22644                           fsr0l	equ	0xFE9
 22645                           wreg	equ	0xFE8
 22646                           indf1	equ	0xFE7
 22647                           postinc1	equ	0xFE6
 22648                           postdec1	equ	0xFE5
 22649                           fsr1h	equ	0xFE2
 22650                           fsr1l	equ	0xFE1
 22651                           indf2	equ	0xFDF
 22652                           postinc2	equ	0xFDE
 22653                           postdec2	equ	0xFDD
 22654                           plusw2	equ	0xFDB
 22655                           fsr2h	equ	0xFDA
 22656                           fsr2l	equ	0xFD9
 22657                           status	equ	0xFD8
 22658                           
 22659 ;; *************** function _I2C_idle_check *****************
 22660 ;; Defined at:
 22661 ;;		line 7 in file "../My_library/My_I2C.c"
 22662 ;; Parameters:    Size  Location     Type
 22663 ;;  mask            1    wreg     unsigned char 
 22664 ;; Auto vars:     Size  Location     Type
 22665 ;;  mask            1    1[BANK0 ] unsigned char 
 22666 ;; Return value:  Size  Location     Type
 22667 ;;                  1    wreg      unsigned char 
 22668 ;; Registers used:
 22669 ;;		wreg, status,2, status,0
 22670 ;; Tracked objects:
 22671 ;;		On entry : 0/0
 22672 ;;		On exit  : 0/0
 22673 ;;		Unchanged: 0/0
 22674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22678 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22679 ;;Total ram usage:        2 bytes
 22680 ;; Hardware stack levels used:    1
 22681 ;; Hardware stack levels required when called:   12
 22682 ;; This function calls:
 22683 ;;		Nothing
 22684 ;; This function is called by:
 22685 ;;		_ST7032_task
 22686 ;; This function uses a non-reentrant model
 22687 ;;
 22688                           
 22689                           	psect	text93
 22690  016EBE                     __ptext93:
 22691                           	opt stack 0
 22692  016EBE                     _I2C_idle_check:
 22693                           	opt stack 17
 22694                           
 22695                           ;incstack = 0
 22696                           ;I2C_idle_check@mask stored from wreg
 22697  016EBE  0100               	movlb	0	; () banked
 22698  016EC0  6F61               	movwf	I2C_idle_check@mask& (0+255),b
 22699                           
 22700                           ;My_I2C.c: 8: return ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
 22701  016EC2  50C7               	movf	4039,w,c	;volatile
 22702  016EC4  0100               	movlb	0	; () banked
 22703  016EC6  1561               	andwf	I2C_idle_check@mask& (0+255),w,b
 22704  016EC8  0100               	movlb	0	; () banked
 22705  016ECA  6F60               	movwf	??_I2C_idle_check& (0+255),b
 22706  016ECC  50C5               	movf	4037,w,c	;volatile
 22707  016ECE  0B1F               	andlw	31
 22708  016ED0  0100               	movlb	0	; () banked
 22709  016ED2  1160               	iorwf	??_I2C_idle_check& (0+255),w,b
 22710  016ED4  0012               	return	
 22711  016ED6                     __end_of_I2C_idle_check:
 22712                           	opt stack 0
 22713                           tblptru	equ	0xFF8
 22714                           tblptrh	equ	0xFF7
 22715                           tblptrl	equ	0xFF6
 22716                           tablat	equ	0xFF5
 22717                           prodh	equ	0xFF4
 22718                           prodl	equ	0xFF3
 22719                           intcon	equ	0xFF2
 22720                           intcon2	equ	0xFF1
 22721                           indf0	equ	0xFEF
 22722                           postinc0	equ	0xFEE
 22723                           fsr0h	equ	0xFEA
 22724                           fsr0l	equ	0xFE9
 22725                           wreg	equ	0xFE8
 22726                           indf1	equ	0xFE7
 22727                           postinc1	equ	0xFE6
 22728                           postdec1	equ	0xFE5
 22729                           fsr1h	equ	0xFE2
 22730                           fsr1l	equ	0xFE1
 22731                           indf2	equ	0xFDF
 22732                           postinc2	equ	0xFDE
 22733                           postdec2	equ	0xFDD
 22734                           plusw2	equ	0xFDB
 22735                           fsr2h	equ	0xFDA
 22736                           fsr2l	equ	0xFD9
 22737                           status	equ	0xFD8
 22738                           
 22739 ;; *************** function _RTCC_task *****************
 22740 ;; Defined at:
 22741 ;;		line 38 in file "../My_library/My_RTCC.c"
 22742 ;; Parameters:    Size  Location     Type
 22743 ;;		None
 22744 ;; Auto vars:     Size  Location     Type
 22745 ;;		None
 22746 ;; Return value:  Size  Location     Type
 22747 ;;		None               void
 22748 ;; Registers used:
 22749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22750 ;; Tracked objects:
 22751 ;;		On entry : 0/0
 22752 ;;		On exit  : 0/0
 22753 ;;		Unchanged: 0/0
 22754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22759 ;;Total ram usage:        0 bytes
 22760 ;; Hardware stack levels used:    1
 22761 ;; Hardware stack levels required when called:   16
 22762 ;; This function calls:
 22763 ;;		_RTCC_from_RTCC
 22764 ;; This function is called by:
 22765 ;;		_main
 22766 ;; This function uses a non-reentrant model
 22767 ;;
 22768                           
 22769                           	psect	text94
 22770  016A3A                     __ptext94:
 22771                           	opt stack 0
 22772  016A3A                     _RTCC_task:
 22773                           	opt stack 14
 22774                           
 22775                           ;My_RTCC.c: 39: static uint8_t prev_halfsec;
 22776                           ;My_RTCC.c: 40: if (RTCCFGbits.RTCSYNC)return;
 22777                           
 22778                           ; BSR set to: 0
 22779                           ;incstack = 0
 22780  016A3A  010F               	movlb	15	; () banked
 22781  016A3C  B93F               	btfsc	63,4,b	;volatile
 22782  016A3E  0012               	return	
 22783                           
 22784                           ; BSR set to: 15
 22785                           ;My_RTCC.c: 41: now.halfsec = RTCCFGbits.HALFSEC;
 22786                           
 22787                           ; BSR set to: 15
 22788                           
 22789                           ; BSR set to: 15
 22790  016A40  0E00               	movlw	0
 22791  016A42  B73F               	btfsc	63,3,b	;volatile
 22792  016A44  0E01               	movlw	1
 22793  016A46  0101               	movlb	1	; () banked
 22794  016A48  6F7F               	movwf	(_now+12)& (0+255),b
 22795                           
 22796                           ; BSR set to: 1
 22797                           ;My_RTCC.c: 42: if (prev_halfsec != now.halfsec) {
 22798  016A4A  0101               	movlb	1	; () banked
 22799  016A4C  5118               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 22800  016A4E  0101               	movlb	1	; () banked
 22801  016A50  197F               	xorwf	(_now+12)& (0+255),w,b
 22802  016A52  B4D8               	btfsc	status,2,c
 22803  016A54  0012               	return	
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;My_RTCC.c: 43: prev_halfsec = now.halfsec;
 22807  016A56  C17F  F118         	movff	_now+12,RTCC_task@prev_halfsec
 22808                           
 22809                           ;My_RTCC.c: 44: now.colon = now.halfsec;
 22810  016A5A  C17F  F17E         	movff	_now+12,_now+11
 22811                           
 22812                           ; BSR set to: 1
 22813                           ;My_RTCC.c: 45: time_change_flag = 1;
 22814  016A5E  0E01               	movlw	1
 22815  016A60  6E22               	movwf	_time_change_flag,c
 22816                           
 22817                           ; BSR set to: 1
 22818                           ;My_RTCC.c: 46: RTCC_from_RTCC(&now);
 22819  016A62  0E73               	movlw	low _now
 22820  016A64  0100               	movlb	0	; () banked
 22821  016A66  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22822  016A68  0E01               	movlw	high _now
 22823  016A6A  0100               	movlb	0	; () banked
 22824  016A6C  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22825  016A6E  EC52  F0B7         	call	_RTCC_from_RTCC	;wreg free
 22826  016A72  0012               	return	
 22827  016A74                     __end_of_RTCC_task:
 22828                           	opt stack 0
 22829                           tblptru	equ	0xFF8
 22830                           tblptrh	equ	0xFF7
 22831                           tblptrl	equ	0xFF6
 22832                           tablat	equ	0xFF5
 22833                           prodh	equ	0xFF4
 22834                           prodl	equ	0xFF3
 22835                           intcon	equ	0xFF2
 22836                           intcon2	equ	0xFF1
 22837                           indf0	equ	0xFEF
 22838                           postinc0	equ	0xFEE
 22839                           fsr0h	equ	0xFEA
 22840                           fsr0l	equ	0xFE9
 22841                           wreg	equ	0xFE8
 22842                           indf1	equ	0xFE7
 22843                           postinc1	equ	0xFE6
 22844                           postdec1	equ	0xFE5
 22845                           fsr1h	equ	0xFE2
 22846                           fsr1l	equ	0xFE1
 22847                           indf2	equ	0xFDF
 22848                           postinc2	equ	0xFDE
 22849                           postdec2	equ	0xFDD
 22850                           plusw2	equ	0xFDB
 22851                           fsr2h	equ	0xFDA
 22852                           fsr2l	equ	0xFD9
 22853                           status	equ	0xFD8
 22854                           
 22855 ;; *************** function _RTCC_from_RTCC *****************
 22856 ;; Defined at:
 22857 ;;		line 52 in file "../My_library/My_RTCC.c"
 22858 ;; Parameters:    Size  Location     Type
 22859 ;;  tm              2   38[BANK0 ] PTR struct .
 22860 ;;		 -> now(14), 
 22861 ;; Auto vars:     Size  Location     Type
 22862 ;;		None
 22863 ;; Return value:  Size  Location     Type
 22864 ;;		None               void
 22865 ;; Registers used:
 22866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22867 ;; Tracked objects:
 22868 ;;		On entry : 0/0
 22869 ;;		On exit  : 0/0
 22870 ;;		Unchanged: 0/0
 22871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22875 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22876 ;;Total ram usage:        2 bytes
 22877 ;; Hardware stack levels used:    1
 22878 ;; Hardware stack levels required when called:   15
 22879 ;; This function calls:
 22880 ;;		_RTCC_to_caltime
 22881 ;;		_caltime_to_epoch
 22882 ;; This function is called by:
 22883 ;;		_RTCC_init
 22884 ;;		_RTCC_task
 22885 ;;		_display_time_1602
 22886 ;;		_RTCC_adjust_time_inc
 22887 ;;		_RTCC_adjust_time_dec
 22888 ;;		_print_time
 22889 ;;		_display_time_0802
 22890 ;; This function uses a non-reentrant model
 22891 ;;
 22892                           
 22893                           	psect	text95
 22894  016EA4                     __ptext95:
 22895                           	opt stack 0
 22896  016EA4                     _RTCC_from_RTCC:
 22897                           	opt stack 10
 22898                           
 22899                           ;My_RTCC.c: 53: RTCC_to_caltime(tm);
 22900                           
 22901                           ;incstack = 0
 22902  016EA4  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22903  016EA8  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22904  016EAC  ECAF  F0AB         	call	_RTCC_to_caltime	;wreg free
 22905                           
 22906                           ;My_RTCC.c: 54: caltime_to_epoch(tm);
 22907  016EB0  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22908  016EB4  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22909  016EB8  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
 22910  016EBC  0012               	return		;funcret
 22911  016EBE                     __end_of_RTCC_from_RTCC:
 22912                           	opt stack 0
 22913                           tblptru	equ	0xFF8
 22914                           tblptrh	equ	0xFF7
 22915                           tblptrl	equ	0xFF6
 22916                           tablat	equ	0xFF5
 22917                           prodh	equ	0xFF4
 22918                           prodl	equ	0xFF3
 22919                           intcon	equ	0xFF2
 22920                           intcon2	equ	0xFF1
 22921                           indf0	equ	0xFEF
 22922                           postinc0	equ	0xFEE
 22923                           fsr0h	equ	0xFEA
 22924                           fsr0l	equ	0xFE9
 22925                           wreg	equ	0xFE8
 22926                           indf1	equ	0xFE7
 22927                           postinc1	equ	0xFE6
 22928                           postdec1	equ	0xFE5
 22929                           fsr1h	equ	0xFE2
 22930                           fsr1l	equ	0xFE1
 22931                           indf2	equ	0xFDF
 22932                           postinc2	equ	0xFDE
 22933                           postdec2	equ	0xFDD
 22934                           plusw2	equ	0xFDB
 22935                           fsr2h	equ	0xFDA
 22936                           fsr2l	equ	0xFD9
 22937                           status	equ	0xFD8
 22938                           
 22939 ;; *************** function _caltime_to_epoch *****************
 22940 ;; Defined at:
 22941 ;;		line 343 in file "../My_library/My_RTCC.c"
 22942 ;; Parameters:    Size  Location     Type
 22943 ;;  tm              2   25[BANK0 ] PTR struct .
 22944 ;;		 -> now(14), 
 22945 ;; Auto vars:     Size  Location     Type
 22946 ;;  month           1   37[BANK0 ] unsigned char 
 22947 ;;  month           1   32[BANK0 ] unsigned char 
 22948 ;;  year            1   31[BANK0 ] unsigned char 
 22949 ;;  epoch           4   33[BANK0 ] unsigned long 
 22950 ;; Return value:  Size  Location     Type
 22951 ;;		None               void
 22952 ;; Registers used:
 22953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22954 ;; Tracked objects:
 22955 ;;		On entry : 0/0
 22956 ;;		On exit  : 0/0
 22957 ;;		Unchanged: 0/0
 22958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22959 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22960 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22961 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22962 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22963 ;;Total ram usage:       13 bytes
 22964 ;; Hardware stack levels used:    1
 22965 ;; Hardware stack levels required when called:   14
 22966 ;; This function calls:
 22967 ;;		___lmul
 22968 ;;		_month_length
 22969 ;; This function is called by:
 22970 ;;		_RTCC_from_RTCC
 22971 ;;		_RTCC_from_caltime
 22972 ;; This function uses a non-reentrant model
 22973 ;;
 22974                           
 22975                           	psect	text96
 22976  011BB6                     __ptext96:
 22977                           	opt stack 0
 22978  011BB6                     _caltime_to_epoch:
 22979                           	opt stack 10
 22980                           
 22981                           ;My_RTCC.c: 344: epoch_t epoch = 0;
 22982                           
 22983                           ;incstack = 0
 22984  011BB6  0E00               	movlw	0
 22985  011BB8  0100               	movlb	0	; () banked
 22986  011BBA  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22987  011BBC  0E00               	movlw	0
 22988  011BBE  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22989  011BC0  0E00               	movlw	0
 22990  011BC2  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22991  011BC4  0E00               	movlw	0
 22992  011BC6  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22993                           
 22994                           ;My_RTCC.c: 345: for (uint8_t year = 0; year < tm->YY; year++) {
 22995  011BC8  0E00               	movlw	0
 22996  011BCA  0100               	movlb	0	; () banked
 22997  011BCC  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22998  011BCE  D037               	goto	l10827
 22999  011BD0                     l10813:
 23000                           
 23001                           ; BSR set to: 0
 23002                           ;My_RTCC.c: 346: for (uint8_t month = 1; month <= 12; month++) {
 23003  011BD0  0E01               	movlw	1
 23004  011BD2  0100               	movlb	0	; () banked
 23005  011BD4  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 23006  011BD6                     l10815:
 23007                           
 23008                           ; BSR set to: 0
 23009  011BD6  0E0C               	movlw	12
 23010  011BD8  0100               	movlb	0	; () banked
 23011  011BDA  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 23012  011BDC  D001               	goto	l10819
 23013  011BDE  D02D               	goto	l10825
 23014  011BE0                     l10819:
 23015                           
 23016                           ; BSR set to: 0
 23017                           ;My_RTCC.c: 347: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 23018  011BE0  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 23019  011BE4  0100               	movlb	0	; () banked
 23020  011BE6  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 23021  011BE8  EC7E  F0A4         	call	_month_length
 23022  011BEC  0100               	movlb	0	; () banked
 23023  011BEE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23024  011BF0  0100               	movlb	0	; () banked
 23025  011BF2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23026  011BF4  0100               	movlb	0	; () banked
 23027  011BF6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23028  011BF8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23029  011BFA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23030  011BFC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23031  011BFE  0E80               	movlw	128
 23032  011C00  0100               	movlb	0	; () banked
 23033  011C02  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23034  011C04  0E51               	movlw	81
 23035  011C06  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23036  011C08  0E01               	movlw	1
 23037  011C0A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23038  011C0C  0E00               	movlw	0
 23039  011C0E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23040  011C10  EC19  F0B0         	call	___lmul	;wreg free
 23041  011C14  0100               	movlb	0	; () banked
 23042  011C16  516D               	movf	?___lmul& (0+255),w,b
 23043  011C18  0100               	movlb	0	; () banked
 23044  011C1A  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23045  011C1C  0100               	movlb	0	; () banked
 23046  011C1E  516E               	movf	(?___lmul+1)& (0+255),w,b
 23047  011C20  0100               	movlb	0	; () banked
 23048  011C22  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23049  011C24  0100               	movlb	0	; () banked
 23050  011C26  516F               	movf	(?___lmul+2)& (0+255),w,b
 23051  011C28  0100               	movlb	0	; () banked
 23052  011C2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23053  011C2C  0100               	movlb	0	; () banked
 23054  011C2E  5170               	movf	(?___lmul+3)& (0+255),w,b
 23055  011C30  0100               	movlb	0	; () banked
 23056  011C32  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23057                           
 23058                           ; BSR set to: 0
 23059  011C34  0100               	movlb	0	; () banked
 23060  011C36  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 23061  011C38  D7CE               	goto	l10815
 23062  011C3A                     l10825:
 23063                           
 23064                           ; BSR set to: 0
 23065  011C3A  0100               	movlb	0	; () banked
 23066  011C3C  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 23067  011C3E                     l10827:
 23068                           
 23069                           ; BSR set to: 0
 23070  011C3E  0100               	movlb	0	; () banked
 23071  011C40  EE20 F00A          	lfsr	2,10
 23072  011C44  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23073  011C46  26D9               	addwf	fsr2l,f,c
 23074  011C48  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23075  011C4A  22DA               	addwfc	fsr2h,f,c
 23076  011C4C  50DE               	movf	postinc2,w,c
 23077  011C4E  0100               	movlb	0	; () banked
 23078  011C50  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 23079  011C52  A0D8               	btfss	status,0,c
 23080  011C54  D7BD               	goto	l10813
 23081                           
 23082                           ; BSR set to: 0
 23083                           ;My_RTCC.c: 348: }
 23084                           ;My_RTCC.c: 349: }
 23085                           ;My_RTCC.c: 350: for (uint8_t month = 1; month < tm->MM; month++) {
 23086                           
 23087                           ; BSR set to: 0
 23088  011C56  0E01               	movlw	1
 23089  011C58  0100               	movlb	0	; () banked
 23090  011C5A  6F80               	movwf	caltime_to_epoch@month_4002& (0+255),b
 23091  011C5C  D032               	goto	l10835
 23092  011C5E                     l10831:
 23093                           
 23094                           ; BSR set to: 0
 23095                           ;My_RTCC.c: 351: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 23096  011C5E  C080  F066         	movff	caltime_to_epoch@month_4002,month_length@month
 23097  011C62  0100               	movlb	0	; () banked
 23098  011C64  EE20 F00A          	lfsr	2,10
 23099  011C68  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23100  011C6A  26D9               	addwf	fsr2l,f,c
 23101  011C6C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23102  011C6E  22DA               	addwfc	fsr2h,f,c
 23103  011C70  50DF               	movf	indf2,w,c
 23104  011C72  EC7E  F0A4         	call	_month_length
 23105  011C76  0100               	movlb	0	; () banked
 23106  011C78  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23107  011C7A  0100               	movlb	0	; () banked
 23108  011C7C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23109  011C7E  0100               	movlb	0	; () banked
 23110  011C80  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23111  011C82  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23112  011C84  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23113  011C86  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23114  011C88  0E80               	movlw	128
 23115  011C8A  0100               	movlb	0	; () banked
 23116  011C8C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23117  011C8E  0E51               	movlw	81
 23118  011C90  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23119  011C92  0E01               	movlw	1
 23120  011C94  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23121  011C96  0E00               	movlw	0
 23122  011C98  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23123  011C9A  EC19  F0B0         	call	___lmul	;wreg free
 23124  011C9E  0100               	movlb	0	; () banked
 23125  011CA0  516D               	movf	?___lmul& (0+255),w,b
 23126  011CA2  0100               	movlb	0	; () banked
 23127  011CA4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23128  011CA6  0100               	movlb	0	; () banked
 23129  011CA8  516E               	movf	(?___lmul+1)& (0+255),w,b
 23130  011CAA  0100               	movlb	0	; () banked
 23131  011CAC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23132  011CAE  0100               	movlb	0	; () banked
 23133  011CB0  516F               	movf	(?___lmul+2)& (0+255),w,b
 23134  011CB2  0100               	movlb	0	; () banked
 23135  011CB4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23136  011CB6  0100               	movlb	0	; () banked
 23137  011CB8  5170               	movf	(?___lmul+3)& (0+255),w,b
 23138  011CBA  0100               	movlb	0	; () banked
 23139  011CBC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23140                           
 23141                           ; BSR set to: 0
 23142  011CBE  0100               	movlb	0	; () banked
 23143  011CC0  2B80               	incf	caltime_to_epoch@month_4002& (0+255),f,b
 23144  011CC2                     l10835:
 23145                           
 23146                           ; BSR set to: 0
 23147  011CC2  0100               	movlb	0	; () banked
 23148  011CC4  EE20 F009          	lfsr	2,9
 23149  011CC8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23150  011CCA  26D9               	addwf	fsr2l,f,c
 23151  011CCC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23152  011CCE  22DA               	addwfc	fsr2h,f,c
 23153  011CD0  50DE               	movf	postinc2,w,c
 23154  011CD2  0100               	movlb	0	; () banked
 23155  011CD4  5D80               	subwf	caltime_to_epoch@month_4002& (0+255),w,b
 23156  011CD6  A0D8               	btfss	status,0,c
 23157  011CD8  D7C2               	goto	l10831
 23158                           
 23159                           ; BSR set to: 0
 23160                           ;My_RTCC.c: 352: }
 23161                           ;My_RTCC.c: 353: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 23162                           
 23163                           ; BSR set to: 0
 23164  011CDA  0EFF               	movlw	255
 23165  011CDC  0100               	movlb	0	; () banked
 23166  011CDE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23167  011CE0  0EFF               	movlw	255
 23168  011CE2  0100               	movlb	0	; () banked
 23169  011CE4  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 23170  011CE6  0100               	movlb	0	; () banked
 23171  011CE8  EE20 F008          	lfsr	2,8
 23172  011CEC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23173  011CEE  26D9               	addwf	fsr2l,f,c
 23174  011CF0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23175  011CF2  22DA               	addwfc	fsr2h,f,c
 23176  011CF4  50DF               	movf	indf2,w,c
 23177  011CF6  0100               	movlb	0	; () banked
 23178  011CF8  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 23179  011CFA  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 23180  011CFC  0100               	movlb	0	; () banked
 23181  011CFE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23182  011D00  0100               	movlb	0	; () banked
 23183  011D02  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 23184  011D04  0100               	movlb	0	; () banked
 23185  011D06  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 23186  011D08  0100               	movlb	0	; () banked
 23187  011D0A  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 23188  011D0C  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 23189  011D10  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 23190  011D14  0100               	movlb	0	; () banked
 23191  011D16  0E00               	movlw	0
 23192  011D18  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23193  011D1A  0EFF               	movlw	-1
 23194  011D1C  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 23195  011D1E  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 23196  011D20  0E80               	movlw	128
 23197  011D22  0100               	movlb	0	; () banked
 23198  011D24  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23199  011D26  0E51               	movlw	81
 23200  011D28  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23201  011D2A  0E01               	movlw	1
 23202  011D2C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23203  011D2E  0E00               	movlw	0
 23204  011D30  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23205  011D32  EC19  F0B0         	call	___lmul	;wreg free
 23206  011D36  0100               	movlb	0	; () banked
 23207  011D38  516D               	movf	?___lmul& (0+255),w,b
 23208  011D3A  0100               	movlb	0	; () banked
 23209  011D3C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23210  011D3E  0100               	movlb	0	; () banked
 23211  011D40  516E               	movf	(?___lmul+1)& (0+255),w,b
 23212  011D42  0100               	movlb	0	; () banked
 23213  011D44  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23214  011D46  0100               	movlb	0	; () banked
 23215  011D48  516F               	movf	(?___lmul+2)& (0+255),w,b
 23216  011D4A  0100               	movlb	0	; () banked
 23217  011D4C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23218  011D4E  0100               	movlb	0	; () banked
 23219  011D50  5170               	movf	(?___lmul+3)& (0+255),w,b
 23220  011D52  0100               	movlb	0	; () banked
 23221  011D54  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23222                           
 23223                           ;My_RTCC.c: 354: epoch += ((epoch_t)60*60) * tm->hh;
 23224  011D56  0100               	movlb	0	; () banked
 23225  011D58  EE20 F006          	lfsr	2,6
 23226  011D5C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23227  011D5E  26D9               	addwf	fsr2l,f,c
 23228  011D60  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23229  011D62  22DA               	addwfc	fsr2h,f,c
 23230  011D64  50DF               	movf	indf2,w,c
 23231  011D66  0100               	movlb	0	; () banked
 23232  011D68  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23233  011D6A  0100               	movlb	0	; () banked
 23234  011D6C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23235  011D6E  0100               	movlb	0	; () banked
 23236  011D70  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23237  011D72  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23238  011D74  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23239  011D76  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23240  011D78  0E10               	movlw	16
 23241  011D7A  0100               	movlb	0	; () banked
 23242  011D7C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23243  011D7E  0E0E               	movlw	14
 23244  011D80  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23245  011D82  0E00               	movlw	0
 23246  011D84  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23247  011D86  0E00               	movlw	0
 23248  011D88  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23249  011D8A  EC19  F0B0         	call	___lmul	;wreg free
 23250  011D8E  0100               	movlb	0	; () banked
 23251  011D90  516D               	movf	?___lmul& (0+255),w,b
 23252  011D92  0100               	movlb	0	; () banked
 23253  011D94  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23254  011D96  0100               	movlb	0	; () banked
 23255  011D98  516E               	movf	(?___lmul+1)& (0+255),w,b
 23256  011D9A  0100               	movlb	0	; () banked
 23257  011D9C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23258  011D9E  0100               	movlb	0	; () banked
 23259  011DA0  516F               	movf	(?___lmul+2)& (0+255),w,b
 23260  011DA2  0100               	movlb	0	; () banked
 23261  011DA4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23262  011DA6  0100               	movlb	0	; () banked
 23263  011DA8  5170               	movf	(?___lmul+3)& (0+255),w,b
 23264  011DAA  0100               	movlb	0	; () banked
 23265  011DAC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23266                           
 23267                           ;My_RTCC.c: 355: epoch += ((epoch_t)60) * tm->mm;
 23268  011DAE  0100               	movlb	0	; () banked
 23269  011DB0  EE20 F005          	lfsr	2,5
 23270  011DB4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23271  011DB6  26D9               	addwf	fsr2l,f,c
 23272  011DB8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23273  011DBA  22DA               	addwfc	fsr2h,f,c
 23274  011DBC  50DF               	movf	indf2,w,c
 23275  011DBE  0100               	movlb	0	; () banked
 23276  011DC0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23277  011DC2  0100               	movlb	0	; () banked
 23278  011DC4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23279  011DC6  0100               	movlb	0	; () banked
 23280  011DC8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23281  011DCA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23282  011DCC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23283  011DCE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23284  011DD0  0E3C               	movlw	60
 23285  011DD2  0100               	movlb	0	; () banked
 23286  011DD4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23287  011DD6  0E00               	movlw	0
 23288  011DD8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23289  011DDA  0E00               	movlw	0
 23290  011DDC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23291  011DDE  0E00               	movlw	0
 23292  011DE0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23293  011DE2  EC19  F0B0         	call	___lmul	;wreg free
 23294  011DE6  0100               	movlb	0	; () banked
 23295  011DE8  516D               	movf	?___lmul& (0+255),w,b
 23296  011DEA  0100               	movlb	0	; () banked
 23297  011DEC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23298  011DEE  0100               	movlb	0	; () banked
 23299  011DF0  516E               	movf	(?___lmul+1)& (0+255),w,b
 23300  011DF2  0100               	movlb	0	; () banked
 23301  011DF4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23302  011DF6  0100               	movlb	0	; () banked
 23303  011DF8  516F               	movf	(?___lmul+2)& (0+255),w,b
 23304  011DFA  0100               	movlb	0	; () banked
 23305  011DFC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23306  011DFE  0100               	movlb	0	; () banked
 23307  011E00  5170               	movf	(?___lmul+3)& (0+255),w,b
 23308  011E02  0100               	movlb	0	; () banked
 23309  011E04  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23310                           
 23311                           ; BSR set to: 0
 23312                           ;My_RTCC.c: 356: epoch += tm->ss;
 23313  011E06  0100               	movlb	0	; () banked
 23314  011E08  EE20 F004          	lfsr	2,4
 23315  011E0C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23316  011E0E  26D9               	addwf	fsr2l,f,c
 23317  011E10  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23318  011E12  22DA               	addwfc	fsr2h,f,c
 23319  011E14  50DF               	movf	indf2,w,c
 23320  011E16  0100               	movlb	0	; () banked
 23321  011E18  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23322  011E1A  0100               	movlb	0	; () banked
 23323  011E1C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23324  011E1E  0100               	movlb	0	; () banked
 23325  011E20  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23326  011E22  0E00               	movlw	0
 23327  011E24  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23328  011E26  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23329  011E28  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23330                           
 23331                           ; BSR set to: 0
 23332                           ;My_RTCC.c: 358: tm->epoch = epoch;
 23333  011E2A  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 23334  011E2E  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 23335  011E32  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 23336  011E36  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 23337  011E3A  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 23338  011E3E  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 23339                           
 23340                           ; BSR set to: 0
 23341  011E42  0012               	return		;funcret
 23342  011E44                     __end_of_caltime_to_epoch:
 23343                           	opt stack 0
 23344                           tblptru	equ	0xFF8
 23345                           tblptrh	equ	0xFF7
 23346                           tblptrl	equ	0xFF6
 23347                           tablat	equ	0xFF5
 23348                           prodh	equ	0xFF4
 23349                           prodl	equ	0xFF3
 23350                           intcon	equ	0xFF2
 23351                           intcon2	equ	0xFF1
 23352                           indf0	equ	0xFEF
 23353                           postinc0	equ	0xFEE
 23354                           fsr0h	equ	0xFEA
 23355                           fsr0l	equ	0xFE9
 23356                           wreg	equ	0xFE8
 23357                           indf1	equ	0xFE7
 23358                           postinc1	equ	0xFE6
 23359                           postdec1	equ	0xFE5
 23360                           fsr1h	equ	0xFE2
 23361                           fsr1l	equ	0xFE1
 23362                           indf2	equ	0xFDF
 23363                           postinc2	equ	0xFDE
 23364                           postdec2	equ	0xFDD
 23365                           plusw2	equ	0xFDB
 23366                           fsr2h	equ	0xFDA
 23367                           fsr2l	equ	0xFD9
 23368                           status	equ	0xFD8
 23369                           
 23370 ;; *************** function _month_length *****************
 23371 ;; Defined at:
 23372 ;;		line 68 in file "../My_library/My_RTCC.c"
 23373 ;; Parameters:    Size  Location     Type
 23374 ;;  year            1    wreg     unsigned char 
 23375 ;;  month           1    6[BANK0 ] unsigned char 
 23376 ;; Auto vars:     Size  Location     Type
 23377 ;;  year            1   11[BANK0 ] unsigned char 
 23378 ;; Return value:  Size  Location     Type
 23379 ;;                  1    wreg      unsigned char 
 23380 ;; Registers used:
 23381 ;;		wreg, status,2, status,0, cstack
 23382 ;; Tracked objects:
 23383 ;;		On entry : 0/0
 23384 ;;		On exit  : 0/0
 23385 ;;		Unchanged: 0/0
 23386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23387 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23389 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23390 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23391 ;;Total ram usage:        6 bytes
 23392 ;; Hardware stack levels used:    1
 23393 ;; Hardware stack levels required when called:   13
 23394 ;; This function calls:
 23395 ;;		___awmod
 23396 ;; This function is called by:
 23397 ;;		_RTCC_adjust_time_inc
 23398 ;;		_RTCC_adjust_time_dec
 23399 ;;		_epoch_to_caltime
 23400 ;;		_caltime_to_epoch
 23401 ;;		_terminal_time
 23402 ;; This function uses a non-reentrant model
 23403 ;;
 23404                           
 23405                           	psect	text97
 23406  0148FC                     __ptext97:
 23407                           	opt stack 0
 23408  0148FC                     _month_length:
 23409                           	opt stack 10
 23410                           
 23411                           ; BSR set to: 0
 23412                           ;incstack = 0
 23413                           ;month_length@year stored from wreg
 23414  0148FC  0100               	movlb	0	; () banked
 23415  0148FE  6F6B               	movwf	month_length@year& (0+255),b
 23416                           
 23417                           ;My_RTCC.c: 69: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 23418  014900  0E02               	movlw	2
 23419  014902  0100               	movlb	0	; () banked
 23420  014904  1966               	xorwf	month_length@month& (0+255),w,b
 23421  014906  A4D8               	btfss	status,2,c
 23422  014908  D03E               	goto	l10711
 23423                           
 23424                           ; BSR set to: 0
 23425  01490A  C06B  F060         	movff	month_length@year,___awmod@dividend
 23426  01490E  0100               	movlb	0	; () banked
 23427  014910  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23428  014912  0E00               	movlw	0
 23429  014914  0100               	movlb	0	; () banked
 23430  014916  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23431  014918  0E64               	movlw	100
 23432  01491A  6F62               	movwf	___awmod@divisor& (0+255),b
 23433  01491C  ECC7  F0AC         	call	___awmod	;wreg free
 23434  014920  0100               	movlb	0	; () banked
 23435  014922  5160               	movf	?___awmod& (0+255),w,b
 23436  014924  0100               	movlb	0	; () banked
 23437  014926  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23438  014928  A4D8               	btfss	status,2,c
 23439  01492A  D002               	goto	u11400
 23440  01492C  0E01               	movlw	1
 23441  01492E  D001               	goto	u11410
 23442  014930                     u11400:
 23443  014930  0E00               	movlw	0
 23444  014932                     u11410:
 23445  014932  0800               	sublw	0
 23446  014934  0100               	movlb	0	; () banked
 23447  014936  6F67               	movwf	??_month_length& (0+255),b
 23448  014938  C06B  F060         	movff	month_length@year,___awmod@dividend
 23449  01493C  0100               	movlb	0	; () banked
 23450  01493E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23451  014940  0E01               	movlw	1
 23452  014942  0100               	movlb	0	; () banked
 23453  014944  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23454  014946  0E90               	movlw	144
 23455  014948  6F62               	movwf	___awmod@divisor& (0+255),b
 23456  01494A  ECC7  F0AC         	call	___awmod	;wreg free
 23457  01494E  0100               	movlb	0	; () banked
 23458  014950  5160               	movf	?___awmod& (0+255),w,b
 23459  014952  0100               	movlb	0	; () banked
 23460  014954  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23461  014956  A4D8               	btfss	status,2,c
 23462  014958  D004               	goto	u11420
 23463  01495A  0100               	movlb	0	; () banked
 23464  01495C  6B68               	clrf	(??_month_length+1)& (0+255),b
 23465  01495E  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23466  014960  D002               	goto	u11438
 23467  014962                     u11420:
 23468  014962  0100               	movlb	0	; () banked
 23469  014964  6B68               	clrf	(??_month_length+1)& (0+255),b
 23470  014966                     u11438:
 23471  014966  C06B  F069         	movff	month_length@year,??_month_length+2
 23472  01496A  0E03               	movlw	3
 23473  01496C  0100               	movlb	0	; () banked
 23474  01496E  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23475  014970  A4D8               	btfss	status,2,c
 23476  014972  D002               	goto	u11440
 23477  014974  0E01               	movlw	1
 23478  014976  D001               	goto	u11450
 23479  014978                     u11440:
 23480  014978  0E00               	movlw	0
 23481  01497A                     u11450:
 23482  01497A  0100               	movlb	0	; () banked
 23483  01497C  2568               	addwf	(??_month_length+1)& (0+255),w,b
 23484  01497E  0100               	movlb	0	; () banked
 23485  014980  2567               	addwf	??_month_length& (0+255),w,b
 23486  014982  0F1C               	addlw	28
 23487                           
 23488                           ; BSR set to: 0
 23489                           
 23490                           ; BSR set to: 0
 23491  014984  0012               	return	
 23492  014986                     l10711:
 23493                           
 23494                           ; BSR set to: 0
 23495                           ;My_RTCC.c: 70: else return 31 - (((-(month & 1)^month)&13) == 4);
 23496  014986  0100               	movlb	0	; () banked
 23497  014988  5166               	movf	month_length@month& (0+255),w,b
 23498  01498A  0B01               	andlw	1
 23499  01498C  0100               	movlb	0	; () banked
 23500  01498E  6F67               	movwf	??_month_length& (0+255),b
 23501  014990  6B68               	clrf	(??_month_length+1)& (0+255),b
 23502  014992  0100               	movlb	0	; () banked
 23503  014994  1F67               	comf	??_month_length& (0+255),f,b
 23504  014996  1F68               	comf	(??_month_length+1)& (0+255),f,b
 23505  014998  4B67               	infsnz	??_month_length& (0+255),f,b
 23506  01499A  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23507  01499C  0100               	movlb	0	; () banked
 23508  01499E  5166               	movf	month_length@month& (0+255),w,b
 23509  0149A0  0100               	movlb	0	; () banked
 23510  0149A2  6F69               	movwf	(??_month_length+2)& (0+255),b
 23511  0149A4  6B6A               	clrf	(??_month_length+3)& (0+255),b
 23512  0149A6  0100               	movlb	0	; () banked
 23513  0149A8  5167               	movf	??_month_length& (0+255),w,b
 23514  0149AA  0100               	movlb	0	; () banked
 23515  0149AC  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 23516  0149AE  0100               	movlb	0	; () banked
 23517  0149B0  5168               	movf	(??_month_length+1)& (0+255),w,b
 23518  0149B2  0100               	movlb	0	; () banked
 23519  0149B4  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 23520  0149B6  0E0D               	movlw	13
 23521  0149B8  0100               	movlb	0	; () banked
 23522  0149BA  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23523  0149BC  0E00               	movlw	0
 23524  0149BE  176A               	andwf	(??_month_length+3)& (0+255),f,b
 23525  0149C0  0E04               	movlw	4
 23526  0149C2  0100               	movlb	0	; () banked
 23527  0149C4  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 23528  0149C6  0100               	movlb	0	; () banked
 23529  0149C8  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 23530  0149CA  A4D8               	btfss	status,2,c
 23531  0149CC  D002               	goto	u11460
 23532  0149CE  0E01               	movlw	1
 23533  0149D0  D001               	goto	u11470
 23534  0149D2                     u11460:
 23535  0149D2  0E00               	movlw	0
 23536  0149D4                     u11470:
 23537  0149D4  0800               	sublw	0
 23538  0149D6  0F1F               	addlw	31
 23539                           
 23540                           ; BSR set to: 0
 23541  0149D8  0012               	return	
 23542  0149DA                     __end_of_month_length:
 23543                           	opt stack 0
 23544                           tblptru	equ	0xFF8
 23545                           tblptrh	equ	0xFF7
 23546                           tblptrl	equ	0xFF6
 23547                           tablat	equ	0xFF5
 23548                           prodh	equ	0xFF4
 23549                           prodl	equ	0xFF3
 23550                           intcon	equ	0xFF2
 23551                           intcon2	equ	0xFF1
 23552                           indf0	equ	0xFEF
 23553                           postinc0	equ	0xFEE
 23554                           fsr0h	equ	0xFEA
 23555                           fsr0l	equ	0xFE9
 23556                           wreg	equ	0xFE8
 23557                           indf1	equ	0xFE7
 23558                           postinc1	equ	0xFE6
 23559                           postdec1	equ	0xFE5
 23560                           fsr1h	equ	0xFE2
 23561                           fsr1l	equ	0xFE1
 23562                           indf2	equ	0xFDF
 23563                           postinc2	equ	0xFDE
 23564                           postdec2	equ	0xFDD
 23565                           plusw2	equ	0xFDB
 23566                           fsr2h	equ	0xFDA
 23567                           fsr2l	equ	0xFD9
 23568                           status	equ	0xFD8
 23569                           
 23570 ;; *************** function ___awmod *****************
 23571 ;; Defined at:
 23572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 23573 ;; Parameters:    Size  Location     Type
 23574 ;;  dividend        2    0[BANK0 ] int 
 23575 ;;  divisor         2    2[BANK0 ] int 
 23576 ;; Auto vars:     Size  Location     Type
 23577 ;;  sign            1    5[BANK0 ] unsigned char 
 23578 ;;  counter         1    4[BANK0 ] unsigned char 
 23579 ;; Return value:  Size  Location     Type
 23580 ;;                  2    0[BANK0 ] int 
 23581 ;; Registers used:
 23582 ;;		wreg, status,2, status,0
 23583 ;; Tracked objects:
 23584 ;;		On entry : 0/0
 23585 ;;		On exit  : 0/0
 23586 ;;		Unchanged: 0/0
 23587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23588 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23591 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23592 ;;Total ram usage:        6 bytes
 23593 ;; Hardware stack levels used:    1
 23594 ;; Hardware stack levels required when called:   12
 23595 ;; This function calls:
 23596 ;;		Nothing
 23597 ;; This function is called by:
 23598 ;;		_month_length
 23599 ;; This function uses a non-reentrant model
 23600 ;;
 23601                           
 23602                           	psect	text98
 23603  01598E                     __ptext98:
 23604                           	opt stack 0
 23605  01598E                     ___awmod:
 23606                           	opt stack 10
 23607                           
 23608                           ; BSR set to: 0
 23609                           ;incstack = 0
 23610  01598E  0E00               	movlw	0
 23611  015990  0100               	movlb	0	; () banked
 23612  015992  6F65               	movwf	___awmod@sign& (0+255),b
 23613                           
 23614                           ; BSR set to: 0
 23615  015994  0100               	movlb	0	; () banked
 23616  015996  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23617  015998  D008               	goto	l10663
 23618                           
 23619                           ; BSR set to: 0
 23620  01599A  0100               	movlb	0	; () banked
 23621  01599C  6D60               	negf	___awmod@dividend& (0+255),b
 23622  01599E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23623  0159A0  B0D8               	btfsc	status,0,c
 23624  0159A2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23625                           
 23626                           ; BSR set to: 0
 23627  0159A4  0E01               	movlw	1
 23628  0159A6  0100               	movlb	0	; () banked
 23629  0159A8  6F65               	movwf	___awmod@sign& (0+255),b
 23630  0159AA                     l10663:
 23631                           
 23632                           ; BSR set to: 0
 23633  0159AA  0100               	movlb	0	; () banked
 23634  0159AC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23635  0159AE  D005               	goto	l10667
 23636                           
 23637                           ; BSR set to: 0
 23638  0159B0  0100               	movlb	0	; () banked
 23639  0159B2  6D62               	negf	___awmod@divisor& (0+255),b
 23640  0159B4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 23641  0159B6  B0D8               	btfsc	status,0,c
 23642  0159B8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 23643  0159BA                     l10667:
 23644                           
 23645                           ; BSR set to: 0
 23646  0159BA  0100               	movlb	0	; () banked
 23647  0159BC  5162               	movf	___awmod@divisor& (0+255),w,b
 23648  0159BE  0100               	movlb	0	; () banked
 23649  0159C0  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23650  0159C2  B4D8               	btfsc	status,2,c
 23651  0159C4  D026               	goto	l10683
 23652                           
 23653                           ; BSR set to: 0
 23654  0159C6  0E01               	movlw	1
 23655  0159C8  0100               	movlb	0	; () banked
 23656  0159CA  6F64               	movwf	___awmod@counter& (0+255),b
 23657  0159CC  D006               	goto	l10673
 23658  0159CE                     l10671:
 23659                           
 23660                           ; BSR set to: 0
 23661  0159CE  0100               	movlb	0	; () banked
 23662  0159D0  90D8               	bcf	status,0,c
 23663  0159D2  3762               	rlcf	___awmod@divisor& (0+255),f,b
 23664  0159D4  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23665  0159D6  0100               	movlb	0	; () banked
 23666  0159D8  2B64               	incf	___awmod@counter& (0+255),f,b
 23667  0159DA                     l10673:
 23668                           
 23669                           ; BSR set to: 0
 23670  0159DA  0100               	movlb	0	; () banked
 23671  0159DC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23672  0159DE  D7F7               	goto	l10671
 23673  0159E0                     l10675:
 23674                           
 23675                           ; BSR set to: 0
 23676  0159E0  0100               	movlb	0	; () banked
 23677  0159E2  5162               	movf	___awmod@divisor& (0+255),w,b
 23678  0159E4  0100               	movlb	0	; () banked
 23679  0159E6  5D60               	subwf	___awmod@dividend& (0+255),w,b
 23680  0159E8  0100               	movlb	0	; () banked
 23681  0159EA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23682  0159EC  0100               	movlb	0	; () banked
 23683  0159EE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23684  0159F0  A0D8               	btfss	status,0,c
 23685  0159F2  D008               	goto	l10679
 23686                           
 23687                           ; BSR set to: 0
 23688  0159F4  0100               	movlb	0	; () banked
 23689  0159F6  5162               	movf	___awmod@divisor& (0+255),w,b
 23690  0159F8  0100               	movlb	0	; () banked
 23691  0159FA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23692  0159FC  0100               	movlb	0	; () banked
 23693  0159FE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23694  015A00  0100               	movlb	0	; () banked
 23695  015A02  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23696  015A04                     l10679:
 23697                           
 23698                           ; BSR set to: 0
 23699  015A04  0100               	movlb	0	; () banked
 23700  015A06  90D8               	bcf	status,0,c
 23701  015A08  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23702  015A0A  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23703                           
 23704                           ; BSR set to: 0
 23705  015A0C  0100               	movlb	0	; () banked
 23706  015A0E  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23707  015A10  D7E7               	goto	l10675
 23708  015A12                     l10683:
 23709                           
 23710                           ; BSR set to: 0
 23711  015A12  0100               	movlb	0	; () banked
 23712  015A14  5165               	movf	___awmod@sign& (0+255),w,b
 23713  015A16  0100               	movlb	0	; () banked
 23714  015A18  B4D8               	btfsc	status,2,c
 23715  015A1A  D005               	goto	l10687
 23716                           
 23717                           ; BSR set to: 0
 23718  015A1C  0100               	movlb	0	; () banked
 23719  015A1E  6D60               	negf	___awmod@dividend& (0+255),b
 23720  015A20  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23721  015A22  B0D8               	btfsc	status,0,c
 23722  015A24  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23723  015A26                     l10687:
 23724                           
 23725                           ; BSR set to: 0
 23726  015A26  C060  F060         	movff	___awmod@dividend,?___awmod
 23727  015A2A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23728  015A2E  0012               	return	
 23729  015A30                     __end_of___awmod:
 23730                           	opt stack 0
 23731                           tblptru	equ	0xFF8
 23732                           tblptrh	equ	0xFF7
 23733                           tblptrl	equ	0xFF6
 23734                           tablat	equ	0xFF5
 23735                           prodh	equ	0xFF4
 23736                           prodl	equ	0xFF3
 23737                           intcon	equ	0xFF2
 23738                           intcon2	equ	0xFF1
 23739                           indf0	equ	0xFEF
 23740                           postinc0	equ	0xFEE
 23741                           fsr0h	equ	0xFEA
 23742                           fsr0l	equ	0xFE9
 23743                           wreg	equ	0xFE8
 23744                           indf1	equ	0xFE7
 23745                           postinc1	equ	0xFE6
 23746                           postdec1	equ	0xFE5
 23747                           fsr1h	equ	0xFE2
 23748                           fsr1l	equ	0xFE1
 23749                           indf2	equ	0xFDF
 23750                           postinc2	equ	0xFDE
 23751                           postdec2	equ	0xFDD
 23752                           plusw2	equ	0xFDB
 23753                           fsr2h	equ	0xFDA
 23754                           fsr2l	equ	0xFD9
 23755                           status	equ	0xFD8
 23756                           
 23757 ;; *************** function ___lmul *****************
 23758 ;; Defined at:
 23759 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23760 ;; Parameters:    Size  Location     Type
 23761 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23762 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23763 ;; Auto vars:     Size  Location     Type
 23764 ;;  product         4   21[BANK0 ] unsigned long 
 23765 ;; Return value:  Size  Location     Type
 23766 ;;                  4   13[BANK0 ] unsigned long 
 23767 ;; Registers used:
 23768 ;;		wreg, status,2, status,0
 23769 ;; Tracked objects:
 23770 ;;		On entry : 0/0
 23771 ;;		On exit  : 0/0
 23772 ;;		Unchanged: 0/0
 23773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23774 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23775 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23777 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23778 ;;Total ram usage:       12 bytes
 23779 ;; Hardware stack levels used:    1
 23780 ;; Hardware stack levels required when called:   12
 23781 ;; This function calls:
 23782 ;;		Nothing
 23783 ;; This function is called by:
 23784 ;;		_RTCC_adjust_time_inc
 23785 ;;		_RTCC_adjust_time_dec
 23786 ;;		_get_quot_rem
 23787 ;;		_caltime_to_epoch
 23788 ;; This function uses a non-reentrant model
 23789 ;;
 23790                           
 23791                           	psect	text99
 23792  016032                     __ptext99:
 23793                           	opt stack 0
 23794  016032                     ___lmul:
 23795                           	opt stack 11
 23796                           
 23797                           ; BSR set to: 0
 23798                           ;incstack = 0
 23799  016032  0E00               	movlw	0
 23800  016034  0100               	movlb	0	; () banked
 23801  016036  6F75               	movwf	___lmul@product& (0+255),b
 23802  016038  0E00               	movlw	0
 23803  01603A  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23804  01603C  0E00               	movlw	0
 23805  01603E  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23806  016040  0E00               	movlw	0
 23807  016042  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23808  016044                     l10721:
 23809                           
 23810                           ; BSR set to: 0
 23811  016044  0100               	movlb	0	; () banked
 23812  016046  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23813  016048  D010               	goto	l10725
 23814                           
 23815                           ; BSR set to: 0
 23816  01604A  0100               	movlb	0	; () banked
 23817  01604C  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23818  01604E  0100               	movlb	0	; () banked
 23819  016050  2775               	addwf	___lmul@product& (0+255),f,b
 23820  016052  0100               	movlb	0	; () banked
 23821  016054  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23822  016056  0100               	movlb	0	; () banked
 23823  016058  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23824  01605A  0100               	movlb	0	; () banked
 23825  01605C  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23826  01605E  0100               	movlb	0	; () banked
 23827  016060  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23828  016062  0100               	movlb	0	; () banked
 23829  016064  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23830  016066  0100               	movlb	0	; () banked
 23831  016068  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23832  01606A                     l10725:
 23833                           
 23834                           ; BSR set to: 0
 23835  01606A  0100               	movlb	0	; () banked
 23836  01606C  90D8               	bcf	status,0,c
 23837  01606E  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23838  016070  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23839  016072  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23840  016074  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23841                           
 23842                           ; BSR set to: 0
 23843  016076  0100               	movlb	0	; () banked
 23844  016078  90D8               	bcf	status,0,c
 23845  01607A  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23846  01607C  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23847  01607E  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23848  016080  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23849  016082  0100               	movlb	0	; () banked
 23850  016084  516D               	movf	___lmul@multiplier& (0+255),w,b
 23851  016086  0100               	movlb	0	; () banked
 23852  016088  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23853  01608A  0100               	movlb	0	; () banked
 23854  01608C  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23855  01608E  0100               	movlb	0	; () banked
 23856  016090  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23857  016092  A4D8               	btfss	status,2,c
 23858  016094  D7D7               	goto	l10721
 23859                           
 23860                           ; BSR set to: 0
 23861  016096  C075  F06D         	movff	___lmul@product,?___lmul
 23862  01609A  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23863  01609E  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23864  0160A2  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23865                           
 23866                           ; BSR set to: 0
 23867  0160A6  0012               	return		;funcret
 23868  0160A8                     __end_of___lmul:
 23869                           	opt stack 0
 23870                           tblptru	equ	0xFF8
 23871                           tblptrh	equ	0xFF7
 23872                           tblptrl	equ	0xFF6
 23873                           tablat	equ	0xFF5
 23874                           prodh	equ	0xFF4
 23875                           prodl	equ	0xFF3
 23876                           intcon	equ	0xFF2
 23877                           intcon2	equ	0xFF1
 23878                           indf0	equ	0xFEF
 23879                           postinc0	equ	0xFEE
 23880                           fsr0h	equ	0xFEA
 23881                           fsr0l	equ	0xFE9
 23882                           wreg	equ	0xFE8
 23883                           indf1	equ	0xFE7
 23884                           postinc1	equ	0xFE6
 23885                           postdec1	equ	0xFE5
 23886                           fsr1h	equ	0xFE2
 23887                           fsr1l	equ	0xFE1
 23888                           indf2	equ	0xFDF
 23889                           postinc2	equ	0xFDE
 23890                           postdec2	equ	0xFDD
 23891                           plusw2	equ	0xFDB
 23892                           fsr2h	equ	0xFDA
 23893                           fsr2l	equ	0xFD9
 23894                           status	equ	0xFD8
 23895                           
 23896 ;; *************** function _RTCC_to_caltime *****************
 23897 ;; Defined at:
 23898 ;;		line 253 in file "../My_library/My_RTCC.c"
 23899 ;; Parameters:    Size  Location     Type
 23900 ;;  tm              2    2[BANK0 ] PTR struct .
 23901 ;;		 -> now(14), 
 23902 ;; Auto vars:     Size  Location     Type
 23903 ;;  dumy            1    4[BANK0 ] unsigned char 
 23904 ;; Return value:  Size  Location     Type
 23905 ;;		None               void
 23906 ;; Registers used:
 23907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23908 ;; Tracked objects:
 23909 ;;		On entry : 0/0
 23910 ;;		On exit  : 0/0
 23911 ;;		Unchanged: 0/0
 23912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23916 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23917 ;;Total ram usage:        3 bytes
 23918 ;; Hardware stack levels used:    1
 23919 ;; Hardware stack levels required when called:   13
 23920 ;; This function calls:
 23921 ;;		_x_to_d
 23922 ;; This function is called by:
 23923 ;;		_RTCC_from_RTCC
 23924 ;; This function uses a non-reentrant model
 23925 ;;
 23926                           
 23927                           	psect	text100
 23928  01575E                     __ptext100:
 23929                           	opt stack 0
 23930  01575E                     _RTCC_to_caltime:
 23931                           	opt stack 11
 23932  01575E                     l952:
 23933  01575E  010F               	movlb	15	; () banked
 23934  015760  B93F               	btfsc	63,4,b	;volatile
 23935  015762  D7FD               	goto	l952
 23936                           
 23937                           ; BSR set to: 15
 23938                           ;My_RTCC.c: 256: RTCCFGbits.RTCPTR0 = 1;
 23939  015764  010F               	movlb	15	; () banked
 23940  015766  813F               	bsf	63,0,b	;volatile
 23941                           
 23942                           ;My_RTCC.c: 257: RTCCFGbits.RTCPTR1 = 1;
 23943  015768  010F               	movlb	15	; () banked
 23944  01576A  833F               	bsf	63,1,b	;volatile
 23945                           
 23946                           ; BSR set to: 15
 23947                           ;My_RTCC.c: 259: tm->YY = x_to_d(RTCVALL);
 23948  01576C  0100               	movlb	0	; () banked
 23949  01576E  EE20 F00A          	lfsr	2,10
 23950  015772  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23951  015774  26D9               	addwf	fsr2l,f,c
 23952  015776  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23953  015778  22DA               	addwfc	fsr2h,f,c
 23954  01577A  010F               	movlb	15	; () banked
 23955  01577C  513A               	movf	58,w,b	;volatile
 23956  01577E  EC18  F0B7         	call	_x_to_d
 23957  015782  6EDF               	movwf	indf2,c
 23958                           
 23959                           ;My_RTCC.c: 260: uint8_t dumy = RTCVALH;
 23960  015784  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23961                           
 23962                           ;My_RTCC.c: 261: tm->DD = x_to_d(RTCVALL);
 23963  015788  0100               	movlb	0	; () banked
 23964  01578A  EE20 F008          	lfsr	2,8
 23965  01578E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23966  015790  26D9               	addwf	fsr2l,f,c
 23967  015792  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23968  015794  22DA               	addwfc	fsr2h,f,c
 23969  015796  010F               	movlb	15	; () banked
 23970  015798  513A               	movf	58,w,b	;volatile
 23971  01579A  EC18  F0B7         	call	_x_to_d
 23972  01579E  6EDF               	movwf	indf2,c
 23973                           
 23974                           ;My_RTCC.c: 262: tm->MM = x_to_d(RTCVALH);
 23975  0157A0  0100               	movlb	0	; () banked
 23976  0157A2  EE20 F009          	lfsr	2,9
 23977  0157A6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23978  0157A8  26D9               	addwf	fsr2l,f,c
 23979  0157AA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23980  0157AC  22DA               	addwfc	fsr2h,f,c
 23981  0157AE  010F               	movlb	15	; () banked
 23982  0157B0  513B               	movf	59,w,b	;volatile
 23983  0157B2  EC18  F0B7         	call	_x_to_d
 23984  0157B6  6EDF               	movwf	indf2,c
 23985                           
 23986                           ;My_RTCC.c: 263: tm->hh = x_to_d(RTCVALL);
 23987  0157B8  0100               	movlb	0	; () banked
 23988  0157BA  EE20 F006          	lfsr	2,6
 23989  0157BE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23990  0157C0  26D9               	addwf	fsr2l,f,c
 23991  0157C2  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23992  0157C4  22DA               	addwfc	fsr2h,f,c
 23993  0157C6  010F               	movlb	15	; () banked
 23994  0157C8  513A               	movf	58,w,b	;volatile
 23995  0157CA  EC18  F0B7         	call	_x_to_d
 23996  0157CE  6EDF               	movwf	indf2,c
 23997                           
 23998                           ;My_RTCC.c: 264: tm->EE = x_to_d(RTCVALH);
 23999  0157D0  0100               	movlb	0	; () banked
 24000  0157D2  EE20 F007          	lfsr	2,7
 24001  0157D6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 24002  0157D8  26D9               	addwf	fsr2l,f,c
 24003  0157DA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 24004  0157DC  22DA               	addwfc	fsr2h,f,c
 24005  0157DE  010F               	movlb	15	; () banked
 24006  0157E0  513B               	movf	59,w,b	;volatile
 24007  0157E2  EC18  F0B7         	call	_x_to_d
 24008  0157E6  6EDF               	movwf	indf2,c
 24009                           
 24010                           ;My_RTCC.c: 265: tm->ss = x_to_d(RTCVALL);
 24011  0157E8  0100               	movlb	0	; () banked
 24012  0157EA  EE20 F004          	lfsr	2,4
 24013  0157EE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 24014  0157F0  26D9               	addwf	fsr2l,f,c
 24015  0157F2  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 24016  0157F4  22DA               	addwfc	fsr2h,f,c
 24017  0157F6  010F               	movlb	15	; () banked
 24018  0157F8  513A               	movf	58,w,b	;volatile
 24019  0157FA  EC18  F0B7         	call	_x_to_d
 24020  0157FE  6EDF               	movwf	indf2,c
 24021                           
 24022                           ;My_RTCC.c: 266: tm->mm = x_to_d(RTCVALH);
 24023  015800  0100               	movlb	0	; () banked
 24024  015802  EE20 F005          	lfsr	2,5
 24025  015806  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 24026  015808  26D9               	addwf	fsr2l,f,c
 24027  01580A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 24028  01580C  22DA               	addwfc	fsr2h,f,c
 24029  01580E  010F               	movlb	15	; () banked
 24030  015810  513B               	movf	59,w,b	;volatile
 24031  015812  EC18  F0B7         	call	_x_to_d
 24032  015816  6EDF               	movwf	indf2,c
 24033  015818  0012               	return		;funcret
 24034  01581A                     __end_of_RTCC_to_caltime:
 24035                           	opt stack 0
 24036                           tblptru	equ	0xFF8
 24037                           tblptrh	equ	0xFF7
 24038                           tblptrl	equ	0xFF6
 24039                           tablat	equ	0xFF5
 24040                           prodh	equ	0xFF4
 24041                           prodl	equ	0xFF3
 24042                           intcon	equ	0xFF2
 24043                           intcon2	equ	0xFF1
 24044                           indf0	equ	0xFEF
 24045                           postinc0	equ	0xFEE
 24046                           fsr0h	equ	0xFEA
 24047                           fsr0l	equ	0xFE9
 24048                           wreg	equ	0xFE8
 24049                           indf1	equ	0xFE7
 24050                           postinc1	equ	0xFE6
 24051                           postdec1	equ	0xFE5
 24052                           fsr1h	equ	0xFE2
 24053                           fsr1l	equ	0xFE1
 24054                           indf2	equ	0xFDF
 24055                           postinc2	equ	0xFDE
 24056                           postdec2	equ	0xFDD
 24057                           plusw2	equ	0xFDB
 24058                           fsr2h	equ	0xFDA
 24059                           fsr2l	equ	0xFD9
 24060                           status	equ	0xFD8
 24061                           
 24062 ;; *************** function _x_to_d *****************
 24063 ;; Defined at:
 24064 ;;		line 240 in file "../My_library/My_RTCC.c"
 24065 ;; Parameters:    Size  Location     Type
 24066 ;;  hex             1    wreg     unsigned char 
 24067 ;; Auto vars:     Size  Location     Type
 24068 ;;  hex             1    1[BANK0 ] unsigned char 
 24069 ;; Return value:  Size  Location     Type
 24070 ;;                  1    wreg      unsigned char 
 24071 ;; Registers used:
 24072 ;;		wreg, status,2, status,0, prodl, prodh
 24073 ;; Tracked objects:
 24074 ;;		On entry : 0/0
 24075 ;;		On exit  : 0/0
 24076 ;;		Unchanged: 0/0
 24077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24082 ;;Total ram usage:        2 bytes
 24083 ;; Hardware stack levels used:    1
 24084 ;; Hardware stack levels required when called:   12
 24085 ;; This function calls:
 24086 ;;		Nothing
 24087 ;; This function is called by:
 24088 ;;		_RTCC_to_caltime
 24089 ;; This function uses a non-reentrant model
 24090 ;;
 24091                           
 24092                           	psect	text101
 24093  016E30                     __ptext101:
 24094                           	opt stack 0
 24095  016E30                     _x_to_d:
 24096                           	opt stack 11
 24097                           
 24098                           ;incstack = 0
 24099                           ;x_to_d@hex stored from wreg
 24100  016E30  0100               	movlb	0	; () banked
 24101  016E32  6F61               	movwf	x_to_d@hex& (0+255),b
 24102                           
 24103                           ;My_RTCC.c: 241: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 24104  016E34  C061  F060         	movff	x_to_d@hex,??_x_to_d
 24105  016E38  0E0F               	movlw	15
 24106  016E3A  0100               	movlb	0	; () banked
 24107  016E3C  1760               	andwf	??_x_to_d& (0+255),f,b
 24108  016E3E  0100               	movlb	0	; () banked
 24109  016E40  3961               	swapf	x_to_d@hex& (0+255),w,b
 24110  016E42  0B0F               	andlw	15
 24111  016E44  0B0F               	andlw	15
 24112  016E46  0D0A               	mullw	10
 24113  016E48  50F3               	movf	prodl,w,c
 24114  016E4A  0100               	movlb	0	; () banked
 24115  016E4C  2560               	addwf	??_x_to_d& (0+255),w,b
 24116  016E4E  0012               	return	
 24117  016E50                     __end_of_x_to_d:
 24118                           	opt stack 0
 24119                           tblptru	equ	0xFF8
 24120                           tblptrh	equ	0xFF7
 24121                           tblptrl	equ	0xFF6
 24122                           tablat	equ	0xFF5
 24123                           prodh	equ	0xFF4
 24124                           prodl	equ	0xFF3
 24125                           intcon	equ	0xFF2
 24126                           intcon2	equ	0xFF1
 24127                           indf0	equ	0xFEF
 24128                           postinc0	equ	0xFEE
 24129                           fsr0h	equ	0xFEA
 24130                           fsr0l	equ	0xFE9
 24131                           wreg	equ	0xFE8
 24132                           indf1	equ	0xFE7
 24133                           postinc1	equ	0xFE6
 24134                           postdec1	equ	0xFE5
 24135                           fsr1h	equ	0xFE2
 24136                           fsr1l	equ	0xFE1
 24137                           indf2	equ	0xFDF
 24138                           postinc2	equ	0xFDE
 24139                           postdec2	equ	0xFDD
 24140                           plusw2	equ	0xFDB
 24141                           fsr2h	equ	0xFDA
 24142                           fsr2l	equ	0xFD9
 24143                           status	equ	0xFD8
 24144                           
 24145 ;; *************** function _ISR *****************
 24146 ;; Defined at:
 24147 ;;		line 50 in file "main.c"
 24148 ;; Parameters:    Size  Location     Type
 24149 ;;		None
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;		None
 24152 ;; Return value:  Size  Location     Type
 24153 ;;		None               void
 24154 ;; Registers used:
 24155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24156 ;; Tracked objects:
 24157 ;;		On entry : 0/0
 24158 ;;		On exit  : 0/0
 24159 ;;		Unchanged: 0/0
 24160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24163 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24164 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24165 ;;Total ram usage:       14 bytes
 24166 ;; Hardware stack levels used:    1
 24167 ;; Hardware stack levels required when called:   11
 24168 ;; This function calls:
 24169 ;;		_I2C_ISR
 24170 ;;		_LED_indicator
 24171 ;;		_USB_CDC_ISR
 24172 ;;		_millis_timer
 24173 ;; This function is called by:
 24174 ;;		Interrupt level 2
 24175 ;; This function uses a non-reentrant model
 24176 ;;
 24177                           
 24178                           	psect	intcode
 24179  001008                     __pintcode:
 24180                           	opt stack 0
 24181  001008                     _ISR:
 24182                           	opt stack 10
 24183                           
 24184                           ; BSR set to: 0
 24185                           ;incstack = 0
 24186  001008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24187  00100A  CFFA F04B          	movff	pclath,??_ISR
 24188  00100E  CFFB F04C          	movff	pclatu,??_ISR+1
 24189  001012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 24190  001016  CFEA F04E          	movff	fsr0h,??_ISR+3
 24191  00101A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 24192  00101E  CFE2 F050          	movff	fsr1h,??_ISR+5
 24193  001022  CFD9 F051          	movff	fsr2l,??_ISR+6
 24194  001026  CFDA F052          	movff	fsr2h,??_ISR+7
 24195  00102A  CFF3 F053          	movff	prodl,??_ISR+8
 24196  00102E  CFF4 F054          	movff	prodh,??_ISR+9
 24197  001032  CFF6 F055          	movff	tblptrl,??_ISR+10
 24198  001036  CFF7 F056          	movff	tblptrh,??_ISR+11
 24199  00103A  CFF8 F057          	movff	tblptru,??_ISR+12
 24200  00103E  CFF5 F058          	movff	tablat,??_ISR+13
 24201                           
 24202                           ;main.c: 51: USB_CDC_ISR();
 24203  001042  EC88  F0B7         	call	_USB_CDC_ISR	;wreg free
 24204                           
 24205                           ;main.c: 52: I2C_ISR();
 24206  001046  EC28  F0B7         	call	_I2C_ISR	;wreg free
 24207                           
 24208                           ;main.c: 53: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 24209  00104A  B4F2               	btfsc	intcon,2,c	;volatile
 24210  00104C  AAF2               	btfss	intcon,5,c	;volatile
 24211  00104E  D003               	goto	i2l10499
 24212                           
 24213                           ;main.c: 54: INTCONbits.T0IF = 0;
 24214  001050  94F2               	bcf	intcon,2,c	;volatile
 24215                           
 24216                           ;main.c: 55: millis_timer();
 24217  001052  ECD5  F0B6         	call	_millis_timer	;wreg free
 24218  001056                     i2l10499:
 24219                           
 24220                           ;main.c: 56: }
 24221                           ;main.c: 57: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 24222  001056  B09E               	btfsc	3998,0,c	;volatile
 24223  001058  A09D               	btfss	3997,0,c	;volatile
 24224  00105A  D01E               	goto	i2l10515
 24225                           
 24226                           ;main.c: 58: PIR1bits.TMR1IF = 0;
 24227  00105C  909E               	bcf	3998,0,c	;volatile
 24228                           
 24229                           ;main.c: 59: TMR1H = 0xC0;
 24230  00105E  0EC0               	movlw	192
 24231  001060  6ECF               	movwf	4047,c	;volatile
 24232                           
 24233                           ;main.c: 60: cut_time_flag = 1;
 24234  001062  0E01               	movlw	1
 24235  001064  0101               	movlb	1	; () banked
 24236  001066  6F1F               	movwf	_cut_time_flag& (0+255),b
 24237                           
 24238                           ;main.c: 61: static uint8_t cnt_t1 = 0;
 24239                           ;main.c: 62: if (cnt_t1) {
 24240  001068  0101               	movlb	1	; () banked
 24241  00106A  5117               	movf	ISR@cnt_t1& (0+255),w,b
 24242  00106C  B4D8               	btfsc	status,2,c
 24243  00106E  D004               	goto	i2l10509
 24244                           
 24245                           ; BSR set to: 1
 24246                           ;main.c: 63: cnt_t1 = 0;
 24247  001070  0E00               	movlw	0
 24248  001072  0101               	movlb	1	; () banked
 24249  001074  6F17               	movwf	ISR@cnt_t1& (0+255),b
 24250                           
 24251                           ;main.c: 64: } else {
 24252  001076  D010               	goto	i2l10515
 24253  001078                     i2l10509:
 24254                           
 24255                           ; BSR set to: 1
 24256                           ;main.c: 65: cnt_t1 = 1;
 24257  001078  0E01               	movlw	1
 24258  00107A  0101               	movlb	1	; () banked
 24259  00107C  6F17               	movwf	ISR@cnt_t1& (0+255),b
 24260                           
 24261                           ;main.c: 66: terminal_data_out_flag = 1;
 24262  00107E  0E01               	movlw	1
 24263  001080  0101               	movlb	1	; () banked
 24264  001082  6F25               	movwf	_terminal_data_out_flag& (0+255),b
 24265                           
 24266                           ;main.c: 67: integrate_flag = 1;
 24267  001084  0E01               	movlw	1
 24268  001086  0101               	movlb	1	; () banked
 24269  001088  6F21               	movwf	_integrate_flag& (0+255),b
 24270                           
 24271                           ; BSR set to: 1
 24272                           ;main.c: 68: if (print_item == PRINT_DATA)display_flag = 1;
 24273  00108A  0E02               	movlw	2
 24274  00108C  181F               	xorwf	_print_item,w,c
 24275  00108E  A4D8               	btfss	status,2,c
 24276  001090  D003               	goto	i2l10515
 24277                           
 24278                           ; BSR set to: 1
 24279  001092  0E01               	movlw	1
 24280  001094  0101               	movlb	1	; () banked
 24281  001096  6F20               	movwf	_display_flag& (0+255),b
 24282  001098                     i2l10515:
 24283                           
 24284                           ;main.c: 69: }
 24285                           ;main.c: 70: }
 24286                           ;main.c: 71: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 24287  001098  B2A1               	btfsc	4001,1,c	;volatile
 24288  00109A  A2A0               	btfss	4000,1,c	;volatile
 24289  00109C  D010               	goto	i2l1823
 24290                           
 24291                           ;main.c: 72: PIR2bits.TMR3IF = 0;
 24292  00109E  92A1               	bcf	4001,1,c	;volatile
 24293                           
 24294                           ;main.c: 73: ctmu_sampling_flag = 1;
 24295  0010A0  0E01               	movlw	1
 24296  0010A2  0101               	movlb	1	; () banked
 24297  0010A4  6F1E               	movwf	_ctmu_sampling_flag& (0+255),b
 24298                           
 24299                           ;main.c: 74: static uint8_t cnt;
 24300                           ;main.c: 75: if (cnt) {
 24301  0010A6  0101               	movlb	1	; () banked
 24302  0010A8  5116               	movf	ISR@cnt& (0+255),w,b
 24303  0010AA  B4D8               	btfsc	status,2,c
 24304  0010AC  D003               	goto	i2l10525
 24305                           
 24306                           ; BSR set to: 1
 24307                           ;main.c: 76: cnt--;
 24308  0010AE  0101               	movlb	1	; () banked
 24309  0010B0  0716               	decf	ISR@cnt& (0+255),f,b
 24310                           
 24311                           ;main.c: 77: } else {
 24312  0010B2  D005               	goto	i2l1823
 24313  0010B4                     i2l10525:
 24314                           
 24315                           ; BSR set to: 1
 24316                           ;main.c: 78: cnt = 8;
 24317  0010B4  0E08               	movlw	8
 24318  0010B6  0101               	movlb	1	; () banked
 24319  0010B8  6F16               	movwf	ISR@cnt& (0+255),b
 24320                           
 24321                           ; BSR set to: 1
 24322                           ;main.c: 79: LED_indicator();
 24323  0010BA  ECBC  F09D         	call	_LED_indicator	;wreg free
 24324  0010BE                     i2l1823:
 24325  0010BE  C058  FFF5         	movff	??_ISR+13,tablat
 24326  0010C2  C057  FFF8         	movff	??_ISR+12,tblptru
 24327  0010C6  C056  FFF7         	movff	??_ISR+11,tblptrh
 24328  0010CA  C055  FFF6         	movff	??_ISR+10,tblptrl
 24329  0010CE  C054  FFF4         	movff	??_ISR+9,prodh
 24330  0010D2  C053  FFF3         	movff	??_ISR+8,prodl
 24331  0010D6  C052  FFDA         	movff	??_ISR+7,fsr2h
 24332  0010DA  C051  FFD9         	movff	??_ISR+6,fsr2l
 24333  0010DE  C050  FFE2         	movff	??_ISR+5,fsr1h
 24334  0010E2  C04F  FFE1         	movff	??_ISR+4,fsr1l
 24335  0010E6  C04E  FFEA         	movff	??_ISR+3,fsr0h
 24336  0010EA  C04D  FFE9         	movff	??_ISR+2,fsr0l
 24337  0010EE  C04C  FFFB         	movff	??_ISR+1,pclatu
 24338  0010F2  C04B  FFFA         	movff	??_ISR,pclath
 24339  0010F6  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24340  0010F8  0011               	retfie		f
 24341  0010FA                     __end_of_ISR:
 24342                           	opt stack 0
 24343                           pclatu	equ	0xFFB
 24344                           pclath	equ	0xFFA
 24345                           tblptru	equ	0xFF8
 24346                           tblptrh	equ	0xFF7
 24347                           tblptrl	equ	0xFF6
 24348                           tablat	equ	0xFF5
 24349                           prodh	equ	0xFF4
 24350                           prodl	equ	0xFF3
 24351                           intcon	equ	0xFF2
 24352                           intcon2	equ	0xFF1
 24353                           indf0	equ	0xFEF
 24354                           postinc0	equ	0xFEE
 24355                           fsr0h	equ	0xFEA
 24356                           fsr0l	equ	0xFE9
 24357                           wreg	equ	0xFE8
 24358                           indf1	equ	0xFE7
 24359                           postinc1	equ	0xFE6
 24360                           postdec1	equ	0xFE5
 24361                           fsr1h	equ	0xFE2
 24362                           fsr1l	equ	0xFE1
 24363                           indf2	equ	0xFDF
 24364                           postinc2	equ	0xFDE
 24365                           postdec2	equ	0xFDD
 24366                           plusw2	equ	0xFDB
 24367                           fsr2h	equ	0xFDA
 24368                           fsr2l	equ	0xFD9
 24369                           status	equ	0xFD8
 24370                           
 24371 ;; *************** function _millis_timer *****************
 24372 ;; Defined at:
 24373 ;;		line 222 in file "../My_library/My_PIC.c"
 24374 ;; Parameters:    Size  Location     Type
 24375 ;;		None
 24376 ;; Auto vars:     Size  Location     Type
 24377 ;;		None
 24378 ;; Return value:  Size  Location     Type
 24379 ;;		None               void
 24380 ;; Registers used:
 24381 ;;		wreg, status,2, status,0
 24382 ;; Tracked objects:
 24383 ;;		On entry : 0/0
 24384 ;;		On exit  : 0/0
 24385 ;;		Unchanged: 0/0
 24386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24391 ;;Total ram usage:        0 bytes
 24392 ;; Hardware stack levels used:    1
 24393 ;; This function calls:
 24394 ;;		Nothing
 24395 ;; This function is called by:
 24396 ;;		_ISR
 24397 ;; This function uses a non-reentrant model
 24398 ;;
 24399                           
 24400                           	psect	text103
 24401  016DAA                     __ptext103:
 24402                           	opt stack 0
 24403  016DAA                     _millis_timer:
 24404                           	opt stack 20
 24405                           
 24406                           ;My_PIC.c: 223: static uint16_t cnt;
 24407                           ;My_PIC.c: 224: if (cnt) {
 24408                           
 24409                           ;incstack = 0
 24410  016DAA  0101               	movlb	1	; () banked
 24411  016DAC  5114               	movf	millis_timer@cnt& (0+255),w,b
 24412  016DAE  0101               	movlb	1	; () banked
 24413  016DB0  1115               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 24414  016DB2  A4D8               	btfss	status,2,c
 24415  016DB4  0012               	return	
 24416                           
 24417                           ; BSR set to: 1
 24418                           ;My_PIC.c: 227: cnt = 47;
 24419                           
 24420                           ; BSR set to: 1
 24421                           
 24422                           ; BSR set to: 1
 24423                           ;My_PIC.c: 226: } else {
 24424  016DB6  0E00               	movlw	0
 24425  016DB8  0101               	movlb	1	; () banked
 24426  016DBA  6F15               	movwf	(millis_timer@cnt+1)& (0+255),b
 24427  016DBC  0E2F               	movlw	47
 24428  016DBE  6F14               	movwf	millis_timer@cnt& (0+255),b
 24429                           
 24430                           ; BSR set to: 1
 24431                           ;My_PIC.c: 228: ms++;
 24432  016DC0  0E01               	movlw	1
 24433  016DC2  0102               	movlb	2	; () banked
 24434  016DC4  270E               	addwf	_ms& (0+255),f,b
 24435  016DC6  0E00               	movlw	0
 24436  016DC8  230F               	addwfc	(_ms+1)& (0+255),f,b
 24437  016DCA  2310               	addwfc	(_ms+2)& (0+255),f,b
 24438  016DCC  2311               	addwfc	(_ms+3)& (0+255),f,b
 24439  016DCE  0012               	return	
 24440  016DD0                     __end_of_millis_timer:
 24441                           	opt stack 0
 24442                           pclatu	equ	0xFFB
 24443                           pclath	equ	0xFFA
 24444                           tblptru	equ	0xFF8
 24445                           tblptrh	equ	0xFF7
 24446                           tblptrl	equ	0xFF6
 24447                           tablat	equ	0xFF5
 24448                           prodh	equ	0xFF4
 24449                           prodl	equ	0xFF3
 24450                           intcon	equ	0xFF2
 24451                           intcon2	equ	0xFF1
 24452                           indf0	equ	0xFEF
 24453                           postinc0	equ	0xFEE
 24454                           fsr0h	equ	0xFEA
 24455                           fsr0l	equ	0xFE9
 24456                           wreg	equ	0xFE8
 24457                           indf1	equ	0xFE7
 24458                           postinc1	equ	0xFE6
 24459                           postdec1	equ	0xFE5
 24460                           fsr1h	equ	0xFE2
 24461                           fsr1l	equ	0xFE1
 24462                           indf2	equ	0xFDF
 24463                           postinc2	equ	0xFDE
 24464                           postdec2	equ	0xFDD
 24465                           plusw2	equ	0xFDB
 24466                           fsr2h	equ	0xFDA
 24467                           fsr2l	equ	0xFD9
 24468                           status	equ	0xFD8
 24469                           
 24470 ;; *************** function _USB_CDC_ISR *****************
 24471 ;; Defined at:
 24472 ;;		line 33 in file "../My_library/My_usb_cdc.c"
 24473 ;; Parameters:    Size  Location     Type
 24474 ;;		None
 24475 ;; Auto vars:     Size  Location     Type
 24476 ;;		None
 24477 ;; Return value:  Size  Location     Type
 24478 ;;		None               void
 24479 ;; Registers used:
 24480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24481 ;; Tracked objects:
 24482 ;;		On entry : 0/0
 24483 ;;		On exit  : 0/0
 24484 ;;		Unchanged: 0/0
 24485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24490 ;;Total ram usage:        0 bytes
 24491 ;; Hardware stack levels used:    1
 24492 ;; Hardware stack levels required when called:   10
 24493 ;; This function calls:
 24494 ;;		_USBDeviceTasks
 24495 ;; This function is called by:
 24496 ;;		_ISR
 24497 ;; This function uses a non-reentrant model
 24498 ;;
 24499                           
 24500                           	psect	text104
 24501  016F10                     __ptext104:
 24502                           	opt stack 0
 24503  016F10                     _USB_CDC_ISR:
 24504                           	opt stack 10
 24505                           
 24506                           ;My_usb_cdc.c: 35: USBDeviceTasks();
 24507                           
 24508                           ;incstack = 0
 24509  016F10  EC43  F09B         	call	_USBDeviceTasks	;wreg free
 24510  016F14  0012               	return		;funcret
 24511  016F16                     __end_of_USB_CDC_ISR:
 24512                           	opt stack 0
 24513                           pclatu	equ	0xFFB
 24514                           pclath	equ	0xFFA
 24515                           tblptru	equ	0xFF8
 24516                           tblptrh	equ	0xFF7
 24517                           tblptrl	equ	0xFF6
 24518                           tablat	equ	0xFF5
 24519                           prodh	equ	0xFF4
 24520                           prodl	equ	0xFF3
 24521                           intcon	equ	0xFF2
 24522                           intcon2	equ	0xFF1
 24523                           indf0	equ	0xFEF
 24524                           postinc0	equ	0xFEE
 24525                           fsr0h	equ	0xFEA
 24526                           fsr0l	equ	0xFE9
 24527                           wreg	equ	0xFE8
 24528                           indf1	equ	0xFE7
 24529                           postinc1	equ	0xFE6
 24530                           postdec1	equ	0xFE5
 24531                           fsr1h	equ	0xFE2
 24532                           fsr1l	equ	0xFE1
 24533                           indf2	equ	0xFDF
 24534                           postinc2	equ	0xFDE
 24535                           postdec2	equ	0xFDD
 24536                           plusw2	equ	0xFDB
 24537                           fsr2h	equ	0xFDA
 24538                           fsr2l	equ	0xFD9
 24539                           status	equ	0xFD8
 24540                           
 24541 ;; *************** function _USBDeviceTasks *****************
 24542 ;; Defined at:
 24543 ;;		line 490 in file "../My_library/usb/usb_device.c"
 24544 ;; Parameters:    Size  Location     Type
 24545 ;;		None
 24546 ;; Auto vars:     Size  Location     Type
 24547 ;;  i               1   29[COMRAM] unsigned char 
 24548 ;; Return value:  Size  Location     Type
 24549 ;;		None               void
 24550 ;; Registers used:
 24551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24552 ;; Tracked objects:
 24553 ;;		On entry : 0/0
 24554 ;;		On exit  : 0/0
 24555 ;;		Unchanged: 0/0
 24556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24561 ;;Total ram usage:        1 bytes
 24562 ;; Hardware stack levels used:    1
 24563 ;; Hardware stack levels required when called:    9
 24564 ;; This function calls:
 24565 ;;		_USBCtrlEPAllowStatusStage
 24566 ;;		_USBCtrlEPService
 24567 ;;		_USBStallHandler
 24568 ;;		_USBSuspend
 24569 ;;		_USBWakeFromSuspend
 24570 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24571 ;;		i2_USBDeviceInit
 24572 ;; This function is called by:
 24573 ;;		_USB_CDC_ISR
 24574 ;; This function uses a non-reentrant model
 24575 ;;
 24576                           
 24577                           	psect	text105
 24578  013686                     __ptext105:
 24579                           	opt stack 0
 24580  013686                     _USBDeviceTasks:
 24581                           	opt stack 10
 24582                           
 24583                           ;usb_device.c: 492: uint8_t i;
 24584                           ;usb_device.c: 603: if(USBDeviceState == ATTACHED_STATE)
 24585                           
 24586                           ;incstack = 0
 24587  013686  0413               	decf	_USBDeviceState,w,c	;volatile
 24588  013688  B4D8               	btfsc	status,2,c
 24589                           
 24590                           ;usb_device.c: 604: {
 24591                           ;usb_device.c: 614: if(!UCONbits.SE0)
 24592  01368A  BA65               	btfsc	3941,5,c	;volatile
 24593  01368C  D008               	goto	i2l9103
 24594                           
 24595                           ;usb_device.c: 615: {
 24596                           ;usb_device.c: 616: {UIR = 0;};
 24597  01368E  0E00               	movlw	0
 24598  013690  6E62               	movwf	3938,c	;volatile
 24599                           
 24600                           ;usb_device.c: 620: UIEbits.URSTIE = 1;
 24601  013692  010F               	movlb	15	; () banked
 24602  013694  8136               	bsf	54,0,b	;volatile
 24603                           
 24604                           ; BSR set to: 15
 24605                           ;usb_device.c: 621: UIEbits.IDLEIE = 1;
 24606  013696  010F               	movlb	15	; () banked
 24607  013698  8936               	bsf	54,4,b	;volatile
 24608                           
 24609                           ;usb_device.c: 622: USBDeviceState = POWERED_STATE;
 24610  01369A  0E02               	movlw	2
 24611  01369C  6E13               	movwf	_USBDeviceState,c	;volatile
 24612  01369E                     i2l9103:
 24613                           
 24614                           ;usb_device.c: 623: }
 24615                           ;usb_device.c: 624: }
 24616                           ;usb_device.c: 640: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24617  01369E  A462               	btfss	3938,2,c	;volatile
 24618  0136A0  D006               	goto	i2l9111
 24619  0136A2  010F               	movlb	15	; () banked
 24620  0136A4  A536               	btfss	54,2,b	;volatile
 24621  0136A6  D003               	goto	i2l9111
 24622                           
 24623                           ; BSR set to: 15
 24624                           ;usb_device.c: 641: {
 24625                           ;usb_device.c: 642: (UIR &= 0xFB);
 24626  0136A8  9462               	bcf	3938,2,c	;volatile
 24627                           
 24628                           ; BSR set to: 15
 24629                           ;usb_device.c: 646: USBWakeFromSuspend();
 24630  0136AA  ECC0  F0B5         	call	_USBWakeFromSuspend	;wreg free
 24631  0136AE                     i2l9111:
 24632                           
 24633                           ;usb_device.c: 648: }
 24634                           ;usb_device.c: 653: if(UCONbits.SUSPND==1)
 24635  0136AE  A265               	btfss	3941,1,c	;volatile
 24636  0136B0  D002               	goto	i2l158
 24637                           
 24638                           ;usb_device.c: 654: {
 24639                           ;usb_device.c: 655: {PIR2bits.USBIF = 0;};
 24640  0136B2  98A1               	bcf	4001,4,c	;volatile
 24641                           
 24642                           ;usb_device.c: 656: return;
 24643  0136B4  0012               	return	
 24644  0136B6                     i2l158:
 24645                           
 24646                           ;usb_device.c: 657: }
 24647                           ;usb_device.c: 669: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24648  0136B6  A062               	btfss	3938,0,c	;volatile
 24649  0136B8  D009               	goto	i2l9125
 24650  0136BA  010F               	movlb	15	; () banked
 24651  0136BC  A136               	btfss	54,0,b	;volatile
 24652  0136BE  D006               	goto	i2l9125
 24653                           
 24654                           ; BSR set to: 15
 24655                           ;usb_device.c: 670: {
 24656                           ;usb_device.c: 671: USBDeviceInit();
 24657  0136C0  ECE5  F09B         	call	i2_USBDeviceInit	;wreg free
 24658                           
 24659                           ;usb_device.c: 675: {PIE2bits.USBIE = 1;};
 24660  0136C4  88A0               	bsf	4000,4,c	;volatile
 24661                           
 24662                           ;usb_device.c: 677: USBDeviceState = DEFAULT_STATE;
 24663  0136C6  0E04               	movlw	4
 24664  0136C8  6E13               	movwf	_USBDeviceState,c	;volatile
 24665                           
 24666                           ;usb_device.c: 687: (UIR &= 0xFE);
 24667  0136CA  9062               	bcf	3938,0,c	;volatile
 24668  0136CC                     i2l9125:
 24669                           
 24670                           ;usb_device.c: 688: }
 24671                           ;usb_device.c: 693: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24672  0136CC  A862               	btfss	3938,4,c	;volatile
 24673  0136CE  D006               	goto	i2l9133
 24674  0136D0  010F               	movlb	15	; () banked
 24675  0136D2  A936               	btfss	54,4,b	;volatile
 24676  0136D4  D003               	goto	i2l9133
 24677                           
 24678                           ; BSR set to: 15
 24679                           ;usb_device.c: 694: {
 24680                           ;usb_device.c: 699: USBSuspend();
 24681  0136D6  EC1C  F0B6         	call	_USBSuspend	;wreg free
 24682                           
 24683                           ;usb_device.c: 702: (UIR &= 0xEF);
 24684  0136DA  9862               	bcf	3938,4,c	;volatile
 24685  0136DC                     i2l9133:
 24686                           
 24687                           ;usb_device.c: 703: }
 24688                           ;usb_device.c: 705: if(UIRbits.SOFIF)
 24689  0136DC  AC62               	btfss	3938,6,c	;volatile
 24690  0136DE  D019               	goto	i2l9149
 24691                           
 24692                           ;usb_device.c: 706: {
 24693                           ;usb_device.c: 707: if(UIEbits.SOFIE)
 24694  0136E0  010F               	movlb	15	; () banked
 24695  0136E2  AD36               	btfss	54,6,b	;volatile
 24696  0136E4  D00E               	goto	i2l9139
 24697                           
 24698                           ; BSR set to: 15
 24699                           ;usb_device.c: 708: {
 24700                           ;usb_device.c: 709: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24701  0136E6  0E00               	movlw	0
 24702  0136E8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24703  0136EA  0E73               	movlw	115
 24704  0136EC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24705  0136EE  0E00               	movlw	0
 24706  0136F0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24707  0136F2  0E00               	movlw	0
 24708  0136F4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24709  0136F6  0E00               	movlw	0
 24710  0136F8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24711  0136FA  0E01               	movlw	1
 24712  0136FC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24713  0136FE  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24714  013702                     i2l9139:
 24715                           
 24716                           ;usb_device.c: 710: }
 24717                           ;usb_device.c: 711: (UIR &= 0xBF);
 24718  013702  9C62               	bcf	3938,6,c	;volatile
 24719                           
 24720                           ;usb_device.c: 736: if(USBStatusStageTimeoutCounter != 0u)
 24721  013704  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24722  013706  A4D8               	btfss	status,2,c
 24723                           
 24724                           ;usb_device.c: 737: {
 24725                           ;usb_device.c: 738: USBStatusStageTimeoutCounter--;
 24726  013708  0616               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24727                           
 24728                           ;usb_device.c: 739: }
 24729                           ;usb_device.c: 745: if(USBStatusStageTimeoutCounter == 0)
 24730  01370A  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24731  01370C  B4D8               	btfsc	status,2,c
 24732                           
 24733                           ;usb_device.c: 746: {
 24734                           ;usb_device.c: 747: USBCtrlEPAllowStatusStage();
 24735  01370E  EC6D  F0A9         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24736  013712                     i2l9149:
 24737                           
 24738                           ;usb_device.c: 748: }
 24739                           ;usb_device.c: 750: }
 24740                           ;usb_device.c: 752: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24741  013712  AA62               	btfss	3938,5,c	;volatile
 24742  013714  D004               	goto	i2l9155
 24743  013716  010F               	movlb	15	; () banked
 24744  013718  BB36               	btfsc	54,5,b	;volatile
 24745                           
 24746                           ; BSR set to: 15
 24747                           ;usb_device.c: 753: {
 24748                           ;usb_device.c: 754: USBStallHandler();
 24749  01371A  EC80  F0B4         	call	_USBStallHandler	;wreg free
 24750  01371E                     i2l9155:
 24751                           
 24752                           ;usb_device.c: 755: }
 24753                           ;usb_device.c: 757: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24754  01371E  A262               	btfss	3938,1,c	;volatile
 24755  013720  D012               	goto	i2l9163
 24756  013722  010F               	movlb	15	; () banked
 24757  013724  A336               	btfss	54,1,b	;volatile
 24758  013726  D00F               	goto	i2l9163
 24759                           
 24760                           ; BSR set to: 15
 24761                           ;usb_device.c: 758: {
 24762                           ;usb_device.c: 759: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24763  013728  0E7F               	movlw	127
 24764  01372A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24765  01372C  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24766  01372E  0E00               	movlw	0
 24767  013730  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24768  013732  0E00               	movlw	0
 24769  013734  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24770  013736  0E00               	movlw	0
 24771  013738  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24772  01373A  0E01               	movlw	1
 24773  01373C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24774  01373E  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24775                           
 24776                           ;usb_device.c: 760: {UEIR = 0;};
 24777  013742  0E00               	movlw	0
 24778  013744  6E63               	movwf	3939,c	;volatile
 24779  013746                     i2l9163:
 24780                           
 24781                           ;usb_device.c: 768: }
 24782                           ;usb_device.c: 775: if(USBDeviceState < DEFAULT_STATE)
 24783  013746  0E04               	movlw	4
 24784  013748  6013               	cpfslt	_USBDeviceState,c	;volatile
 24785  01374A  D002               	goto	i2l168
 24786                           
 24787                           ;usb_device.c: 776: {
 24788                           ;usb_device.c: 777: {PIR2bits.USBIF = 0;};
 24789  01374C  98A1               	bcf	4001,4,c	;volatile
 24790                           
 24791                           ;usb_device.c: 778: return;
 24792  01374E  0012               	return	
 24793  013750                     i2l168:
 24794                           
 24795                           ;usb_device.c: 779: }
 24796                           ;usb_device.c: 784: if(UIEbits.TRNIE)
 24797  013750  010F               	movlb	15	; () banked
 24798  013752  A736               	btfss	54,3,b	;volatile
 24799  013754  D038               	goto	i2l169
 24800                           
 24801                           ; BSR set to: 15
 24802                           ;usb_device.c: 785: {
 24803                           ;usb_device.c: 786: for(i = 0; i < 4u; i++)
 24804  013756  0E00               	movlw	0
 24805  013758  6E4A               	movwf	USBDeviceTasks@i,c
 24806  01375A                     i2l9169:
 24807                           
 24808                           ; BSR set to: 15
 24809  01375A  0E03               	movlw	3
 24810  01375C  644A               	cpfsgt	USBDeviceTasks@i,c
 24811  01375E  D001               	goto	i2l170
 24812  013760  D032               	goto	i2l169
 24813  013762                     i2l170:
 24814                           
 24815                           ;usb_device.c: 787: {
 24816                           ;usb_device.c: 788: if(UIRbits.TRNIF)
 24817  013762  A662               	btfss	3938,3,c	;volatile
 24818  013764  D030               	goto	i2l169
 24819                           
 24820                           ;usb_device.c: 789: {
 24821                           ;usb_device.c: 791: USTATcopy.Val = USTAT;
 24822  013766  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24823                           
 24824                           ;usb_device.c: 792: endpoint_number = USTATcopy.endpoint_number;
 24825  01376A  302C               	rrcf	_USTATcopy,w,c	;volatile
 24826  01376C  32E8               	rrcf	wreg,f,c
 24827  01376E  32E8               	rrcf	wreg,f,c
 24828  013770  0B0F               	andlw	15
 24829  013772  6E1E               	movwf	_endpoint_number,c	;volatile
 24830                           
 24831                           ;usb_device.c: 794: (UIR &= 0xF7);
 24832  013774  9662               	bcf	3938,3,c	;volatile
 24833                           
 24834                           ;usb_device.c: 799: if(USTATcopy.direction == 0)
 24835  013776  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24836  013778  D007               	goto	i2l9183
 24837                           
 24838                           ;usb_device.c: 800: {
 24839                           ;usb_device.c: 801: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24840  01377A  501E               	movf	_endpoint_number,w,c	;volatile
 24841  01377C  0D01               	mullw	1
 24842  01377E  0E04               	movlw	low _ep_data_out
 24843  013780  24F3               	addwf	prodl,w,c
 24844  013782  6ED9               	movwf	fsr2l,c
 24845  013784  0E00               	movlw	high _ep_data_out
 24846  013786  D006               	goto	L11
 24847  013788                     i2l9183:
 24848                           
 24849                           ;usb_device.c: 803: else
 24850                           ;usb_device.c: 804: {
 24851                           ;usb_device.c: 805: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24852  013788  501E               	movf	_endpoint_number,w,c	;volatile
 24853  01378A  0D01               	mullw	1
 24854  01378C  0E01               	movlw	low _ep_data_in
 24855  01378E  24F3               	addwf	prodl,w,c
 24856  013790  6ED9               	movwf	fsr2l,c
 24857  013792  0E00               	movlw	high _ep_data_in
 24858  013794                     L11:
 24859  013794  20F4               	addwfc	prodh,w,c
 24860  013796  6EDA               	movwf	fsr2h,c
 24861  013798  70DF               	btg	indf2,0,c
 24862                           
 24863                           ;usb_device.c: 806: }
 24864                           ;usb_device.c: 811: if(endpoint_number == 0)
 24865  01379A  501E               	movf	_endpoint_number,w,c	;volatile
 24866  01379C  A4D8               	btfss	status,2,c
 24867  01379E  D003               	goto	i2l9189
 24868                           
 24869                           ;usb_device.c: 812: {
 24870                           ;usb_device.c: 813: USBCtrlEPService();
 24871  0137A0  EC3C  F0A8         	call	_USBCtrlEPService	;wreg free
 24872                           
 24873                           ;usb_device.c: 814: }
 24874  0137A4  D00E               	goto	i2l9191
 24875  0137A6                     i2l9189:
 24876                           
 24877                           ;usb_device.c: 815: else
 24878                           ;usb_device.c: 816: {
 24879                           ;usb_device.c: 817: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24880  0137A6  0E00               	movlw	0
 24881  0137A8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24882  0137AA  0E72               	movlw	114
 24883  0137AC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24884  0137AE  0E2C               	movlw	low _USTATcopy
 24885  0137B0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24886  0137B2  0E00               	movlw	high _USTATcopy
 24887  0137B4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24888  0137B6  0E00               	movlw	0
 24889  0137B8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24890  0137BA  0E00               	movlw	0
 24891  0137BC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24892  0137BE  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24893  0137C2                     i2l9191:
 24894  0137C2  2A4A               	incf	USBDeviceTasks@i,f,c
 24895  0137C4  D7CA               	goto	i2l9169
 24896  0137C6                     i2l169:
 24897                           
 24898                           ;usb_device.c: 823: }
 24899                           ;usb_device.c: 824: }
 24900                           ;usb_device.c: 825: }
 24901                           ;usb_device.c: 827: {PIR2bits.USBIF = 0;};
 24902  0137C6  98A1               	bcf	4001,4,c	;volatile
 24903  0137C8  0012               	return		;funcret
 24904  0137CA                     __end_of_USBDeviceTasks:
 24905                           	opt stack 0
 24906                           pclatu	equ	0xFFB
 24907                           pclath	equ	0xFFA
 24908                           tblptru	equ	0xFF8
 24909                           tblptrh	equ	0xFF7
 24910                           tblptrl	equ	0xFF6
 24911                           tablat	equ	0xFF5
 24912                           prodh	equ	0xFF4
 24913                           prodl	equ	0xFF3
 24914                           intcon	equ	0xFF2
 24915                           intcon2	equ	0xFF1
 24916                           indf0	equ	0xFEF
 24917                           postinc0	equ	0xFEE
 24918                           fsr0h	equ	0xFEA
 24919                           fsr0l	equ	0xFE9
 24920                           wreg	equ	0xFE8
 24921                           indf1	equ	0xFE7
 24922                           postinc1	equ	0xFE6
 24923                           postdec1	equ	0xFE5
 24924                           fsr1h	equ	0xFE2
 24925                           fsr1l	equ	0xFE1
 24926                           indf2	equ	0xFDF
 24927                           postinc2	equ	0xFDE
 24928                           postdec2	equ	0xFDD
 24929                           plusw2	equ	0xFDB
 24930                           fsr2h	equ	0xFDA
 24931                           fsr2l	equ	0xFD9
 24932                           status	equ	0xFD8
 24933                           
 24934 ;; *************** function i2_USBDeviceInit *****************
 24935 ;; Defined at:
 24936 ;;		line 299 in file "../My_library/usb/usb_device.c"
 24937 ;; Parameters:    Size  Location     Type
 24938 ;;		None
 24939 ;; Auto vars:     Size  Location     Type
 24940 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24941 ;; Return value:  Size  Location     Type
 24942 ;;		None               void
 24943 ;; Registers used:
 24944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24945 ;; Tracked objects:
 24946 ;;		On entry : 0/0
 24947 ;;		On exit  : 0/0
 24948 ;;		Unchanged: 0/0
 24949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24954 ;;Total ram usage:        1 bytes
 24955 ;; Hardware stack levels used:    1
 24956 ;; Hardware stack levels required when called:    1
 24957 ;; This function calls:
 24958 ;;		i2_memset
 24959 ;; This function is called by:
 24960 ;;		_USBDeviceTasks
 24961 ;; This function uses a non-reentrant model
 24962 ;;
 24963                           
 24964                           	psect	text106
 24965  0137CA                     __ptext106:
 24966                           	opt stack 0
 24967  0137CA                     i2_USBDeviceInit:
 24968                           	opt stack 17
 24969                           
 24970                           ;usb_device.c: 301: uint8_t i;
 24971                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 24972                           
 24973                           ;incstack = 0
 24974  0137CA  98A0               	bcf	4000,4,c	;volatile
 24975                           
 24976                           ;usb_device.c: 306: {UEIR = 0;};
 24977  0137CC  0E00               	movlw	0
 24978  0137CE  6E63               	movwf	3939,c	;volatile
 24979                           
 24980                           ;usb_device.c: 309: {UIR = 0;};
 24981  0137D0  0E00               	movlw	0
 24982  0137D2  6E62               	movwf	3938,c	;volatile
 24983                           
 24984                           ;usb_device.c: 312: UEP0 = 0;
 24985  0137D4  0E00               	movlw	0
 24986  0137D6  010F               	movlb	15	; () banked
 24987  0137D8  6F26               	movwf	38,b	;volatile
 24988                           
 24989                           ; BSR set to: 15
 24990                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 24991  0137DA  0E27               	movlw	39
 24992  0137DC  6E2D               	movwf	i2memset@p1,c
 24993  0137DE  0E0F               	movlw	15
 24994  0137E0  6E2E               	movwf	i2memset@p1+1,c
 24995  0137E2  0E00               	movlw	0
 24996  0137E4  6E30               	movwf	i2memset@c+1,c
 24997  0137E6  0E00               	movlw	0
 24998  0137E8  6E2F               	movwf	i2memset@c,c
 24999  0137EA  0E00               	movlw	0
 25000  0137EC  6E32               	movwf	i2memset@n+1,c
 25001  0137EE  0E02               	movlw	2
 25002  0137F0  6E31               	movwf	i2memset@n,c
 25003  0137F2  EC32  F0B6         	call	i2_memset	;wreg free
 25004                           
 25005                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25006  0137F6  0E16               	movlw	22
 25007  0137F8  010F               	movlb	15	; () banked
 25008  0137FA  6F39               	movwf	57,b	;volatile
 25009                           
 25010                           ; BSR set to: 15
 25011  0137FC  0E9F               	movlw	159
 25012  0137FE  010F               	movlb	15	; () banked
 25013  013800  6F37               	movwf	55,b	;volatile
 25014                           
 25015                           ; BSR set to: 15
 25016  013802  0E7B               	movlw	123
 25017  013804  010F               	movlb	15	; () banked
 25018  013806  6F36               	movwf	54,b	;volatile
 25019                           
 25020                           ; BSR set to: 15
 25021                           ;usb_device.c: 319: ;
 25022                           ;usb_device.c: 322: ;
 25023                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 25024  013808  0E00               	movlw	0
 25025  01380A  6E35               	movwf	i2USBDeviceInit@i,c
 25026  01380C                     i2l9039:
 25027                           
 25028                           ; BSR set to: 15
 25029  01380C  0E0B               	movlw	11
 25030  01380E  6435               	cpfsgt	i2USBDeviceInit@i,c
 25031  013810  D001               	goto	i2l9043
 25032  013812  D00E               	goto	i2l146
 25033  013814                     i2l9043:
 25034                           
 25035                           ;usb_device.c: 326: {
 25036                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 25037  013814  5035               	movf	i2USBDeviceInit@i,w,c
 25038  013816  0D04               	mullw	4
 25039  013818  0E00               	movlw	0
 25040  01381A  24F3               	addwf	prodl,w,c
 25041  01381C  6ED9               	movwf	fsr2l,c
 25042  01381E  0E0D               	movlw	13
 25043  013820  20F4               	addwfc	prodh,w,c
 25044  013822  6EDA               	movwf	fsr2h,c
 25045  013824  6ADE               	clrf	postinc2,c
 25046  013826  6ADE               	clrf	postinc2,c
 25047  013828  6ADE               	clrf	postinc2,c
 25048  01382A  6ADD               	clrf	postdec2,c
 25049  01382C  2A35               	incf	i2USBDeviceInit@i,f,c
 25050  01382E  D7EE               	goto	i2l9039
 25051  013830                     i2l146:
 25052                           
 25053                           ;usb_device.c: 328: }
 25054                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 25055  013830  8C65               	bsf	3941,6,c	;volatile
 25056                           
 25057                           ;usb_device.c: 334: UADDR = 0x00;
 25058  013832  0E00               	movlw	0
 25059  013834  010F               	movlb	15	; () banked
 25060  013836  6F38               	movwf	56,b	;volatile
 25061                           
 25062                           ; BSR set to: 15
 25063                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 25064  013838  9865               	bcf	3941,4,c	;volatile
 25065                           
 25066                           ; BSR set to: 15
 25067                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 25068  01383A  9C65               	bcf	3941,6,c	;volatile
 25069                           
 25070                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 25071  01383C  D00C               	goto	i2l9063
 25072  01383E                     i2l9055:
 25073                           
 25074                           ;usb_device.c: 344: {
 25075                           ;usb_device.c: 345: (UIR &= 0xF7);
 25076  01383E  9662               	bcf	3938,3,c	;volatile
 25077                           
 25078                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 25079  013840  0E00               	movlw	0
 25080  013842  0100               	movlb	0	; () banked
 25081  013844  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25082                           
 25083                           ; BSR set to: 0
 25084                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 25085  013846  0E00               	movlw	0
 25086  013848  0100               	movlb	0	; () banked
 25087  01384A  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25088                           
 25089                           ; BSR set to: 0
 25090                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 25091  01384C  0E00               	movlw	0
 25092  01384E  0100               	movlb	0	; () banked
 25093  013850  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25094  013852  0E00               	movlw	0
 25095  013854  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25096  013856                     i2l9063:
 25097  013856  B662               	btfsc	3938,3,c	;volatile
 25098  013858  D7F2               	goto	i2l9055
 25099                           
 25100                           ;usb_device.c: 350: }
 25101                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 25102  01385A  0E01               	movlw	1
 25103  01385C  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25104                           
 25105                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 25106  01385E  0E01               	movlw	1
 25107  013860  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25108                           
 25109                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 25110  013862  0E00               	movlw	0
 25111  013864  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25112                           
 25113                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 25114  013866  0E00               	movlw	0
 25115  013868  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25116                           
 25117                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 25118  01386A  0E00               	movlw	0
 25119  01386C  0101               	movlb	1	; () banked
 25120  01386E  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25121                           
 25122                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 25123  013870  0E00               	movlw	0
 25124  013872  6E35               	movwf	i2USBDeviceInit@i,c
 25125  013874                     i2l9067:
 25126                           
 25127                           ; BSR set to: 1
 25128  013874  0E02               	movlw	2
 25129  013876  6435               	cpfsgt	i2USBDeviceInit@i,c
 25130  013878  D001               	goto	i2l9071
 25131  01387A  D02E               	goto	i2l9077
 25132  01387C                     i2l9071:
 25133                           
 25134                           ;usb_device.c: 364: {
 25135                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 25136  01387C  5035               	movf	i2USBDeviceInit@i,w,c
 25137  01387E  0D02               	mullw	2
 25138  013880  0EF5               	movlw	low _pBDTEntryIn
 25139  013882  24F3               	addwf	prodl,w,c
 25140  013884  6ED9               	movwf	fsr2l,c
 25141  013886  0E00               	movlw	high _pBDTEntryIn
 25142  013888  20F4               	addwfc	prodh,w,c
 25143  01388A  6EDA               	movwf	fsr2h,c
 25144  01388C  0E00               	movlw	0
 25145  01388E  6EDE               	movwf	postinc2,c
 25146  013890  0E00               	movlw	0
 25147  013892  6EDD               	movwf	postdec2,c
 25148                           
 25149                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 25150  013894  5035               	movf	i2USBDeviceInit@i,w,c
 25151  013896  0D02               	mullw	2
 25152  013898  0E00               	movlw	low _pBDTEntryOut
 25153  01389A  24F3               	addwf	prodl,w,c
 25154  01389C  6ED9               	movwf	fsr2l,c
 25155  01389E  0E01               	movlw	high _pBDTEntryOut
 25156  0138A0  20F4               	addwfc	prodh,w,c
 25157  0138A2  6EDA               	movwf	fsr2h,c
 25158  0138A4  0E00               	movlw	0
 25159  0138A6  6EDE               	movwf	postinc2,c
 25160  0138A8  0E00               	movlw	0
 25161  0138AA  6EDD               	movwf	postdec2,c
 25162                           
 25163                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 25164  0138AC  5035               	movf	i2USBDeviceInit@i,w,c
 25165  0138AE  0D01               	mullw	1
 25166  0138B0  0E01               	movlw	low _ep_data_in
 25167  0138B2  24F3               	addwf	prodl,w,c
 25168  0138B4  6ED9               	movwf	fsr2l,c
 25169  0138B6  0E00               	movlw	high _ep_data_in
 25170  0138B8  20F4               	addwfc	prodh,w,c
 25171  0138BA  6EDA               	movwf	fsr2h,c
 25172  0138BC  0E00               	movlw	0
 25173  0138BE  6EDF               	movwf	indf2,c
 25174                           
 25175                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 25176  0138C0  5035               	movf	i2USBDeviceInit@i,w,c
 25177  0138C2  0D01               	mullw	1
 25178  0138C4  0E04               	movlw	low _ep_data_out
 25179  0138C6  24F3               	addwf	prodl,w,c
 25180  0138C8  6ED9               	movwf	fsr2l,c
 25181  0138CA  0E00               	movlw	high _ep_data_out
 25182  0138CC  20F4               	addwfc	prodh,w,c
 25183  0138CE  6EDA               	movwf	fsr2h,c
 25184  0138D0  0E00               	movlw	0
 25185  0138D2  6EDF               	movwf	indf2,c
 25186  0138D4  2A35               	incf	i2USBDeviceInit@i,f,c
 25187  0138D6  D7CE               	goto	i2l9067
 25188  0138D8                     i2l9077:
 25189                           
 25190                           ;usb_device.c: 369: }
 25191                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25192  0138D8  0E08               	movlw	8
 25193  0138DA  0100               	movlb	0	; () banked
 25194  0138DC  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 25195  0138DE  0E0D               	movlw	13
 25196  0138E0  0100               	movlb	0	; () banked
 25197  0138E2  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25198                           
 25199                           ; BSR set to: 0
 25200                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 25201  0138E4  0E16               	movlw	22
 25202  0138E6  010F               	movlb	15	; () banked
 25203  0138E8  6F26               	movwf	38,b	;volatile
 25204                           
 25205                           ; BSR set to: 15
 25206                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25207  0138EA  0E0D               	movlw	13
 25208  0138EC  010D               	movlb	13	; () banked
 25209  0138EE  6F03               	movwf	3,b	;volatile
 25210  0138F0  0E30               	movlw	48
 25211  0138F2  6F02               	movwf	2,b	;volatile
 25212                           
 25213                           ; BSR set to: 13
 25214                           ;usb_device.c: 377: BDT[0].CNT = 8;
 25215  0138F4  0E08               	movlw	8
 25216  0138F6  010D               	movlb	13	; () banked
 25217  0138F8  6F01               	movwf	1,b	;volatile
 25218                           
 25219                           ; BSR set to: 13
 25220                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 25221  0138FA  0E04               	movlw	4
 25222  0138FC  010D               	movlb	13	; () banked
 25223  0138FE  6F00               	movwf	0,b	;volatile
 25224                           
 25225                           ; BSR set to: 13
 25226                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 25227  013900  010D               	movlb	13	; () banked
 25228  013902  8F00               	bsf	0,7,b	;volatile
 25229                           
 25230                           ; BSR set to: 13
 25231                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 25232  013904  0E00               	movlw	0
 25233  013906  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 25234                           
 25235                           ; BSR set to: 13
 25236                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 25237  013908  0E00               	movlw	0
 25238  01390A  6E13               	movwf	_USBDeviceState,c	;volatile
 25239                           
 25240                           ; BSR set to: 13
 25241  01390C  0012               	return		;funcret
 25242  01390E                     __end_ofi2_USBDeviceInit:
 25243                           	opt stack 0
 25244                           pclatu	equ	0xFFB
 25245                           pclath	equ	0xFFA
 25246                           tblptru	equ	0xFF8
 25247                           tblptrh	equ	0xFF7
 25248                           tblptrl	equ	0xFF6
 25249                           tablat	equ	0xFF5
 25250                           prodh	equ	0xFF4
 25251                           prodl	equ	0xFF3
 25252                           intcon	equ	0xFF2
 25253                           intcon2	equ	0xFF1
 25254                           indf0	equ	0xFEF
 25255                           postinc0	equ	0xFEE
 25256                           fsr0h	equ	0xFEA
 25257                           fsr0l	equ	0xFE9
 25258                           wreg	equ	0xFE8
 25259                           indf1	equ	0xFE7
 25260                           postinc1	equ	0xFE6
 25261                           postdec1	equ	0xFE5
 25262                           fsr1h	equ	0xFE2
 25263                           fsr1l	equ	0xFE1
 25264                           indf2	equ	0xFDF
 25265                           postinc2	equ	0xFDE
 25266                           postdec2	equ	0xFDD
 25267                           plusw2	equ	0xFDB
 25268                           fsr2h	equ	0xFDA
 25269                           fsr2l	equ	0xFD9
 25270                           status	equ	0xFD8
 25271                           
 25272 ;; *************** function _USBWakeFromSuspend *****************
 25273 ;; Defined at:
 25274 ;;		line 2303 in file "../My_library/usb/usb_device.c"
 25275 ;; Parameters:    Size  Location     Type
 25276 ;;		None
 25277 ;; Auto vars:     Size  Location     Type
 25278 ;;		None
 25279 ;; Return value:  Size  Location     Type
 25280 ;;		None               void
 25281 ;; Registers used:
 25282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25283 ;; Tracked objects:
 25284 ;;		On entry : 0/0
 25285 ;;		On exit  : 0/0
 25286 ;;		Unchanged: 0/0
 25287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25292 ;;Total ram usage:        0 bytes
 25293 ;; Hardware stack levels used:    1
 25294 ;; Hardware stack levels required when called:    5
 25295 ;; This function calls:
 25296 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25297 ;; This function is called by:
 25298 ;;		_USBDeviceTasks
 25299 ;; This function uses a non-reentrant model
 25300 ;;
 25301                           
 25302                           	psect	text107
 25303  016B80                     __ptext107:
 25304                           	opt stack 0
 25305  016B80                     _USBWakeFromSuspend:
 25306                           	opt stack 13
 25307                           
 25308                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 25309                           
 25310                           ; BSR set to: 13
 25311                           ;incstack = 0
 25312  016B80  0E00               	movlw	0
 25313  016B82  0101               	movlb	1	; () banked
 25314  016B84  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25315                           
 25316                           ; BSR set to: 1
 25317                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25318  016B86  0E00               	movlw	0
 25319  016B88  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25320  016B8A  0E74               	movlw	116
 25321  016B8C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25322  016B8E  0E00               	movlw	0
 25323  016B90  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25324  016B92  0E00               	movlw	0
 25325  016B94  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25326  016B96  0E00               	movlw	0
 25327  016B98  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25328  016B9A  0E00               	movlw	0
 25329  016B9C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25330  016B9E  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25331                           
 25332                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 25333  016BA2  9265               	bcf	3941,1,c	;volatile
 25334                           
 25335                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 25336  016BA4  010F               	movlb	15	; () banked
 25337  016BA6  9536               	bcf	54,2,b	;volatile
 25338                           
 25339                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 25340  016BA8  D001               	goto	i2l8313
 25341  016BAA                     i2l8311:
 25342                           
 25343                           ;usb_device.c: 2343: {
 25344                           ;usb_device.c: 2344: (UIR &= 0xFB);
 25345  016BAA  9462               	bcf	3938,2,c	;volatile
 25346  016BAC                     i2l8313:
 25347  016BAC  A462               	btfss	3938,2,c	;volatile
 25348  016BAE  0012               	return	
 25349  016BB0  D7FC               	goto	i2l8311
 25350  016BB2                     __end_of_USBWakeFromSuspend:
 25351                           	opt stack 0
 25352                           pclatu	equ	0xFFB
 25353                           pclath	equ	0xFFA
 25354                           tblptru	equ	0xFF8
 25355                           tblptrh	equ	0xFF7
 25356                           tblptrl	equ	0xFF6
 25357                           tablat	equ	0xFF5
 25358                           prodh	equ	0xFF4
 25359                           prodl	equ	0xFF3
 25360                           intcon	equ	0xFF2
 25361                           intcon2	equ	0xFF1
 25362                           indf0	equ	0xFEF
 25363                           postinc0	equ	0xFEE
 25364                           fsr0h	equ	0xFEA
 25365                           fsr0l	equ	0xFE9
 25366                           wreg	equ	0xFE8
 25367                           indf1	equ	0xFE7
 25368                           postinc1	equ	0xFE6
 25369                           postdec1	equ	0xFE5
 25370                           fsr1h	equ	0xFE2
 25371                           fsr1l	equ	0xFE1
 25372                           indf2	equ	0xFDF
 25373                           postinc2	equ	0xFDE
 25374                           postdec2	equ	0xFDD
 25375                           plusw2	equ	0xFDB
 25376                           fsr2h	equ	0xFDA
 25377                           fsr2l	equ	0xFD9
 25378                           status	equ	0xFD8
 25379                           
 25380 ;; *************** function _USBSuspend *****************
 25381 ;; Defined at:
 25382 ;;		line 2246 in file "../My_library/usb/usb_device.c"
 25383 ;; Parameters:    Size  Location     Type
 25384 ;;		None
 25385 ;; Auto vars:     Size  Location     Type
 25386 ;;		None
 25387 ;; Return value:  Size  Location     Type
 25388 ;;		None               void
 25389 ;; Registers used:
 25390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25391 ;; Tracked objects:
 25392 ;;		On entry : 0/0
 25393 ;;		On exit  : 0/0
 25394 ;;		Unchanged: 0/0
 25395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25400 ;;Total ram usage:        0 bytes
 25401 ;; Hardware stack levels used:    1
 25402 ;; Hardware stack levels required when called:    5
 25403 ;; This function calls:
 25404 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25405 ;; This function is called by:
 25406 ;;		_USBDeviceTasks
 25407 ;; This function uses a non-reentrant model
 25408 ;;
 25409                           
 25410                           	psect	text108
 25411  016C38                     __ptext108:
 25412                           	opt stack 0
 25413  016C38                     _USBSuspend:
 25414                           	opt stack 13
 25415                           
 25416                           ;usb_device.c: 2271: UIEbits.ACTVIE = 1;
 25417                           
 25418                           ;incstack = 0
 25419  016C38  010F               	movlb	15	; () banked
 25420  016C3A  8536               	bsf	54,2,b	;volatile
 25421                           
 25422                           ; BSR set to: 15
 25423                           ;usb_device.c: 2272: (UIR &= 0xEF);
 25424  016C3C  9862               	bcf	3938,4,c	;volatile
 25425                           
 25426                           ; BSR set to: 15
 25427                           ;usb_device.c: 2275: UCONbits.SUSPND = 1;
 25428  016C3E  8265               	bsf	3941,1,c	;volatile
 25429                           
 25430                           ; BSR set to: 15
 25431                           ;usb_device.c: 2278: USBBusIsSuspended = 1;
 25432  016C40  0E01               	movlw	1
 25433  016C42  0101               	movlb	1	; () banked
 25434  016C44  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25435                           
 25436                           ; BSR set to: 1
 25437                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25438  016C46  0E00               	movlw	0
 25439  016C48  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25440  016C4A  0E75               	movlw	117
 25441  016C4C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25442  016C4E  0E00               	movlw	0
 25443  016C50  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25444  016C52  0E00               	movlw	0
 25445  016C54  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25446  016C56  0E00               	movlw	0
 25447  016C58  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25448  016C5A  0E00               	movlw	0
 25449  016C5C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25450  016C5E  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25451  016C62  0012               	return		;funcret
 25452  016C64                     __end_of_USBSuspend:
 25453                           	opt stack 0
 25454                           pclatu	equ	0xFFB
 25455                           pclath	equ	0xFFA
 25456                           tblptru	equ	0xFF8
 25457                           tblptrh	equ	0xFF7
 25458                           tblptrl	equ	0xFF6
 25459                           tablat	equ	0xFF5
 25460                           prodh	equ	0xFF4
 25461                           prodl	equ	0xFF3
 25462                           intcon	equ	0xFF2
 25463                           intcon2	equ	0xFF1
 25464                           indf0	equ	0xFEF
 25465                           postinc0	equ	0xFEE
 25466                           fsr0h	equ	0xFEA
 25467                           fsr0l	equ	0xFE9
 25468                           wreg	equ	0xFE8
 25469                           indf1	equ	0xFE7
 25470                           postinc1	equ	0xFE6
 25471                           postdec1	equ	0xFE5
 25472                           fsr1h	equ	0xFE2
 25473                           fsr1l	equ	0xFE1
 25474                           indf2	equ	0xFDF
 25475                           postinc2	equ	0xFDE
 25476                           postdec2	equ	0xFDD
 25477                           plusw2	equ	0xFDB
 25478                           fsr2h	equ	0xFDA
 25479                           fsr2l	equ	0xFD9
 25480                           status	equ	0xFD8
 25481                           
 25482 ;; *************** function _USBStallHandler *****************
 25483 ;; Defined at:
 25484 ;;		line 2203 in file "../My_library/usb/usb_device.c"
 25485 ;; Parameters:    Size  Location     Type
 25486 ;;		None
 25487 ;; Auto vars:     Size  Location     Type
 25488 ;;		None
 25489 ;; Return value:  Size  Location     Type
 25490 ;;		None               void
 25491 ;; Registers used:
 25492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25493 ;; Tracked objects:
 25494 ;;		On entry : 0/0
 25495 ;;		On exit  : 0/0
 25496 ;;		Unchanged: 0/0
 25497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25502 ;;Total ram usage:        1 bytes
 25503 ;; Hardware stack levels used:    1
 25504 ;; This function calls:
 25505 ;;		Nothing
 25506 ;; This function is called by:
 25507 ;;		_USBDeviceTasks
 25508 ;; This function uses a non-reentrant model
 25509 ;;
 25510                           
 25511                           	psect	text109
 25512  016900                     __ptext109:
 25513                           	opt stack 0
 25514  016900                     _USBStallHandler:
 25515                           	opt stack 18
 25516                           
 25517                           ;usb_device.c: 2215: if(UEP0bits.EPSTALL == 1)
 25518                           
 25519                           ;incstack = 0
 25520  016900  010F               	movlb	15	; () banked
 25521  016902  A126               	btfss	38,0,b	;volatile
 25522  016904  D01E               	goto	i2l308
 25523                           
 25524                           ; BSR set to: 15
 25525                           ;usb_device.c: 2216: {
 25526                           ;usb_device.c: 2218: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25527  016906  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25528  01690A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25529  01690E  0E80               	movlw	128
 25530  016910  18DE               	xorwf	postinc2,w,c
 25531  016912  A4D8               	btfss	status,2,c
 25532  016914  D014               	goto	i2l8335
 25533                           
 25534                           ; BSR set to: 15
 25535  016916  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25536  01691A  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25537  01691E  0E84               	movlw	132
 25538  016920  18DE               	xorwf	postinc2,w,c
 25539  016922  A4D8               	btfss	status,2,c
 25540  016924  D00C               	goto	i2l8335
 25541                           
 25542                           ; BSR set to: 15
 25543                           ;usb_device.c: 2219: {
 25544                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25545  016926  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25546  01692A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25547  01692E  0E0C               	movlw	12
 25548  016930  6EDF               	movwf	indf2,c
 25549                           
 25550                           ; BSR set to: 15
 25551                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25552  016932  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25553  016936  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25554  01693A  0E00               	movlw	0
 25555  01693C  8EDB               	bsf	plusw2,7,c
 25556  01693E                     i2l8335:
 25557                           
 25558                           ; BSR set to: 15
 25559                           ;usb_device.c: 2223: }
 25560                           ;usb_device.c: 2224: UEP0bits.EPSTALL = 0;
 25561  01693E  010F               	movlb	15	; () banked
 25562  016940  9126               	bcf	38,0,b	;volatile
 25563  016942                     i2l308:
 25564                           
 25565                           ; BSR set to: 15
 25566                           ;usb_device.c: 2225: }
 25567                           ;usb_device.c: 2227: (UIR &= 0xDF);
 25568  016942  9A62               	bcf	3938,5,c	;volatile
 25569                           
 25570                           ; BSR set to: 15
 25571  016944  0012               	return		;funcret
 25572  016946                     __end_of_USBStallHandler:
 25573                           	opt stack 0
 25574                           pclatu	equ	0xFFB
 25575                           pclath	equ	0xFFA
 25576                           tblptru	equ	0xFF8
 25577                           tblptrh	equ	0xFF7
 25578                           tblptrl	equ	0xFF6
 25579                           tablat	equ	0xFF5
 25580                           prodh	equ	0xFF4
 25581                           prodl	equ	0xFF3
 25582                           intcon	equ	0xFF2
 25583                           intcon2	equ	0xFF1
 25584                           indf0	equ	0xFEF
 25585                           postinc0	equ	0xFEE
 25586                           fsr0h	equ	0xFEA
 25587                           fsr0l	equ	0xFE9
 25588                           wreg	equ	0xFE8
 25589                           indf1	equ	0xFE7
 25590                           postinc1	equ	0xFE6
 25591                           postdec1	equ	0xFE5
 25592                           fsr1h	equ	0xFE2
 25593                           fsr1l	equ	0xFE1
 25594                           indf2	equ	0xFDF
 25595                           postinc2	equ	0xFDE
 25596                           postdec2	equ	0xFDD
 25597                           plusw2	equ	0xFDB
 25598                           fsr2h	equ	0xFDA
 25599                           fsr2l	equ	0xFD9
 25600                           status	equ	0xFD8
 25601                           
 25602 ;; *************** function _USBCtrlEPService *****************
 25603 ;; Defined at:
 25604 ;;		line 2370 in file "../My_library/usb/usb_device.c"
 25605 ;; Parameters:    Size  Location     Type
 25606 ;;		None
 25607 ;; Auto vars:     Size  Location     Type
 25608 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 25609 ;; Return value:  Size  Location     Type
 25610 ;;		None               void
 25611 ;; Registers used:
 25612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25613 ;; Tracked objects:
 25614 ;;		On entry : 0/0
 25615 ;;		On exit  : 0/0
 25616 ;;		Unchanged: 0/0
 25617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25621 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25622 ;;Total ram usage:        3 bytes
 25623 ;; Hardware stack levels used:    1
 25624 ;; Hardware stack levels required when called:    8
 25625 ;; This function calls:
 25626 ;;		_USBCtrlTrfInHandler
 25627 ;;		_USBCtrlTrfOutHandler
 25628 ;;		_USBCtrlTrfSetupHandler
 25629 ;; This function is called by:
 25630 ;;		_USBDeviceTasks
 25631 ;; This function uses a non-reentrant model
 25632 ;;
 25633                           
 25634                           	psect	text110
 25635  015078                     __ptext110:
 25636                           	opt stack 0
 25637  015078                     _USBCtrlEPService:
 25638                           	opt stack 10
 25639                           
 25640                           ;usb_device.c: 2376: USBStatusStageTimeoutCounter = (uint8_t)45;
 25641                           
 25642                           ; BSR set to: 15
 25643                           ;incstack = 0
 25644  015078  0E2D               	movlw	45
 25645  01507A  6E16               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25646                           
 25647                           ;usb_device.c: 2380: if((USTATcopy.Val & ~0x02) == 0x00)
 25648  01507C  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25649  015080  0EFD               	movlw	253
 25650  015082  1647               	andwf	??_USBCtrlEPService,f,c
 25651  015084  A4D8               	btfss	status,2,c
 25652  015086  D057               	goto	i2l8369
 25653                           
 25654                           ;usb_device.c: 2381: {
 25655                           ;usb_device.c: 2384: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25656  015088  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25657  01508C  90D8               	bcf	status,0,c
 25658  01508E  3247               	rrcf	??_USBCtrlEPService,f,c
 25659  015090  0E3F               	movlw	63
 25660  015092  1647               	andwf	??_USBCtrlEPService,f,c
 25661  015094  5047               	movf	??_USBCtrlEPService,w,c
 25662  015096  0D04               	mullw	4
 25663  015098  0E00               	movlw	0
 25664  01509A  24F3               	addwf	prodl,w,c
 25665  01509C  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 25666  01509E  0E0D               	movlw	13
 25667  0150A0  20F4               	addwfc	prodh,w,c
 25668  0150A2  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25669                           
 25670                           ;usb_device.c: 2392: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25671  0150A4  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25672  0150A8  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25673                           
 25674                           ;usb_device.c: 2394: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25675  0150AC  0E04               	movlw	4
 25676  0150AE  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 25677                           
 25678                           ;usb_device.c: 2397: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25679  0150B0  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25680  0150B4  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25681  0150B8  30DF               	rrcf	indf2,w,c
 25682  0150BA  32E8               	rrcf	wreg,f,c
 25683  0150BC  0B0F               	andlw	15
 25684  0150BE  0A0D               	xorlw	13
 25685  0150C0  A4D8               	btfss	status,2,c
 25686  0150C2  D036               	goto	i2l8367
 25687                           
 25688                           ;usb_device.c: 2398: {
 25689                           ;usb_device.c: 2399: unsigned char setup_cnt;
 25690                           ;usb_device.c: 2405: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25691  0150C4  0E00               	movlw	0
 25692  0150C6  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 25693  0150C8                     i2l8351:
 25694  0150C8  0E07               	movlw	7
 25695  0150CA  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25696  0150CC  D001               	goto	i2l8355
 25697  0150CE  D023               	goto	i2l8363
 25698  0150D0                     i2l8355:
 25699                           
 25700                           ;usb_device.c: 2406: {
 25701                           ;usb_device.c: 2407: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25702  0150D0  EE20 F002          	lfsr	2,2
 25703  0150D4  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25704  0150D6  26D9               	addwf	fsr2l,f,c
 25705  0150D8  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25706  0150DA  22DA               	addwfc	fsr2h,f,c
 25707  0150DC  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 25708  0150E0  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 25709  0150E4  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25710  0150E8  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25711  0150EC  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 25712  0150EE  0D01               	mullw	1
 25713  0150F0  0E30               	movlw	48
 25714  0150F2  24F3               	addwf	prodl,w,c
 25715  0150F4  6EE1               	movwf	fsr1l,c
 25716  0150F6  0E0D               	movlw	13
 25717  0150F8  20F4               	addwfc	prodh,w,c
 25718  0150FA  6EE2               	movwf	fsr1h,c
 25719  0150FC  CFDF FFE7          	movff	indf2,indf1
 25720                           
 25721                           ;usb_device.c: 2408: pBDTEntryEP0OutCurrent->ADR++;
 25722  015100  EE20 F002          	lfsr	2,2
 25723  015104  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25724  015106  26D9               	addwf	fsr2l,f,c
 25725  015108  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25726  01510A  22DA               	addwfc	fsr2h,f,c
 25727  01510C  2ADE               	incf	postinc2,f,c
 25728  01510E  0E00               	movlw	0
 25729  015110  22DD               	addwfc	postdec2,f,c
 25730  015112  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 25731  015114  D7D9               	goto	i2l8351
 25732  015116                     i2l8363:
 25733                           
 25734                           ;usb_device.c: 2409: }
 25735                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25736  015116  EE20 F002          	lfsr	2,2
 25737  01511A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25738  01511C  26D9               	addwf	fsr2l,f,c
 25739  01511E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25740  015120  22DA               	addwfc	fsr2h,f,c
 25741  015122  0E30               	movlw	48
 25742  015124  6EDE               	movwf	postinc2,c
 25743  015126  0E0D               	movlw	13
 25744  015128  6EDD               	movwf	postdec2,c
 25745                           
 25746                           ;usb_device.c: 2413: USBCtrlTrfSetupHandler();
 25747  01512A  EC92  F0AE         	call	_USBCtrlTrfSetupHandler	;wreg free
 25748                           
 25749                           ;usb_device.c: 2414: }
 25750  01512E  0012               	return	
 25751  015130                     i2l8367:
 25752                           
 25753                           ;usb_device.c: 2415: else
 25754                           ;usb_device.c: 2416: {
 25755                           ;usb_device.c: 2418: USBCtrlTrfOutHandler();
 25756  015130  EC59  F0B3         	call	_USBCtrlTrfOutHandler	;wreg free
 25757                           
 25758                           ;usb_device.c: 2419: }
 25759                           ;usb_device.c: 2420: }
 25760  015134  0012               	return	
 25761  015136                     i2l8369:
 25762                           
 25763                           ;usb_device.c: 2421: else if((USTATcopy.Val & ~0x02) == 0x04)
 25764  015136  502C               	movf	_USTATcopy,w,c	;volatile
 25765  015138  0BFD               	andlw	253
 25766  01513A  0A04               	xorlw	4
 25767  01513C  A4D8               	btfss	status,2,c
 25768  01513E  0012               	return	
 25769                           
 25770                           ;usb_device.c: 2422: {
 25771                           ;usb_device.c: 2425: USBCtrlTrfInHandler();
 25772  015140  ECCF  F0A9         	call	_USBCtrlTrfInHandler	;wreg free
 25773  015144  0012               	return	
 25774  015146                     __end_of_USBCtrlEPService:
 25775                           	opt stack 0
 25776                           pclatu	equ	0xFFB
 25777                           pclath	equ	0xFFA
 25778                           tblptru	equ	0xFF8
 25779                           tblptrh	equ	0xFF7
 25780                           tblptrl	equ	0xFF6
 25781                           tablat	equ	0xFF5
 25782                           prodh	equ	0xFF4
 25783                           prodl	equ	0xFF3
 25784                           intcon	equ	0xFF2
 25785                           intcon2	equ	0xFF1
 25786                           indf0	equ	0xFEF
 25787                           postinc0	equ	0xFEE
 25788                           fsr0h	equ	0xFEA
 25789                           fsr0l	equ	0xFE9
 25790                           wreg	equ	0xFE8
 25791                           indf1	equ	0xFE7
 25792                           postinc1	equ	0xFE6
 25793                           postdec1	equ	0xFE5
 25794                           fsr1h	equ	0xFE2
 25795                           fsr1l	equ	0xFE1
 25796                           indf2	equ	0xFDF
 25797                           postinc2	equ	0xFDE
 25798                           postdec2	equ	0xFDD
 25799                           plusw2	equ	0xFDB
 25800                           fsr2h	equ	0xFDA
 25801                           fsr2l	equ	0xFD9
 25802                           status	equ	0xFD8
 25803                           
 25804 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25805 ;; Defined at:
 25806 ;;		line 2470 in file "../My_library/usb/usb_device.c"
 25807 ;; Parameters:    Size  Location     Type
 25808 ;;		None
 25809 ;; Auto vars:     Size  Location     Type
 25810 ;;		None
 25811 ;; Return value:  Size  Location     Type
 25812 ;;		None               void
 25813 ;; Registers used:
 25814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25815 ;; Tracked objects:
 25816 ;;		On entry : 0/0
 25817 ;;		On exit  : 0/0
 25818 ;;		Unchanged: 0/0
 25819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25824 ;;Total ram usage:        0 bytes
 25825 ;; Hardware stack levels used:    1
 25826 ;; Hardware stack levels required when called:    7
 25827 ;; This function calls:
 25828 ;;		_USBCheckStdRequest
 25829 ;;		_USBCtrlEPServiceComplete
 25830 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25831 ;; This function is called by:
 25832 ;;		_USBCtrlEPService
 25833 ;; This function uses a non-reentrant model
 25834 ;;
 25835                           
 25836                           	psect	text111
 25837  015D24                     __ptext111:
 25838                           	opt stack 0
 25839  015D24                     _USBCtrlTrfSetupHandler:
 25840                           	opt stack 10
 25841                           
 25842                           ;usb_device.c: 2475: shortPacketStatus = 0;
 25843                           
 25844                           ;incstack = 0
 25845  015D24  0E00               	movlw	0
 25846  015D26  6E21               	movwf	_shortPacketStatus,c	;volatile
 25847                           
 25848                           ;usb_device.c: 2476: USBDeferStatusStagePacket = 0;
 25849  015D28  0E00               	movlw	0
 25850  015D2A  6E12               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25851                           
 25852                           ;usb_device.c: 2477: USBDeferINDataStagePackets = 0;
 25853  015D2C  0E00               	movlw	0
 25854  015D2E  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25855                           
 25856                           ;usb_device.c: 2478: USBDeferOUTDataStagePackets = 0;
 25857  015D30  0E00               	movlw	0
 25858  015D32  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25859                           
 25860                           ;usb_device.c: 2479: BothEP0OutUOWNsSet = 0;
 25861  015D34  0E00               	movlw	0
 25862  015D36  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25863                           
 25864                           ;usb_device.c: 2480: controlTransferState = 0;
 25865  015D38  0E00               	movlw	0
 25866  015D3A  6E1B               	movwf	_controlTransferState,c	;volatile
 25867                           
 25868                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25869  015D3C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25870  015D40  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25871  015D44  0E7F               	movlw	127
 25872  015D46  16DF               	andwf	indf2,f,c
 25873                           
 25874                           ;usb_device.c: 2490: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25875  015D48  0E04               	movlw	4
 25876  015D4A  0100               	movlb	0	; () banked
 25877  015D4C  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25878                           
 25879                           ; BSR set to: 0
 25880                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25881  015D4E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25882  015D52  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25883  015D56  0E7F               	movlw	127
 25884  015D58  16DF               	andwf	indf2,f,c
 25885                           
 25886                           ; BSR set to: 0
 25887                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25888  015D5A  0E04               	movlw	4
 25889  015D5C  0100               	movlb	0	; () banked
 25890  015D5E  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25891                           
 25892                           ; BSR set to: 0
 25893                           ;usb_device.c: 2493: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25894  015D60  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25895  015D64  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25896  015D68  0E7F               	movlw	127
 25897  015D6A  16DF               	andwf	indf2,f,c
 25898                           
 25899                           ; BSR set to: 0
 25900                           ;usb_device.c: 2495: inPipes[0].info.Val = 0;
 25901  015D6C  0E00               	movlw	0
 25902  015D6E  0100               	movlb	0	; () banked
 25903  015D70  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25904                           
 25905                           ; BSR set to: 0
 25906                           ;usb_device.c: 2496: inPipes[0].wCount.Val = 0;
 25907  015D72  0E00               	movlw	0
 25908  015D74  0100               	movlb	0	; () banked
 25909  015D76  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25910  015D78  0E00               	movlw	0
 25911  015D7A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25912                           
 25913                           ; BSR set to: 0
 25914                           ;usb_device.c: 2497: outPipes[0].info.Val = 0;
 25915  015D7C  0E00               	movlw	0
 25916  015D7E  0100               	movlb	0	; () banked
 25917  015D80  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25918                           
 25919                           ; BSR set to: 0
 25920                           ;usb_device.c: 2498: outPipes[0].wCount.Val = 0;
 25921  015D82  0E00               	movlw	0
 25922  015D84  0100               	movlb	0	; () banked
 25923  015D86  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25924  015D88  0E00               	movlw	0
 25925  015D8A  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25926                           
 25927                           ; BSR set to: 0
 25928                           ;usb_device.c: 2504: USBCheckStdRequest();
 25929  015D8C  ECCA  F0A1         	call	_USBCheckStdRequest	;wreg free
 25930                           
 25931                           ;usb_device.c: 2505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25932  015D90  0E00               	movlw	0
 25933  015D92  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25934  015D94  0E03               	movlw	3
 25935  015D96  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25936  015D98  0E00               	movlw	0
 25937  015D9A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25938  015D9C  0E00               	movlw	0
 25939  015D9E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25940  015DA0  0E00               	movlw	0
 25941  015DA2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25942  015DA4  0E00               	movlw	0
 25943  015DA6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25944  015DA8  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25945                           
 25946                           ;usb_device.c: 2518: USBCtrlEPServiceComplete();
 25947  015DAC  ECD7  F0A0         	call	_USBCtrlEPServiceComplete	;wreg free
 25948  015DB0  0012               	return		;funcret
 25949  015DB2                     __end_of_USBCtrlTrfSetupHandler:
 25950                           	opt stack 0
 25951                           pclatu	equ	0xFFB
 25952                           pclath	equ	0xFFA
 25953                           tblptru	equ	0xFF8
 25954                           tblptrh	equ	0xFF7
 25955                           tblptrl	equ	0xFF6
 25956                           tablat	equ	0xFF5
 25957                           prodh	equ	0xFF4
 25958                           prodl	equ	0xFF3
 25959                           intcon	equ	0xFF2
 25960                           intcon2	equ	0xFF1
 25961                           indf0	equ	0xFEF
 25962                           postinc0	equ	0xFEE
 25963                           fsr0h	equ	0xFEA
 25964                           fsr0l	equ	0xFE9
 25965                           wreg	equ	0xFE8
 25966                           indf1	equ	0xFE7
 25967                           postinc1	equ	0xFE6
 25968                           postdec1	equ	0xFE5
 25969                           fsr1h	equ	0xFE2
 25970                           fsr1l	equ	0xFE1
 25971                           indf2	equ	0xFDF
 25972                           postinc2	equ	0xFDE
 25973                           postdec2	equ	0xFDD
 25974                           plusw2	equ	0xFDB
 25975                           fsr2h	equ	0xFDA
 25976                           fsr2l	equ	0xFD9
 25977                           status	equ	0xFD8
 25978                           
 25979 ;; *************** function _USBCtrlEPServiceComplete *****************
 25980 ;; Defined at:
 25981 ;;		line 1617 in file "../My_library/usb/usb_device.c"
 25982 ;; Parameters:    Size  Location     Type
 25983 ;;		None
 25984 ;; Auto vars:     Size  Location     Type
 25985 ;;		None
 25986 ;; Return value:  Size  Location     Type
 25987 ;;		None               void
 25988 ;; Registers used:
 25989 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25990 ;; Tracked objects:
 25991 ;;		On entry : 0/0
 25992 ;;		On exit  : 0/0
 25993 ;;		Unchanged: 0/0
 25994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25999 ;;Total ram usage:        0 bytes
 26000 ;; Hardware stack levels used:    1
 26001 ;; Hardware stack levels required when called:    2
 26002 ;; This function calls:
 26003 ;;		_USBCtrlEPAllowDataStage
 26004 ;;		_USBCtrlEPAllowStatusStage
 26005 ;; This function is called by:
 26006 ;;		_USBCtrlTrfSetupHandler
 26007 ;; This function uses a non-reentrant model
 26008 ;;
 26009                           
 26010                           	psect	text112
 26011  0141AE                     __ptext112:
 26012                           	opt stack 0
 26013  0141AE                     _USBCtrlEPServiceComplete:
 26014                           	opt stack 14
 26015                           
 26016                           ;usb_device.c: 1623: UCONbits.PKTDIS = 0;
 26017                           
 26018                           ;incstack = 0
 26019  0141AE  9865               	bcf	3941,4,c	;volatile
 26020                           
 26021                           ;usb_device.c: 1629: if(inPipes[0].info.bits.busy == 0)
 26022  0141B0  0100               	movlb	0	; () banked
 26023  0141B2  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 26024  0141B4  D039               	goto	i2l232
 26025                           
 26026                           ; BSR set to: 0
 26027                           ;usb_device.c: 1630: {
 26028                           ;usb_device.c: 1631: if(outPipes[0].info.bits.busy == 1)
 26029  0141B6  0100               	movlb	0	; () banked
 26030  0141B8  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 26031  0141BA  D00B               	goto	i2l7643
 26032                           
 26033                           ; BSR set to: 0
 26034                           ;usb_device.c: 1632: {
 26035                           ;usb_device.c: 1633: controlTransferState = 2;
 26036  0141BC  0E02               	movlw	2
 26037  0141BE  6E1B               	movwf	_controlTransferState,c	;volatile
 26038                           
 26039                           ;usb_device.c: 1644: if(USBDeferOUTDataStagePackets == 0)
 26040  0141C0  5011               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 26041  0141C2  B4D8               	btfsc	status,2,c
 26042                           
 26043                           ; BSR set to: 0
 26044                           ;usb_device.c: 1645: {
 26045                           ;usb_device.c: 1646: USBCtrlEPAllowDataStage();
 26046  0141C4  EC18  F0AD         	call	_USBCtrlEPAllowDataStage	;wreg free
 26047                           
 26048                           ;usb_device.c: 1647: }
 26049                           ;usb_device.c: 1651: USBStatusStageEnabledFlag2 = 0;
 26050  0141C8  0E00               	movlw	0
 26051  0141CA  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26052                           
 26053                           ;usb_device.c: 1652: USBStatusStageEnabledFlag1 = 0;
 26054  0141CC  0E00               	movlw	0
 26055  0141CE  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26056                           
 26057                           ;usb_device.c: 1653: }
 26058  0141D0  0012               	return	
 26059  0141D2                     i2l7643:
 26060                           
 26061                           ;usb_device.c: 1654: else
 26062                           ;usb_device.c: 1655: {
 26063                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->CNT = 8;
 26064  0141D2  EE20 F001          	lfsr	2,1
 26065  0141D6  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26066  0141D8  26D9               	addwf	fsr2l,f,c
 26067  0141DA  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26068  0141DC  22DA               	addwfc	fsr2h,f,c
 26069  0141DE  0E08               	movlw	8
 26070  0141E0  6EDF               	movwf	indf2,c
 26071                           
 26072                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26073  0141E2  EE20 F002          	lfsr	2,2
 26074  0141E6  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26075  0141E8  26D9               	addwf	fsr2l,f,c
 26076  0141EA  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26077  0141EC  22DA               	addwfc	fsr2h,f,c
 26078  0141EE  0E30               	movlw	48
 26079  0141F0  6EDE               	movwf	postinc2,c
 26080  0141F2  0E0D               	movlw	13
 26081  0141F4  6EDD               	movwf	postdec2,c
 26082                           
 26083                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26084  0141F6  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26085  0141FA  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26086  0141FE  0E0C               	movlw	12
 26087  014200  6EDF               	movwf	indf2,c
 26088                           
 26089                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26090  014202  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26091  014206  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26092  01420A  0E00               	movlw	0
 26093  01420C  8EDB               	bsf	plusw2,7,c
 26094                           
 26095                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val = 0x04;
 26096  01420E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26097  014212  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26098  014216  0E04               	movlw	4
 26099  014218  6EDF               	movwf	indf2,c
 26100                           
 26101                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26102  01421A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26103  01421E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26104  014222  0E00               	movlw	0
 26105  014224  8EDB               	bsf	plusw2,7,c
 26106                           
 26107                           ;usb_device.c: 1666: }
 26108                           ;usb_device.c: 1667: }
 26109  014226  0012               	return	
 26110  014228                     i2l232:
 26111                           
 26112                           ; BSR set to: 0
 26113                           ;usb_device.c: 1668: else
 26114                           ;usb_device.c: 1669: {
 26115                           ;usb_device.c: 1670: if(SetupPkt.DataDir == (0x80>>7))
 26116  014228  010D               	movlb	13	; () banked
 26117  01422A  AF30               	btfss	48,7,b	;volatile
 26118  01422C  D010               	goto	i2l7663
 26119                           
 26120                           ; BSR set to: 13
 26121                           ;usb_device.c: 1671: {
 26122                           ;usb_device.c: 1672: controlTransferState = 1;
 26123  01422E  0E01               	movlw	1
 26124  014230  6E1B               	movwf	_controlTransferState,c	;volatile
 26125                           
 26126                           ;usb_device.c: 1686: if(USBDeferINDataStagePackets == 0)
 26127  014232  5010               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 26128  014234  B4D8               	btfsc	status,2,c
 26129                           
 26130                           ; BSR set to: 13
 26131                           ;usb_device.c: 1687: {
 26132                           ;usb_device.c: 1688: USBCtrlEPAllowDataStage();
 26133  014236  EC18  F0AD         	call	_USBCtrlEPAllowDataStage	;wreg free
 26134                           
 26135                           ;usb_device.c: 1689: }
 26136                           ;usb_device.c: 1711: USBStatusStageEnabledFlag2 = 0;
 26137  01423A  0E00               	movlw	0
 26138  01423C  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26139                           
 26140                           ;usb_device.c: 1712: USBStatusStageEnabledFlag1 = 0;
 26141  01423E  0E00               	movlw	0
 26142  014240  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26143                           
 26144                           ;usb_device.c: 1713: if(USBDeferStatusStagePacket == 0)
 26145  014242  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26146  014244  A4D8               	btfss	status,2,c
 26147  014246  0012               	return	
 26148                           
 26149                           ;usb_device.c: 1714: {
 26150                           ;usb_device.c: 1715: USBCtrlEPAllowStatusStage();
 26151  014248  EC6D  F0A9         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26152                           
 26153                           ;usb_device.c: 1716: }
 26154                           ;usb_device.c: 1717: }
 26155  01424C  0012               	return	
 26156  01424E                     i2l7663:
 26157                           
 26158                           ;usb_device.c: 1718: else
 26159                           ;usb_device.c: 1719: {
 26160                           ;usb_device.c: 1730: controlTransferState = 2;
 26161  01424E  0E02               	movlw	2
 26162  014250  6E1B               	movwf	_controlTransferState,c	;volatile
 26163                           
 26164                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->CNT = 8;
 26165  014252  EE20 F001          	lfsr	2,1
 26166  014256  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26167  014258  26D9               	addwf	fsr2l,f,c
 26168  01425A  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26169  01425C  22DA               	addwfc	fsr2h,f,c
 26170  01425E  0E08               	movlw	8
 26171  014260  6EDF               	movwf	indf2,c
 26172                           
 26173                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26174  014262  EE20 F002          	lfsr	2,2
 26175  014266  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26176  014268  26D9               	addwf	fsr2l,f,c
 26177  01426A  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26178  01426C  22DA               	addwfc	fsr2h,f,c
 26179  01426E  0E30               	movlw	48
 26180  014270  6EDE               	movwf	postinc2,c
 26181  014272  0E0D               	movlw	13
 26182  014274  6EDD               	movwf	postdec2,c
 26183                           
 26184                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26185  014276  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26186  01427A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26187  01427E  0E04               	movlw	4
 26188  014280  6EDF               	movwf	indf2,c
 26189                           
 26190                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26191  014282  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26192  014286  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26193  01428A  0E00               	movlw	0
 26194  01428C  8EDB               	bsf	plusw2,7,c
 26195                           
 26196                           ;usb_device.c: 1739: USBStatusStageEnabledFlag2 = 0;
 26197  01428E  0E00               	movlw	0
 26198  014290  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26199                           
 26200                           ;usb_device.c: 1740: USBStatusStageEnabledFlag1 = 0;
 26201  014292  0E00               	movlw	0
 26202  014294  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26203                           
 26204                           ;usb_device.c: 1741: if(USBDeferStatusStagePacket == 0)
 26205  014296  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26206  014298  A4D8               	btfss	status,2,c
 26207  01429A  0012               	return	
 26208                           
 26209                           ;usb_device.c: 1742: {
 26210                           ;usb_device.c: 1743: USBCtrlEPAllowStatusStage();
 26211  01429C  EC6D  F0A9         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26212  0142A0  0012               	return	
 26213  0142A2                     __end_of_USBCtrlEPServiceComplete:
 26214                           	opt stack 0
 26215                           pclatu	equ	0xFFB
 26216                           pclath	equ	0xFFA
 26217                           tblptru	equ	0xFF8
 26218                           tblptrh	equ	0xFF7
 26219                           tblptrl	equ	0xFF6
 26220                           tablat	equ	0xFF5
 26221                           prodh	equ	0xFF4
 26222                           prodl	equ	0xFF3
 26223                           intcon	equ	0xFF2
 26224                           intcon2	equ	0xFF1
 26225                           indf0	equ	0xFEF
 26226                           postinc0	equ	0xFEE
 26227                           fsr0h	equ	0xFEA
 26228                           fsr0l	equ	0xFE9
 26229                           wreg	equ	0xFE8
 26230                           indf1	equ	0xFE7
 26231                           postinc1	equ	0xFE6
 26232                           postdec1	equ	0xFE5
 26233                           fsr1h	equ	0xFE2
 26234                           fsr1l	equ	0xFE1
 26235                           indf2	equ	0xFDF
 26236                           postinc2	equ	0xFDE
 26237                           postdec2	equ	0xFDD
 26238                           plusw2	equ	0xFDB
 26239                           fsr2h	equ	0xFDA
 26240                           fsr2l	equ	0xFD9
 26241                           status	equ	0xFD8
 26242                           
 26243 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26244 ;; Defined at:
 26245 ;;		line 1489 in file "../My_library/usb/usb_device.c"
 26246 ;; Parameters:    Size  Location     Type
 26247 ;;		None
 26248 ;; Auto vars:     Size  Location     Type
 26249 ;;		None
 26250 ;; Return value:  Size  Location     Type
 26251 ;;		None               void
 26252 ;; Registers used:
 26253 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26254 ;; Tracked objects:
 26255 ;;		On entry : 0/0
 26256 ;;		On exit  : 0/0
 26257 ;;		Unchanged: 0/0
 26258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26263 ;;Total ram usage:        0 bytes
 26264 ;; Hardware stack levels used:    1
 26265 ;; Hardware stack levels required when called:    1
 26266 ;; This function calls:
 26267 ;;		_USBCtrlTrfTxService
 26268 ;; This function is called by:
 26269 ;;		_USBCtrlEPServiceComplete
 26270 ;; This function uses a non-reentrant model
 26271 ;;
 26272                           
 26273                           	psect	text113
 26274  015A30                     __ptext113:
 26275                           	opt stack 0
 26276  015A30                     _USBCtrlEPAllowDataStage:
 26277                           	opt stack 14
 26278                           
 26279                           ;usb_device.c: 1491: USBDeferINDataStagePackets = 0;
 26280                           
 26281                           ;incstack = 0
 26282  015A30  0E00               	movlw	0
 26283  015A32  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26284                           
 26285                           ;usb_device.c: 1492: USBDeferOUTDataStagePackets = 0;
 26286  015A34  0E00               	movlw	0
 26287  015A36  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26288                           
 26289                           ;usb_device.c: 1494: if(controlTransferState == 2)
 26290  015A38  0E02               	movlw	2
 26291  015A3A  181B               	xorwf	_controlTransferState,w,c	;volatile
 26292  015A3C  A4D8               	btfss	status,2,c
 26293  015A3E  D01F               	goto	i2l7191
 26294                           
 26295                           ;usb_device.c: 1495: {
 26296                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->CNT = 8;
 26297  015A40  EE20 F001          	lfsr	2,1
 26298  015A44  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26299  015A46  26D9               	addwf	fsr2l,f,c
 26300  015A48  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26301  015A4A  22DA               	addwfc	fsr2h,f,c
 26302  015A4C  0E08               	movlw	8
 26303  015A4E  6EDF               	movwf	indf2,c
 26304                           
 26305                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26306  015A50  EE20 F002          	lfsr	2,2
 26307  015A54  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26308  015A56  26D9               	addwf	fsr2l,f,c
 26309  015A58  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26310  015A5A  22DA               	addwfc	fsr2h,f,c
 26311  015A5C  0E38               	movlw	56
 26312  015A5E  6EDE               	movwf	postinc2,c
 26313  015A60  0E0D               	movlw	13
 26314  015A62  6EDD               	movwf	postdec2,c
 26315                           
 26316                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26317  015A64  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26318  015A68  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26319  015A6C  0E48               	movlw	72
 26320  015A6E  6EDF               	movwf	indf2,c
 26321                           
 26322                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26323  015A70  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26324  015A74  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26325  015A78  0E00               	movlw	0
 26326  015A7A  8EDB               	bsf	plusw2,7,c
 26327                           
 26328                           ;usb_device.c: 1501: }
 26329  015A7C  0012               	return	
 26330  015A7E                     i2l7191:
 26331                           
 26332                           ;usb_device.c: 1502: else
 26333                           ;usb_device.c: 1503: {
 26334                           ;usb_device.c: 1506: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26335  015A7E  0100               	movlb	0	; () banked
 26336  015A80  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26337  015A82  010D               	movlb	13	; () banked
 26338  015A84  5D36               	subwf	54,w,b	;volatile
 26339  015A86  0100               	movlb	0	; () banked
 26340  015A88  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26341  015A8A  010D               	movlb	13	; () banked
 26342  015A8C  5937               	subwfb	55,w,b	;volatile
 26343  015A8E  B0D8               	btfsc	status,0,c
 26344  015A90  D004               	goto	i2l7195
 26345                           
 26346                           ; BSR set to: 13
 26347                           ;usb_device.c: 1507: {
 26348                           ;usb_device.c: 1508: inPipes[0].wCount.Val = SetupPkt.wLength;
 26349  015A92  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 26350  015A96  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 26351  015A9A                     i2l7195:
 26352                           
 26353                           ; BSR set to: 13
 26354                           ;usb_device.c: 1509: }
 26355                           ;usb_device.c: 1510: USBCtrlTrfTxService();
 26356  015A9A  EC0E  F0A4         	call	_USBCtrlTrfTxService	;wreg free
 26357                           
 26358                           ;usb_device.c: 1515: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26359  015A9E  0100               	movlb	0	; () banked
 26360  015AA0  EE20 F002          	lfsr	2,2
 26361  015AA4  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 26362  015AA6  26D9               	addwf	fsr2l,f,c
 26363  015AA8  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26364  015AAA  22DA               	addwfc	fsr2h,f,c
 26365  015AAC  0E38               	movlw	56
 26366  015AAE  6EDE               	movwf	postinc2,c
 26367  015AB0  0E0D               	movlw	13
 26368  015AB2  6EDD               	movwf	postdec2,c
 26369                           
 26370                           ; BSR set to: 0
 26371                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26372  015AB4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26373  015AB8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26374  015ABC  0E48               	movlw	72
 26375  015ABE  6EDF               	movwf	indf2,c
 26376                           
 26377                           ; BSR set to: 0
 26378                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26379  015AC0  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26380  015AC4  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26381  015AC8  0E00               	movlw	0
 26382  015ACA  8EDB               	bsf	plusw2,7,c
 26383  015ACC  0012               	return	
 26384  015ACE                     __end_of_USBCtrlEPAllowDataStage:
 26385                           	opt stack 0
 26386                           pclatu	equ	0xFFB
 26387                           pclath	equ	0xFFA
 26388                           tblptru	equ	0xFF8
 26389                           tblptrh	equ	0xFF7
 26390                           tblptrl	equ	0xFF6
 26391                           tablat	equ	0xFF5
 26392                           prodh	equ	0xFF4
 26393                           prodl	equ	0xFF3
 26394                           intcon	equ	0xFF2
 26395                           intcon2	equ	0xFF1
 26396                           indf0	equ	0xFEF
 26397                           postinc0	equ	0xFEE
 26398                           fsr0h	equ	0xFEA
 26399                           fsr0l	equ	0xFE9
 26400                           wreg	equ	0xFE8
 26401                           indf1	equ	0xFE7
 26402                           postinc1	equ	0xFE6
 26403                           postdec1	equ	0xFE5
 26404                           fsr1h	equ	0xFE2
 26405                           fsr1l	equ	0xFE1
 26406                           indf2	equ	0xFDF
 26407                           postinc2	equ	0xFDE
 26408                           postdec2	equ	0xFDD
 26409                           plusw2	equ	0xFDB
 26410                           fsr2h	equ	0xFDA
 26411                           fsr2l	equ	0xFD9
 26412                           status	equ	0xFD8
 26413                           
 26414 ;; *************** function _USBCheckStdRequest *****************
 26415 ;; Defined at:
 26416 ;;		line 2690 in file "../My_library/usb/usb_device.c"
 26417 ;; Parameters:    Size  Location     Type
 26418 ;;		None
 26419 ;; Auto vars:     Size  Location     Type
 26420 ;;		None
 26421 ;; Return value:  Size  Location     Type
 26422 ;;		None               void
 26423 ;; Registers used:
 26424 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26425 ;; Tracked objects:
 26426 ;;		On entry : 0/0
 26427 ;;		On exit  : 0/0
 26428 ;;		Unchanged: 0/0
 26429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26434 ;;Total ram usage:        0 bytes
 26435 ;; Hardware stack levels used:    1
 26436 ;; Hardware stack levels required when called:    6
 26437 ;; This function calls:
 26438 ;;		_USBStdFeatureReqHandler
 26439 ;;		_USBStdGetDscHandler
 26440 ;;		_USBStdGetStatusHandler
 26441 ;;		_USBStdSetCfgHandler
 26442 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26443 ;; This function is called by:
 26444 ;;		_USBCtrlTrfSetupHandler
 26445 ;; This function uses a non-reentrant model
 26446 ;;
 26447                           
 26448                           	psect	text114
 26449  014394                     __ptext114:
 26450                           	opt stack 0
 26451  014394                     _USBCheckStdRequest:
 26452                           	opt stack 10
 26453                           
 26454                           ;usb_device.c: 2692: if(SetupPkt.RequestType != (0x00>>5)) return;
 26455                           
 26456                           ;incstack = 0
 26457  014394  010D               	movlb	13	; () banked
 26458  014396  3930               	swapf	48,w,b	;volatile
 26459  014398  32E8               	rrcf	wreg,f,c
 26460  01439A  0B03               	andlw	3
 26461  01439C  0900               	iorlw	0
 26462  01439E  A4D8               	btfss	status,2,c
 26463  0143A0  0012               	return	
 26464  0143A2  D04F               	goto	i2l7761
 26465  0143A4                     i2l359:
 26466                           
 26467                           ; BSR set to: 13
 26468                           ;usb_device.c: 2697: inPipes[0].info.bits.busy = 1;
 26469  0143A4  0100               	movlb	0	; () banked
 26470  0143A6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26471                           
 26472                           ; BSR set to: 0
 26473                           ;usb_device.c: 2698: USBDeviceState = ADR_PENDING_STATE;
 26474  0143A8  0E08               	movlw	8
 26475  0143AA  6E13               	movwf	_USBDeviceState,c	;volatile
 26476                           
 26477                           ;usb_device.c: 2700: break;
 26478  0143AC  0012               	return	
 26479  0143AE                     i2l7731:
 26480                           
 26481                           ;usb_device.c: 2702: USBStdGetDscHandler();
 26482  0143AE  EC9C  F09A         	call	_USBStdGetDscHandler	;wreg free
 26483                           
 26484                           ;usb_device.c: 2703: break;
 26485  0143B2  0012               	return	
 26486  0143B4                     i2l7733:
 26487                           
 26488                           ;usb_device.c: 2705: USBStdSetCfgHandler();
 26489  0143B4  EC2D  F0A3         	call	_USBStdSetCfgHandler	;wreg free
 26490                           
 26491                           ;usb_device.c: 2706: break;
 26492  0143B8  0012               	return	
 26493  0143BA                     i2l7735:
 26494                           
 26495                           ;usb_device.c: 2708: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26496  0143BA  0E2B               	movlw	low _USBActiveConfiguration
 26497  0143BC  0100               	movlb	0	; () banked
 26498  0143BE  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26499  0143C0  0E00               	movlw	high _USBActiveConfiguration
 26500  0143C2  0100               	movlb	0	; () banked
 26501  0143C4  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26502                           
 26503                           ; BSR set to: 0
 26504                           ;usb_device.c: 2709: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26505  0143C6  0100               	movlb	0	; () banked
 26506  0143C8  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26507                           
 26508                           ; BSR set to: 0
 26509                           ;usb_device.c: 2710: inPipes[0].wCount.v[0] = 1;
 26510  0143CA  0E01               	movlw	1
 26511  0143CC  0100               	movlb	0	; () banked
 26512  0143CE  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26513                           
 26514                           ; BSR set to: 0
 26515                           ;usb_device.c: 2711: inPipes[0].info.bits.busy = 1;
 26516  0143D0  0100               	movlb	0	; () banked
 26517  0143D2  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26518                           
 26519                           ;usb_device.c: 2712: break;
 26520  0143D4  0012               	return	
 26521  0143D6                     i2l7743:
 26522                           
 26523                           ;usb_device.c: 2714: USBStdGetStatusHandler();
 26524  0143D6  EC0D  F0AC         	call	_USBStdGetStatusHandler	;wreg free
 26525                           
 26526                           ;usb_device.c: 2715: break;
 26527  0143DA  0012               	return	
 26528  0143DC                     i2l7745:
 26529                           
 26530                           ;usb_device.c: 2717: case 3:
 26531                           ;usb_device.c: 2718: USBStdFeatureReqHandler();
 26532  0143DC  EC22  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 26533                           
 26534                           ;usb_device.c: 2719: break;
 26535  0143E0  0012               	return	
 26536  0143E2                     i2l7747:
 26537                           
 26538                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26539  0143E2  010D               	movlb	13	; () banked
 26540  0143E4  5134               	movf	52,w,b	;volatile
 26541  0143E6  0D01               	mullw	1
 26542  0143E8  0E90               	movlw	low _USBAlternateInterface
 26543  0143EA  24F3               	addwf	prodl,w,c
 26544  0143EC  0100               	movlb	0	; () banked
 26545  0143EE  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26546  0143F0  0E01               	movlw	high _USBAlternateInterface
 26547  0143F2  20F4               	addwfc	prodh,w,c
 26548  0143F4  0100               	movlb	0	; () banked
 26549  0143F6  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26550                           
 26551                           ; BSR set to: 0
 26552                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26553  0143F8  0100               	movlb	0	; () banked
 26554  0143FA  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26555                           
 26556                           ; BSR set to: 0
 26557                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 26558  0143FC  0E01               	movlw	1
 26559  0143FE  0100               	movlb	0	; () banked
 26560  014400  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26561                           
 26562                           ; BSR set to: 0
 26563                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 26564  014402  0100               	movlb	0	; () banked
 26565  014404  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26566                           
 26567                           ;usb_device.c: 2725: break;
 26568  014406  0012               	return	
 26569  014408                     i2l368:
 26570                           
 26571                           ; BSR set to: 13
 26572                           ;usb_device.c: 2727: inPipes[0].info.bits.busy = 1;
 26573  014408  0100               	movlb	0	; () banked
 26574  01440A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26575                           
 26576                           ; BSR set to: 0
 26577                           ;usb_device.c: 2728: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26578  01440C  010D               	movlb	13	; () banked
 26579  01440E  5134               	movf	52,w,b	;volatile
 26580  014410  0D01               	mullw	1
 26581  014412  0E90               	movlw	low _USBAlternateInterface
 26582  014414  24F3               	addwf	prodl,w,c
 26583  014416  6ED9               	movwf	fsr2l,c
 26584  014418  0E01               	movlw	high _USBAlternateInterface
 26585  01441A  20F4               	addwfc	prodh,w,c
 26586  01441C  6EDA               	movwf	fsr2h,c
 26587  01441E  CD32 FFDF          	movff	3378,indf2	;volatile
 26588                           
 26589                           ;usb_device.c: 2729: break;
 26590  014422  0012               	return	
 26591  014424                     i2l7757:
 26592                           
 26593                           ; BSR set to: 13
 26594                           ;usb_device.c: 2731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26595  014424  0E00               	movlw	0
 26596  014426  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26597  014428  0E02               	movlw	2
 26598  01442A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26599  01442C  0E00               	movlw	0
 26600  01442E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26601  014430  0E00               	movlw	0
 26602  014432  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26603  014434  0E00               	movlw	0
 26604  014436  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26605  014438  0E00               	movlw	0
 26606  01443A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26607  01443C  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26608                           
 26609                           ;usb_device.c: 2736: }
 26610                           
 26611                           ;usb_device.c: 2735: break;
 26612                           
 26613                           ;usb_device.c: 2734: default:
 26614                           
 26615                           ;usb_device.c: 2733: case 12:
 26616                           
 26617                           ;usb_device.c: 2732: break;
 26618  014440  0012               	return	
 26619  014442                     i2l7761:
 26620  014442  010D               	movlb	13	; () banked
 26621  014444  5131               	movf	49,w,b	;volatile
 26622                           
 26623                           ; Switch size 1, requested type "space"
 26624                           ; Number of cases is 11, Range of values is 0 to 12
 26625                           ; switch strategies available:
 26626                           ; Name         Instructions Cycles
 26627                           ; simple_byte           34    18 (average)
 26628                           ;	Chosen strategy is simple_byte
 26629  014446  0A00               	xorlw	0	; case 0
 26630  014448  B4D8               	btfsc	status,2,c
 26631  01444A  D7C5               	goto	i2l7743
 26632  01444C  0A01               	xorlw	1	; case 1
 26633  01444E  B4D8               	btfsc	status,2,c
 26634  014450  D7C5               	goto	i2l7745
 26635  014452  0A02               	xorlw	2	; case 3
 26636  014454  B4D8               	btfsc	status,2,c
 26637  014456  D7C2               	goto	i2l7745
 26638  014458  0A06               	xorlw	6	; case 5
 26639  01445A  B4D8               	btfsc	status,2,c
 26640  01445C  D7A3               	goto	i2l359
 26641  01445E  0A03               	xorlw	3	; case 6
 26642  014460  B4D8               	btfsc	status,2,c
 26643  014462  D7A5               	goto	i2l7731
 26644  014464  0A01               	xorlw	1	; case 7
 26645  014466  B4D8               	btfsc	status,2,c
 26646  014468  D7DD               	goto	i2l7757
 26647  01446A  0A0F               	xorlw	15	; case 8
 26648  01446C  B4D8               	btfsc	status,2,c
 26649  01446E  D7A5               	goto	i2l7735
 26650  014470  0A01               	xorlw	1	; case 9
 26651  014472  B4D8               	btfsc	status,2,c
 26652  014474  D79F               	goto	i2l7733
 26653  014476  0A03               	xorlw	3	; case 10
 26654  014478  B4D8               	btfsc	status,2,c
 26655  01447A  D7B3               	goto	i2l7747
 26656  01447C  0A01               	xorlw	1	; case 11
 26657  01447E  B4D8               	btfsc	status,2,c
 26658  014480  D7C3               	goto	i2l368
 26659  014482  0A07               	xorlw	7	; case 12
 26660  014484  0012               	return	
 26661  014486                     __end_of_USBCheckStdRequest:
 26662                           	opt stack 0
 26663                           pclatu	equ	0xFFB
 26664                           pclath	equ	0xFFA
 26665                           tblptru	equ	0xFF8
 26666                           tblptrh	equ	0xFF7
 26667                           tblptrl	equ	0xFF6
 26668                           tablat	equ	0xFF5
 26669                           prodh	equ	0xFF4
 26670                           prodl	equ	0xFF3
 26671                           intcon	equ	0xFF2
 26672                           intcon2	equ	0xFF1
 26673                           indf0	equ	0xFEF
 26674                           postinc0	equ	0xFEE
 26675                           fsr0h	equ	0xFEA
 26676                           fsr0l	equ	0xFE9
 26677                           wreg	equ	0xFE8
 26678                           indf1	equ	0xFE7
 26679                           postinc1	equ	0xFE6
 26680                           postdec1	equ	0xFE5
 26681                           fsr1h	equ	0xFE2
 26682                           fsr1l	equ	0xFE1
 26683                           indf2	equ	0xFDF
 26684                           postinc2	equ	0xFDE
 26685                           postdec2	equ	0xFDD
 26686                           plusw2	equ	0xFDB
 26687                           fsr2h	equ	0xFDA
 26688                           fsr2l	equ	0xFD9
 26689                           status	equ	0xFD8
 26690                           
 26691 ;; *************** function _USBStdSetCfgHandler *****************
 26692 ;; Defined at:
 26693 ;;		line 1969 in file "../My_library/usb/usb_device.c"
 26694 ;; Parameters:    Size  Location     Type
 26695 ;;		None
 26696 ;; Auto vars:     Size  Location     Type
 26697 ;;  i               1   20[COMRAM] unsigned char 
 26698 ;; Return value:  Size  Location     Type
 26699 ;;		None               void
 26700 ;; Registers used:
 26701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26702 ;; Tracked objects:
 26703 ;;		On entry : 0/0
 26704 ;;		On exit  : 0/0
 26705 ;;		Unchanged: 0/0
 26706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26711 ;;Total ram usage:        1 bytes
 26712 ;; Hardware stack levels used:    1
 26713 ;; Hardware stack levels required when called:    5
 26714 ;; This function calls:
 26715 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26716 ;;		i2_memset
 26717 ;; This function is called by:
 26718 ;;		_USBCheckStdRequest
 26719 ;; This function uses a non-reentrant model
 26720 ;;
 26721                           
 26722                           	psect	text115
 26723  01465A                     __ptext115:
 26724                           	opt stack 0
 26725  01465A                     _USBStdSetCfgHandler:
 26726                           	opt stack 10
 26727                           
 26728                           ;usb_device.c: 1971: uint8_t i;
 26729                           ;usb_device.c: 1974: inPipes[0].info.bits.busy = 1;
 26730                           
 26731                           ;incstack = 0
 26732  01465A  0100               	movlb	0	; () banked
 26733  01465C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26734                           
 26735                           ; BSR set to: 0
 26736                           ;usb_device.c: 1977: memset((void*)&UEP1,0x00,(2));;
 26737  01465E  0E27               	movlw	39
 26738  014660  6E2D               	movwf	i2memset@p1,c
 26739  014662  0E0F               	movlw	15
 26740  014664  6E2E               	movwf	i2memset@p1+1,c
 26741  014666  0E00               	movlw	0
 26742  014668  6E30               	movwf	i2memset@c+1,c
 26743  01466A  0E00               	movlw	0
 26744  01466C  6E2F               	movwf	i2memset@c,c
 26745  01466E  0E00               	movlw	0
 26746  014670  6E32               	movwf	i2memset@n+1,c
 26747  014672  0E02               	movlw	2
 26748  014674  6E31               	movwf	i2memset@n,c
 26749  014676  EC32  F0B6         	call	i2_memset	;wreg free
 26750                           
 26751                           ;usb_device.c: 1980: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26752  01467A  0E00               	movlw	0
 26753  01467C  6E2D               	movwf	i2memset@p1,c
 26754  01467E  0E0D               	movlw	13
 26755  014680  6E2E               	movwf	i2memset@p1+1,c
 26756  014682  0E00               	movlw	0
 26757  014684  6E30               	movwf	i2memset@c+1,c
 26758  014686  0E00               	movlw	0
 26759  014688  6E2F               	movwf	i2memset@c,c
 26760  01468A  0E00               	movlw	0
 26761  01468C  6E32               	movwf	i2memset@n+1,c
 26762  01468E  0E30               	movlw	48
 26763  014690  6E31               	movwf	i2memset@n,c
 26764  014692  EC32  F0B6         	call	i2_memset	;wreg free
 26765                           
 26766                           ;usb_device.c: 1983: UCONbits.PPBRST = 1;
 26767  014696  8C65               	bsf	3941,6,c	;volatile
 26768                           
 26769                           ;usb_device.c: 1988: for(i = 0; i < (uint8_t)(2+1u); i++)
 26770  014698  0E00               	movlw	0
 26771  01469A  6E41               	movwf	USBStdSetCfgHandler@i,c
 26772  01469C                     i2l7211:
 26773  01469C  0E02               	movlw	2
 26774  01469E  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26775  0146A0  D001               	goto	i2l7215
 26776  0146A2  D016               	goto	i2l7221
 26777  0146A4                     i2l7215:
 26778                           
 26779                           ;usb_device.c: 1989: {
 26780                           ;usb_device.c: 1990: ep_data_in[i].Val = 0u;
 26781  0146A4  5041               	movf	USBStdSetCfgHandler@i,w,c
 26782  0146A6  0D01               	mullw	1
 26783  0146A8  0E01               	movlw	low _ep_data_in
 26784  0146AA  24F3               	addwf	prodl,w,c
 26785  0146AC  6ED9               	movwf	fsr2l,c
 26786  0146AE  0E00               	movlw	high _ep_data_in
 26787  0146B0  20F4               	addwfc	prodh,w,c
 26788  0146B2  6EDA               	movwf	fsr2h,c
 26789  0146B4  0E00               	movlw	0
 26790  0146B6  6EDF               	movwf	indf2,c
 26791                           
 26792                           ;usb_device.c: 1991: ep_data_out[i].Val = 0u;
 26793  0146B8  5041               	movf	USBStdSetCfgHandler@i,w,c
 26794  0146BA  0D01               	mullw	1
 26795  0146BC  0E04               	movlw	low _ep_data_out
 26796  0146BE  24F3               	addwf	prodl,w,c
 26797  0146C0  6ED9               	movwf	fsr2l,c
 26798  0146C2  0E00               	movlw	high _ep_data_out
 26799  0146C4  20F4               	addwfc	prodh,w,c
 26800  0146C6  6EDA               	movwf	fsr2h,c
 26801  0146C8  0E00               	movlw	0
 26802  0146CA  6EDF               	movwf	indf2,c
 26803  0146CC  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26804  0146CE  D7E6               	goto	i2l7211
 26805  0146D0                     i2l7221:
 26806                           
 26807                           ;usb_device.c: 1992: }
 26808                           ;usb_device.c: 1995: memset((void*)&USBAlternateInterface,0x00,2);
 26809  0146D0  0E90               	movlw	low _USBAlternateInterface
 26810  0146D2  6E2D               	movwf	i2memset@p1,c
 26811  0146D4  0E01               	movlw	high _USBAlternateInterface
 26812  0146D6  6E2E               	movwf	i2memset@p1+1,c
 26813  0146D8  0E00               	movlw	0
 26814  0146DA  6E30               	movwf	i2memset@c+1,c
 26815  0146DC  0E00               	movlw	0
 26816  0146DE  6E2F               	movwf	i2memset@c,c
 26817  0146E0  0E00               	movlw	0
 26818  0146E2  6E32               	movwf	i2memset@n+1,c
 26819  0146E4  0E02               	movlw	2
 26820  0146E6  6E31               	movwf	i2memset@n,c
 26821  0146E8  EC32  F0B6         	call	i2_memset	;wreg free
 26822                           
 26823                           ;usb_device.c: 1998: UCONbits.PPBRST = 0;
 26824  0146EC  9C65               	bcf	3941,6,c	;volatile
 26825                           
 26826                           ;usb_device.c: 2000: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26827  0146EE  0E08               	movlw	8
 26828  0146F0  0100               	movlb	0	; () banked
 26829  0146F2  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26830  0146F4  0E0D               	movlw	13
 26831  0146F6  0100               	movlb	0	; () banked
 26832  0146F8  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26833                           
 26834                           ; BSR set to: 0
 26835                           ;usb_device.c: 2003: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26836  0146FA  0E00               	movlw	0
 26837  0146FC  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26838  0146FE  0E0D               	movlw	13
 26839  014700  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26840                           
 26841                           ; BSR set to: 0
 26842                           ;usb_device.c: 2004: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26843  014702  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26844  014706  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26845                           
 26846                           ; BSR set to: 0
 26847                           ;usb_device.c: 2007: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26848  01470A  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26849                           
 26850                           ; BSR set to: 0
 26851                           ;usb_device.c: 2010: if(USBActiveConfiguration == 0)
 26852  01470E  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26853  014710  A4D8               	btfss	status,2,c
 26854  014712  D003               	goto	i2l7237
 26855                           
 26856                           ; BSR set to: 0
 26857                           ;usb_device.c: 2011: {
 26858                           ;usb_device.c: 2013: USBDeviceState = ADDRESS_STATE;
 26859  014714  0E10               	movlw	16
 26860  014716  6E13               	movwf	_USBDeviceState,c	;volatile
 26861                           
 26862                           ;usb_device.c: 2014: }
 26863  014718  0012               	return	
 26864  01471A                     i2l7237:
 26865                           
 26866                           ; BSR set to: 0
 26867                           ;usb_device.c: 2015: else
 26868                           ;usb_device.c: 2016: {
 26869                           ;usb_device.c: 2018: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26870  01471A  0E00               	movlw	0
 26871  01471C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26872  01471E  0E01               	movlw	1
 26873  014720  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26874  014722  0E2B               	movlw	low _USBActiveConfiguration
 26875  014724  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26876  014726  0E00               	movlw	high _USBActiveConfiguration
 26877  014728  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26878  01472A  0E00               	movlw	0
 26879  01472C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26880  01472E  0E01               	movlw	1
 26881  014730  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26882  014732  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26883                           
 26884                           ;usb_device.c: 2023: USBDeviceState = CONFIGURED_STATE;
 26885  014736  0E20               	movlw	32
 26886  014738  6E13               	movwf	_USBDeviceState,c	;volatile
 26887  01473A  0012               	return	
 26888  01473C                     __end_of_USBStdSetCfgHandler:
 26889                           	opt stack 0
 26890                           pclatu	equ	0xFFB
 26891                           pclath	equ	0xFFA
 26892                           tblptru	equ	0xFF8
 26893                           tblptrh	equ	0xFF7
 26894                           tblptrl	equ	0xFF6
 26895                           tablat	equ	0xFF5
 26896                           prodh	equ	0xFF4
 26897                           prodl	equ	0xFF3
 26898                           intcon	equ	0xFF2
 26899                           intcon2	equ	0xFF1
 26900                           indf0	equ	0xFEF
 26901                           postinc0	equ	0xFEE
 26902                           fsr0h	equ	0xFEA
 26903                           fsr0l	equ	0xFE9
 26904                           wreg	equ	0xFE8
 26905                           indf1	equ	0xFE7
 26906                           postinc1	equ	0xFE6
 26907                           postdec1	equ	0xFE5
 26908                           fsr1h	equ	0xFE2
 26909                           fsr1l	equ	0xFE1
 26910                           indf2	equ	0xFDF
 26911                           postinc2	equ	0xFDE
 26912                           postdec2	equ	0xFDD
 26913                           plusw2	equ	0xFDB
 26914                           fsr2h	equ	0xFDA
 26915                           fsr2l	equ	0xFD9
 26916                           status	equ	0xFD8
 26917                           
 26918 ;; *************** function i2_memset *****************
 26919 ;; Defined at:
 26920 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26921 ;; Parameters:    Size  Location     Type
 26922 ;;  p1              2    0[COMRAM] PTR void 
 26923 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26924 ;;  c               2    2[COMRAM] int 
 26925 ;;  n               2    4[COMRAM] unsigned int 
 26926 ;; Auto vars:     Size  Location     Type
 26927 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26928 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26929 ;; Return value:  Size  Location     Type
 26930 ;;                  2    0[COMRAM] PTR void 
 26931 ;; Registers used:
 26932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26933 ;; Tracked objects:
 26934 ;;		On entry : 0/0
 26935 ;;		On exit  : 0/0
 26936 ;;		Unchanged: 0/0
 26937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26938 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26941 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26942 ;;Total ram usage:        8 bytes
 26943 ;; Hardware stack levels used:    1
 26944 ;; This function calls:
 26945 ;;		Nothing
 26946 ;; This function is called by:
 26947 ;;		_USBStdSetCfgHandler
 26948 ;;		i2_USBDeviceInit
 26949 ;; This function uses a non-reentrant model
 26950 ;;
 26951                           
 26952                           	psect	text116
 26953  016C64                     __ptext116:
 26954                           	opt stack 0
 26955  016C64                     i2_memset:
 26956                           	opt stack 17
 26957                           
 26958                           ;incstack = 0
 26959  016C64  C02D  F033         	movff	i2memset@p1,i2memset@p
 26960  016C68  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26961  016C6C  D008               	goto	i2l7145
 26962  016C6E                     i2l7141:
 26963  016C6E  C033  FFD9         	movff	i2memset@p,fsr2l
 26964  016C72  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26965  016C76  C02F  FFDF         	movff	i2memset@c,indf2
 26966  016C7A  4A33               	infsnz	i2memset@p,f,c
 26967  016C7C  2A34               	incf	i2memset@p+1,f,c
 26968  016C7E                     i2l7145:
 26969  016C7E  0631               	decf	i2memset@n,f,c
 26970  016C80  A0D8               	btfss	status,0,c
 26971  016C82  0632               	decf	i2memset@n+1,f,c
 26972  016C84  2831               	incf	i2memset@n,w,c
 26973  016C86  E1F3               	bnz	i2l7141
 26974  016C88  2832               	incf	i2memset@n+1,w,c
 26975  016C8A  B4D8               	btfsc	status,2,c
 26976  016C8C  0012               	return	
 26977  016C8E  D7EF               	goto	i2l7141
 26978  016C90                     __end_ofi2_memset:
 26979                           	opt stack 0
 26980                           pclatu	equ	0xFFB
 26981                           pclath	equ	0xFFA
 26982                           tblptru	equ	0xFF8
 26983                           tblptrh	equ	0xFF7
 26984                           tblptrl	equ	0xFF6
 26985                           tablat	equ	0xFF5
 26986                           prodh	equ	0xFF4
 26987                           prodl	equ	0xFF3
 26988                           intcon	equ	0xFF2
 26989                           intcon2	equ	0xFF1
 26990                           indf0	equ	0xFEF
 26991                           postinc0	equ	0xFEE
 26992                           fsr0h	equ	0xFEA
 26993                           fsr0l	equ	0xFE9
 26994                           wreg	equ	0xFE8
 26995                           indf1	equ	0xFE7
 26996                           postinc1	equ	0xFE6
 26997                           postdec1	equ	0xFE5
 26998                           fsr1h	equ	0xFE2
 26999                           fsr1l	equ	0xFE1
 27000                           indf2	equ	0xFDF
 27001                           postinc2	equ	0xFDE
 27002                           postdec2	equ	0xFDD
 27003                           plusw2	equ	0xFDB
 27004                           fsr2h	equ	0xFDA
 27005                           fsr2l	equ	0xFD9
 27006                           status	equ	0xFD8
 27007                           
 27008 ;; *************** function _USBStdGetStatusHandler *****************
 27009 ;; Defined at:
 27010 ;;		line 2130 in file "../My_library/usb/usb_device.c"
 27011 ;; Parameters:    Size  Location     Type
 27012 ;;		None
 27013 ;; Auto vars:     Size  Location     Type
 27014 ;;  p               2    1[COMRAM] PTR struct __BDT
 27015 ;;		 -> NULL(0), BDT(48), 
 27016 ;; Return value:  Size  Location     Type
 27017 ;;		None               void
 27018 ;; Registers used:
 27019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27020 ;; Tracked objects:
 27021 ;;		On entry : 0/0
 27022 ;;		On exit  : 0/0
 27023 ;;		Unchanged: 0/0
 27024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27028 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27029 ;;Total ram usage:        3 bytes
 27030 ;; Hardware stack levels used:    1
 27031 ;; This function calls:
 27032 ;;		Nothing
 27033 ;; This function is called by:
 27034 ;;		_USBCheckStdRequest
 27035 ;; This function uses a non-reentrant model
 27036 ;;
 27037                           
 27038                           	psect	text117
 27039  01581A                     __ptext117:
 27040                           	opt stack 0
 27041  01581A                     _USBStdGetStatusHandler:
 27042                           	opt stack 15
 27043                           
 27044                           ;usb_device.c: 2132: CtrlTrfData[0] = 0;
 27045                           
 27046                           ;incstack = 0
 27047  01581A  0E00               	movlw	0
 27048  01581C  010D               	movlb	13	; () banked
 27049  01581E  6F38               	movwf	56,b	;volatile
 27050                           
 27051                           ;usb_device.c: 2133: CtrlTrfData[1] = 0;
 27052  015820  0E00               	movlw	0
 27053  015822  010D               	movlb	13	; () banked
 27054  015824  6F39               	movwf	57,b	;volatile
 27055                           
 27056                           ;usb_device.c: 2135: switch(SetupPkt.Recipient)
 27057  015826  D03B               	goto	i2l7293
 27058  015828                     i2l295:
 27059                           
 27060                           ; BSR set to: 13
 27061                           ;usb_device.c: 2138: inPipes[0].info.bits.busy = 1;
 27062  015828  0100               	movlb	0	; () banked
 27063  01582A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27064                           
 27065                           ;usb_device.c: 2146: }
 27066                           ;usb_device.c: 2148: if(RemoteWakeup == 1)
 27067                           
 27068                           ; BSR set to: 13
 27069                           
 27070                           ; BSR set to: 0
 27071                           ;usb_device.c: 2144: {
 27072                           ;usb_device.c: 2145: CtrlTrfData[0]|=0x01;
 27073                           
 27074                           ;usb_device.c: 2143: if(0 == 1)
 27075  01582C  040F               	decf	_RemoteWakeup,w,c	;volatile
 27076  01582E  A4D8               	btfss	status,2,c
 27077  015830  D042               	goto	i2l298
 27078                           
 27079                           ;usb_device.c: 2149: {
 27080                           ;usb_device.c: 2150: CtrlTrfData[0]|=0x02;
 27081  015832  010D               	movlb	13	; () banked
 27082  015834  8338               	bsf	56,1,b	;volatile
 27083                           
 27084                           ; BSR set to: 13
 27085                           ;usb_device.c: 2151: }
 27086                           ;usb_device.c: 2152: break;
 27087  015836  D03F               	goto	i2l298
 27088  015838                     i2l299:
 27089                           
 27090                           ; BSR set to: 13
 27091                           ;usb_device.c: 2154: inPipes[0].info.bits.busy = 1;
 27092  015838  0100               	movlb	0	; () banked
 27093  01583A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27094                           
 27095                           ;usb_device.c: 2155: break;
 27096  01583C  D03C               	goto	i2l298
 27097  01583E                     i2l300:
 27098                           
 27099                           ; BSR set to: 13
 27100                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 27101  01583E  0100               	movlb	0	; () banked
 27102  015840  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27103                           
 27104                           ;usb_device.c: 2161: {
 27105                           ;usb_device.c: 2162: BDT_ENTRY *p;
 27106                           ;usb_device.c: 2164: if(SetupPkt.EPDir == 0)
 27107  015842  010D               	movlb	13	; () banked
 27108  015844  BF34               	btfsc	52,7,b	;volatile
 27109  015846  D00B               	goto	i2l7283
 27110                           
 27111                           ; BSR set to: 13
 27112                           ;usb_device.c: 2165: {
 27113                           ;usb_device.c: 2166: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27114  015848  010D               	movlb	13	; () banked
 27115  01584A  5134               	movf	52,w,b	;volatile
 27116  01584C  0B0F               	andlw	15
 27117  01584E  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27118  015850  502D               	movf	??_USBStdGetStatusHandler,w,c
 27119  015852  0D02               	mullw	2
 27120  015854  0E00               	movlw	low _pBDTEntryOut
 27121  015856  24F3               	addwf	prodl,w,c
 27122  015858  6ED9               	movwf	fsr2l,c
 27123  01585A  0E01               	movlw	high _pBDTEntryOut
 27124  01585C  D00A               	goto	L12
 27125  01585E                     i2l7283:
 27126                           
 27127                           ; BSR set to: 13
 27128                           ;usb_device.c: 2168: else
 27129                           ;usb_device.c: 2169: {
 27130                           ;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27131  01585E  010D               	movlb	13	; () banked
 27132  015860  5134               	movf	52,w,b	;volatile
 27133  015862  0B0F               	andlw	15
 27134  015864  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27135  015866  502D               	movf	??_USBStdGetStatusHandler,w,c
 27136  015868  0D02               	mullw	2
 27137  01586A  0EF5               	movlw	low _pBDTEntryIn
 27138  01586C  24F3               	addwf	prodl,w,c
 27139  01586E  6ED9               	movwf	fsr2l,c
 27140  015870  0E00               	movlw	high _pBDTEntryIn
 27141  015872                     L12:
 27142  015872  20F4               	addwfc	prodh,w,c
 27143  015874  6EDA               	movwf	fsr2h,c
 27144  015876  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 27145  01587A  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 27146                           
 27147                           ; BSR set to: 13
 27148                           ;usb_device.c: 2171: }
 27149                           ;usb_device.c: 2173: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27150                           
 27151                           ; BSR set to: 13
 27152  01587E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27153  015882  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27154  015886  AEDF               	btfss	indf2,7,c
 27155  015888  D016               	goto	i2l298
 27156                           
 27157                           ; BSR set to: 13
 27158  01588A  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27159  01588E  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27160  015892  A4DF               	btfss	indf2,2,c
 27161  015894  D010               	goto	i2l298
 27162                           
 27163                           ; BSR set to: 13
 27164                           ;usb_device.c: 2174: CtrlTrfData[0]=0x01;
 27165  015896  0E01               	movlw	1
 27166  015898  010D               	movlb	13	; () banked
 27167  01589A  6F38               	movwf	56,b	;volatile
 27168                           
 27169                           ; BSR set to: 13
 27170                           ;usb_device.c: 2176: }
 27171                           ;usb_device.c: 2177: }
 27172                           
 27173                           ; BSR set to: 13
 27174                           ;usb_device.c: 2175: break;
 27175  01589C  D00C               	goto	i2l298
 27176  01589E                     i2l7293:
 27177                           
 27178                           ; BSR set to: 13
 27179  01589E  010D               	movlb	13	; () banked
 27180  0158A0  5130               	movf	48,w,b	;volatile
 27181  0158A2  0B1F               	andlw	31
 27182                           
 27183                           ; Switch size 1, requested type "space"
 27184                           ; Number of cases is 3, Range of values is 0 to 2
 27185                           ; switch strategies available:
 27186                           ; Name         Instructions Cycles
 27187                           ; simple_byte           10     6 (average)
 27188                           ;	Chosen strategy is simple_byte
 27189  0158A4  0A00               	xorlw	0	; case 0
 27190  0158A6  B4D8               	btfsc	status,2,c
 27191  0158A8  D7BF               	goto	i2l295
 27192  0158AA  0A01               	xorlw	1	; case 1
 27193  0158AC  B4D8               	btfsc	status,2,c
 27194  0158AE  D7C4               	goto	i2l299
 27195  0158B0  0A03               	xorlw	3	; case 2
 27196  0158B2  B4D8               	btfsc	status,2,c
 27197  0158B4  D7C4               	goto	i2l300
 27198  0158B6                     i2l298:
 27199                           
 27200                           ;usb_device.c: 2179: if(inPipes[0].info.bits.busy == 1)
 27201  0158B6  0100               	movlb	0	; () banked
 27202  0158B8  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27203  0158BA  0012               	return	
 27204                           
 27205                           ; BSR set to: 0
 27206                           ;usb_device.c: 2180: {
 27207                           ;usb_device.c: 2181: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27208  0158BC  0E38               	movlw	56
 27209  0158BE  0100               	movlb	0	; () banked
 27210  0158C0  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27211  0158C2  0E0D               	movlw	13
 27212  0158C4  0100               	movlb	0	; () banked
 27213  0158C6  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27214                           
 27215                           ; BSR set to: 0
 27216                           ;usb_device.c: 2182: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27217  0158C8  0100               	movlb	0	; () banked
 27218  0158CA  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27219                           
 27220                           ; BSR set to: 0
 27221                           ;usb_device.c: 2183: inPipes[0].wCount.v[0] = 2;
 27222  0158CC  0E02               	movlw	2
 27223  0158CE  0100               	movlb	0	; () banked
 27224  0158D0  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27225  0158D2  0012               	return	
 27226  0158D4                     __end_of_USBStdGetStatusHandler:
 27227                           	opt stack 0
 27228                           pclatu	equ	0xFFB
 27229                           pclath	equ	0xFFA
 27230                           tblptru	equ	0xFF8
 27231                           tblptrh	equ	0xFF7
 27232                           tblptrl	equ	0xFF6
 27233                           tablat	equ	0xFF5
 27234                           prodh	equ	0xFF4
 27235                           prodl	equ	0xFF3
 27236                           intcon	equ	0xFF2
 27237                           intcon2	equ	0xFF1
 27238                           indf0	equ	0xFEF
 27239                           postinc0	equ	0xFEE
 27240                           fsr0h	equ	0xFEA
 27241                           fsr0l	equ	0xFE9
 27242                           wreg	equ	0xFE8
 27243                           indf1	equ	0xFE7
 27244                           postinc1	equ	0xFE6
 27245                           postdec1	equ	0xFE5
 27246                           fsr1h	equ	0xFE2
 27247                           fsr1l	equ	0xFE1
 27248                           indf2	equ	0xFDF
 27249                           postinc2	equ	0xFDE
 27250                           postdec2	equ	0xFDD
 27251                           plusw2	equ	0xFDB
 27252                           fsr2h	equ	0xFDA
 27253                           fsr2l	equ	0xFD9
 27254                           status	equ	0xFD8
 27255                           
 27256 ;; *************** function _USBStdGetDscHandler *****************
 27257 ;; Defined at:
 27258 ;;		line 2044 in file "../My_library/usb/usb_device.c"
 27259 ;; Parameters:    Size  Location     Type
 27260 ;;		None
 27261 ;; Auto vars:     Size  Location     Type
 27262 ;;		None
 27263 ;; Return value:  Size  Location     Type
 27264 ;;		None               void
 27265 ;; Registers used:
 27266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27267 ;; Tracked objects:
 27268 ;;		On entry : 0/0
 27269 ;;		On exit  : 0/0
 27270 ;;		Unchanged: 0/0
 27271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27276 ;;Total ram usage:        2 bytes
 27277 ;; Hardware stack levels used:    1
 27278 ;; This function calls:
 27279 ;;		Nothing
 27280 ;; This function is called by:
 27281 ;;		_USBCheckStdRequest
 27282 ;; This function uses a non-reentrant model
 27283 ;;
 27284                           
 27285                           	psect	text118
 27286  013538                     __ptext118:
 27287                           	opt stack 0
 27288  013538                     _USBStdGetDscHandler:
 27289                           	opt stack 15
 27290                           
 27291                           ;usb_device.c: 2046: if(SetupPkt.bmRequestType == 0x80)
 27292                           
 27293                           ; BSR set to: 0
 27294                           ;incstack = 0
 27295  013538  0E80               	movlw	128
 27296  01353A  010D               	movlb	13	; () banked
 27297  01353C  1930               	xorwf	48,w,b	;volatile
 27298  01353E  A4D8               	btfss	status,2,c
 27299  013540  0012               	return	
 27300                           
 27301                           ; BSR set to: 13
 27302                           ;usb_device.c: 2047: {
 27303                           ;usb_device.c: 2048: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27304  013542  0EC0               	movlw	192
 27305  013544  0100               	movlb	0	; () banked
 27306  013546  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27307                           
 27308                           ;usb_device.c: 2050: switch(SetupPkt.bDescriptorType)
 27309  013548  D092               	goto	i2l7271
 27310  01354A                     i2l7245:
 27311                           
 27312                           ;usb_device.c: 2056: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27313  01354A  0EC0               	movlw	low _device_dsc
 27314  01354C  0100               	movlb	0	; () banked
 27315  01354E  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27316  013550  0EFB               	movlw	high _device_dsc
 27317  013552  0100               	movlb	0	; () banked
 27318  013554  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27319                           
 27320                           ; BSR set to: 0
 27321                           ;usb_device.c: 2058: inPipes[0].wCount.Val = sizeof(device_dsc);
 27322  013556  0E00               	movlw	0
 27323  013558  0100               	movlb	0	; () banked
 27324  01355A  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27325  01355C  0E12               	movlw	18
 27326  01355E  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27327                           
 27328                           ;usb_device.c: 2059: break;
 27329  013560  0012               	return	
 27330  013562                     i2l7249:
 27331                           
 27332                           ;usb_device.c: 2064: if(SetupPkt.bDscIndex < 1)
 27333  013562  010D               	movlb	13	; () banked
 27334  013564  5132               	movf	50,w,b	;volatile
 27335  013566  A4D8               	btfss	status,2,c
 27336  013568  D049               	goto	i2l7257
 27337                           
 27338                           ; BSR set to: 13
 27339                           ;usb_device.c: 2065: {
 27340                           ;usb_device.c: 2069: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27341  01356A  010D               	movlb	13	; () banked
 27342  01356C  5132               	movf	50,w,b	;volatile
 27343  01356E  0D02               	mullw	2
 27344  013570  0E7F               	movlw	low _USB_CD_Ptr
 27345  013572  24F3               	addwf	prodl,w,c
 27346  013574  6EF6               	movwf	tblptrl,c
 27347  013576  0EFA               	movlw	high _USB_CD_Ptr
 27348  013578  20F4               	addwfc	prodh,w,c
 27349  01357A  6EF7               	movwf	tblptrh,c
 27350  01357C                     	if	1	;There are 3 active tblptr bytes
 27351  01357C  6AF8               	clrf	tblptru,c
 27352  01357E  0E00               	movlw	low (__mediumconst shr (0+16))
 27353  013580  22F8               	addwfc	tblptru,f,c
 27354  013582                     	endif
 27355  013582  0009               	tblrd		*+
 27356  013584  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 27357  013588  000A               	tblrd		*-
 27358  01358A  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 27359                           
 27360                           ; BSR set to: 13
 27361                           ;usb_device.c: 2075: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27362  01358E  0E02               	movlw	2
 27363  013590  0100               	movlb	0	; () banked
 27364  013592  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 27365  013594  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27366  013596  0E00               	movlw	0
 27367  013598  0100               	movlb	0	; () banked
 27368  01359A  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27369  01359C  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27370  01359E  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27371  0135A2  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27372  0135A6  0E00               	movlw	low (__mediumconst shr (0+16))
 27373  0135A8  6EF8               	movwf	tblptru,c
 27374  0135AA  0E0E               	movlw	(high __ramtop+-1)
 27375  0135AC  64F7               	cpfsgt	tblptrh,c
 27376  0135AE  D003               	bra	i2u638_47
 27377  0135B0  0008               	tblrd		*
 27378  0135B2  50F5               	movf	tablat,w,c
 27379  0135B4  D005               	bra	i2u638_40
 27380  0135B6                     i2u638_47:
 27381  0135B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 27382  0135BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 27383  0135BE  50EF               	movf	indf0,w,c
 27384  0135C0                     i2u638_40:
 27385  0135C0  0100               	movlb	0	; () banked
 27386  0135C2  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27387                           
 27388                           ; BSR set to: 0
 27389                           ;usb_device.c: 2076: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27390  0135C4  0E03               	movlw	3
 27391  0135C6  0100               	movlb	0	; () banked
 27392  0135C8  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 27393  0135CA  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27394  0135CC  0E00               	movlw	0
 27395  0135CE  0100               	movlb	0	; () banked
 27396  0135D0  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27397  0135D2  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27398  0135D4  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27399  0135D8  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27400  0135DC  0E00               	movlw	low (__mediumconst shr (0+16))
 27401  0135DE  6EF8               	movwf	tblptru,c
 27402  0135E0  0E0E               	movlw	(high __ramtop+-1)
 27403  0135E2  64F7               	cpfsgt	tblptrh,c
 27404  0135E4  D003               	bra	i2u639_47
 27405  0135E6  0008               	tblrd		*
 27406  0135E8  50F5               	movf	tablat,w,c
 27407  0135EA  D005               	bra	i2u639_40
 27408  0135EC                     i2u639_47:
 27409  0135EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 27410  0135F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 27411  0135F4  50EF               	movf	indf0,w,c
 27412  0135F6                     i2u639_40:
 27413  0135F6  0100               	movlb	0	; () banked
 27414  0135F8  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27415                           
 27416                           ;usb_device.c: 2077: }
 27417  0135FA  0012               	return	
 27418  0135FC                     i2l7257:
 27419                           
 27420                           ;usb_device.c: 2078: else
 27421                           ;usb_device.c: 2079: {
 27422                           ;usb_device.c: 2080: inPipes[0].info.Val = 0;
 27423  0135FC  0E00               	movlw	0
 27424  0135FE  0100               	movlb	0	; () banked
 27425  013600  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27426                           
 27427                           ; BSR set to: 0
 27428                           ;usb_device.c: 2081: }
 27429                           ;usb_device.c: 2082: break;
 27430  013602  0012               	return	
 27431  013604                     i2l7259:
 27432                           
 27433                           ;usb_device.c: 2087: if(SetupPkt.bDscIndex<3)
 27434  013604  0E03               	movlw	3
 27435  013606  010D               	movlb	13	; () banked
 27436  013608  6132               	cpfslt	50,b	;volatile
 27437  01360A  D029               	goto	i2l7265
 27438                           
 27439                           ; BSR set to: 13
 27440                           ;usb_device.c: 2088: {
 27441                           ;usb_device.c: 2090: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27442  01360C  010D               	movlb	13	; () banked
 27443  01360E  5132               	movf	50,w,b	;volatile
 27444  013610  0D02               	mullw	2
 27445  013612  0E79               	movlw	low _USB_SD_Ptr
 27446  013614  24F3               	addwf	prodl,w,c
 27447  013616  6EF6               	movwf	tblptrl,c
 27448  013618  0EFA               	movlw	high _USB_SD_Ptr
 27449  01361A  20F4               	addwfc	prodh,w,c
 27450  01361C  6EF7               	movwf	tblptrh,c
 27451  01361E                     	if	1	;There are 3 active tblptr bytes
 27452  01361E  6AF8               	clrf	tblptru,c
 27453  013620  0E00               	movlw	low (__mediumconst shr (0+16))
 27454  013622  22F8               	addwfc	tblptru,f,c
 27455  013624                     	endif
 27456  013624  0009               	tblrd		*+
 27457  013626  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 27458  01362A  000A               	tblrd		*-
 27459  01362C  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 27460                           
 27461                           ; BSR set to: 13
 27462                           ;usb_device.c: 2092: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27463  013630  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 27464  013634  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27465  013638  0E00               	movlw	low (__mediumconst shr (0+16))
 27466  01363A  6EF8               	movwf	tblptru,c
 27467  01363C  0E0E               	movlw	(high __ramtop+-1)
 27468  01363E  64F7               	cpfsgt	tblptrh,c
 27469  013640  D003               	bra	i2u641_47
 27470  013642  0008               	tblrd		*
 27471  013644  50F5               	movf	tablat,w,c
 27472  013646  D005               	bra	i2u641_40
 27473  013648                     i2u641_47:
 27474  013648  CFF6 FFE9          	movff	tblptrl,fsr0l
 27475  01364C  CFF7 FFEA          	movff	tblptrh,fsr0h
 27476  013650  50EF               	movf	indf0,w,c
 27477  013652                     i2u641_40:
 27478  013652  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27479  013654  502D               	movf	??_USBStdGetDscHandler,w,c
 27480  013656  0100               	movlb	0	; () banked
 27481  013658  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27482  01365A  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27483                           
 27484                           ;usb_device.c: 2093: }
 27485  01365C  0012               	return	
 27486  01365E                     i2l7265:
 27487                           
 27488                           ;usb_device.c: 2103: else
 27489                           ;usb_device.c: 2104: {
 27490                           ;usb_device.c: 2105: inPipes[0].info.Val = 0;
 27491  01365E  0E00               	movlw	0
 27492  013660  0100               	movlb	0	; () banked
 27493  013662  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27494                           
 27495                           ; BSR set to: 0
 27496                           ;usb_device.c: 2106: }
 27497                           ;usb_device.c: 2107: break;
 27498  013664  0012               	return	
 27499  013666                     i2l7267:
 27500                           
 27501                           ;usb_device.c: 2109: inPipes[0].info.Val = 0;
 27502  013666  0E00               	movlw	0
 27503  013668  0100               	movlb	0	; () banked
 27504  01366A  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27505                           
 27506                           ; BSR set to: 0
 27507                           ;usb_device.c: 2111: }
 27508                           
 27509                           ;usb_device.c: 2110: break;
 27510  01366C  0012               	return	
 27511  01366E                     i2l7271:
 27512                           
 27513                           ; BSR set to: 0
 27514  01366E  010D               	movlb	13	; () banked
 27515  013670  5133               	movf	51,w,b	;volatile
 27516                           
 27517                           ; Switch size 1, requested type "space"
 27518                           ; Number of cases is 3, Range of values is 1 to 3
 27519                           ; switch strategies available:
 27520                           ; Name         Instructions Cycles
 27521                           ; simple_byte           10     6 (average)
 27522                           ;	Chosen strategy is simple_byte
 27523  013672  0A01               	xorlw	1	; case 1
 27524  013674  B4D8               	btfsc	status,2,c
 27525  013676  D769               	goto	i2l7245
 27526  013678  0A03               	xorlw	3	; case 2
 27527  01367A  B4D8               	btfsc	status,2,c
 27528  01367C  D772               	goto	i2l7249
 27529  01367E  0A01               	xorlw	1	; case 3
 27530  013680  B4D8               	btfsc	status,2,c
 27531  013682  D7C0               	goto	i2l7259
 27532  013684  D7F0               	goto	i2l7267
 27533  013686                     __end_of_USBStdGetDscHandler:
 27534                           	opt stack 0
 27535                           pclatu	equ	0xFFB
 27536                           pclath	equ	0xFFA
 27537                           tblptru	equ	0xFF8
 27538                           tblptrh	equ	0xFF7
 27539                           tblptrl	equ	0xFF6
 27540                           tablat	equ	0xFF5
 27541                           prodh	equ	0xFF4
 27542                           prodl	equ	0xFF3
 27543                           intcon	equ	0xFF2
 27544                           intcon2	equ	0xFF1
 27545                           indf0	equ	0xFEF
 27546                           postinc0	equ	0xFEE
 27547                           fsr0h	equ	0xFEA
 27548                           fsr0l	equ	0xFE9
 27549                           wreg	equ	0xFE8
 27550                           indf1	equ	0xFE7
 27551                           postinc1	equ	0xFE6
 27552                           postdec1	equ	0xFE5
 27553                           fsr1h	equ	0xFE2
 27554                           fsr1l	equ	0xFE1
 27555                           indf2	equ	0xFDF
 27556                           postinc2	equ	0xFDE
 27557                           postdec2	equ	0xFDD
 27558                           plusw2	equ	0xFDB
 27559                           fsr2h	equ	0xFDA
 27560                           fsr2l	equ	0xFD9
 27561                           status	equ	0xFD8
 27562                           
 27563 ;; *************** function _USBStdFeatureReqHandler *****************
 27564 ;; Defined at:
 27565 ;;		line 2758 in file "../My_library/usb/usb_device.c"
 27566 ;; Parameters:    Size  Location     Type
 27567 ;;		None
 27568 ;; Auto vars:     Size  Location     Type
 27569 ;;  p               2   24[COMRAM] PTR struct __BDT
 27570 ;;		 -> NULL(0), BDT(48), 
 27571 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 27572 ;;		 -> UEP0(1), 
 27573 ;;  current_ep_d    1   23[COMRAM] struct .
 27574 ;; Return value:  Size  Location     Type
 27575 ;;		None               void
 27576 ;; Registers used:
 27577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27578 ;; Tracked objects:
 27579 ;;		On entry : 0/0
 27580 ;;		On exit  : 0/0
 27581 ;;		Unchanged: 0/0
 27582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27584 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27586 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27587 ;;Total ram usage:        6 bytes
 27588 ;; Hardware stack levels used:    1
 27589 ;; Hardware stack levels required when called:    5
 27590 ;; This function calls:
 27591 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27592 ;; This function is called by:
 27593 ;;		_USBCheckStdRequest
 27594 ;; This function uses a non-reentrant model
 27595 ;;
 27596                           
 27597                           	psect	text119
 27598  011E44                     __ptext119:
 27599                           	opt stack 0
 27600  011E44                     _USBStdFeatureReqHandler:
 27601                           	opt stack 10
 27602                           
 27603                           ;usb_device.c: 2760: BDT_ENTRY *p;
 27604                           ;usb_device.c: 2761: EP_STATUS current_ep_data;
 27605                           ;usb_device.c: 2765: unsigned char* pUEP;
 27606                           ;usb_device.c: 2803: if((SetupPkt.bFeature == 1)&&
 27607                           ;usb_device.c: 2804: (SetupPkt.Recipient == (0x00)))
 27608                           
 27609                           ;incstack = 0
 27610  011E44  010D               	movlb	13	; () banked
 27611  011E46  0532               	decf	50,w,b	;volatile
 27612  011E48  A4D8               	btfss	status,2,c
 27613  011E4A  D011               	goto	i2l374
 27614                           
 27615                           ; BSR set to: 13
 27616  011E4C  010D               	movlb	13	; () banked
 27617  011E4E  5130               	movf	48,w,b	;volatile
 27618  011E50  0B1F               	andlw	31
 27619  011E52  0900               	iorlw	0
 27620  011E54  A4D8               	btfss	status,2,c
 27621  011E56  D00B               	goto	i2l374
 27622                           
 27623                           ; BSR set to: 13
 27624                           ;usb_device.c: 2805: {
 27625                           ;usb_device.c: 2806: inPipes[0].info.bits.busy = 1;
 27626  011E58  0100               	movlb	0	; () banked
 27627  011E5A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27628                           
 27629                           ; BSR set to: 0
 27630                           ;usb_device.c: 2807: if(SetupPkt.bRequest == 3)
 27631  011E5C  0E03               	movlw	3
 27632  011E5E  010D               	movlb	13	; () banked
 27633  011E60  1931               	xorwf	49,w,b	;volatile
 27634  011E62  A4D8               	btfss	status,2,c
 27635  011E64  D002               	goto	i2l7311
 27636                           
 27637                           ; BSR set to: 13
 27638                           ;usb_device.c: 2808: RemoteWakeup = 1;
 27639  011E66  0E01               	movlw	1
 27640  011E68  D001               	goto	L13
 27641  011E6A                     i2l7311:
 27642                           
 27643                           ; BSR set to: 13
 27644                           ;usb_device.c: 2809: else
 27645                           ;usb_device.c: 2810: RemoteWakeup = 0;
 27646  011E6A  0E00               	movlw	0
 27647  011E6C                     L13:
 27648  011E6C  6E0F               	movwf	_RemoteWakeup,c	;volatile
 27649  011E6E                     i2l374:
 27650                           
 27651                           ; BSR set to: 13
 27652                           ;usb_device.c: 2811: }
 27653                           ;usb_device.c: 2814: if((SetupPkt.bFeature == 0)&&
 27654                           ;usb_device.c: 2815: (SetupPkt.Recipient == (0x02))&&
 27655                           ;usb_device.c: 2816: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27656                           ;usb_device.c: 2817: (USBDeviceState == CONFIGURED_STATE))
 27657  011E6E  010D               	movlb	13	; () banked
 27658  011E70  5132               	movf	50,w,b	;volatile
 27659  011E72  A4D8               	btfss	status,2,c
 27660  011E74  0012               	return	
 27661                           
 27662                           ; BSR set to: 13
 27663  011E76  010D               	movlb	13	; () banked
 27664  011E78  5130               	movf	48,w,b	;volatile
 27665  011E7A  0B1F               	andlw	31
 27666  011E7C  0A02               	xorlw	2
 27667  011E7E  A4D8               	btfss	status,2,c
 27668  011E80  0012               	return	
 27669                           
 27670                           ; BSR set to: 13
 27671  011E82  010D               	movlb	13	; () banked
 27672  011E84  5134               	movf	52,w,b	;volatile
 27673  011E86  0B0F               	andlw	15
 27674  011E88  0900               	iorlw	0
 27675  011E8A  B4D8               	btfsc	status,2,c
 27676  011E8C  0012               	return	
 27677                           
 27678                           ; BSR set to: 13
 27679  011E8E  010D               	movlb	13	; () banked
 27680  011E90  5134               	movf	52,w,b	;volatile
 27681  011E92  0B0F               	andlw	15
 27682  011E94  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27683  011E96  0E03               	movlw	3
 27684  011E98  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 27685  011E9A  0012               	return	
 27686                           
 27687                           ; BSR set to: 13
 27688  011E9C  0E20               	movlw	32
 27689  011E9E  1813               	xorwf	_USBDeviceState,w,c	;volatile
 27690  011EA0  A4D8               	btfss	status,2,c
 27691  011EA2  0012               	return	
 27692                           
 27693                           ; BSR set to: 13
 27694                           ;usb_device.c: 2818: {
 27695                           ;usb_device.c: 2821: inPipes[0].info.bits.busy = 1;
 27696  011EA4  0100               	movlb	0	; () banked
 27697  011EA6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27698                           
 27699                           ;usb_device.c: 2824: if(SetupPkt.EPDir == 0)
 27700  011EA8  010D               	movlb	13	; () banked
 27701  011EAA  BF34               	btfsc	52,7,b	;volatile
 27702  011EAC  D01B               	goto	i2l7325
 27703                           
 27704                           ; BSR set to: 13
 27705                           ;usb_device.c: 2825: {
 27706                           ;usb_device.c: 2826: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27707  011EAE  010D               	movlb	13	; () banked
 27708  011EB0  5134               	movf	52,w,b	;volatile
 27709  011EB2  0B0F               	andlw	15
 27710  011EB4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27711  011EB6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27712  011EB8  0D02               	mullw	2
 27713  011EBA  0E00               	movlw	low _pBDTEntryOut
 27714  011EBC  24F3               	addwf	prodl,w,c
 27715  011EBE  6ED9               	movwf	fsr2l,c
 27716  011EC0  0E01               	movlw	high _pBDTEntryOut
 27717  011EC2  20F4               	addwfc	prodh,w,c
 27718  011EC4  6EDA               	movwf	fsr2h,c
 27719  011EC6  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27720  011ECA  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27721                           
 27722                           ;usb_device.c: 2827: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27723  011ECE  010D               	movlb	13	; () banked
 27724  011ED0  5134               	movf	52,w,b	;volatile
 27725  011ED2  0B0F               	andlw	15
 27726  011ED4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27727  011ED6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27728  011ED8  0D01               	mullw	1
 27729  011EDA  0E04               	movlw	low _ep_data_out
 27730  011EDC  24F3               	addwf	prodl,w,c
 27731  011EDE  6ED9               	movwf	fsr2l,c
 27732  011EE0  0E00               	movlw	high _ep_data_out
 27733  011EE2  D01A               	goto	L14
 27734  011EE4                     i2l7325:
 27735                           
 27736                           ; BSR set to: 13
 27737                           ;usb_device.c: 2829: else
 27738                           ;usb_device.c: 2830: {
 27739                           ;usb_device.c: 2831: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27740  011EE4  010D               	movlb	13	; () banked
 27741  011EE6  5134               	movf	52,w,b	;volatile
 27742  011EE8  0B0F               	andlw	15
 27743  011EEA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27744  011EEC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27745  011EEE  0D02               	mullw	2
 27746  011EF0  0EF5               	movlw	low _pBDTEntryIn
 27747  011EF2  24F3               	addwf	prodl,w,c
 27748  011EF4  6ED9               	movwf	fsr2l,c
 27749  011EF6  0E00               	movlw	high _pBDTEntryIn
 27750  011EF8  20F4               	addwfc	prodh,w,c
 27751  011EFA  6EDA               	movwf	fsr2h,c
 27752  011EFC  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27753  011F00  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27754                           
 27755                           ;usb_device.c: 2832: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27756  011F04  010D               	movlb	13	; () banked
 27757  011F06  5134               	movf	52,w,b	;volatile
 27758  011F08  0B0F               	andlw	15
 27759  011F0A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27760  011F0C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27761  011F0E  0D01               	mullw	1
 27762  011F10  0E01               	movlw	low _ep_data_in
 27763  011F12  24F3               	addwf	prodl,w,c
 27764  011F14  6ED9               	movwf	fsr2l,c
 27765  011F16  0E00               	movlw	high _ep_data_in
 27766  011F18                     L14:
 27767  011F18  20F4               	addwfc	prodh,w,c
 27768  011F1A  6EDA               	movwf	fsr2h,c
 27769  011F1C  50DF               	movf	indf2,w,c
 27770  011F1E  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27771                           
 27772                           ; BSR set to: 13
 27773                           ;usb_device.c: 2833: }
 27774                           ;usb_device.c: 2839: if(current_ep_data.bits.ping_pong_state == 0)
 27775                           
 27776                           ; BSR set to: 13
 27777  011F20  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27778  011F22  D002               	goto	i2l7331
 27779                           
 27780                           ; BSR set to: 13
 27781                           ;usb_device.c: 2840: {
 27782                           ;usb_device.c: 2841: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27783  011F24  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27784                           
 27785                           ;usb_device.c: 2842: }
 27786  011F26  D001               	goto	i2l7333
 27787  011F28                     i2l7331:
 27788                           
 27789                           ; BSR set to: 13
 27790                           ;usb_device.c: 2843: else
 27791                           ;usb_device.c: 2844: {
 27792                           ;usb_device.c: 2845: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27793  011F28  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27794  011F2A                     i2l7333:
 27795                           
 27796                           ; BSR set to: 13
 27797                           ;usb_device.c: 2846: }
 27798                           ;usb_device.c: 2851: if(SetupPkt.EPDir == 0)
 27799  011F2A  010D               	movlb	13	; () banked
 27800  011F2C  BF34               	btfsc	52,7,b	;volatile
 27801  011F2E  D00B               	goto	i2l7337
 27802                           
 27803                           ; BSR set to: 13
 27804                           ;usb_device.c: 2852: {
 27805                           ;usb_device.c: 2853: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27806  011F30  010D               	movlb	13	; () banked
 27807  011F32  5134               	movf	52,w,b	;volatile
 27808  011F34  0B0F               	andlw	15
 27809  011F36  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27810  011F38  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27811  011F3A  0D02               	mullw	2
 27812  011F3C  0E00               	movlw	low _pBDTEntryOut
 27813  011F3E  24F3               	addwf	prodl,w,c
 27814  011F40  6ED9               	movwf	fsr2l,c
 27815  011F42  0E01               	movlw	high _pBDTEntryOut
 27816  011F44  D00A               	goto	L15
 27817  011F46                     i2l7337:
 27818                           
 27819                           ; BSR set to: 13
 27820                           ;usb_device.c: 2855: else
 27821                           ;usb_device.c: 2856: {
 27822                           ;usb_device.c: 2857: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27823  011F46  010D               	movlb	13	; () banked
 27824  011F48  5134               	movf	52,w,b	;volatile
 27825  011F4A  0B0F               	andlw	15
 27826  011F4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27827  011F4E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27828  011F50  0D02               	mullw	2
 27829  011F52  0EF5               	movlw	low _pBDTEntryIn
 27830  011F54  24F3               	addwf	prodl,w,c
 27831  011F56  6ED9               	movwf	fsr2l,c
 27832  011F58  0E00               	movlw	high _pBDTEntryIn
 27833  011F5A                     L15:
 27834  011F5A  20F4               	addwfc	prodh,w,c
 27835  011F5C  6EDA               	movwf	fsr2h,c
 27836  011F5E  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27837  011F62  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27838                           
 27839                           ; BSR set to: 13
 27840                           ;usb_device.c: 2858: }
 27841                           ;usb_device.c: 2861: if(SetupPkt.bRequest == 3)
 27842                           
 27843                           ; BSR set to: 13
 27844  011F66  0E03               	movlw	3
 27845  011F68  010D               	movlb	13	; () banked
 27846  011F6A  1931               	xorwf	49,w,b	;volatile
 27847  011F6C  A4D8               	btfss	status,2,c
 27848  011F6E  D02E               	goto	i2l7353
 27849                           
 27850                           ; BSR set to: 13
 27851                           ;usb_device.c: 2862: {
 27852                           ;usb_device.c: 2863: if(p->STAT.UOWN == 1)
 27853  011F70  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27854  011F74  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27855  011F78  AEDF               	btfss	indf2,7,c
 27856  011F7A  D01B               	goto	i2l7349
 27857                           
 27858                           ; BSR set to: 13
 27859                           ;usb_device.c: 2864: {
 27860                           ;usb_device.c: 2867: if(SetupPkt.EPDir == 0)
 27861  011F7C  010D               	movlb	13	; () banked
 27862  011F7E  BF34               	btfsc	52,7,b	;volatile
 27863  011F80  D00B               	goto	i2l7347
 27864                           
 27865                           ; BSR set to: 13
 27866                           ;usb_device.c: 2868: {
 27867                           ;usb_device.c: 2869: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27868  011F82  010D               	movlb	13	; () banked
 27869  011F84  5134               	movf	52,w,b	;volatile
 27870  011F86  0B0F               	andlw	15
 27871  011F88  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27872  011F8A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27873  011F8C  0D01               	mullw	1
 27874  011F8E  0E04               	movlw	low _ep_data_out
 27875  011F90  24F3               	addwf	prodl,w,c
 27876  011F92  6ED9               	movwf	fsr2l,c
 27877  011F94  0E00               	movlw	high _ep_data_out
 27878  011F96  D00A               	goto	L16
 27879  011F98                     i2l7347:
 27880                           
 27881                           ; BSR set to: 13
 27882                           ;usb_device.c: 2871: else
 27883                           ;usb_device.c: 2872: {
 27884                           ;usb_device.c: 2873: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27885  011F98  010D               	movlb	13	; () banked
 27886  011F9A  5134               	movf	52,w,b	;volatile
 27887  011F9C  0B0F               	andlw	15
 27888  011F9E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27889  011FA0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27890  011FA2  0D01               	mullw	1
 27891  011FA4  0E01               	movlw	low _ep_data_in
 27892  011FA6  24F3               	addwf	prodl,w,c
 27893  011FA8  6ED9               	movwf	fsr2l,c
 27894  011FAA  0E00               	movlw	high _ep_data_in
 27895  011FAC                     L16:
 27896  011FAC  20F4               	addwfc	prodh,w,c
 27897  011FAE  6EDA               	movwf	fsr2h,c
 27898  011FB0  82DF               	bsf	indf2,1,c
 27899  011FB2                     i2l7349:
 27900                           
 27901                           ; BSR set to: 13
 27902                           ;usb_device.c: 2874: }
 27903                           ;usb_device.c: 2875: }
 27904                           ;usb_device.c: 2878: p->STAT.Val |= 0x04;
 27905  011FB2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27906  011FB6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27907  011FBA  0E00               	movlw	0
 27908  011FBC  84DB               	bsf	plusw2,2,c
 27909                           
 27910                           ; BSR set to: 13
 27911                           ;usb_device.c: 2879: p->STAT.Val |= 0x80;
 27912  011FBE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27913  011FC2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27914  011FC6  0E00               	movlw	0
 27915  011FC8  8EDB               	bsf	plusw2,7,c
 27916                           
 27917                           ;usb_device.c: 2880: }
 27918  011FCA  0012               	return	
 27919  011FCC                     i2l7353:
 27920                           
 27921                           ; BSR set to: 13
 27922                           ;usb_device.c: 2881: else
 27923                           ;usb_device.c: 2882: {
 27924                           ;usb_device.c: 2886: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27925  011FCC  0E04               	movlw	4
 27926  011FCE  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27927                           
 27928                           ; BSR set to: 13
 27929                           ;usb_device.c: 2888: if(p->STAT.UOWN == 1)
 27930  011FD0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27931  011FD4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27932  011FD8  AEDF               	btfss	indf2,7,c
 27933  011FDA  D01B               	goto	i2l7363
 27934                           
 27935                           ; BSR set to: 13
 27936                           ;usb_device.c: 2889: {
 27937                           ;usb_device.c: 2892: p->STAT.Val &= (~0x80);
 27938  011FDC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27939  011FE0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27940  011FE4  0E7F               	movlw	127
 27941  011FE6  16DF               	andwf	indf2,f,c
 27942                           
 27943                           ; BSR set to: 13
 27944                           ;usb_device.c: 2893: p->STAT.Val |= 0x40;
 27945  011FE8  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27946  011FEC  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27947  011FF0  0E00               	movlw	0
 27948  011FF2  8CDB               	bsf	plusw2,6,c
 27949                           
 27950                           ; BSR set to: 13
 27951                           ;usb_device.c: 2894: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27952  011FF4  0E00               	movlw	0
 27953  011FF6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27954  011FF8  0E05               	movlw	5
 27955  011FFA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27956  011FFC  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27957  012000  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27958  012004  0E00               	movlw	0
 27959  012006  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27960  012008  0E02               	movlw	2
 27961  01200A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27962  01200C  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27963                           
 27964                           ;usb_device.c: 2895: }
 27965  012010  D006               	goto	i2l7365
 27966  012012                     i2l7363:
 27967                           
 27968                           ;usb_device.c: 2896: else
 27969                           ;usb_device.c: 2897: {
 27970                           ;usb_device.c: 2899: p->STAT.Val |= 0x40;
 27971  012012  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27972  012016  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27973  01201A  0E00               	movlw	0
 27974  01201C  8CDB               	bsf	plusw2,6,c
 27975  01201E                     i2l7365:
 27976                           
 27977                           ;usb_device.c: 2900: }
 27978                           ;usb_device.c: 2904: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27979  01201E  0E04               	movlw	4
 27980  012020  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27981                           
 27982                           ;usb_device.c: 2910: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27983  012022  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27984  012024  D006               	goto	i2l393
 27985  012026  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27986  01202A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27987  01202E  AEDF               	btfss	indf2,7,c
 27988  012030  D030               	goto	i2l7379
 27989  012032                     i2l393:
 27990                           
 27991                           ;usb_device.c: 2911: {
 27992                           ;usb_device.c: 2912: if(SetupPkt.EPDir == 0)
 27993  012032  010D               	movlb	13	; () banked
 27994  012034  BF34               	btfsc	52,7,b	;volatile
 27995  012036  D00B               	goto	i2l7373
 27996                           
 27997                           ; BSR set to: 13
 27998                           ;usb_device.c: 2913: {
 27999                           ;usb_device.c: 2914: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28000  012038  010D               	movlb	13	; () banked
 28001  01203A  5134               	movf	52,w,b	;volatile
 28002  01203C  0B0F               	andlw	15
 28003  01203E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28004  012040  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28005  012042  0D01               	mullw	1
 28006  012044  0E04               	movlw	low _ep_data_out
 28007  012046  24F3               	addwf	prodl,w,c
 28008  012048  6ED9               	movwf	fsr2l,c
 28009  01204A  0E00               	movlw	high _ep_data_out
 28010  01204C  D00A               	goto	L17
 28011  01204E                     i2l7373:
 28012                           
 28013                           ; BSR set to: 13
 28014                           ;usb_device.c: 2916: else
 28015                           ;usb_device.c: 2917: {
 28016                           ;usb_device.c: 2918: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28017  01204E  010D               	movlb	13	; () banked
 28018  012050  5134               	movf	52,w,b	;volatile
 28019  012052  0B0F               	andlw	15
 28020  012054  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28021  012056  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28022  012058  0D01               	mullw	1
 28023  01205A  0E01               	movlw	low _ep_data_in
 28024  01205C  24F3               	addwf	prodl,w,c
 28025  01205E  6ED9               	movwf	fsr2l,c
 28026  012060  0E00               	movlw	high _ep_data_in
 28027  012062                     L17:
 28028  012062  20F4               	addwfc	prodh,w,c
 28029  012064  6EDA               	movwf	fsr2h,c
 28030  012066  92DF               	bcf	indf2,1,c
 28031                           
 28032                           ; BSR set to: 13
 28033                           ;usb_device.c: 2919: }
 28034                           ;usb_device.c: 2921: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28035                           
 28036                           ; BSR set to: 13
 28037  012068  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28038  01206C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28039  012070  0E3B               	movlw	59
 28040  012072  16DF               	andwf	indf2,f,c
 28041                           
 28042                           ; BSR set to: 13
 28043                           ;usb_device.c: 2924: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28044  012074  0E00               	movlw	0
 28045  012076  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28046  012078  0E05               	movlw	5
 28047  01207A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28048  01207C  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28049  012080  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28050  012084  0E00               	movlw	0
 28051  012086  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28052  012088  0E02               	movlw	2
 28053  01208A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28054  01208C  EC2B  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28055                           
 28056                           ;usb_device.c: 2925: }
 28057  012090  D006               	goto	i2l7381
 28058  012092                     i2l7379:
 28059                           
 28060                           ;usb_device.c: 2926: else
 28061                           ;usb_device.c: 2927: {
 28062                           ;usb_device.c: 2929: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28063  012092  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28064  012096  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28065  01209A  0E3B               	movlw	59
 28066  01209C  16DF               	andwf	indf2,f,c
 28067  01209E                     i2l7381:
 28068                           
 28069                           ;usb_device.c: 2930: }
 28070                           ;usb_device.c: 2977: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 28071  01209E  010D               	movlb	13	; () banked
 28072  0120A0  5134               	movf	52,w,b	;volatile
 28073  0120A2  0B0F               	andlw	15
 28074  0120A4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28075  0120A6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28076  0120A8  0D01               	mullw	1
 28077  0120AA  0E26               	movlw	38
 28078  0120AC  24F3               	addwf	prodl,w,c
 28079  0120AE  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 28080  0120B0  0E0F               	movlw	15
 28081  0120B2  20F4               	addwfc	prodh,w,c
 28082  0120B4  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 28083                           
 28084                           ; BSR set to: 13
 28085                           ;usb_device.c: 2981: *pUEP &= ~0x0001;
 28086  0120B6  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 28087  0120BA  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 28088  0120BE  0EFE               	movlw	254
 28089  0120C0  16DF               	andwf	indf2,f,c
 28090                           
 28091                           ; BSR set to: 13
 28092  0120C2  0012               	return	
 28093  0120C4                     __end_of_USBStdFeatureReqHandler:
 28094                           	opt stack 0
 28095                           pclatu	equ	0xFFB
 28096                           pclath	equ	0xFFA
 28097                           tblptru	equ	0xFF8
 28098                           tblptrh	equ	0xFF7
 28099                           tblptrl	equ	0xFF6
 28100                           tablat	equ	0xFF5
 28101                           prodh	equ	0xFF4
 28102                           prodl	equ	0xFF3
 28103                           intcon	equ	0xFF2
 28104                           intcon2	equ	0xFF1
 28105                           indf0	equ	0xFEF
 28106                           postinc0	equ	0xFEE
 28107                           fsr0h	equ	0xFEA
 28108                           fsr0l	equ	0xFE9
 28109                           wreg	equ	0xFE8
 28110                           indf1	equ	0xFE7
 28111                           postinc1	equ	0xFE6
 28112                           postdec1	equ	0xFE5
 28113                           fsr1h	equ	0xFE2
 28114                           fsr1l	equ	0xFE1
 28115                           indf2	equ	0xFDF
 28116                           postinc2	equ	0xFDE
 28117                           postdec2	equ	0xFDD
 28118                           plusw2	equ	0xFDB
 28119                           fsr2h	equ	0xFDA
 28120                           fsr2l	equ	0xFD9
 28121                           status	equ	0xFD8
 28122                           
 28123 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 28124 ;; Defined at:
 28125 ;;		line 119 in file "../My_library/My_usb_cdc.c"
 28126 ;; Parameters:    Size  Location     Type
 28127 ;;  event           2   12[COMRAM] enum E70
 28128 ;;  pdata           2   14[COMRAM] PTR void 
 28129 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 28130 ;;  size            2   16[COMRAM] unsigned int 
 28131 ;; Auto vars:     Size  Location     Type
 28132 ;;		None
 28133 ;; Return value:  Size  Location     Type
 28134 ;;                  1    wreg      unsigned char 
 28135 ;; Registers used:
 28136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28137 ;; Tracked objects:
 28138 ;;		On entry : 0/0
 28139 ;;		On exit  : 0/0
 28140 ;;		Unchanged: 0/0
 28141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28142 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28145 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28146 ;;Total ram usage:        8 bytes
 28147 ;; Hardware stack levels used:    1
 28148 ;; Hardware stack levels required when called:    4
 28149 ;; This function calls:
 28150 ;;		_APP_DeviceCDCBasicDemoInitialize
 28151 ;;		_USBCheckCDCRequest
 28152 ;; This function is called by:
 28153 ;;		_USBDeviceTasks
 28154 ;;		_USBStdSetCfgHandler
 28155 ;;		_USBSuspend
 28156 ;;		_USBWakeFromSuspend
 28157 ;;		_USBCtrlTrfSetupHandler
 28158 ;;		_USBCheckStdRequest
 28159 ;;		_USBStdFeatureReqHandler
 28160 ;; This function uses a non-reentrant model
 28161 ;;
 28162                           
 28163                           	psect	text120
 28164  016656                     __ptext120:
 28165                           	opt stack 0
 28166  016656                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28167                           	opt stack 14
 28168                           
 28169                           ;My_usb_cdc.c: 120: switch ((int) event) {
 28170                           
 28171                           ; BSR set to: 13
 28172                           ;incstack = 0
 28173  016656  D006               	goto	i2l6993
 28174  016658                     i2l6987:
 28175                           
 28176                           ;My_usb_cdc.c: 143: APP_DeviceCDCBasicDemoInitialize();
 28177  016658  EC72  F0B6         	call	_APP_DeviceCDCBasicDemoInitialize	;wreg free
 28178                           
 28179                           ;My_usb_cdc.c: 147: break;
 28180                           
 28181                           ;My_usb_cdc.c: 146: case EVENT_SET_DESCRIPTOR:
 28182                           
 28183                           ;My_usb_cdc.c: 144: break;
 28184  01665C  0012               	return	
 28185  01665E                     i2l6989:
 28186                           
 28187                           ;My_usb_cdc.c: 152: USBCheckCDCRequest();
 28188  01665E  ECC4  F0A5         	call	_USBCheckCDCRequest	;wreg free
 28189                           
 28190                           ;My_usb_cdc.c: 163: }
 28191                           
 28192                           ;My_usb_cdc.c: 162: break;
 28193                           
 28194                           ;My_usb_cdc.c: 161: default:
 28195                           
 28196                           ;My_usb_cdc.c: 159: break;
 28197                           
 28198                           ;My_usb_cdc.c: 158: case EVENT_TRANSFER_TERMINATED:
 28199                           
 28200                           ;My_usb_cdc.c: 156: break;
 28201                           
 28202                           ;My_usb_cdc.c: 155: case EVENT_BUS_ERROR:
 28203                           
 28204                           ;My_usb_cdc.c: 153: break;
 28205  016662  0012               	return	
 28206  016664                     i2l6993:
 28207  016664  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28208  016668  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28209                           
 28210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 28211                           ; Switch size 1, requested type "space"
 28212                           ; Number of cases is 2, Range of values is 0 to 127
 28213                           ; switch strategies available:
 28214                           ; Name         Instructions Cycles
 28215                           ; simple_byte            7     4 (average)
 28216                           ;	Chosen strategy is simple_byte
 28217  01666C  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28218  01666E  0A00               	xorlw	0	; case 0
 28219  016670  B4D8               	btfsc	status,2,c
 28220  016672  D004               	goto	i2l13249
 28221  016674  0A7F               	xorlw	127	; case 127
 28222  016676  A4D8               	btfss	status,2,c
 28223  016678  0012               	return	
 28224  01667A  D018               	goto	i2l13251
 28225  01667C                     i2l13249:
 28226                           
 28227                           ; Switch size 1, requested type "space"
 28228                           ; Number of cases is 8, Range of values is 1 to 117
 28229                           ; switch strategies available:
 28230                           ; Name         Instructions Cycles
 28231                           ; simple_byte           25    13 (average)
 28232                           ;	Chosen strategy is simple_byte
 28233  01667C  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28234  01667E  0A01               	xorlw	1	; case 1
 28235  016680  B4D8               	btfsc	status,2,c
 28236  016682  D7EA               	goto	i2l6987
 28237  016684  0A03               	xorlw	3	; case 2
 28238  016686  B4D8               	btfsc	status,2,c
 28239  016688  0012               	return	
 28240  01668A  0A01               	xorlw	1	; case 3
 28241  01668C  B4D8               	btfsc	status,2,c
 28242  01668E  D7E7               	goto	i2l6989
 28243  016690  0A06               	xorlw	6	; case 5
 28244  016692  B4D8               	btfsc	status,2,c
 28245  016694  0012               	return	
 28246  016696  0A77               	xorlw	119	; case 114
 28247  016698  B4D8               	btfsc	status,2,c
 28248  01669A  0012               	return	
 28249  01669C  0A01               	xorlw	1	; case 115
 28250  01669E  B4D8               	btfsc	status,2,c
 28251  0166A0  0012               	return	
 28252  0166A2  0A07               	xorlw	7	; case 116
 28253  0166A4  B4D8               	btfsc	status,2,c
 28254  0166A6  0012               	return	
 28255  0166A8  0A01               	xorlw	1	; case 117
 28256  0166AA  0012               	return	
 28257  0166AC                     i2l13251:
 28258                           
 28259                           ; Switch size 1, requested type "space"
 28260                           ; Number of cases is 1, Range of values is 255 to 255
 28261                           ; switch strategies available:
 28262                           ; Name         Instructions Cycles
 28263                           ; simple_byte            4     3 (average)
 28264                           ;	Chosen strategy is simple_byte
 28265  0166AC  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28266  0166AE  0AFF               	xorlw	255	; case 255
 28267  0166B0  0012               	return	
 28268  0166B2                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28269                           	opt stack 0
 28270                           pclatu	equ	0xFFB
 28271                           pclath	equ	0xFFA
 28272                           tblptru	equ	0xFF8
 28273                           tblptrh	equ	0xFF7
 28274                           tblptrl	equ	0xFF6
 28275                           tablat	equ	0xFF5
 28276                           prodh	equ	0xFF4
 28277                           prodl	equ	0xFF3
 28278                           intcon	equ	0xFF2
 28279                           intcon2	equ	0xFF1
 28280                           indf0	equ	0xFEF
 28281                           postinc0	equ	0xFEE
 28282                           fsr0h	equ	0xFEA
 28283                           fsr0l	equ	0xFE9
 28284                           wreg	equ	0xFE8
 28285                           indf1	equ	0xFE7
 28286                           postinc1	equ	0xFE6
 28287                           postdec1	equ	0xFE5
 28288                           fsr1h	equ	0xFE2
 28289                           fsr1l	equ	0xFE1
 28290                           indf2	equ	0xFDF
 28291                           postinc2	equ	0xFDE
 28292                           postdec2	equ	0xFDD
 28293                           plusw2	equ	0xFDB
 28294                           fsr2h	equ	0xFDA
 28295                           fsr2l	equ	0xFD9
 28296                           status	equ	0xFD8
 28297                           
 28298 ;; *************** function _USBCheckCDCRequest *****************
 28299 ;; Defined at:
 28300 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 28301 ;; Parameters:    Size  Location     Type
 28302 ;;		None
 28303 ;; Auto vars:     Size  Location     Type
 28304 ;;		None
 28305 ;; Return value:  Size  Location     Type
 28306 ;;		None               void
 28307 ;; Registers used:
 28308 ;;		wreg, status,2, status,0
 28309 ;; Tracked objects:
 28310 ;;		On entry : 0/0
 28311 ;;		On exit  : 0/0
 28312 ;;		Unchanged: 0/0
 28313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28318 ;;Total ram usage:        0 bytes
 28319 ;; Hardware stack levels used:    1
 28320 ;; This function calls:
 28321 ;;		Nothing
 28322 ;; This function is called by:
 28323 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28324 ;; This function uses a non-reentrant model
 28325 ;;
 28326                           
 28327                           	psect	text121
 28328  014B88                     __ptext121:
 28329                           	opt stack 0
 28330  014B88                     _USBCheckCDCRequest:
 28331                           	opt stack 17
 28332                           
 28333                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 28334                           
 28335                           ;incstack = 0
 28336  014B88  010D               	movlb	13	; () banked
 28337  014B8A  5130               	movf	48,w,b	;volatile
 28338  014B8C  0B1F               	andlw	31
 28339  014B8E  06E8               	decf	wreg,f,c
 28340  014B90  A4D8               	btfss	status,2,c
 28341  014B92  0012               	return	
 28342                           
 28343                           ; BSR set to: 13
 28344                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 28345                           
 28346                           ; BSR set to: 13
 28347                           
 28348                           ; BSR set to: 13
 28349  014B94  010D               	movlb	13	; () banked
 28350  014B96  3930               	swapf	48,w,b	;volatile
 28351  014B98  32E8               	rrcf	wreg,f,c
 28352  014B9A  0B03               	andlw	3
 28353  014B9C  06E8               	decf	wreg,f,c
 28354  014B9E  A4D8               	btfss	status,2,c
 28355  014BA0  0012               	return	
 28356                           
 28357                           ; BSR set to: 13
 28358                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 28359                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 28360                           
 28361                           ; BSR set to: 13
 28362                           
 28363                           ; BSR set to: 13
 28364  014BA2  010D               	movlb	13	; () banked
 28365  014BA4  5134               	movf	52,w,b	;volatile
 28366  014BA6  B4D8               	btfsc	status,2,c
 28367  014BA8  D048               	goto	i2l6869
 28368                           
 28369                           ; BSR set to: 13
 28370  014BAA  010D               	movlb	13	; () banked
 28371  014BAC  0534               	decf	52,w,b	;volatile
 28372  014BAE  A4D8               	btfss	status,2,c
 28373  014BB0  0012               	return	
 28374  014BB2  D043               	goto	i2l6869
 28375  014BB4                     i2l6845:
 28376                           
 28377                           ; BSR set to: 13
 28378                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28379  014BB4  0EA6               	movlw	low _dummy_encapsulated_cmd_response
 28380  014BB6  0100               	movlb	0	; () banked
 28381  014BB8  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28382  014BBA  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28383  014BBC  0100               	movlb	0	; () banked
 28384  014BBE  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28385                           
 28386                           ; BSR set to: 0
 28387                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 28388  014BC0  0E00               	movlw	0
 28389  014BC2  0100               	movlb	0	; () banked
 28390  014BC4  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28391  014BC6  0E08               	movlw	8
 28392  014BC8  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28393                           
 28394                           ; BSR set to: 0
 28395                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28396  014BCA  0100               	movlb	0	; () banked
 28397  014BCC  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28398                           
 28399                           ; BSR set to: 0
 28400                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 28401  014BCE  0100               	movlb	0	; () banked
 28402  014BD0  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28403                           
 28404                           ;usb_device_cdc.c: 232: break;
 28405  014BD2  0012               	return	
 28406  014BD4                     i2l6853:
 28407                           
 28408                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28409  014BD4  0EA6               	movlw	low _dummy_encapsulated_cmd_response
 28410  014BD6  0100               	movlb	0	; () banked
 28411  014BD8  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28412  014BDA  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28413  014BDC  0100               	movlb	0	; () banked
 28414  014BDE  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28415                           
 28416                           ; BSR set to: 0
 28417                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 28418  014BE0  0100               	movlb	0	; () banked
 28419  014BE2  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28420                           
 28421                           ;usb_device_cdc.c: 237: break;
 28422  014BE4  0012               	return	
 28423  014BE6                     i2l450:
 28424                           
 28425                           ; BSR set to: 13
 28426                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 28427  014BE6  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 28428  014BEA  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 28429                           
 28430                           ; BSR set to: 13
 28431                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 28432  014BEE  0E89               	movlw	low _line_coding
 28433  014BF0  0100               	movlb	0	; () banked
 28434  014BF2  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 28435  014BF4  0E01               	movlw	high _line_coding
 28436  014BF6  0100               	movlb	0	; () banked
 28437  014BF8  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 28438                           
 28439                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 28440  014BFA  0E00               	movlw	0
 28441  014BFC  0100               	movlb	0	; () banked
 28442  014BFE  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 28443  014C00  0E00               	movlw	0
 28444  014C02  0100               	movlb	0	; () banked
 28445  014C04  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 28446  014C06  0E00               	movlw	0
 28447  014C08  0100               	movlb	0	; () banked
 28448  014C0A  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 28449                           
 28450                           ; BSR set to: 0
 28451                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 28452  014C0C  0100               	movlb	0	; () banked
 28453  014C0E  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 28454                           
 28455                           ;usb_device_cdc.c: 246: break;
 28456  014C10  0012               	return	
 28457  014C12                     i2l6861:
 28458                           
 28459                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 28460  014C12  0E89               	movlw	low _line_coding
 28461  014C14  0100               	movlb	0	; () banked
 28462  014C16  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28463  014C18  0E01               	movlw	high _line_coding
 28464  014C1A  0100               	movlb	0	; () banked
 28465  014C1C  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28466                           
 28467                           ; BSR set to: 0
 28468  014C1E  0E00               	movlw	0
 28469  014C20  0100               	movlb	0	; () banked
 28470  014C22  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28471  014C24  0E07               	movlw	7
 28472  014C26  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28473                           
 28474                           ; BSR set to: 0
 28475  014C28  0EC1               	movlw	193
 28476  014C2A  0100               	movlb	0	; () banked
 28477  014C2C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28478                           
 28479                           ;usb_device_cdc.c: 253: break;
 28480  014C2E  0012               	return	
 28481  014C30                     i2l452:
 28482                           
 28483                           ; BSR set to: 13
 28484                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 28485  014C30  CD32 F11D          	movff	3378,_control_signal_bitmap	;volatile
 28486                           
 28487                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 28488  014C34  0100               	movlb	0	; () banked
 28489  014C36  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28490                           
 28491                           ; BSR set to: 0
 28492                           ;usb_device_cdc.c: 315: }
 28493                           
 28494                           ; BSR set to: 0
 28495                           ;usb_device_cdc.c: 314: break;
 28496                           
 28497                           ;usb_device_cdc.c: 313: default:
 28498                           
 28499                           ;usb_device_cdc.c: 289: break;
 28500  014C38  0012               	return	
 28501  014C3A                     i2l6869:
 28502  014C3A  010D               	movlb	13	; () banked
 28503  014C3C  5131               	movf	49,w,b	;volatile
 28504                           
 28505                           ; Switch size 1, requested type "space"
 28506                           ; Number of cases is 5, Range of values is 0 to 34
 28507                           ; switch strategies available:
 28508                           ; Name         Instructions Cycles
 28509                           ; simple_byte           16     9 (average)
 28510                           ;	Chosen strategy is simple_byte
 28511  014C3E  0A00               	xorlw	0	; case 0
 28512  014C40  B4D8               	btfsc	status,2,c
 28513  014C42  D7B8               	goto	i2l6845
 28514  014C44  0A01               	xorlw	1	; case 1
 28515  014C46  B4D8               	btfsc	status,2,c
 28516  014C48  D7C5               	goto	i2l6853
 28517  014C4A  0A21               	xorlw	33	; case 32
 28518  014C4C  B4D8               	btfsc	status,2,c
 28519  014C4E  D7CB               	goto	i2l450
 28520  014C50  0A01               	xorlw	1	; case 33
 28521  014C52  B4D8               	btfsc	status,2,c
 28522  014C54  D7DE               	goto	i2l6861
 28523  014C56  0A03               	xorlw	3	; case 34
 28524  014C58  A4D8               	btfss	status,2,c
 28525  014C5A  0012               	return	
 28526  014C5C  D7E9               	goto	i2l452
 28527  014C5E                     __end_of_USBCheckCDCRequest:
 28528                           	opt stack 0
 28529                           pclatu	equ	0xFFB
 28530                           pclath	equ	0xFFA
 28531                           tblptru	equ	0xFF8
 28532                           tblptrh	equ	0xFF7
 28533                           tblptrl	equ	0xFF6
 28534                           tablat	equ	0xFF5
 28535                           prodh	equ	0xFF4
 28536                           prodl	equ	0xFF3
 28537                           intcon	equ	0xFF2
 28538                           intcon2	equ	0xFF1
 28539                           indf0	equ	0xFEF
 28540                           postinc0	equ	0xFEE
 28541                           fsr0h	equ	0xFEA
 28542                           fsr0l	equ	0xFE9
 28543                           wreg	equ	0xFE8
 28544                           indf1	equ	0xFE7
 28545                           postinc1	equ	0xFE6
 28546                           postdec1	equ	0xFE5
 28547                           fsr1h	equ	0xFE2
 28548                           fsr1l	equ	0xFE1
 28549                           indf2	equ	0xFDF
 28550                           postinc2	equ	0xFDE
 28551                           postdec2	equ	0xFDD
 28552                           plusw2	equ	0xFDB
 28553                           fsr2h	equ	0xFDA
 28554                           fsr2l	equ	0xFD9
 28555                           status	equ	0xFD8
 28556                           
 28557 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 28558 ;; Defined at:
 28559 ;;		line 110 in file "../My_library/My_usb_cdc.c"
 28560 ;; Parameters:    Size  Location     Type
 28561 ;;		None
 28562 ;; Auto vars:     Size  Location     Type
 28563 ;;		None
 28564 ;; Return value:  Size  Location     Type
 28565 ;;		None               void
 28566 ;; Registers used:
 28567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28568 ;; Tracked objects:
 28569 ;;		On entry : 0/0
 28570 ;;		On exit  : 0/0
 28571 ;;		Unchanged: 0/0
 28572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28577 ;;Total ram usage:        0 bytes
 28578 ;; Hardware stack levels used:    1
 28579 ;; Hardware stack levels required when called:    3
 28580 ;; This function calls:
 28581 ;;		_CDCInitEP
 28582 ;; This function is called by:
 28583 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28584 ;; This function uses a non-reentrant model
 28585 ;;
 28586                           
 28587                           	psect	text122
 28588  016CE4                     __ptext122:
 28589                           	opt stack 0
 28590  016CE4                     _APP_DeviceCDCBasicDemoInitialize:
 28591                           	opt stack 14
 28592                           
 28593                           ;My_usb_cdc.c: 111: CDCInitEP();
 28594                           
 28595                           ;incstack = 0
 28596  016CE4  EC37  F0B1         	call	_CDCInitEP	;wreg free
 28597                           
 28598                           ;My_usb_cdc.c: 113: line_coding.bCharFormat = 0;
 28599  016CE8  0E00               	movlw	0
 28600  016CEA  0101               	movlb	1	; () banked
 28601  016CEC  6F8D               	movwf	(_line_coding+4)& (0+255),b
 28602                           
 28603                           ; BSR set to: 1
 28604                           ;My_usb_cdc.c: 114: line_coding.bDataBits = 8;
 28605  016CEE  0E08               	movlw	8
 28606  016CF0  0101               	movlb	1	; () banked
 28607  016CF2  6F8F               	movwf	(_line_coding+6)& (0+255),b
 28608                           
 28609                           ; BSR set to: 1
 28610                           ;My_usb_cdc.c: 115: line_coding.bParityType = 0;
 28611  016CF4  0E00               	movlw	0
 28612  016CF6  0101               	movlb	1	; () banked
 28613  016CF8  6F8E               	movwf	(_line_coding+5)& (0+255),b
 28614                           
 28615                           ; BSR set to: 1
 28616                           ;My_usb_cdc.c: 116: line_coding.dwDTERate = 115200;
 28617  016CFA  0E00               	movlw	0
 28618  016CFC  0101               	movlb	1	; () banked
 28619  016CFE  6F89               	movwf	_line_coding& (0+255),b
 28620  016D00  0EC2               	movlw	194
 28621  016D02  6F8A               	movwf	(_line_coding+1)& (0+255),b
 28622  016D04  0E01               	movlw	1
 28623  016D06  6F8B               	movwf	(_line_coding+2)& (0+255),b
 28624  016D08  0E00               	movlw	0
 28625  016D0A  6F8C               	movwf	(_line_coding+3)& (0+255),b
 28626                           
 28627                           ; BSR set to: 1
 28628  016D0C  0012               	return		;funcret
 28629  016D0E                     __end_of_APP_DeviceCDCBasicDemoInitialize:
 28630                           	opt stack 0
 28631                           pclatu	equ	0xFFB
 28632                           pclath	equ	0xFFA
 28633                           tblptru	equ	0xFF8
 28634                           tblptrh	equ	0xFF7
 28635                           tblptrl	equ	0xFF6
 28636                           tablat	equ	0xFF5
 28637                           prodh	equ	0xFF4
 28638                           prodl	equ	0xFF3
 28639                           intcon	equ	0xFF2
 28640                           intcon2	equ	0xFF1
 28641                           indf0	equ	0xFEF
 28642                           postinc0	equ	0xFEE
 28643                           fsr0h	equ	0xFEA
 28644                           fsr0l	equ	0xFE9
 28645                           wreg	equ	0xFE8
 28646                           indf1	equ	0xFE7
 28647                           postinc1	equ	0xFE6
 28648                           postdec1	equ	0xFE5
 28649                           fsr1h	equ	0xFE2
 28650                           fsr1l	equ	0xFE1
 28651                           indf2	equ	0xFDF
 28652                           postinc2	equ	0xFDE
 28653                           postdec2	equ	0xFDD
 28654                           plusw2	equ	0xFDB
 28655                           fsr2h	equ	0xFDA
 28656                           fsr2l	equ	0xFD9
 28657                           status	equ	0xFD8
 28658                           
 28659 ;; *************** function _CDCInitEP *****************
 28660 ;; Defined at:
 28661 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 28662 ;; Parameters:    Size  Location     Type
 28663 ;;		None
 28664 ;; Auto vars:     Size  Location     Type
 28665 ;;		None
 28666 ;; Return value:  Size  Location     Type
 28667 ;;		None               void
 28668 ;; Registers used:
 28669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28670 ;; Tracked objects:
 28671 ;;		On entry : 0/0
 28672 ;;		On exit  : 0/0
 28673 ;;		Unchanged: 0/0
 28674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28679 ;;Total ram usage:        0 bytes
 28680 ;; Hardware stack levels used:    1
 28681 ;; Hardware stack levels required when called:    2
 28682 ;; This function calls:
 28683 ;;		_USBEnableEndpoint
 28684 ;;		i2_USBTransferOnePacket
 28685 ;; This function is called by:
 28686 ;;		_APP_DeviceCDCBasicDemoInitialize
 28687 ;; This function uses a non-reentrant model
 28688 ;;
 28689                           
 28690                           	psect	text123
 28691  01626E                     __ptext123:
 28692                           	opt stack 0
 28693  01626E                     _CDCInitEP:
 28694                           	opt stack 14
 28695                           
 28696                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 28697                           
 28698                           ; BSR set to: 1
 28699                           ;incstack = 0
 28700  01626E  0E00               	movlw	0
 28701  016270  0101               	movlb	1	; () banked
 28702  016272  6F89               	movwf	_line_coding& (0+255),b
 28703  016274  0E4B               	movlw	75
 28704  016276  6F8A               	movwf	(_line_coding+1)& (0+255),b
 28705  016278  0E00               	movlw	0
 28706  01627A  6F8B               	movwf	(_line_coding+2)& (0+255),b
 28707  01627C  0E00               	movlw	0
 28708  01627E  6F8C               	movwf	(_line_coding+3)& (0+255),b
 28709                           
 28710                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 28711  016280  0E00               	movlw	0
 28712  016282  0101               	movlb	1	; () banked
 28713  016284  6F8D               	movwf	(_line_coding+4)& (0+255),b
 28714                           
 28715                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 28716  016286  0E00               	movlw	0
 28717  016288  0101               	movlb	1	; () banked
 28718  01628A  6F8E               	movwf	(_line_coding+5)& (0+255),b
 28719                           
 28720                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 28721  01628C  0E08               	movlw	8
 28722  01628E  0101               	movlb	1	; () banked
 28723  016290  6F8F               	movwf	(_line_coding+6)& (0+255),b
 28724                           
 28725                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 28726  016292  0E00               	movlw	0
 28727  016294  6E18               	movwf	_cdc_rx_len,c
 28728                           
 28729                           ; BSR set to: 1
 28730                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 28731  016296  0E1A               	movlw	26
 28732  016298  6E35               	movwf	USBEnableEndpoint@options,c
 28733  01629A  0E01               	movlw	1
 28734  01629C  ECE2  F0B4         	call	_USBEnableEndpoint
 28735                           
 28736                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28737  0162A0  0E1E               	movlw	30
 28738  0162A2  6E35               	movwf	USBEnableEndpoint@options,c
 28739  0162A4  0E02               	movlw	2
 28740  0162A6  ECE2  F0B4         	call	_USBEnableEndpoint
 28741                           
 28742                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28743  0162AA  0E00               	movlw	0
 28744  0162AC  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 28745  0162AE  0E00               	movlw	low _cdc_data_rx
 28746  0162B0  6E2E               	movwf	i2USBTransferOnePacket@data,c
 28747  0162B2  0E03               	movlw	high _cdc_data_rx
 28748  0162B4  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 28749  0162B6  0E40               	movlw	64
 28750  0162B8  6E30               	movwf	i2USBTransferOnePacket@len,c
 28751  0162BA  0E02               	movlw	2
 28752  0162BC  EC6A  F0AC         	call	i2_USBTransferOnePacket
 28753  0162C0  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28754  0162C4  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28755                           
 28756                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 28757  0162C8  0E00               	movlw	0
 28758  0162CA  0101               	movlb	1	; () banked
 28759  0162CC  6F0E               	movwf	_CDCDataInHandle& (0+255),b
 28760  0162CE  0E00               	movlw	0
 28761  0162D0  0101               	movlb	1	; () banked
 28762  0162D2  6F0F               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28763                           
 28764                           ; BSR set to: 1
 28765                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 28766  0162D4  0E00               	movlw	0
 28767  0162D6  6E19               	movwf	_cdc_trf_state,c
 28768                           
 28769                           ; BSR set to: 1
 28770  0162D8  0012               	return		;funcret
 28771  0162DA                     __end_of_CDCInitEP:
 28772                           	opt stack 0
 28773                           pclatu	equ	0xFFB
 28774                           pclath	equ	0xFFA
 28775                           tblptru	equ	0xFF8
 28776                           tblptrh	equ	0xFF7
 28777                           tblptrl	equ	0xFF6
 28778                           tablat	equ	0xFF5
 28779                           prodh	equ	0xFF4
 28780                           prodl	equ	0xFF3
 28781                           intcon	equ	0xFF2
 28782                           intcon2	equ	0xFF1
 28783                           indf0	equ	0xFEF
 28784                           postinc0	equ	0xFEE
 28785                           fsr0h	equ	0xFEA
 28786                           fsr0l	equ	0xFE9
 28787                           wreg	equ	0xFE8
 28788                           indf1	equ	0xFE7
 28789                           postinc1	equ	0xFE6
 28790                           postdec1	equ	0xFE5
 28791                           fsr1h	equ	0xFE2
 28792                           fsr1l	equ	0xFE1
 28793                           indf2	equ	0xFDF
 28794                           postinc2	equ	0xFDE
 28795                           postdec2	equ	0xFDD
 28796                           plusw2	equ	0xFDB
 28797                           fsr2h	equ	0xFDA
 28798                           fsr2l	equ	0xFD9
 28799                           status	equ	0xFD8
 28800                           
 28801 ;; *************** function i2_USBTransferOnePacket *****************
 28802 ;; Defined at:
 28803 ;;		line 996 in file "../My_library/usb/usb_device.c"
 28804 ;; Parameters:    Size  Location     Type
 28805 ;;  ep              1    wreg     unsigned char 
 28806 ;;  dir             1    0[COMRAM] unsigned char 
 28807 ;;  data            2    1[COMRAM] PTR unsigned char 
 28808 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28809 ;;  len             1    3[COMRAM] unsigned char 
 28810 ;; Auto vars:     Size  Location     Type
 28811 ;;  ep              1    4[COMRAM] unsigned char 
 28812 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28813 ;;		 -> NULL(0), BDT(48), 
 28814 ;; Return value:  Size  Location     Type
 28815 ;;                  2    0[COMRAM] PTR void 
 28816 ;; Registers used:
 28817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28818 ;; Tracked objects:
 28819 ;;		On entry : 0/0
 28820 ;;		On exit  : 0/0
 28821 ;;		Unchanged: 0/0
 28822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28824 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28826 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28827 ;;Total ram usage:        7 bytes
 28828 ;; Hardware stack levels used:    1
 28829 ;; This function calls:
 28830 ;;		Nothing
 28831 ;; This function is called by:
 28832 ;;		_CDCInitEP
 28833 ;; This function uses a non-reentrant model
 28834 ;;
 28835                           
 28836                           	psect	text124
 28837  0158D4                     __ptext124:
 28838                           	opt stack 0
 28839  0158D4                     i2_USBTransferOnePacket:
 28840                           	opt stack 15
 28841                           
 28842                           ; BSR set to: 1
 28843                           ;incstack = 0
 28844                           ;i2USBTransferOnePacket@ep stored from wreg
 28845  0158D4  6E31               	movwf	i2USBTransferOnePacket@ep,c
 28846                           
 28847                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 28848                           ;usb_device.c: 1001: if(dir != 0)
 28849  0158D6  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28850  0158D8  B4D8               	btfsc	status,2,c
 28851  0158DA  D007               	goto	i2l6757
 28852                           
 28853                           ;usb_device.c: 1002: {
 28854                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 28855  0158DC  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28856  0158DE  0D02               	mullw	2
 28857  0158E0  0EF5               	movlw	low _pBDTEntryIn
 28858  0158E2  24F3               	addwf	prodl,w,c
 28859  0158E4  6ED9               	movwf	fsr2l,c
 28860  0158E6  0E00               	movlw	high _pBDTEntryIn
 28861  0158E8  D006               	goto	L18
 28862  0158EA                     i2l6757:
 28863                           
 28864                           ;usb_device.c: 1006: else
 28865                           ;usb_device.c: 1007: {
 28866                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 28867  0158EA  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28868  0158EC  0D02               	mullw	2
 28869  0158EE  0E00               	movlw	low _pBDTEntryOut
 28870  0158F0  24F3               	addwf	prodl,w,c
 28871  0158F2  6ED9               	movwf	fsr2l,c
 28872  0158F4  0E01               	movlw	high _pBDTEntryOut
 28873  0158F6                     L18:
 28874  0158F6  20F4               	addwfc	prodh,w,c
 28875  0158F8  6EDA               	movwf	fsr2h,c
 28876  0158FA  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 28877  0158FE  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28878                           
 28879                           ;usb_device.c: 1010: }
 28880                           ;usb_device.c: 1014: if(handle == 0)
 28881  015902  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28882  015904  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28883  015906  A4D8               	btfss	status,2,c
 28884  015908  D005               	goto	i2l6765
 28885                           
 28886                           ;usb_device.c: 1015: {
 28887                           ;usb_device.c: 1016: return 0;
 28888  01590A  0E00               	movlw	0
 28889  01590C  6E2D               	movwf	?i2_USBTransferOnePacket,c
 28890  01590E  0E00               	movlw	0
 28891  015910  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 28892  015912  0012               	return	
 28893  015914                     i2l6765:
 28894                           
 28895                           ;usb_device.c: 1017: }
 28896                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 28897  015914  EE20 F002          	lfsr	2,2
 28898  015918  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28899  01591A  26D9               	addwf	fsr2l,f,c
 28900  01591C  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28901  01591E  22DA               	addwfc	fsr2h,f,c
 28902  015920  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28903  015924  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28904                           
 28905                           ;usb_device.c: 1031: handle->CNT = len;
 28906  015928  EE20 F001          	lfsr	2,1
 28907  01592C  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28908  01592E  26D9               	addwf	fsr2l,f,c
 28909  015930  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28910  015932  22DA               	addwfc	fsr2h,f,c
 28911  015934  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28912                           
 28913                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 28914  015938  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28915  01593C  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28916  015940  0E40               	movlw	64
 28917  015942  16DF               	andwf	indf2,f,c
 28918                           
 28919                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 28920  015944  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28921  015948  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28922  01594C  0E00               	movlw	0
 28923  01594E  86DB               	bsf	plusw2,3,c
 28924                           
 28925                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 28926  015950  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28927  015954  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28928  015958  0E00               	movlw	0
 28929  01595A  8EDB               	bsf	plusw2,7,c
 28930                           
 28931                           ;usb_device.c: 1037: if(dir != 0)
 28932  01595C  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28933  01595E  B4D8               	btfsc	status,2,c
 28934  015960  D007               	goto	i2l6777
 28935                           
 28936                           ;usb_device.c: 1038: {
 28937                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28938  015962  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28939  015964  0D02               	mullw	2
 28940  015966  0EF5               	movlw	low _pBDTEntryIn
 28941  015968  24F3               	addwf	prodl,w,c
 28942  01596A  6ED9               	movwf	fsr2l,c
 28943  01596C  0E00               	movlw	high _pBDTEntryIn
 28944  01596E  D006               	goto	L19
 28945  015970                     i2l6777:
 28946                           
 28947                           ;usb_device.c: 1042: else
 28948                           ;usb_device.c: 1043: {
 28949                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28950  015970  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28951  015972  0D02               	mullw	2
 28952  015974  0E00               	movlw	low _pBDTEntryOut
 28953  015976  24F3               	addwf	prodl,w,c
 28954  015978  6ED9               	movwf	fsr2l,c
 28955  01597A  0E01               	movlw	high _pBDTEntryOut
 28956  01597C                     L19:
 28957  01597C  20F4               	addwfc	prodh,w,c
 28958  01597E  6EDA               	movwf	fsr2h,c
 28959  015980  0E04               	movlw	4
 28960  015982  1ADF               	xorwf	indf2,f,c
 28961                           
 28962                           ;usb_device.c: 1046: }
 28963                           ;usb_device.c: 1047: return (void*)handle;
 28964  015984  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28965  015988  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28966  01598C  0012               	return	
 28967  01598E                     __end_ofi2_USBTransferOnePacket:
 28968                           	opt stack 0
 28969                           pclatu	equ	0xFFB
 28970                           pclath	equ	0xFFA
 28971                           tblptru	equ	0xFF8
 28972                           tblptrh	equ	0xFF7
 28973                           tblptrl	equ	0xFF6
 28974                           tablat	equ	0xFF5
 28975                           prodh	equ	0xFF4
 28976                           prodl	equ	0xFF3
 28977                           intcon	equ	0xFF2
 28978                           intcon2	equ	0xFF1
 28979                           indf0	equ	0xFEF
 28980                           postinc0	equ	0xFEE
 28981                           fsr0h	equ	0xFEA
 28982                           fsr0l	equ	0xFE9
 28983                           wreg	equ	0xFE8
 28984                           indf1	equ	0xFE7
 28985                           postinc1	equ	0xFE6
 28986                           postdec1	equ	0xFE5
 28987                           fsr1h	equ	0xFE2
 28988                           fsr1l	equ	0xFE1
 28989                           indf2	equ	0xFDF
 28990                           postinc2	equ	0xFDE
 28991                           postdec2	equ	0xFDD
 28992                           plusw2	equ	0xFDB
 28993                           fsr2h	equ	0xFDA
 28994                           fsr2l	equ	0xFD9
 28995                           status	equ	0xFD8
 28996                           
 28997 ;; *************** function _USBEnableEndpoint *****************
 28998 ;; Defined at:
 28999 ;;		line 879 in file "../My_library/usb/usb_device.c"
 29000 ;; Parameters:    Size  Location     Type
 29001 ;;  ep              1    wreg     unsigned char 
 29002 ;;  options         1    8[COMRAM] unsigned char 
 29003 ;; Auto vars:     Size  Location     Type
 29004 ;;  ep              1   11[COMRAM] unsigned char 
 29005 ;;  p               2    9[COMRAM] PTR unsigned char 
 29006 ;;		 -> UEP0(1), 
 29007 ;; Return value:  Size  Location     Type
 29008 ;;		None               void
 29009 ;; Registers used:
 29010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29011 ;; Tracked objects:
 29012 ;;		On entry : 0/0
 29013 ;;		On exit  : 0/0
 29014 ;;		Unchanged: 0/0
 29015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29016 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29017 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29020 ;;Total ram usage:        4 bytes
 29021 ;; Hardware stack levels used:    1
 29022 ;; Hardware stack levels required when called:    1
 29023 ;; This function calls:
 29024 ;;		_USBConfigureEndpoint
 29025 ;; This function is called by:
 29026 ;;		_CDCInitEP
 29027 ;; This function uses a non-reentrant model
 29028 ;;
 29029                           
 29030                           	psect	text125
 29031  0169C4                     __ptext125:
 29032                           	opt stack 0
 29033  0169C4                     _USBEnableEndpoint:
 29034                           	opt stack 14
 29035                           
 29036                           ;incstack = 0
 29037                           ;USBEnableEndpoint@ep stored from wreg
 29038  0169C4  6E38               	movwf	USBEnableEndpoint@ep,c
 29039                           
 29040                           ;usb_device.c: 881: unsigned char* p;
 29041                           ;usb_device.c: 885: if(options & 0x04)
 29042  0169C6  A435               	btfss	USBEnableEndpoint@options,2,c
 29043  0169C8  D005               	goto	i2l6745
 29044                           
 29045                           ;usb_device.c: 886: {
 29046                           ;usb_device.c: 887: USBConfigureEndpoint(ep, 0);
 29047  0169CA  0E00               	movlw	0
 29048  0169CC  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29049  0169CE  5038               	movf	USBEnableEndpoint@ep,w,c
 29050  0169D0  EC01  F0AE         	call	_USBConfigureEndpoint
 29051  0169D4                     i2l6745:
 29052                           
 29053                           ;usb_device.c: 888: }
 29054                           ;usb_device.c: 889: if(options & 0x02)
 29055  0169D4  A235               	btfss	USBEnableEndpoint@options,1,c
 29056  0169D6  D005               	goto	i2l6749
 29057                           
 29058                           ;usb_device.c: 890: {
 29059                           ;usb_device.c: 891: USBConfigureEndpoint(ep, 1);
 29060  0169D8  0E01               	movlw	1
 29061  0169DA  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29062  0169DC  5038               	movf	USBEnableEndpoint@ep,w,c
 29063  0169DE  EC01  F0AE         	call	_USBConfigureEndpoint
 29064  0169E2                     i2l6749:
 29065                           
 29066                           ;usb_device.c: 892: }
 29067                           ;usb_device.c: 900: p = (unsigned char*)(&UEP0+ep);
 29068  0169E2  5038               	movf	USBEnableEndpoint@ep,w,c
 29069  0169E4  0D01               	mullw	1
 29070  0169E6  0E26               	movlw	38
 29071  0169E8  24F3               	addwf	prodl,w,c
 29072  0169EA  6E36               	movwf	USBEnableEndpoint@p,c
 29073  0169EC  0E0F               	movlw	15
 29074  0169EE  20F4               	addwfc	prodh,w,c
 29075  0169F0  6E37               	movwf	USBEnableEndpoint@p+1,c
 29076                           
 29077                           ;usb_device.c: 902: *p = options;
 29078  0169F2  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 29079  0169F6  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 29080  0169FA  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 29081  0169FE  0012               	return		;funcret
 29082  016A00                     __end_of_USBEnableEndpoint:
 29083                           	opt stack 0
 29084                           pclatu	equ	0xFFB
 29085                           pclath	equ	0xFFA
 29086                           tblptru	equ	0xFF8
 29087                           tblptrh	equ	0xFF7
 29088                           tblptrl	equ	0xFF6
 29089                           tablat	equ	0xFF5
 29090                           prodh	equ	0xFF4
 29091                           prodl	equ	0xFF3
 29092                           intcon	equ	0xFF2
 29093                           intcon2	equ	0xFF1
 29094                           indf0	equ	0xFEF
 29095                           postinc0	equ	0xFEE
 29096                           fsr0h	equ	0xFEA
 29097                           fsr0l	equ	0xFE9
 29098                           wreg	equ	0xFE8
 29099                           indf1	equ	0xFE7
 29100                           postinc1	equ	0xFE6
 29101                           postdec1	equ	0xFE5
 29102                           fsr1h	equ	0xFE2
 29103                           fsr1l	equ	0xFE1
 29104                           indf2	equ	0xFDF
 29105                           postinc2	equ	0xFDE
 29106                           postdec2	equ	0xFDD
 29107                           plusw2	equ	0xFDB
 29108                           fsr2h	equ	0xFDA
 29109                           fsr2l	equ	0xFD9
 29110                           status	equ	0xFD8
 29111                           
 29112 ;; *************** function _USBConfigureEndpoint *****************
 29113 ;; Defined at:
 29114 ;;		line 1544 in file "../My_library/usb/usb_device.c"
 29115 ;; Parameters:    Size  Location     Type
 29116 ;;  EPNum           1    wreg     unsigned char 
 29117 ;;  direction       1    0[COMRAM] unsigned char 
 29118 ;; Auto vars:     Size  Location     Type
 29119 ;;  EPNum           1    5[COMRAM] unsigned char 
 29120 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 29121 ;;		 -> BDT(48), 
 29122 ;; Return value:  Size  Location     Type
 29123 ;;		None               void
 29124 ;; Registers used:
 29125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29126 ;; Tracked objects:
 29127 ;;		On entry : 0/0
 29128 ;;		On exit  : 0/0
 29129 ;;		Unchanged: 0/0
 29130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29131 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29132 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29133 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29134 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29135 ;;Total ram usage:        8 bytes
 29136 ;; Hardware stack levels used:    1
 29137 ;; This function calls:
 29138 ;;		Nothing
 29139 ;; This function is called by:
 29140 ;;		_USBEnableEndpoint
 29141 ;; This function uses a non-reentrant model
 29142 ;;
 29143                           
 29144                           	psect	text126
 29145  015C02                     __ptext126:
 29146                           	opt stack 0
 29147  015C02                     _USBConfigureEndpoint:
 29148                           	opt stack 14
 29149                           
 29150                           ;incstack = 0
 29151                           ;USBConfigureEndpoint@EPNum stored from wreg
 29152  015C02  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 29153                           
 29154                           ;usb_device.c: 1546: volatile BDT_ENTRY* handle;
 29155                           ;usb_device.c: 1550: handle = (volatile BDT_ENTRY*)&BDT[0];
 29156  015C04  0E00               	movlw	0
 29157  015C06  6E33               	movwf	USBConfigureEndpoint@handle,c
 29158  015C08  0E0D               	movlw	13
 29159  015C0A  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 29160                           
 29161                           ;usb_device.c: 1551: handle += (4*EPNum+2*direction+0u);
 29162  015C0C  502D               	movf	USBConfigureEndpoint@direction,w,c
 29163  015C0E  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 29164  015C10  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 29165  015C12  90D8               	bcf	status,0,c
 29166  015C14  362E               	rlcf	??_USBConfigureEndpoint,f,c
 29167  015C16  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 29168  015C18  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29169  015C1A  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 29170  015C1C  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 29171  015C1E  90D8               	bcf	status,0,c
 29172  015C20  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29173  015C22  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29174  015C24  90D8               	bcf	status,0,c
 29175  015C26  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29176  015C28  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29177  015C2A  502E               	movf	??_USBConfigureEndpoint,w,c
 29178  015C2C  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 29179  015C2E  502F               	movf	??_USBConfigureEndpoint+1,w,c
 29180  015C30  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 29181  015C32  90D8               	bcf	status,0,c
 29182  015C34  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29183  015C36  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29184  015C38  90D8               	bcf	status,0,c
 29185  015C3A  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29186  015C3C  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29187  015C3E  5030               	movf	??_USBConfigureEndpoint+2,w,c
 29188  015C40  2633               	addwf	USBConfigureEndpoint@handle,f,c
 29189  015C42  5031               	movf	??_USBConfigureEndpoint+3,w,c
 29190  015C44  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 29191                           
 29192                           ;usb_device.c: 1553: handle->STAT.UOWN = 0;
 29193  015C46  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29194  015C4A  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29195  015C4E  9EDF               	bcf	indf2,7,c
 29196                           
 29197                           ;usb_device.c: 1558: if(direction == 0)
 29198  015C50  502D               	movf	USBConfigureEndpoint@direction,w,c
 29199  015C52  A4D8               	btfss	status,2,c
 29200  015C54  D007               	goto	i2l6735
 29201                           
 29202                           ;usb_device.c: 1559: {
 29203                           ;usb_device.c: 1560: pBDTEntryOut[EPNum] = handle;
 29204  015C56  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29205  015C58  0D02               	mullw	2
 29206  015C5A  0E00               	movlw	low _pBDTEntryOut
 29207  015C5C  24F3               	addwf	prodl,w,c
 29208  015C5E  6ED9               	movwf	fsr2l,c
 29209  015C60  0E01               	movlw	high _pBDTEntryOut
 29210  015C62  D006               	goto	L20
 29211  015C64                     i2l6735:
 29212                           
 29213                           ;usb_device.c: 1562: else
 29214                           ;usb_device.c: 1563: {
 29215                           ;usb_device.c: 1564: pBDTEntryIn[EPNum] = handle;
 29216  015C64  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29217  015C66  0D02               	mullw	2
 29218  015C68  0EF5               	movlw	low _pBDTEntryIn
 29219  015C6A  24F3               	addwf	prodl,w,c
 29220  015C6C  6ED9               	movwf	fsr2l,c
 29221  015C6E  0E00               	movlw	high _pBDTEntryIn
 29222  015C70                     L20:
 29223  015C70  20F4               	addwfc	prodh,w,c
 29224  015C72  6EDA               	movwf	fsr2h,c
 29225  015C74  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 29226  015C78  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 29227                           
 29228                           ;usb_device.c: 1565: }
 29229                           ;usb_device.c: 1568: handle->STAT.DTS = 0;
 29230  015C7C  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29231  015C80  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29232  015C84  9CDF               	bcf	indf2,6,c
 29233                           
 29234                           ;usb_device.c: 1569: (handle+1)->STAT.DTS = 1;
 29235  015C86  EE20 F004          	lfsr	2,4
 29236  015C8A  5033               	movf	USBConfigureEndpoint@handle,w,c
 29237  015C8C  26D9               	addwf	fsr2l,f,c
 29238  015C8E  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 29239  015C90  22DA               	addwfc	fsr2h,f,c
 29240  015C92  8CDF               	bsf	indf2,6,c
 29241  015C94  0012               	return		;funcret
 29242  015C96                     __end_of_USBConfigureEndpoint:
 29243                           	opt stack 0
 29244                           pclatu	equ	0xFFB
 29245                           pclath	equ	0xFFA
 29246                           tblptru	equ	0xFF8
 29247                           tblptrh	equ	0xFF7
 29248                           tblptrl	equ	0xFF6
 29249                           tablat	equ	0xFF5
 29250                           prodh	equ	0xFF4
 29251                           prodl	equ	0xFF3
 29252                           intcon	equ	0xFF2
 29253                           intcon2	equ	0xFF1
 29254                           indf0	equ	0xFEF
 29255                           postinc0	equ	0xFEE
 29256                           fsr0h	equ	0xFEA
 29257                           fsr0l	equ	0xFE9
 29258                           wreg	equ	0xFE8
 29259                           indf1	equ	0xFE7
 29260                           postinc1	equ	0xFE6
 29261                           postdec1	equ	0xFE5
 29262                           fsr1h	equ	0xFE2
 29263                           fsr1l	equ	0xFE1
 29264                           indf2	equ	0xFDF
 29265                           postinc2	equ	0xFDE
 29266                           postdec2	equ	0xFDD
 29267                           plusw2	equ	0xFDB
 29268                           fsr2h	equ	0xFDA
 29269                           fsr2l	equ	0xFD9
 29270                           status	equ	0xFD8
 29271                           
 29272 ;; *************** function _USBCtrlTrfOutHandler *****************
 29273 ;; Defined at:
 29274 ;;		line 2542 in file "../My_library/usb/usb_device.c"
 29275 ;; Parameters:    Size  Location     Type
 29276 ;;		None
 29277 ;; Auto vars:     Size  Location     Type
 29278 ;;		None
 29279 ;; Return value:  Size  Location     Type
 29280 ;;		None               void
 29281 ;; Registers used:
 29282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29283 ;; Tracked objects:
 29284 ;;		On entry : 0/0
 29285 ;;		On exit  : 0/0
 29286 ;;		Unchanged: 0/0
 29287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29292 ;;Total ram usage:        0 bytes
 29293 ;; Hardware stack levels used:    1
 29294 ;; Hardware stack levels required when called:    2
 29295 ;; This function calls:
 29296 ;;		_USBCtrlTrfRxService
 29297 ;; This function is called by:
 29298 ;;		_USBCtrlEPService
 29299 ;; This function uses a non-reentrant model
 29300 ;;
 29301                           
 29302                           	psect	text127
 29303  0166B2                     __ptext127:
 29304                           	opt stack 0
 29305  0166B2                     _USBCtrlTrfOutHandler:
 29306                           	opt stack 15
 29307                           
 29308                           ;usb_device.c: 2544: if(controlTransferState == 2)
 29309                           
 29310                           ;incstack = 0
 29311  0166B2  0E02               	movlw	2
 29312  0166B4  181B               	xorwf	_controlTransferState,w,c	;volatile
 29313  0166B6  A4D8               	btfss	status,2,c
 29314  0166B8  D003               	goto	i2l7859
 29315                           
 29316                           ;usb_device.c: 2545: {
 29317                           ;usb_device.c: 2546: USBCtrlTrfRxService();
 29318  0166BA  EC4F  F09E         	call	_USBCtrlTrfRxService	;wreg free
 29319                           
 29320                           ;usb_device.c: 2547: }
 29321  0166BE  0012               	return	
 29322  0166C0                     i2l7859:
 29323                           
 29324                           ;usb_device.c: 2548: else
 29325                           ;usb_device.c: 2549: {
 29326                           ;usb_device.c: 2552: controlTransferState = 0;
 29327  0166C0  0E00               	movlw	0
 29328  0166C2  6E1B               	movwf	_controlTransferState,c	;volatile
 29329                           
 29330                           ;usb_device.c: 2559: if(BothEP0OutUOWNsSet == 0)
 29331  0166C4  500D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29332  0166C6  A4D8               	btfss	status,2,c
 29333  0166C8  D01F               	goto	i2l7867
 29334                           
 29335                           ;usb_device.c: 2560: {
 29336                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->CNT = 8;
 29337  0166CA  EE20 F001          	lfsr	2,1
 29338  0166CE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29339  0166D0  26D9               	addwf	fsr2l,f,c
 29340  0166D2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29341  0166D4  22DA               	addwfc	fsr2h,f,c
 29342  0166D6  0E08               	movlw	8
 29343  0166D8  6EDF               	movwf	indf2,c
 29344                           
 29345                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29346  0166DA  EE20 F002          	lfsr	2,2
 29347  0166DE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29348  0166E0  26D9               	addwf	fsr2l,f,c
 29349  0166E2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29350  0166E4  22DA               	addwfc	fsr2h,f,c
 29351  0166E6  0E30               	movlw	48
 29352  0166E8  6EDE               	movwf	postinc2,c
 29353  0166EA  0E0D               	movlw	13
 29354  0166EC  6EDD               	movwf	postdec2,c
 29355                           
 29356                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29357  0166EE  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29358  0166F2  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29359  0166F6  0E0C               	movlw	12
 29360  0166F8  6EDF               	movwf	indf2,c
 29361                           
 29362                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29363  0166FA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29364  0166FE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29365  016702  0E00               	movlw	0
 29366  016704  8EDB               	bsf	plusw2,7,c
 29367                           
 29368                           ;usb_device.c: 2565: }
 29369  016706  0012               	return	
 29370  016708                     i2l7867:
 29371                           
 29372                           ;usb_device.c: 2566: else
 29373                           ;usb_device.c: 2567: {
 29374                           ;usb_device.c: 2568: BothEP0OutUOWNsSet = 0;
 29375  016708  0E00               	movlw	0
 29376  01670A  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29377  01670C  0012               	return	
 29378  01670E                     __end_of_USBCtrlTrfOutHandler:
 29379                           	opt stack 0
 29380                           pclatu	equ	0xFFB
 29381                           pclath	equ	0xFFA
 29382                           tblptru	equ	0xFF8
 29383                           tblptrh	equ	0xFF7
 29384                           tblptrl	equ	0xFF6
 29385                           tablat	equ	0xFF5
 29386                           prodh	equ	0xFF4
 29387                           prodl	equ	0xFF3
 29388                           intcon	equ	0xFF2
 29389                           intcon2	equ	0xFF1
 29390                           indf0	equ	0xFEF
 29391                           postinc0	equ	0xFEE
 29392                           fsr0h	equ	0xFEA
 29393                           fsr0l	equ	0xFE9
 29394                           wreg	equ	0xFE8
 29395                           indf1	equ	0xFE7
 29396                           postinc1	equ	0xFE6
 29397                           postdec1	equ	0xFE5
 29398                           fsr1h	equ	0xFE2
 29399                           fsr1l	equ	0xFE1
 29400                           indf2	equ	0xFDF
 29401                           postinc2	equ	0xFDE
 29402                           postdec2	equ	0xFDD
 29403                           plusw2	equ	0xFDB
 29404                           fsr2h	equ	0xFDA
 29405                           fsr2l	equ	0xFD9
 29406                           status	equ	0xFD8
 29407                           
 29408 ;; *************** function _USBCtrlTrfRxService *****************
 29409 ;; Defined at:
 29410 ;;		line 1853 in file "../My_library/usb/usb_device.c"
 29411 ;; Parameters:    Size  Location     Type
 29412 ;;		None
 29413 ;; Auto vars:     Size  Location     Type
 29414 ;;  byteToRead      1    1[COMRAM] unsigned char 
 29415 ;;  i               1    0[COMRAM] unsigned char 
 29416 ;; Return value:  Size  Location     Type
 29417 ;;		None               void
 29418 ;; Registers used:
 29419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29420 ;; Tracked objects:
 29421 ;;		On entry : 0/0
 29422 ;;		On exit  : 0/0
 29423 ;;		Unchanged: 0/0
 29424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29429 ;;Total ram usage:        2 bytes
 29430 ;; Hardware stack levels used:    1
 29431 ;; Hardware stack levels required when called:    1
 29432 ;; This function calls:
 29433 ;;		_USBCtrlEPAllowStatusStage
 29434 ;; This function is called by:
 29435 ;;		_USBCtrlTrfOutHandler
 29436 ;; This function uses a non-reentrant model
 29437 ;;
 29438                           
 29439                           	psect	text128
 29440  013C9E                     __ptext128:
 29441                           	opt stack 0
 29442  013C9E                     _USBCtrlTrfRxService:
 29443                           	opt stack 15
 29444                           
 29445                           ;usb_device.c: 1855: uint8_t byteToRead;
 29446                           ;usb_device.c: 1856: uint8_t i;
 29447                           ;usb_device.c: 1860: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29448                           
 29449                           ;incstack = 0
 29450  013C9E  EE20 F001          	lfsr	2,1
 29451  013CA2  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29452  013CA4  26D9               	addwf	fsr2l,f,c
 29453  013CA6  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29454  013CA8  22DA               	addwfc	fsr2h,f,c
 29455  013CAA  50DF               	movf	indf2,w,c
 29456  013CAC  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 29457                           
 29458                           ;usb_device.c: 1866: if(byteToRead > outPipes[0].wCount.Val)
 29459  013CAE  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29460  013CB0  0100               	movlb	0	; () banked
 29461  013CB2  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 29462  013CB4  0E00               	movlw	0
 29463  013CB6  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 29464  013CB8  A0D8               	btfss	status,0,c
 29465                           
 29466                           ; BSR set to: 0
 29467                           ;usb_device.c: 1867: {
 29468                           ;usb_device.c: 1868: byteToRead = outPipes[0].wCount.Val;
 29469  013CBA  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29470                           
 29471                           ; BSR set to: 0
 29472                           ;usb_device.c: 1869: }
 29473                           ;usb_device.c: 1871: outPipes[0].wCount.Val -= byteToRead;
 29474                           
 29475                           ; BSR set to: 0
 29476  013CBE  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29477  013CC0  0100               	movlb	0	; () banked
 29478  013CC2  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29479  013CC4  0E00               	movlw	0
 29480  013CC6  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29481                           
 29482                           ; BSR set to: 0
 29483                           ;usb_device.c: 1875: for(i=0;i<byteToRead;i++)
 29484  013CC8  0E00               	movlw	0
 29485  013CCA  6E2D               	movwf	USBCtrlTrfRxService@i,c
 29486  013CCC  D012               	goto	i2l7697
 29487  013CCE                     i2l7691:
 29488                           
 29489                           ; BSR set to: 0
 29490                           ;usb_device.c: 1876: {
 29491                           ;usb_device.c: 1877: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29492  013CCE  502D               	movf	USBCtrlTrfRxService@i,w,c
 29493  013CD0  0D01               	mullw	1
 29494  013CD2  0E38               	movlw	56
 29495  013CD4  24F3               	addwf	prodl,w,c
 29496  013CD6  6ED9               	movwf	fsr2l,c
 29497  013CD8  0E0D               	movlw	13
 29498  013CDA  20F4               	addwfc	prodh,w,c
 29499  013CDC  6EDA               	movwf	fsr2h,c
 29500  013CDE  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 29501  013CE2  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29502  013CE6  CFDF FFE7          	movff	indf2,indf1
 29503                           
 29504                           ; BSR set to: 0
 29505  013CEA  0100               	movlb	0	; () banked
 29506  013CEC  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 29507  013CEE  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29508                           
 29509                           ; BSR set to: 0
 29510  013CF0  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 29511  013CF2                     i2l7697:
 29512                           
 29513                           ; BSR set to: 0
 29514  013CF2  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29515  013CF4  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 29516  013CF6  A0D8               	btfss	status,0,c
 29517  013CF8  D7EA               	goto	i2l7691
 29518                           
 29519                           ; BSR set to: 0
 29520                           ;usb_device.c: 1878: }
 29521                           ;usb_device.c: 1882: if(outPipes[0].wCount.Val > 0)
 29522                           
 29523                           ; BSR set to: 0
 29524  013CFA  0100               	movlb	0	; () banked
 29525  013CFC  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29526  013CFE  0100               	movlb	0	; () banked
 29527  013D00  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29528  013D02  B4D8               	btfsc	status,2,c
 29529  013D04  D032               	goto	i2l7713
 29530                           
 29531                           ; BSR set to: 0
 29532                           ;usb_device.c: 1883: {
 29533                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->CNT = 8;
 29534  013D06  EE20 F001          	lfsr	2,1
 29535  013D0A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29536  013D0C  26D9               	addwf	fsr2l,f,c
 29537  013D0E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29538  013D10  22DA               	addwfc	fsr2h,f,c
 29539  013D12  0E08               	movlw	8
 29540  013D14  6EDF               	movwf	indf2,c
 29541                           
 29542                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29543  013D16  EE20 F002          	lfsr	2,2
 29544  013D1A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29545  013D1C  26D9               	addwf	fsr2l,f,c
 29546  013D1E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29547  013D20  22DA               	addwfc	fsr2h,f,c
 29548  013D22  0E38               	movlw	56
 29549  013D24  6EDE               	movwf	postinc2,c
 29550  013D26  0E0D               	movlw	13
 29551  013D28  6EDD               	movwf	postdec2,c
 29552                           
 29553                           ; BSR set to: 0
 29554                           ;usb_device.c: 1886: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29555  013D2A  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29556  013D2E  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29557  013D32  BCDF               	btfsc	indf2,6,c
 29558  013D34  D00D               	goto	i2l7709
 29559                           
 29560                           ; BSR set to: 0
 29561                           ;usb_device.c: 1887: {
 29562                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29563  013D36  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29564  013D3A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29565  013D3E  0E48               	movlw	72
 29566  013D40  6EDF               	movwf	indf2,c
 29567                           
 29568                           ; BSR set to: 0
 29569                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29570  013D42  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29571  013D46  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29572  013D4A  0E00               	movlw	0
 29573  013D4C  8EDB               	bsf	plusw2,7,c
 29574                           
 29575                           ;usb_device.c: 1890: }
 29576  013D4E  0012               	return	
 29577  013D50                     i2l7709:
 29578                           
 29579                           ; BSR set to: 0
 29580                           ;usb_device.c: 1891: else
 29581                           ;usb_device.c: 1892: {
 29582                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29583  013D50  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29584  013D54  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29585  013D58  0E08               	movlw	8
 29586  013D5A  6EDF               	movwf	indf2,c
 29587                           
 29588                           ; BSR set to: 0
 29589                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29590  013D5C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29591  013D60  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29592  013D64  0E00               	movlw	0
 29593  013D66  8EDB               	bsf	plusw2,7,c
 29594                           
 29595                           ; BSR set to: 0
 29596                           ;usb_device.c: 1895: }
 29597                           ;usb_device.c: 1896: }
 29598  013D68  0012               	return	
 29599  013D6A                     i2l7713:
 29600                           
 29601                           ; BSR set to: 0
 29602                           ;usb_device.c: 1897: else
 29603                           ;usb_device.c: 1898: {
 29604                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
 29605  013D6A  EE20 F001          	lfsr	2,1
 29606  013D6E  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29607  013D70  26D9               	addwf	fsr2l,f,c
 29608  013D72  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29609  013D74  22DA               	addwfc	fsr2h,f,c
 29610  013D76  0E08               	movlw	8
 29611  013D78  6EDF               	movwf	indf2,c
 29612                           
 29613                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29614  013D7A  EE20 F002          	lfsr	2,2
 29615  013D7E  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29616  013D80  26D9               	addwf	fsr2l,f,c
 29617  013D82  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29618  013D84  22DA               	addwfc	fsr2h,f,c
 29619  013D86  0E30               	movlw	48
 29620  013D88  6EDE               	movwf	postinc2,c
 29621  013D8A  0E0D               	movlw	13
 29622  013D8C  6EDD               	movwf	postdec2,c
 29623                           
 29624                           ; BSR set to: 0
 29625                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29626  013D8E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29627  013D92  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29628  013D96  0E04               	movlw	4
 29629  013D98  6EDF               	movwf	indf2,c
 29630                           
 29631                           ; BSR set to: 0
 29632                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29633  013D9A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29634  013D9E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29635  013DA2  0E00               	movlw	0
 29636  013DA4  8EDB               	bsf	plusw2,7,c
 29637                           
 29638                           ; BSR set to: 0
 29639                           ;usb_device.c: 1927: }
 29640                           ;usb_device.c: 1928: outPipes[0].info.bits.busy = 0;
 29641                           
 29642                           ; BSR set to: 0
 29643                           ;usb_device.c: 1916: {
 29644                           ;usb_device.c: 1922: outPipes[0].pFunc();
 29645  013DA6  0100               	movlb	0	; () banked
 29646  013DA8  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29647                           
 29648                           ; BSR set to: 0
 29649                           ;usb_device.c: 1942: if(USBDeferStatusStagePacket == 0)
 29650  013DAA  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29651  013DAC  A4D8               	btfss	status,2,c
 29652  013DAE  0012               	return	
 29653                           
 29654                           ; BSR set to: 0
 29655                           ;usb_device.c: 1943: {
 29656                           ;usb_device.c: 1944: USBCtrlEPAllowStatusStage();
 29657  013DB0  EC6D  F0A9         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29658  013DB4  0012               	return	
 29659  013DB6                     __end_of_USBCtrlTrfRxService:
 29660                           	opt stack 0
 29661                           pclatu	equ	0xFFB
 29662                           pclath	equ	0xFFA
 29663                           tblptru	equ	0xFF8
 29664                           tblptrh	equ	0xFF7
 29665                           tblptrl	equ	0xFF6
 29666                           tablat	equ	0xFF5
 29667                           prodh	equ	0xFF4
 29668                           prodl	equ	0xFF3
 29669                           intcon	equ	0xFF2
 29670                           intcon2	equ	0xFF1
 29671                           indf0	equ	0xFEF
 29672                           postinc0	equ	0xFEE
 29673                           fsr0h	equ	0xFEA
 29674                           fsr0l	equ	0xFE9
 29675                           wreg	equ	0xFE8
 29676                           indf1	equ	0xFE7
 29677                           postinc1	equ	0xFE6
 29678                           postdec1	equ	0xFE5
 29679                           fsr1h	equ	0xFE2
 29680                           fsr1l	equ	0xFE1
 29681                           indf2	equ	0xFDF
 29682                           postinc2	equ	0xFDE
 29683                           postdec2	equ	0xFDD
 29684                           plusw2	equ	0xFDB
 29685                           fsr2h	equ	0xFDA
 29686                           fsr2l	equ	0xFD9
 29687                           status	equ	0xFD8
 29688                           
 29689 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29690 ;; Defined at:
 29691 ;;		line 1417 in file "../My_library/usb/usb_device.c"
 29692 ;; Parameters:    Size  Location     Type
 29693 ;;		None
 29694 ;; Auto vars:     Size  Location     Type
 29695 ;;		None
 29696 ;; Return value:  Size  Location     Type
 29697 ;;		None               void
 29698 ;; Registers used:
 29699 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29700 ;; Tracked objects:
 29701 ;;		On entry : 0/0
 29702 ;;		On exit  : 0/0
 29703 ;;		Unchanged: 0/0
 29704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29709 ;;Total ram usage:        0 bytes
 29710 ;; Hardware stack levels used:    1
 29711 ;; This function calls:
 29712 ;;		Nothing
 29713 ;; This function is called by:
 29714 ;;		_USBDeviceTasks
 29715 ;;		_USBCtrlEPServiceComplete
 29716 ;;		_USBCtrlTrfRxService
 29717 ;; This function uses a non-reentrant model
 29718 ;;
 29719                           
 29720                           	psect	text129
 29721  0152DA                     __ptext129:
 29722                           	opt stack 0
 29723  0152DA                     _USBCtrlEPAllowStatusStage:
 29724                           	opt stack 15
 29725                           
 29726                           ;usb_device.c: 1424: if(USBStatusStageEnabledFlag1 == 0)
 29727                           
 29728                           ;incstack = 0
 29729  0152DA  5014               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29730  0152DC  A4D8               	btfss	status,2,c
 29731  0152DE  0012               	return	
 29732                           
 29733                           ;usb_device.c: 1425: {
 29734                           ;usb_device.c: 1426: USBStatusStageEnabledFlag1 = 1;
 29735  0152E0  0E01               	movlw	1
 29736  0152E2  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29737                           
 29738                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag2 == 0)
 29739  0152E4  5015               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29740  0152E6  A4D8               	btfss	status,2,c
 29741  0152E8  0012               	return	
 29742                           
 29743                           ;usb_device.c: 1428: {
 29744                           ;usb_device.c: 1429: USBStatusStageEnabledFlag2 = 1;
 29745  0152EA  0E01               	movlw	1
 29746  0152EC  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29747                           
 29748                           ;usb_device.c: 1433: if(controlTransferState == 2)
 29749  0152EE  0E02               	movlw	2
 29750  0152F0  181B               	xorwf	_controlTransferState,w,c	;volatile
 29751  0152F2  A4D8               	btfss	status,2,c
 29752  0152F4  D016               	goto	i2l7161
 29753                           
 29754                           ;usb_device.c: 1434: {
 29755                           ;usb_device.c: 1435: pBDTEntryIn[0]->CNT = 0;
 29756  0152F6  0100               	movlb	0	; () banked
 29757  0152F8  EE20 F001          	lfsr	2,1
 29758  0152FC  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29759  0152FE  26D9               	addwf	fsr2l,f,c
 29760  015300  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29761  015302  22DA               	addwfc	fsr2h,f,c
 29762  015304  0E00               	movlw	0
 29763  015306  6EDF               	movwf	indf2,c
 29764                           
 29765                           ; BSR set to: 0
 29766                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29767  015308  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29768  01530C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29769  015310  0E48               	movlw	72
 29770  015312  6EDF               	movwf	indf2,c
 29771                           
 29772                           ; BSR set to: 0
 29773                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29774  015314  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29775  015318  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29776  01531C  0E00               	movlw	0
 29777  01531E  8EDB               	bsf	plusw2,7,c
 29778                           
 29779                           ;usb_device.c: 1438: }
 29780  015320  0012               	return	
 29781  015322                     i2l7161:
 29782                           
 29783                           ;usb_device.c: 1439: else if(controlTransferState == 1)
 29784  015322  041B               	decf	_controlTransferState,w,c	;volatile
 29785  015324  A4D8               	btfss	status,2,c
 29786  015326  0012               	return	
 29787                           
 29788                           ;usb_device.c: 1440: {
 29789                           ;usb_device.c: 1441: BothEP0OutUOWNsSet = 0;
 29790  015328  0E00               	movlw	0
 29791  01532A  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29792                           
 29793                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->CNT = 8;
 29794  01532C  EE20 F001          	lfsr	2,1
 29795  015330  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29796  015332  26D9               	addwf	fsr2l,f,c
 29797  015334  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29798  015336  22DA               	addwfc	fsr2h,f,c
 29799  015338  0E08               	movlw	8
 29800  01533A  6EDF               	movwf	indf2,c
 29801                           
 29802                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29803  01533C  EE20 F002          	lfsr	2,2
 29804  015340  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29805  015342  26D9               	addwf	fsr2l,f,c
 29806  015344  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29807  015346  22DA               	addwfc	fsr2h,f,c
 29808  015348  0E30               	movlw	48
 29809  01534A  6EDE               	movwf	postinc2,c
 29810  01534C  0E0D               	movlw	13
 29811  01534E  6EDD               	movwf	postdec2,c
 29812                           
 29813                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29814  015350  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29815  015354  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29816  015358  0E04               	movlw	4
 29817  01535A  6EDF               	movwf	indf2,c
 29818                           
 29819                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29820  01535C  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29821  015360  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29822  015364  0E00               	movlw	0
 29823  015366  8EDB               	bsf	plusw2,7,c
 29824                           
 29825                           ;usb_device.c: 1450: BothEP0OutUOWNsSet = 1;
 29826  015368  0E01               	movlw	1
 29827  01536A  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29828                           
 29829                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->CNT = 8;
 29830  01536C  EE20 F001          	lfsr	2,1
 29831  015370  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29832  015372  26D9               	addwf	fsr2l,f,c
 29833  015374  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29834  015376  22DA               	addwfc	fsr2h,f,c
 29835  015378  0E08               	movlw	8
 29836  01537A  6EDF               	movwf	indf2,c
 29837                           
 29838                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29839  01537C  EE20 F002          	lfsr	2,2
 29840  015380  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29841  015382  26D9               	addwf	fsr2l,f,c
 29842  015384  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29843  015386  22DA               	addwfc	fsr2h,f,c
 29844  015388  0E30               	movlw	48
 29845  01538A  6EDE               	movwf	postinc2,c
 29846  01538C  0E0D               	movlw	13
 29847  01538E  6EDD               	movwf	postdec2,c
 29848                           
 29849                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29850  015390  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29851  015394  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29852  015398  0E80               	movlw	128
 29853  01539A  6EDF               	movwf	indf2,c
 29854  01539C  0012               	return	
 29855  01539E                     __end_of_USBCtrlEPAllowStatusStage:
 29856                           	opt stack 0
 29857                           pclatu	equ	0xFFB
 29858                           pclath	equ	0xFFA
 29859                           tblptru	equ	0xFF8
 29860                           tblptrh	equ	0xFF7
 29861                           tblptrl	equ	0xFF6
 29862                           tablat	equ	0xFF5
 29863                           prodh	equ	0xFF4
 29864                           prodl	equ	0xFF3
 29865                           intcon	equ	0xFF2
 29866                           intcon2	equ	0xFF1
 29867                           indf0	equ	0xFEF
 29868                           postinc0	equ	0xFEE
 29869                           fsr0h	equ	0xFEA
 29870                           fsr0l	equ	0xFE9
 29871                           wreg	equ	0xFE8
 29872                           indf1	equ	0xFE7
 29873                           postinc1	equ	0xFE6
 29874                           postdec1	equ	0xFE5
 29875                           fsr1h	equ	0xFE2
 29876                           fsr1l	equ	0xFE1
 29877                           indf2	equ	0xFDF
 29878                           postinc2	equ	0xFDE
 29879                           postdec2	equ	0xFDD
 29880                           plusw2	equ	0xFDB
 29881                           fsr2h	equ	0xFDA
 29882                           fsr2l	equ	0xFD9
 29883                           status	equ	0xFD8
 29884                           
 29885 ;; *************** function _USBCtrlTrfInHandler *****************
 29886 ;; Defined at:
 29887 ;;		line 2596 in file "../My_library/usb/usb_device.c"
 29888 ;; Parameters:    Size  Location     Type
 29889 ;;		None
 29890 ;; Auto vars:     Size  Location     Type
 29891 ;;  lastDTS         1    1[COMRAM] unsigned char 
 29892 ;; Return value:  Size  Location     Type
 29893 ;;		None               void
 29894 ;; Registers used:
 29895 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29896 ;; Tracked objects:
 29897 ;;		On entry : 0/0
 29898 ;;		On exit  : 0/0
 29899 ;;		Unchanged: 0/0
 29900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29905 ;;Total ram usage:        1 bytes
 29906 ;; Hardware stack levels used:    1
 29907 ;; Hardware stack levels required when called:    1
 29908 ;; This function calls:
 29909 ;;		_USBCtrlTrfTxService
 29910 ;; This function is called by:
 29911 ;;		_USBCtrlEPService
 29912 ;; This function uses a non-reentrant model
 29913 ;;
 29914                           
 29915                           	psect	text130
 29916  01539E                     __ptext130:
 29917                           	opt stack 0
 29918  01539E                     _USBCtrlTrfInHandler:
 29919                           	opt stack 16
 29920                           
 29921                           ;usb_device.c: 2598: uint8_t lastDTS;
 29922                           ;usb_device.c: 2600: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29923                           
 29924                           ;incstack = 0
 29925  01539E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29926  0153A2  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29927  0153A6  0E00               	movlw	0
 29928  0153A8  BCDF               	btfsc	indf2,6,c
 29929  0153AA  0E01               	movlw	1
 29930  0153AC  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29931                           
 29932                           ;usb_device.c: 2603: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29933  0153AE  0E04               	movlw	4
 29934  0153B0  0100               	movlb	0	; () banked
 29935  0153B2  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29936                           
 29937                           ; BSR set to: 0
 29938                           ;usb_device.c: 2608: if(USBDeviceState == ADR_PENDING_STATE)
 29939  0153B4  0E08               	movlw	8
 29940  0153B6  1813               	xorwf	_USBDeviceState,w,c	;volatile
 29941  0153B8  A4D8               	btfss	status,2,c
 29942  0153BA  D00D               	goto	i2l7883
 29943                           
 29944                           ; BSR set to: 0
 29945                           ;usb_device.c: 2609: {
 29946                           ;usb_device.c: 2610: UADDR = (SetupPkt.bDevADR & 0x7F);
 29947  0153BC  010D               	movlb	13	; () banked
 29948  0153BE  5132               	movf	50,w,b	;volatile
 29949  0153C0  0B7F               	andlw	127
 29950  0153C2  010F               	movlb	15	; () banked
 29951  0153C4  6F38               	movwf	56,b	;volatile
 29952                           
 29953                           ; BSR set to: 15
 29954                           ;usb_device.c: 2611: if(UADDR != 0u)
 29955  0153C6  010F               	movlb	15	; () banked
 29956  0153C8  5138               	movf	56,w,b	;volatile
 29957  0153CA  B4D8               	btfsc	status,2,c
 29958  0153CC  D002               	goto	i2l7881
 29959                           
 29960                           ; BSR set to: 15
 29961                           ;usb_device.c: 2612: {
 29962                           ;usb_device.c: 2613: USBDeviceState=ADDRESS_STATE;
 29963  0153CE  0E10               	movlw	16
 29964  0153D0  D001               	goto	L21
 29965  0153D2                     i2l7881:
 29966                           
 29967                           ; BSR set to: 15
 29968                           ;usb_device.c: 2615: else
 29969                           ;usb_device.c: 2616: {
 29970                           ;usb_device.c: 2617: USBDeviceState=DEFAULT_STATE;
 29971  0153D2  0E04               	movlw	4
 29972  0153D4                     L21:
 29973  0153D4  6E13               	movwf	_USBDeviceState,c	;volatile
 29974  0153D6                     i2l7883:
 29975                           
 29976                           ;usb_device.c: 2618: }
 29977                           ;usb_device.c: 2619: }
 29978                           ;usb_device.c: 2622: if(controlTransferState == 1)
 29979  0153D6  041B               	decf	_controlTransferState,w,c	;volatile
 29980  0153D8  A4D8               	btfss	status,2,c
 29981  0153DA  D03B               	goto	i2l345
 29982                           
 29983                           ;usb_device.c: 2623: {
 29984                           ;usb_device.c: 2624: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29985  0153DC  0100               	movlb	0	; () banked
 29986  0153DE  EE20 F002          	lfsr	2,2
 29987  0153E2  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29988  0153E4  26D9               	addwf	fsr2l,f,c
 29989  0153E6  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29990  0153E8  22DA               	addwfc	fsr2h,f,c
 29991  0153EA  0E38               	movlw	56
 29992  0153EC  6EDE               	movwf	postinc2,c
 29993  0153EE  0E0D               	movlw	13
 29994  0153F0  6EDD               	movwf	postdec2,c
 29995                           
 29996                           ; BSR set to: 0
 29997                           ;usb_device.c: 2625: USBCtrlTrfTxService();
 29998  0153F2  EC0E  F0A4         	call	_USBCtrlTrfTxService	;wreg free
 29999                           
 30000                           ;usb_device.c: 2631: if(shortPacketStatus == 2)
 30001  0153F6  0E02               	movlw	2
 30002  0153F8  1821               	xorwf	_shortPacketStatus,w,c	;volatile
 30003  0153FA  A4D8               	btfss	status,2,c
 30004  0153FC  D00D               	goto	i2l7895
 30005                           
 30006                           ;usb_device.c: 2632: {
 30007                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x04;
 30008  0153FE  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30009  015402  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30010  015406  0E04               	movlw	4
 30011  015408  6EDF               	movwf	indf2,c
 30012                           
 30013                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30014  01540A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30015  01540E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30016  015412  0E00               	movlw	0
 30017  015414  8EDB               	bsf	plusw2,7,c
 30018                           
 30019                           ;usb_device.c: 2637: }
 30020  015416  0012               	return	
 30021  015418                     i2l7895:
 30022                           
 30023                           ;usb_device.c: 2638: else
 30024                           ;usb_device.c: 2639: {
 30025                           ;usb_device.c: 2640: if(lastDTS == 0)
 30026  015418  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 30027  01541A  A4D8               	btfss	status,2,c
 30028  01541C  D00D               	goto	i2l7901
 30029                           
 30030                           ;usb_device.c: 2641: {
 30031                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30032  01541E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30033  015422  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30034  015426  0E48               	movlw	72
 30035  015428  6EDF               	movwf	indf2,c
 30036                           
 30037                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30038  01542A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30039  01542E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30040  015432  0E00               	movlw	0
 30041  015434  8EDB               	bsf	plusw2,7,c
 30042                           
 30043                           ;usb_device.c: 2644: }
 30044  015436  0012               	return	
 30045  015438                     i2l7901:
 30046                           
 30047                           ;usb_device.c: 2645: else
 30048                           ;usb_device.c: 2646: {
 30049                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 30050  015438  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30051  01543C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30052  015440  0E08               	movlw	8
 30053  015442  6EDF               	movwf	indf2,c
 30054                           
 30055                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30056  015444  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30057  015448  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30058  01544C  0E00               	movlw	0
 30059  01544E  8EDB               	bsf	plusw2,7,c
 30060                           
 30061                           ;usb_device.c: 2649: }
 30062                           ;usb_device.c: 2650: }
 30063                           ;usb_device.c: 2651: }
 30064  015450  0012               	return	
 30065  015452                     i2l345:
 30066                           
 30067                           ;usb_device.c: 2652: else
 30068                           ;usb_device.c: 2653: {
 30069                           ;usb_device.c: 2657: if(outPipes[0].info.bits.busy == 1)
 30070  015452  0100               	movlb	0	; () banked
 30071  015454  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 30072  015456  D002               	goto	i2l7907
 30073                           
 30074                           ; BSR set to: 0
 30075                           ;usb_device.c: 2662: }
 30076                           ;usb_device.c: 2663: outPipes[0].info.bits.busy = 0;
 30077                           
 30078                           ; BSR set to: 0
 30079                           ;usb_device.c: 2660: {
 30080                           ;usb_device.c: 2661: outPipes[0].pFunc();
 30081  015458  0100               	movlb	0	; () banked
 30082  01545A  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 30083  01545C                     i2l7907:
 30084                           
 30085                           ; BSR set to: 0
 30086                           ;usb_device.c: 2664: }
 30087                           ;usb_device.c: 2666: controlTransferState = 0;
 30088  01545C  0E00               	movlw	0
 30089  01545E  6E1B               	movwf	_controlTransferState,c	;volatile
 30090  015460  0012               	return	
 30091  015462                     __end_of_USBCtrlTrfInHandler:
 30092                           	opt stack 0
 30093                           pclatu	equ	0xFFB
 30094                           pclath	equ	0xFFA
 30095                           tblptru	equ	0xFF8
 30096                           tblptrh	equ	0xFF7
 30097                           tblptrl	equ	0xFF6
 30098                           tablat	equ	0xFF5
 30099                           prodh	equ	0xFF4
 30100                           prodl	equ	0xFF3
 30101                           intcon	equ	0xFF2
 30102                           intcon2	equ	0xFF1
 30103                           indf0	equ	0xFEF
 30104                           postinc0	equ	0xFEE
 30105                           fsr0h	equ	0xFEA
 30106                           fsr0l	equ	0xFE9
 30107                           wreg	equ	0xFE8
 30108                           indf1	equ	0xFE7
 30109                           postinc1	equ	0xFE6
 30110                           postdec1	equ	0xFE5
 30111                           fsr1h	equ	0xFE2
 30112                           fsr1l	equ	0xFE1
 30113                           indf2	equ	0xFDF
 30114                           postinc2	equ	0xFDE
 30115                           postdec2	equ	0xFDD
 30116                           plusw2	equ	0xFDB
 30117                           fsr2h	equ	0xFDA
 30118                           fsr2l	equ	0xFD9
 30119                           status	equ	0xFD8
 30120                           
 30121 ;; *************** function _USBCtrlTrfTxService *****************
 30122 ;; Defined at:
 30123 ;;		line 1772 in file "../My_library/usb/usb_device.c"
 30124 ;; Parameters:    Size  Location     Type
 30125 ;;		None
 30126 ;; Auto vars:     Size  Location     Type
 30127 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30128 ;; Return value:  Size  Location     Type
 30129 ;;		None               void
 30130 ;; Registers used:
 30131 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30132 ;; Tracked objects:
 30133 ;;		On entry : 0/0
 30134 ;;		On exit  : 0/0
 30135 ;;		Unchanged: 0/0
 30136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30140 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30141 ;;Total ram usage:        1 bytes
 30142 ;; Hardware stack levels used:    1
 30143 ;; This function calls:
 30144 ;;		Nothing
 30145 ;; This function is called by:
 30146 ;;		_USBCtrlEPAllowDataStage
 30147 ;;		_USBCtrlTrfInHandler
 30148 ;; This function uses a non-reentrant model
 30149 ;;
 30150                           
 30151                           	psect	text131
 30152  01481C                     __ptext131:
 30153                           	opt stack 0
 30154  01481C                     _USBCtrlTrfTxService:
 30155                           	opt stack 14
 30156                           
 30157                           ;usb_device.c: 1774: uint8_t byteToSend;
 30158                           ;usb_device.c: 1778: byteToSend = 8;
 30159                           
 30160                           ;incstack = 0
 30161  01481C  0E08               	movlw	8
 30162  01481E  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 30163                           
 30164                           ;usb_device.c: 1779: if(inPipes[0].wCount.Val < (uint8_t)8)
 30165  014820  0100               	movlb	0	; () banked
 30166  014822  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30167  014824  E111               	bnz	i2l7017
 30168  014826  0E08               	movlw	8
 30169  014828  0100               	movlb	0	; () banked
 30170  01482A  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30171  01482C  B0D8               	btfsc	status,0,c
 30172  01482E  D00C               	goto	i2l7017
 30173                           
 30174                           ; BSR set to: 0
 30175                           ;usb_device.c: 1780: {
 30176                           ;usb_device.c: 1781: byteToSend = inPipes[0].wCount.Val;
 30177  014830  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30178                           
 30179                           ; BSR set to: 0
 30180                           ;usb_device.c: 1788: if(shortPacketStatus == 0)
 30181  014834  5021               	movf	_shortPacketStatus,w,c	;volatile
 30182  014836  A4D8               	btfss	status,2,c
 30183  014838  D002               	goto	i2l7013
 30184                           
 30185                           ; BSR set to: 0
 30186                           ;usb_device.c: 1789: {
 30187                           ;usb_device.c: 1790: shortPacketStatus = 1;
 30188  01483A  0E01               	movlw	1
 30189  01483C  D004               	goto	L22
 30190  01483E                     i2l7013:
 30191                           
 30192                           ; BSR set to: 0
 30193                           ;usb_device.c: 1792: else if(shortPacketStatus == 1)
 30194  01483E  0421               	decf	_shortPacketStatus,w,c	;volatile
 30195  014840  A4D8               	btfss	status,2,c
 30196  014842  D002               	goto	i2l7017
 30197                           
 30198                           ; BSR set to: 0
 30199                           ;usb_device.c: 1793: {
 30200                           ;usb_device.c: 1794: shortPacketStatus = 2;
 30201  014844  0E02               	movlw	2
 30202  014846                     L22:
 30203  014846  6E21               	movwf	_shortPacketStatus,c	;volatile
 30204  014848                     i2l7017:
 30205                           
 30206                           ; BSR set to: 0
 30207                           ;usb_device.c: 1795: }
 30208                           ;usb_device.c: 1796: }
 30209                           ;usb_device.c: 1800: inPipes[0].wCount.Val -= byteToSend;
 30210  014848  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30211  01484A  0100               	movlb	0	; () banked
 30212  01484C  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30213  01484E  0E00               	movlw	0
 30214  014850  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30215                           
 30216                           ; BSR set to: 0
 30217                           ;usb_device.c: 1805: pBDTEntryIn[0]->CNT = byteToSend;
 30218  014852  0100               	movlb	0	; () banked
 30219  014854  EE20 F001          	lfsr	2,1
 30220  014858  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 30221  01485A  26D9               	addwf	fsr2l,f,c
 30222  01485C  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30223  01485E  22DA               	addwfc	fsr2h,f,c
 30224  014860  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30225                           
 30226                           ; BSR set to: 0
 30227                           ;usb_device.c: 1809: pDst = (volatile uint8_t*)CtrlTrfData;
 30228  014864  0E38               	movlw	56
 30229  014866  0101               	movlb	1	; () banked
 30230  014868  6F12               	movwf	_pDst& (0+255),b
 30231  01486A  0E0D               	movlw	13
 30232  01486C  0101               	movlb	1	; () banked
 30233  01486E  6F13               	movwf	(_pDst+1)& (0+255),b
 30234                           
 30235                           ; BSR set to: 1
 30236                           ;usb_device.c: 1810: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30237  014870  0100               	movlb	0	; () banked
 30238  014872  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30239  014874  D01E               	goto	i2l7035
 30240  014876  D03E               	goto	i2l7045
 30241  014878                     i2l7027:
 30242                           
 30243                           ;usb_device.c: 1813: {
 30244                           ;usb_device.c: 1814: *pDst++ = *inPipes[0].pSrc.bRom++;
 30245  014878  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 30246  01487C  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30247  014880  0E00               	movlw	low (__mediumconst shr (0+16))
 30248  014882  6EF8               	movwf	tblptru,c
 30249  014884  C112  FFD9         	movff	_pDst,fsr2l
 30250  014888  C113  FFDA         	movff	_pDst+1,fsr2h
 30251  01488C  0E0E               	movlw	(high __ramtop+-1)
 30252  01488E  64F7               	cpfsgt	tblptrh,c
 30253  014890  D003               	bra	i2u610_47
 30254  014892  0008               	tblrd		*
 30255  014894  50F5               	movf	tablat,w,c
 30256  014896  D005               	bra	i2u610_40
 30257  014898                     i2u610_47:
 30258  014898  CFF6 FFE9          	movff	tblptrl,fsr0l
 30259  01489C  CFF7 FFEA          	movff	tblptrh,fsr0h
 30260  0148A0  50EF               	movf	indf0,w,c
 30261  0148A2                     i2u610_40:
 30262  0148A2  6EDF               	movwf	indf2,c
 30263  0148A4  0100               	movlb	0	; () banked
 30264  0148A6  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 30265  0148A8  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30266                           
 30267                           ; BSR set to: 0
 30268  0148AA  0101               	movlb	1	; () banked
 30269  0148AC  4B12               	infsnz	_pDst& (0+255),f,b
 30270  0148AE  2B13               	incf	(_pDst+1)& (0+255),f,b
 30271                           
 30272                           ; BSR set to: 1
 30273                           ;usb_device.c: 1815: byteToSend--;
 30274  0148B0  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30275  0148B2                     i2l7035:
 30276  0148B2  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30277  0148B4  B4D8               	btfsc	status,2,c
 30278  0148B6  0012               	return	
 30279  0148B8  D7DF               	goto	i2l7027
 30280  0148BA                     i2l7037:
 30281                           
 30282                           ;usb_device.c: 1821: {
 30283                           ;usb_device.c: 1822: *pDst++ = *inPipes[0].pSrc.bRam++;
 30284  0148BA  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 30285  0148BE  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30286  0148C2  0E00               	movlw	low (__mediumconst shr (0+16))
 30287  0148C4  6EF8               	movwf	tblptru,c
 30288  0148C6  C112  FFD9         	movff	_pDst,fsr2l
 30289  0148CA  C113  FFDA         	movff	_pDst+1,fsr2h
 30290  0148CE  0E0E               	movlw	(high __ramtop+-1)
 30291  0148D0  64F7               	cpfsgt	tblptrh,c
 30292  0148D2  D003               	bra	i2u612_47
 30293  0148D4  0008               	tblrd		*
 30294  0148D6  50F5               	movf	tablat,w,c
 30295  0148D8  D005               	bra	i2u612_40
 30296  0148DA                     i2u612_47:
 30297  0148DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 30298  0148DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 30299  0148E2  50EF               	movf	indf0,w,c
 30300  0148E4                     i2u612_40:
 30301  0148E4  6EDF               	movwf	indf2,c
 30302  0148E6  0100               	movlb	0	; () banked
 30303  0148E8  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 30304  0148EA  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30305                           
 30306                           ; BSR set to: 0
 30307  0148EC  0101               	movlb	1	; () banked
 30308  0148EE  4B12               	infsnz	_pDst& (0+255),f,b
 30309  0148F0  2B13               	incf	(_pDst+1)& (0+255),f,b
 30310                           
 30311                           ; BSR set to: 1
 30312                           ;usb_device.c: 1823: byteToSend--;
 30313  0148F2  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30314  0148F4                     i2l7045:
 30315  0148F4  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30316  0148F6  B4D8               	btfsc	status,2,c
 30317  0148F8  0012               	return	
 30318  0148FA  D7DF               	goto	i2l7037
 30319  0148FC                     __end_of_USBCtrlTrfTxService:
 30320                           	opt stack 0
 30321                           pclatu	equ	0xFFB
 30322                           pclath	equ	0xFFA
 30323                           tblptru	equ	0xFF8
 30324                           tblptrh	equ	0xFF7
 30325                           tblptrl	equ	0xFF6
 30326                           tablat	equ	0xFF5
 30327                           prodh	equ	0xFF4
 30328                           prodl	equ	0xFF3
 30329                           intcon	equ	0xFF2
 30330                           intcon2	equ	0xFF1
 30331                           indf0	equ	0xFEF
 30332                           postinc0	equ	0xFEE
 30333                           fsr0h	equ	0xFEA
 30334                           fsr0l	equ	0xFE9
 30335                           wreg	equ	0xFE8
 30336                           indf1	equ	0xFE7
 30337                           postinc1	equ	0xFE6
 30338                           postdec1	equ	0xFE5
 30339                           fsr1h	equ	0xFE2
 30340                           fsr1l	equ	0xFE1
 30341                           indf2	equ	0xFDF
 30342                           postinc2	equ	0xFDE
 30343                           postdec2	equ	0xFDD
 30344                           plusw2	equ	0xFDB
 30345                           fsr2h	equ	0xFDA
 30346                           fsr2l	equ	0xFD9
 30347                           status	equ	0xFD8
 30348                           
 30349 ;; *************** function _LED_indicator *****************
 30350 ;; Defined at:
 30351 ;;		line 22 in file "ChargeStation_task.c"
 30352 ;; Parameters:    Size  Location     Type
 30353 ;;		None
 30354 ;; Auto vars:     Size  Location     Type
 30355 ;;  i               1   11[COMRAM] unsigned char 
 30356 ;; Return value:  Size  Location     Type
 30357 ;;		None               void
 30358 ;; Registers used:
 30359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30360 ;; Tracked objects:
 30361 ;;		On entry : 0/0
 30362 ;;		On exit  : 0/0
 30363 ;;		Unchanged: 0/0
 30364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30367 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30369 ;;Total ram usage:        4 bytes
 30370 ;; Hardware stack levels used:    1
 30371 ;; Hardware stack levels required when called:    1
 30372 ;; This function calls:
 30373 ;;		i2_LED_output
 30374 ;;		i2___awdiv
 30375 ;;		i2___lwdiv
 30376 ;; This function is called by:
 30377 ;;		_ISR
 30378 ;; This function uses a non-reentrant model
 30379 ;;
 30380                           
 30381                           	psect	text132
 30382  013B78                     __ptext132:
 30383                           	opt stack 0
 30384  013B78                     _LED_indicator:
 30385                           	opt stack 19
 30386                           
 30387                           ;ChargeStation_task.c: 23: uint8_t i;
 30388                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 30389                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 30390                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 30391                           
 30392                           ;incstack = 0
 30393  013B78  0E00               	movlw	0
 30394  013B7A  6E38               	movwf	LED_indicator@i,c
 30395  013B7C                     i2l10003:
 30396  013B7C  0E02               	movlw	2
 30397  013B7E  6438               	cpfsgt	LED_indicator@i,c
 30398  013B80  D001               	goto	i2l10007
 30399  013B82  0012               	return	
 30400  013B84                     i2l10007:
 30401                           
 30402                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 30403  013B84  5038               	movf	LED_indicator@i,w,c
 30404  013B86  0D17               	mullw	23
 30405  013B88  0E16               	movlw	22
 30406  013B8A  26F3               	addwf	prodl,f,c
 30407  013B8C  0E00               	movlw	0
 30408  013B8E  22F4               	addwfc	prodh,f,c
 30409  013B90  0E2E               	movlw	low _port
 30410  013B92  24F3               	addwf	prodl,w,c
 30411  013B94  6ED9               	movwf	fsr2l,c
 30412  013B96  0E01               	movlw	high _port
 30413  013B98  20F4               	addwfc	prodh,w,c
 30414  013B9A  6EDA               	movwf	fsr2h,c
 30415  013B9C  0101               	movlb	1	; () banked
 30416  013B9E  A2DF               	btfss	indf2,1,c
 30417  013BA0  D07C               	goto	i2l10027
 30418                           
 30419                           ; BSR set to: 1
 30420                           ;ChargeStation_task.c: 29: cnt[i]++;
 30421  013BA2  5038               	movf	LED_indicator@i,w,c
 30422  013BA4  0D01               	mullw	1
 30423  013BA6  0E12               	movlw	low LED_indicator@cnt
 30424  013BA8  24F3               	addwf	prodl,w,c
 30425  013BAA  6ED9               	movwf	fsr2l,c
 30426  013BAC  0E02               	movlw	high LED_indicator@cnt
 30427  013BAE  20F4               	addwfc	prodh,w,c
 30428  013BB0  6EDA               	movwf	fsr2h,c
 30429  013BB2  2ADF               	incf	indf2,f,c
 30430                           
 30431                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 30432  013BB4  5038               	movf	LED_indicator@i,w,c
 30433  013BB6  0D01               	mullw	1
 30434  013BB8  0E12               	movlw	low LED_indicator@cnt
 30435  013BBA  24F3               	addwf	prodl,w,c
 30436  013BBC  6ED9               	movwf	fsr2l,c
 30437  013BBE  0E02               	movlw	high LED_indicator@cnt
 30438  013BC0  20F4               	addwfc	prodh,w,c
 30439  013BC2  6EDA               	movwf	fsr2h,c
 30440  013BC4  0102               	movlb	2	; () banked
 30441  013BC6  A0DF               	btfss	indf2,0,c
 30442  013BC8  D006               	goto	i2l10013
 30443                           
 30444                           ; BSR set to: 2
 30445                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 30446  013BCA  0E00               	movlw	0
 30447  013BCC  6E2D               	movwf	i2LED_output@value,c
 30448  013BCE  5038               	movf	LED_indicator@i,w,c
 30449  013BD0  EC09  F0B2         	call	i2_LED_output
 30450                           
 30451                           ;ChargeStation_task.c: 32: } else {
 30452  013BD4  D062               	goto	i2l10027
 30453  013BD6                     i2l10013:
 30454                           
 30455                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 30456  013BD6  5038               	movf	LED_indicator@i,w,c
 30457  013BD8  0D17               	mullw	23
 30458  013BDA  0E06               	movlw	6
 30459  013BDC  26F3               	addwf	prodl,f,c
 30460  013BDE  0E00               	movlw	0
 30461  013BE0  22F4               	addwfc	prodh,f,c
 30462  013BE2  0E2E               	movlw	low _port
 30463  013BE4  24F3               	addwf	prodl,w,c
 30464  013BE6  6ED9               	movwf	fsr2l,c
 30465  013BE8  0E01               	movlw	high _port
 30466  013BEA  20F4               	addwfc	prodh,w,c
 30467  013BEC  6EDA               	movwf	fsr2h,c
 30468  013BEE  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 30469  013BF2  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 30470  013BF6  0E00               	movlw	0
 30471  013BF8  6E30               	movwf	i2___lwdiv@divisor+1,c
 30472  013BFA  0E64               	movlw	100
 30473  013BFC  6E2F               	movwf	i2___lwdiv@divisor,c
 30474  013BFE  EC08  F0B4         	call	i2___lwdiv	;wreg free
 30475  013C02  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 30476  013C06  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 30477  013C0A  5038               	movf	LED_indicator@i,w,c
 30478  013C0C  0D01               	mullw	1
 30479  013C0E  0E12               	movlw	low LED_indicator@cnt
 30480  013C10  24F3               	addwf	prodl,w,c
 30481  013C12  6ED9               	movwf	fsr2l,c
 30482  013C14  0E02               	movlw	high LED_indicator@cnt
 30483  013C16  20F4               	addwfc	prodh,w,c
 30484  013C18  6EDA               	movwf	fsr2h,c
 30485  013C1A  50DF               	movf	indf2,w,c
 30486  013C1C  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 30487  013C1E  5037               	movf	??_LED_indicator+2,w,c
 30488  013C20  6E2D               	movwf	i2___awdiv@dividend,c
 30489  013C22  6A2E               	clrf	i2___awdiv@dividend+1,c
 30490  013C24  0E00               	movlw	0
 30491  013C26  6E30               	movwf	i2___awdiv@divisor+1,c
 30492  013C28  0E02               	movlw	2
 30493  013C2A  6E2F               	movwf	i2___awdiv@divisor,c
 30494  013C2C  EC1F  F0AF         	call	i2___awdiv	;wreg free
 30495  013C30  502D               	movf	?i2___awdiv,w,c
 30496  013C32  5C35               	subwf	??_LED_indicator,w,c
 30497  013C34  502E               	movf	?i2___awdiv+1,w,c
 30498  013C36  5836               	subwfb	??_LED_indicator+1,w,c
 30499  013C38  A0D8               	btfss	status,0,c
 30500  013C3A  D00C               	goto	i2l10019
 30501                           
 30502                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 30503  013C3C  0E01               	movlw	1
 30504  013C3E  6E2D               	movwf	i2LED_output@value,c
 30505  013C40  5038               	movf	LED_indicator@i,w,c
 30506  013C42  EC09  F0B2         	call	i2_LED_output
 30507                           
 30508                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 30509  013C46  5038               	movf	LED_indicator@i,w,c
 30510  013C48  0D01               	mullw	1
 30511  013C4A  0E15               	movlw	low LED_indicator@cntf
 30512  013C4C  24F3               	addwf	prodl,w,c
 30513  013C4E  6ED9               	movwf	fsr2l,c
 30514  013C50  0E02               	movlw	high LED_indicator@cntf
 30515  013C52  D01F               	goto	L23
 30516  013C54                     i2l10019:
 30517                           
 30518                           ;ChargeStation_task.c: 37: cntf[i]++;
 30519  013C54  5038               	movf	LED_indicator@i,w,c
 30520  013C56  0D01               	mullw	1
 30521  013C58  0E15               	movlw	low LED_indicator@cntf
 30522  013C5A  24F3               	addwf	prodl,w,c
 30523  013C5C  6ED9               	movwf	fsr2l,c
 30524  013C5E  0E02               	movlw	high LED_indicator@cntf
 30525  013C60  20F4               	addwfc	prodh,w,c
 30526  013C62  6EDA               	movwf	fsr2h,c
 30527  013C64  2ADF               	incf	indf2,f,c
 30528                           
 30529                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 30530  013C66  0E00               	movlw	0
 30531  013C68  6E2D               	movwf	i2LED_output@value,c
 30532  013C6A  5038               	movf	LED_indicator@i,w,c
 30533  013C6C  EC09  F0B2         	call	i2_LED_output
 30534                           
 30535                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 30536  013C70  5038               	movf	LED_indicator@i,w,c
 30537  013C72  0D01               	mullw	1
 30538  013C74  0E15               	movlw	low LED_indicator@cntf
 30539  013C76  24F3               	addwf	prodl,w,c
 30540  013C78  6ED9               	movwf	fsr2l,c
 30541  013C7A  0E02               	movlw	high LED_indicator@cntf
 30542  013C7C  20F4               	addwfc	prodh,w,c
 30543  013C7E  6EDA               	movwf	fsr2h,c
 30544  013C80  0E01               	movlw	1
 30545  013C82  64DF               	cpfsgt	indf2,c
 30546  013C84  D00A               	goto	i2l10027
 30547                           
 30548                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 30549  013C86  5038               	movf	LED_indicator@i,w,c
 30550  013C88  0D01               	mullw	1
 30551  013C8A  0E12               	movlw	low LED_indicator@cnt
 30552  013C8C  24F3               	addwf	prodl,w,c
 30553  013C8E  6ED9               	movwf	fsr2l,c
 30554  013C90  0E02               	movlw	high LED_indicator@cnt
 30555  013C92                     L23:
 30556  013C92  20F4               	addwfc	prodh,w,c
 30557  013C94  6EDA               	movwf	fsr2h,c
 30558  013C96  0E00               	movlw	0
 30559  013C98  6EDF               	movwf	indf2,c
 30560  013C9A                     i2l10027:
 30561  013C9A  2A38               	incf	LED_indicator@i,f,c
 30562  013C9C  D76F               	goto	i2l10003
 30563  013C9E                     __end_of_LED_indicator:
 30564                           	opt stack 0
 30565                           pclatu	equ	0xFFB
 30566                           pclath	equ	0xFFA
 30567                           tblptru	equ	0xFF8
 30568                           tblptrh	equ	0xFF7
 30569                           tblptrl	equ	0xFF6
 30570                           tablat	equ	0xFF5
 30571                           prodh	equ	0xFF4
 30572                           prodl	equ	0xFF3
 30573                           intcon	equ	0xFF2
 30574                           intcon2	equ	0xFF1
 30575                           indf0	equ	0xFEF
 30576                           postinc0	equ	0xFEE
 30577                           fsr0h	equ	0xFEA
 30578                           fsr0l	equ	0xFE9
 30579                           wreg	equ	0xFE8
 30580                           indf1	equ	0xFE7
 30581                           postinc1	equ	0xFE6
 30582                           postdec1	equ	0xFE5
 30583                           fsr1h	equ	0xFE2
 30584                           fsr1l	equ	0xFE1
 30585                           indf2	equ	0xFDF
 30586                           postinc2	equ	0xFDE
 30587                           postdec2	equ	0xFDD
 30588                           plusw2	equ	0xFDB
 30589                           fsr2h	equ	0xFDA
 30590                           fsr2l	equ	0xFD9
 30591                           status	equ	0xFD8
 30592                           
 30593 ;; *************** function i2___lwdiv *****************
 30594 ;; Defined at:
 30595 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 30596 ;; Parameters:    Size  Location     Type
 30597 ;;  dividend        2    0[COMRAM] unsigned int 
 30598 ;;  divisor         2    2[COMRAM] unsigned int 
 30599 ;; Auto vars:     Size  Location     Type
 30600 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 30601 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 30602 ;; Return value:  Size  Location     Type
 30603 ;;                  2    0[COMRAM] unsigned int 
 30604 ;; Registers used:
 30605 ;;		wreg, status,2, status,0
 30606 ;; Tracked objects:
 30607 ;;		On entry : 0/0
 30608 ;;		On exit  : 0/0
 30609 ;;		Unchanged: 0/0
 30610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30612 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30614 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30615 ;;Total ram usage:        7 bytes
 30616 ;; Hardware stack levels used:    1
 30617 ;; This function calls:
 30618 ;;		Nothing
 30619 ;; This function is called by:
 30620 ;;		_LED_indicator
 30621 ;; This function uses a non-reentrant model
 30622 ;;
 30623                           
 30624                           	psect	text133
 30625  016810                     __ptext133:
 30626                           	opt stack 0
 30627  016810                     i2___lwdiv:
 30628                           	opt stack 19
 30629                           
 30630                           ;incstack = 0
 30631  016810  0E00               	movlw	0
 30632  016812  6E32               	movwf	i2___lwdiv@quotient+1,c
 30633  016814  0E00               	movlw	0
 30634  016816  6E31               	movwf	i2___lwdiv@quotient,c
 30635  016818  502F               	movf	i2___lwdiv@divisor,w,c
 30636  01681A  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 30637  01681C  B4D8               	btfsc	status,2,c
 30638  01681E  D01C               	goto	i2l2471
 30639  016820  0E01               	movlw	1
 30640  016822  6E33               	movwf	i2___lwdiv@counter,c
 30641  016824  D004               	goto	i2l9775
 30642  016826                     i2l9773:
 30643  016826  90D8               	bcf	status,0,c
 30644  016828  362F               	rlcf	i2___lwdiv@divisor,f,c
 30645  01682A  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 30646  01682C  2A33               	incf	i2___lwdiv@counter,f,c
 30647  01682E                     i2l9775:
 30648  01682E  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 30649  016830  D7FA               	goto	i2l9773
 30650  016832                     i2l9777:
 30651  016832  90D8               	bcf	status,0,c
 30652  016834  3631               	rlcf	i2___lwdiv@quotient,f,c
 30653  016836  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 30654  016838  502F               	movf	i2___lwdiv@divisor,w,c
 30655  01683A  5C2D               	subwf	i2___lwdiv@dividend,w,c
 30656  01683C  5030               	movf	i2___lwdiv@divisor+1,w,c
 30657  01683E  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 30658  016840  A0D8               	btfss	status,0,c
 30659  016842  D005               	goto	i2l9785
 30660  016844  502F               	movf	i2___lwdiv@divisor,w,c
 30661  016846  5E2D               	subwf	i2___lwdiv@dividend,f,c
 30662  016848  5030               	movf	i2___lwdiv@divisor+1,w,c
 30663  01684A  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 30664  01684C  8031               	bsf	i2___lwdiv@quotient,0,c
 30665  01684E                     i2l9785:
 30666  01684E  90D8               	bcf	status,0,c
 30667  016850  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 30668  016852  322F               	rrcf	i2___lwdiv@divisor,f,c
 30669  016854  2E33               	decfsz	i2___lwdiv@counter,f,c
 30670  016856  D7ED               	goto	i2l9777
 30671  016858                     i2l2471:
 30672  016858  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 30673  01685C  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 30674  016860  0012               	return		;funcret
 30675  016862                     __end_ofi2___lwdiv:
 30676                           	opt stack 0
 30677                           pclatu	equ	0xFFB
 30678                           pclath	equ	0xFFA
 30679                           tblptru	equ	0xFF8
 30680                           tblptrh	equ	0xFF7
 30681                           tblptrl	equ	0xFF6
 30682                           tablat	equ	0xFF5
 30683                           prodh	equ	0xFF4
 30684                           prodl	equ	0xFF3
 30685                           intcon	equ	0xFF2
 30686                           intcon2	equ	0xFF1
 30687                           indf0	equ	0xFEF
 30688                           postinc0	equ	0xFEE
 30689                           fsr0h	equ	0xFEA
 30690                           fsr0l	equ	0xFE9
 30691                           wreg	equ	0xFE8
 30692                           indf1	equ	0xFE7
 30693                           postinc1	equ	0xFE6
 30694                           postdec1	equ	0xFE5
 30695                           fsr1h	equ	0xFE2
 30696                           fsr1l	equ	0xFE1
 30697                           indf2	equ	0xFDF
 30698                           postinc2	equ	0xFDE
 30699                           postdec2	equ	0xFDD
 30700                           plusw2	equ	0xFDB
 30701                           fsr2h	equ	0xFDA
 30702                           fsr2l	equ	0xFD9
 30703                           status	equ	0xFD8
 30704                           
 30705 ;; *************** function i2___awdiv *****************
 30706 ;; Defined at:
 30707 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 30708 ;; Parameters:    Size  Location     Type
 30709 ;;  dividend        2    0[COMRAM] int 
 30710 ;;  divisor         2    2[COMRAM] int 
 30711 ;; Auto vars:     Size  Location     Type
 30712 ;;  __awdiv         2    6[COMRAM] int 
 30713 ;;  __awdiv         1    5[COMRAM] unsigned char 
 30714 ;;  __awdiv         1    4[COMRAM] unsigned char 
 30715 ;; Return value:  Size  Location     Type
 30716 ;;                  2    0[COMRAM] int 
 30717 ;; Registers used:
 30718 ;;		wreg, status,2, status,0
 30719 ;; Tracked objects:
 30720 ;;		On entry : 0/0
 30721 ;;		On exit  : 0/0
 30722 ;;		Unchanged: 0/0
 30723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30725 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30727 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30728 ;;Total ram usage:        8 bytes
 30729 ;; Hardware stack levels used:    1
 30730 ;; This function calls:
 30731 ;;		Nothing
 30732 ;; This function is called by:
 30733 ;;		_LED_indicator
 30734 ;; This function uses a non-reentrant model
 30735 ;;
 30736                           
 30737                           	psect	text134
 30738  015E3E                     __ptext134:
 30739                           	opt stack 0
 30740  015E3E                     i2___awdiv:
 30741                           	opt stack 19
 30742                           
 30743                           ;incstack = 0
 30744  015E3E  0E00               	movlw	0
 30745  015E40  6E32               	movwf	i2___awdiv@sign,c
 30746  015E42  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30747  015E44  D006               	goto	i2l9731
 30748  015E46  6C2F               	negf	i2___awdiv@divisor,c
 30749  015E48  1E30               	comf	i2___awdiv@divisor+1,f,c
 30750  015E4A  B0D8               	btfsc	status,0,c
 30751  015E4C  2A30               	incf	i2___awdiv@divisor+1,f,c
 30752  015E4E  0E01               	movlw	1
 30753  015E50  6E32               	movwf	i2___awdiv@sign,c
 30754  015E52                     i2l9731:
 30755  015E52  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 30756  015E54  D006               	goto	i2l9737
 30757  015E56  6C2D               	negf	i2___awdiv@dividend,c
 30758  015E58  1E2E               	comf	i2___awdiv@dividend+1,f,c
 30759  015E5A  B0D8               	btfsc	status,0,c
 30760  015E5C  2A2E               	incf	i2___awdiv@dividend+1,f,c
 30761  015E5E  0E01               	movlw	1
 30762  015E60  1A32               	xorwf	i2___awdiv@sign,f,c
 30763  015E62                     i2l9737:
 30764  015E62  0E00               	movlw	0
 30765  015E64  6E34               	movwf	i2___awdiv@quotient+1,c
 30766  015E66  0E00               	movlw	0
 30767  015E68  6E33               	movwf	i2___awdiv@quotient,c
 30768  015E6A  502F               	movf	i2___awdiv@divisor,w,c
 30769  015E6C  1030               	iorwf	i2___awdiv@divisor+1,w,c
 30770  015E6E  B4D8               	btfsc	status,2,c
 30771  015E70  D01C               	goto	i2l9759
 30772  015E72  0E01               	movlw	1
 30773  015E74  6E31               	movwf	i2___awdiv@counter,c
 30774  015E76  D004               	goto	i2l9745
 30775  015E78                     i2l9743:
 30776  015E78  90D8               	bcf	status,0,c
 30777  015E7A  362F               	rlcf	i2___awdiv@divisor,f,c
 30778  015E7C  3630               	rlcf	i2___awdiv@divisor+1,f,c
 30779  015E7E  2A31               	incf	i2___awdiv@counter,f,c
 30780  015E80                     i2l9745:
 30781  015E80  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30782  015E82  D7FA               	goto	i2l9743
 30783  015E84                     i2l9747:
 30784  015E84  90D8               	bcf	status,0,c
 30785  015E86  3633               	rlcf	i2___awdiv@quotient,f,c
 30786  015E88  3634               	rlcf	i2___awdiv@quotient+1,f,c
 30787  015E8A  502F               	movf	i2___awdiv@divisor,w,c
 30788  015E8C  5C2D               	subwf	i2___awdiv@dividend,w,c
 30789  015E8E  5030               	movf	i2___awdiv@divisor+1,w,c
 30790  015E90  582E               	subwfb	i2___awdiv@dividend+1,w,c
 30791  015E92  A0D8               	btfss	status,0,c
 30792  015E94  D005               	goto	i2l9755
 30793  015E96  502F               	movf	i2___awdiv@divisor,w,c
 30794  015E98  5E2D               	subwf	i2___awdiv@dividend,f,c
 30795  015E9A  5030               	movf	i2___awdiv@divisor+1,w,c
 30796  015E9C  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 30797  015E9E  8033               	bsf	i2___awdiv@quotient,0,c
 30798  015EA0                     i2l9755:
 30799  015EA0  90D8               	bcf	status,0,c
 30800  015EA2  3230               	rrcf	i2___awdiv@divisor+1,f,c
 30801  015EA4  322F               	rrcf	i2___awdiv@divisor,f,c
 30802  015EA6  2E31               	decfsz	i2___awdiv@counter,f,c
 30803  015EA8  D7ED               	goto	i2l9747
 30804  015EAA                     i2l9759:
 30805  015EAA  5032               	movf	i2___awdiv@sign,w,c
 30806  015EAC  B4D8               	btfsc	status,2,c
 30807  015EAE  D004               	goto	i2l9763
 30808  015EB0  6C33               	negf	i2___awdiv@quotient,c
 30809  015EB2  1E34               	comf	i2___awdiv@quotient+1,f,c
 30810  015EB4  B0D8               	btfsc	status,0,c
 30811  015EB6  2A34               	incf	i2___awdiv@quotient+1,f,c
 30812  015EB8                     i2l9763:
 30813  015EB8  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 30814  015EBC  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 30815  015EC0  0012               	return	
 30816  015EC2                     __end_ofi2___awdiv:
 30817                           	opt stack 0
 30818                           pclatu	equ	0xFFB
 30819                           pclath	equ	0xFFA
 30820                           tblptru	equ	0xFF8
 30821                           tblptrh	equ	0xFF7
 30822                           tblptrl	equ	0xFF6
 30823                           tablat	equ	0xFF5
 30824                           prodh	equ	0xFF4
 30825                           prodl	equ	0xFF3
 30826                           intcon	equ	0xFF2
 30827                           intcon2	equ	0xFF1
 30828                           indf0	equ	0xFEF
 30829                           postinc0	equ	0xFEE
 30830                           fsr0h	equ	0xFEA
 30831                           fsr0l	equ	0xFE9
 30832                           wreg	equ	0xFE8
 30833                           indf1	equ	0xFE7
 30834                           postinc1	equ	0xFE6
 30835                           postdec1	equ	0xFE5
 30836                           fsr1h	equ	0xFE2
 30837                           fsr1l	equ	0xFE1
 30838                           indf2	equ	0xFDF
 30839                           postinc2	equ	0xFDE
 30840                           postdec2	equ	0xFDD
 30841                           plusw2	equ	0xFDB
 30842                           fsr2h	equ	0xFDA
 30843                           fsr2l	equ	0xFD9
 30844                           status	equ	0xFD8
 30845                           
 30846 ;; *************** function i2_LED_output *****************
 30847 ;; Defined at:
 30848 ;;		line 36 in file "io.c"
 30849 ;; Parameters:    Size  Location     Type
 30850 ;;  b               1    wreg     unsigned char 
 30851 ;;  value           1    0[COMRAM] unsigned char 
 30852 ;; Auto vars:     Size  Location     Type
 30853 ;;  b               1    1[COMRAM] unsigned char 
 30854 ;; Return value:  Size  Location     Type
 30855 ;;		None               void
 30856 ;; Registers used:
 30857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30858 ;; Tracked objects:
 30859 ;;		On entry : 0/0
 30860 ;;		On exit  : 0/0
 30861 ;;		Unchanged: 0/0
 30862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30867 ;;Total ram usage:        2 bytes
 30868 ;; Hardware stack levels used:    1
 30869 ;; This function calls:
 30870 ;;		Nothing
 30871 ;; This function is called by:
 30872 ;;		_LED_indicator
 30873 ;; This function uses a non-reentrant model
 30874 ;;
 30875                           
 30876                           	psect	text135
 30877  016412                     __ptext135:
 30878                           	opt stack 0
 30879  016412                     i2_LED_output:
 30880                           	opt stack 19
 30881                           
 30882                           ;incstack = 0
 30883                           ;i2LED_output@b stored from wreg
 30884  016412  6E2E               	movwf	i2LED_output@b,c
 30885                           
 30886                           ;io.c: 37: port[b].flag.led_flag = value;
 30887  016414  502E               	movf	i2LED_output@b,w,c
 30888  016416  0D17               	mullw	23
 30889  016418  0E16               	movlw	22
 30890  01641A  26F3               	addwf	prodl,f,c
 30891  01641C  0E00               	movlw	0
 30892  01641E  22F4               	addwfc	prodh,f,c
 30893  016420  0E2E               	movlw	low _port
 30894  016422  24F3               	addwf	prodl,w,c
 30895  016424  6ED9               	movwf	fsr2l,c
 30896  016426  0E01               	movlw	high _port
 30897  016428  20F4               	addwfc	prodh,w,c
 30898  01642A  6EDA               	movwf	fsr2h,c
 30899  01642C  B02D               	btfsc	i2LED_output@value,0,c
 30900  01642E  D003               	bra	i2u1013_45
 30901  016430  0101               	movlb	1	; () banked
 30902  016432  96DF               	bcf	indf2,3,c
 30903  016434  D002               	bra	i2u1013_46
 30904  016436                     i2u1013_45:
 30905  016436  0101               	movlb	1	; () banked
 30906  016438  86DF               	bsf	indf2,3,c
 30907  01643A                     i2u1013_46:
 30908                           
 30909                           ;io.c: 38: switch (b) {
 30910  01643A  D012               	goto	i2l9721
 30911  01643C                     i2l1704:
 30912                           
 30913                           ;io.c: 40: LATB7 = value;
 30914  01643C  A02D               	btfss	i2LED_output@value,0,c
 30915  01643E  D002               	goto	i2u1014_40
 30916  016440  8E8A               	bsf	3978,7,c	;volatile
 30917  016442  0012               	return	
 30918  016444                     i2u1014_40:
 30919  016444  9E8A               	bcf	3978,7,c	;volatile
 30920                           
 30921                           ;io.c: 41: break;
 30922  016446  0012               	return	
 30923  016448                     i2l1706:
 30924                           
 30925                           ;io.c: 43: LATB6 = value;
 30926  016448  A02D               	btfss	i2LED_output@value,0,c
 30927  01644A  D002               	goto	i2u1016_40
 30928  01644C  8C8A               	bsf	3978,6,c	;volatile
 30929  01644E  0012               	return	
 30930  016450                     i2u1016_40:
 30931  016450  9C8A               	bcf	3978,6,c	;volatile
 30932                           
 30933                           ;io.c: 44: break;
 30934  016452  0012               	return	
 30935  016454                     i2l1707:
 30936                           
 30937                           ;io.c: 46: LATC2 = value;
 30938  016454  A02D               	btfss	i2LED_output@value,0,c
 30939  016456  D002               	goto	i2u1018_40
 30940  016458  848B               	bsf	3979,2,c	;volatile
 30941  01645A  0012               	return	
 30942  01645C                     i2u1018_40:
 30943  01645C  948B               	bcf	3979,2,c	;volatile
 30944                           
 30945                           ;io.c: 48: }
 30946                           
 30947                           ;io.c: 47: break;
 30948  01645E  0012               	return	
 30949  016460                     i2l9721:
 30950  016460  502E               	movf	i2LED_output@b,w,c
 30951                           
 30952                           ; Switch size 1, requested type "space"
 30953                           ; Number of cases is 3, Range of values is 0 to 2
 30954                           ; switch strategies available:
 30955                           ; Name         Instructions Cycles
 30956                           ; simple_byte           10     6 (average)
 30957                           ;	Chosen strategy is simple_byte
 30958  016462  0A00               	xorlw	0	; case 0
 30959  016464  B4D8               	btfsc	status,2,c
 30960  016466  D7EA               	goto	i2l1704
 30961  016468  0A01               	xorlw	1	; case 1
 30962  01646A  B4D8               	btfsc	status,2,c
 30963  01646C  D7ED               	goto	i2l1706
 30964  01646E  0A03               	xorlw	3	; case 2
 30965  016470  A4D8               	btfss	status,2,c
 30966  016472  0012               	return	
 30967  016474  D7EF               	goto	i2l1707
 30968  016476                     __end_ofi2_LED_output:
 30969                           	opt stack 0
 30970                           pclatu	equ	0xFFB
 30971                           pclath	equ	0xFFA
 30972                           tblptru	equ	0xFF8
 30973                           tblptrh	equ	0xFF7
 30974                           tblptrl	equ	0xFF6
 30975                           tablat	equ	0xFF5
 30976                           prodh	equ	0xFF4
 30977                           prodl	equ	0xFF3
 30978                           intcon	equ	0xFF2
 30979                           intcon2	equ	0xFF1
 30980                           indf0	equ	0xFEF
 30981                           postinc0	equ	0xFEE
 30982                           fsr0h	equ	0xFEA
 30983                           fsr0l	equ	0xFE9
 30984                           wreg	equ	0xFE8
 30985                           indf1	equ	0xFE7
 30986                           postinc1	equ	0xFE6
 30987                           postdec1	equ	0xFE5
 30988                           fsr1h	equ	0xFE2
 30989                           fsr1l	equ	0xFE1
 30990                           indf2	equ	0xFDF
 30991                           postinc2	equ	0xFDE
 30992                           postdec2	equ	0xFDD
 30993                           plusw2	equ	0xFDB
 30994                           fsr2h	equ	0xFDA
 30995                           fsr2l	equ	0xFD9
 30996                           status	equ	0xFD8
 30997                           
 30998 ;; *************** function _I2C_ISR *****************
 30999 ;; Defined at:
 31000 ;;		line 44 in file "../My_library/My_I2C.c"
 31001 ;; Parameters:    Size  Location     Type
 31002 ;;		None
 31003 ;; Auto vars:     Size  Location     Type
 31004 ;;		None
 31005 ;; Return value:  Size  Location     Type
 31006 ;;		None               void
 31007 ;; Registers used:
 31008 ;;		wreg, status,2
 31009 ;; Tracked objects:
 31010 ;;		On entry : 0/0
 31011 ;;		On exit  : 0/0
 31012 ;;		Unchanged: 0/0
 31013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31018 ;;Total ram usage:        0 bytes
 31019 ;; Hardware stack levels used:    1
 31020 ;; This function calls:
 31021 ;;		Nothing
 31022 ;; This function is called by:
 31023 ;;		_ISR
 31024 ;; This function uses a non-reentrant model
 31025 ;;
 31026                           
 31027                           	psect	text136
 31028  016E50                     __ptext136:
 31029                           	opt stack 0
 31030  016E50                     _I2C_ISR:
 31031                           	opt stack 20
 31032                           
 31033                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
 31034                           
 31035                           ;incstack = 0
 31036  016E50  B69D               	btfsc	3997,3,c	;volatile
 31037  016E52  A69E               	btfss	3998,3,c	;volatile
 31038  016E54  D003               	goto	i2l9797
 31039                           
 31040                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
 31041  016E56  969E               	bcf	3998,3,c	;volatile
 31042                           
 31043                           ;My_I2C.c: 47: I2C_sent_flag = 1;
 31044  016E58  0E01               	movlw	1
 31045  016E5A  6E0E               	movwf	_I2C_sent_flag,c
 31046  016E5C                     i2l9797:
 31047                           
 31048                           ;My_I2C.c: 48: }
 31049                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
 31050  016E5C  A6A0               	btfss	4000,3,c	;volatile
 31051  016E5E  0012               	return	
 31052  016E60  A6A1               	btfss	4001,3,c	;volatile
 31053  016E62  0012               	return	
 31054                           
 31055                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
 31056  016E64  96A1               	bcf	4001,3,c	;volatile
 31057                           
 31058                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
 31059  016E66  0E01               	movlw	1
 31060  016E68  0101               	movlb	1	; () banked
 31061  016E6A  6F1B               	movwf	_I2C_cfct_flag& (0+255),b
 31062  016E6C  0012               	return	
 31063  016E6E                     __end_of_I2C_ISR:
 31064                           	opt stack 0
 31065                           pclatu	equ	0xFFB
 31066                           pclath	equ	0xFFA
 31067                           tblptru	equ	0xFF8
 31068                           tblptrh	equ	0xFF7
 31069                           tblptrl	equ	0xFF6
 31070                           tablat	equ	0xFF5
 31071                           prodh	equ	0xFF4
 31072                           prodl	equ	0xFF3
 31073                           intcon	equ	0xFF2
 31074                           intcon2	equ	0xFF1
 31075                           indf0	equ	0xFEF
 31076                           postinc0	equ	0xFEE
 31077                           fsr0h	equ	0xFEA
 31078                           fsr0l	equ	0xFE9
 31079                           wreg	equ	0xFE8
 31080                           indf1	equ	0xFE7
 31081                           postinc1	equ	0xFE6
 31082                           postdec1	equ	0xFE5
 31083                           fsr1h	equ	0xFE2
 31084                           fsr1l	equ	0xFE1
 31085                           indf2	equ	0xFDF
 31086                           postinc2	equ	0xFDE
 31087                           postdec2	equ	0xFDD
 31088                           plusw2	equ	0xFDB
 31089                           fsr2h	equ	0xFDA
 31090                           fsr2l	equ	0xFD9
 31091                           status	equ	0xFD8
 31092                           pclatu	equ	0xFFB
 31093                           pclath	equ	0xFFA
 31094                           tblptru	equ	0xFF8
 31095                           tblptrh	equ	0xFF7
 31096                           tblptrl	equ	0xFF6
 31097                           tablat	equ	0xFF5
 31098                           prodh	equ	0xFF4
 31099                           prodl	equ	0xFF3
 31100                           intcon	equ	0xFF2
 31101                           intcon2	equ	0xFF1
 31102                           indf0	equ	0xFEF
 31103                           postinc0	equ	0xFEE
 31104                           fsr0h	equ	0xFEA
 31105                           fsr0l	equ	0xFE9
 31106                           wreg	equ	0xFE8
 31107                           indf1	equ	0xFE7
 31108                           postinc1	equ	0xFE6
 31109                           postdec1	equ	0xFE5
 31110                           fsr1h	equ	0xFE2
 31111                           fsr1l	equ	0xFE1
 31112                           indf2	equ	0xFDF
 31113                           postinc2	equ	0xFDE
 31114                           postdec2	equ	0xFDD
 31115                           plusw2	equ	0xFDB
 31116                           fsr2h	equ	0xFDA
 31117                           fsr2l	equ	0xFD9
 31118                           status	equ	0xFD8
 31119                           
 31120                           	psect	rparam
 31121  0000                     pclatu	equ	0xFFB
 31122                           pclath	equ	0xFFA
 31123                           tblptru	equ	0xFF8
 31124                           tblptrh	equ	0xFF7
 31125                           tblptrl	equ	0xFF6
 31126                           tablat	equ	0xFF5
 31127                           prodh	equ	0xFF4
 31128                           prodl	equ	0xFF3
 31129                           intcon	equ	0xFF2
 31130                           intcon2	equ	0xFF1
 31131                           indf0	equ	0xFEF
 31132                           postinc0	equ	0xFEE
 31133                           fsr0h	equ	0xFEA
 31134                           fsr0l	equ	0xFE9
 31135                           wreg	equ	0xFE8
 31136                           indf1	equ	0xFE7
 31137                           postinc1	equ	0xFE6
 31138                           postdec1	equ	0xFE5
 31139                           fsr1h	equ	0xFE2
 31140                           fsr1l	equ	0xFE1
 31141                           indf2	equ	0xFDF
 31142                           postinc2	equ	0xFDE
 31143                           postdec2	equ	0xFDD
 31144                           plusw2	equ	0xFDB
 31145                           fsr2h	equ	0xFDA
 31146                           fsr2l	equ	0xFD9
 31147                           status	equ	0xFD8
 31148                           
 31149                           	psect	temp
 31150  000059                     btemp:
 31151                           	opt stack 0
 31152  000059                     	ds	1
 31153  0000                     int$flags	set	btemp
 31154                           pclatu	equ	0xFFB
 31155                           pclath	equ	0xFFA
 31156                           tblptru	equ	0xFF8
 31157                           tblptrh	equ	0xFF7
 31158                           tblptrl	equ	0xFF6
 31159                           tablat	equ	0xFF5
 31160                           prodh	equ	0xFF4
 31161                           prodl	equ	0xFF3
 31162                           intcon	equ	0xFF2
 31163                           intcon2	equ	0xFF1
 31164                           indf0	equ	0xFEF
 31165                           postinc0	equ	0xFEE
 31166                           fsr0h	equ	0xFEA
 31167                           fsr0l	equ	0xFE9
 31168                           wreg	equ	0xFE8
 31169                           indf1	equ	0xFE7
 31170                           postinc1	equ	0xFE6
 31171                           postdec1	equ	0xFE5
 31172                           fsr1h	equ	0xFE2
 31173                           fsr1l	equ	0xFE1
 31174                           indf2	equ	0xFDF
 31175                           postinc2	equ	0xFDE
 31176                           postdec2	equ	0xFDD
 31177                           plusw2	equ	0xFDB
 31178                           fsr2h	equ	0xFDA
 31179                           fsr2l	equ	0xFD9
 31180                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        5
    BSS         2378
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     231
    BANK2           256      0     206
    BANK3           256      0     256
    BANK4           256      0     200
    BANK5           256      0     200
    BANK6           256    105     105
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_100(CODE[6]), STR_99(CODE[6]), STR_97(CODE[6]), STR_96(CODE[6]), 
		 -> STR_92(CODE[6]), STR_91(CODE[6]), STR_89(CODE[6]), STR_88(CODE[6]), 
		 -> STR_84(CODE[6]), STR_83(CODE[6]), STR_81(CODE[6]), STR_80(CODE[6]), 
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6175(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6158(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6141(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6175(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6158(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6141(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_65(CODE[2]), STR_64(CODE[6]), STR_61(CODE[5]), STR_60(CODE[11]), 
		 -> STR_59(CODE[6]), STR_58(CODE[1]), STR_57(CODE[12]), STR_56(CODE[3]), 
		 -> STR_55(CODE[9]), STR_54(CODE[9]), STR_52(CODE[2]), STR_51(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), data_out@p(CODE[6]), 
		 -> sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_73(CODE[28]), STR_72(CODE[9]), STR_71(CODE[11]), STR_70(CODE[6]), 
		 -> STR_68(CODE[24]), STR_67(CODE[32]), STR_23(CODE[37]), STR_21(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> display_LCD@str_5618(BANK1[20]), data_out@str(BANK0[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), 
		 -> display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    settings_integrating_reset@strp_6176	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_6175(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_6159	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_6158(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_6142	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_6141(BANK0[20]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_117(CODE[1]), STR_115(CODE[15]), STR_113(CODE[16]), STR_111(CODE[17]), 
		 -> STR_109(CODE[16]), STR_107(CODE[17]), STR_105(CODE[17]), STR_103(CODE[1]), 
		 -> settings_integrating_reset@str_6175(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_95(CODE[1]), settings_led_indicator@str_6158(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_87(CODE[1]), settings_auto_stop@str_6141(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_79(CODE[1]), STR_77(CODE[1]), STR_75(CODE[13]), STR_48(CODE[14]), 
		 -> STR_44(CODE[1]), STR_42(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_116(CODE[1]), STR_114(CODE[9]), STR_112(CODE[9]), STR_110(CODE[9]), 
		 -> STR_108(CODE[9]), STR_106(CODE[9]), STR_104(CODE[9]), STR_102(CODE[1]), 
		 -> STR_101(CODE[1]), STR_98(CODE[17]), STR_94(CODE[1]), STR_93(CODE[1]), 
		 -> STR_90(CODE[17]), STR_86(CODE[1]), STR_85(CODE[1]), STR_82(CODE[17]), 
		 -> STR_78(CODE[1]), STR_76(CODE[1]), STR_74(CODE[15]), STR_47(CODE[15]), 
		 -> STR_43(CODE[1]), STR_41(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_5618(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_50(CODE[16]), 
		 -> STR_49(CODE[12]), STR_46(CODE[13]), STR_45(CODE[17]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6175(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6158(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6141(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_69(CODE[2]), data_out@str(BANK0[30]), STR_66(CODE[18]), STR_63(CODE[36]), 
		 -> STR_62(CODE[24]), STR_53(CODE[434]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK0[4]), port(BANK1[69]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK3[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK3[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_CDC_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_ST7032_cursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_ST7032_cursor
    _normal_task->_data_out
    _settings_task->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_CDC_init->_USBDeviceInit
    _USB_CDC_buffer_init->_ringbuf_init
    _USBDeviceInit->_memset
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_command->_ringbuf_put
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_CDC_task->_ringbuf_pop
    _USB_CDC_task->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _USB_CDC_send->_CDCTxService
    _USB_CDC_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_terminal_task

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  683575
                          _RTCC_task
                        _ST7032_task
                       _USB_CDC_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  248347
                                              0 BANK1      6     2      4
                                              0 BANK6    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  204671
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  126122
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   67977
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   36303
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0   31795
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   13419
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23030
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15398
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   39365
                                             21 BANK0      1     1      0
                                _ADC
                         _LED_output
                                _OUT
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  249161
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   98463
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _ST7032_puts                                          2     0      2   10112
                                             16 BANK0      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (5) _ST7032_put                                           1     1      0    8857
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ST7032_cursor                                        4     3      1   11486
                                             17 BANK0      4     3      1
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   33910
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   12016
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   53096
                           _ADC_init
                          _CTMU_init
                          _RTCC_init
                        _ST7032_init
                       _USB_CDC_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_init                                         0     0      0    3869
                    _USBDeviceAttach
                      _USBDeviceInit
                _USB_CDC_buffer_init
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_buffer_init                                  0     0      0    2328
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   31548
                       _I2C_init_new
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) _ST7032_clear                                         0     0      0   10197
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (5) _ST7032_command                                       2     1      1   10197
                                             15 BANK0      2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _I2C_init_new                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17343
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6946
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6946
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_CDC_task                                         5     5      0   21009
                                             15 BANK0      5     5      0
                        _USB_CDC_get
                       _USB_CDC_send
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_send                                         2     0      2    2839
                                             12 BANK0      2     0      2
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_get                                          1     1      0    4945
                                             13 BANK0      1     1      0
                       _CDCTxService
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4263
                                             15 BANK0      3     3      0
                     _I2C_idle_check
                           _I2C_send
                          _I2C_start
                           _I2C_stop
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_send                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_idle_check                                       2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                            _I2C_ISR
                      _LED_indicator
                        _USB_CDC_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_CDC_ISR                                         0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _APP_DeviceCDCBasicDemoInitialize                    0     0      0    1199
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (11) _I2C_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _ST7032_task
     _I2C_idle_check
     _I2C_send
     _I2C_start
     _I2C_stop
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _USB_CDC_task
     _USB_CDC_get
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
     _USB_CDC_send
       _CDCTxService
         _USBTransferOnePacket
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _ST7032_init
       _I2C_init_new
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _USB_CDC_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
       _USB_CDC_buffer_init
         _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_cursor
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_puts
         _ST7032_put
           _ringbuf_put
             _ringbuf_num
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _LED_output
     _OUT
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _ST7032_clear
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_cursor
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_puts
           _ST7032_put
             _ringbuf_put
               _ringbuf_num
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _I2C_ISR
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_CDC_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     514      36       39.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100     69      69      18       41.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      C8      16       78.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CE      10       80.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E7       7       90.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5A6       8        0.0%
DATA                 0      0     ABA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jan 13 14:00:07 2016

              ?_settings_integrating_reset 002D                                 _USB_SD_Ptr FA79  
                         ??_I2C_idle_check 0060                               ?_display_LCD 002D  
                   _settings_led_indicator 2594                   __end_of_port_button_task 3288  
                settings_adjust_time@state 0127                            _ringbuf_put_num 5EC2  
                             ?_display_dec 00AB                            _ringbuf_put_str 63AE  
                             ___awdiv@sign 0065                                         _ms 020E  
                       __size_of_ANALOG_IN 002C                              _USBDeviceInit 3288  
                      ___wmul@multiplicand 0078                         i2___lwdiv@dividend 002D  
                        ??_RTCC_from_epoch 0091                         __size_of_CDCInitEP 006C  
                             __CFG_CP0$OFF 000000                         __size_of_I2C_start 0004  
              settings_led_indicator@state 012A       USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
     USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                        l207 6ADA  
                                      l208 6AD8                                        l146 32FE  
              __end_of_USBStdGetDscHandler 3686                                        _ADC 6BB2  
                                      l504 300E                                        l530 11E4  
                                      l531 1208                                        l532 122C  
                                      l509 3060                                        l525 1128  
                                      l526 1150                                        l710 688C  
                                      l527 1176                                        l528 119C  
                                      l529 11C0                                        l705 6A18  
                                      l724 6BD2                                        l735 54BC  
                                      l920 1944                                        l905 16A0  
                                      _BDT 000D00                                        l774 5EC4  
                                      l952 575E                                        l971 2D36  
                                      l958 4AB2                                        _ISR 1008  
                                      _UIE 000F36                                        _UIR 000F62  
                                      _OUT 618C                              ?_get_quot_rem 0079  
                       caltime_to_epoch@tm 0079                            __end_of_I2C_ISR 6E6E  
                               _USBSuspend 6C38                                        _now 0173  
                        _RTCC_from_caltime 6D5E                               ___awmod@sign 0065  
                     USBStdSetCfgHandler@i 0041                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 3686  
                               _TXSTA1bits 000FAD                             _USBDeviceState 0013  
               __end_of_settings_auto_stop 2A2A                                ?_ST7032_put 002D  
                  _RTCC_adjust_time_cursor 3DB6                         ?_RTCC_from_caltime 008F  
                    ??_USBCtrlTrfRxService 002D                   __size_ofi2_USBDeviceInit 0144  
                           ??_getsUSBUSART 006A                                       ?_ADC 0060  
                 USBEnableEndpoint@options 0035                    _RTCC_adjust_time_toggle 6988  
                                     ?_ISR 002D                           _terminal_at_hand 653A  
                                     ?_OUT 0060                                ?_LED_output 0060  
                                     l2010 0272                                       l2221 438A  
                                     l1525 3230                                       l1541 5028  
                                     l1382 4142                                       l1542 503E  
                                     l1375 40C0                                       l1704 60D8  
                                     l1536 4FB8                                       l1393 6CDA  
                                     l2418 574C                                       l1706 60E6  
                                     l1707 60F4                                       l2428 5BF0  
                                     l1556 4EC8                 USBConfigureEndpoint@handle 0033  
                                     l2471 5FB2                                       l2481 6530  
                                     l1690 61CA                                       l1691 61D8  
                                     l1931 2552                                       l1909 27A6  
                                     l1870 4774                                       l1688 61BC  
                                     OUT@b 0061                                       l1869 47D4  
                                     l1957 2B70                                       l1887 29E8  
                       __CFG_WPFP$PAGE_127 000000                                       l8521 1250  
                                     l8541 131A                                       l8533 12C8  
                                     l8525 1278                                       l8545 1344  
                                     l8537 12F0                                       l8529 12A0  
                                     l8553 1396                                       l8549 136E  
                                     STR_1 FDFC                                       STR_2 FF7F  
                                     STR_4 FFFB                                       STR_7 FFFD  
                                     STR_9 FFF9                      ??_USBCtrlTrfTxService 002D  
                                     u8410 1306                                       u8420 1330  
                                     u8430 135A                                       _UCFG 000F39  
                                     u8440 1384                                       _UEP0 000F26  
                                     _UEP1 000F27                                       _UEIE 000F37  
                                     _UEIR 000F63                                       _UCON 000F65  
                             __CFG_WDTPS$8 000000                            _CDCDataInHandle 010E  
                              display@item 0064                        ??_RTCC_from_caltime 0091  
                              display@str0 0060                                display@str1 0062  
   USBStdFeatureReqHandler@current_ep_data 0044                                       _pDst 0112  
                                     _atoi 42A2                                       _main 5FBC  
                 ??i2_USBTransferOnePacket 0031                   button_timer_interrupt@bt 0083  
                            _software_init 5524                                       _port 012E  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                       i2___lwdiv@quotient 0031                                       indf0 000FEF  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                                     indf1 000FE7                                _BaudRateGen 020A  
                                     fsr1l 000FE1                                       indf2 000FDF  
                                     fsr2l 000FD9                            _USBDeviceAttach 6AAC  
                                     btemp 0059                     __CFG_DSWDTOSC$T1OSCREF 000000  
                                     pclat 000FFA                                       prodh 000FF4  
                                     prodl 000FF3                           __end_of_I2C_send 6F10  
                                     start 10FA                           __end_of_I2C_stop 6F20  
                         __end_of_ADC_init 6DF0                              __CFG_IESO$OFF 000000  
               RTCC_adjust_time_dec@i_3753 0097                         __size_of_CTMU_init 0028  
                       __size_of_CTMU_read 00C2                 __end_of_USBCheckStdRequest 4486  
                   ??_USBCtrlTrfOutHandler 002F                               ?_ST7032_init 002D  
                             ?_ST7032_task 002D                             terminal_task@i 0668  
                             ?_ST7032_puts 0070                               ___param_bank 000010  
                ??_USBStdFeatureReqHandler 0041                            ??_terminal_task 0196  
                          ??_terminal_time 00DA                                      ??_ADC 0062  
                       terminal_task@ascii 0667                                      ADC@ch 0063  
                            ADC_init@p_ref 0060                                      ??_ISR 004B  
                                    ??_OUT 0061                   ??_USBStdGetStatusHandler 002D  
                             print_time@tx 00AB                          _terminal_data_out 0124  
                           ?_USBDeviceInit 002D                          ??_RTCC_to_caltime 0064  
                            __CFG_PLLDIV$2 000000                               _BAUDCON1bits 000F7E  
                                    l11021 014A                                      l11111 040E  
                                    l11103 03DC                                      l11007 0100  
                                    l11201 547E                                      l11105 03E8  
                                    l11041 021E                                      l11033 01CE  
                                    l11017 0138                                      l11009 0106  
                                    l11051 0294                                      l11035 01E6  
                                    l11027 01B0                                      l11019 0144  
                                    l12011 2640                                      l11205 5488  
                                    l11125 04D8                                      l11117 042E  
                                    l11061 02D8                                      l11029 01BC  
                                    l11045 0236                                      l11301 16C8  
                                    l12005 2614                                      l11119 043E  
                                    l11063 02DE                                      l11127 04EE  
                                    l11143 65A4                                      l12111 24F6  
                                    l12103 24AC                                      l12015 264A  
                                    l11233 54DE                                      l11081 034C  
                                    l11129 050E                                      l11401 6710  
                                    l11145 65AA                                      l11321 17D6  
                                    l11313 17A4                                      l11305 16F4  
                                    l12113 250E                                      l12121 253C  
                                    l12033 274A                                      l12041 2772  
                                    l12025 2706                                      l12009 263A  
                                    l11163 6B24                                      l11075 032A  
                                    l11147 65BA                                      l12107 24B6  
                                    l12035 2762                                      l12043 2790  
                                    l11181 4A2C                                      l11173 49F8  
                                    l11085 0384                                      l11405 673C  
                                    l11149 65C6                                      l11253 632A  
                                    l11333 18B0                                      l11317 17CC  
                                    l11309 1720                                      l12029 2710  
                                    l10711 4986                                      l11167 6B36  
                                    l11095 03B4                                      l11087 038E  
                                    l11271 3DDE                                      l11351 196C  
                                    l11327 183C                                      l11335 18C8  
                                    l12119 251E                                      l12127 2542  
                                    l11423 65FC                                      l10721 6044  
                                    l11193 4A92                                      l11505 5F62  
                                    l12153 6522                                      l12145 64EC  
                                    l11257 6A7E                                      l11329 1844  
                                    l11265 69B0                                      l12137 2590  
                                    l12073 2354                                      l12065 2338  
                                    l12049 2796                                      l11425 6608  
                                    l11611 4F12                                      l12403 6E0A  
                                    l10803 4DEE                                      l11507 5F6E  
                                    l12147 64F8                                      l11259 6A8A  
                                    l11291 3EA6                                      l11283 3E56  
                                    l11275 3E06                                      l11363 1A48  
                                    l11355 1998                                      l11339 18FC  
                                    l12091 23E8                                      l12059 27E4  
                                    l12251 5EF6                                      l11451 4302  
                                    l11435 42A4                                      l11419 6580  
                                    l10725 606A                                      l10813 1BD0  
                                    l11701 30DA                                      l11517 5FA4  
                                    l11509 5F74                                      l12149 64FE  
                                    l12501 3234                                      l12077 2394  
                                    l12085 23BC                                      l12069 234A  
                                    l11453 434C                                      l11437 42AA  
                                    l11429 6646                                      l10671 59CE  
                                    l10663 59AA                                      l10831 1C5E  
                                    l10815 1BD6                                      l11711 30FC  
                                    l11703 30E4                                      l11623 4F76  
                                    l10751 5640                                      l10743 5616  
                                    l11551 330C                                      l11535 32D4  
                                    l12175 6A30                                      l12431 3B72  
                                    l12415 3A4A                                      l11287 3E7E  
                                    l11279 3E2E                                      l11383 1B54  
                                    l11367 1A70                                      l11359 19C4  
                                    l12095 23F2                                      l12079 23AC  
                                    l12247 5ED4                                      l11455 4352  
                                    l11447 42F0                                      l13127 5FC6  
                                    l10673 59DA                                      l10825 1C3A  
                                    l11713 3120                                      l11617 4F46  
                                    l11609 4F08                                      l10761 5676  
                                    l10753 5646                                      l10737 5600  
                                    l12441 3FCC                                      l11465 6102  
                                    l11473 3934                                      l11377 1AE0  
                                    l11385 1B6C                                      l12089 23E2  
                                    l12513 2A2C                                      l12257 5F36  
                                    l11801 0BC4                                      l12361 21DA  
                                    l12345 210C                                      l10675 59E0  
                                    l10683 5A12                                      l10667 59BA  
                                    l10835 1CC2                                      l10819 1BE0  
                                    l10827 1C3E                                      l12267 51F2  
                                    l12275 520E                                      l11651 2FE8  
                                    l11619 4F4C                                      l11627 4FA6  
                                    l11643 6E2C                                      l10931 2DA8  
                                    l11563 3344                                      l11539 32DE  
                                    l12187 688E                                      l12419 3A54  
                                    l11483 398E                                      l12507 3282  
                                    l11379 1AE8                                      l12531 2A7A  
                                    l11811 0C8A                                      l12363 21E0  
                                    l12347 2124                                      l13171 6026  
                                    l12269 5208                                      l11709 30F8  
                                    l11653 2FF2                                      l10781 56E0  
                                    l10749 5634                                      l10765 5684  
                                    l10933 2DAC                                      l11573 33B4  
                                    l12429 3B50                                      l10861 6CB0  
                                    l12621 069C                                      l12605 055C  
                                    l12437 3FC2                                      l12461 64D2  
                                    l12453 647C                                      l11493 39FE  
                                    l11389 1BA0                                      l11901 4818  
                                    l12541 2A9E                                      l12533 2A80  
                                    l12285 5CDA                                      l11821 0D52  
                                    l11805 0C0A                                      l12373 2276  
                                    l10687 5A26                                      l10679 5A04  
                                    l12711 345E                                      l11663 3018  
                                    l10791 573A                                      l10783 56E6  
                                    l12295 635A                                      l11567 334E  
                                    l11559 3324                                      l11831 6BEA  
                                    l12623 072A                                      l12615 05BE  
                                    l12447 40B2                                      l11487 39BE  
                                    l11479 3962                                      l12471 3134  
                                    l11911 27FC                                      l12551 2AF0  
                                    l12543 2AA4                                      l12519 2A54  
                                    l11815 0CD2                                      l12383 22B6  
                                    l12367 220A                                      l13175 602E  
                                    l12721 34A6                                      l12713 347E  
                                    l11657 3002                                      l10769 5698  
                                    l10937 2DB4                                      l11841 6BF2  
                                    l12625 0772                                      l12641 09A6  
                                    l12457 6486                                      l11497 3A3C  
                                    l12481 31B2                                      l11921 2858  
                                    l12553 2B10                                      l12529 2A78  
                                    l11817 0D0A                                      l11809 0C52  
                                    l12385 22CE                                      l12801 103E  
                                    l10699 44FE                                      l12715 3488  
                                    l11683 3086                                      l11691 30AA  
                                    l11675 3064                                      l10779 56D0  
                                    l11835 6BEE                                      l11827 6BE6  
                                    l11851 61E6                                      l10883 5BDE  
                                    l10875 5B84                                      l11771 15E4  
                                    l12491 3210                                      l12475 3164  
                                    l12467 312A                                      l11931 288E  
                                    l11915 2806                                      l11907 27EA  
                                    l12571 2BC0                                      l12555 2B30  
                                    l12547 2AB0                                      l12539 2A9C  
                                    l12811 10A2                                      l12803 1046  
                                    l12733 34F6                                      l12717 3492  
                                    l12725 34B2                                      l12741 3514  
                                    l11693 30B6                                      l11669 304C  
                                    l10893 63E8                                      l10877 5B94  
                                    l10981 000E                                      l12493 3214  
                                    l11933 2894                                      l12581 2BEC  
                                    l12573 2BC8                                      l12565 2B84  
                                    l12549 2AD0                                      l11781 0A34  
                                    l12389 2316                                      l12719 349C  
                                    l12727 34E2                                      l10879 5B9A  
                                    l12655 2EA6                                      l12639 0992  
                                    l12647 09C4                                      l12495 3218  
                                    l11919 2840                                      l11927 2868  
                                    l12591 2C10                                      l12559 2B50  
                                    l11791 0AFC                                      l12807 1062  
                                    l12737 350A                                      l12729 34EA  
                                    l10889 63B0                                      l10993 0048  
                                    l11769 15CC                                      l11953 298C  
                                    l11961 29B4                                      l11945 2948  
                                    l11937 289E                                      l12585 2BFE  
                                    l12577 2BDA                                      l12905 4E24  
                                    l11785 0A7C                                      l12851 4198  
                                    l10987 002C                                      l12667 2F9A  
                                    l12659 2EB0                                      l12499 321E  
                                    l11883 47A8                                      l11867 473E  
                                    l11891 47C4                                      l11955 29A4  
                                    l11963 29D2                                      l12595 2C32  
                                    l12915 4E50                                      l12931 4ECC  
                                    l11795 0B44                                      l11779 0A28  
                                    l12771 0EBE                                      l12763 0E6C  
                                    l12819 10D8                                      l12755 0DC2  
                                    l12693 341C                                      l12829 40D0  
                                    l12837 410E                                      l10989 003E  
                                    l11877 478E                                      l11949 2952  
                                    l12861 4FE6                                      l12925 4E8E  
                                    l12909 4E2E                                      l11797 0B7C  
                                    l11789 0AC4                                      l12781 0F14  
                                    l12773 0EC2                                      l12765 0E70  
                                    l12847 416C                                      l12839 412A  
                                    l10999 0080                                      l12599 0522  
                                    l12759 0DEC                                      l12689 33F8  
                                    l11969 29D8                                      l11993 25B2  
                                    l11985 2596                                      l12873 5012  
                                    l12865 4FFC                                      l12699 342C  
                                    l11979 2A26                                      l12891 5050  
                                    l12867 5000                                      l12795 0FEA  
                                    l12787 0F62                                      l12779 0F10  
                                    l11997 25EC                                      l11989 25A8  
                                    l12973 555C                                      l12797 1014  
                                    l12789 0F66                                      l11999 2604  
                                    l12985 55DC                                      l12969 5552  
                              _writeBuffer 03C0                  __end_of_RTCC_from_caltime 6D84  
                                    ?_atoi 007C                                      ?_main 002D  
                           ??_get_quot_rem 007D                            __end_of___awdiv 56A2  
                                    _ADRES 000FC3                                      STR_10 FFE6  
                                    STR_11 FFFB                                      STR_20 FFE3  
                                    STR_12 FFFB                                      STR_13 FFF7  
                                    STR_14 FF8F                                      STR_30 FFD9  
                                    STR_31 FFF3                                      STR_15 FF79  
                                    STR_23 FD98                                      STR_16 FFFD  
                                    STR_32 FFC9                                      STR_40 FF91  
                                    STR_24 FF82                                      STR_41 FFE6  
                                    STR_17 FF80                                      STR_33 FDFF  
                                    STR_25 FF53                                      STR_42 FFE6  
                                    STR_18 FFF9                                      STR_26 FFEF  
                                    STR_34 FFE7                                      STR_50 FEC3  
                                    STR_43 FFE6                                      STR_35 FE4B  
                                    STR_27 FFEE                                      STR_19 FFE3  
                                    STR_51 FFCF                                      STR_44 FFE6  
                                    STR_52 FFF1                                      STR_36 FFDE  
                                    STR_60 FF48                                      STR_28 FF31  
                          __end_of___awmod 5A30                                      STR_29 FFE9  
                                    STR_37 FFF5                                      STR_61 FFD4  
                                    STR_45 FE92                                      STR_53 FBE6  
                                    STR_70 FFB7                                      STR_38 FF98  
                                    STR_54 FF67                                      STR_46 FF0C  
                                    STR_62 FE1D                                      STR_39 FFBB  
                                    STR_55 FF70                                      STR_71 FF3D  
                                    STR_47 FEE2                                      STR_63 FDBD  
                                    STR_72 FE44                                      STR_56 FFEB  
                                    STR_64 FFC3                                      STR_80 FFA5  
                                    STR_48 FEF1                                      STR_65 FFDC  
                                    STR_81 FFAB                                      STR_57 FF25  
                                    STR_49 FF19                                      STR_73 FE01  
                                    STR_58 FFE6                                      STR_74 FEE2  
                                    STR_90 FE81                                      STR_82 FE81  
                                    STR_66 FE4D                                      STR_91 FFA5  
                                    STR_83 FFA5                                      STR_59 FFBD  
                                    STR_75 FEFF                                      STR_67 FDE1  
                                    STR_76 FFE6                                      STR_92 FFAB  
                                    STR_84 FFAB                                      STR_68 FE35  
                                    STR_93 FFE6                                      STR_85 FFE6  
                                    STR_77 FFE6                                      STR_69 FDBB  
                                    STR_94 FFE6                                      STR_86 FFE6  
                                    STR_78 FFE6                                      STR_95 FFE6  
                                    STR_87 FFE6                                      STR_79 FFE6  
                                    STR_88 FFA5                                      STR_96 FFB1  
                                    STR_89 FFAB                                      STR_97 FF9F  
                                    STR_98 FE81                                      STR_99 FFB1  
        __size_of_USBCtrlEPServiceComplete 00F4                            __end_of___lldiv 575E  
                                    u11400 4930                                      u11410 4932  
                                    u11420 4962                                      u12060 65F0  
                          ___awdiv@divisor 0062                                      u12150 5516  
                                    u11440 4978                            __end_of___llmod 5C02  
                   __end_of_USBDeviceTasks 37CA                                      u11450 497A  
                                    u13210 61C6                                      u14010 3FF4  
                                    u12155 5508                                      u12067 65E6  
                                    u11460 49D2                                      u13205 61B6  
                                    u11470 49D4                                      u11438 4966  
                                    u13230 61D4                                      u13206 61BA  
                                    u11710 63DA                                      u11720 640A  
                                    u14040 64AE                                      u12600 60E2  
                                    u13250 61E2                                      u14300 3EF2  
                                    u11820 0184                                      u12460 6732  
                                    u12620 60F0                                      u12700 39F2  
                                    u11717 63D0                                      u14310 3F30  
                                    u12470 675E                                      u12710 3A20  
                                    _LATB2 007C52                                      u15007 54A8  
                                    u11727 6400                                      _LATA5 007C4D  
                                    u14320 3F32                                      u14240 05FE  
                                    u12640 60FE                                      u13360 2908  
                                    _LATC2 007C5A                                      _LATA6 007C4E  
                                    u15017 54B2                                      _LATA7 007C4F  
                                    u14330 3F70                                      u14250 0666  
                                    _LATB6 007C56                                      u11827 017A  
                                    u12467 6728                                      u14251 0662  
                                    u12707 39E8                                      _LATB7 007C57  
                                    u12900 2FD8                                      u14340 3F72  
                                    u11860 0210                                      u14260 0668  
                                    u12477 6754                                      u12717 3A16  
                                    u14350 3FB0                                      u12840 4EF8  
                                    u14360 3FB2                                      u14248 0602  
                                    u12680 39B0                                      u13480 26B4  
                                    u13705 6DE0                                      u14290 3EF0  
                                    u13706 6DE2                                      u13378 290C  
                ?_USBCtrlEPServiceComplete 002D                                      u11867 0206  
                                    u12595 60D2                                      u12908 2FDC  
                                    u12596 60D6                                      u12687 39A6  
                                    u12848 4EFC                                      u13498 26B8  
                                    u13955 3A7C                                      u13980 3B40  
                          __end_of___lwdiv 5FBC                            ringbuf_put@data 006A  
                          __end_of___lwmod 653A                                      i2l300 583E  
                                    i2l232 4228                                      i2l146 3830  
                                    i2l170 3762                                      i2l308 6942  
                            __CFG_WDTEN$ON 000000                                      i2l158 36B6  
                                    i2l168 3750                                      i2l345 5452  
                                    i2l169 37C6                                      i2l450 4BE6  
                                    i2l452 4C30                                      i2l374 1E6E  
                                    i2l295 5828                                      i2l359 43A4  
                                    i2l368 4408                                      i2l393 2032  
                                    i2l298 58B6                                      i2l299 5838  
                                    _UADDR 000F38                            ___awdiv@counter 0064  
                  ST7032_task@st7032_state 0119                            ??_hardware_init 0091  
                                    _TMR1H 000FCF                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _USTAT 000F64                     __size_of_ctmu_sampling 0102  
                   __size_of_LED_indicator 0126         __size_of_USBCtrlEPAllowStatusStage 00C4  
                      ___lmul@multiplicand 0071                             __CFG_FCMEN$OFF 000000  
          __end_of_USBCtrlEPAllowDataStage 5ACE                                      _sd000 FBE2  
                                    _sd001 FB3C                                      _sd002 FB70  
                          __end_of_display 3A44                   ST7032_cursor@row_offsets 0072  
                   __size_of_ST7032_cursor 0032                       caltime_to_epoch@year 007F  
                               i2memset@p1 002D                            __end_of_dpowers FA79  
                          ??_settings_task 0099                            __end_of_isdigit 6CBA  
                       __size_of_RTCC_init 006A                         __size_of_RTCC_task 003A  
                         ringbuf_delete@rb 0060                                      atoi@a 0081  
                                    atoi@s 007C                  RTCC_adjust_time_cursor@tm 0060  
                             display_dec@s 00AF                settings_task@settings_state 012B  
                                    tablat 000FF5                          __end_of_ANALOG_IN 6C0C  
                           ?_software_init 002D                                      plusw2 000FDB  
                        __end_of_CDCInitEP 62DA                 __size_of_ringbuf_backspace 008E  
                                    status 000FD8                          __end_of_I2C_start 6F24  
                          __end_of_sprintf 051C                      __size_of_I2C_init_new 001C  
                         __end_ofi2_memset 6C90                         __size_ofi2___awdiv 0084  
                        month_length@month 0066                                CTMU_read@ch 0070  
                      _USB_CDC_buffer_init 68B2                    __end_of_ringbuf_put_num 5F44  
                  __end_of_ringbuf_put_str 6412                         __size_ofi2___lwdiv 0052  
                            ?_ST7032_clear 002D                        terminal_task@i_4555 0666  
                          putUSBUSART@data 0060               __size_of_USBStdSetCfgHandler 00E2  
                          __initialization 5ACE                            terminal_task@rx 0194  
                          terminal_task@tx 0192                            terminal_time@tx 00D2  
                             __end_of_atoi 4394                               __end_of_main 6032  
                      __size_of_ST7032_put 0072                      _control_signal_bitmap 011D  
                         __end_of_Auto_cut 3B78                        ringbuf_init@bufsize 0064  
                         RTCC_from_RTCC@tm 0086                       _settings_adjust_time 473C  
               RTCC_adjust_time_inc@i_3723 0097                        __size_of_LED_output 0072  
                                ??_I2C_ISR 002D                   ctmu_set_ratio@percentage 0083  
                   UART_buffer_init@uartrx 0400                     UART_buffer_init@uarttx 0989  
                __size_of_USBCtrlEPService 00CE                              print_time@str 00AD  
                RTCC_adjust_time_toggle@tm 0060                                     ??_atoi 007E  
                                   ??_main 00E6                            LED_output@value 0060  
          settings_led_indicator@strp_6159 0091                              __activetblptr 000003  
                          ?_USBDeviceTasks 002D                  ??_RTCC_adjust_time_cursor 0062  
                     ?_USB_CDC_buffer_init 002D                                ?_USBSuspend 002D  
                ??_RTCC_adjust_time_toggle 0062                                     ISR@cnt 0116  
                        __end_of_CTMU_init 6D5E                          __end_of_CTMU_read 5524  
                             _cdc_mem_type 0017                                ST7032_put@c 006F  
                             _I2C_init_new 6E6E                                     _BCL1IF 007D0B  
                  __end_of_USBDeviceAttach 6AE4                           _CDCDataOutHandle 0007  
                        _getsUSBUSART$1957 006B                           ___llmod@dividend 006D  
                                   STR_100 FF9F                                     STR_101 FFE6  
                                   STR_102 FFE6                                     STR_110 FF5E  
                                   STR_103 FFE6                                     STR_111 FE70  
                                   STR_112 FF5E                                     STR_104 FF5E  
                                   STR_113 FEB3                                     STR_105 FE5F  
                                   STR_114 FF5E                                     STR_106 FF5E  
                                   STR_107 FE5F                                     STR_115 FED3  
                                   STR_116 FFE6                                     STR_108 FF5E  
                                   STR_117 FFE6                                     STR_109 FEA3  
                                   STR_118 FF8A                                     _EECON2 000FA7  
                                   _ANCON0 000F48                                     _ANCON1 000F49  
                      display_time_1602@tm 00B3                           ___awdiv@dividend 0060  
                          getsUSBUSART@len 0069                      __size_of_CDCTxService 0170  
                                   i2l1704 643C                                     i2l1706 6448  
                                   i2l1707 6454                                     i2l2471 6858  
                                   i2l1823 10BE                                     i2l7013 483E  
                                   i2l7017 4848                                     i2l7027 4878  
                                   i2l7035 48B2                                     i2l7211 469C  
                                   i2l7037 48BA                                     i2l7045 48F4  
                                   i2l7141 6C6E                                     i2l7221 46D0  
                                   i2l7311 1E6A                                     i2l7215 46A4  
                                   i2l7161 5322                                     i2l7145 6C7E  
                                   i2l7331 1F28                                     i2l7333 1F2A  
                                   i2l7325 1EE4                                     i2l7245 354A  
                                   i2l7237 471A                                     i2l7271 366E  
                                   i2l7191 5A7E                                     i2l8311 6BAA  
                                   i2l9111 36AE                                     i2l9103 369E  
                                   i2l7353 1FCC                                     i2l7337 1F46  
                                   i2l7265 365E                                     i2l7257 35FC  
                                   i2l7249 3562                                     i2l8313 6BAC  
                                   i2l7363 2012                                     i2l7347 1F98  
                                   i2l7267 3666                                     i2l7259 3604  
                                   i2l7283 585E                                     i2l7195 5A9A  
                                   i2l9043 3814                                     i2l7381 209E  
                                   i2l7373 204E                                     i2l7365 201E  
                                   i2l7349 1FB2                                     i2l7293 589E  
                                   i2l9133 36DC                                     i2l9125 36CC  
                                   i2l6735 5C64                                     i2l8351 50C8  
                                   i2l8335 693E                                     i2l9071 387C  
                                   i2l9055 383E                                     i2l9063 3856  
                                   i2l9039 380C                                     i2l7713 3D6A  
                                   i2l6745 69D4                                     i2l7379 2092  
                                   i2l7731 43AE                                     i2l7643 41D2  
                                   i2l8363 5116                                     i2l8355 50D0  
                                   i2l9067 3874                                     i2l9163 3746  
                                   i2l9155 371E                                     i2l9139 3702  
                                   i2l7901 5438                                     i2l7709 3D50  
                                   i2l6749 69E2                                     i2l6765 5914  
                                   i2l6757 58EA                                     i2l6861 4C12  
                                   i2l6853 4BD4                                     i2l6845 4BB4  
                                   i2l7733 43B4                                     i2l9077 38D8  
                                   i2l9149 3712                                     i2l7743 43D6  
                                   i2l7735 43BA                                     i2l7663 424E  
                                   i2l8367 5130                                     i2l9191 37C2  
                                   i2l9183 3788                                     i2l6777 5970  
                                   i2l7745 43DC                                     i2l7761 4442  
                                   i2l8369 5136                                     i2l9169 375A  
                                   i2l7907 545C                                     i2l7691 3CCE  
                                   i2l7747 43E2                                     i2l6869 4C3A  
                                   i2l7757 4424                                     i2l9189 37A6  
                                   i2l9721 6460                                     i2l7881 53D2  
                                   i2l7697 3CF2                                     i2l6993 6664  
                                   i2l9731 5E52                                     i2l7883 53D6  
                                   i2l7867 6708                                     i2l7859 66C0  
                                   i2l6987 6658                                     i2l6989 665E  
                                   i2l9743 5E78                                     i2l7895 5418  
                                   i2l9745 5E80                                     i2l9737 5E62  
                                   i2l9763 5EB8                                     i2l9755 5EA0  
                                   i2l9747 5E84                                     i2l9773 6826  
                                   i2l9759 5EAA                                     i2l9775 682E  
                                   i2l9785 684E                                     i2l9777 6832  
                                   i2l9797 6E5C                                     _RCREG1 000FAF  
                            CDCTxService@i 006A                                     _RTCCAL 000F3E  
                                   _SPBRG1 000FB0                              USB_CDC_task@i 0070  
                                   _SSP1IF 007CF3                             __CFG_WPCFG$OFF 000000  
                                   _SSPBUF 000FC9                                     _TXREG1 000FAE  
                 i2USBTransferOnePacket@ep 0031         settings_integrating_reset@str_6175 007E  
                        ??i2_USBDeviceInit 0035            __size_ofi2_USBTransferOnePacket 00BA  
                         __end_of_data_out 2FB4                             __CFG_WPDIS$OFF 000000  
                           ??_ST7032_clear 0071                              _ctmu_sampling 3EBA  
                            _LED_indicator 3B78                         _terminal_task$7051 0664  
                       epoch_to_caltime@tm 0081                                LED_output@b 0061  
                        _shortPacketStatus 0021                             __CFG_XINST$OFF 000000  
                        ?_epoch_to_caltime 0081                    __size_of_ST7032_command 0070  
                  __size_of_ctmu_set_ratio 00E6                           ringbuf_put_num@i 0088  
                          USBDeviceTasks@i 004A                              _ST7032_cursor 6B4E  
                    caltime_to_epoch@epoch 0081                           ??_integrate_time 0060  
              USBStdFeatureReqHandler@pUEP 0042                         _terminal_time$7052 00DA  
                 USBTransferOnePacket@data 0061                 USBCtrlTrfInHandler@lastDTS 002E  
                          ??_USBDeviceInit 0068                               ?_ringbuf_pop 0068  
                             ?_ringbuf_num 0060                               ?_ringbuf_put 0068  
                    caltime_to_epoch@month 0085                           __end_of_bootload 6988  
                                   ___lmul 6032                               ?_putUSBUSART 0060  
                          _caltime_to_RTCC 4AB2                                     ___wmul 6AE4  
                       ??_epoch_to_caltime 0083                                  ??___awdiv 0064  
                                ??___awmod 0064               __end_of_RTCC_adjust_time_dec 1BB6  
                    ?_settings_adjust_time 002D               __end_of_RTCC_adjust_time_inc 1912  
                                   _d_to_x 6D0E                                  ??___lldiv 0068  
                     __end_of_getsUSBUSART 4FAA                       ringbuf_put_num@value 0085  
                             ?_timer0_init 002D                                  ??___llmod 0075  
                        __end_of_RTCC_init 63AE                               ?_timer1_init 0060  
                                ??___lwdiv 0080                          __end_of_RTCC_task 6A74  
                                ??___lwmod 0064                               ?_timer3_init 002D  
                             ?_normal_task 002D                                     _lcd_tx 0023  
                        _USBEnableEndpoint 69C4            __size_of_USBStdGetStatusHandler 00BA  
                                   _ctmu_m 00FC                                     _memset 6B1A  
                                   clear_0 5AD6                                     clear_1 5AE8  
                                   clear_2 5AF4                                     clear_3 5B02  
                                   clear_4 5B14                                     clear_5 5B20  
                                   clear_6 5B2C                                     clear_7 5B38  
                          __CFG_CLKOEC$OFF 000000                           ___awdiv@quotient 0066  
                          ___awmod@divisor 0062                       __size_of_display_LCD 04C4  
                          ___awmod@counter 0064                         _ctmu_sampling_flag 011E  
                                   _x_to_d 6E30                         ?_USBEnableEndpoint 0035  
               __size_of_RTCC_from_caltime 0026                                     _usb_rx 02BE  
                                   _usb_tx 02C6                       __size_of_display_dec 006A  
                                   _strcat 659A                                     _strcmp 65FA  
                                   _strcpy 6A74                                  ??_display 0064  
                           i2___awdiv@sign 0032                      ??_USB_CDC_buffer_init 0066  
            __size_of_USBTransferOnePacket 00D8                  __size_of_caltime_to_epoch 028E  
                       _terminal_operation 20C4                                  ??_isdigit 0060  
              settings_auto_stop@strp_6142 0091                          __end_ofi2___awdiv 5EC2  
                             _st7032_state 0123                               _CDCTxService 2FB4  
                        __end_ofi2___lwdiv 6862                               __mediumconst FA50  
                            _cut_time_flag 011F                                  ?_I2C_send 002D  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                  ?_I2C_stop 002D  
                                ?_ADC_init 002D                        ??_USBEnableEndpoint 0036  
                 USB_CDC_buffer_init@rxbuf 0464                   USB_CDC_buffer_init@txbuf 0669  
                                ??_sprintf 0097                        ?_terminal_operation 00DB  
                            ?i2_LED_output 002D                                _CtrlTrfData 000D38  
                          ??_software_init 0084                       _controlTransferState 001B  
                     __CFG_LS48MHZ$SYS48X8 000000                                 __accesstop 0060  
                  __end_of__initialization 5B5E                               ?_USB_CDC_ISR 002D  
                             __pbssBIGRAMl 0669                               ?_USB_CDC_get 002D  
                             CTMU_read@sum 0071                              ?_millis_timer 002D  
                     __end_of_get_quot_rem 4D32                             ?_ctmu_sampling 002D  
                           ?_LED_indicator 002D                              ___rparam_used 000001  
                          _RTCC_from_epoch 6E8A                   __size_of_USBStallHandler 0046  
                         ?_ringbuf_put_num 0083                           ?_ringbuf_put_str 006F  
                  ?_settings_led_indicator 002D                       __CFG_WPEND$PAGE_WPFP 000000  
                           ?_ST7032_cursor 0071                        __size_of_USBSuspend 002C  
                         LED_indicator@cnt 0212                           terminal_task@op0 0242  
                         terminal_task@op1 025B                           terminal_task@op2 0274  
                         terminal_task@op3 028D                           terminal_task@buf 0600  
                           __pcstackCOMRAM 002D                  __end_of_USBEnableEndpoint 6A00  
                            __end_of_sd000 FBE6                              __end_of_sd001 FB70  
                            __end_of_sd002 FBA4                           terminal_time@op0 00D4  
                         terminal_time@op1 00D6                           terminal_time@op2 00D8  
                             __pidataBANK1 6F16             settings_led_indicator@str_6158 007B  
                     ??_terminal_operation 00E5                   __end_of_terminal_at_hand 659A  
         __size_of_USBCtrlEPAllowDataStage 009E                       __size_of_ST7032_init 00C8  
                     __size_of_ST7032_task 014E                       __size_of_ST7032_puts 0058  
            __size_of_USBConfigureEndpoint 0094                          ?_port_button_task 002D  
              __end_of_USBCtrlTrfInHandler 5462                            __CFG_DSWDTPS$G2 000000  
                   i2_USBTransferOnePacket 58D4                         ??_port_button_task 0066  
                     terminal_task@command 0181                              _I2C_cfct_flag 011B  
                        _CDCTxService$2005 0068                                 _cdc_notice 0200  
                  __size_of_ringbuf_delete 0026                                  ?i2_memset 002D  
                               _cdc_rx_len 0018                                 ??_I2C_send 0060  
                               _cdc_tx_len 001A                               ??_ST7032_put 006F  
                               ??_I2C_stop 0060                                 ??_ADC_init 0060  
               caltime_to_epoch@month_4002 0080                   ??_USBCtrlTrfSetupHandler 0047  
                           ??i2_LED_output 002E                               ??_LED_output 0061  
                   RTCC_adjust_time_dec@tm 0091                           ?_USBDeviceAttach 002D  
                   _USBStdGetStatusHandler 581A                               sprintf@width 00A9  
                   RTCC_adjust_time_inc@tm 0091                                 __pbssBANK0 00E6  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                               __pbssBANK5 0500                                  ?_Auto_cut 002D  
                           LED_indicator@i 0038                             ??_millis_timer 002D  
                       __size_of_ctmu_task 0014                                  ISR@cnt_t1 0117  
 __end_of_APP_DeviceCDCBasicDemoInitialize 6D0E  __size_of_APP_DeviceCDCBasicDemoInitialize 002A  
       ??_APP_DeviceCDCBasicDemoInitialize 0039          ?_APP_DeviceCDCBasicDemoInitialize 002D  
         _APP_DeviceCDCBasicDemoInitialize 6CE4                         ST7032_command@wait 006F  
                  __end_of_caltime_to_RTCC 4B88             __end_of_settings_led_indicator 27E8  
                          _RTCC_to_caltime 575E                         _settings_auto_stop 27E8  
              __size_of_USBWakeFromSuspend 0032                                _pBDTEntryIn 00F5  
         __end_of_USBCtrlEPServiceComplete 42A2                __size_of_USBCheckCDCRequest 00D6  
                    __end_of_weekday_3char FBC0                     ??_settings_adjust_time 0099  
                    RTCC_task@prev_halfsec 0118                       USBCtrlTrfRxService@i 002D  
                                  ?___lmul 006D                      settings_auto_stop@str 0067  
                                  ?___wmul 0076                             ST7032_init@buf 0500  
                      ?_settings_auto_stop 002D                                    ?_d_to_x 002D  
                             ST7032_puts@s 0070                         __end_of_ST7032_put 618C  
                                  _I2C_ISR 6E50                                    ?_memset 0060  
                           ___lmul@product 0075                                 _device_dsc FBC0  
                       __end_of_LED_output 611A                           _USBCtrlEPService 5078  
                                  ?_x_to_d 002D                                 _ep_data_in 0001  
                                  ?_strcat 0060                                    ?_strcmp 0060  
                                  ?_strcpy 0060                    settings_auto_stop@state 0128  
              __end_of_USBCtrlTrfRxService 3DB6                         _USBCheckStdRequest 4394  
                        _configDescriptor1 FAF9                                    i2l10003 3B7C  
                                  i2l10013 3BD6                                    i2l10007 3B84  
                                  i2l10019 3C54                                    i2l10027 3C9A  
                                  i2l10515 1098                                    i2l10525 10B4  
                                  i2l10509 1078                                    i2l13251 66AC  
                                  i2l10499 1056                                    i2l13249 667C  
                       __CFG_OSC$INTOSCPLL 000000                       __end_of_ST7032_clear 6F06  
                               ANALOG_IN@b 0060                                 ??i2_memset 0033  
                                ?_data_out 00AB                __end_of_USBCtrlTrfTxService 48FC  
                      _USBStdSetCfgHandler 465A                     I2C_LCD_SetCursor@F8685 01E2  
                                  _SPBRGH1 000F7F                              _I2C_sent_flag 000E  
                                  _SSP1ADD 000FC8                                    _SSP1BUF 000FC9  
                     terminal_operation@tx 00DB                                    _RTCVALH 000F3B  
                                  _RTCVALL 000F3A                       ??_settings_auto_stop 0066  
                      ?_USBCheckStdRequest 002D               __size_of_USBStdGetDscHandler 014E  
                                  _UIEbits 000F36                            integrate_time@i 0062  
                  __end_of_RTCC_from_epoch 6EA4                                  ?_bootload 002D  
                         ST7032_cursor@col 0074                       timer1_init@prescaler 0062  
                     _RTCC_adjust_time_dec 1912                                    _UIRbits 000F62  
                     _RTCC_adjust_time_inc 166E                           ST7032_cursor@row 0071  
                               ??_Auto_cut 007C                           __CFG_CFGPLLEN$ON 000000  
                 ??_button_timer_interrupt 0086                              _cdc_trf_state 0019  
                          ??_ctmu_sampling 0088                            ??_LED_indicator 0035  
                            ?_month_length 0066                        epoch_to_caltime@day 0087  
                      epoch_to_caltime@num 008B                            ??_ST7032_cursor 0072  
                        RTCC_from_epoch@tm 008F                                    _pCDCDst 0106  
                                  _pCDCSrc 0109                      __size_of_getsUSBUSART 00D2  
                   display_time_1602@line0 00B5                     display_time_1602@line1 00B7  
                                _ANALOG_IN 6BE0                                    __Hparam 0000  
                           _ST7032_command 61FE                             _ctmu_set_ratio 4574  
      settings_integrating_reset@strp_6176 0094                       ?_USBStdSetCfgHandler 002D  
                                _CDCInitEP 626E                                    __Lparam 0000  
                               _ctmu_ratio 001C                                  _I2C_start 6F20  
                        ringbuf_put_num@rb 0083                             display_LCD@str 0192  
               __size_of_USBEnableEndpoint 003C                          ringbuf_put_str@rb 006F  
                               _readBuffer 0380                       ??_USBCheckStdRequest 0047  
            __size_of_USBCtrlTrfOutHandler 005C                              ?_ringbuf_init 0060  
                                  ___awdiv 55E4                            __size_of___lmul 0076  
                                  ___awmod 598E                                    ___lldiv 56A2  
                         ??_USBDeviceTasks 004A                            __size_of___wmul 0036  
                                  ___llmod 5B68                      ringbuf_put_num@digits 0087  
                                  ___lwdiv 5F44                          ??_USBStallHandler 002D  
                                  ___lwmod 64D8                            __size_of_d_to_x 0028  
                    __end_of_terminal_task 10F6                      __end_of_terminal_time 0D8C  
              settings_integrating_reset@i 0096                settings_integrating_reset@j 0098  
                     __size_of_ringbuf_pop 00CC                       __size_of_ringbuf_num 00EE  
                     __size_of_ringbuf_put 00D4                            __CFG_STVREN$OFF 000000  
                     __size_of_putUSBUSART 0020                epoch_to_caltime@month_cache 01E6  
                                  __pcinit 5ACE                         getsUSBUSART@buffer 0067  
                          __size_of_memset 0034                  __end_of_configDescriptor1 FB3C  
                                  __ramtop 0F00                       __size_of_timer0_init 003A  
                     __size_of_timer1_init 0050                                    __ptext0 5FBC  
                                  __ptext1 0D8C                                    __ptext2 20C4  
                                  __ptext3 09E0                                    __ptext4 653A  
                                  __ptext5 5DB2                                    __ptext6 6D5E  
                                  __ptext7 65FA                                    __ptext8 42A2  
                                  __ptext9 6946                                    _inPipes 00EF  
                     __size_of_timer3_init 002C                       __size_of_normal_task 00CE  
            settings_integrating_reset@str 006A                          __end_of_ctmu_task 6EEA  
                          __size_of_x_to_d 0020                _USBDeferOUTDataStagePackets 0011  
                        port_button_task@i 0066                                    _display 390E  
                                _T0CONbits 000FD5                               __size_of_ADC 002E  
                          __size_of_strcat 0060                           _time_change_flag 0022  
                         _caltime_to_epoch 1BB6                            __size_of_strcmp 005C  
                          __size_of_strcpy 0038                               __size_of_ISR 00F2  
                                _T1CONbits 000FCD                               __size_of_OUT 0072  
                                  _dpowers FA51                               ??_USBSuspend 0041  
                  __size_of_RTCC_from_RTCC 001A                                 data_out@tx 00AB  
                                  _isdigit 6C90                                  _T3CONbits 000F79  
                         ___awmod@dividend 0060                                 ??_data_out 00AD  
           settings_integrating_reset@strp 0092                    __size_of_I2C_idle_check 0018  
                                _T5CONbits 000F22                      __end_of_hardware_init 67BC  
                          i2_USBDeviceInit 37CA                           i2USBDeviceInit@i 0035  
                        __end_ofdata_out@p FBE2                                    _uart_rx 02AE  
                                  _uart_tx 02B6                         __end_of_USB_CD_Ptr FA81  
                                  _sprintf 0000            __size_of_USBCtrlTrfSetupHandler 008E  
                  __end_of_RTCC_to_caltime 581A                      ?_RTCC_adjust_time_dec 0091  
                    ?_RTCC_adjust_time_inc 0091                      __size_of_get_quot_rem 00D4  
                     end_of_initialization 5B5E                               _getsUSBUSART 4ED8  
                               ??_bootload 0075                                  _CTMU_init 6D36  
                                _CTMU_read 5462                      __end_of_settings_task 2C4A  
                             _CTMUCONHbits 000FB3                         __end_of_USB_SD_Ptr FA7F  
                             _CTMUCONLbits 000FB2                        _pBDTEntryEP0OutNext 000B  
          settings_integrating_reset@state 0129                             ??_month_length 0067  
                           display_dec@dec 00AD                                    memset@c 0062  
                                  memset@n 0064                                    memset@p 0066  
                           display_dec@str 00AB            _dummy_encapsulated_cmd_response 02A6  
                   _terminal_data_out_flag 0125               terminal_operation@percentage 00E5  
                   __end_of_ST7032_command 626E                     __end_of_ctmu_set_ratio 465A  
                                i2u1013_45 6436                                  i2u1013_46 643A  
                                i2u1014_40 6444                                  i2u1016_40 6450  
                                i2u1018_40 645C                                sleep_task@i 0075  
                 ?_USBStdFeatureReqHandler 002D                           ?_caltime_to_RTCC 0069  
                    ??_USBStdSetCfgHandler 0041                       __size_of_USB_CDC_ISR 0006  
                          ___lldiv@divisor 0064                                 ?_ANALOG_IN 002D  
                     timer3_init@prescaler 0061                                 ?_CDCInitEP 002D  
                          ___lldiv@counter 006C                       __size_of_USB_CDC_get 002A  
                               ?_I2C_start 002D                         __end_of_USBSuspend 6C64  
                           ??_ringbuf_init 0066                    _USBCtrlEPAllowDataStage 5A30  
                                  postdec1 000FE5                                    postdec2 000FDD  
                               _sleep_task 4E06                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                     __end_ofi2_LED_output 6476                   _USBCtrlEPServiceComplete 41AE  
                                  strcmp@r 0065                 _USBStatusStageEnabledFlag1 0014  
               _USBStatusStageEnabledFlag2 0015                         USBEnableEndpoint@p 0036  
                             I2C_send@data 0060                           __CFG_DSBOREN$OFF 000000  
                                _RTCC_init 6344                       __end_of_millis_timer 6DD0  
                                _RTCC_task 6A3A                               _display_char 021A  
                             _display_flag 0120                  epoch_to_caltime@day_cache 0218  
                       ST7032_cursor@F8640 01E4                                 _print_item 001F  
                             _get_quot_rem 4C5E                                 _print_time 5DB2  
                               _print_port 00FB                             _ringbuf_delete 6D84  
             __end_ofdisplay_LCD@port_char FAF9                  __size_of_epoch_to_caltime 01F2  
                         __CFG_CPUDIV$OSC1 000000                         _BothEP0OutUOWNsSet 000D  
                      RTCC_from_caltime@tm 008F                                  i2___awdiv 5E3E  
                        __size_of_I2C_send 000A                  USBConfigureEndpoint@EPNum 0032  
                        i2___lwdiv@divisor 002F                          __size_of_I2C_stop 0004  
                        __size_of_ADC_init 0020                 ?_USBCtrlEPAllowStatusStage 002D  
                            ?_USB_CDC_init 002D                 settings_led_indicator@strp 008F  
                                i2___lwdiv 6810                              ?_USB_CDC_send 006C  
                            ?_USB_CDC_task 002D                          i2___lwdiv@counter 0033  
                         ?_RTCC_from_epoch 008F                                 ?_CTMU_init 002D  
                               ?_CTMU_read 006D        USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                                _USTATcopy 002C                                  Auto_cut@i 007E  
          __size_of_button_timer_interrupt 02C8                    timer1_init@clock_select 0060  
             __end_of_USBTransferOnePacket 4AB2                            ?_ST7032_command 006F  
                          ?_ctmu_set_ratio 002D                           __CFG_IOL1WAY$OFF 000000  
                       i2___awdiv@dividend 002D                          putUSBUSART@length 0062  
                      __CFG_MSSP7B_EN$MSK7 000000                          LED_indicator@cntf 0215  
                           ringbuf_init@rb 0060                     _USBCtrlTrfSetupHandler 5D24  
                            ??_display_LCD 00BA                __end_of_USB_CDC_buffer_init 6900  
                           ringbuf_pop@ret 006E                              ??_display_dec 00AF  
                  ?i2_USBTransferOnePacket 002D               ??_settings_integrating_reset 0066  
                    __end_of_USBDeviceInit 33EA                          ?_terminal_at_hand 00CB  
                           __end_of___lmul 60A8                   ?_RTCC_adjust_time_cursor 0060  
                    ST7032_command@command 0070                             __end_of___wmul 6B1A  
                           __end_of_d_to_x 6D36                      __size_of_ST7032_clear 000E  
                 ?_RTCC_adjust_time_toggle 0060                    __end_ofi2_USBDeviceInit 390E  
                   __end_of_ringbuf_delete 6DAA                         ??_terminal_at_hand 00D2  
                                i2memset@c 002F                                  i2memset@n 0031  
                                i2memset@p 0033                             __end_of_memset 6B4E  
                               ?_RTCC_init 002D                                 ?_RTCC_task 002D  
                         __CFG_DSWDTEN$OFF 000000                          _USBBusIsSuspended 011C  
                           __end_of_x_to_d 6E50                             __end_of_strcat 65FA  
                    epoch_to_caltime@month 008A                             __end_of_strcmp 6656  
                           __end_of_strcpy 6AAC                        start_initialization 5ACE  
                               CTMU_read@i 0075                           month_length@year 006B  
                  ?_USBStdGetStatusHandler 002D                                __end_of_ADC 6BE0  
                       i2___awdiv@quotient 0033                                __end_of_ISR 10FA  
            USBCtrlTrfRxService@byteToRead 002E                                __end_of_OUT 61FE  
                   ??_RTCC_adjust_time_dec 0093                     ??_RTCC_adjust_time_inc 0093  
                              _cdc_data_rx 0300                             ??_USB_CDC_init 0069  
                              _cdc_data_tx 0340                          __size_ofi2_memset 002C  
                           ??_USB_CDC_send 006E                             ??_USB_CDC_task 006F  
                               ?i2___awdiv 002D               __end_of_USBConfigureEndpoint 5C96  
                         ?_RTCC_to_caltime 0062                  __size_of_port_button_task 0164  
                               ?i2___lwdiv 002D            __end_of_USBStdFeatureReqHandler 20C4  
        __end_of_USBCtrlEPAllowStatusStage 539E                      __end_of_software_init 55E4  
                 __end_of_USBCtrlEPService 5146                        settings_auto_stop@i 0093  
                      settings_auto_stop@j 0095                          _integrate_current 3FBC  
                          ___llmod@divisor 0071        __size_of_settings_integrating_reset 025E  
                        __size_of_Auto_cut 0134                            ___llmod@counter 0075  
                  settings_led_indicator@i 0093                    settings_led_indicator@j 0095  
                       ?_integrate_current 002D                  ??_USBCtrlEPAllowDataStage 002E  
                              ??_ANALOG_IN 0060                                ??_CDCInitEP 0039  
                           USBDeviceInit@i 0068                              ??_ST7032_init 0071  
                             _ST7032_clear 6EF8                              ??_ST7032_task 006F  
                              ??_I2C_start 0060                              ??_ST7032_puts 0072  
                   _pBDTEntryEP0OutCurrent 0009                               _ctmu_value_m 0110  
                  USBTransferOnePacket@dir 0060                    USBTransferOnePacket@len 0063  
           __end_ofi2_USBTransferOnePacket 598E                           display_LCD@onoff FBD2  
               settings_auto_stop@str_6141 007B                        ringbuf_put_num@temp 0089  
             settings_led_indicator@i_6160 0094                                   ??___lmul 0075  
                              ?_sleep_task 002D                                   ??___wmul 007A  
                      _USBStdGetDscHandler 3538                                   ??_d_to_x 0068  
                      ??_integrate_current 006D                __size_of_terminal_operation 0272  
                        __CFG_ADCSEL$BIT12 000000                                __pdataBANK1 01E2  
                                 ?_I2C_ISR 002D                                   ??_memset 0066  
                 __size_of_ringbuf_put_num 0082                   __size_of_ringbuf_put_str 0064  
                   _button_timer_interrupt 10F6                                   ??_x_to_d 0060  
                          ?_ringbuf_delete 0060                                   ??_strcat 0064  
                                 ??_strcmp 0064                                   ??_strcpy 0064  
                     __end_of_month_length 49DA                             _RTCC_from_RTCC 6EA4  
                      __end_of_display_LCD 09E0                     _USBActiveConfiguration 002B  
           __end_of_USBStdGetStatusHandler 58D4                                ?_print_time 00AB  
                  __size_of_integrate_time 0062                        __end_of_display_dec 6344  
                           _I2C_idle_check 6EBE                                __pbssCOMRAM 0001  
                      RTCC_to_caltime@dumy 0064                              __pcstackBANK0 0060  
                            __pcstackBANK1 0192               __size_of_USBCtrlTrfInHandler 00C4  
                            __pcstackBANK6 0600                       __end_of_ringbuf_init 6810  
                     ?_USBStdGetDscHandler 002D                               _isdigit$6456 0061  
                        __size_of_data_out 0178                  __end_of_integrate_current 40B8  
                     sleep_task@sleep_flag 012C                                ??_CTMU_init 0060  
                              ??_CTMU_read 006F                 __end_of_USBWakeFromSuspend 6BB2  
                              sprintf@flag 00A7                      RTCC_adjust_time_dec@i 0098  
                        __size_of_bootload 0042                                sprintf@prec 009B  
                          _USBStallHandler 6900                               _pBDTEntryOut 0100  
                    RTCC_adjust_time_inc@i 0098                 __end_of_USBCheckCDCRequest 4C5E  
                 __end_of_caltime_to_epoch 1E44                            millis_timer@cnt 0114  
                                _data_item 001D                   __size_of_USBDeviceAttach 0038  
                    __size_ofi2_LED_output 0064                    USB_CDC_get@numBytesRead 006D  
                         ___lwdiv@dividend 007C            __end_of_RTCC_adjust_time_cursor 3EBA  
                     display_LCD@port_char FA81                                  __pintcode 1008  
          __end_of_RTCC_adjust_time_toggle 69C4                              __pmediumconst FA50  
                                 ?___awdiv 0060                                  __ptext100 575E  
                                __ptext101 6E30                                  __ptext110 5078  
                                __ptext111 5D24                                  __ptext103 6DAA  
                                __ptext120 6656                                  __ptext112 41AE  
                                __ptext104 6F10                                  __ptext121 4B88  
                                __ptext113 5A30                                  __ptext105 3686  
                                __ptext130 539E                                  __ptext122 6CE4  
                                __ptext114 4394                                  __ptext106 37CA  
                                __ptext131 481C                                  __ptext123 626E  
                                __ptext115 465A                                  __ptext107 6B80  
                                __ptext132 3B78                                  __ptext124 58D4  
                                __ptext116 6C64                                  __ptext108 6C38  
                                __ptext133 6810                                  __ptext125 69C4  
                                __ptext117 581A                                  __ptext109 6900  
                                __ptext134 5E3E                                  __ptext126 5C02  
                                __ptext118 3538                                  __ptext135 6412  
                                __ptext127 66B2                                  __ptext119 1E44  
                                __ptext136 6E50                                  __ptext128 3C9E  
                                __ptext129 52DA                                   ?___awmod 0060  
                    __size_of_millis_timer 0026                                   ?___lldiv 0060  
                                 ?___llmod 006D                                   ?___lwdiv 007C  
            __size_of_settings_adjust_time 00E0                                   ?___lwmod 0060  
                   settings_auto_stop@strp 008F                     __end_of_RTCC_from_RTCC 6EBE  
                      __end_of_ST7032_init 52DA                        __end_of_ST7032_task 3538  
                      __end_of_ST7032_puts 6766                           ?i2_USBDeviceInit 002D  
                   __end_of_I2C_idle_check 6ED6                   settings_auto_stop@i_6143 0094  
                              ??_RTCC_init 0091                                   ?_display 0060  
                              ??_RTCC_task 0088                       _USBTransferOnePacket 49DA  
                                 ?_isdigit 002D                           _epoch_to_caltime 2C4A  
                                 OUT@value 0060                       __CFG_RTCOSC$T1OSCREF 000000  
                                 _I2C_busy 011A                                   _I2C_send 6F06  
                         _display_LCD$7053 01CE                           _display_LCD$7054 01D2  
                         _display_LCD$7055 01D6                           _display_LCD$7056 01DA  
                         _display_LCD$7057 01DE                                  _ctmu_task 6ED6  
                                 _I2C_stop 6F1C                                   _ADC_init 6DD0  
                              _PADCFG1bits 000F3C               __end_of_USBCtrlTrfOutHandler 670E  
                      ringbuf_backspace@rb 0068                              ?_I2C_init_new 002D  
                    ??_USBStdGetDscHandler 002D                            ST7032_task@data 0071  
                              _ep_data_out 0004                           ___lwdiv@quotient 0081  
                    terminal_at_hand@value 00D1                            ST7032_task@wait 010C  
                              ??i2___awdiv 0031                                   ?_sprintf 0083  
             __size_of_USBCtrlTrfRxService 0118                __size_of_settings_auto_stop 0242  
            USBConfigureEndpoint@direction 002D                                ??i2___lwdiv 0031  
                             i2_LED_output 6412                        __size_of_sleep_task 00D2  
                                data_out@i 00CB                                  data_out@p FBDC  
                                d_to_x@dec 0068                                   _CTMUCONH 000FB3  
                                 _CTMUCONL 000FB2                                   _CTMUICON 000FB1  
             __size_of_USBCtrlTrfTxService 00E0                   ringbuf_init@internal_buf 0062  
                           ___wmul@product 007A                 ??_USBCtrlEPServiceComplete 002E  
                    __end_of_ctmu_sampling 3FBC                      __end_of_LED_indicator 3C9E  
                             _millis_timer 6DAA                                   _IPR1bits 000F9F  
                                 _IPR2bits 000FA2                                   _PIE1bits 000F9D  
                                 _PIE2bits 000FA0                                   _IPR5bits 000F99  
                                 _PIE5bits 000F91                        __size_of_print_time 008C  
                    __end_of_ST7032_cursor 6B80                                   _PIR1bits 000F9E  
                                 i2u610_40 48A2                                   i2u610_47 4898  
                                 _PIR2bits 000FA1                                   i2u612_40 48E4  
                                 i2u612_47 48DA                                   i2u641_40 3652  
                                 _PIR5bits 000F98                                   i2u641_47 3648  
               epoch_to_caltime@year_cache 0126                                   i2u638_40 35C0  
                                 i2u638_47 35B6                                   i2u639_40 35F6  
                                 i2u639_47 35EC                  USBCtrlEPService@setup_cnt 0049  
                            ??_ringbuf_pop 006A                              ??_ringbuf_num 0062  
                            ??_ringbuf_put 006B                                   _RCONbits 000FD0  
                        _display_time_1602 13BE                              ??_putUSBUSART 0063  
                                 _UEP0bits 000F26         __end_of_settings_integrating_reset 2594  
               _settings_integrating_reset 2336                 _USBDeferINDataStagePackets 0010  
                    terminal_operation@op0 00DD                      terminal_operation@op1 00DF  
                    terminal_operation@op2 00E1                      terminal_operation@op3 00E3  
                                 _SSP1CON1 000FC6                                   _SSP1CON2 000FC5  
                            ??_timer0_init 0060                              ??_timer1_init 0061  
              __size_of_USBCheckStdRequest 00F2                                _display_LCD 051C  
                            ??_timer3_init 0060                              ??_normal_task 00CC  
                                 _SSP1STAT 000FC7                                   _UCONbits 000F65  
                     __end_of_USB_CDC_init 6EF8                         I2C_idle_check@mask 0061  
                     __end_of_USB_CDC_send 6E10                       __end_of_USB_CDC_task 41AE  
                       ?_display_time_1602 00B3                                _display_dec 62DA  
                     _USBConfigureEndpoint 5C02                            ?_RTCC_from_RTCC 0086  
                         __size_of_I2C_ISR 001E           __size_of_USBStdFeatureReqHandler 0280  
                               _ADCON0bits 000FC2                                 _ADCON1bits 000FC1  
                        ___wmul@multiplier 0076                      ?_USBTransferOnePacket 0060  
                          ?_I2C_idle_check 002D                           __CFG_SOSCSEL$LOW 000000  
                           software_init@i 0084             button_timer_interrupt@sw_value 0085  
                            ?_CDCTxService 002D                        ??_display_time_1602 00B9  
                             _RemoteWakeup 000F                          i2___awdiv@divisor 002F  
                                 i2_memset 6C64                             ??_I2C_init_new 0060  
                        i2___awdiv@counter 0031                          ??_ringbuf_put_num 0088  
                               ?_ctmu_task 002D                          ??_ringbuf_put_str 0073  
                            ringbuf_pop@rb 0068                              ringbuf_num@rb 0060  
                  __end_of_USBStallHandler 6946                              ringbuf_put@rb 0068  
                 ??_settings_led_indicator 0066                           ??_ST7032_command 0070  
                        ___lmul@multiplier 006D                           ??_ctmu_set_ratio 0083  
                              _INTCON2bits 000FF1                           _port_button_task 3124  
                                copy_data0 5B52                 __size_of_integrate_current 00FC  
              ??_USBCtrlEPAllowStatusStage 002D                __end_of_USBStdSetCfgHandler 473C  
                                 _Auto_cut 3A44                       epoch_to_caltime@year 0089  
            settings_task@item_change_flag 0099                              ??_USB_CDC_ISR 004B  
                   __size_of_terminal_task 036A                     __size_of_terminal_time 03AC  
                            ??_USB_CDC_get 006D                         __end_of_device_dsc FBD2  
                  ?_USBCtrlTrfSetupHandler 002D                  __end_of_display_time_1602 166E  
                  USBStdGetStatusHandler@p 002E                                   __Hrparam 0000  
                              _ST7032_init 5212                                   __Lrparam 0000  
                   USBTransferOnePacket@ep 0064                                _ST7032_task 33EA  
                            i2LED_output@b 002E                                _ST7032_puts 670E  
                                 _SetupPkt 000D30                              _weekday_3char FBA4  
                   __size_of_hardware_init 0056                      __size_of_month_length 00DE  
                       ringbuf_put_str@str 0071                      ?_USBConfigureEndpoint 002D  
                 __size_of_caltime_to_RTCC 00D6                          ??_USBDeviceAttach 0060  
                         __size_of___awdiv 00BE                           __size_of___awmod 00A2  
                         __size_of___lldiv 00BC                           __size_of___llmod 009A  
                         __size_of___lwdiv 0078                           __size_of___lwmod 0062  
                   __size_of_settings_task 0220                        __end_of_ringbuf_pop 5212  
                      __end_of_ringbuf_num 4574                        __end_of_ringbuf_put 4E06  
                      __end_of_putUSBUSART 6E30                                _line_coding 0189  
                           _integrate_flag 0121                             ??_CDCTxService 0067  
                           _integrate_time 6476                        __end_of_timer0_init 6A3A  
                    __size_of_ringbuf_init 0054                        __end_of_timer1_init 68B2  
                         __size_of_display 0136                                 sprintf@len 00A1  
                      __end_of_timer3_init 6C38                                 sprintf@val 00A3  
                      __end_of_normal_task 5078                        display_LCD@str_5618 01BA  
                        i2LED_output@value 002D                                 strcat@from 0062  
                                 _data_out 2E3C                           __size_of_isdigit 002A  
                  __size_of_USBDeviceTasks 0144                            ___lwdiv@divisor 007E  
                          ___lwdiv@counter 0080                       timer0_init@prescaler 0061  
                                 __ptext10 5EC2                                   __ptext11 6D84  
                                 __ptext20 27E8                                   __ptext12 5C96  
                                 __ptext21 473C                                   __ptext13 5524  
                 __end_ofdisplay_LCD@onoff FBDC                                   __ptext30 3FBC  
                                 __ptext22 6988                                   __ptext14 4574  
                                 __ptext31 051C                                   __ptext23 166E  
                                 __ptext15 4E06                                   __ptext40 0000  
                                 __ptext32 13BE                                   __ptext24 1912  
                                 __ptext16 4FAA                                   __ptext41 6C90  
                                 __ptext33 6A74                                   __ptext25 3DB6  
                                 __ptext17 2A2A                                   __ptext50 6766  
                                 __ptext42 5B68                                   __ptext34 62DA  
                                 __ptext26 3124                                   __ptext18 2594  
                                 __ptext51 6C0C                                   __ptext43 63AE  
                                 __ptext35 659A                                   __ptext27 390E  
                                 __ptext19 2336                                   __ptext60 67BC  
                                 __ptext52 6862                                   __ptext44 64D8  
                                 __ptext36 670E                                   __ptext28 60A8  
                                 __ptext61 6EF8                                   __ptext53 6A00  
                                 __ptext45 3A44                                   __ptext37 611A  
                                 __ptext29 6476                                   __ptext70 55E4  
                                 __ptext62 61FE                                   __ptext54 6EEA  
                                 __ptext46 6AE4                                   __ptext38 6B4E  
                                 __ptext71 6D36                                   __ptext63 6E6E  
                                 __ptext55 68B2                                   __ptext47 618C  
                                 __ptext39 2E3C                                   __ptext80 4D32  
                                 __ptext72 6DD0                                   __ptext64 6344  
                                 __ptext56 3288                                   __ptext48 6BE0  
                                 __ptext81 6DF0                                   __ptext73 6ED6  
                                 __ptext65 6E8A                                   __ptext57 6B1A  
                                 __ptext49 6BB2                                   __ptext90 6F1C  
                                 __ptext82 6E10                                   __ptext74 3EBA  
                                 __ptext66 2C4A                                   __ptext58 6AAC  
                                 __ptext91 6F20                                   __ptext83 6CBA  
                                 __ptext75 10F6                                   __ptext67 4C5E  
                                 __ptext59 5212                                   __ptext92 6F06  
                                 __ptext84 4ED8                                   __ptext76 5F44  
                                 __ptext68 4AB2                                   __ptext93 6EBE  
                                 __ptext85 2FB4                                   __ptext77 5462  
                                 __ptext69 6D0E                                   __ptext94 6A3A  
                                 __ptext86 49DA                                   __ptext78 56A2  
                                 __ptext95 6EA4                                   __ptext87 33EA  
                                 __ptext79 40B8                                   __ptext96 1BB6  
                                 __ptext88 5146                                   __ptext97 48FC  
                                 __ptext89 4486                                   __ptext98 598E  
                                 __ptext99 6032                               _SSP1CON1bits 000FC6  
                             _SSP1CON2bits 000FC5           __size_of_RTCC_adjust_time_cursor 0104  
                __size_of_terminal_at_hand 0060           __size_of_RTCC_adjust_time_toggle 003C  
                                 _bootload 6946                           __size_of_sprintf 051C  
                               strcpy@from 0062                       terminal_at_hand@hand 00CD  
                            __size_of_atoi 00F2             __end_of_USBCtrlTrfSetupHandler 5DB2  
                            __size_of_main 0076                          ?_USBCtrlEPService 002D  
                              data_out@str 00AD                               _month_length 48FC  
                       ??_USBCtrlEPService 0047                   __size_of_RTCC_from_epoch 001A  
                      _USBCtrlTrfInHandler 539E                        __end_of_USB_CDC_ISR 6F16  
                             ??_sleep_task 0075                        __end_of_USB_CDC_get 6CE4  
                                 _outPipes 00E6                           ??_ringbuf_delete 0062  
                  ?_button_timer_interrupt 0083                       _USBCtrlTrfOutHandler 66B2  
                                 int$flags 0059                               _ringbuf_init 67BC  
                                 atoi@sign 0080                  _USBCtrlEPAllowStatusStage 52DA  
         settings_integrating_reset@i_6177 0097                                  x_to_d@hex 0061  
                             _SSP1STATbits 000FC7                                   display@i 0065  
                   ??_USBTransferOnePacket 0064                              _terminal_task 0D8C  
                            _terminal_time 09E0                     __end_of_integrate_time 64D8  
                _USBDeferStatusStagePacket 0012                               ??_print_time 00AD  
                 CDCTxService@byte_to_send 006B               __size_of_USB_CDC_buffer_init 004E  
                              _OSCTUNEbits 000F9B                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002D                                ??_ctmu_task 0088  
            USBCtrlTrfTxService@byteToSend 002D                                 _ST7032_put 611A  
                          display_dec@edit 00AE                              _hardware_init 6766  
                                 isdigit@c 0062                                   memset@p1 0060  
                         ?_USBStallHandler 002D                   USBStdFeatureReqHandler@p 0045  
                         get_quot_rem@quot 0079                  terminal_task@command_init 012D  
                               _LED_output 60A8                          RTCC_to_caltime@tm 0062  
          __size_of_settings_led_indicator 0254                         USB_CDC_send@length 006C  
            __size_of_RTCC_adjust_time_dec 02A4              __size_of_RTCC_adjust_time_inc 02A4  
                                 intlevel2 0000                                  sprintf@ap 009F  
                                sprintf@cp 009D                                  sprintf@sp 0083  
                       __end_of_sleep_task 4ED8                     __size_of_USBDeviceInit 0162  
                            _settings_flag 0122                              _settings_item 0020  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 66B2   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 003F           ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
          _USER_USB_CALLBACK_EVENT_HANDLER 6656                              _settings_task 2A2A  
                         ___lwmod@dividend 0060               i2USBTransferOnePacket@handle 0032  
                         ___lldiv@dividend 0060                                 _RCSTA1bits 000FAC  
                      terminal_at_hand@max 00D0                        terminal_at_hand@min 00CF  
                        ?_caltime_to_epoch 0079                          _ringbuf_backspace 5C96  
               __size_of_display_time_1602 02B0                   __end_of_epoch_to_caltime 2E3C  
                 __size_of_RTCC_to_caltime 00BC                      __size_of_USB_CDC_init 000E  
                    __size_of_USB_CDC_send 0020                      __size_of_USB_CDC_task 00F6  
                       USB_CDC_task@length 0072                                 _OSCCONbits 000FD3  
           __end_of_button_timer_interrupt 13BE                 __end_of_terminal_operation 2336  
                       __end_of_print_time 5E3E                 i2USBTransferOnePacket@data 002E  
                       ??_caltime_to_epoch 007B                         ?_ringbuf_backspace 0068  
                     __end_of_I2C_init_new 6E8A                     ??_USBConfigureEndpoint 002E  
                    ?_USBCtrlTrfOutHandler 002D                                _ringbuf_pop 5146  
                              _ringbuf_num 4486                                _ringbuf_put 4D32  
                              _putUSBUSART 6E10                        _USBCtrlTrfRxService 3C9E  
                              _timer0_init 6A00                         _USBWakeFromSuspend 6B80  
                              _timer1_init 6862                                _timer3_init 6C0C  
                              _normal_task 4FAA                             ?_terminal_task 0192  
                           ?_terminal_time 00D2                    _USBStdFeatureReqHandler 1E44  
                       _USBCheckCDCRequest 4B88                        _USBCtrlTrfTxService 481C  
                          ?_integrate_time 002D                        ??_ringbuf_backspace 006A  
                          get_quot_rem@div 007B                            get_quot_rem@num 007D  
                               _RTCCFGbits 000F3F                     __size_of_software_init 00C0  
                                 sprintf@c 00A8                                   sprintf@f 0085  
                                 strcat@cp 0064                                   strcat@to 0060  
                      ?_USBWakeFromSuspend 002D                                   strcmp@s1 0060  
                                 strcmp@s2 0062                  settings_led_indicator@str 0067  
                         ___lldiv@quotient 0068                            ___lwmod@divisor 0062  
                        caltime_to_RTCC@tm 0069                          ??_caltime_to_RTCC 006B  
                    ??_USBCtrlTrfInHandler 002E                                   strcpy@cp 0064  
                                 strcpy@to 0060                      _USBAlternateInterface 0190  
                          ___lwmod@counter 0064                         terminal_at_hand@tx 00CB  
                      ?_USBCheckCDCRequest 002D                             ?_hardware_init 002D  
                i2USBTransferOnePacket@dir 002D                  i2USBTransferOnePacket@len 0030  
                      USBEnableEndpoint@ep 0038                            _endpoint_number 001E  
             __end_of_settings_adjust_time 481C                       ?_USBCtrlTrfRxService 002D  
          epoch_to_caltime@day_since_epoch 0085                              ?_getsUSBUSART 0067  
                             _USB_CDC_init 6EEA                               _USB_CDC_send 6DF0  
                             _USB_CDC_task 40B8                         integrate_current@i 006F  
                 ?_USBCtrlEPAllowDataStage 002D                             ?_settings_task 002D  
                     ?_USBCtrlTrfTxService 002D                                _USB_CDC_ISR 6F10  
                __end_of_ringbuf_backspace 5D24               _USBStatusStageTimeoutCounter 0016  
                              _USB_CDC_get 6CBA                       ??_USBWakeFromSuspend 0041  
               USBTransferOnePacket@handle 0065                       __end_of_CDCTxService 3124  
                     ??_USBCheckCDCRequest 002D                                 _USB_CD_Ptr FA7F  
                         ??_RTCC_from_RTCC 0088  
