

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Sun Nov 15 19:02:34 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   150                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   151                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   152                           	psect	pa_nodes,global,class=CODE,delta=1
   153                           	dabs	1,0xD00,48,_BDT
   154                           	dabs	1,0xD38,8,_CtrlTrfData
   155                           	dabs	1,0xD30,8,_SetupPkt
   156  0000                     tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           prodh	equ	0xFF4
   161                           prodl	equ	0xFF3
   162                           intcon	equ	0xFF2
   163                           intcon2	equ	0xFF1
   164                           wreg	equ	0xFE8
   165                           indf1	equ	0xFE7
   166                           postinc1	equ	0xFE6
   167                           postdec1	equ	0xFE5
   168                           fsr1h	equ	0xFE2
   169                           fsr1l	equ	0xFE1
   170                           indf2	equ	0xFDF
   171                           postinc2	equ	0xFDE
   172                           postdec2	equ	0xFDD
   173                           plusw2	equ	0xFDB
   174                           fsr2h	equ	0xFDA
   175                           fsr2l	equ	0xFD9
   176                           status	equ	0xFD8
   177                           
   178                           	psect	idataBANK1
   179  0145A4                     __pidataBANK1:
   180                           	opt stack 0
   181                           
   182                           ;initializer for ST7032_cursor@F8592
   183  0145A4  00                 	db	0
   184  0145A5  40                 	db	64
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           prodh	equ	0xFF4
   190                           prodl	equ	0xFF3
   191                           intcon	equ	0xFF2
   192                           intcon2	equ	0xFF1
   193                           wreg	equ	0xFE8
   194                           indf1	equ	0xFE7
   195                           postinc1	equ	0xFE6
   196                           postdec1	equ	0xFE5
   197                           fsr1h	equ	0xFE2
   198                           fsr1l	equ	0xFE1
   199                           indf2	equ	0xFDF
   200                           postinc2	equ	0xFDE
   201                           postdec2	equ	0xFDD
   202                           plusw2	equ	0xFDB
   203                           fsr2h	equ	0xFDA
   204                           fsr2l	equ	0xFD9
   205                           status	equ	0xFD8
   206                           
   207                           	psect	mediumconst
   208  00FA50                     __pmediumconst:
   209                           	opt stack 0
   210  00FA50  00                 	db	0
   211  00FA51                     _dpowers:
   212                           	opt stack 0
   213  00FA51  0001               	dw	1
   214  00FA53  0000               	dw	0
   215  00FA55  000A               	dw	10
   216  00FA57  0000               	dw	0
   217  00FA59  0064               	dw	100
   218  00FA5B  0000               	dw	0
   219  00FA5D  03E8               	dw	1000
   220  00FA5F  0000               	dw	0
   221  00FA61  2710               	dw	10000
   222  00FA63  0000               	dw	0
   223  00FA65  86A0               	dw	34464
   224  00FA67  0001               	dw	1
   225  00FA69  4240               	dw	16960
   226  00FA6B  000F               	dw	15
   227  00FA6D  9680               	dw	38528
   228  00FA6F  0098               	dw	152
   229  00FA71  E100               	dw	57600
   230  00FA73  05F5               	dw	1525
   231  00FA75  CA00               	dw	51712
   232  00FA77  3B9A               	dw	15258
   233  00FA79                     __end_of_dpowers:
   234                           	opt stack 0
   235  00FA79                     _USB_SD_Ptr:
   236                           	opt stack 0
   237  00FA79  E2                 	db	low _sd000
   238  00FA7A  FB                 	db	high _sd000
   239  00FA7B  3C                 	db	low _sd001
   240  00FA7C  FB                 	db	high _sd001
   241  00FA7D  70                 	db	low _sd002
   242  00FA7E  FB                 	db	high _sd002
   243  00FA7F                     __end_of_USB_SD_Ptr:
   244                           	opt stack 0
   245  00FA7F                     _USB_CD_Ptr:
   246                           	opt stack 0
   247  00FA7F  F9                 	db	low _configDescriptor1
   248  00FA80  FA                 	db	high _configDescriptor1
   249  00FA81                     __end_of_USB_CD_Ptr:
   250                           	opt stack 0
   251  00FA81                     display_LCD@port_char:
   252                           	opt stack 0
   253  00FA81  4C                 	db	76
   254  00FA82  45                 	db	69
   255  00FA83  46                 	db	70
   256  00FA84  54                 	db	84
   257  00FA85  20                 	db	32
   258  00FA86  20                 	db	32
   259  00FA87  20                 	db	32
   260  00FA88  50                 	db	80
   261  00FA89  4F                 	db	79
   262  00FA8A  52                 	db	82
   263  00FA8B  54                 	db	84
   264  00FA8C  00                 	db	0
   265  00FA8D  00                 	db	0
   266  00FA8E  00                 	db	0
   267  00FA8F  00                 	db	0
   268  00FA90  00                 	db	0
   269  00FA91  00                 	db	0
   270  00FA92  00                 	db	0
   271  00FA93  00                 	db	0
   272  00FA94  00                 	db	0
   273  00FA95  43                 	db	67
   274  00FA96  45                 	db	69
   275  00FA97  4E                 	db	78
   276  00FA98  54                 	db	84
   277  00FA99  45                 	db	69
   278  00FA9A  52                 	db	82
   279  00FA9B  20                 	db	32
   280  00FA9C  50                 	db	80
   281  00FA9D  4F                 	db	79
   282  00FA9E  52                 	db	82
   283  00FA9F  54                 	db	84
   284  00FAA0  00                 	db	0
   285  00FAA1  00                 	db	0
   286  00FAA2  00                 	db	0
   287  00FAA3  00                 	db	0
   288  00FAA4  00                 	db	0
   289  00FAA5  00                 	db	0
   290  00FAA6  00                 	db	0
   291  00FAA7  00                 	db	0
   292  00FAA8  00                 	db	0
   293  00FAA9  52                 	db	82
   294  00FAAA  49                 	db	73
   295  00FAAB  47                 	db	71
   296  00FAAC  48                 	db	72
   297  00FAAD  54                 	db	84
   298  00FAAE  20                 	db	32
   299  00FAAF  20                 	db	32
   300  00FAB0  50                 	db	80
   301  00FAB1  4F                 	db	79
   302  00FAB2  52                 	db	82
   303  00FAB3  54                 	db	84
   304  00FAB4  00                 	db	0
   305  00FAB5  00                 	db	0
   306  00FAB6  00                 	db	0
   307  00FAB7  00                 	db	0
   308  00FAB8  00                 	db	0
   309  00FAB9  00                 	db	0
   310  00FABA  00                 	db	0
   311  00FABB  00                 	db	0
   312  00FABC  00                 	db	0
   313  00FABD  4C                 	db	76
   314  00FABE  65                 	db	101
   315  00FABF  66                 	db	102
   316  00FAC0  74                 	db	116
   317  00FAC1  20                 	db	32
   318  00FAC2  20                 	db	32
   319  00FAC3  20                 	db	32
   320  00FAC4  50                 	db	80
   321  00FAC5  6F                 	db	111
   322  00FAC6  72                 	db	114
   323  00FAC7  74                 	db	116
   324  00FAC8  00                 	db	0
   325  00FAC9  00                 	db	0
   326  00FACA  00                 	db	0
   327  00FACB  00                 	db	0
   328  00FACC  00                 	db	0
   329  00FACD  00                 	db	0
   330  00FACE  00                 	db	0
   331  00FACF  00                 	db	0
   332  00FAD0  00                 	db	0
   333  00FAD1  43                 	db	67
   334  00FAD2  65                 	db	101
   335  00FAD3  6E                 	db	110
   336  00FAD4  74                 	db	116
   337  00FAD5  65                 	db	101
   338  00FAD6  72                 	db	114
   339  00FAD7  20                 	db	32
   340  00FAD8  50                 	db	80
   341  00FAD9  6F                 	db	111
   342  00FADA  72                 	db	114
   343  00FADB  74                 	db	116
   344  00FADC  00                 	db	0
   345  00FADD  00                 	db	0
   346  00FADE  00                 	db	0
   347  00FADF  00                 	db	0
   348  00FAE0  00                 	db	0
   349  00FAE1  00                 	db	0
   350  00FAE2  00                 	db	0
   351  00FAE3  00                 	db	0
   352  00FAE4  00                 	db	0
   353  00FAE5  52                 	db	82
   354  00FAE6  69                 	db	105
   355  00FAE7  67                 	db	103
   356  00FAE8  68                 	db	104
   357  00FAE9  74                 	db	116
   358  00FAEA  20                 	db	32
   359  00FAEB  20                 	db	32
   360  00FAEC  50                 	db	80
   361  00FAED  6F                 	db	111
   362  00FAEE  72                 	db	114
   363  00FAEF  74                 	db	116
   364  00FAF0  00                 	db	0
   365  00FAF1  00                 	db	0
   366  00FAF2  00                 	db	0
   367  00FAF3  00                 	db	0
   368  00FAF4  00                 	db	0
   369  00FAF5  00                 	db	0
   370  00FAF6  00                 	db	0
   371  00FAF7  00                 	db	0
   372  00FAF8  00                 	db	0
   373  00FAF9                     __end_ofdisplay_LCD@port_char:
   374                           	opt stack 0
   375  00FAF9                     _configDescriptor1:
   376                           	opt stack 0
   377  00FAF9  09                 	db	9
   378  00FAFA  02                 	db	2
   379  00FAFB  43                 	db	67
   380  00FAFC  00                 	db	0
   381  00FAFD  02                 	db	2
   382  00FAFE  01                 	db	1
   383  00FAFF  00                 	db	0
   384  00FB00  C0                 	db	192
   385  00FB01  32                 	db	50
   386  00FB02  09                 	db	9
   387  00FB03  04                 	db	4
   388  00FB04  00                 	db	0
   389  00FB05  00                 	db	0
   390  00FB06  01                 	db	1
   391  00FB07  02                 	db	2
   392  00FB08  02                 	db	2
   393  00FB09  01                 	db	1
   394  00FB0A  00                 	db	0
   395  00FB0B  05                 	db	5
   396  00FB0C  24                 	db	36
   397  00FB0D  00                 	db	0
   398  00FB0E  10                 	db	16
   399  00FB0F  01                 	db	1
   400  00FB10  04                 	db	4
   401  00FB11  24                 	db	36
   402  00FB12  02                 	db	2
   403  00FB13  02                 	db	2
   404  00FB14  05                 	db	5
   405  00FB15  24                 	db	36
   406  00FB16  06                 	db	6
   407  00FB17  00                 	db	0
   408  00FB18  01                 	db	1
   409  00FB19  05                 	db	5
   410  00FB1A  24                 	db	36
   411  00FB1B  01                 	db	1
   412  00FB1C  00                 	db	0
   413  00FB1D  01                 	db	1
   414  00FB1E  07                 	db	7
   415  00FB1F  05                 	db	5
   416  00FB20  81                 	db	129
   417  00FB21  03                 	db	3
   418  00FB22  08                 	db	8
   419  00FB23  00                 	db	0
   420  00FB24  02                 	db	2
   421  00FB25  09                 	db	9
   422  00FB26  04                 	db	4
   423  00FB27  01                 	db	1
   424  00FB28  00                 	db	0
   425  00FB29  02                 	db	2
   426  00FB2A  0A                 	db	10
   427  00FB2B  00                 	db	0
   428  00FB2C  00                 	db	0
   429  00FB2D  00                 	db	0
   430  00FB2E  07                 	db	7
   431  00FB2F  05                 	db	5
   432  00FB30  02                 	db	2
   433  00FB31  02                 	db	2
   434  00FB32  40                 	db	64
   435  00FB33  00                 	db	0
   436  00FB34  00                 	db	0
   437  00FB35  07                 	db	7
   438  00FB36  05                 	db	5
   439  00FB37  82                 	db	130
   440  00FB38  02                 	db	2
   441  00FB39  40                 	db	64
   442  00FB3A  00                 	db	0
   443  00FB3B  00                 	db	0
   444  00FB3C                     __end_of_configDescriptor1:
   445                           	opt stack 0
   446  00FB3C                     _sd001:
   447                           	opt stack 0
   448  00FB3C  34                 	db	52
   449  00FB3D  03                 	db	3
   450  00FB3E  004D               	dw	77
   451  00FB40  0069               	dw	105
   452  00FB42  0063               	dw	99
   453  00FB44  0072               	dw	114
   454  00FB46  006F               	dw	111
   455  00FB48  0063               	dw	99
   456  00FB4A  0068               	dw	104
   457  00FB4C  0069               	dw	105
   458  00FB4E  0070               	dw	112
   459  00FB50  0020               	dw	32
   460  00FB52  0054               	dw	84
   461  00FB54  0065               	dw	101
   462  00FB56  0063               	dw	99
   463  00FB58  0068               	dw	104
   464  00FB5A  006E               	dw	110
   465  00FB5C  006F               	dw	111
   466  00FB5E  006C               	dw	108
   467  00FB60  006F               	dw	111
   468  00FB62  0067               	dw	103
   469  00FB64  0079               	dw	121
   470  00FB66  0020               	dw	32
   471  00FB68  0049               	dw	73
   472  00FB6A  006E               	dw	110
   473  00FB6C  0063               	dw	99
   474  00FB6E  002E               	dw	46
   475  00FB70                     __end_of_sd001:
   476                           	opt stack 0
   477  00FB70                     _sd002:
   478                           	opt stack 0
   479  00FB70  34                 	db	52
   480  00FB71  03                 	db	3
   481  00FB72  0043               	dw	67
   482  00FB74  0044               	dw	68
   483  00FB76  0043               	dw	67
   484  00FB78  0020               	dw	32
   485  00FB7A  0052               	dw	82
   486  00FB7C  0053               	dw	83
   487  00FB7E  002D               	dw	45
   488  00FB80  0032               	dw	50
   489  00FB82  0033               	dw	51
   490  00FB84  0032               	dw	50
   491  00FB86  0020               	dw	32
   492  00FB88  0045               	dw	69
   493  00FB8A  006D               	dw	109
   494  00FB8C  0075               	dw	117
   495  00FB8E  006C               	dw	108
   496  00FB90  0061               	dw	97
   497  00FB92  0074               	dw	116
   498  00FB94  0069               	dw	105
   499  00FB96  006F               	dw	111
   500  00FB98  006E               	dw	110
   501  00FB9A  0020               	dw	32
   502  00FB9C  0044               	dw	68
   503  00FB9E  0065               	dw	101
   504  00FBA0  006D               	dw	109
   505  00FBA2  006F               	dw	111
   506  00FBA4                     __end_of_sd002:
   507                           	opt stack 0
   508  00FBA4                     _weekday_3char:
   509                           	opt stack 0
   510  00FBA4  53                 	db	83
   511  00FBA5  55                 	db	85
   512  00FBA6  4E                 	db	78
   513  00FBA7  00                 	db	0
   514  00FBA8  4D                 	db	77
   515  00FBA9  4F                 	db	79
   516  00FBAA  4E                 	db	78
   517  00FBAB  00                 	db	0
   518  00FBAC  54                 	db	84
   519  00FBAD  55                 	db	85
   520  00FBAE  45                 	db	69
   521  00FBAF  00                 	db	0
   522  00FBB0  57                 	db	87
   523  00FBB1  45                 	db	69
   524  00FBB2  44                 	db	68
   525  00FBB3  00                 	db	0
   526  00FBB4  54                 	db	84
   527  00FBB5  48                 	db	72
   528  00FBB6  55                 	db	85
   529  00FBB7  00                 	db	0
   530  00FBB8  46                 	db	70
   531  00FBB9  52                 	db	82
   532  00FBBA  49                 	db	73
   533  00FBBB  00                 	db	0
   534  00FBBC  53                 	db	83
   535  00FBBD  41                 	db	65
   536  00FBBE  54                 	db	84
   537  00FBBF  00                 	db	0
   538  00FBC0                     __end_of_weekday_3char:
   539                           	opt stack 0
   540  00FBC0                     _device_dsc:
   541                           	opt stack 0
   542  00FBC0  12                 	db	18
   543  00FBC1  01                 	db	1
   544  00FBC2  0200               	dw	512
   545  00FBC4  02                 	db	2
   546  00FBC5  00                 	db	0
   547  00FBC6  00                 	db	0
   548  00FBC7  08                 	db	8
   549  00FBC8  04D8               	dw	1240
   550  00FBCA  000A               	dw	10
   551  00FBCC  0100               	dw	256
   552  00FBCE  01                 	db	1
   553  00FBCF  02                 	db	2
   554  00FBD0  00                 	db	0
   555  00FBD1  01                 	db	1
   556  00FBD2                     __end_of_device_dsc:
   557                           	opt stack 0
   558  00FBD2                     display_LCD@onoff:
   559                           	opt stack 0
   560  00FBD2  20                 	db	32
   561  00FBD3  4F                 	db	79
   562  00FBD4  46                 	db	70
   563  00FBD5  46                 	db	70
   564  00FBD6  00                 	db	0
   565  00FBD7  20                 	db	32
   566  00FBD8  4F                 	db	79
   567  00FBD9  4E                 	db	78
   568  00FBDA  20                 	db	32
   569  00FBDB  00                 	db	0
   570  00FBDC                     __end_ofdisplay_LCD@onoff:
   571                           	opt stack 0
   572  00FBDC                     data_out@p:
   573                           	opt stack 0
   574  00FBDC  4C                 	db	76
   575  00FBDD  00                 	db	0
   576  00FBDE  43                 	db	67
   577  00FBDF  00                 	db	0
   578  00FBE0  52                 	db	82
   579  00FBE1  00                 	db	0
   580  00FBE2                     __end_ofdata_out@p:
   581                           	opt stack 0
   582  00FBE2                     _sd000:
   583                           	opt stack 0
   584  00FBE2  04                 	db	4
   585  00FBE3  03                 	db	3
   586  00FBE4  0409               	dw	1033
   587  00FBE6                     __end_of_sd000:
   588                           	opt stack 0
   589  0000                     _ANCON0	set	3912
   590  0000                     _ANCON1	set	3913
   591  0000                     _PADCFG1bits	set	3900
   592  0000                     _RTCCAL	set	3902
   593  0000                     _RTCCFGbits	set	3903
   594  0000                     _RTCVALH	set	3899
   595  0000                     _RTCVALL	set	3898
   596  0000                     _UADDR	set	3896
   597  0000                     _UCFG	set	3897
   598  0000                     _UEIE	set	3895
   599  0000                     _UEP0bits	set	3878
   600  0000                     _UIE	set	3894
   601  0000                     _UIEbits	set	3894
   602  0000                     _UEP0	set	3878
   603  0000                     _UEP1	set	3879
   604  0000                     _ADRES	set	4035
   605  0000                     _ADCON0bits	set	4034
   606  0000                     _ADCON1bits	set	4033
   607  0000                     _CTMUCONH	set	4019
   608  0000                     _CTMUCONHbits	set	4019
   609  0000                     _CTMUCONL	set	4018
   610  0000                     _CTMUCONLbits	set	4018
   611  0000                     _CTMUICON	set	4017
   612  0000                     _EECON2	set	4007
   613  0000                     _INTCON2bits	set	4081
   614  0000                     _INTCONbits	set	4082
   615  0000                     _IPR1bits	set	3999
   616  0000                     _IPR2bits	set	4002
   617  0000                     _OSCCONbits	set	4051
   618  0000                     _OSCTUNEbits	set	3995
   619  0000                     _PIE1bits	set	3997
   620  0000                     _PIE2bits	set	4000
   621  0000                     _PIR1bits	set	3998
   622  0000                     _PIR2bits	set	4001
   623  0000                     _RCONbits	set	4048
   624  0000                     _SSP1ADD	set	4040
   625  0000                     _SSP1BUF	set	4041
   626  0000                     _SSP1CON1	set	4038
   627  0000                     _SSP1CON2	set	4037
   628  0000                     _SSP1CON2bits	set	4037
   629  0000                     _SSP1STAT	set	4039
   630  0000                     _T0CONbits	set	4053
   631  0000                     _T1CONbits	set	4045
   632  0000                     _T3CONbits	set	3961
   633  0000                     _TMR1H	set	4047
   634  0000                     _TRISA	set	3986
   635  0000                     _TRISB	set	3987
   636  0000                     _TRISC	set	3988
   637  0000                     _UCON	set	3941
   638  0000                     _UCONbits	set	3941
   639  0000                     _UEIR	set	3939
   640  0000                     _UIR	set	3938
   641  0000                     _UIRbits	set	3938
   642  0000                     _USTAT	set	3940
   643  0000                     _LATA5	set	31821
   644  0000                     _LATA6	set	31822
   645  0000                     _LATA7	set	31823
   646  0000                     _LATB2	set	31826
   647  0000                     _LATB6	set	31830
   648  0000                     _LATB7	set	31831
   649  0000                     _LATC2	set	31834
   650  00FBE6                     STR_53:
   651  00FBE6  09                 	db	9
   652  00FBE7  2A                 	db	42
   653  00FBE8  2A                 	db	42
   654  00FBE9  2A                 	db	42
   655  00FBEA  2A                 	db	42
   656  00FBEB  2A                 	db	42
   657  00FBEC  2A                 	db	42
   658  00FBED  2A                 	db	42
   659  00FBEE  2A                 	db	42
   660  00FBEF  2A                 	db	42
   661  00FBF0  2A                 	db	42
   662  00FBF1  2A                 	db	42
   663  00FBF2  2A                 	db	42
   664  00FBF3  2A                 	db	42
   665  00FBF4  2A                 	db	42
   666  00FBF5  2A                 	db	42
   667  00FBF6  2A                 	db	42
   668  00FBF7  2A                 	db	42
   669  00FBF8  2A                 	db	42
   670  00FBF9  2A                 	db	42
   671  00FBFA  2A                 	db	42
   672  00FBFB  2A                 	db	42
   673  00FBFC  2A                 	db	42
   674  00FBFD  2A                 	db	42
   675  00FBFE  2A                 	db	42
   676  00FBFF  2A                 	db	42
   677  00FC00  2A                 	db	42
   678  00FC01  2A                 	db	42
   679  00FC02  2A                 	db	42
   680  00FC03  2A                 	db	42
   681  00FC04  0A                 	db	10
   682  00FC05  09                 	db	9
   683  00FC06  2A                 	db	42
   684  00FC07  2A                 	db	42
   685  00FC08  2A                 	db	42
   686  00FC09  2A                 	db	42
   687  00FC0A  20                 	db	32
   688  00FC0B  43                 	db	67	;'C'
   689  00FC0C  68                 	db	104	;'h'
   690  00FC0D  61                 	db	97	;'a'
   691  00FC0E  72                 	db	114	;'r'
   692  00FC0F  67                 	db	103	;'g'
   693  00FC10  65                 	db	101	;'e'
   694  00FC11  20                 	db	32
   695  00FC12  53                 	db	83	;'S'
   696  00FC13  74                 	db	116	;'t'
   697  00FC14  61                 	db	97	;'a'
   698  00FC15  74                 	db	116	;'t'
   699  00FC16  69                 	db	105	;'i'
   700  00FC17  6F                 	db	111	;'o'
   701  00FC18  6E                 	db	110	;'n'
   702  00FC19  20                 	db	32
   703  00FC1A  36                 	db	54	;'6'
   704  00FC1B  2E                 	db	46
   705  00FC1C  31                 	db	49	;'1'
   706  00FC1D  32                 	db	50	;'2'
   707  00FC1E  20                 	db	32
   708  00FC1F  2A                 	db	42
   709  00FC20  2A                 	db	42
   710  00FC21  2A                 	db	42
   711  00FC22  2A                 	db	42
   712  00FC23  0A                 	db	10
   713  00FC24  09                 	db	9
   714  00FC25  2A                 	db	42
   715  00FC26  2A                 	db	42
   716  00FC27  2A                 	db	42
   717  00FC28  2A                 	db	42
   718  00FC29  20                 	db	32
   719  00FC2A  4D                 	db	77	;'M'
   720  00FC2B  61                 	db	97	;'a'
   721  00FC2C  64                 	db	100	;'d'
   722  00FC2D  65                 	db	101	;'e'
   723  00FC2E  20                 	db	32
   724  00FC2F  62                 	db	98	;'b'
   725  00FC30  79                 	db	121	;'y'
   726  00FC31  20                 	db	32
   727  00FC32  40                 	db	64	;'@'
   728  00FC33  52                 	db	82	;'R'
   729  00FC34  79                 	db	121	;'y'
   730  00FC35  6F                 	db	111	;'o'
   731  00FC36  6B                 	db	107	;'k'
   732  00FC37  65                 	db	101	;'e'
   733  00FC38  72                 	db	114	;'r'
   734  00FC39  69                 	db	105	;'i'
   735  00FC3A  31                 	db	49	;'1'
   736  00FC3B  34                 	db	52	;'4'
   737  00FC3C  20                 	db	32
   738  00FC3D  20                 	db	32
   739  00FC3E  2A                 	db	42
   740  00FC3F  2A                 	db	42
   741  00FC40  2A                 	db	42
   742  00FC41  2A                 	db	42
   743  00FC42  0A                 	db	10
   744  00FC43  09                 	db	9
   745  00FC44  2A                 	db	42
   746  00FC45  2A                 	db	42
   747  00FC46  2A                 	db	42
   748  00FC47  2A                 	db	42
   749  00FC48  2A                 	db	42
   750  00FC49  2A                 	db	42
   751  00FC4A  2A                 	db	42
   752  00FC4B  2A                 	db	42
   753  00FC4C  2A                 	db	42
   754  00FC4D  2A                 	db	42
   755  00FC4E  2A                 	db	42
   756  00FC4F  2A                 	db	42
   757  00FC50  2A                 	db	42
   758  00FC51  2A                 	db	42
   759  00FC52  2A                 	db	42
   760  00FC53  2A                 	db	42
   761  00FC54  2A                 	db	42
   762  00FC55  2A                 	db	42
   763  00FC56  2A                 	db	42
   764  00FC57  2A                 	db	42
   765  00FC58  2A                 	db	42
   766  00FC59  2A                 	db	42
   767  00FC5A  2A                 	db	42
   768  00FC5B  2A                 	db	42
   769  00FC5C  2A                 	db	42
   770  00FC5D  2A                 	db	42
   771  00FC5E  2A                 	db	42
   772  00FC5F  2A                 	db	42
   773  00FC60  2A                 	db	42
   774  00FC61  0A                 	db	10
   775  00FC62  0A                 	db	10
   776  00FC63  09                 	db	9
   777  00FC64  70                 	db	112	;'p'
   778  00FC65  72                 	db	114	;'r'
   779  00FC66  69                 	db	105	;'i'
   780  00FC67  6E                 	db	110	;'n'
   781  00FC68  74                 	db	116	;'t'
   782  00FC69  5F                 	db	95	;'_'
   783  00FC6A  74                 	db	116	;'t'
   784  00FC6B  69                 	db	105	;'i'
   785  00FC6C  6D                 	db	109	;'m'
   786  00FC6D  65                 	db	101	;'e'
   787  00FC6E  28                 	db	40
   788  00FC6F  74                 	db	116	;'t'
   789  00FC70  29                 	db	41
   790  00FC71  0A                 	db	10
   791  00FC72  09                 	db	9
   792  00FC73  61                 	db	97	;'a'
   793  00FC74  64                 	db	100	;'d'
   794  00FC75  6A                 	db	106	;'j'
   795  00FC76  75                 	db	117	;'u'
   796  00FC77  73                 	db	115	;'s'
   797  00FC78  74                 	db	116	;'t'
   798  00FC79  5F                 	db	95	;'_'
   799  00FC7A  74                 	db	116	;'t'
   800  00FC7B  69                 	db	105	;'i'
   801  00FC7C  6D                 	db	109	;'m'
   802  00FC7D  65                 	db	101	;'e'
   803  00FC7E  28                 	db	40
   804  00FC7F  61                 	db	97	;'a'
   805  00FC80  74                 	db	116	;'t'
   806  00FC81  29                 	db	41
   807  00FC82  20                 	db	32
   808  00FC83  5B                 	db	91	;'['
   809  00FC84  68                 	db	104	;'h'
   810  00FC85  61                 	db	97	;'a'
   811  00FC86  6E                 	db	110	;'n'
   812  00FC87  64                 	db	100	;'d'
   813  00FC88  3A                 	db	58	;':'
   814  00FC89  79                 	db	121	;'y'
   815  00FC8A  2C                 	db	44
   816  00FC8B  4D                 	db	77	;'M'
   817  00FC8C  2C                 	db	44
   818  00FC8D  64                 	db	100	;'d'
   819  00FC8E  2C                 	db	44
   820  00FC8F  68                 	db	104	;'h'
   821  00FC90  2C                 	db	44
   822  00FC91  6D                 	db	109	;'m'
   823  00FC92  2C                 	db	44
   824  00FC93  73                 	db	115	;'s'
   825  00FC94  5D                 	db	93	;']'
   826  00FC95  20                 	db	32
   827  00FC96  5B                 	db	91	;'['
   828  00FC97  76                 	db	118	;'v'
   829  00FC98  61                 	db	97	;'a'
   830  00FC99  6C                 	db	108	;'l'
   831  00FC9A  75                 	db	117	;'u'
   832  00FC9B  65                 	db	101	;'e'
   833  00FC9C  28                 	db	40
   834  00FC9D  64                 	db	100	;'d'
   835  00FC9E  65                 	db	101	;'e'
   836  00FC9F  63                 	db	99	;'c'
   837  00FCA0  69                 	db	105	;'i'
   838  00FCA1  6D                 	db	109	;'m'
   839  00FCA2  61                 	db	97	;'a'
   840  00FCA3  6C                 	db	108	;'l'
   841  00FCA4  29                 	db	41
   842  00FCA5  5D                 	db	93	;']'
   843  00FCA6  0A                 	db	10
   844  00FCA7  09                 	db	9
   845  00FCA8  73                 	db	115	;'s'
   846  00FCA9  65                 	db	101	;'e'
   847  00FCAA  74                 	db	116	;'t'
   848  00FCAB  74                 	db	116	;'t'
   849  00FCAC  69                 	db	105	;'i'
   850  00FCAD  6E                 	db	110	;'n'
   851  00FCAE  67                 	db	103	;'g'
   852  00FCAF  73                 	db	115	;'s'
   853  00FCB0  28                 	db	40
   854  00FCB1  73                 	db	115	;'s'
   855  00FCB2  65                 	db	101	;'e'
   856  00FCB3  74                 	db	116	;'t'
   857  00FCB4  29                 	db	41
   858  00FCB5  20                 	db	32
   859  00FCB6  5B                 	db	91	;'['
   860  00FCB7  70                 	db	112	;'p'
   861  00FCB8  6F                 	db	111	;'o'
   862  00FCB9  72                 	db	114	;'r'
   863  00FCBA  74                 	db	116	;'t'
   864  00FCBB  3A                 	db	58	;':'
   865  00FCBC  6C                 	db	108	;'l'
   866  00FCBD  65                 	db	101	;'e'
   867  00FCBE  66                 	db	102	;'f'
   868  00FCBF  74                 	db	116	;'t'
   869  00FCC0  28                 	db	40
   870  00FCC1  6C                 	db	108	;'l'
   871  00FCC2  29                 	db	41
   872  00FCC3  2C                 	db	44
   873  00FCC4  63                 	db	99	;'c'
   874  00FCC5  65                 	db	101	;'e'
   875  00FCC6  6E                 	db	110	;'n'
   876  00FCC7  74                 	db	116	;'t'
   877  00FCC8  65                 	db	101	;'e'
   878  00FCC9  72                 	db	114	;'r'
   879  00FCCA  28                 	db	40
   880  00FCCB  63                 	db	99	;'c'
   881  00FCCC  29                 	db	41
   882  00FCCD  2C                 	db	44
   883  00FCCE  72                 	db	114	;'r'
   884  00FCCF  69                 	db	105	;'i'
   885  00FCD0  67                 	db	103	;'g'
   886  00FCD1  68                 	db	104	;'h'
   887  00FCD2  74                 	db	116	;'t'
   888  00FCD3  28                 	db	40
   889  00FCD4  72                 	db	114	;'r'
   890  00FCD5  29                 	db	41
   891  00FCD6  5D                 	db	93	;']'
   892  00FCD7  0A                 	db	10
   893  00FCD8  09                 	db	9
   894  00FCD9  09                 	db	9
   895  00FCDA  5B                 	db	91	;'['
   896  00FCDB  61                 	db	97	;'a'
   897  00FCDC  75                 	db	117	;'u'
   898  00FCDD  74                 	db	116	;'t'
   899  00FCDE  6F                 	db	111	;'o'
   900  00FCDF  5F                 	db	95	;'_'
   901  00FCE0  73                 	db	115	;'s'
   902  00FCE1  74                 	db	116	;'t'
   903  00FCE2  6F                 	db	111	;'o'
   904  00FCE3  70                 	db	112	;'p'
   905  00FCE4  28                 	db	40
   906  00FCE5  61                 	db	97	;'a'
   907  00FCE6  73                 	db	115	;'s'
   908  00FCE7  29                 	db	41
   909  00FCE8  2C                 	db	44
   910  00FCE9  61                 	db	97	;'a'
   911  00FCEA  6C                 	db	108	;'l'
   912  00FCEB  77                 	db	119	;'w'
   913  00FCEC  61                 	db	97	;'a'
   914  00FCED  79                 	db	121	;'y'
   915  00FCEE  73                 	db	115	;'s'
   916  00FCEF  5F                 	db	95	;'_'
   917  00FCF0  6F                 	db	111	;'o'
   918  00FCF1  6E                 	db	110	;'n'
   919  00FCF2  28                 	db	40
   920  00FCF3  61                 	db	97	;'a'
   921  00FCF4  6F                 	db	111	;'o'
   922  00FCF5  29                 	db	41
   923  00FCF6  2C                 	db	44
   924  00FCF7  69                 	db	105	;'i'
   925  00FCF8  6E                 	db	110	;'n'
   926  00FCF9  74                 	db	116	;'t'
   927  00FCFA  65                 	db	101	;'e'
   928  00FCFB  67                 	db	103	;'g'
   929  00FCFC  72                 	db	114	;'r'
   930  00FCFD  61                 	db	97	;'a'
   931  00FCFE  74                 	db	116	;'t'
   932  00FCFF  69                 	db	105	;'i'
   933  00FD00  6E                 	db	110	;'n'
   934  00FD01  67                 	db	103	;'g'
   935  00FD02  5F                 	db	95	;'_'
   936  00FD03  72                 	db	114	;'r'
   937  00FD04  65                 	db	101	;'e'
   938  00FD05  73                 	db	115	;'s'
   939  00FD06  65                 	db	101	;'e'
   940  00FD07  74                 	db	116	;'t'
   941  00FD08  28                 	db	40
   942  00FD09  69                 	db	105	;'i'
   943  00FD0A  72                 	db	114	;'r'
   944  00FD0B  29                 	db	41
   945  00FD0C  5D                 	db	93	;']'
   946  00FD0D  0A                 	db	10
   947  00FD0E  09                 	db	9
   948  00FD0F  6F                 	db	111	;'o'
   949  00FD10  75                 	db	117	;'u'
   950  00FD11  74                 	db	116	;'t'
   951  00FD12  70                 	db	112	;'p'
   952  00FD13  75                 	db	117	;'u'
   953  00FD14  74                 	db	116	;'t'
   954  00FD15  5F                 	db	95	;'_'
   955  00FD16  64                 	db	100	;'d'
   956  00FD17  61                 	db	97	;'a'
   957  00FD18  74                 	db	116	;'t'
   958  00FD19  61                 	db	97	;'a'
   959  00FD1A  28                 	db	40
   960  00FD1B  6F                 	db	111	;'o'
   961  00FD1C  64                 	db	100	;'d'
   962  00FD1D  29                 	db	41
   963  00FD1E  20                 	db	32
   964  00FD1F  3C                 	db	60	;'<'
   965  00FD20  2D                 	db	45
   966  00FD21  20                 	db	32
   967  00FD22  73                 	db	115	;'s'
   968  00FD23  74                 	db	116	;'t'
   969  00FD24  6F                 	db	111	;'o'
   970  00FD25  70                 	db	112	;'p'
   971  00FD26  70                 	db	112	;'p'
   972  00FD27  65                 	db	101	;'e'
   973  00FD28  64                 	db	100	;'d'
   974  00FD29  20                 	db	32
   975  00FD2A  62                 	db	98	;'b'
   976  00FD2B  79                 	db	121	;'y'
   977  00FD2C  20                 	db	32
   978  00FD2D  70                 	db	112	;'p'
   979  00FD2E  72                 	db	114	;'r'
   980  00FD2F  65                 	db	101	;'e'
   981  00FD30  73                 	db	115	;'s'
   982  00FD31  73                 	db	115	;'s'
   983  00FD32  69                 	db	105	;'i'
   984  00FD33  6E                 	db	110	;'n'
   985  00FD34  67                 	db	103	;'g'
   986  00FD35  20                 	db	32
   987  00FD36  74                 	db	116	;'t'
   988  00FD37  68                 	db	104	;'h'
   989  00FD38  65                 	db	101	;'e'
   990  00FD39  20                 	db	32
   991  00FD3A  45                 	db	69	;'E'
   992  00FD3B  6E                 	db	110	;'n'
   993  00FD3C  74                 	db	116	;'t'
   994  00FD3D  65                 	db	101	;'e'
   995  00FD3E  72                 	db	114	;'r'
   996  00FD3F  20                 	db	32
   997  00FD40  6B                 	db	107	;'k'
   998  00FD41  65                 	db	101	;'e'
   999  00FD42  79                 	db	121	;'y'
  1000  00FD43  0A                 	db	10
  1001  00FD44  09                 	db	9
  1002  00FD45  74                 	db	116	;'t'
  1003  00FD46  6F                 	db	111	;'o'
  1004  00FD47  75                 	db	117	;'u'
  1005  00FD48  63                 	db	99	;'c'
  1006  00FD49  68                 	db	104	;'h'
  1007  00FD4A  20                 	db	32
  1008  00FD4B  5B                 	db	91	;'['
  1009  00FD4C  72                 	db	114	;'r'
  1010  00FD4D  65                 	db	101	;'e'
  1011  00FD4E  73                 	db	115	;'s'
  1012  00FD4F  65                 	db	101	;'e'
  1013  00FD50  74                 	db	116	;'t'
  1014  00FD51  28                 	db	40
  1015  00FD52  72                 	db	114	;'r'
  1016  00FD53  29                 	db	41
  1017  00FD54  2C                 	db	44
  1018  00FD55  69                 	db	105	;'i'
  1019  00FD56  6E                 	db	110	;'n'
  1020  00FD57  69                 	db	105	;'i'
  1021  00FD58  74                 	db	116	;'t'
  1022  00FD59  69                 	db	105	;'i'
  1023  00FD5A  61                 	db	97	;'a'
  1024  00FD5B  6C                 	db	108	;'l'
  1025  00FD5C  69                 	db	105	;'i'
  1026  00FD5D  7A                 	db	122	;'z'
  1027  00FD5E  65                 	db	101	;'e'
  1028  00FD5F  28                 	db	40
  1029  00FD60  69                 	db	105	;'i'
  1030  00FD61  6E                 	db	110	;'n'
  1031  00FD62  69                 	db	105	;'i'
  1032  00FD63  74                 	db	116	;'t'
  1033  00FD64  29                 	db	41
  1034  00FD65  5D                 	db	93	;']'
  1035  00FD66  20                 	db	32
  1036  00FD67  5B                 	db	91	;'['
  1037  00FD68  76                 	db	118	;'v'
  1038  00FD69  61                 	db	97	;'a'
  1039  00FD6A  6C                 	db	108	;'l'
  1040  00FD6B  75                 	db	117	;'u'
  1041  00FD6C  65                 	db	101	;'e'
  1042  00FD6D  28                 	db	40
  1043  00FD6E  25                 	db	37
  1044  00FD6F  29                 	db	41
  1045  00FD70  5D                 	db	93	;']'
  1046  00FD71  0A                 	db	10
  1047  00FD72  0A                 	db	10
  1048  00FD73  09                 	db	9
  1049  00FD74  66                 	db	102	;'f'
  1050  00FD75  6F                 	db	111	;'o'
  1051  00FD76  72                 	db	114	;'r'
  1052  00FD77  20                 	db	32
  1053  00FD78  44                 	db	68	;'D'
  1054  00FD79  65                 	db	101	;'e'
  1055  00FD7A  76                 	db	118	;'v'
  1056  00FD7B  65                 	db	101	;'e'
  1057  00FD7C  6C                 	db	108	;'l'
  1058  00FD7D  6F                 	db	111	;'o'
  1059  00FD7E  70                 	db	112	;'p'
  1060  00FD7F  70                 	db	112	;'p'
  1061  00FD80  65                 	db	101	;'e'
  1062  00FD81  72                 	db	114	;'r'
  1063  00FD82  0A                 	db	10
  1064  00FD83  09                 	db	9
  1065  00FD84  52                 	db	82	;'R'
  1066  00FD85  45                 	db	69	;'E'
  1067  00FD86  53                 	db	83	;'S'
  1068  00FD87  45                 	db	69	;'E'
  1069  00FD88  54                 	db	84	;'T'
  1070  00FD89  28                 	db	40
  1071  00FD8A  29                 	db	41
  1072  00FD8B  3B                 	db	59	;';'
  1073  00FD8C  0A                 	db	10
  1074  00FD8D  09                 	db	9
  1075  00FD8E  62                 	db	98	;'b'
  1076  00FD8F  6F                 	db	111	;'o'
  1077  00FD90  6F                 	db	111	;'o'
  1078  00FD91  74                 	db	116	;'t'
  1079  00FD92  6C                 	db	108	;'l'
  1080  00FD93  6F                 	db	111	;'o'
  1081  00FD94  61                 	db	97	;'a'
  1082  00FD95  64                 	db	100	;'d'
  1083  00FD96  0A                 	db	10
  1084  00FD97  00                 	db	0
  1085  00FD98                     STR_23:
  1086  00FD98  09                 	db	9
  1087  00FD99  32                 	db	50	;'2'
  1088  00FD9A  30                 	db	48	;'0'
  1089  00FD9B  25                 	db	37
  1090  00FD9C  30                 	db	48	;'0'
  1091  00FD9D  32                 	db	50	;'2'
  1092  00FD9E  64                 	db	100	;'d'
  1093  00FD9F  2F                 	db	47
  1094  00FDA0  25                 	db	37
  1095  00FDA1  30                 	db	48	;'0'
  1096  00FDA2  32                 	db	50	;'2'
  1097  00FDA3  64                 	db	100	;'d'
  1098  00FDA4  2F                 	db	47
  1099  00FDA5  25                 	db	37
  1100  00FDA6  30                 	db	48	;'0'
  1101  00FDA7  32                 	db	50	;'2'
  1102  00FDA8  64                 	db	100	;'d'
  1103  00FDA9  28                 	db	40
  1104  00FDAA  25                 	db	37
  1105  00FDAB  73                 	db	115	;'s'
  1106  00FDAC  29                 	db	41
  1107  00FDAD  25                 	db	37
  1108  00FDAE  30                 	db	48	;'0'
  1109  00FDAF  32                 	db	50	;'2'
  1110  00FDB0  64                 	db	100	;'d'
  1111  00FDB1  3A                 	db	58	;':'
  1112  00FDB2  25                 	db	37
  1113  00FDB3  30                 	db	48	;'0'
  1114  00FDB4  32                 	db	50	;'2'
  1115  00FDB5  64                 	db	100	;'d'
  1116  00FDB6  2D                 	db	45
  1117  00FDB7  25                 	db	37
  1118  00FDB8  30                 	db	48	;'0'
  1119  00FDB9  32                 	db	50	;'2'
  1120  00FDBA  64                 	db	100	;'d'
  1121  00FDBB  0A                 	db	10
  1122  00FDBC  00                 	db	0
  1123  00FDBD                     STR_63:
  1124  00FDBD  09                 	db	9
  1125  00FDBE  69                 	db	105	;'i'
  1126  00FDBF  6E                 	db	110	;'n'
  1127  00FDC0  76                 	db	118	;'v'
  1128  00FDC1  61                 	db	97	;'a'
  1129  00FDC2  6C                 	db	108	;'l'
  1130  00FDC3  69                 	db	105	;'i'
  1131  00FDC4  64                 	db	100	;'d'
  1132  00FDC5  20                 	db	32
  1133  00FDC6  64                 	db	100	;'d'
  1134  00FDC7  61                 	db	97	;'a'
  1135  00FDC8  74                 	db	116	;'t'
  1136  00FDC9  61                 	db	97	;'a'
  1137  00FDCA  0A                 	db	10
  1138  00FDCB  09                 	db	9
  1139  00FDCC  69                 	db	105	;'i'
  1140  00FDCD  6E                 	db	110	;'n'
  1141  00FDCE  69                 	db	105	;'i'
  1142  00FDCF  74                 	db	116	;'t'
  1143  00FDD0  69                 	db	105	;'i'
  1144  00FDD1  61                 	db	97	;'a'
  1145  00FDD2  6C                 	db	108	;'l'
  1146  00FDD3  69                 	db	105	;'i'
  1147  00FDD4  7A                 	db	122	;'z'
  1148  00FDD5  69                 	db	105	;'i'
  1149  00FDD6  6E                 	db	110	;'n'
  1150  00FDD7  67                 	db	103	;'g'
  1151  00FDD8  20                 	db	32
  1152  00FDD9  66                 	db	102	;'f'
  1153  00FDDA  61                 	db	97	;'a'
  1154  00FDDB  69                 	db	105	;'i'
  1155  00FDDC  6C                 	db	108	;'l'
  1156  00FDDD  65                 	db	101	;'e'
  1157  00FDDE  64                 	db	100	;'d'
  1158  00FDDF  0A                 	db	10
  1159  00FDE0  00                 	db	0
  1160  00FDE1                     STR_67:
  1161  00FDE1  32                 	db	50	;'2'
  1162  00FDE2  30                 	db	48	;'0'
  1163  00FDE3  25                 	db	37
  1164  00FDE4  30                 	db	48	;'0'
  1165  00FDE5  32                 	db	50	;'2'
  1166  00FDE6  64                 	db	100	;'d'
  1167  00FDE7  2F                 	db	47
  1168  00FDE8  25                 	db	37
  1169  00FDE9  30                 	db	48	;'0'
  1170  00FDEA  32                 	db	50	;'2'
  1171  00FDEB  64                 	db	100	;'d'
  1172  00FDEC  2F                 	db	47
  1173  00FDED  25                 	db	37
  1174  00FDEE  30                 	db	48	;'0'
  1175  00FDEF  32                 	db	50	;'2'
  1176  00FDF0  64                 	db	100	;'d'
  1177  00FDF1  2D                 	db	45
  1178  00FDF2  25                 	db	37
  1179  00FDF3  30                 	db	48	;'0'
  1180  00FDF4  32                 	db	50	;'2'
  1181  00FDF5  64                 	db	100	;'d'
  1182  00FDF6  3A                 	db	58	;':'
  1183  00FDF7  25                 	db	37
  1184  00FDF8  30                 	db	48	;'0'
  1185  00FDF9  32                 	db	50	;'2'
  1186  00FDFA  64                 	db	100	;'d'
  1187  00FDFB  2D                 	db	45
  1188  00FDFC  25                 	db	37
  1189  00FDFD  30                 	db	48	;'0'
  1190  00FDFE  32                 	db	50	;'2'
  1191  00FDFF  64                 	db	100	;'d'
  1192  00FE00  00                 	db	0
  1193  00FE01                     STR_73:
  1194  00FE01  25                 	db	37
  1195  00FE02  30                 	db	48	;'0'
  1196  00FE03  32                 	db	50	;'2'
  1197  00FE04  6C                 	db	108	;'l'
  1198  00FE05  64                 	db	100	;'d'
  1199  00FE06  64                 	db	100	;'d'
  1200  00FE07  20                 	db	32
  1201  00FE08  25                 	db	37
  1202  00FE09  30                 	db	48	;'0'
  1203  00FE0A  32                 	db	50	;'2'
  1204  00FE0B  6C                 	db	108	;'l'
  1205  00FE0C  64                 	db	100	;'d'
  1206  00FE0D  68                 	db	104	;'h'
  1207  00FE0E  20                 	db	32
  1208  00FE0F  25                 	db	37
  1209  00FE10  30                 	db	48	;'0'
  1210  00FE11  32                 	db	50	;'2'
  1211  00FE12  6C                 	db	108	;'l'
  1212  00FE13  64                 	db	100	;'d'
  1213  00FE14  6D                 	db	109	;'m'
  1214  00FE15  20                 	db	32
  1215  00FE16  25                 	db	37
  1216  00FE17  30                 	db	48	;'0'
  1217  00FE18  32                 	db	50	;'2'
  1218  00FE19  6C                 	db	108	;'l'
  1219  00FE1A  64                 	db	100	;'d'
  1220  00FE1B  73                 	db	115	;'s'
  1221  00FE1C  00                 	db	0
  1222  00FE1D                     STR_62:
  1223  00FE1D  09                 	db	9
  1224  00FE1E  69                 	db	105	;'i'
  1225  00FE1F  6E                 	db	110	;'n'
  1226  00FE20  69                 	db	105	;'i'
  1227  00FE21  74                 	db	116	;'t'
  1228  00FE22  69                 	db	105	;'i'
  1229  00FE23  61                 	db	97	;'a'
  1230  00FE24  6C                 	db	108	;'l'
  1231  00FE25  69                 	db	105	;'i'
  1232  00FE26  7A                 	db	122	;'z'
  1233  00FE27  69                 	db	105	;'i'
  1234  00FE28  6E                 	db	110	;'n'
  1235  00FE29  67                 	db	103	;'g'
  1236  00FE2A  20                 	db	32
  1237  00FE2B  63                 	db	99	;'c'
  1238  00FE2C  6F                 	db	111	;'o'
  1239  00FE2D  6D                 	db	109	;'m'
  1240  00FE2E  70                 	db	112	;'p'
  1241  00FE2F  6C                 	db	108	;'l'
  1242  00FE30  65                 	db	101	;'e'
  1243  00FE31  74                 	db	116	;'t'
  1244  00FE32  65                 	db	101	;'e'
  1245  00FE33  0A                 	db	10
  1246  00FE34  00                 	db	0
  1247  00FE35                     STR_68:
  1248  00FE35  20                 	db	32
  1249  00FE36  25                 	db	37
  1250  00FE37  73                 	db	115	;'s'
  1251  00FE38  3A                 	db	58	;':'
  1252  00FE39  25                 	db	37
  1253  00FE3A  30                 	db	48	;'0'
  1254  00FE3B  31                 	db	49	;'1'
  1255  00FE3C  64                 	db	100	;'d'
  1256  00FE3D  2E                 	db	46
  1257  00FE3E  25                 	db	37
  1258  00FE3F  30                 	db	48	;'0'
  1259  00FE40  33                 	db	51	;'3'
  1260  00FE41  64                 	db	100	;'d'
  1261  00FE42  41                 	db	65	;'A'
  1262  00FE43  2C                 	db	44
  1263  00FE44  25                 	db	37
  1264  00FE45  30                 	db	48	;'0'
  1265  00FE46  36                 	db	54	;'6'
  1266  00FE47  6C                 	db	108	;'l'
  1267  00FE48  64                 	db	100	;'d'
  1268  00FE49  6D                 	db	109	;'m'
  1269  00FE4A  41                 	db	65	;'A'
  1270  00FE4B  68                 	db	104	;'h'
  1271  00FE4C  00                 	db	0
  1272  00FE4D                     STR_66:
  1273  00FE4D  09                 	db	9
  1274  00FE4E  73                 	db	115	;'s'
  1275  00FE4F  65                 	db	101	;'e'
  1276  00FE50  74                 	db	116	;'t'
  1277  00FE51  69                 	db	105	;'i'
  1278  00FE52  6E                 	db	110	;'n'
  1279  00FE53  67                 	db	103	;'g'
  1280  00FE54  20                 	db	32
  1281  00FE55  63                 	db	99	;'c'
  1282  00FE56  6F                 	db	111	;'o'
  1283  00FE57  6D                 	db	109	;'m'
  1284  00FE58  70                 	db	112	;'p'
  1285  00FE59  6C                 	db	108	;'l'
  1286  00FE5A  65                 	db	101	;'e'
  1287  00FE5B  74                 	db	116	;'t'
  1288  00FE5C  65                 	db	101	;'e'
  1289  00FE5D  0A                 	db	10
  1290  00FE5E  00                 	db	0
  1291  00FE5F                     STR_105:
  1292  00FE5F  3C                 	db	60	;'<'
  1293  00FE60  2D                 	db	45
  1294  00FE61  20                 	db	32
  1295  00FE62  20                 	db	32
  1296  00FE63  20                 	db	32
  1297  00FE64  53                 	db	83	;'S'
  1298  00FE65  65                 	db	101	;'e'
  1299  00FE66  6C                 	db	108	;'l'
  1300  00FE67  65                 	db	101	;'e'
  1301  00FE68  63                 	db	99	;'c'
  1302  00FE69  74                 	db	116	;'t'
  1303  00FE6A  20                 	db	32
  1304  00FE6B  20                 	db	32
  1305  00FE6C  20                 	db	32
  1306  00FE6D  2D                 	db	45
  1307  00FE6E  3E                 	db	62	;'>'
  1308  00FE6F  00                 	db	0
  1309  00FE70                     STR_111:
  1310  00FE70  54                 	db	84	;'T'
  1311  00FE71  6F                 	db	111	;'o'
  1312  00FE72  67                 	db	103	;'g'
  1313  00FE73  67                 	db	103	;'g'
  1314  00FE74  6C                 	db	108	;'l'
  1315  00FE75  65                 	db	101	;'e'
  1316  00FE76  20                 	db	32
  1317  00FE77  41                 	db	65	;'A'
  1318  00FE78  75                 	db	117	;'u'
  1319  00FE79  74                 	db	116	;'t'
  1320  00FE7A  6F                 	db	111	;'o'
  1321  00FE7B  20                 	db	32
  1322  00FE7C  53                 	db	83	;'S'
  1323  00FE7D  74                 	db	116	;'t'
  1324  00FE7E  6F                 	db	111	;'o'
  1325  00FE7F  70                 	db	112	;'p'
  1326  00FE80  00                 	db	0
  1327  00FE81                     STR_82:
  1328  00FE81  4C                 	db	76	;'L'
  1329  00FE82  65                 	db	101	;'e'
  1330  00FE83  66                 	db	102	;'f'
  1331  00FE84  74                 	db	116	;'t'
  1332  00FE85  20                 	db	32
  1333  00FE86  43                 	db	67	;'C'
  1334  00FE87  65                 	db	101	;'e'
  1335  00FE88  6E                 	db	110	;'n'
  1336  00FE89  74                 	db	116	;'t'
  1337  00FE8A  72                 	db	114	;'r'
  1338  00FE8B  20                 	db	32
  1339  00FE8C  52                 	db	82	;'R'
  1340  00FE8D  69                 	db	105	;'i'
  1341  00FE8E  67                 	db	103	;'g'
  1342  00FE8F  68                 	db	104	;'h'
  1343  00FE90  74                 	db	116	;'t'
  1344  00FE91  00                 	db	0
  1345  00FE92                     STR_45:
  1346  00FE92  43                 	db	67	;'C'
  1347  00FE93  68                 	db	104	;'h'
  1348  00FE94  61                 	db	97	;'a'
  1349  00FE95  72                 	db	114	;'r'
  1350  00FE96  67                 	db	103	;'g'
  1351  00FE97  65                 	db	101	;'e'
  1352  00FE98  20                 	db	32
  1353  00FE99  53                 	db	83	;'S'
  1354  00FE9A  74                 	db	116	;'t'
  1355  00FE9B  61                 	db	97	;'a'
  1356  00FE9C  74                 	db	116	;'t'
  1357  00FE9D  69                 	db	105	;'i'
  1358  00FE9E  6F                 	db	111	;'o'
  1359  00FE9F  6E                 	db	110	;'n'
  1360  00FEA0  20                 	db	32
  1361  00FEA1  36                 	db	54	;'6'
  1362  00FEA2  00                 	db	0
  1363  00FEA3                     STR_109:
  1364  00FEA3  41                 	db	65	;'A'
  1365  00FEA4  64                 	db	100	;'d'
  1366  00FEA5  6A                 	db	106	;'j'
  1367  00FEA6  75                 	db	117	;'u'
  1368  00FEA7  73                 	db	115	;'s'
  1369  00FEA8  74                 	db	116	;'t'
  1370  00FEA9  20                 	db	32
  1371  00FEAA  74                 	db	116	;'t'
  1372  00FEAB  68                 	db	104	;'h'
  1373  00FEAC  65                 	db	101	;'e'
  1374  00FEAD  20                 	db	32
  1375  00FEAE  54                 	db	84	;'T'
  1376  00FEAF  69                 	db	105	;'i'
  1377  00FEB0  6D                 	db	109	;'m'
  1378  00FEB1  65                 	db	101	;'e'
  1379  00FEB2  00                 	db	0
  1380  00FEB3                     STR_113:
  1381  00FEB3  54                 	db	84	;'T'
  1382  00FEB4  6F                 	db	111	;'o'
  1383  00FEB5  67                 	db	103	;'g'
  1384  00FEB6  67                 	db	103	;'g'
  1385  00FEB7  6C                 	db	108	;'l'
  1386  00FEB8  65                 	db	101	;'e'
  1387  00FEB9  20                 	db	32
  1388  00FEBA  4C                 	db	76	;'L'
  1389  00FEBB  45                 	db	69	;'E'
  1390  00FEBC  44                 	db	68	;'D'
  1391  00FEBD  20                 	db	32
  1392  00FEBE  4C                 	db	76	;'L'
  1393  00FEBF  61                 	db	97	;'a'
  1394  00FEC0  6D                 	db	109	;'m'
  1395  00FEC1  70                 	db	112	;'p'
  1396  00FEC2  00                 	db	0
  1397  00FEC3                     STR_50:
  1398  00FEC3  42                 	db	66	;'B'
  1399  00FEC4  6F                 	db	111	;'o'
  1400  00FEC5  6F                 	db	111	;'o'
  1401  00FEC6  74                 	db	116	;'t'
  1402  00FEC7  6C                 	db	108	;'l'
  1403  00FEC8  6F                 	db	111	;'o'
  1404  00FEC9  61                 	db	97	;'a'
  1405  00FECA  64                 	db	100	;'d'
  1406  00FECB  65                 	db	101	;'e'
  1407  00FECC  72                 	db	114	;'r'
  1408  00FECD  20                 	db	32
  1409  00FECE  6D                 	db	109	;'m'
  1410  00FECF  6F                 	db	111	;'o'
  1411  00FED0  64                 	db	100	;'d'
  1412  00FED1  65                 	db	101	;'e'
  1413  00FED2  00                 	db	0
  1414  00FED3                     STR_115:
  1415  00FED3  49                 	db	73	;'I'
  1416  00FED4  6E                 	db	110	;'n'
  1417  00FED5  74                 	db	116	;'t'
  1418  00FED6  65                 	db	101	;'e'
  1419  00FED7  67                 	db	103	;'g'
  1420  00FED8  72                 	db	114	;'r'
  1421  00FED9  61                 	db	97	;'a'
  1422  00FEDA  74                 	db	116	;'t'
  1423  00FEDB  20                 	db	32
  1424  00FEDC  52                 	db	82	;'R'
  1425  00FEDD  65                 	db	101	;'e'
  1426  00FEDE  73                 	db	115	;'s'
  1427  00FEDF  65                 	db	101	;'e'
  1428  00FEE0  74                 	db	116	;'t'
  1429  00FEE1  00                 	db	0
  1430  00FEE2                     STR_47:
  1431  00FEE2  43                 	db	67	;'C'
  1432  00FEE3  68                 	db	104	;'h'
  1433  00FEE4  61                 	db	97	;'a'
  1434  00FEE5  72                 	db	114	;'r'
  1435  00FEE6  67                 	db	103	;'g'
  1436  00FEE7  65                 	db	101	;'e'
  1437  00FEE8  20                 	db	32
  1438  00FEE9  53                 	db	83	;'S'
  1439  00FEEA  74                 	db	116	;'t'
  1440  00FEEB  61                 	db	97	;'a'
  1441  00FEEC  74                 	db	116	;'t'
  1442  00FEED  69                 	db	105	;'i'
  1443  00FEEE  6F                 	db	111	;'o'
  1444  00FEEF  6E                 	db	110	;'n'
  1445  00FEF0  00                 	db	0
  1446  00FEF1                     STR_48:
  1447  00FEF1  57                 	db	87	;'W'
  1448  00FEF2  65                 	db	101	;'e'
  1449  00FEF3  6C                 	db	108	;'l'
  1450  00FEF4  63                 	db	99	;'c'
  1451  00FEF5  6F                 	db	111	;'o'
  1452  00FEF6  6D                 	db	109	;'m'
  1453  00FEF7  65                 	db	101	;'e'
  1454  00FEF8  20                 	db	32
  1455  00FEF9  62                 	db	98	;'b'
  1456  00FEFA  61                 	db	97	;'a'
  1457  00FEFB  63                 	db	99	;'c'
  1458  00FEFC  6B                 	db	107	;'k'
  1459  00FEFD  21                 	db	33
  1460  00FEFE  00                 	db	0
  1461  00FEFF                     STR_75:
  1462  00FEFF  4D                 	db	77	;'M'
  1463  00FF00  61                 	db	97	;'a'
  1464  00FF01  64                 	db	100	;'d'
  1465  00FF02  65                 	db	101	;'e'
  1466  00FF03  20                 	db	32
  1467  00FF04  62                 	db	98	;'b'
  1468  00FF05  79                 	db	121	;'y'
  1469  00FF06  20                 	db	32
  1470  00FF07  4B                 	db	75	;'K'
  1471  00FF08  45                 	db	69	;'E'
  1472  00FF09  52                 	db	82	;'R'
  1473  00FF0A  49                 	db	73	;'I'
  1474  00FF0B  00                 	db	0
  1475  00FF0C                     STR_46:
  1476  00FF0C  53                 	db	83	;'S'
  1477  00FF0D  4C                 	db	76	;'L'
  1478  00FF0E  45                 	db	69	;'E'
  1479  00FF0F  45                 	db	69	;'E'
  1480  00FF10  50                 	db	80	;'P'
  1481  00FF11  49                 	db	73	;'I'
  1482  00FF12  4E                 	db	78	;'N'
  1483  00FF13  47                 	db	71	;'G'
  1484  00FF14  20                 	db	32
  1485  00FF15  4E                 	db	78	;'N'
  1486  00FF16  4F                 	db	79	;'O'
  1487  00FF17  57                 	db	87	;'W'
  1488  00FF18  00                 	db	0
  1489  00FF19                     STR_49:
  1490  00FF19  50                 	db	80	;'P'
  1491  00FF1A  49                 	db	73	;'I'
  1492  00FF1B  43                 	db	67	;'C'
  1493  00FF1C  31                 	db	49	;'1'
  1494  00FF1D  38                 	db	56	;'8'
  1495  00FF1E  46                 	db	70	;'F'
  1496  00FF1F  32                 	db	50	;'2'
  1497  00FF20  37                 	db	55	;'7'
  1498  00FF21  4A                 	db	74	;'J'
  1499  00FF22  35                 	db	53	;'5'
  1500  00FF23  33                 	db	51	;'3'
  1501  00FF24  00                 	db	0
  1502  00FF25                     STR_57:
  1503  00FF25  6F                 	db	111	;'o'
  1504  00FF26  75                 	db	117	;'u'
  1505  00FF27  74                 	db	116	;'t'
  1506  00FF28  70                 	db	112	;'p'
  1507  00FF29  75                 	db	117	;'u'
  1508  00FF2A  74                 	db	116	;'t'
  1509  00FF2B  5F                 	db	95	;'_'
  1510  00FF2C  64                 	db	100	;'d'
  1511  00FF2D  61                 	db	97	;'a'
  1512  00FF2E  74                 	db	116	;'t'
  1513  00FF2F  61                 	db	97	;'a'
  1514  00FF30  00                 	db	0
  1515  00FF31                     STR_28:
  1516  00FF31  61                 	db	97	;'a'
  1517  00FF32  64                 	db	100	;'d'
  1518  00FF33  6A                 	db	106	;'j'
  1519  00FF34  75                 	db	117	;'u'
  1520  00FF35  73                 	db	115	;'s'
  1521  00FF36  74                 	db	116	;'t'
  1522  00FF37  5F                 	db	95	;'_'
  1523  00FF38  74                 	db	116	;'t'
  1524  00FF39  69                 	db	105	;'i'
  1525  00FF3A  6D                 	db	109	;'m'
  1526  00FF3B  65                 	db	101	;'e'
  1527  00FF3C  00                 	db	0
  1528  00FF3D                     STR_71:
  1529  00FF3D  25                 	db	37
  1530  00FF3E  30                 	db	48	;'0'
  1531  00FF3F  31                 	db	49	;'1'
  1532  00FF40  64                 	db	100	;'d'
  1533  00FF41  2E                 	db	46
  1534  00FF42  25                 	db	37
  1535  00FF43  30                 	db	48	;'0'
  1536  00FF44  33                 	db	51	;'3'
  1537  00FF45  64                 	db	100	;'d'
  1538  00FF46  41                 	db	65	;'A'
  1539  00FF47  00                 	db	0
  1540  00FF48                     STR_60:
  1541  00FF48  69                 	db	105	;'i'
  1542  00FF49  6E                 	db	110	;'n'
  1543  00FF4A  69                 	db	105	;'i'
  1544  00FF4B  74                 	db	116	;'t'
  1545  00FF4C  69                 	db	105	;'i'
  1546  00FF4D  61                 	db	97	;'a'
  1547  00FF4E  6C                 	db	108	;'l'
  1548  00FF4F  69                 	db	105	;'i'
  1549  00FF50  7A                 	db	122	;'z'
  1550  00FF51  65                 	db	101	;'e'
  1551  00FF52  00                 	db	0
  1552  00FF53                     STR_25:
  1553  00FF53  70                 	db	112	;'p'
  1554  00FF54  72                 	db	114	;'r'
  1555  00FF55  69                 	db	105	;'i'
  1556  00FF56  6E                 	db	110	;'n'
  1557  00FF57  74                 	db	116	;'t'
  1558  00FF58  5F                 	db	95	;'_'
  1559  00FF59  74                 	db	116	;'t'
  1560  00FF5A  69                 	db	105	;'i'
  1561  00FF5B  6D                 	db	109	;'m'
  1562  00FF5C  65                 	db	101	;'e'
  1563  00FF5D  00                 	db	0
  1564  00FF5E                     STR_104:
  1565  00FF5E  53                 	db	83	;'S'
  1566  00FF5F  65                 	db	101	;'e'
  1567  00FF60  74                 	db	116	;'t'
  1568  00FF61  74                 	db	116	;'t'
  1569  00FF62  69                 	db	105	;'i'
  1570  00FF63  6E                 	db	110	;'n'
  1571  00FF64  67                 	db	103	;'g'
  1572  00FF65  73                 	db	115	;'s'
  1573  00FF66  00                 	db	0
  1574  00FF67                     STR_54:
  1575  00FF67  52                 	db	82	;'R'
  1576  00FF68  45                 	db	69	;'E'
  1577  00FF69  53                 	db	83	;'S'
  1578  00FF6A  45                 	db	69	;'E'
  1579  00FF6B  54                 	db	84	;'T'
  1580  00FF6C  28                 	db	40
  1581  00FF6D  29                 	db	41
  1582  00FF6E  3B                 	db	59	;';'
  1583  00FF6F  00                 	db	0
  1584  00FF70                     STR_55:
  1585  00FF70  62                 	db	98	;'b'
  1586  00FF71  6F                 	db	111	;'o'
  1587  00FF72  6F                 	db	111	;'o'
  1588  00FF73  74                 	db	116	;'t'
  1589  00FF74  6C                 	db	108	;'l'
  1590  00FF75  6F                 	db	111	;'o'
  1591  00FF76  61                 	db	97	;'a'
  1592  00FF77  64                 	db	100	;'d'
  1593  00FF78  00                 	db	0
  1594  00FF79                     STR_15:
  1595  00FF79  20                 	db	32
  1596  00FF7A  20                 	db	32
  1597  00FF7B  20                 	db	32
  1598  00FF7C  20                 	db	32
  1599  00FF7D  20                 	db	32
  1600  00FF7E  20                 	db	32
  1601  00FF7F  20                 	db	32
  1602  00FF80  20                 	db	32
  1603  00FF81  00                 	db	0
  1604  00FF82                     STR_24:
  1605  00FF82  09                 	db	9
  1606  00FF83  65                 	db	101	;'e'
  1607  00FF84  72                 	db	114	;'r'
  1608  00FF85  72                 	db	114	;'r'
  1609  00FF86  6F                 	db	111	;'o'
  1610  00FF87  72                 	db	114	;'r'
  1611  00FF88  0A                 	db	10
  1612  00FF89  00                 	db	0
  1613  00FF8A                     STR_118:
  1614  00FF8A  28                 	db	40
  1615  00FF8B  6E                 	db	110	;'n'
  1616  00FF8C  75                 	db	117	;'u'
  1617  00FF8D  6C                 	db	108	;'l'
  1618  00FF8E  6C                 	db	108	;'l'
  1619  00FF8F  29                 	db	41
  1620  00FF90  00                 	db	0
  1621  00FF91                     STR_40:
  1622  00FF91  73                 	db	115	;'s'
  1623  00FF92  65                 	db	101	;'e'
  1624  00FF93  63                 	db	99	;'c'
  1625  00FF94  6F                 	db	111	;'o'
  1626  00FF95  6E                 	db	110	;'n'
  1627  00FF96  64                 	db	100	;'d'
  1628  00FF97  00                 	db	0
  1629  00FF98                     STR_38:
  1630  00FF98  6D                 	db	109	;'m'
  1631  00FF99  69                 	db	105	;'i'
  1632  00FF9A  6E                 	db	110	;'n'
  1633  00FF9B  75                 	db	117	;'u'
  1634  00FF9C  74                 	db	116	;'t'
  1635  00FF9D  65                 	db	101	;'e'
  1636  00FF9E  00                 	db	0
  1637  00FF9F                     STR_97:
  1638  00FF9F  20                 	db	32
  1639  00FFA0  20                 	db	32
  1640  00FFA1  30                 	db	48	;'0'
  1641  00FFA2  20                 	db	32
  1642  00FFA3  20                 	db	32
  1643  00FFA4  00                 	db	0
  1644  00FFA5                     STR_80:
  1645  00FFA5  20                 	db	32
  1646  00FFA6  4F                 	db	79	;'O'
  1647  00FFA7  4E                 	db	78	;'N'
  1648  00FFA8  20                 	db	32
  1649  00FFA9  20                 	db	32
  1650  00FFAA  00                 	db	0
  1651  00FFAB                     STR_81:
  1652  00FFAB  20                 	db	32
  1653  00FFAC  4F                 	db	79	;'O'
  1654  00FFAD  46                 	db	70	;'F'
  1655  00FFAE  46                 	db	70	;'F'
  1656  00FFAF  20                 	db	32
  1657  00FFB0  00                 	db	0
  1658  00FFB1                     STR_96:
  1659  00FFB1  20                 	db	32
  1660  00FFB2  79                 	db	121	;'y'
  1661  00FFB3  65                 	db	101	;'e'
  1662  00FFB4  74                 	db	116	;'t'
  1663  00FFB5  20                 	db	32
  1664  00FFB6  00                 	db	0
  1665  00FFB7                     STR_70:
  1666  00FFB7  25                 	db	37
  1667  00FFB8  73                 	db	115	;'s'
  1668  00FFB9  20                 	db	32
  1669  00FFBA  25                 	db	37
  1670  00FFBB  73                 	db	115	;'s'
  1671  00FFBC  00                 	db	0
  1672  00FFBD                     STR_59:
  1673  00FFBD  74                 	db	116	;'t'
  1674  00FFBE  6F                 	db	111	;'o'
  1675  00FFBF  75                 	db	117	;'u'
  1676  00FFC0  63                 	db	99	;'c'
  1677  00FFC1  68                 	db	104	;'h'
  1678  00FFC2  00                 	db	0
  1679  00FFC3                     STR_64:
  1680  00FFC3  72                 	db	114	;'r'
  1681  00FFC4  65                 	db	101	;'e'
  1682  00FFC5  73                 	db	115	;'s'
  1683  00FFC6  65                 	db	101	;'e'
  1684  00FFC7  74                 	db	116	;'t'
  1685  00FFC8  00                 	db	0
  1686  00FFC9                     STR_32:
  1687  00FFC9  6D                 	db	109	;'m'
  1688  00FFCA  6F                 	db	111	;'o'
  1689  00FFCB  6E                 	db	110	;'n'
  1690  00FFCC  74                 	db	116	;'t'
  1691  00FFCD  68                 	db	104	;'h'
  1692  00FFCE  00                 	db	0
  1693  00FFCF                     STR_51:
  1694  00FFCF  68                 	db	104	;'h'
  1695  00FFD0  65                 	db	101	;'e'
  1696  00FFD1  6C                 	db	108	;'l'
  1697  00FFD2  70                 	db	112	;'p'
  1698  00FFD3  00                 	db	0
  1699  00FFD4                     STR_61:
  1700  00FFD4  69                 	db	105	;'i'
  1701  00FFD5  6E                 	db	110	;'n'
  1702  00FFD6  69                 	db	105	;'i'
  1703  00FFD7  74                 	db	116	;'t'
  1704  00FFD8  00                 	db	0
  1705  00FFD9                     STR_30:
  1706  00FFD9  79                 	db	121	;'y'
  1707  00FFDA  65                 	db	101	;'e'
  1708  00FFDB  61                 	db	97	;'a'
  1709  00FFDC  72                 	db	114	;'r'
  1710  00FFDD  00                 	db	0
  1711  00FFDE                     STR_36:
  1712  00FFDE  68                 	db	104	;'h'
  1713  00FFDF  6F                 	db	111	;'o'
  1714  00FFE0  75                 	db	117	;'u'
  1715  00FFE1  72                 	db	114	;'r'
  1716  00FFE2  00                 	db	0
  1717  00FFE3                     STR_19:
  1718  00FFE3  08                 	db	8
  1719  00FFE4  20                 	db	32
  1720  00FFE5  08                 	db	8
  1721  00FFE6  00                 	db	0
  1722  00FFE7                     STR_34:
  1723  00FFE7  64                 	db	100	;'d'
  1724  00FFE8  61                 	db	97	;'a'
  1725  00FFE9  79                 	db	121	;'y'
  1726  00FFEA  00                 	db	0
  1727  00FFEB                     STR_56:
  1728  00FFEB  6F                 	db	111	;'o'
  1729  00FFEC  64                 	db	100	;'d'
  1730  00FFED  00                 	db	0
  1731  00FFEE                     STR_27:
  1732  00FFEE  61                 	db	97	;'a'
  1733  00FFEF  74                 	db	116	;'t'
  1734  00FFF0  00                 	db	0
  1735  00FFF1                     STR_52:
  1736  00FFF1  3F                 	db	63	;'?'
  1737  00FFF2  00                 	db	0
  1738  00FFF3                     STR_31:
  1739  00FFF3  4D                 	db	77	;'M'
  1740  00FFF4  00                 	db	0
  1741  00FFF5                     STR_37:
  1742  00FFF5  6D                 	db	109	;'m'
  1743  00FFF6  00                 	db	0
  1744  00FFF7                     STR_13:
  1745  00FFF7  28                 	db	40
  1746  00FFF8  00                 	db	0
  1747  00FFF9                     STR_9:
  1748  00FFF9  2D                 	db	45
  1749  00FFFA  00                 	db	0
  1750  00FFFB                     STR_4:
  1751  00FFFB  2F                 	db	47
  1752  00FFFC  00                 	db	0
  1753  00FFFD                     STR_7:
  1754  00FFFD  3A                 	db	58	;':'
  1755  00FFFE  00                 	db	0
  1756  0000                     
  1757                           ; #config settings
  1758  00FFFF  00                 	db	0	; dummy byte at the end
  1759  0000                     tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           intcon2	equ	0xFF1
  1767                           wreg	equ	0xFE8
  1768                           indf1	equ	0xFE7
  1769                           postinc1	equ	0xFE6
  1770                           postdec1	equ	0xFE5
  1771                           fsr1h	equ	0xFE2
  1772                           fsr1l	equ	0xFE1
  1773                           indf2	equ	0xFDF
  1774                           postinc2	equ	0xFDE
  1775                           postdec2	equ	0xFDD
  1776                           plusw2	equ	0xFDB
  1777                           fsr2h	equ	0xFDA
  1778                           fsr2l	equ	0xFD9
  1779                           status	equ	0xFD8
  1780                           
  1781                           	psect	cinit
  1782  0134F4                     __pcinit:
  1783                           	opt stack 0
  1784  0134F4                     start_initialization:
  1785                           	opt stack 0
  1786  0134F4                     __initialization:
  1787                           	opt stack 0
  1788                           
  1789                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1790  0134F4  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
  1791  0134F8  EE17 F0D0          	lfsr	1,2000
  1792  0134FC                     clear_0:
  1793  0134FC  6AEE               	clrf	postinc0,c
  1794  0134FE  50E5               	movf	postdec1,w,c
  1795  013500  50E1               	movf	fsr1l,w,c
  1796  013502  E1FC               	bnz	clear_0
  1797  013504  50E2               	movf	fsr1h,w,c
  1798  013506  E1FA               	bnz	clear_0
  1799                           
  1800                           ; Clear objects allocated to BANK4 (200 bytes)
  1801  013508  EE04  F000         	lfsr	0,__pbssBANK4
  1802  01350C  0EC8               	movlw	200
  1803  01350E                     clear_1:
  1804  01350E  6AEE               	clrf	postinc0,c
  1805  013510  06E8               	decf	wreg,f,c
  1806  013512  E1FD               	bnz	clear_1
  1807                           
  1808                           ; Clear objects allocated to BANK3 (228 bytes)
  1809  013514  EE03  F000         	lfsr	0,__pbssBANK3
  1810  013518  0EE4               	movlw	228
  1811  01351A                     clear_2:
  1812  01351A  6AEE               	clrf	postinc0,c
  1813  01351C  06E8               	decf	wreg,f,c
  1814  01351E  E1FD               	bnz	clear_2
  1815                           
  1816                           ; Clear objects allocated to BANK2 (204 bytes)
  1817  013520  EE02  F000         	lfsr	0,__pbssBANK2
  1818  013524  0ECC               	movlw	204
  1819  013526                     clear_3:
  1820  013526  6AEE               	clrf	postinc0,c
  1821  013528  06E8               	decf	wreg,f,c
  1822  01352A  E1FD               	bnz	clear_3
  1823                           
  1824                           ; Clear objects allocated to BANK1 (148 bytes)
  1825  01352C  EE01  F000         	lfsr	0,__pbssBANK1
  1826  013530  0E94               	movlw	148
  1827  013532                     clear_4:
  1828  013532  6AEE               	clrf	postinc0,c
  1829  013534  06E8               	decf	wreg,f,c
  1830  013536  E1FD               	bnz	clear_4
  1831                           
  1832                           ; Clear objects allocated to BANK0 (3 bytes)
  1833  013538  0100               	movlb	0
  1834  01353A  6BED               	clrf	(__pbssBANK0+2)& (0+255),b
  1835  01353C  6BEC               	clrf	(__pbssBANK0+1)& (0+255),b
  1836  01353E  6BEB               	clrf	__pbssBANK0& (0+255),b
  1837                           
  1838                           ; Clear objects allocated to COMRAM (42 bytes)
  1839  013540  EE00  F001         	lfsr	0,__pbssCOMRAM
  1840  013544  0E2A               	movlw	42
  1841  013546                     clear_5:
  1842  013546  6AEE               	clrf	postinc0,c
  1843  013548  06E8               	decf	wreg,f,c
  1844  01354A  E1FD               	bnz	clear_5
  1845                           
  1846                           ; Initialize objects allocated to BANK1 (2 bytes)
  1847                           ; load TBLPTR registers with __pidataBANK1
  1848  01354C  0EA4               	movlw	low __pidataBANK1
  1849  01354E  6EF6               	movwf	tblptrl,c
  1850  013550  0E45               	movlw	high __pidataBANK1
  1851  013552  6EF7               	movwf	tblptrh,c
  1852  013554  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1853  013556  6EF8               	movwf	tblptru,c
  1854  013558  0009               	tblrd		*+	;fetch initializer
  1855  01355A  CFF5 F1FD          	movff	tablat,__pdataBANK1
  1856  01355E  0009               	tblrd		*+	;fetch initializer
  1857  013560  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  1858  013564                     end_of_initialization:
  1859                           	opt stack 0
  1860  013564                     __end_of__initialization:
  1861                           	opt stack 0
  1862  013564  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1863  013566  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1864  013568  0100               	movlb	0
  1865  01356A  EFD0  F09B         	goto	_main	;jump to C main() function
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           prodh	equ	0xFF4
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           intcon2	equ	0xFF1
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           indf1	equ	0xFE7
  1877                           postinc1	equ	0xFE6
  1878                           postdec1	equ	0xFE5
  1879                           fsr1h	equ	0xFE2
  1880                           fsr1l	equ	0xFE1
  1881                           indf2	equ	0xFDF
  1882                           postinc2	equ	0xFDE
  1883                           postdec2	equ	0xFDD
  1884                           plusw2	equ	0xFDB
  1885                           fsr2h	equ	0xFDA
  1886                           fsr2l	equ	0xFD9
  1887                           status	equ	0xFD8
  1888                           
  1889                           	psect	bssCOMRAM
  1890  000001                     __pbssCOMRAM:
  1891                           	opt stack 0
  1892  000001                     _outPipes:
  1893                           	opt stack 0
  1894  000001                     	ds	9
  1895  00000A                     _inPipes:
  1896                           	opt stack 0
  1897  00000A                     	ds	6
  1898  000010                     _pBDTEntryIn:
  1899                           	opt stack 0
  1900  000010                     	ds	6
  1901  000016                     _pBDTEntryEP0OutCurrent:
  1902                           	opt stack 0
  1903  000016                     	ds	2
  1904  000018                     _pBDTEntryEP0OutNext:
  1905                           	opt stack 0
  1906  000018                     	ds	2
  1907  00001A                     _RemoteWakeup:
  1908                           	opt stack 0
  1909  00001A                     	ds	1
  1910  00001B                     _USBDeferStatusStagePacket:
  1911                           	opt stack 0
  1912  00001B                     	ds	1
  1913  00001C                     _USBDeviceState:
  1914                           	opt stack 0
  1915  00001C                     	ds	1
  1916  00001D                     _USBStatusStageTimeoutCounter:
  1917                           	opt stack 0
  1918  00001D                     	ds	1
  1919  00001E                     _cdc_rx_len:
  1920                           	opt stack 0
  1921  00001E                     	ds	1
  1922  00001F                     _cdc_trf_state:
  1923                           	opt stack 0
  1924  00001F                     	ds	1
  1925  000020                     _controlTransferState:
  1926                           	opt stack 0
  1927  000020                     	ds	1
  1928  000021                     _ctmu_ratio:
  1929                           	opt stack 0
  1930  000021                     	ds	1
  1931  000022                     _endpoint_number:
  1932                           	opt stack 0
  1933  000022                     	ds	1
  1934  000023                     _print_port:
  1935                           	opt stack 0
  1936  000023                     	ds	1
  1937  000024                     _shortPacketStatus:
  1938                           	opt stack 0
  1939  000024                     	ds	1
  1940  000025                     _ctmu_m:
  1941                           	opt stack 0
  1942  000025                     	ds	4
  1943  000029                     _USBActiveConfiguration:
  1944                           	opt stack 0
  1945  000029                     	ds	1
  1946  00002A                     _USTATcopy:
  1947                           	opt stack 0
  1948  00002A                     	ds	1
  1949                           tblptru	equ	0xFF8
  1950                           tblptrh	equ	0xFF7
  1951                           tblptrl	equ	0xFF6
  1952                           tablat	equ	0xFF5
  1953                           prodh	equ	0xFF4
  1954                           prodl	equ	0xFF3
  1955                           intcon	equ	0xFF2
  1956                           intcon2	equ	0xFF1
  1957                           postinc0	equ	0xFEE
  1958                           wreg	equ	0xFE8
  1959                           indf1	equ	0xFE7
  1960                           postinc1	equ	0xFE6
  1961                           postdec1	equ	0xFE5
  1962                           fsr1h	equ	0xFE2
  1963                           fsr1l	equ	0xFE1
  1964                           indf2	equ	0xFDF
  1965                           postinc2	equ	0xFDE
  1966                           postdec2	equ	0xFDD
  1967                           plusw2	equ	0xFDB
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972                           	psect	bssBANK0
  1973  0000EB                     __pbssBANK0:
  1974                           	opt stack 0
  1975  0000EB                     _cdc_tx_len:
  1976                           	opt stack 0
  1977  0000EB                     	ds	1
  1978  0000EC                     _print_item:
  1979                           	opt stack 0
  1980  0000EC                     	ds	1
  1981  0000ED                     _settings_item:
  1982                           	opt stack 0
  1983  0000ED                     	ds	1
  1984                           tblptru	equ	0xFF8
  1985                           tblptrh	equ	0xFF7
  1986                           tblptrl	equ	0xFF6
  1987                           tablat	equ	0xFF5
  1988                           prodh	equ	0xFF4
  1989                           prodl	equ	0xFF3
  1990                           intcon	equ	0xFF2
  1991                           intcon2	equ	0xFF1
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           indf1	equ	0xFE7
  1995                           postinc1	equ	0xFE6
  1996                           postdec1	equ	0xFE5
  1997                           fsr1h	equ	0xFE2
  1998                           fsr1l	equ	0xFE1
  1999                           indf2	equ	0xFDF
  2000                           postinc2	equ	0xFDE
  2001                           postdec2	equ	0xFDD
  2002                           plusw2	equ	0xFDB
  2003                           fsr2h	equ	0xFDA
  2004                           fsr2l	equ	0xFD9
  2005                           status	equ	0xFD8
  2006                           
  2007                           	psect	bssBANK1
  2008  000100                     __pbssBANK1:
  2009                           	opt stack 0
  2010  000100                     _pBDTEntryOut:
  2011                           	opt stack 0
  2012  000100                     	ds	6
  2013  000106                     LED_indicator@cnt:
  2014                           	opt stack 0
  2015  000106                     	ds	3
  2016  000109                     _ep_data_in:
  2017                           	opt stack 0
  2018  000109                     	ds	3
  2019  00010C                     _ep_data_out:
  2020                           	opt stack 0
  2021  00010C                     	ds	3
  2022  00010F                     _pCDCDst:
  2023                           	opt stack 0
  2024  00010F                     	ds	3
  2025  000112                     _pCDCSrc:
  2026                           	opt stack 0
  2027  000112                     	ds	3
  2028  000115                     ST7032_task@wait:
  2029                           	opt stack 0
  2030  000115                     	ds	2
  2031  000117                     _CDCDataInHandle:
  2032                           	opt stack 0
  2033  000117                     	ds	2
  2034  000119                     _CDCDataOutHandle:
  2035                           	opt stack 0
  2036  000119                     	ds	2
  2037  00011B                     _ctmu_value_m:
  2038                           	opt stack 0
  2039  00011B                     	ds	2
  2040  00011D                     _pDst:
  2041                           	opt stack 0
  2042  00011D                     	ds	2
  2043  00011F                     millis_timer@cnt:
  2044                           	opt stack 0
  2045  00011F                     	ds	2
  2046  000121                     ISR@cnt:
  2047                           	opt stack 0
  2048  000121                     	ds	1
  2049  000122                     ISR@cnt_t1:
  2050                           	opt stack 0
  2051  000122                     	ds	1
  2052  000123                     RTCC_task@prev_halfsec:
  2053                           	opt stack 0
  2054  000123                     	ds	1
  2055  000124                     ST7032_task@st7032_state:
  2056                           	opt stack 0
  2057  000124                     	ds	1
  2058  000125                     _BothEP0OutUOWNsSet:
  2059                           	opt stack 0
  2060  000125                     	ds	1
  2061  000126                     _USBBusIsSuspended:
  2062                           	opt stack 0
  2063  000126                     	ds	1
  2064  000127                     _USBDeferINDataStagePackets:
  2065                           	opt stack 0
  2066  000127                     	ds	1
  2067  000128                     _USBDeferOUTDataStagePackets:
  2068                           	opt stack 0
  2069  000128                     	ds	1
  2070  000129                     _USBStatusStageEnabledFlag1:
  2071                           	opt stack 0
  2072  000129                     	ds	1
  2073  00012A                     _USBStatusStageEnabledFlag2:
  2074                           	opt stack 0
  2075  00012A                     	ds	1
  2076  00012B                     _cdc_mem_type:
  2077                           	opt stack 0
  2078  00012B                     	ds	1
  2079  00012C                     _ctmu_sampling_flag:
  2080                           	opt stack 0
  2081  00012C                     	ds	1
  2082  00012D                     _cut_time_flag:
  2083                           	opt stack 0
  2084  00012D                     	ds	1
  2085  00012E                     _data_item:
  2086                           	opt stack 0
  2087  00012E                     	ds	1
  2088  00012F                     _display_flag:
  2089                           	opt stack 0
  2090  00012F                     	ds	1
  2091  000130                     _integrate_flag:
  2092                           	opt stack 0
  2093  000130                     	ds	1
  2094  000131                     _settings_flag:
  2095                           	opt stack 0
  2096  000131                     	ds	1
  2097  000132                     _st7032_flag:
  2098                           	opt stack 0
  2099  000132                     	ds	1
  2100  000133                     _terminal_data_out:
  2101                           	opt stack 0
  2102  000133                     	ds	1
  2103  000134                     _terminal_data_out_flag:
  2104                           	opt stack 0
  2105  000134                     	ds	1
  2106  000135                     _time_change_flag:
  2107                           	opt stack 0
  2108  000135                     	ds	1
  2109  000136                     settings_adjust_time@state:
  2110                           	opt stack 0
  2111  000136                     	ds	1
  2112  000137                     settings_auto_stop@state:
  2113                           	opt stack 0
  2114  000137                     	ds	1
  2115  000138                     settings_integrating_reset@state:
  2116                           	opt stack 0
  2117  000138                     	ds	1
  2118  000139                     settings_led_indicator@state:
  2119                           	opt stack 0
  2120  000139                     	ds	1
  2121  00013A                     settings_task@settings_state:
  2122                           	opt stack 0
  2123  00013A                     	ds	1
  2124  00013B                     sleep_task@sleep_flag:
  2125                           	opt stack 0
  2126  00013B                     	ds	1
  2127  00013C                     terminal_task@command_init:
  2128                           	opt stack 0
  2129  00013C                     	ds	1
  2130  00013D                     _port:
  2131                           	opt stack 0
  2132  00013D                     	ds	69
  2133  000182                     _lcd_tx:
  2134                           	opt stack 0
  2135  000182                     	ds	8
  2136  00018A                     terminal_task@command:
  2137                           	opt stack 0
  2138  00018A                     	ds	8
  2139  000192                     _USBAlternateInterface:
  2140                           	opt stack 0
  2141  000192                     	ds	2
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           intcon	equ	0xFF2
  2149                           intcon2	equ	0xFF1
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           indf1	equ	0xFE7
  2153                           postinc1	equ	0xFE6
  2154                           postdec1	equ	0xFE5
  2155                           fsr1h	equ	0xFE2
  2156                           fsr1l	equ	0xFE1
  2157                           indf2	equ	0xFDF
  2158                           postinc2	equ	0xFDE
  2159                           postdec2	equ	0xFDD
  2160                           plusw2	equ	0xFDB
  2161                           fsr2h	equ	0xFDA
  2162                           fsr2l	equ	0xFD9
  2163                           status	equ	0xFD8
  2164                           
  2165                           	psect	dataBANK1
  2166  0001FD                     __pdataBANK1:
  2167                           	opt stack 0
  2168  0001FD                     ST7032_cursor@F8592:
  2169                           	opt stack 0
  2170  0001FD                     	ds	2
  2171                           tblptru	equ	0xFF8
  2172                           tblptrh	equ	0xFF7
  2173                           tblptrl	equ	0xFF6
  2174                           tablat	equ	0xFF5
  2175                           prodh	equ	0xFF4
  2176                           prodl	equ	0xFF3
  2177                           intcon	equ	0xFF2
  2178                           intcon2	equ	0xFF1
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           indf1	equ	0xFE7
  2182                           postinc1	equ	0xFE6
  2183                           postdec1	equ	0xFE5
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           indf2	equ	0xFDF
  2187                           postinc2	equ	0xFDE
  2188                           postdec2	equ	0xFDD
  2189                           plusw2	equ	0xFDB
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194                           	psect	bssBANK2
  2195  000200                     __pbssBANK2:
  2196                           	opt stack 0
  2197  000200                     LED_indicator@cntf:
  2198                           	opt stack 0
  2199  000200                     	ds	3
  2200  000203                     _display_char:
  2201                           	opt stack 0
  2202  000203                     	ds	40
  2203  00022B                     terminal_task@op0:
  2204                           	opt stack 0
  2205  00022B                     	ds	25
  2206  000244                     terminal_task@op1:
  2207                           	opt stack 0
  2208  000244                     	ds	25
  2209  00025D                     terminal_task@op2:
  2210                           	opt stack 0
  2211  00025D                     	ds	25
  2212  000276                     terminal_task@op3:
  2213                           	opt stack 0
  2214  000276                     	ds	25
  2215  00028F                     _now:
  2216                           	opt stack 0
  2217  00028F                     	ds	14
  2218  00029D                     _dummy_encapsulated_cmd_response:
  2219                           	opt stack 0
  2220  00029D                     	ds	8
  2221  0002A5                     _uart_rx:
  2222                           	opt stack 0
  2223  0002A5                     	ds	8
  2224  0002AD                     _uart_tx:
  2225                           	opt stack 0
  2226  0002AD                     	ds	8
  2227  0002B5                     _usb_rx:
  2228                           	opt stack 0
  2229  0002B5                     	ds	8
  2230  0002BD                     _usb_tx:
  2231                           	opt stack 0
  2232  0002BD                     	ds	8
  2233  0002C5                     _line_coding:
  2234                           	opt stack 0
  2235  0002C5                     	ds	7
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           intcon	equ	0xFF2
  2243                           intcon2	equ	0xFF1
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           indf1	equ	0xFE7
  2247                           postinc1	equ	0xFE6
  2248                           postdec1	equ	0xFE5
  2249                           fsr1h	equ	0xFE2
  2250                           fsr1l	equ	0xFE1
  2251                           indf2	equ	0xFDF
  2252                           postinc2	equ	0xFDE
  2253                           postdec2	equ	0xFDD
  2254                           plusw2	equ	0xFDB
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259                           	psect	bssBANK3
  2260  000300                     __pbssBANK3:
  2261                           	opt stack 0
  2262  000300                     hardware_init@usbrx:
  2263                           	opt stack 0
  2264  000300                     	ds	100
  2265  000364                     _cdc_data_rx:
  2266                           	opt stack 0
  2267  000364                     	ds	64
  2268  0003A4                     _cdc_data_tx:
  2269                           	opt stack 0
  2270  0003A4                     	ds	64
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           prodh	equ	0xFF4
  2276                           prodl	equ	0xFF3
  2277                           intcon	equ	0xFF2
  2278                           intcon2	equ	0xFF1
  2279                           postinc0	equ	0xFEE
  2280                           wreg	equ	0xFE8
  2281                           indf1	equ	0xFE7
  2282                           postinc1	equ	0xFE6
  2283                           postdec1	equ	0xFE5
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           postdec2	equ	0xFDD
  2289                           plusw2	equ	0xFDB
  2290                           fsr2h	equ	0xFDA
  2291                           fsr2l	equ	0xFD9
  2292                           status	equ	0xFD8
  2293                           
  2294                           	psect	bssBANK4
  2295  000400                     __pbssBANK4:
  2296                           	opt stack 0
  2297  000400                     ST7032_init@buf:
  2298                           	opt stack 0
  2299  000400                     	ds	200
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           intcon	equ	0xFF2
  2307                           intcon2	equ	0xFF1
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           indf1	equ	0xFE7
  2311                           postinc1	equ	0xFE6
  2312                           postdec1	equ	0xFE5
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           indf2	equ	0xFDF
  2316                           postinc2	equ	0xFDE
  2317                           postdec2	equ	0xFDD
  2318                           plusw2	equ	0xFDB
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323                           	psect	bssBIGRAMl
  2324  0004C8                     __pbssBIGRAMl:
  2325                           	opt stack 0
  2326  0004C8                     hardware_init@usbtx:
  2327                           	opt stack 0
  2328  0004C8                     	ds	2000
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           intcon	equ	0xFF2
  2336                           intcon2	equ	0xFF1
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           indf1	equ	0xFE7
  2340                           postinc1	equ	0xFE6
  2341                           postdec1	equ	0xFE5
  2342                           fsr1h	equ	0xFE2
  2343                           fsr1l	equ	0xFE1
  2344                           indf2	equ	0xFDF
  2345                           postinc2	equ	0xFDE
  2346                           postdec2	equ	0xFDD
  2347                           plusw2	equ	0xFDB
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8
  2351                           
  2352                           	psect	cstackBANK1
  2353  000194                     __pcstackBANK1:
  2354                           	opt stack 0
  2355  000194                     display_LCD@str:
  2356                           	opt stack 0
  2357  000194                     terminal_task@buf:
  2358                           	opt stack 0
  2359                           
  2360                           ; 100 bytes @ 0x0
  2361  000194                     	ds	40
  2362  0001BC                     display_LCD@str_5634:
  2363                           	opt stack 0
  2364                           
  2365                           ; 20 bytes @ 0x28
  2366  0001BC                     	ds	20
  2367  0001D0                     _display_LCD$7071:
  2368                           	opt stack 0
  2369                           
  2370                           ; 4 bytes @ 0x3C
  2371  0001D0                     	ds	4
  2372  0001D4                     _display_LCD$7072:
  2373                           	opt stack 0
  2374                           
  2375                           ; 4 bytes @ 0x40
  2376  0001D4                     	ds	4
  2377  0001D8                     _display_LCD$7073:
  2378                           	opt stack 0
  2379                           
  2380                           ; 4 bytes @ 0x44
  2381  0001D8                     	ds	4
  2382  0001DC                     _display_LCD$7074:
  2383                           	opt stack 0
  2384                           
  2385                           ; 4 bytes @ 0x48
  2386  0001DC                     	ds	4
  2387  0001E0                     _display_LCD$7075:
  2388                           	opt stack 0
  2389                           
  2390                           ; 4 bytes @ 0x4C
  2391  0001E0                     	ds	24
  2392  0001F8                     _terminal_task$7069:
  2393                           	opt stack 0
  2394                           
  2395                           ; 2 bytes @ 0x64
  2396  0001F8                     	ds	2
  2397  0001FA                     terminal_task@i_4590:
  2398                           	opt stack 0
  2399                           
  2400                           ; 1 bytes @ 0x66
  2401  0001FA                     	ds	1
  2402  0001FB                     terminal_task@ascii:
  2403                           	opt stack 0
  2404                           
  2405                           ; 1 bytes @ 0x67
  2406  0001FB                     	ds	1
  2407  0001FC                     terminal_task@i:
  2408                           	opt stack 0
  2409                           
  2410                           ; 1 bytes @ 0x68
  2411  0001FC                     	ds	1
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           intcon	equ	0xFF2
  2419                           intcon2	equ	0xFF1
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           indf1	equ	0xFE7
  2423                           postinc1	equ	0xFE6
  2424                           postdec1	equ	0xFE5
  2425                           fsr1h	equ	0xFE2
  2426                           fsr1l	equ	0xFE1
  2427                           indf2	equ	0xFDF
  2428                           postinc2	equ	0xFDE
  2429                           postdec2	equ	0xFDD
  2430                           plusw2	equ	0xFDB
  2431                           fsr2h	equ	0xFDA
  2432                           fsr2l	equ	0xFD9
  2433                           status	equ	0xFD8
  2434                           
  2435                           	psect	cstackBANK0
  2436  000060                     __pcstackBANK0:
  2437                           	opt stack 0
  2438  000060                     ??_isdigit:
  2439  000060                     ??_timer0_init:
  2440  000060                     ??_timer3_init:
  2441  000060                     ??_x_to_d:
  2442  000060                     ?_strcmp:
  2443                           	opt stack 0
  2444  000060                     ?_USBTransferOnePacket:
  2445                           	opt stack 0
  2446  000060                     ?_ADC:
  2447                           	opt stack 0
  2448  000060                     ?_ringbuf_num:
  2449                           	opt stack 0
  2450  000060                     ?___awmod:
  2451                           	opt stack 0
  2452  000060                     ?___lwmod:
  2453                           	opt stack 0
  2454  000060                     ?___lldiv:
  2455                           	opt stack 0
  2456  000060                     USBTransferOnePacket@dir:
  2457                           	opt stack 0
  2458  000060                     putUSBUSART@length:
  2459                           	opt stack 0
  2460  000060                     timer1_init@clock_select:
  2461                           	opt stack 0
  2462  000060                     ADC_init@p_ref:
  2463                           	opt stack 0
  2464  000060                     _is_usb_available$5165:
  2465                           	opt stack 0
  2466  000060                     OUT@value:
  2467                           	opt stack 0
  2468  000060                     ANALOG_IN@b:
  2469                           	opt stack 0
  2470  000060                     LED_output@value:
  2471                           	opt stack 0
  2472  000060                     ___lbdiv@divisor:
  2473                           	opt stack 0
  2474  000060                     ___lbmod@divisor:
  2475                           	opt stack 0
  2476  000060                     ringbuf_init@rb:
  2477                           	opt stack 0
  2478  000060                     ringbuf_num@rb:
  2479                           	opt stack 0
  2480  000060                     ringbuf_delete@rb:
  2481                           	opt stack 0
  2482  000060                     RTCC_adjust_time_toggle@tm:
  2483                           	opt stack 0
  2484  000060                     RTCC_adjust_time_cursor@tm:
  2485                           	opt stack 0
  2486  000060                     display@str0:
  2487                           	opt stack 0
  2488  000060                     ___awmod@dividend:
  2489                           	opt stack 0
  2490  000060                     ___lwmod@dividend:
  2491                           	opt stack 0
  2492  000060                     memset@p1:
  2493                           	opt stack 0
  2494  000060                     strcat@to:
  2495                           	opt stack 0
  2496  000060                     strcmp@s1:
  2497                           	opt stack 0
  2498  000060                     strcpy@to:
  2499                           	opt stack 0
  2500  000060                     ___lldiv@dividend:
  2501                           	opt stack 0
  2502                           
  2503                           ; 4 bytes @ 0x0
  2504  000060                     	ds	1
  2505  000061                     ??_timer1_init:
  2506  000061                     putUSBUSART@data:
  2507                           	opt stack 0
  2508  000061                     timer0_init@prescaler:
  2509                           	opt stack 0
  2510  000061                     timer3_init@prescaler:
  2511                           	opt stack 0
  2512  000061                     x_to_d@hex:
  2513                           	opt stack 0
  2514  000061                     OUT@b:
  2515                           	opt stack 0
  2516  000061                     LED_output@b:
  2517                           	opt stack 0
  2518  000061                     _isdigit$6473:
  2519                           	opt stack 0
  2520  000061                     ___lbdiv@dividend:
  2521                           	opt stack 0
  2522  000061                     ___lbmod@dividend:
  2523                           	opt stack 0
  2524  000061                     USBTransferOnePacket@data:
  2525                           	opt stack 0
  2526                           
  2527                           ; 2 bytes @ 0x1
  2528  000061                     	ds	1
  2529  000062                     ??_ADC:
  2530  000062                     ??_ringbuf_num:
  2531  000062                     timer1_init@prescaler:
  2532                           	opt stack 0
  2533  000062                     integrate_time@i:
  2534                           	opt stack 0
  2535  000062                     isdigit@c:
  2536                           	opt stack 0
  2537  000062                     ___lbdiv@counter:
  2538                           	opt stack 0
  2539  000062                     ___lbmod@counter:
  2540                           	opt stack 0
  2541  000062                     ringbuf_init@internal_buf:
  2542                           	opt stack 0
  2543  000062                     RTCC_to_caltime@tm:
  2544                           	opt stack 0
  2545  000062                     display@str1:
  2546                           	opt stack 0
  2547  000062                     ___awmod@divisor:
  2548                           	opt stack 0
  2549  000062                     ___lwmod@divisor:
  2550                           	opt stack 0
  2551  000062                     memset@c:
  2552                           	opt stack 0
  2553  000062                     strcat@from:
  2554                           	opt stack 0
  2555  000062                     strcmp@s2:
  2556                           	opt stack 0
  2557  000062                     strcpy@from:
  2558                           	opt stack 0
  2559                           
  2560                           ; 2 bytes @ 0x2
  2561  000062                     	ds	1
  2562  000063                     USBTransferOnePacket@len:
  2563                           	opt stack 0
  2564  000063                     ADC@ch:
  2565                           	opt stack 0
  2566  000063                     ___lbdiv@quotient:
  2567                           	opt stack 0
  2568  000063                     ___lbmod@rem:
  2569                           	opt stack 0
  2570                           
  2571                           ; 1 bytes @ 0x3
  2572  000063                     	ds	1
  2573  000064                     ??_strcmp:
  2574  000064                     USBTransferOnePacket@ep:
  2575                           	opt stack 0
  2576  000064                     d_to_x@dec:
  2577                           	opt stack 0
  2578  000064                     display@item:
  2579                           	opt stack 0
  2580  000064                     ___awmod@counter:
  2581                           	opt stack 0
  2582  000064                     ___lwmod@counter:
  2583                           	opt stack 0
  2584  000064                     ringbuf_init@bufsize:
  2585                           	opt stack 0
  2586  000064                     memset@n:
  2587                           	opt stack 0
  2588  000064                     strcat@cp:
  2589                           	opt stack 0
  2590  000064                     strcpy@cp:
  2591                           	opt stack 0
  2592  000064                     ___lldiv@divisor:
  2593                           	opt stack 0
  2594                           
  2595                           ; 4 bytes @ 0x4
  2596  000064                     	ds	1
  2597  000065                     display@i:
  2598                           	opt stack 0
  2599  000065                     ___awmod@sign:
  2600                           	opt stack 0
  2601  000065                     USBTransferOnePacket@handle:
  2602                           	opt stack 0
  2603  000065                     caltime_to_RTCC@tm:
  2604                           	opt stack 0
  2605                           
  2606                           ; 2 bytes @ 0x5
  2607  000065                     	ds	1
  2608  000066                     ??_settings_auto_stop:
  2609  000066                     ??_settings_led_indicator:
  2610  000066                     month_length@month:
  2611                           	opt stack 0
  2612  000066                     port_button_task@i:
  2613                           	opt stack 0
  2614  000066                     strcmp@r:
  2615                           	opt stack 0
  2616  000066                     memset@p:
  2617                           	opt stack 0
  2618                           
  2619                           ; 2 bytes @ 0x6
  2620  000066                     	ds	1
  2621  000067                     ??_month_length:
  2622  000067                     getsUSBUSART@len:
  2623                           	opt stack 0
  2624  000067                     _CDCTxService$2005:
  2625                           	opt stack 0
  2626  000067                     settings_auto_stop@str:
  2627                           	opt stack 0
  2628  000067                     settings_led_indicator@str:
  2629                           	opt stack 0
  2630                           
  2631                           ; 20 bytes @ 0x7
  2632  000067                     	ds	1
  2633  000068                     USBDeviceInit@i:
  2634                           	opt stack 0
  2635  000068                     ringbuf_put@rb:
  2636                           	opt stack 0
  2637  000068                     ringbuf_pop@rb:
  2638                           	opt stack 0
  2639  000068                     ringbuf_backspace@rb:
  2640                           	opt stack 0
  2641  000068                     ___lldiv@quotient:
  2642                           	opt stack 0
  2643                           
  2644                           ; 4 bytes @ 0x8
  2645  000068                     	ds	1
  2646  000069                     getsUSBUSART@buffer:
  2647                           	opt stack 0
  2648  000069                     CDCTxService@i:
  2649                           	opt stack 0
  2650                           
  2651                           ; 1 bytes @ 0x9
  2652  000069                     	ds	1
  2653  00006A                     ??_ringbuf_pop:
  2654  00006A                     ??_ringbuf_backspace:
  2655  00006A                     CDCTxService@byte_to_send:
  2656                           	opt stack 0
  2657  00006A                     ringbuf_put@asciicode:
  2658                           	opt stack 0
  2659  00006A                     _getsUSBUSART$1957:
  2660                           	opt stack 0
  2661  00006A                     settings_integrating_reset@str:
  2662                           	opt stack 0
  2663                           
  2664                           ; 20 bytes @ 0xA
  2665  00006A                     	ds	1
  2666  00006B                     ??_ringbuf_put:
  2667  00006B                     month_length@year:
  2668                           	opt stack 0
  2669  00006B                     put_string_usb@len:
  2670                           	opt stack 0
  2671                           
  2672                           ; 2 bytes @ 0xB
  2673  00006B                     	ds	1
  2674  00006C                     ?_get_string_usb:
  2675                           	opt stack 0
  2676  00006C                     ___lldiv@counter:
  2677                           	opt stack 0
  2678  00006C                     get_string_usb@len:
  2679                           	opt stack 0
  2680                           
  2681                           ; 2 bytes @ 0xC
  2682  00006C                     	ds	1
  2683  00006D                     ??_integrate_current:
  2684  00006D                     ?_CTMU_read:
  2685                           	opt stack 0
  2686  00006D                     ?___lmul:
  2687                           	opt stack 0
  2688  00006D                     ?___llmod:
  2689                           	opt stack 0
  2690  00006D                     put_string_usb@s:
  2691                           	opt stack 0
  2692  00006D                     ___lmul@multiplier:
  2693                           	opt stack 0
  2694  00006D                     ___llmod@dividend:
  2695                           	opt stack 0
  2696                           
  2697                           ; 4 bytes @ 0xD
  2698  00006D                     	ds	1
  2699  00006E                     ringbuf_pop@ret:
  2700                           	opt stack 0
  2701  00006E                     get_string_usb@rx_len:
  2702                           	opt stack 0
  2703                           
  2704                           ; 2 bytes @ 0xE
  2705  00006E                     	ds	1
  2706  00006F                     ??_CTMU_read:
  2707  00006F                     ??_ST7032_task:
  2708  00006F                     ST7032_command@wait:
  2709                           	opt stack 0
  2710  00006F                     ST7032_put@c:
  2711                           	opt stack 0
  2712  00006F                     integrate_current@i:
  2713                           	opt stack 0
  2714  00006F                     ringbuf_put_str@rb:
  2715                           	opt stack 0
  2716                           
  2717                           ; 2 bytes @ 0xF
  2718  00006F                     	ds	1
  2719  000070                     CTMU_read@ch:
  2720                           	opt stack 0
  2721  000070                     ST7032_command@command:
  2722                           	opt stack 0
  2723  000070                     get_string_usb@s:
  2724                           	opt stack 0
  2725  000070                     ST7032_puts@s:
  2726                           	opt stack 0
  2727                           
  2728                           ; 2 bytes @ 0x10
  2729  000070                     	ds	1
  2730  000071                     ST7032_cursor@row:
  2731                           	opt stack 0
  2732  000071                     ST7032_task@data:
  2733                           	opt stack 0
  2734  000071                     ringbuf_put_str@str:
  2735                           	opt stack 0
  2736  000071                     USB_task@rx_len:
  2737                           	opt stack 0
  2738  000071                     CTMU_read@sum:
  2739                           	opt stack 0
  2740  000071                     ___lmul@multiplicand:
  2741                           	opt stack 0
  2742  000071                     ___llmod@divisor:
  2743                           	opt stack 0
  2744                           
  2745                           ; 4 bytes @ 0x11
  2746  000071                     	ds	1
  2747  000072                     ST7032_cursor@row_offsets:
  2748                           	opt stack 0
  2749                           
  2750                           ; 2 bytes @ 0x12
  2751  000072                     	ds	1
  2752  000073                     USB_task@data:
  2753                           	opt stack 0
  2754                           
  2755                           ; 1 bytes @ 0x13
  2756  000073                     	ds	1
  2757  000074                     ST7032_cursor@col:
  2758                           	opt stack 0
  2759                           
  2760                           ; 1 bytes @ 0x14
  2761  000074                     	ds	1
  2762  000075                     CTMU_read@i:
  2763                           	opt stack 0
  2764  000075                     sleep_task@i:
  2765                           	opt stack 0
  2766  000075                     ___llmod@counter:
  2767                           	opt stack 0
  2768  000075                     ___lmul@product:
  2769                           	opt stack 0
  2770                           
  2771                           ; 4 bytes @ 0x15
  2772  000075                     	ds	1
  2773  000076                     ?___wmul:
  2774                           	opt stack 0
  2775  000076                     ___wmul@multiplier:
  2776                           	opt stack 0
  2777                           
  2778                           ; 2 bytes @ 0x16
  2779  000076                     	ds	2
  2780  000078                     ___wmul@multiplicand:
  2781                           	opt stack 0
  2782                           
  2783                           ; 2 bytes @ 0x18
  2784  000078                     	ds	1
  2785  000079                     ?_get_quot_rem:
  2786                           	opt stack 0
  2787  000079                     get_quot_rem@div:
  2788                           	opt stack 0
  2789  000079                     caltime_to_epoch@tm:
  2790                           	opt stack 0
  2791                           
  2792                           ; 2 bytes @ 0x19
  2793  000079                     	ds	1
  2794  00007A                     ___wmul@product:
  2795                           	opt stack 0
  2796                           
  2797                           ; 2 bytes @ 0x1A
  2798  00007A                     	ds	1
  2799  00007B                     ??_caltime_to_epoch:
  2800  00007B                     settings_auto_stop@str_6158:
  2801                           	opt stack 0
  2802  00007B                     settings_led_indicator@str_6175:
  2803                           	opt stack 0
  2804                           
  2805                           ; 20 bytes @ 0x1B
  2806  00007B                     	ds	1
  2807  00007C                     ??_Auto_cut:
  2808  00007C                     ?_atoi:
  2809                           	opt stack 0
  2810  00007C                     ?___lwdiv:
  2811                           	opt stack 0
  2812  00007C                     atoi@s:
  2813                           	opt stack 0
  2814  00007C                     ___lwdiv@dividend:
  2815                           	opt stack 0
  2816                           
  2817                           ; 2 bytes @ 0x1C
  2818  00007C                     	ds	1
  2819  00007D                     get_quot_rem@num:
  2820                           	opt stack 0
  2821                           
  2822                           ; 4 bytes @ 0x1D
  2823  00007D                     	ds	1
  2824  00007E                     ??_atoi:
  2825  00007E                     Auto_cut@i:
  2826                           	opt stack 0
  2827  00007E                     ___lwdiv@divisor:
  2828                           	opt stack 0
  2829  00007E                     settings_integrating_reset@str_6192:
  2830                           	opt stack 0
  2831                           
  2832                           ; 20 bytes @ 0x1E
  2833  00007E                     	ds	1
  2834  00007F                     caltime_to_epoch@year:
  2835                           	opt stack 0
  2836                           
  2837                           ; 1 bytes @ 0x1F
  2838  00007F                     	ds	1
  2839  000080                     caltime_to_epoch@month_3500:
  2840                           	opt stack 0
  2841  000080                     atoi@sign:
  2842                           	opt stack 0
  2843  000080                     ___lwdiv@counter:
  2844                           	opt stack 0
  2845                           
  2846                           ; 1 bytes @ 0x20
  2847  000080                     	ds	1
  2848  000081                     get_quot_rem@quot:
  2849                           	opt stack 0
  2850  000081                     atoi@a:
  2851                           	opt stack 0
  2852  000081                     ___lwdiv@quotient:
  2853                           	opt stack 0
  2854  000081                     caltime_to_epoch@epoch:
  2855                           	opt stack 0
  2856                           
  2857                           ; 4 bytes @ 0x21
  2858  000081                     	ds	1
  2859  000082                     epoch_to_caltime@tm:
  2860                           	opt stack 0
  2861                           
  2862                           ; 2 bytes @ 0x22
  2863  000082                     	ds	1
  2864  000083                     ?_sprintf:
  2865                           	opt stack 0
  2866  000083                     ctmu_set_ratio@percentage:
  2867                           	opt stack 0
  2868  000083                     button_timer_interrupt@bt:
  2869                           	opt stack 0
  2870  000083                     ringbuf_put_num@rb:
  2871                           	opt stack 0
  2872  000083                     sprintf@sp:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x23
  2876  000083                     	ds	1
  2877  000084                     ??_epoch_to_caltime:
  2878  000084                     software_init@i:
  2879                           	opt stack 0
  2880                           
  2881                           ; 1 bytes @ 0x24
  2882  000084                     	ds	1
  2883  000085                     button_timer_interrupt@sw_value:
  2884                           	opt stack 0
  2885  000085                     caltime_to_epoch@month:
  2886                           	opt stack 0
  2887  000085                     ringbuf_put_num@value:
  2888                           	opt stack 0
  2889  000085                     sprintf@f:
  2890                           	opt stack 0
  2891                           
  2892                           ; 2 bytes @ 0x25
  2893  000085                     	ds	1
  2894  000086                     RTCC_from_RTCC@tm:
  2895                           	opt stack 0
  2896                           
  2897                           ; 2 bytes @ 0x26
  2898  000086                     	ds	1
  2899  000087                     ringbuf_put_num@digits:
  2900                           	opt stack 0
  2901  000087                     epoch_to_caltime@day:
  2902                           	opt stack 0
  2903                           
  2904                           ; 2 bytes @ 0x27
  2905  000087                     	ds	1
  2906  000088                     ringbuf_put_num@i:
  2907                           	opt stack 0
  2908                           
  2909                           ; 1 bytes @ 0x28
  2910  000088                     	ds	1
  2911  000089                     epoch_to_caltime@year:
  2912                           	opt stack 0
  2913  000089                     ringbuf_put_num@temp:
  2914                           	opt stack 0
  2915                           
  2916                           ; 2 bytes @ 0x29
  2917  000089                     	ds	1
  2918  00008A                     epoch_to_caltime@month:
  2919                           	opt stack 0
  2920                           
  2921                           ; 1 bytes @ 0x2A
  2922  00008A                     	ds	1
  2923  00008B                     epoch_to_caltime@num:
  2924                           	opt stack 0
  2925                           
  2926                           ; 4 bytes @ 0x2B
  2927  00008B                     	ds	4
  2928  00008F                     settings_auto_stop@strp:
  2929                           	opt stack 0
  2930  00008F                     settings_led_indicator@strp:
  2931                           	opt stack 0
  2932  00008F                     RTCC_from_caltime@tm:
  2933                           	opt stack 0
  2934  00008F                     RTCC_from_epoch@tm:
  2935                           	opt stack 0
  2936                           
  2937                           ; 2 bytes @ 0x2F
  2938  00008F                     	ds	1
  2939  000090                     settings_auto_stop@strp_6159:
  2940                           	opt stack 0
  2941  000090                     settings_led_indicator@strp_6176:
  2942                           	opt stack 0
  2943                           
  2944                           ; 1 bytes @ 0x30
  2945  000090                     	ds	1
  2946  000091                     settings_auto_stop@i:
  2947                           	opt stack 0
  2948  000091                     settings_led_indicator@i:
  2949                           	opt stack 0
  2950  000091                     RTCC_adjust_time_inc@tm:
  2951                           	opt stack 0
  2952  000091                     RTCC_adjust_time_dec@tm:
  2953                           	opt stack 0
  2954                           
  2955                           ; 2 bytes @ 0x31
  2956  000091                     	ds	1
  2957  000092                     settings_auto_stop@i_6160:
  2958                           	opt stack 0
  2959  000092                     settings_led_indicator@i_6177:
  2960                           	opt stack 0
  2961  000092                     settings_integrating_reset@strp:
  2962                           	opt stack 0
  2963                           
  2964                           ; 1 bytes @ 0x32
  2965  000092                     	ds	1
  2966  000093                     ??_RTCC_adjust_time_inc:
  2967  000093                     ??_RTCC_adjust_time_dec:
  2968  000093                     settings_auto_stop@j:
  2969                           	opt stack 0
  2970  000093                     settings_led_indicator@j:
  2971                           	opt stack 0
  2972  000093                     settings_integrating_reset@strp_6193:
  2973                           	opt stack 0
  2974                           
  2975                           ; 1 bytes @ 0x33
  2976  000093                     	ds	1
  2977  000094                     settings_integrating_reset@i:
  2978                           	opt stack 0
  2979                           
  2980                           ; 1 bytes @ 0x34
  2981  000094                     	ds	1
  2982  000095                     settings_integrating_reset@i_6194:
  2983                           	opt stack 0
  2984                           
  2985                           ; 1 bytes @ 0x35
  2986  000095                     	ds	1
  2987  000096                     settings_integrating_reset@j:
  2988                           	opt stack 0
  2989                           
  2990                           ; 1 bytes @ 0x36
  2991  000096                     	ds	1
  2992  000097                     ??_sprintf:
  2993  000097                     RTCC_adjust_time_inc@i_3680:
  2994                           	opt stack 0
  2995  000097                     RTCC_adjust_time_dec@i_3710:
  2996                           	opt stack 0
  2997                           
  2998                           ; 1 bytes @ 0x37
  2999  000097                     	ds	1
  3000  000098                     RTCC_adjust_time_inc@i:
  3001                           	opt stack 0
  3002  000098                     RTCC_adjust_time_dec@i:
  3003                           	opt stack 0
  3004                           
  3005                           ; 1 bytes @ 0x38
  3006  000098                     	ds	1
  3007  000099                     settings_task@item_change_flag:
  3008                           	opt stack 0
  3009                           
  3010                           ; 1 bytes @ 0x39
  3011  000099                     	ds	2
  3012  00009B                     sprintf@prec:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x3B
  3016  00009B                     	ds	2
  3017  00009D                     sprintf@cp:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x3D
  3021  00009D                     	ds	2
  3022  00009F                     sprintf@ap:
  3023                           	opt stack 0
  3024                           
  3025                           ; 1 bytes @ 0x3F
  3026  00009F                     	ds	1
  3027  0000A0                     sprintf@len:
  3028                           	opt stack 0
  3029                           
  3030                           ; 2 bytes @ 0x40
  3031  0000A0                     	ds	2
  3032  0000A2                     sprintf@val:
  3033                           	opt stack 0
  3034                           
  3035                           ; 4 bytes @ 0x42
  3036  0000A2                     	ds	4
  3037  0000A6                     sprintf@flag:
  3038                           	opt stack 0
  3039                           
  3040                           ; 1 bytes @ 0x46
  3041  0000A6                     	ds	1
  3042  0000A7                     sprintf@c:
  3043                           	opt stack 0
  3044                           
  3045                           ; 1 bytes @ 0x47
  3046  0000A7                     	ds	1
  3047  0000A8                     sprintf@width:
  3048                           	opt stack 0
  3049                           
  3050                           ; 2 bytes @ 0x48
  3051  0000A8                     	ds	2
  3052  0000AA                     display_dec@str:
  3053                           	opt stack 0
  3054  0000AA                     print_time@tx:
  3055                           	opt stack 0
  3056  0000AA                     data_out@tx:
  3057                           	opt stack 0
  3058                           
  3059                           ; 2 bytes @ 0x4A
  3060  0000AA                     	ds	2
  3061  0000AC                     display_dec@dec:
  3062                           	opt stack 0
  3063  0000AC                     print_time@str:
  3064                           	opt stack 0
  3065  0000AC                     data_out@str:
  3066                           	opt stack 0
  3067                           
  3068                           ; 30 bytes @ 0x4C
  3069  0000AC                     	ds	1
  3070  0000AD                     display_dec@edit:
  3071                           	opt stack 0
  3072                           
  3073                           ; 1 bytes @ 0x4D
  3074  0000AD                     	ds	1
  3075  0000AE                     display_dec@s:
  3076                           	opt stack 0
  3077                           
  3078                           ; 4 bytes @ 0x4E
  3079  0000AE                     	ds	4
  3080  0000B2                     display_time_1602@tm:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x52
  3084  0000B2                     	ds	2
  3085  0000B4                     display_time_1602@line0:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x54
  3089  0000B4                     	ds	2
  3090  0000B6                     display_time_1602@line1:
  3091                           	opt stack 0
  3092                           
  3093                           ; 2 bytes @ 0x56
  3094  0000B6                     	ds	2
  3095  0000B8                     ??_display_LCD:
  3096  0000B8                     
  3097                           ; 0 bytes @ 0x58
  3098  0000B8                     	ds	18
  3099  0000CA                     data_out@i:
  3100                           	opt stack 0
  3101  0000CA                     terminal_at_hand@tx:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x6A
  3105  0000CA                     	ds	1
  3106  0000CB                     
  3107                           ; 0 bytes @ 0x6B
  3108  0000CB                     	ds	1
  3109  0000CC                     terminal_at_hand@hand:
  3110                           	opt stack 0
  3111                           
  3112                           ; 2 bytes @ 0x6C
  3113  0000CC                     	ds	2
  3114  0000CE                     terminal_at_hand@min:
  3115                           	opt stack 0
  3116                           
  3117                           ; 1 bytes @ 0x6E
  3118  0000CE                     	ds	1
  3119  0000CF                     terminal_at_hand@max:
  3120                           	opt stack 0
  3121                           
  3122                           ; 1 bytes @ 0x6F
  3123  0000CF                     	ds	1
  3124  0000D0                     terminal_at_hand@value:
  3125                           	opt stack 0
  3126                           
  3127                           ; 1 bytes @ 0x70
  3128  0000D0                     	ds	1
  3129  0000D1                     terminal_time@tx:
  3130                           	opt stack 0
  3131                           
  3132                           ; 2 bytes @ 0x71
  3133  0000D1                     	ds	2
  3134  0000D3                     terminal_time@op0:
  3135                           	opt stack 0
  3136                           
  3137                           ; 2 bytes @ 0x73
  3138  0000D3                     	ds	2
  3139  0000D5                     terminal_time@op1:
  3140                           	opt stack 0
  3141                           
  3142                           ; 2 bytes @ 0x75
  3143  0000D5                     	ds	2
  3144  0000D7                     terminal_time@op2:
  3145                           	opt stack 0
  3146                           
  3147                           ; 2 bytes @ 0x77
  3148  0000D7                     	ds	2
  3149  0000D9                     _terminal_time$7070:
  3150                           	opt stack 0
  3151                           
  3152                           ; 1 bytes @ 0x79
  3153  0000D9                     	ds	1
  3154  0000DA                     terminal_operation@tx:
  3155                           	opt stack 0
  3156                           
  3157                           ; 2 bytes @ 0x7A
  3158  0000DA                     	ds	2
  3159  0000DC                     terminal_operation@op0:
  3160                           	opt stack 0
  3161                           
  3162                           ; 2 bytes @ 0x7C
  3163  0000DC                     	ds	2
  3164  0000DE                     terminal_operation@op1:
  3165                           	opt stack 0
  3166                           
  3167                           ; 2 bytes @ 0x7E
  3168  0000DE                     	ds	2
  3169  0000E0                     terminal_operation@op2:
  3170                           	opt stack 0
  3171                           
  3172                           ; 2 bytes @ 0x80
  3173  0000E0                     	ds	2
  3174  0000E2                     terminal_operation@op3:
  3175                           	opt stack 0
  3176                           
  3177                           ; 2 bytes @ 0x82
  3178  0000E2                     	ds	2
  3179  0000E4                     terminal_operation@percentage:
  3180                           	opt stack 0
  3181                           
  3182                           ; 1 bytes @ 0x84
  3183  0000E4                     	ds	1
  3184  0000E5                     terminal_task@tx:
  3185                           	opt stack 0
  3186                           
  3187                           ; 2 bytes @ 0x85
  3188  0000E5                     	ds	2
  3189  0000E7                     terminal_task@rx:
  3190                           	opt stack 0
  3191                           
  3192                           ; 2 bytes @ 0x87
  3193  0000E7                     	ds	2
  3194  0000E9                     ??_terminal_task:
  3195                           
  3196                           ; 0 bytes @ 0x89
  3197  0000E9                     	ds	2
  3198  0000EB                     tblptru	equ	0xFF8
  3199                           tblptrh	equ	0xFF7
  3200                           tblptrl	equ	0xFF6
  3201                           tablat	equ	0xFF5
  3202                           prodh	equ	0xFF4
  3203                           prodl	equ	0xFF3
  3204                           intcon	equ	0xFF2
  3205                           intcon2	equ	0xFF1
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           indf1	equ	0xFE7
  3209                           postinc1	equ	0xFE6
  3210                           postdec1	equ	0xFE5
  3211                           fsr1h	equ	0xFE2
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           plusw2	equ	0xFDB
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8
  3220                           
  3221                           ; 0 bytes @ 0x8B
  3222                           
  3223                           	psect	cstackCOMRAM
  3224  00002B                     __pcstackCOMRAM:
  3225                           	opt stack 0
  3226  00002B                     ??_USBStdGetDscHandler:
  3227  00002B                     ?i2_USBTransferOnePacket:
  3228                           	opt stack 0
  3229  00002B                     ?i2___lwdiv:
  3230                           	opt stack 0
  3231  00002B                     USBConfigureEndpoint@direction:
  3232                           	opt stack 0
  3233  00002B                     USBCtrlTrfTxService@byteToSend:
  3234                           	opt stack 0
  3235  00002B                     USBCtrlTrfRxService@i:
  3236                           	opt stack 0
  3237  00002B                     i2USBTransferOnePacket@dir:
  3238                           	opt stack 0
  3239  00002B                     i2LED_output@value:
  3240                           	opt stack 0
  3241  00002B                     USBStdGetStatusHandler@p:
  3242                           	opt stack 0
  3243  00002B                     i2___lwdiv@dividend:
  3244                           	opt stack 0
  3245  00002B                     i2memset@p1:
  3246                           	opt stack 0
  3247                           
  3248                           ; 2 bytes @ 0x0
  3249  00002B                     	ds	1
  3250  00002C                     ??_USBConfigureEndpoint:
  3251  00002C                     USBCtrlTrfRxService@byteToRead:
  3252                           	opt stack 0
  3253  00002C                     USBCtrlTrfInHandler@lastDTS:
  3254                           	opt stack 0
  3255  00002C                     i2LED_output@b:
  3256                           	opt stack 0
  3257  00002C                     i2USBTransferOnePacket@data:
  3258                           	opt stack 0
  3259                           
  3260                           ; 2 bytes @ 0x1
  3261  00002C                     	ds	1
  3262  00002D                     i2___lwdiv@divisor:
  3263                           	opt stack 0
  3264  00002D                     i2memset@c:
  3265                           	opt stack 0
  3266                           
  3267                           ; 2 bytes @ 0x2
  3268  00002D                     	ds	1
  3269  00002E                     i2USBTransferOnePacket@len:
  3270                           	opt stack 0
  3271                           
  3272                           ; 1 bytes @ 0x3
  3273  00002E                     	ds	1
  3274  00002F                     i2USBTransferOnePacket@ep:
  3275                           	opt stack 0
  3276  00002F                     i2___lwdiv@quotient:
  3277                           	opt stack 0
  3278  00002F                     i2memset@n:
  3279                           	opt stack 0
  3280                           
  3281                           ; 2 bytes @ 0x4
  3282  00002F                     	ds	1
  3283  000030                     USBConfigureEndpoint@EPNum:
  3284                           	opt stack 0
  3285  000030                     i2USBTransferOnePacket@handle:
  3286                           	opt stack 0
  3287                           
  3288                           ; 2 bytes @ 0x5
  3289  000030                     	ds	1
  3290  000031                     i2___lwdiv@counter:
  3291                           	opt stack 0
  3292  000031                     USBConfigureEndpoint@handle:
  3293                           	opt stack 0
  3294  000031                     i2memset@p:
  3295                           	opt stack 0
  3296                           
  3297                           ; 2 bytes @ 0x6
  3298  000031                     	ds	1
  3299  000032                     ??_LED_indicator:
  3300                           
  3301                           ; 0 bytes @ 0x7
  3302  000032                     	ds	1
  3303  000033                     USBEnableEndpoint@options:
  3304                           	opt stack 0
  3305  000033                     i2USBDeviceInit@i:
  3306                           	opt stack 0
  3307                           
  3308                           ; 1 bytes @ 0x8
  3309  000033                     	ds	1
  3310  000034                     USBEnableEndpoint@p:
  3311                           	opt stack 0
  3312                           
  3313                           ; 2 bytes @ 0x9
  3314  000034                     	ds	1
  3315  000035                     LED_indicator@i:
  3316                           	opt stack 0
  3317                           
  3318                           ; 1 bytes @ 0xA
  3319  000035                     	ds	1
  3320  000036                     USBEnableEndpoint@ep:
  3321                           	opt stack 0
  3322                           
  3323                           ; 1 bytes @ 0xB
  3324  000036                     	ds	1
  3325  000037                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3326                           	opt stack 0
  3327                           
  3328                           ; 2 bytes @ 0xC
  3329  000037                     	ds	2
  3330  000039                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3331                           	opt stack 0
  3332                           
  3333                           ; 2 bytes @ 0xE
  3334  000039                     	ds	2
  3335  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3336                           	opt stack 0
  3337                           
  3338                           ; 2 bytes @ 0x10
  3339  00003B                     	ds	2
  3340  00003D                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3341                           
  3342                           ; 0 bytes @ 0x12
  3343  00003D                     	ds	2
  3344  00003F                     ??_USBStdFeatureReqHandler:
  3345  00003F                     USBStdSetCfgHandler@i:
  3346                           	opt stack 0
  3347                           
  3348                           ; 1 bytes @ 0x14
  3349  00003F                     	ds	2
  3350  000041                     USBStdFeatureReqHandler@pUEP:
  3351                           	opt stack 0
  3352                           
  3353                           ; 2 bytes @ 0x16
  3354  000041                     	ds	2
  3355  000043                     USBStdFeatureReqHandler@current_ep_data:
  3356                           	opt stack 0
  3357                           
  3358                           ; 1 bytes @ 0x18
  3359  000043                     	ds	1
  3360  000044                     USBStdFeatureReqHandler@p:
  3361                           	opt stack 0
  3362                           
  3363                           ; 2 bytes @ 0x19
  3364  000044                     	ds	2
  3365  000046                     ??_USBCtrlEPService:
  3366  000046                     
  3367                           ; 0 bytes @ 0x1B
  3368  000046                     	ds	2
  3369  000048                     USBCtrlEPService@setup_cnt:
  3370                           	opt stack 0
  3371                           
  3372                           ; 1 bytes @ 0x1D
  3373  000048                     	ds	1
  3374  000049                     USBDeviceTasks@i:
  3375                           	opt stack 0
  3376                           
  3377                           ; 1 bytes @ 0x1E
  3378  000049                     	ds	1
  3379  00004A                     ??_ISR:
  3380                           
  3381                           ; 0 bytes @ 0x1F
  3382  00004A                     	ds	10
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           prodh	equ	0xFF4
  3388                           prodl	equ	0xFF3
  3389                           intcon	equ	0xFF2
  3390                           intcon2	equ	0xFF1
  3391                           postinc0	equ	0xFEE
  3392                           wreg	equ	0xFE8
  3393                           indf1	equ	0xFE7
  3394                           postinc1	equ	0xFE6
  3395                           postdec1	equ	0xFE5
  3396                           fsr1h	equ	0xFE2
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           plusw2	equ	0xFDB
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;;
  3407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3408 ;;
  3409 ;; *************** function _main *****************
  3410 ;; Defined at:
  3411 ;;		line 129 in file "main.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  2  1768[None  ] int 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : F/1
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3429 ;;Total ram usage:        0 bytes
  3430 ;; Hardware stack levels required when called:   20
  3431 ;; This function calls:
  3432 ;;		_RTCC_task
  3433 ;;		_ST7032_task
  3434 ;;		_USB_task
  3435 ;;		_bootload
  3436 ;;		_ctmu_task
  3437 ;;		_hardware_init
  3438 ;;		_normal_task
  3439 ;;		_sleep_task
  3440 ;;		_software_init
  3441 ;;		_terminal_task
  3442 ;; This function is called by:
  3443 ;;		Startup code after reset
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text0
  3448  0137A0                     __ptext0:
  3449                           	opt stack 0
  3450  0137A0                     _main:
  3451                           	opt stack 11
  3452                           
  3453                           ;main.c: 131: hardware_init();
  3454                           
  3455                           ;incstack = 0
  3456  0137A0  ECBB  F099         	call	_hardware_init	;wreg free
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;main.c: 133: software_init();
  3460  0137A4  EC95  F09C         	call	_software_init	;wreg free
  3461  0137A8                     l11770:
  3462                           
  3463                           ; BSR set to: 1
  3464                           ;main.c: 135: INTCONbits.GIE = 1;
  3465  0137A8  8EF2               	bsf	intcon,7,c	;volatile
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;main.c: 139: INTCONbits.GIE = 0;
  3469  0137AA  9EF2               	bcf	intcon,7,c	;volatile
  3470                           
  3471                           ; BSR set to: 1
  3472                           ;main.c: 140: RTCC_task();
  3473  0137AC  ECD1  F0A0         	call	_RTCC_task	;wreg free
  3474                           
  3475                           ;main.c: 141: INTCONbits.GIE = 1;
  3476  0137B0  8EF2               	bsf	intcon,7,c	;volatile
  3477                           
  3478                           ;main.c: 142: INTCONbits.GIE = 0;
  3479  0137B2  9EF2               	bcf	intcon,7,c	;volatile
  3480                           
  3481                           ;main.c: 143: ST7032_task();
  3482  0137B4  EC84  F08E         	call	_ST7032_task	;wreg free
  3483                           
  3484                           ;main.c: 144: INTCONbits.GIE = 1;
  3485  0137B8  8EF2               	bsf	intcon,7,c	;volatile
  3486                           
  3487                           ;main.c: 145: INTCONbits.GIE = 0;
  3488  0137BA  9EF2               	bcf	intcon,7,c	;volatile
  3489                           
  3490                           ;main.c: 146: USB_task();
  3491  0137BC  ECC5  F09C         	call	_USB_task	;wreg free
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;main.c: 147: INTCONbits.GIE = 1;
  3495  0137C0  8EF2               	bsf	intcon,7,c	;volatile
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;main.c: 148: INTCONbits.GIE = 0;
  3499  0137C2  9EF2               	bcf	intcon,7,c	;volatile
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;main.c: 149: terminal_task(&usb_tx, &usb_rx);
  3503  0137C4  0EBD               	movlw	low _usb_tx
  3504  0137C6  6FE5               	movwf	terminal_task@tx& (0+255),b
  3505  0137C8  0E02               	movlw	high _usb_tx
  3506  0137CA  6FE6               	movwf	(terminal_task@tx+1)& (0+255),b
  3507  0137CC  0EB5               	movlw	low _usb_rx
  3508  0137CE  6FE7               	movwf	terminal_task@rx& (0+255),b
  3509  0137D0  0E02               	movlw	high _usb_rx
  3510  0137D2  6FE8               	movwf	(terminal_task@rx+1)& (0+255),b
  3511  0137D4  EC26  F083         	call	_terminal_task	;wreg free
  3512                           
  3513                           ;main.c: 150: INTCONbits.GIE = 1;
  3514  0137D8  8EF2               	bsf	intcon,7,c	;volatile
  3515                           
  3516                           ;main.c: 151: INTCONbits.GIE = 0;
  3517  0137DA  9EF2               	bcf	intcon,7,c	;volatile
  3518                           
  3519                           ;main.c: 152: normal_task();
  3520  0137DC  ECF4  F098         	call	_normal_task	;wreg free
  3521                           
  3522                           ;main.c: 153: INTCONbits.GIE = 1;
  3523  0137E0  8EF2               	bsf	intcon,7,c	;volatile
  3524                           
  3525                           ;main.c: 155: INTCONbits.GIE = 0;
  3526  0137E2  9EF2               	bcf	intcon,7,c	;volatile
  3527                           
  3528                           ;main.c: 156: ctmu_task();
  3529  0137E4  ECC3  F0A2         	call	_ctmu_task	;wreg free
  3530                           
  3531                           ;main.c: 157: if (ctmu_m.flag.pressing &&
  3532                           ;main.c: 158: port[0].ctmu.flag.pressing &&
  3533                           ;main.c: 159: port[1].ctmu.flag.pressing &&
  3534                           ;main.c: 160: port[2].ctmu.flag.pressing) {
  3535  0137E8  A028               	btfss	_ctmu_m+3,0,c
  3536  0137EA  D007               	goto	l11816
  3537  0137EC  0101               	movlb	1	; () banked
  3538  0137EE  B140               	btfsc	(_port+3)& (0+255),0,b
  3539                           
  3540                           ; BSR set to: 1
  3541  0137F0  A157               	btfss	(_port+26)& (0+255),0,b
  3542  0137F2  D003               	goto	l11816
  3543                           
  3544                           ; BSR set to: 1
  3545  0137F4  B16E               	btfsc	(_port+49)& (0+255),0,b
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;main.c: 161: bootload();
  3549  0137F6  EC86  F0A0         	call	_bootload	;wreg free
  3550  0137FA                     l11816:
  3551                           
  3552                           ;main.c: 162: }
  3553                           ;main.c: 163: INTCONbits.GIE = 1;
  3554  0137FA  8EF2               	bsf	intcon,7,c	;volatile
  3555                           
  3556                           ;main.c: 165: INTCONbits.GIE = 0;
  3557  0137FC  9EF2               	bcf	intcon,7,c	;volatile
  3558                           
  3559                           ;main.c: 166: sleep_task();
  3560  0137FE  EC15  F094         	call	_sleep_task	;wreg free
  3561  013802  D7D2               	goto	l11770
  3562  013804                     __end_of_main:
  3563                           	opt stack 0
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           prodh	equ	0xFF4
  3569                           prodl	equ	0xFF3
  3570                           intcon	equ	0xFF2
  3571                           intcon2	equ	0xFF1
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           indf1	equ	0xFE7
  3575                           postinc1	equ	0xFE6
  3576                           postdec1	equ	0xFE5
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           indf2	equ	0xFDF
  3580                           postinc2	equ	0xFDE
  3581                           postdec2	equ	0xFDD
  3582                           plusw2	equ	0xFDB
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8
  3586                           
  3587 ;; *************** function _terminal_task *****************
  3588 ;; Defined at:
  3589 ;;		line 8 in file "../My_library/My_terminal.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  tx              2  133[BANK0 ] PTR struct ringbuf
  3592 ;;		 -> usb_tx(8), 
  3593 ;;  rx              2  135[BANK0 ] PTR struct ringbuf
  3594 ;;		 -> usb_rx(8), 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  i               1  102[BANK1 ] unsigned char 
  3597 ;;  i               1  104[BANK1 ] unsigned char 
  3598 ;;  ascii           1  103[BANK1 ] unsigned char 
  3599 ;;  buf           100    0[BANK1 ] unsigned char [100]
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : F/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3610 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;      Totals:         0       6     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;Total ram usage:      111 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:   19
  3616 ;; This function calls:
  3617 ;;		_ringbuf_backspace
  3618 ;;		_ringbuf_delete
  3619 ;;		_ringbuf_init
  3620 ;;		_ringbuf_num
  3621 ;;		_ringbuf_pop
  3622 ;;		_ringbuf_put
  3623 ;;		_ringbuf_put_num
  3624 ;;		_ringbuf_put_str
  3625 ;;		_terminal_operation
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text1
  3632  01064C                     __ptext1:
  3633                           	opt stack 0
  3634  01064C                     _terminal_task:
  3635                           	opt stack 11
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;My_terminal.c: 9: static ringbuf_t command;
  3639                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3640                           ;My_terminal.c: 11: if (command_init == 0) {
  3641                           
  3642                           ; BSR set to: 1
  3643                           ;incstack = 0
  3644  01064C  0101               	movlb	1	; () banked
  3645  01064E  513C               	movf	terminal_task@command_init& (0+255),w,b
  3646  010650  E10D               	bnz	l11556
  3647                           
  3648                           ; BSR set to: 1
  3649                           ;My_terminal.c: 12: command_init = 1;
  3650  010652  0E01               	movlw	1
  3651  010654  6F3C               	movwf	terminal_task@command_init& (0+255),b
  3652                           
  3653                           ; BSR set to: 1
  3654                           ;My_terminal.c: 13: char buf[100];
  3655                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3656  010656  0E8A               	movlw	low terminal_task@command
  3657  010658  0100               	movlb	0	; () banked
  3658  01065A  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3659  01065C  0E01               	movlw	high terminal_task@command
  3660  01065E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3661  010660  0E94               	movlw	low terminal_task@buf
  3662  010662  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3663  010664  0E01               	movlw	high terminal_task@buf
  3664  010666  D909               	call	PL342	;call to abstracted procedure
  3665  010668  EC18  F0A0         	call	_ringbuf_init	;wreg free
  3666  01066C                     l11556:
  3667                           
  3668                           ;My_terminal.c: 15: }
  3669                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3670  01066C  C0E7  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3671  010670  C0E8  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3672  010674  ECDE  F097         	call	_ringbuf_num	;wreg free
  3673  010678  5160               	movf	?_ringbuf_num& (0+255),w,b
  3674  01067A  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3675  01067C  B4D8               	btfsc	status,2,c
  3676  01067E  0012               	return	
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3680  010680  C0E7  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3681  010684  C0E8  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3682  010688  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3683  01068C  0101               	movlb	1	; () banked
  3684  01068E  6FFB               	movwf	terminal_task@ascii& (0+255),b
  3685                           
  3686                           ;My_terminal.c: 18: switch (ascii) {
  3687  010690  D0C5               	goto	l11618
  3688  010692                     l11560:
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3692  010692  D8DE               	call	PL202	;call to abstracted procedure
  3693  010694  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
  3694  010696  ECC5  F093         	call	_ringbuf_put	;wreg free
  3695                           
  3696                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3697  01069A  D8E0               	call	PL224	;call to abstracted procedure
  3698  01069C  0E09               	movlw	9
  3699  01069E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3700  0106A0  ECC5  F093         	call	_ringbuf_put	;wreg free
  3701                           
  3702                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3703  0106A4  0E8A               	movlw	low terminal_task@command
  3704  0106A6  D8F2               	call	PL350	;call to abstracted procedure
  3705  0106A8  ECDE  F097         	call	_ringbuf_num	;wreg free
  3706  0106AC  0EFF               	movlw	255
  3707  0106AE  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3708  0106B0  0101               	movlb	1	; () banked
  3709  0106B2  6FF8               	movwf	_terminal_task$7069& (0+255),b
  3710  0106B4  0EFF               	movlw	255
  3711  0106B6  0100               	movlb	0	; () banked
  3712  0106B8  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3713  0106BA  0101               	movlb	1	; () banked
  3714  0106BC  6FF9               	movwf	(_terminal_task$7069+1)& (0+255),b
  3715                           
  3716                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3717  0106BE  C0E5  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3718  0106C2  C0E6  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3719  0106C6  C1F8  F085         	movff	_terminal_task$7069,ringbuf_put_num@value
  3720  0106CA  C1F9  F086         	movff	_terminal_task$7069+1,ringbuf_put_num@value+1
  3721  0106CE  0E02               	movlw	2
  3722  0106D0  0100               	movlb	0	; () banked
  3723  0106D2  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3724  0106D4  EC02  F09C         	call	_ringbuf_put_num	;wreg free
  3725                           
  3726                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3727  0106D8  D8C1               	call	PL224	;call to abstracted procedure
  3728  0106DA  0E0A               	movlw	10
  3729  0106DC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3730  0106DE  ECC5  F093         	call	_ringbuf_put	;wreg free
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;My_terminal.c: 24: static char op0[25];
  3734                           ;My_terminal.c: 25: static char op1[25];
  3735                           ;My_terminal.c: 26: static char op2[25];
  3736                           ;My_terminal.c: 27: static char op3[25];
  3737                           ;My_terminal.c: 28: uint8_t i;
  3738                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3739  0106E2  0101               	movlb	1	; () banked
  3740  0106E4  6BFC               	clrf	terminal_task@i& (0+255),b
  3741  0106E6  D001               	goto	l11566
  3742  0106E8                     l11564:
  3743                           
  3744                           ; BSR set to: 1
  3745  0106E8  2BFC               	incf	terminal_task@i& (0+255),f,b
  3746  0106EA                     l11566:
  3747                           
  3748                           ; BSR set to: 1
  3749  0106EA  D8A3               	call	PL136	;call to abstracted procedure
  3750  0106EC  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3751  0106F0  6FE9               	movwf	??_terminal_task& (0+255),b
  3752  0106F2  0E2B               	movlw	low terminal_task@op0
  3753  0106F4  D8B8               	call	PL232	;call to abstracted procedure
  3754  0106F6  0E02               	movlw	high terminal_task@op0
  3755  0106F8  D8BB               	call	PL242	;call to abstracted procedure
  3756  0106FA  E1F6               	bnz	l11564
  3757                           
  3758                           ; BSR set to: 1
  3759                           ;My_terminal.c: 30: op0[i] = '\0';
  3760  0106FC  0E2B               	movlw	low terminal_task@op0
  3761  0106FE  25FC               	addwf	terminal_task@i& (0+255),w,b
  3762  010700  6ED9               	movwf	fsr2l,c
  3763  010702  6ADA               	clrf	fsr2h,c
  3764  010704  0E02               	movlw	high terminal_task@op0
  3765                           
  3766                           ; BSR set to: 1
  3767                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3768  010706  D8BE               	call	PL348	;call to abstracted procedure
  3769  010708  D001               	goto	l11574
  3770  01070A                     l11572:
  3771                           
  3772                           ; BSR set to: 1
  3773  01070A  2BFC               	incf	terminal_task@i& (0+255),f,b
  3774  01070C                     l11574:
  3775                           
  3776                           ; BSR set to: 1
  3777  01070C  D892               	call	PL136	;call to abstracted procedure
  3778  01070E  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3779  010712  6FE9               	movwf	??_terminal_task& (0+255),b
  3780  010714  0E44               	movlw	low terminal_task@op1
  3781  010716  D8A7               	call	PL232	;call to abstracted procedure
  3782  010718  0E02               	movlw	high terminal_task@op1
  3783  01071A  D8AA               	call	PL242	;call to abstracted procedure
  3784  01071C  E1F6               	bnz	l11572
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;My_terminal.c: 32: op1[i] = '\0';
  3788  01071E  0E44               	movlw	low terminal_task@op1
  3789  010720  25FC               	addwf	terminal_task@i& (0+255),w,b
  3790  010722  6ED9               	movwf	fsr2l,c
  3791  010724  6ADA               	clrf	fsr2h,c
  3792  010726  0E02               	movlw	high terminal_task@op1
  3793                           
  3794                           ; BSR set to: 1
  3795                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3796  010728  D8AD               	call	PL348	;call to abstracted procedure
  3797  01072A  D001               	goto	l11582
  3798  01072C                     l11580:
  3799                           
  3800                           ; BSR set to: 1
  3801  01072C  2BFC               	incf	terminal_task@i& (0+255),f,b
  3802  01072E                     l11582:
  3803                           
  3804                           ; BSR set to: 1
  3805  01072E  D881               	call	PL136	;call to abstracted procedure
  3806  010730  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3807  010734  6FE9               	movwf	??_terminal_task& (0+255),b
  3808  010736  0E5D               	movlw	low terminal_task@op2
  3809  010738  D896               	call	PL232	;call to abstracted procedure
  3810  01073A  0E02               	movlw	high terminal_task@op2
  3811  01073C  D899               	call	PL242	;call to abstracted procedure
  3812  01073E  E1F6               	bnz	l11580
  3813                           
  3814                           ; BSR set to: 1
  3815                           ;My_terminal.c: 34: op2[i] = '\0';
  3816  010740  0E5D               	movlw	low terminal_task@op2
  3817  010742  25FC               	addwf	terminal_task@i& (0+255),w,b
  3818  010744  6ED9               	movwf	fsr2l,c
  3819  010746  6ADA               	clrf	fsr2h,c
  3820  010748  0E02               	movlw	high terminal_task@op2
  3821                           
  3822                           ; BSR set to: 1
  3823                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3824  01074A  D89C               	call	PL348	;call to abstracted procedure
  3825  01074C  D001               	goto	l11590
  3826  01074E                     l11588:
  3827                           
  3828                           ; BSR set to: 1
  3829  01074E  2BFC               	incf	terminal_task@i& (0+255),f,b
  3830  010750                     l11590:
  3831                           
  3832                           ; BSR set to: 1
  3833  010750  D870               	call	PL136	;call to abstracted procedure
  3834  010752  EC4F  F097         	call	_ringbuf_pop	;wreg free
  3835  010756  6FE9               	movwf	??_terminal_task& (0+255),b
  3836  010758  0E76               	movlw	low terminal_task@op3
  3837  01075A  D885               	call	PL232	;call to abstracted procedure
  3838  01075C  0E02               	movlw	high terminal_task@op3
  3839  01075E  D888               	call	PL242	;call to abstracted procedure
  3840  010760  E1F6               	bnz	l11588
  3841                           
  3842                           ; BSR set to: 1
  3843                           ;My_terminal.c: 36: op3[i] = '\0';
  3844  010762  0E76               	movlw	low terminal_task@op3
  3845  010764  25FC               	addwf	terminal_task@i& (0+255),w,b
  3846  010766  6ED9               	movwf	fsr2l,c
  3847  010768  6ADA               	clrf	fsr2h,c
  3848  01076A  0E02               	movlw	high terminal_task@op3
  3849  01076C  22DA               	addwfc	fsr2h,f,c
  3850  01076E  6ADF               	clrf	indf2,c
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3854  010770  C0E5  F0DA         	movff	terminal_task@tx,terminal_operation@tx
  3855  010774  C0E6  F0DB         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3856  010778  0E2B               	movlw	low terminal_task@op0
  3857  01077A  0100               	movlb	0	; () banked
  3858  01077C  6FDC               	movwf	terminal_operation@op0& (0+255),b
  3859  01077E  0E02               	movlw	high terminal_task@op0
  3860  010780  6FDD               	movwf	(terminal_operation@op0+1)& (0+255),b
  3861  010782  0E44               	movlw	low terminal_task@op1
  3862  010784  6FDE               	movwf	terminal_operation@op1& (0+255),b
  3863  010786  0E02               	movlw	high terminal_task@op1
  3864  010788  6FDF               	movwf	(terminal_operation@op1+1)& (0+255),b
  3865  01078A  0E5D               	movlw	low terminal_task@op2
  3866  01078C  6FE0               	movwf	terminal_operation@op2& (0+255),b
  3867  01078E  0E02               	movlw	high terminal_task@op2
  3868  010790  6FE1               	movwf	(terminal_operation@op2+1)& (0+255),b
  3869  010792  0E76               	movlw	low terminal_task@op3
  3870  010794  6FE2               	movwf	terminal_operation@op3& (0+255),b
  3871  010796  0E02               	movlw	high terminal_task@op3
  3872  010798  6FE3               	movwf	(terminal_operation@op3+1)& (0+255),b
  3873  01079A  EF6E  F085         	goto	_terminal_operation	;wreg free
  3874  01079E                     l11596:
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3878  01079E  D858               	call	PL202	;call to abstracted procedure
  3879  0107A0  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
  3880  0107A2  ECC5  F093         	call	_ringbuf_put	;wreg free
  3881                           
  3882                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3883  0107A6  D85A               	call	PL224	;call to abstracted procedure
  3884  0107A8  0E20               	movlw	32
  3885  0107AA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3886  0107AC  EFC5  F093         	goto	_ringbuf_put	;wreg free
  3887  0107B0                     l11598:
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3891  0107B0  0E8A               	movlw	low terminal_task@command
  3892  0107B2  0100               	movlb	0	; () banked
  3893  0107B4  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3894  0107B6  0E01               	movlw	high terminal_task@command
  3895  0107B8  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3896  0107BA  EC65  F09C         	call	_ringbuf_backspace	;wreg free
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3900  0107BE  D83F               	call	PL182	;call to abstracted procedure
  3901  0107C0  EFD3  F09D         	goto	l9736	;wreg free
  3902  0107C4                     l1173:
  3903                           
  3904                           ; BSR set to: 1
  3905                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3906  0107C4  6BFA               	clrf	terminal_task@i_4590& (0+255),b
  3907  0107C6  D005               	goto	l11606
  3908  0107C8                     l11602:
  3909                           
  3910                           ; BSR set to: 0
  3911  0107C8  D83A               	call	PL182	;call to abstracted procedure
  3912  0107CA  ECC0  F09D         	call	_ringbuf_put_str	;wreg free
  3913  0107CE  0101               	movlb	1	; () banked
  3914  0107D0  2BFA               	incf	terminal_task@i_4590& (0+255),f,b
  3915  0107D2                     l11606:
  3916                           
  3917                           ; BSR set to: 1
  3918  0107D2  0E8A               	movlw	low terminal_task@command
  3919  0107D4  0100               	movlb	0	; () banked
  3920  0107D6  D85A               	call	PL350	;call to abstracted procedure
  3921  0107D8  ECDE  F097         	call	_ringbuf_num	;wreg free
  3922  0107DC  0101               	movlb	1	; () banked
  3923  0107DE  51FA               	movf	terminal_task@i_4590& (0+255),w,b
  3924  0107E0  0100               	movlb	0	; () banked
  3925  0107E2  6FE9               	movwf	??_terminal_task& (0+255),b
  3926  0107E4  6BEA               	clrf	(??_terminal_task+1)& (0+255),b
  3927  0107E6  5160               	movf	?_ringbuf_num& (0+255),w,b
  3928  0107E8  5DE9               	subwf	??_terminal_task& (0+255),w,b
  3929  0107EA  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3930  0107EC  59EA               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3931  0107EE  E3EC               	bnc	l11602
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3935  0107F0  0E8A               	movlw	low terminal_task@command
  3936  0107F2  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3937  0107F4  0E01               	movlw	high terminal_task@command
  3938  0107F6  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3939  0107F8  EFA6  F0A1         	goto	_ringbuf_delete	;wreg free
  3940  0107FC                     l11610:
  3941                           
  3942                           ; BSR set to: 1
  3943                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3944  0107FC  0E1F               	movlw	31
  3945  0107FE  65FB               	cpfsgt	terminal_task@ascii& (0+255),b
  3946  010800  0C1F               	retlw	31
  3947                           
  3948                           ; BSR set to: 1
  3949  010802  0E7F               	movlw	127
  3950  010804  61FB               	cpfslt	terminal_task@ascii& (0+255),b
  3951  010806  0C7F               	retlw	127
  3952                           
  3953                           ; BSR set to: 1
  3954                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  3955  010808  D823               	call	PL202	;call to abstracted procedure
  3956  01080A  C1FB  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  3957  01080E  ECC5  F093         	call	_ringbuf_put	;wreg free
  3958                           
  3959                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  3960  010812  D824               	call	PL224	;call to abstracted procedure
  3961  010814  C1FB  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  3962  010818  EFC5  F093         	goto	_ringbuf_put	;wreg free
  3963  01081C                     l11618:
  3964                           
  3965                           ; BSR set to: 1
  3966  01081C  51FB               	movf	terminal_task@ascii& (0+255),w,b
  3967                           
  3968                           ; Switch size 1, requested type "space"
  3969                           ; Number of cases is 4, Range of values is 8 to 127
  3970                           ; switch strategies available:
  3971                           ; Name         Instructions Cycles
  3972                           ; simple_byte           13     7 (average)
  3973                           ;	Chosen strategy is simple_byte
  3974  01081E  0A08               	xorlw	8	; case 8
  3975  010820  E0C7               	bz	l11598
  3976  010822  0A05               	xorlw	5	; case 13
  3977  010824  E101 D735          	bz	l11560
  3978  010828  0A2D               	xorlw	45	; case 32
  3979  01082A  E0B9               	bz	l11596
  3980  01082C  0A5F               	xorlw	95	; case 127
  3981  01082E  E0CA               	bz	l1173
  3982  010830  D7E5               	goto	l11610
  3983  010832                     __end_of_terminal_task:
  3984                           	opt stack 0
  3985  010832                     PL136:
  3986                           	opt stack 11
  3987  010832  0E8A               	movlw	low terminal_task@command
  3988  010834  0100               	movlb	0	; () banked
  3989  010836  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3990  010838  0E01               	movlw	high terminal_task@command
  3991  01083A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3992  01083C  0012               	return	
  3993  01083E                     __end_ofPL136:
  3994                           	opt stack 0
  3995  01083E                     PL182:
  3996                           	opt stack 11
  3997  01083E  C0E5  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3998  010842  C0E6  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3999  010846  0EE3               	movlw	low STR_19
  4000  010848  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4001  01084A  0EFF               	movlw	high STR_19
  4002  01084C  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4003  01084E  0012               	return	
  4004  010850                     __end_ofPL182:
  4005                           	opt stack 0
  4006  010850                     PL202:
  4007                           	opt stack 11
  4008  010850  0E8A               	movlw	low terminal_task@command
  4009  010852  0100               	movlb	0	; () banked
  4010  010854  6F68               	movwf	ringbuf_put@rb& (0+255),b
  4011  010856  0E01               	movlw	high terminal_task@command
  4012  010858  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4013  01085A  0012               	return	
  4014  01085C                     __end_ofPL202:
  4015                           	opt stack 0
  4016  01085C                     PL224:
  4017                           	opt stack 11
  4018  01085C  C0E5  F068         	movff	terminal_task@tx,ringbuf_put@rb
  4019  010860  C0E6  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  4020  010864  0012               	return	
  4021  010866                     __end_ofPL224:
  4022                           	opt stack 0
  4023  010866                     PL232:
  4024                           	opt stack 11
  4025  010866  0101               	movlb	1	; () banked
  4026  010868  25FC               	addwf	terminal_task@i& (0+255),w,b
  4027  01086A  6ED9               	movwf	fsr2l,c
  4028  01086C  6ADA               	clrf	fsr2h,c
  4029  01086E  0012               	return	
  4030  010870                     __end_ofPL232:
  4031                           	opt stack 0
  4032  010870                     PL242:
  4033                           	opt stack 11
  4034  010870  22DA               	addwfc	fsr2h,f,c
  4035  010872  C0E9  FFDF         	movff	??_terminal_task,indf2
  4036  010876  50DF               	movf	indf2,w,c
  4037  010878  0012               	return	
  4038  01087A                     __end_ofPL242:
  4039                           	opt stack 0
  4040  01087A                     PL342:
  4041                           	opt stack 14
  4042  01087A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4043  01087C  6B65               	clrf	(ringbuf_init@bufsize+1)& (0+255),b
  4044  01087E  0E64               	movlw	100
  4045  010880  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4046  010882  0C64               	retlw	100
  4047  010884                     __end_ofPL342:
  4048                           	opt stack 0
  4049  010884                     PL348:
  4050                           	opt stack 11
  4051  010884  22DA               	addwfc	fsr2h,f,c
  4052  010886  6ADF               	clrf	indf2,c
  4053  010888  6BFC               	clrf	terminal_task@i& (0+255),b
  4054  01088A  0012               	return	
  4055  01088C                     __end_ofPL348:
  4056                           	opt stack 0
  4057  01088C                     PL350:
  4058                           	opt stack 11
  4059  01088C  6F60               	movwf	ringbuf_num@rb& (0+255),b
  4060  01088E  0E01               	movlw	high terminal_task@command
  4061  010890  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  4062  010892  0012               	return	
  4063  010894                     __end_ofPL350:
  4064                           	opt stack 0
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           prodh	equ	0xFF4
  4070                           prodl	equ	0xFF3
  4071                           intcon	equ	0xFF2
  4072                           intcon2	equ	0xFF1
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           indf1	equ	0xFE7
  4076                           postinc1	equ	0xFE6
  4077                           postdec1	equ	0xFE5
  4078                           fsr1h	equ	0xFE2
  4079                           fsr1l	equ	0xFE1
  4080                           indf2	equ	0xFDF
  4081                           postinc2	equ	0xFDE
  4082                           postdec2	equ	0xFDD
  4083                           plusw2	equ	0xFDB
  4084                           fsr2h	equ	0xFDA
  4085                           fsr2l	equ	0xFD9
  4086                           status	equ	0xFD8
  4087                           
  4088 ;; *************** function _terminal_operation *****************
  4089 ;; Defined at:
  4090 ;;		line 200 in file "ChargeStation_task.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  tx              2  122[BANK0 ] PTR struct ringbuf
  4093 ;;		 -> usb_tx(8), 
  4094 ;;  op0             2  124[BANK0 ] PTR unsigned char 
  4095 ;;		 -> terminal_task@op0(25), 
  4096 ;;  op1             2  126[BANK0 ] PTR unsigned char 
  4097 ;;		 -> terminal_task@op1(25), 
  4098 ;;  op2             2  128[BANK0 ] PTR unsigned char 
  4099 ;;		 -> terminal_task@op2(25), 
  4100 ;;  op3             2  130[BANK0 ] PTR unsigned char 
  4101 ;;		 -> terminal_task@op3(25), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  percentage      1  132[BANK0 ] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : F/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4113 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;Total ram usage:       11 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:   18
  4120 ;; This function calls:
  4121 ;;		_atoi
  4122 ;;		_bootload
  4123 ;;		_ctmu_set_ratio
  4124 ;;		_ringbuf_put_str
  4125 ;;		_strcmp
  4126 ;;		_terminal_time
  4127 ;; This function is called by:
  4128 ;;		_terminal_task
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text2
  4133  010ADC                     __ptext2:
  4134                           	opt stack 0
  4135  010ADC                     _terminal_operation:
  4136                           	opt stack 0
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4140                           
  4141                           ;incstack = 0
  4142  010ADC  D8C9               	call	PL100	;call to abstracted procedure
  4143  010ADE  0ECF               	movlw	low STR_51
  4144  010AE0  6F62               	movwf	strcmp@s2& (0+255),b
  4145  010AE2  0EFF               	movlw	high STR_51
  4146  010AE4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4147  010AE6  EC34  F09F         	call	_strcmp	;wreg free
  4148  010AEA  5160               	movf	?_strcmp& (0+255),w,b
  4149  010AEC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4150  010AEE  E00A               	bz	l11146
  4151                           
  4152                           ; BSR set to: 0
  4153  010AF0  D8BF               	call	PL100	;call to abstracted procedure
  4154  010AF2  0EF1               	movlw	low STR_52
  4155  010AF4  6F62               	movwf	strcmp@s2& (0+255),b
  4156  010AF6  0EFF               	movlw	high STR_52
  4157  010AF8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4158  010AFA  EC34  F09F         	call	_strcmp	;wreg free
  4159  010AFE  5160               	movf	?_strcmp& (0+255),w,b
  4160  010B00  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4161  010B02  E107               	bnz	l11148
  4162  010B04                     l11146:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4166                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4167                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4168                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4169                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4170                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4171                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4172                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4173  010B04  D8BF               	call	PL230	;call to abstracted procedure
  4174  010B06  0EE6               	movlw	low STR_53
  4175  010B08  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4176  010B0A  0EFB               	movlw	high STR_53
  4177  010B0C  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4178  010B0E  ECC0  F09D         	call	_ringbuf_put_str	;wreg free
  4179  010B12                     l11148:
  4180                           
  4181                           ;ChargeStation_task.c: 216: }
  4182                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4183  010B12  C0DA  F0D1         	movff	terminal_operation@tx,terminal_time@tx
  4184  010B16  C0DB  F0D2         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4185  010B1A  C0DC  F0D3         	movff	terminal_operation@op0,terminal_time@op0
  4186  010B1E  C0DD  F0D4         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4187  010B22  C0DE  F0D5         	movff	terminal_operation@op1,terminal_time@op1
  4188  010B26  C0DF  F0D6         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4189  010B2A  C0E0  F0D7         	movff	terminal_operation@op2,terminal_time@op2
  4190  010B2E  C0E1  F0D8         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4191  010B32  EC4A  F084         	call	_terminal_time	;wreg free
  4192                           
  4193                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4194  010B36  D89C               	call	PL100	;call to abstracted procedure
  4195  010B38  0E67               	movlw	low STR_54
  4196  010B3A  0100               	movlb	0	; () banked
  4197  010B3C  6F62               	movwf	strcmp@s2& (0+255),b
  4198  010B3E  0EFF               	movlw	high STR_54
  4199  010B40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4200  010B42  EC34  F09F         	call	_strcmp	;wreg free
  4201  010B46  5160               	movf	?_strcmp& (0+255),w,b
  4202  010B48  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4203  010B4A  E101               	bnz	l11154
  4204                           
  4205                           ; BSR set to: 0
  4206  010B4C  00FF               	reset		;# 
  4207  010B4E                     l11154:
  4208                           
  4209                           ;ChargeStation_task.c: 220: }
  4210                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4211  010B4E  D890               	call	PL100	;call to abstracted procedure
  4212  010B50  0E70               	movlw	low STR_55
  4213  010B52  0100               	movlb	0	; () banked
  4214  010B54  6F62               	movwf	strcmp@s2& (0+255),b
  4215  010B56  0EFF               	movlw	high STR_55
  4216  010B58  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4217  010B5A  EC34  F09F         	call	_strcmp	;wreg free
  4218  010B5E  5160               	movf	?_strcmp& (0+255),w,b
  4219  010B60  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4220  010B62  E102               	bnz	l11158
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;ChargeStation_task.c: 222: bootload();
  4224  010B64  EC86  F0A0         	call	_bootload	;wreg free
  4225  010B68                     l11158:
  4226                           
  4227                           ;ChargeStation_task.c: 223: }
  4228                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4229  010B68  D883               	call	PL100	;call to abstracted procedure
  4230  010B6A  0EEB               	movlw	low STR_56
  4231  010B6C  0100               	movlb	0	; () banked
  4232  010B6E  6F62               	movwf	strcmp@s2& (0+255),b
  4233  010B70  0EFF               	movlw	high STR_56
  4234  010B72  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4235  010B74  EC34  F09F         	call	_strcmp	;wreg free
  4236  010B78  5160               	movf	?_strcmp& (0+255),w,b
  4237  010B7A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4238  010B7C  E00A               	bz	l11162
  4239                           
  4240                           ; BSR set to: 0
  4241  010B7E  D878               	call	PL100	;call to abstracted procedure
  4242  010B80  0E25               	movlw	low STR_57
  4243  010B82  6F62               	movwf	strcmp@s2& (0+255),b
  4244  010B84  0EFF               	movlw	high STR_57
  4245  010B86  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4246  010B88  EC34  F09F         	call	_strcmp	;wreg free
  4247  010B8C  5160               	movf	?_strcmp& (0+255),w,b
  4248  010B8E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4249  010B90  E103               	bnz	l11164
  4250  010B92                     l11162:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4254  010B92  0E01               	movlw	1
  4255  010B94  0101               	movlb	1	; () banked
  4256  010B96  6F33               	movwf	_terminal_data_out& (0+255),b
  4257  010B98                     l11164:
  4258                           
  4259                           ;ChargeStation_task.c: 226: }
  4260                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4261  010B98  D86B               	call	PL100	;call to abstracted procedure
  4262  010B9A  0EE6               	movlw	low (STR_19+3)
  4263  010B9C  0100               	movlb	0	; () banked
  4264  010B9E  6F62               	movwf	strcmp@s2& (0+255),b
  4265  010BA0  0EFF               	movlw	high (STR_19+3)
  4266  010BA2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4267  010BA4  EC34  F09F         	call	_strcmp	;wreg free
  4268  010BA8  5160               	movf	?_strcmp& (0+255),w,b
  4269  010BAA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4270  010BAC  E102               	bnz	l11168
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4274  010BAE  0101               	movlb	1	; () banked
  4275  010BB0  6B33               	clrf	_terminal_data_out& (0+255),b
  4276  010BB2                     l11168:
  4277                           
  4278                           ;ChargeStation_task.c: 229: }
  4279                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4280  010BB2  D85E               	call	PL100	;call to abstracted procedure
  4281  010BB4  0EBD               	movlw	low STR_59
  4282  010BB6  0100               	movlb	0	; () banked
  4283  010BB8  6F62               	movwf	strcmp@s2& (0+255),b
  4284  010BBA  0EFF               	movlw	high STR_59
  4285  010BBC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4286  010BBE  EC34  F09F         	call	_strcmp	;wreg free
  4287  010BC2  5160               	movf	?_strcmp& (0+255),w,b
  4288  010BC4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4289  010BC6  A4D8               	btfss	status,2,c
  4290  010BC8  0012               	return	
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4294  010BCA  D857               	call	PL212	;call to abstracted procedure
  4295  010BCC  0E48               	movlw	low STR_60
  4296  010BCE  6F62               	movwf	strcmp@s2& (0+255),b
  4297  010BD0  0EFF               	movlw	high STR_60
  4298  010BD2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4299  010BD4  EC34  F09F         	call	_strcmp	;wreg free
  4300  010BD8  5160               	movf	?_strcmp& (0+255),w,b
  4301  010BDA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4302  010BDC  E00A               	bz	l11174
  4303                           
  4304                           ; BSR set to: 0
  4305  010BDE  D84D               	call	PL212	;call to abstracted procedure
  4306  010BE0  0ED4               	movlw	low STR_61
  4307  010BE2  6F62               	movwf	strcmp@s2& (0+255),b
  4308  010BE4  0EFF               	movlw	high STR_61
  4309  010BE6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4310  010BE8  EC34  F09F         	call	_strcmp	;wreg free
  4311  010BEC  5160               	movf	?_strcmp& (0+255),w,b
  4312  010BEE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4313  010BF0  E11F               	bnz	l11186
  4314  010BF2                     l11174:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4318  010BF2  C0E0  F07C         	movff	terminal_operation@op2,atoi@s
  4319  010BF6  C0E1  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4320  010BFA  ECB1  F094         	call	_atoi	;wreg free
  4321  010BFE  517C               	movf	?_atoi& (0+255),w,b
  4322  010C00  6FE4               	movwf	terminal_operation@percentage& (0+255),b
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4326  010C02  0E65               	movlw	101
  4327  010C04  61E4               	cpfslt	terminal_operation@percentage& (0+255),b
  4328  010C06  D00D               	goto	l11184
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4332  010C08  C0E4  F021         	movff	terminal_operation@percentage,_ctmu_ratio
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4336  010C0C  5021               	movf	_ctmu_ratio,w,c
  4337  010C0E  EC25  F093         	call	_ctmu_set_ratio
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4341  010C12  D838               	call	PL230	;call to abstracted procedure
  4342  010C14  0E1D               	movlw	low STR_62
  4343  010C16  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4344  010C18  0EFE               	movlw	high STR_62
  4345  010C1A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4346  010C1C  ECC0  F09D         	call	_ringbuf_put_str	;wreg free
  4347                           
  4348                           ;ChargeStation_task.c: 237: } else {
  4349  010C20  D007               	goto	l11186
  4350  010C22                     l11184:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4354  010C22  D830               	call	PL230	;call to abstracted procedure
  4355  010C24  0EBD               	movlw	low STR_63
  4356  010C26  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4357  010C28  0EFD               	movlw	high STR_63
  4358  010C2A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4359  010C2C  ECC0  F09D         	call	_ringbuf_put_str	;wreg free
  4360  010C30                     l11186:
  4361                           
  4362                           ;ChargeStation_task.c: 239: }
  4363                           ;ChargeStation_task.c: 240: }
  4364                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4365  010C30  D824               	call	PL212	;call to abstracted procedure
  4366  010C32  0EC3               	movlw	low STR_64
  4367  010C34  0100               	movlb	0	; () banked
  4368  010C36  6F62               	movwf	strcmp@s2& (0+255),b
  4369  010C38  0EFF               	movlw	high STR_64
  4370  010C3A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4371  010C3C  EC34  F09F         	call	_strcmp	;wreg free
  4372  010C40  5160               	movf	?_strcmp& (0+255),w,b
  4373  010C42  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4374  010C44  E00B               	bz	l11190
  4375                           
  4376                           ; BSR set to: 0
  4377  010C46  D819               	call	PL212	;call to abstracted procedure
  4378  010C48  0EDC               	movlw	low (STR_30+3)
  4379  010C4A  6F62               	movwf	strcmp@s2& (0+255),b
  4380  010C4C  0EFF               	movlw	high (STR_30+3)
  4381  010C4E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4382  010C50  EC34  F09F         	call	_strcmp	;wreg free
  4383  010C54  5160               	movf	?_strcmp& (0+255),w,b
  4384  010C56  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4385  010C58  A4D8               	btfss	status,2,c
  4386  010C5A  0012               	return	
  4387  010C5C                     l11190:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4391  010C5C  5021               	movf	_ctmu_ratio,w,c
  4392  010C5E  EC25  F093         	call	_ctmu_set_ratio
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4396  010C62  D810               	call	PL230	;call to abstracted procedure
  4397  010C64  0E4D               	movlw	low STR_66
  4398  010C66  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4399  010C68  0EFE               	movlw	high STR_66
  4400  010C6A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4401  010C6C  EFD3  F09D         	goto	l9736	;wreg free
  4402  010C70                     __end_of_terminal_operation:
  4403                           	opt stack 0
  4404  010C70                     PL100:
  4405                           	opt stack 11
  4406  010C70  C0DC  F060         	movff	terminal_operation@op0,strcmp@s1
  4407  010C74  C0DD  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4408  010C78  0012               	return	
  4409  010C7A                     __end_ofPL100:
  4410                           	opt stack 0
  4411  010C7A                     PL212:
  4412                           	opt stack 11
  4413  010C7A  C0DE  F060         	movff	terminal_operation@op1,strcmp@s1
  4414  010C7E  C0DF  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4415  010C82  0012               	return	
  4416  010C84                     __end_ofPL212:
  4417                           	opt stack 0
  4418  010C84                     PL230:
  4419                           	opt stack 11
  4420  010C84  C0DA  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4421  010C88  C0DB  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4422  010C8C  0012               	return	
  4423  010C8E                     __end_ofPL230:
  4424                           	opt stack 0
  4425                           tblptru	equ	0xFF8
  4426                           tblptrh	equ	0xFF7
  4427                           tblptrl	equ	0xFF6
  4428                           tablat	equ	0xFF5
  4429                           prodh	equ	0xFF4
  4430                           prodl	equ	0xFF3
  4431                           intcon	equ	0xFF2
  4432                           intcon2	equ	0xFF1
  4433                           postinc0	equ	0xFEE
  4434                           wreg	equ	0xFE8
  4435                           indf1	equ	0xFE7
  4436                           postinc1	equ	0xFE6
  4437                           postdec1	equ	0xFE5
  4438                           fsr1h	equ	0xFE2
  4439                           fsr1l	equ	0xFE1
  4440                           indf2	equ	0xFDF
  4441                           postinc2	equ	0xFDE
  4442                           postdec2	equ	0xFDD
  4443                           plusw2	equ	0xFDB
  4444                           fsr2h	equ	0xFDA
  4445                           fsr2l	equ	0xFD9
  4446                           status	equ	0xFD8
  4447                           
  4448 ;; *************** function _terminal_time *****************
  4449 ;; Defined at:
  4450 ;;		line 93 in file "../My_library/My_terminal.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  tx              2  113[BANK0 ] PTR struct ringbuf
  4453 ;;		 -> usb_tx(8), 
  4454 ;;  op0             2  115[BANK0 ] PTR unsigned char 
  4455 ;;		 -> terminal_task@op0(25), 
  4456 ;;  op1             2  117[BANK0 ] PTR unsigned char 
  4457 ;;		 -> terminal_task@op1(25), 
  4458 ;;  op2             2  119[BANK0 ] PTR unsigned char 
  4459 ;;		 -> terminal_task@op2(25), 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;		None               void
  4464 ;; Registers used:
  4465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4471 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4474 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4475 ;;Total ram usage:        9 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:   17
  4478 ;; This function calls:
  4479 ;;		_atoi
  4480 ;;		_month_length
  4481 ;;		_print_time
  4482 ;;		_strcmp
  4483 ;;		_terminal_at_hand
  4484 ;; This function is called by:
  4485 ;;		_terminal_operation
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text3
  4490  010894                     __ptext3:
  4491                           	opt stack 0
  4492  010894                     _terminal_time:
  4493                           	opt stack 0
  4494                           
  4495                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4496                           
  4497                           ;incstack = 0
  4498  010894  D91E               	call	PL226	;call to abstracted procedure
  4499  010896  0E53               	movlw	low STR_25
  4500  010898  0100               	movlb	0	; () banked
  4501  01089A  6F62               	movwf	strcmp@s2& (0+255),b
  4502  01089C  0EFF               	movlw	high STR_25
  4503  01089E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4504  0108A0  EC34  F09F         	call	_strcmp	;wreg free
  4505  0108A4  5160               	movf	?_strcmp& (0+255),w,b
  4506  0108A6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4507  0108A8  E00A               	bz	l10582
  4508                           
  4509                           ; BSR set to: 0
  4510  0108AA  D913               	call	PL226	;call to abstracted procedure
  4511  0108AC  0EEF               	movlw	low (STR_27+1)
  4512  0108AE  6F62               	movwf	strcmp@s2& (0+255),b
  4513  0108B0  0EFF               	movlw	high (STR_27+1)
  4514  0108B2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4515  0108B4  EC34  F09F         	call	_strcmp	;wreg free
  4516  0108B8  5160               	movf	?_strcmp& (0+255),w,b
  4517  0108BA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4518  0108BC  E106               	bnz	l10584
  4519  0108BE                     l10582:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;My_terminal.c: 95: print_time(tx);
  4523  0108BE  C0D1  F0AA         	movff	terminal_time@tx,print_time@tx
  4524  0108C2  C0D2  F0AB         	movff	terminal_time@tx+1,print_time@tx+1
  4525  0108C6  EC1E  F09D         	call	_print_time	;wreg free
  4526  0108CA                     l10584:
  4527                           
  4528                           ;My_terminal.c: 96: }
  4529                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4530  0108CA  D903               	call	PL226	;call to abstracted procedure
  4531  0108CC  0EEE               	movlw	low STR_27
  4532  0108CE  0100               	movlb	0	; () banked
  4533  0108D0  6F62               	movwf	strcmp@s2& (0+255),b
  4534  0108D2  0EFF               	movlw	high STR_27
  4535  0108D4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4536  0108D6  EC34  F09F         	call	_strcmp	;wreg free
  4537  0108DA  5160               	movf	?_strcmp& (0+255),w,b
  4538  0108DC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4539  0108DE  E00B               	bz	l10588
  4540                           
  4541                           ; BSR set to: 0
  4542  0108E0  D8F8               	call	PL226	;call to abstracted procedure
  4543  0108E2  0E31               	movlw	low STR_28
  4544  0108E4  6F62               	movwf	strcmp@s2& (0+255),b
  4545  0108E6  0EFF               	movlw	high STR_28
  4546  0108E8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4547  0108EA  EC34  F09F         	call	_strcmp	;wreg free
  4548  0108EE  5160               	movf	?_strcmp& (0+255),w,b
  4549  0108F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4550  0108F2  A4D8               	btfss	status,2,c
  4551  0108F4  0012               	return	
  4552  0108F6                     l10588:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4556  0108F6  D8DA               	call	PL64	;call to abstracted procedure
  4557  0108F8  0EE9               	movlw	low (STR_34+2)
  4558  0108FA  6F62               	movwf	strcmp@s2& (0+255),b
  4559  0108FC  0EFF               	movlw	high (STR_34+2)
  4560  0108FE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4561  010900  EC34  F09F         	call	_strcmp	;wreg free
  4562  010904  5160               	movf	?_strcmp& (0+255),w,b
  4563  010906  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4564  010908  E00A               	bz	l10592
  4565                           
  4566                           ; BSR set to: 0
  4567  01090A  D8D0               	call	PL64	;call to abstracted procedure
  4568  01090C  0ED9               	movlw	low STR_30
  4569  01090E  6F62               	movwf	strcmp@s2& (0+255),b
  4570  010910  0EFF               	movlw	high STR_30
  4571  010912  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4572  010914  EC34  F09F         	call	_strcmp	;wreg free
  4573  010918  5160               	movf	?_strcmp& (0+255),w,b
  4574  01091A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4575  01091C  E10E               	bnz	l10594
  4576  01091E                     l10592:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4580  01091E  D8D1               	call	PL132	;call to abstracted procedure
  4581  010920  0E99               	movlw	low (_now+10)
  4582  010922  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4583  010924  0E02               	movlw	high (_now+10)
  4584  010926  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4585  010928  6BCE               	clrf	terminal_at_hand@min& (0+255),b
  4586  01092A  0E63               	movlw	99
  4587  01092C  D8C4               	call	PL106	;call to abstracted procedure
  4588  01092E  ECB1  F094         	call	_atoi	;wreg free
  4589  010932  517C               	movf	?_atoi& (0+255),w,b
  4590  010934  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4591  010936  EC0C  F09E         	call	_terminal_at_hand	;wreg free
  4592  01093A                     l10594:
  4593                           
  4594                           ;My_terminal.c: 100: }
  4595                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4596  01093A  D8B8               	call	PL64	;call to abstracted procedure
  4597  01093C  0EF3               	movlw	low STR_31
  4598  01093E  0100               	movlb	0	; () banked
  4599  010940  6F62               	movwf	strcmp@s2& (0+255),b
  4600  010942  0EFF               	movlw	high STR_31
  4601  010944  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4602  010946  EC34  F09F         	call	_strcmp	;wreg free
  4603  01094A  5160               	movf	?_strcmp& (0+255),w,b
  4604  01094C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4605  01094E  E00A               	bz	l10598
  4606                           
  4607                           ; BSR set to: 0
  4608  010950  D8AD               	call	PL64	;call to abstracted procedure
  4609  010952  0EC9               	movlw	low STR_32
  4610  010954  6F62               	movwf	strcmp@s2& (0+255),b
  4611  010956  0EFF               	movlw	high STR_32
  4612  010958  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4613  01095A  EC34  F09F         	call	_strcmp	;wreg free
  4614  01095E  5160               	movf	?_strcmp& (0+255),w,b
  4615  010960  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4616  010962  E10F               	bnz	l10600
  4617  010964                     l10598:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4621  010964  D8AE               	call	PL132	;call to abstracted procedure
  4622  010966  0E98               	movlw	low (_now+9)
  4623  010968  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4624  01096A  0E02               	movlw	high (_now+9)
  4625  01096C  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4626  01096E  0E01               	movlw	1
  4627  010970  6FCE               	movwf	terminal_at_hand@min& (0+255),b
  4628  010972  0E0C               	movlw	12
  4629  010974  D8A0               	call	PL106	;call to abstracted procedure
  4630  010976  ECB1  F094         	call	_atoi	;wreg free
  4631  01097A  517C               	movf	?_atoi& (0+255),w,b
  4632  01097C  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4633  01097E  EC0C  F09E         	call	_terminal_at_hand	;wreg free
  4634  010982                     l10600:
  4635                           
  4636                           ;My_terminal.c: 103: }
  4637                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4638  010982  D894               	call	PL64	;call to abstracted procedure
  4639  010984  0EFF               	movlw	low (STR_67+30)
  4640  010986  0100               	movlb	0	; () banked
  4641  010988  6F62               	movwf	strcmp@s2& (0+255),b
  4642  01098A  0EFD               	movlw	high (STR_67+30)
  4643  01098C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4644  01098E  EC34  F09F         	call	_strcmp	;wreg free
  4645  010992  5160               	movf	?_strcmp& (0+255),w,b
  4646  010994  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4647  010996  E00A               	bz	l10604
  4648                           
  4649                           ; BSR set to: 0
  4650  010998  D889               	call	PL64	;call to abstracted procedure
  4651  01099A  0EE7               	movlw	low STR_34
  4652  01099C  6F62               	movwf	strcmp@s2& (0+255),b
  4653  01099E  0EFF               	movlw	high STR_34
  4654  0109A0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4655  0109A2  EC34  F09F         	call	_strcmp	;wreg free
  4656  0109A6  5160               	movf	?_strcmp& (0+255),w,b
  4657  0109A8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4658  0109AA  E11A               	bnz	l10608
  4659  0109AC                     l10604:
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4663  0109AC  C298  F066         	movff	_now+9,month_length@month
  4664  0109B0  0102               	movlb	2	; () banked
  4665  0109B2  5199               	movf	(_now+10)& (0+255),w,b
  4666  0109B4  EC3C  F09A         	call	_month_length
  4667  0109B8  6FD9               	movwf	_terminal_time$7070& (0+255),b
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4671  0109BA  D883               	call	PL132	;call to abstracted procedure
  4672  0109BC  0E97               	movlw	low (_now+8)
  4673  0109BE  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4674  0109C0  0E02               	movlw	high (_now+8)
  4675  0109C2  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4676  0109C4  0E01               	movlw	1
  4677  0109C6  6FCE               	movwf	terminal_at_hand@min& (0+255),b
  4678  0109C8  C0D9  F0CF         	movff	_terminal_time$7070,terminal_at_hand@max
  4679  0109CC  C0D7  F07C         	movff	terminal_time@op2,atoi@s
  4680  0109D0  C0D8  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4681  0109D4  ECB1  F094         	call	_atoi	;wreg free
  4682  0109D8  517C               	movf	?_atoi& (0+255),w,b
  4683  0109DA  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4684  0109DC  EC0C  F09E         	call	_terminal_at_hand	;wreg free
  4685  0109E0                     l10608:
  4686                           
  4687                           ;My_terminal.c: 106: }
  4688                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4689  0109E0  D865               	call	PL64	;call to abstracted procedure
  4690  0109E2  0E4B               	movlw	low (STR_68+22)
  4691  0109E4  0100               	movlb	0	; () banked
  4692  0109E6  6F62               	movwf	strcmp@s2& (0+255),b
  4693  0109E8  0EFE               	movlw	high (STR_68+22)
  4694  0109EA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4695  0109EC  EC34  F09F         	call	_strcmp	;wreg free
  4696  0109F0  5160               	movf	?_strcmp& (0+255),w,b
  4697  0109F2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4698  0109F4  E00A               	bz	l10612
  4699                           
  4700                           ; BSR set to: 0
  4701  0109F6  D85A               	call	PL64	;call to abstracted procedure
  4702  0109F8  0EDE               	movlw	low STR_36
  4703  0109FA  6F62               	movwf	strcmp@s2& (0+255),b
  4704  0109FC  0EFF               	movlw	high STR_36
  4705  0109FE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4706  010A00  EC34  F09F         	call	_strcmp	;wreg free
  4707  010A04  5160               	movf	?_strcmp& (0+255),w,b
  4708  010A06  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4709  010A08  E10E               	bnz	l10614
  4710  010A0A                     l10612:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4714  010A0A  D85B               	call	PL132	;call to abstracted procedure
  4715  010A0C  0E95               	movlw	low (_now+6)
  4716  010A0E  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4717  010A10  0E02               	movlw	high (_now+6)
  4718  010A12  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4719  010A14  6BCE               	clrf	terminal_at_hand@min& (0+255),b
  4720  010A16  0E17               	movlw	23
  4721  010A18  D84E               	call	PL106	;call to abstracted procedure
  4722  010A1A  ECB1  F094         	call	_atoi	;wreg free
  4723  010A1E  517C               	movf	?_atoi& (0+255),w,b
  4724  010A20  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4725  010A22  EC0C  F09E         	call	_terminal_at_hand	;wreg free
  4726  010A26                     l10614:
  4727                           
  4728                           ;My_terminal.c: 109: }
  4729                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4730  010A26  D842               	call	PL64	;call to abstracted procedure
  4731  010A28  0EF5               	movlw	low STR_37
  4732  010A2A  0100               	movlb	0	; () banked
  4733  010A2C  6F62               	movwf	strcmp@s2& (0+255),b
  4734  010A2E  0EFF               	movlw	high STR_37
  4735  010A30  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4736  010A32  EC34  F09F         	call	_strcmp	;wreg free
  4737  010A36  5160               	movf	?_strcmp& (0+255),w,b
  4738  010A38  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4739  010A3A  E00A               	bz	l10618
  4740                           
  4741                           ; BSR set to: 0
  4742  010A3C  D837               	call	PL64	;call to abstracted procedure
  4743  010A3E  0E98               	movlw	low STR_38
  4744  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4745  010A42  0EFF               	movlw	high STR_38
  4746  010A44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4747  010A46  EC34  F09F         	call	_strcmp	;wreg free
  4748  010A4A  5160               	movf	?_strcmp& (0+255),w,b
  4749  010A4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4750  010A4E  E10C               	bnz	l10620
  4751  010A50                     l10618:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4755  010A50  D838               	call	PL132	;call to abstracted procedure
  4756  010A52  0E94               	movlw	low (_now+5)
  4757  010A54  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4758  010A56  0E02               	movlw	high (_now+5)
  4759  010A58  D839               	call	PL190	;call to abstracted procedure
  4760  010A5A  D82D               	call	PL106	;call to abstracted procedure
  4761  010A5C  ECB1  F094         	call	_atoi	;wreg free
  4762  010A60  517C               	movf	?_atoi& (0+255),w,b
  4763  010A62  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4764  010A64  EC0C  F09E         	call	_terminal_at_hand	;wreg free
  4765  010A68                     l10620:
  4766                           
  4767                           ;My_terminal.c: 112: }
  4768                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4769  010A68  D821               	call	PL64	;call to abstracted procedure
  4770  010A6A  0EBB               	movlw	low (STR_70+4)
  4771  010A6C  0100               	movlb	0	; () banked
  4772  010A6E  6F62               	movwf	strcmp@s2& (0+255),b
  4773  010A70  0EFF               	movlw	high (STR_70+4)
  4774  010A72  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4775  010A74  EC34  F09F         	call	_strcmp	;wreg free
  4776  010A78  5160               	movf	?_strcmp& (0+255),w,b
  4777  010A7A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4778  010A7C  E00B               	bz	l10624
  4779                           
  4780                           ; BSR set to: 0
  4781  010A7E  D816               	call	PL64	;call to abstracted procedure
  4782  010A80  0E91               	movlw	low STR_40
  4783  010A82  6F62               	movwf	strcmp@s2& (0+255),b
  4784  010A84  0EFF               	movlw	high STR_40
  4785  010A86  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4786  010A88  EC34  F09F         	call	_strcmp	;wreg free
  4787  010A8C  5160               	movf	?_strcmp& (0+255),w,b
  4788  010A8E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4789  010A90  A4D8               	btfss	status,2,c
  4790  010A92  0012               	return	
  4791  010A94                     l10624:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4795  010A94  D816               	call	PL132	;call to abstracted procedure
  4796  010A96  0E93               	movlw	low (_now+4)
  4797  010A98  6FCC               	movwf	terminal_at_hand@hand& (0+255),b
  4798  010A9A  0E02               	movlw	high (_now+4)
  4799  010A9C  D817               	call	PL190	;call to abstracted procedure
  4800  010A9E  D80B               	call	PL106	;call to abstracted procedure
  4801  010AA0  ECB1  F094         	call	_atoi	;wreg free
  4802  010AA4  517C               	movf	?_atoi& (0+255),w,b
  4803  010AA6  6FD0               	movwf	terminal_at_hand@value& (0+255),b
  4804  010AA8  EF0C  F09E         	goto	_terminal_at_hand	;wreg free
  4805  010AAC                     __end_of_terminal_time:
  4806                           	opt stack 0
  4807  010AAC                     PL64:
  4808                           	opt stack 11
  4809  010AAC  C0D5  F060         	movff	terminal_time@op1,strcmp@s1
  4810  010AB0  C0D6  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4811  010AB4  0012               	return	
  4812  010AB6                     __end_ofPL64:
  4813                           	opt stack 0
  4814  010AB6                     PL106:
  4815                           	opt stack 11
  4816  010AB6  6FCF               	movwf	terminal_at_hand@max& (0+255),b
  4817  010AB8  C0D7  F07C         	movff	terminal_time@op2,atoi@s
  4818  010ABC  C0D8  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4819  010AC0  0012               	return	
  4820  010AC2                     __end_ofPL106:
  4821                           	opt stack 0
  4822  010AC2                     PL132:
  4823                           	opt stack 11
  4824  010AC2  C0D1  F0CA         	movff	terminal_time@tx,terminal_at_hand@tx
  4825  010AC6  C0D2  F0CB         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4826  010ACA  0012               	return	
  4827  010ACC                     __end_ofPL132:
  4828                           	opt stack 0
  4829  010ACC                     PL190:
  4830                           	opt stack 11
  4831  010ACC  6FCD               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4832  010ACE  6BCE               	clrf	terminal_at_hand@min& (0+255),b
  4833  010AD0  0C3B               	retlw	59
  4834  010AD2                     __end_ofPL190:
  4835                           	opt stack 0
  4836  010AD2                     PL226:
  4837                           	opt stack 11
  4838  010AD2  C0D3  F060         	movff	terminal_time@op0,strcmp@s1
  4839  010AD6  C0D4  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4840  010ADA  0012               	return	
  4841  010ADC                     __end_ofPL226:
  4842                           	opt stack 0
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           intcon2	equ	0xFF1
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           indf1	equ	0xFE7
  4854                           postinc1	equ	0xFE6
  4855                           postdec1	equ	0xFE5
  4856                           fsr1h	equ	0xFE2
  4857                           fsr1l	equ	0xFE1
  4858                           indf2	equ	0xFDF
  4859                           postinc2	equ	0xFDE
  4860                           postdec2	equ	0xFDD
  4861                           plusw2	equ	0xFDB
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           status	equ	0xFD8
  4865                           
  4866 ;; *************** function _terminal_at_hand *****************
  4867 ;; Defined at:
  4868 ;;		line 82 in file "../My_library/My_terminal.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  tx              2  106[BANK0 ] PTR struct ringbuf
  4871 ;;		 -> usb_tx(8), 
  4872 ;;  hand            2  108[BANK0 ] PTR unsigned char 
  4873 ;;		 -> now(14), 
  4874 ;;  min             1  110[BANK0 ] unsigned char 
  4875 ;;  max             1  111[BANK0 ] unsigned char 
  4876 ;;  value           1  112[BANK0 ] unsigned char 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;		None               void
  4881 ;; Registers used:
  4882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : F/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4888 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4891 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4892 ;;Total ram usage:        7 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:   16
  4895 ;; This function calls:
  4896 ;;		_RTCC_from_caltime
  4897 ;;		_print_time
  4898 ;;		_ringbuf_put_str
  4899 ;; This function is called by:
  4900 ;;		_terminal_time
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text4
  4905  013C18                     __ptext4:
  4906                           	opt stack 0
  4907  013C18                     _terminal_at_hand:
  4908                           	opt stack 11
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4912                           
  4913                           ;incstack = 0
  4914  013C18  51CE               	movf	terminal_at_hand@min& (0+255),w,b
  4915  013C1A  5DD0               	subwf	terminal_at_hand@value& (0+255),w,b
  4916  013C1C  E318               	bnc	l10228
  4917                           
  4918                           ; BSR set to: 0
  4919  013C1E  51D0               	movf	terminal_at_hand@value& (0+255),w,b
  4920  013C20  5DCF               	subwf	terminal_at_hand@max& (0+255),w,b
  4921  013C22  E315               	bnc	l10228
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;My_terminal.c: 84: *hand = value;
  4925  013C24  C0CC  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4926  013C28  C0CD  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4927  013C2C  C0D0  FFDF         	movff	terminal_at_hand@value,indf2
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4931  013C30  0E8F               	movlw	low _now
  4932  013C32  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4933  013C34  0E02               	movlw	high _now
  4934  013C36  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4935  013C38  EC94  F0A1         	call	_RTCC_from_caltime	;wreg free
  4936                           
  4937                           ; BSR set to: 15
  4938                           ;My_terminal.c: 86: time_change_flag = 1;
  4939  013C3C  0E01               	movlw	1
  4940  013C3E  0101               	movlb	1	; () banked
  4941  013C40  6F35               	movwf	_time_change_flag& (0+255),b
  4942                           
  4943                           ; BSR set to: 1
  4944                           ;My_terminal.c: 87: print_time(tx);
  4945  013C42  C0CA  F0AA         	movff	terminal_at_hand@tx,print_time@tx
  4946  013C46  C0CB  F0AB         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4947  013C4A  EF1E  F09D         	goto	_print_time	;wreg free
  4948  013C4E                     l10228:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4952  013C4E  C0CA  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4953  013C52  C0CB  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4954  013C56  0E82               	movlw	low STR_24
  4955  013C58  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4956  013C5A  0EFF               	movlw	high STR_24
  4957  013C5C  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4958  013C5E  EFD3  F09D         	goto	l9736	;wreg free
  4959  013C62                     __end_of_terminal_at_hand:
  4960                           	opt stack 0
  4961                           tblptru	equ	0xFF8
  4962                           tblptrh	equ	0xFF7
  4963                           tblptrl	equ	0xFF6
  4964                           tablat	equ	0xFF5
  4965                           prodh	equ	0xFF4
  4966                           prodl	equ	0xFF3
  4967                           intcon	equ	0xFF2
  4968                           intcon2	equ	0xFF1
  4969                           postinc0	equ	0xFEE
  4970                           wreg	equ	0xFE8
  4971                           indf1	equ	0xFE7
  4972                           postinc1	equ	0xFE6
  4973                           postdec1	equ	0xFE5
  4974                           fsr1h	equ	0xFE2
  4975                           fsr1l	equ	0xFE1
  4976                           indf2	equ	0xFDF
  4977                           postinc2	equ	0xFDE
  4978                           postdec2	equ	0xFDD
  4979                           plusw2	equ	0xFDB
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function _print_time *****************
  4985 ;; Defined at:
  4986 ;;		line 68 in file "../My_library/My_terminal.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  tx              2   74[BANK0 ] PTR struct ringbuf
  4989 ;;		 -> usb_tx(8), 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  str            30   76[BANK0 ] unsigned char [30]
  4992 ;; Return value:  Size  Location     Type
  4993 ;;		None               void
  4994 ;; Registers used:
  4995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : E/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5001 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5004 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;Total ram usage:       32 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:   15
  5008 ;; This function calls:
  5009 ;;		_RTCC_from_RTCC
  5010 ;;		_ringbuf_put_str
  5011 ;;		_sprintf
  5012 ;; This function is called by:
  5013 ;;		_terminal_at_hand
  5014 ;;		_terminal_time
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text5
  5019  013A3C                     __ptext5:
  5020                           	opt stack 0
  5021  013A3C                     _print_time:
  5022                           	opt stack 0
  5023                           
  5024                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5025                           
  5026                           ;incstack = 0
  5027  013A3C  ECBA  F09D         	call	PL206	;call to abstracted procedure
  5028  013A40  EC8C  F0A2         	call	_RTCC_from_RTCC	;wreg free
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;My_terminal.c: 70: char str[30];
  5032                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5033                           ;My_terminal.c: 72: now.YY,
  5034                           ;My_terminal.c: 73: now.MM,
  5035                           ;My_terminal.c: 74: now.DD,
  5036                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5037                           ;My_terminal.c: 76: now.hh,
  5038                           ;My_terminal.c: 77: now.mm,
  5039                           ;My_terminal.c: 78: now.ss);
  5040  013A44  0EAC               	movlw	low print_time@str
  5041  013A46  6F83               	movwf	sprintf@sp& (0+255),b
  5042  013A48  6B84               	clrf	(sprintf@sp+1)& (0+255),b
  5043  013A4A  0E98               	movlw	low STR_23
  5044  013A4C  6F85               	movwf	sprintf@f& (0+255),b
  5045  013A4E  0EFD               	movlw	high STR_23
  5046  013A50  EC5E  F08E         	call	PL120	;call to abstracted procedure
  5047  013A54  0102               	movlb	2	; () banked
  5048  013A56  5196               	movf	(_now+7)& (0+255),w,b
  5049  013A58  0D04               	mullw	4
  5050  013A5A  0EA4               	movlw	low _weekday_3char
  5051  013A5C  24F3               	addwf	prodl,w,c
  5052  013A5E  0100               	movlb	0	; () banked
  5053  013A60  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5054  013A62  0EFB               	movlw	high _weekday_3char
  5055  013A64  20F4               	addwfc	prodh,w,c
  5056  013A66  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5057  013A68  C295  F08F         	movff	_now+6,?_sprintf+12
  5058  013A6C  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5059  013A6E  C294  F091         	movff	_now+5,?_sprintf+14
  5060  013A72  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5061  013A74  C293  F093         	movff	_now+4,?_sprintf+16
  5062  013A78  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5063  013A7A  EC00  F080         	call	_sprintf	;wreg free
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5067  013A7E  C0AA  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5068  013A82  C0AB  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5069  013A86  0EAC               	movlw	low print_time@str
  5070  013A88  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5071  013A8A  6B72               	clrf	(ringbuf_put_str@str+1)& (0+255),b
  5072  013A8C  EFD3  F09D         	goto	l9736	;wreg free
  5073  013A90                     __end_of_print_time:
  5074                           	opt stack 0
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           prodh	equ	0xFF4
  5080                           prodl	equ	0xFF3
  5081                           intcon	equ	0xFF2
  5082                           intcon2	equ	0xFF1
  5083                           postinc0	equ	0xFEE
  5084                           wreg	equ	0xFE8
  5085                           indf1	equ	0xFE7
  5086                           postinc1	equ	0xFE6
  5087                           postdec1	equ	0xFE5
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           indf2	equ	0xFDF
  5091                           postinc2	equ	0xFDE
  5092                           postdec2	equ	0xFDD
  5093                           plusw2	equ	0xFDB
  5094                           fsr2h	equ	0xFDA
  5095                           fsr2l	equ	0xFD9
  5096                           status	equ	0xFD8
  5097                           
  5098 ;; *************** function _RTCC_from_caltime *****************
  5099 ;; Defined at:
  5100 ;;		line 204 in file "../My_library/My_RTCC.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  tm              2   47[BANK0 ] PTR struct .
  5103 ;;		 -> now(14), 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : F/0
  5112 ;;		On exit  : F/F
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;Total ram usage:        2 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:   14
  5122 ;; This function calls:
  5123 ;;		_caltime_to_RTCC
  5124 ;;		_caltime_to_epoch
  5125 ;;		_epoch_to_caltime
  5126 ;; This function is called by:
  5127 ;;		_terminal_at_hand
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text6
  5132  014328                     __ptext6:
  5133                           	opt stack 0
  5134  014328                     _RTCC_from_caltime:
  5135                           	opt stack 12
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5139                           
  5140                           ;incstack = 0
  5141  014328  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5142  01432C  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5143  014330  EC9E  F08A         	call	_caltime_to_epoch	;wreg free
  5144                           
  5145                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5146  014334  C08F  F082         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5147  014338  C090  F083         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5148  01433C  EC80  F08D         	call	_epoch_to_caltime	;wreg free
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5152  014340  C08F  F065         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5153  014344  C090  F066         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5154  014348  EF77  F096         	goto	_caltime_to_RTCC	;wreg free
  5155  01434C                     __end_of_RTCC_from_caltime:
  5156                           	opt stack 0
  5157                           tblptru	equ	0xFF8
  5158                           tblptrh	equ	0xFF7
  5159                           tblptrl	equ	0xFF6
  5160                           tablat	equ	0xFF5
  5161                           prodh	equ	0xFF4
  5162                           prodl	equ	0xFF3
  5163                           intcon	equ	0xFF2
  5164                           intcon2	equ	0xFF1
  5165                           postinc0	equ	0xFEE
  5166                           wreg	equ	0xFE8
  5167                           indf1	equ	0xFE7
  5168                           postinc1	equ	0xFE6
  5169                           postdec1	equ	0xFE5
  5170                           fsr1h	equ	0xFE2
  5171                           fsr1l	equ	0xFE1
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           plusw2	equ	0xFDB
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _strcmp *****************
  5181 ;; Defined at:
  5182 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5185 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5186 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5187 ;;		 -> STR_65(2), STR_64(6), STR_61(5), STR_60(11), 
  5188 ;;		 -> STR_59(6), STR_58(1), STR_57(12), STR_56(3), 
  5189 ;;		 -> STR_55(9), STR_54(9), STR_52(2), STR_51(5), 
  5190 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  5191 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  5192 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  5193 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  r               1    6[BANK0 ] char 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  2    0[BANK0 ] int 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5200 ;; Tracked objects:
  5201 ;;		On entry : F/0
  5202 ;;		On exit  : F/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5207 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5208 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5209 ;;Total ram usage:        7 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:   11
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_terminal_time
  5216 ;;		_terminal_operation
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text7
  5221  013E68                     __ptext7:
  5222                           	opt stack 0
  5223  013E68                     _strcmp:
  5224                           	opt stack 16
  5225                           
  5226                           ; BSR set to: 0
  5227                           
  5228                           ; BSR set to: 15
  5229                           ;incstack = 0
  5230  013E68  D004               	goto	l10234
  5231  013E6A                     l10232:
  5232                           
  5233                           ; BSR set to: 0
  5234  013E6A  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5235  013E6C  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5236  013E6E  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5237  013E70  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5238  013E72                     l10234:
  5239                           
  5240                           ; BSR set to: 0
  5241  013E72  C062  FFF6         	movff	strcmp@s2,tblptrl
  5242  013E76  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5243  013E7A                     	if	0	;tblptru may be non-zero
  5244  013E7A                     	endif
  5245  013E7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5246  013E7A  0E00               	movlw	low (__mediumconst shr (0+16))
  5247  013E7C  6EF8               	movwf	tblptru,c
  5248  013E7E                     	endif
  5249  013E7E  0008               	tblrd		*
  5250  013E80  CFF5 F064          	movff	tablat,??_strcmp
  5251  013E84  D80E               	call	PL282	;call to abstracted procedure
  5252  013E86  6F65               	movwf	(??_strcmp+1)& (0+255),b
  5253  013E88  5164               	movf	??_strcmp& (0+255),w,b
  5254  013E8A  5D65               	subwf	(??_strcmp+1)& (0+255),w,b
  5255  013E8C  6F66               	movwf	strcmp@r& (0+255),b
  5256  013E8E  5166               	movf	strcmp@r& (0+255),w,b
  5257  013E90  E102               	bnz	l10238
  5258                           
  5259                           ; BSR set to: 0
  5260  013E92  D807               	call	PL282	;call to abstracted procedure
  5261  013E94  E1EA               	bnz	l10232
  5262  013E96                     l10238:
  5263                           
  5264                           ; BSR set to: 0
  5265  013E96  5166               	movf	strcmp@r& (0+255),w,b
  5266  013E98  6F60               	movwf	?_strcmp& (0+255),b
  5267  013E9A  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5268  013E9C  BF60               	btfsc	?_strcmp& (0+255),7,b
  5269  013E9E  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5270                           
  5271                           ; BSR set to: 0
  5272  013EA0  0012               	return		;funcret
  5273  013EA2                     __end_of_strcmp:
  5274                           	opt stack 0
  5275  013EA2                     PL282:
  5276                           	opt stack 16
  5277  013EA2  C060  FFD9         	movff	strcmp@s1,fsr2l
  5278  013EA6  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5279  013EAA  50DF               	movf	indf2,w,c
  5280  013EAC  0012               	return	
  5281  013EAE                     __end_ofPL282:
  5282                           	opt stack 0
  5283                           tblptru	equ	0xFF8
  5284                           tblptrh	equ	0xFF7
  5285                           tblptrl	equ	0xFF6
  5286                           tablat	equ	0xFF5
  5287                           prodh	equ	0xFF4
  5288                           prodl	equ	0xFF3
  5289                           intcon	equ	0xFF2
  5290                           intcon2	equ	0xFF1
  5291                           postinc0	equ	0xFEE
  5292                           wreg	equ	0xFE8
  5293                           indf1	equ	0xFE7
  5294                           postinc1	equ	0xFE6
  5295                           postdec1	equ	0xFE5
  5296                           fsr1h	equ	0xFE2
  5297                           fsr1l	equ	0xFE1
  5298                           indf2	equ	0xFDF
  5299                           postinc2	equ	0xFDE
  5300                           postdec2	equ	0xFDD
  5301                           plusw2	equ	0xFDB
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8
  5305                           
  5306 ;; *************** function _atoi *****************
  5307 ;; Defined at:
  5308 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5311 ;;		 -> terminal_task@op2(25), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  a               2   33[BANK0 ] int 
  5314 ;;  sign            1   32[BANK0 ] unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  2   28[BANK0 ] int 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : F/0
  5321 ;;		On exit  : F/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5327 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;Total ram usage:        7 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:   12
  5331 ;; This function calls:
  5332 ;;		___wmul
  5333 ;;		_isdigit
  5334 ;; This function is called by:
  5335 ;;		_terminal_time
  5336 ;;		_terminal_operation
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text8
  5341  012962                     __ptext8:
  5342                           	opt stack 0
  5343  012962                     _atoi:
  5344                           	opt stack 15
  5345                           
  5346                           ; BSR set to: 0
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;incstack = 0
  5350  012962  D002               	goto	l10246
  5351  012964                     l10244:
  5352                           
  5353                           ; BSR set to: 0
  5354  012964  4B7C               	infsnz	atoi@s& (0+255),f,b
  5355  012966  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5356  012968                     l10246:
  5357                           
  5358                           ; BSR set to: 0
  5359  012968  D844               	call	PL140	;call to abstracted procedure
  5360  01296A  0E20               	movlw	32
  5361  01296C  18DE               	xorwf	postinc2,w,c
  5362  01296E  E0FA               	bz	l10244
  5363                           
  5364                           ; BSR set to: 0
  5365  012970  D840               	call	PL140	;call to abstracted procedure
  5366  012972  0E09               	movlw	9
  5367  012974  18DE               	xorwf	postinc2,w,c
  5368  012976  E0F6               	bz	l10244
  5369                           
  5370                           ; BSR set to: 0
  5371  012978  6B81               	clrf	atoi@a& (0+255),b
  5372  01297A  6B82               	clrf	(atoi@a+1)& (0+255),b
  5373  01297C  6B80               	clrf	atoi@sign& (0+255),b
  5374                           
  5375                           ; BSR set to: 0
  5376  01297E  D839               	call	PL140	;call to abstracted procedure
  5377  012980  0E2D               	movlw	45
  5378  012982  18DE               	xorwf	postinc2,w,c
  5379  012984  E102               	bnz	l10254
  5380                           
  5381                           ; BSR set to: 0
  5382  012986  2B80               	incf	atoi@sign& (0+255),f,b
  5383  012988  D004               	goto	l10256
  5384  01298A                     l10254:
  5385                           
  5386                           ; BSR set to: 0
  5387  01298A  D833               	call	PL140	;call to abstracted procedure
  5388  01298C  0E2B               	movlw	43
  5389  01298E  18DE               	xorwf	postinc2,w,c
  5390  012990  E117               	bnz	l10262
  5391  012992                     l10256:
  5392                           
  5393                           ; BSR set to: 0
  5394  012992  4B7C               	infsnz	atoi@s& (0+255),f,b
  5395  012994  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5396  012996  D014               	goto	l10262
  5397  012998                     l10258:
  5398                           
  5399                           ; BSR set to: 0
  5400  012998  C081  F076         	movff	atoi@a,___wmul@multiplier
  5401  01299C  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5402  0129A0  ECA0  F081         	call	PL356	;call to abstracted procedure
  5403  0129A4  EC81  F0A1         	call	___wmul	;wreg free
  5404  0129A8  D824               	call	PL140	;call to abstracted procedure
  5405  0129AA  50DF               	movf	indf2,w,c
  5406  0129AC  2776               	addwf	?___wmul& (0+255),f,b
  5407  0129AE  0E00               	movlw	0
  5408  0129B0  2377               	addwfc	(?___wmul+1)& (0+255),f,b
  5409  0129B2  0ED0               	movlw	208
  5410  0129B4  2576               	addwf	?___wmul& (0+255),w,b
  5411  0129B6  6F81               	movwf	atoi@a& (0+255),b
  5412  0129B8  0EFF               	movlw	255
  5413  0129BA  2177               	addwfc	(?___wmul+1)& (0+255),w,b
  5414  0129BC  6F82               	movwf	(atoi@a+1)& (0+255),b
  5415  0129BE  D7E9               	goto	l10256
  5416  0129C0                     l10262:
  5417                           
  5418                           ; BSR set to: 0
  5419  0129C0  D818               	call	PL140	;call to abstracted procedure
  5420  0129C2  50DF               	movf	indf2,w,c
  5421  0129C4  EC4B  F0A2         	call	_isdigit
  5422  0129C8  E2E7               	bc	l10258
  5423                           
  5424                           ; BSR set to: 0
  5425  0129CA  5180               	movf	atoi@sign& (0+255),w,b
  5426  0129CC  E00D               	bz	l2156
  5427                           
  5428                           ; BSR set to: 0
  5429  0129CE  C081  F07E         	movff	atoi@a,??_atoi
  5430  0129D2  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5431  0129D6  1F7E               	comf	??_atoi& (0+255),f,b
  5432  0129D8  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5433  0129DA  4B7E               	infsnz	??_atoi& (0+255),f,b
  5434  0129DC  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5435  0129DE  C07E  F07C         	movff	??_atoi,?_atoi
  5436  0129E2  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5437  0129E6  0012               	return	
  5438  0129E8                     l2156:
  5439                           
  5440                           ; BSR set to: 0
  5441  0129E8  C081  F07C         	movff	atoi@a,?_atoi
  5442  0129EC  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5443                           
  5444                           ; BSR set to: 0
  5445  0129F0  0012               	return		;funcret
  5446  0129F2                     __end_of_atoi:
  5447                           	opt stack 0
  5448  0129F2                     PL140:
  5449                           	opt stack 15
  5450  0129F2  C07C  FFD9         	movff	atoi@s,fsr2l
  5451  0129F6  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5452  0129FA  0012               	return	
  5453  0129FC                     __end_ofPL140:
  5454                           	opt stack 0
  5455                           tblptru	equ	0xFF8
  5456                           tblptrh	equ	0xFF7
  5457                           tblptrl	equ	0xFF6
  5458                           tablat	equ	0xFF5
  5459                           prodh	equ	0xFF4
  5460                           prodl	equ	0xFF3
  5461                           intcon	equ	0xFF2
  5462                           intcon2	equ	0xFF1
  5463                           postinc0	equ	0xFEE
  5464                           wreg	equ	0xFE8
  5465                           indf1	equ	0xFE7
  5466                           postinc1	equ	0xFE6
  5467                           postdec1	equ	0xFE5
  5468                           fsr1h	equ	0xFE2
  5469                           fsr1l	equ	0xFE1
  5470                           indf2	equ	0xFDF
  5471                           postinc2	equ	0xFDE
  5472                           postdec2	equ	0xFDD
  5473                           plusw2	equ	0xFDB
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _bootload *****************
  5479 ;; Defined at:
  5480 ;;		line 191 in file "ChargeStation_task.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;		None               void
  5487 ;; Registers used:
  5488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : E/1
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:   15
  5501 ;; This function calls:
  5502 ;;		_ST7032_clear
  5503 ;;		_ST7032_cursor
  5504 ;;		_ST7032_puts
  5505 ;; This function is called by:
  5506 ;;		_terminal_operation
  5507 ;;		_main
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text9
  5512  01410C                     __ptext9:
  5513                           	opt stack 0
  5514  01410C                     _bootload:
  5515                           	opt stack 13
  5516                           
  5517                           ;ChargeStation_task.c: 192: ST7032_clear();
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;incstack = 0
  5521  01410C  ECCA  F0A2         	call	_ST7032_clear	;wreg free
  5522                           
  5523                           ;ChargeStation_task.c: 193: ST7032_cursor(0, 0);
  5524  014110  0E00               	movlw	0
  5525  014112  6B71               	clrf	ST7032_cursor@row& (0+255),b
  5526  014114  EC0B  F0A2         	call	_ST7032_cursor
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;ChargeStation_task.c: 194: ST7032_puts("PIC18F27J53");
  5530  014118  0E19               	movlw	low STR_49
  5531  01411A  6F70               	movwf	ST7032_puts@s& (0+255),b
  5532  01411C  0EFF               	movlw	high STR_49
  5533  01411E  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5534  014120  ECBA  F09F         	call	_ST7032_puts	;wreg free
  5535                           
  5536                           ;ChargeStation_task.c: 195: ST7032_cursor(0, 1);
  5537  014124  EC0E  F083         	call	PL170	;call to abstracted procedure
  5538  014128  EC0B  F0A2         	call	_ST7032_cursor
  5539                           
  5540                           ;ChargeStation_task.c: 196: ST7032_puts("Bootloader mode");
  5541  01412C  0EC3               	movlw	low STR_50
  5542  01412E  6F70               	movwf	ST7032_puts@s& (0+255),b
  5543  014130  0EFE               	movlw	high STR_50
  5544  014132  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5545  014134  ECBA  F09F         	call	_ST7032_puts	;wreg free
  5546  014138  EF0E F000          	goto	28	;# 
  5547  01413C  0012               	return		;funcret
  5548  01413E                     __end_of_bootload:
  5549                           	opt stack 0
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           prodh	equ	0xFF4
  5555                           prodl	equ	0xFF3
  5556                           intcon	equ	0xFF2
  5557                           intcon2	equ	0xFF1
  5558                           postinc0	equ	0xFEE
  5559                           wreg	equ	0xFE8
  5560                           indf1	equ	0xFE7
  5561                           postinc1	equ	0xFE6
  5562                           postdec1	equ	0xFE5
  5563                           fsr1h	equ	0xFE2
  5564                           fsr1l	equ	0xFE1
  5565                           indf2	equ	0xFDF
  5566                           postinc2	equ	0xFDE
  5567                           postdec2	equ	0xFDD
  5568                           plusw2	equ	0xFDB
  5569                           fsr2h	equ	0xFDA
  5570                           fsr2l	equ	0xFD9
  5571                           status	equ	0xFD8
  5572                           
  5573 ;; *************** function _ringbuf_put_num *****************
  5574 ;; Defined at:
  5575 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5578 ;;		 -> usb_tx(8), 
  5579 ;;  value           2   37[BANK0 ] const unsigned int 
  5580 ;;  digits          1   39[BANK0 ] unsigned char 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  i               1   40[BANK0 ] unsigned char 
  5583 ;;  temp            2   41[BANK0 ] unsigned int 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : F/0
  5590 ;;		On exit  : F/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5593 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5594 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5596 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5597 ;;Total ram usage:        8 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:   13
  5600 ;; This function calls:
  5601 ;;		___lwdiv
  5602 ;;		___lwmod
  5603 ;;		_ringbuf_put
  5604 ;; This function is called by:
  5605 ;;		_terminal_task
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text10
  5610  013804                     __ptext10:
  5611                           	opt stack 0
  5612  013804                     _ringbuf_put_num:
  5613                           	opt stack 16
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;My_ringbuf.c: 29: while (digits--) {
  5617                           
  5618                           ;incstack = 0
  5619  013804  D02D               	goto	l11042
  5620  013806                     l770:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5624  013806  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5625  01380A  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5626                           
  5627                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5628  01380E  6B88               	clrf	ringbuf_put_num@i& (0+255),b
  5629  013810  D00E               	goto	l11036
  5630  013812                     l11032:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;My_ringbuf.c: 32: temp /= 10;
  5634  013812  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5635  013816  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5636  01381A  6B7F               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5637  01381C  0E0A               	movlw	10
  5638  01381E  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5639  013820  ECA0  F09E         	call	___lwdiv	;wreg free
  5640  013824  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5641  013828  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5642                           
  5643                           ; BSR set to: 0
  5644  01382C  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5645  01382E                     l11036:
  5646                           
  5647                           ; BSR set to: 0
  5648  01382E  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5649  013830  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5650  013832  E3EF               	bnc	l11032
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;My_ringbuf.c: 33: }
  5654                           ;My_ringbuf.c: 34: temp %= 10;
  5655  013834  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5656  013838  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5657  01383C  6B63               	clrf	(___lwmod@divisor+1)& (0+255),b
  5658  01383E  0E0A               	movlw	10
  5659  013840  6F62               	movwf	___lwmod@divisor& (0+255),b
  5660  013842  ECF9  F09F         	call	___lwmod	;wreg free
  5661  013846  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5662  01384A  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5666  01384E  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5667  013852  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5668  013856  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5669  013858  0F30               	addlw	48
  5670  01385A  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5671  01385C  ECC5  F093         	call	_ringbuf_put	;wreg free
  5672  013860                     l11042:
  5673                           
  5674                           ; BSR set to: 0
  5675  013860  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5676  013862  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5677  013864  E1D0               	bnz	l770
  5678                           
  5679                           ; BSR set to: 0
  5680  013866  0012               	return		;funcret
  5681  013868                     __end_of_ringbuf_put_num:
  5682                           	opt stack 0
  5683                           tblptru	equ	0xFF8
  5684                           tblptrh	equ	0xFF7
  5685                           tblptrl	equ	0xFF6
  5686                           tablat	equ	0xFF5
  5687                           prodh	equ	0xFF4
  5688                           prodl	equ	0xFF3
  5689                           intcon	equ	0xFF2
  5690                           intcon2	equ	0xFF1
  5691                           postinc0	equ	0xFEE
  5692                           wreg	equ	0xFE8
  5693                           indf1	equ	0xFE7
  5694                           postinc1	equ	0xFE6
  5695                           postdec1	equ	0xFE5
  5696                           fsr1h	equ	0xFE2
  5697                           fsr1l	equ	0xFE1
  5698                           indf2	equ	0xFDF
  5699                           postinc2	equ	0xFDE
  5700                           postdec2	equ	0xFDD
  5701                           plusw2	equ	0xFDB
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _ringbuf_delete *****************
  5707 ;; Defined at:
  5708 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5711 ;;		 -> terminal_task@command(8), 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;		None               void
  5716 ;; Registers used:
  5717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : F/0
  5720 ;;		On exit  : F/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5727 ;;Total ram usage:        2 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:   11
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_terminal_task
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text11
  5738  01434C                     __ptext11:
  5739                           	opt stack 0
  5740  01434C                     _ringbuf_delete:
  5741                           	opt stack 18
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;incstack = 0
  5748  01434C  EE20 F006          	lfsr	2,6
  5749  014350  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5750  014352  26D9               	addwf	fsr2l,f,c
  5751  014354  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5752  014356  22DA               	addwfc	fsr2h,f,c
  5753  014358  EE10 F004          	lfsr	1,4
  5754  01435C  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5755  01435E  26E1               	addwf	fsr1l,f,c
  5756  014360  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5757  014362  22E2               	addwfc	fsr1h,f,c
  5758  014364  CFDE FFE6          	movff	postinc2,postinc1
  5759  014368  CFDD FFE5          	movff	postdec2,postdec1
  5760                           
  5761                           ; BSR set to: 0
  5762  01436C  0012               	return		;funcret
  5763  01436E                     __end_of_ringbuf_delete:
  5764                           	opt stack 0
  5765                           tblptru	equ	0xFF8
  5766                           tblptrh	equ	0xFF7
  5767                           tblptrl	equ	0xFF6
  5768                           tablat	equ	0xFF5
  5769                           prodh	equ	0xFF4
  5770                           prodl	equ	0xFF3
  5771                           intcon	equ	0xFF2
  5772                           intcon2	equ	0xFF1
  5773                           postinc0	equ	0xFEE
  5774                           wreg	equ	0xFE8
  5775                           indf1	equ	0xFE7
  5776                           postinc1	equ	0xFE6
  5777                           postdec1	equ	0xFE5
  5778                           fsr1h	equ	0xFE2
  5779                           fsr1l	equ	0xFE1
  5780                           indf2	equ	0xFDF
  5781                           postinc2	equ	0xFDE
  5782                           postdec2	equ	0xFDD
  5783                           plusw2	equ	0xFDB
  5784                           fsr2h	equ	0xFDA
  5785                           fsr2l	equ	0xFD9
  5786                           status	equ	0xFD8
  5787                           
  5788 ;; *************** function _ringbuf_backspace *****************
  5789 ;; Defined at:
  5790 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5793 ;;		 -> terminal_task@command(8), 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;		None               void
  5798 ;; Registers used:
  5799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : F/0
  5802 ;;		On exit  : F/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5807 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;Total ram usage:        6 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:   12
  5812 ;; This function calls:
  5813 ;;		_ringbuf_num
  5814 ;; This function is called by:
  5815 ;;		_terminal_task
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text12
  5820  0138CA                     __ptext12:
  5821                           	opt stack 0
  5822  0138CA                     _ringbuf_backspace:
  5823                           	opt stack 17
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;incstack = 0
  5830  0138CA  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5831  0138CE  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5832  0138D2  ECDE  F097         	call	_ringbuf_num	;wreg free
  5833  0138D6  5160               	movf	?_ringbuf_num& (0+255),w,b
  5834  0138D8  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5835  0138DA  B4D8               	btfsc	status,2,c
  5836  0138DC  0012               	return	
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5840  0138DE  D81E               	call	PL154	;call to abstracted procedure
  5841  0138E0  50DE               	movf	postinc2,w,c
  5842  0138E2  10DE               	iorwf	postinc2,w,c
  5843  0138E4  E005               	bz	l11070
  5844                           
  5845                           ; BSR set to: 0
  5846  0138E6  D81A               	call	PL154	;call to abstracted procedure
  5847  0138E8  06DE               	decf	postinc2,f,c
  5848  0138EA  0E00               	movlw	0
  5849  0138EC  5ADD               	subwfb	postdec2,f,c
  5850  0138EE  0C00               	retlw	0
  5851  0138F0                     l11070:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5855  0138F0  696A               	setf	??_ringbuf_backspace& (0+255),b
  5856  0138F2  696B               	setf	(??_ringbuf_backspace+1)& (0+255),b
  5857  0138F4  EE20 F002          	lfsr	2,2
  5858  0138F8  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5859  0138FA  26D9               	addwf	fsr2l,f,c
  5860  0138FC  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5861  0138FE  22DA               	addwfc	fsr2h,f,c
  5862  013900  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5863  013904  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5864  013908  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5865  01390A  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5866  01390C  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5867  01390E  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5868  013910  D805               	call	PL154	;call to abstracted procedure
  5869  013912  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5870  013916  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5871                           
  5872                           ; BSR set to: 0
  5873  01391A  0012               	return		;funcret
  5874  01391C                     __end_of_ringbuf_backspace:
  5875                           	opt stack 0
  5876  01391C                     PL154:
  5877                           	opt stack 17
  5878  01391C  EE20 F004          	lfsr	2,4
  5879  013920  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5880  013922  26D9               	addwf	fsr2l,f,c
  5881  013924  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5882  013926  22DA               	addwfc	fsr2h,f,c
  5883  013928  0012               	return	
  5884  01392A                     __end_ofPL154:
  5885                           	opt stack 0
  5886                           tblptru	equ	0xFF8
  5887                           tblptrh	equ	0xFF7
  5888                           tblptrl	equ	0xFF6
  5889                           tablat	equ	0xFF5
  5890                           prodh	equ	0xFF4
  5891                           prodl	equ	0xFF3
  5892                           intcon	equ	0xFF2
  5893                           intcon2	equ	0xFF1
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           indf1	equ	0xFE7
  5897                           postinc1	equ	0xFE6
  5898                           postdec1	equ	0xFE5
  5899                           fsr1h	equ	0xFE2
  5900                           fsr1l	equ	0xFE1
  5901                           indf2	equ	0xFDF
  5902                           postinc2	equ	0xFDE
  5903                           postdec2	equ	0xFDD
  5904                           plusw2	equ	0xFDB
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           
  5909 ;; *************** function _software_init *****************
  5910 ;; Defined at:
  5911 ;;		line 108 in file "main.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  i               1   36[BANK0 ] unsigned char 
  5916 ;; Return value:  Size  Location     Type
  5917 ;;		None               void
  5918 ;; Registers used:
  5919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : F/0
  5922 ;;		On exit  : F/1
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5929 ;;Total ram usage:        1 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:   14
  5932 ;; This function calls:
  5933 ;;		_LED_output
  5934 ;;		_OUT
  5935 ;;		_ctmu_set_ratio
  5936 ;;		_display
  5937 ;; This function is called by:
  5938 ;;		_main
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text13
  5943  01392A                     __ptext13:
  5944                           	opt stack 0
  5945  01392A                     _software_init:
  5946                           	opt stack 16
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;main.c: 110: ctmu_ratio = 90;
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;incstack = 0
  5953  01392A  0E5A               	movlw	90
  5954  01392C  6E21               	movwf	_ctmu_ratio,c
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;main.c: 111: ctmu_set_ratio(ctmu_ratio);
  5958  01392E  5021               	movf	_ctmu_ratio,w,c
  5959  013930  EC25  F093         	call	_ctmu_set_ratio
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;main.c: 114: display(LOGO, "Charge Station", "Made by KERI");
  5963  013934  0EE2               	movlw	low STR_47
  5964  013936  6F60               	movwf	display@str0& (0+255),b
  5965  013938  0EFE               	movlw	high STR_47
  5966  01393A  6F61               	movwf	(display@str0+1)& (0+255),b
  5967  01393C  0EFF               	movlw	low STR_75
  5968  01393E  6F62               	movwf	display@str1& (0+255),b
  5969  013940  0EFE               	movlw	high STR_75
  5970  013942  6F63               	movwf	(display@str1+1)& (0+255),b
  5971  013944  0E00               	movlw	0
  5972  013946  EC5A  F090         	call	_display
  5973                           
  5974                           ; BSR set to: 1
  5975                           ;main.c: 117: for (uint8_t i = 0; i < 3; i++) {
  5976  01394A  0100               	movlb	0	; () banked
  5977  01394C  6B84               	clrf	software_init@i& (0+255),b
  5978  01394E                     l11754:
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;main.c: 118: OUT(i, 0);
  5982  01394E  6B60               	clrf	OUT@value& (0+255),b
  5983  013950  5184               	movf	software_init@i& (0+255),w,b
  5984  013952  EC7B  F09E         	call	_OUT
  5985                           
  5986                           ;main.c: 119: LED_output(i, 0);
  5987  013956  0100               	movlb	0	; () banked
  5988  013958  6B60               	clrf	LED_output@value& (0+255),b
  5989  01395A  5184               	movf	software_init@i& (0+255),w,b
  5990  01395C  EC31  F09E         	call	_LED_output
  5991                           
  5992                           ;main.c: 120: port[i].cut_cnt = 0;
  5993  013960  0100               	movlb	0	; () banked
  5994  013962  5184               	movf	software_init@i& (0+255),w,b
  5995  013964  ECCC  F092         	call	PL52	;call to abstracted procedure
  5996  013968  6ADE               	clrf	postinc2,c
  5997  01396A  6ADD               	clrf	postdec2,c
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;main.c: 121: port[i].flag.auto_cut_ON = 1;
  6001  01396C  5184               	movf	software_init@i& (0+255),w,b
  6002  01396E  ECEC  F08C         	call	PL4	;call to abstracted procedure
  6003  013972  80DF               	bsf	indf2,0,c
  6004                           
  6005                           ; BSR set to: 1
  6006                           ;main.c: 122: port[i].flag.led_indicator_ON = 1;
  6007  013974  5184               	movf	software_init@i& (0+255),w,b
  6008  013976  ECEC  F08C         	call	PL4	;call to abstracted procedure
  6009  01397A  82DF               	bsf	indf2,1,c
  6010                           
  6011                           ; BSR set to: 1
  6012  01397C  2B84               	incf	software_init@i& (0+255),f,b
  6013                           
  6014                           ; BSR set to: 0
  6015  01397E  0E02               	movlw	2
  6016  013980  6584               	cpfsgt	software_init@i& (0+255),b
  6017  013982  D7E5               	goto	l11754
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;main.c: 123: }
  6021                           ;main.c: 126: settings_flag = 0;
  6022  013984  0101               	movlb	1	; () banked
  6023  013986  6B31               	clrf	_settings_flag& (0+255),b
  6024                           
  6025                           ; BSR set to: 1
  6026  013988  0012               	return		;funcret
  6027  01398A                     __end_of_software_init:
  6028                           	opt stack 0
  6029                           tblptru	equ	0xFF8
  6030                           tblptrh	equ	0xFF7
  6031                           tblptrl	equ	0xFF6
  6032                           tablat	equ	0xFF5
  6033                           prodh	equ	0xFF4
  6034                           prodl	equ	0xFF3
  6035                           intcon	equ	0xFF2
  6036                           intcon2	equ	0xFF1
  6037                           postinc0	equ	0xFEE
  6038                           wreg	equ	0xFE8
  6039                           indf1	equ	0xFE7
  6040                           postinc1	equ	0xFE6
  6041                           postdec1	equ	0xFE5
  6042                           fsr1h	equ	0xFE2
  6043                           fsr1l	equ	0xFE1
  6044                           indf2	equ	0xFDF
  6045                           postinc2	equ	0xFDE
  6046                           postdec2	equ	0xFDD
  6047                           plusw2	equ	0xFDB
  6048                           fsr2h	equ	0xFDA
  6049                           fsr2l	equ	0xFD9
  6050                           status	equ	0xFD8
  6051                           
  6052 ;; *************** function _ctmu_set_ratio *****************
  6053 ;; Defined at:
  6054 ;;		line 14 in file "ctmu.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  percentage      1    wreg     unsigned char 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  percentage      1   35[BANK0 ] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;		None               void
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : F/0
  6065 ;;		On exit  : F/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6072 ;;Total ram usage:        1 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:   13
  6075 ;; This function calls:
  6076 ;;		_CTMU_read
  6077 ;;		___lwdiv
  6078 ;;		___wmul
  6079 ;; This function is called by:
  6080 ;;		_terminal_operation
  6081 ;;		_software_init
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text14
  6086  01264A                     __ptext14:
  6087                           	opt stack 0
  6088  01264A                     _ctmu_set_ratio:
  6089                           	opt stack 15
  6090                           
  6091                           ; BSR set to: 1
  6092                           ;incstack = 0
  6093                           ;ctmu_set_ratio@percentage stored from wreg
  6094  01264A  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6095                           
  6096                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6097  01264C  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6098  012650  0100               	movlb	0	; () banked
  6099  012652  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6100  012654  0E00               	movlw	0
  6101  012656  ECBF  F096         	call	_CTMU_read
  6102  01265A  D842               	call	PL218	;call to abstracted procedure
  6103  01265C  EC81  F0A1         	call	___wmul	;wreg free
  6104  012660  D837               	call	PL80	;call to abstracted procedure
  6105  012662  ECA0  F09E         	call	___lwdiv	;wreg free
  6106  012666  C07C  F141         	movff	?___lwdiv,_port+4
  6107  01266A  C07D  F142         	movff	?___lwdiv+1,_port+5
  6108                           
  6109                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6110  01266E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6111  012672  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6112  012674  0E01               	movlw	1
  6113  012676  ECBF  F096         	call	_CTMU_read
  6114  01267A  D832               	call	PL218	;call to abstracted procedure
  6115  01267C  EC81  F0A1         	call	___wmul	;wreg free
  6116  012680  D827               	call	PL80	;call to abstracted procedure
  6117  012682  ECA0  F09E         	call	___lwdiv	;wreg free
  6118  012686  C07C  F158         	movff	?___lwdiv,_port+27
  6119  01268A  C07D  F159         	movff	?___lwdiv+1,_port+28
  6120                           
  6121                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6122  01268E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6123  012692  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6124  012694  0E02               	movlw	2
  6125  012696  ECBF  F096         	call	_CTMU_read
  6126  01269A  D822               	call	PL218	;call to abstracted procedure
  6127  01269C  EC81  F0A1         	call	___wmul	;wreg free
  6128  0126A0  D817               	call	PL80	;call to abstracted procedure
  6129  0126A2  ECA0  F09E         	call	___lwdiv	;wreg free
  6130  0126A6  C07C  F16F         	movff	?___lwdiv,_port+50
  6131  0126AA  C07D  F170         	movff	?___lwdiv+1,_port+51
  6132                           
  6133                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6134  0126AE  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6135  0126B2  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6136  0126B4  0E03               	movlw	3
  6137  0126B6  ECBF  F096         	call	_CTMU_read
  6138  0126BA  D812               	call	PL218	;call to abstracted procedure
  6139  0126BC  EC81  F0A1         	call	___wmul	;wreg free
  6140  0126C0  D807               	call	PL80	;call to abstracted procedure
  6141  0126C2  ECA0  F09E         	call	___lwdiv	;wreg free
  6142  0126C6  C07C  F11B         	movff	?___lwdiv,_ctmu_value_m
  6143  0126CA  C07D  F11C         	movff	?___lwdiv+1,_ctmu_value_m+1
  6144                           
  6145                           ; BSR set to: 0
  6146  0126CE  0012               	return		;funcret
  6147  0126D0                     __end_of_ctmu_set_ratio:
  6148                           	opt stack 0
  6149  0126D0                     PL80:
  6150                           	opt stack 15
  6151  0126D0  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6152  0126D4  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6153  0126D8  6B7F               	clrf	(___lwdiv@divisor+1)& (0+255),b
  6154  0126DA  0E64               	movlw	100
  6155  0126DC  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6156  0126DE  0C64               	retlw	100
  6157  0126E0                     __end_ofPL80:
  6158                           	opt stack 0
  6159  0126E0                     PL218:
  6160                           	opt stack 15
  6161  0126E0  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6162  0126E4  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6163  0126E8  0012               	return	
  6164  0126EA                     __end_ofPL218:
  6165                           	opt stack 0
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           intcon	equ	0xFF2
  6173                           intcon2	equ	0xFF1
  6174                           postinc0	equ	0xFEE
  6175                           wreg	equ	0xFE8
  6176                           indf1	equ	0xFE7
  6177                           postinc1	equ	0xFE6
  6178                           postdec1	equ	0xFE5
  6179                           fsr1h	equ	0xFE2
  6180                           fsr1l	equ	0xFE1
  6181                           indf2	equ	0xFDF
  6182                           postinc2	equ	0xFDE
  6183                           postdec2	equ	0xFDD
  6184                           plusw2	equ	0xFDB
  6185                           fsr2h	equ	0xFDA
  6186                           fsr2l	equ	0xFD9
  6187                           status	equ	0xFD8
  6188                           
  6189 ;; *************** function _sleep_task *****************
  6190 ;; Defined at:
  6191 ;;		line 164 in file "ChargeStation_task.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  i               1   21[BANK0 ] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;		None               void
  6198 ;; Registers used:
  6199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : F/1
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6208 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6209 ;;Total ram usage:        1 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:   15
  6212 ;; This function calls:
  6213 ;;		_ADC
  6214 ;;		_LED_output
  6215 ;;		_OUT
  6216 ;;		_ST7032_clear
  6217 ;;		_ST7032_cursor
  6218 ;;		_ST7032_puts
  6219 ;;		_display
  6220 ;; This function is called by:
  6221 ;;		_main
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text15
  6226  01282A                     __ptext15:
  6227                           	opt stack 0
  6228  01282A                     _sleep_task:
  6229                           	opt stack 15
  6230                           
  6231                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6232                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;incstack = 0
  6236  01282A  0E0C               	movlw	12
  6237  01282C  EC1A  F0A1         	call	_ADC
  6238  012830  0E08               	movlw	8
  6239  012832  0100               	movlb	0	; () banked
  6240  012834  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6241  012836  E243               	bc	l11708
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6245  012838  0E01               	movlw	1
  6246  01283A  0101               	movlb	1	; () banked
  6247  01283C  6F3B               	movwf	sleep_task@sleep_flag& (0+255),b
  6248                           
  6249                           ; BSR set to: 1
  6250                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6251  01283E  9EF2               	bcf	intcon,7,c	;volatile
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6255  012840  0100               	movlb	0	; () banked
  6256  012842  6B75               	clrf	sleep_task@i& (0+255),b
  6257  012844                     l11690:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6261  012844  6B60               	clrf	OUT@value& (0+255),b
  6262  012846  5175               	movf	sleep_task@i& (0+255),w,b
  6263  012848  EC7B  F09E         	call	_OUT
  6264                           
  6265                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6266  01284C  0100               	movlb	0	; () banked
  6267  01284E  6B60               	clrf	LED_output@value& (0+255),b
  6268  012850  5175               	movf	sleep_task@i& (0+255),w,b
  6269  012852  EC31  F09E         	call	_LED_output
  6270  012856  0100               	movlb	0	; () banked
  6271  012858  2B75               	incf	sleep_task@i& (0+255),f,b
  6272                           
  6273                           ; BSR set to: 0
  6274  01285A  0E02               	movlw	2
  6275  01285C  6575               	cpfsgt	sleep_task@i& (0+255),b
  6276  01285E  D7F2               	goto	l11690
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;ChargeStation_task.c: 172: }
  6280                           ;ChargeStation_task.c: 173: ST7032_clear();
  6281  012860  ECCA  F0A2         	call	_ST7032_clear	;wreg free
  6282                           
  6283                           ;ChargeStation_task.c: 174: ST7032_cursor(0, 0);
  6284  012864  0E00               	movlw	0
  6285  012866  6B71               	clrf	ST7032_cursor@row& (0+255),b
  6286  012868  EC0B  F0A2         	call	_ST7032_cursor
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;ChargeStation_task.c: 175: ST7032_puts("Charge Station 6");
  6290  01286C  0E92               	movlw	low STR_45
  6291  01286E  6F70               	movwf	ST7032_puts@s& (0+255),b
  6292  012870  0EFE               	movlw	high STR_45
  6293  012872  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6294  012874  ECBA  F09F         	call	_ST7032_puts	;wreg free
  6295                           
  6296                           ;ChargeStation_task.c: 176: ST7032_cursor(0, 1);
  6297  012878  EC0E  F083         	call	PL170	;call to abstracted procedure
  6298  01287C  EC0B  F0A2         	call	_ST7032_cursor
  6299                           
  6300                           ;ChargeStation_task.c: 177: ST7032_puts("SLEEPING NOW");
  6301  012880  0E0C               	movlw	low STR_46
  6302  012882  6F70               	movwf	ST7032_puts@s& (0+255),b
  6303  012884  0EFF               	movlw	high STR_46
  6304  012886  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6305  012888  ECBA  F09F         	call	_ST7032_puts	;wreg free
  6306  01288C  D018               	goto	l11708
  6307  01288E                     l11702:
  6308                           
  6309                           ; BSR set to: 1
  6310                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6311  01288E  0E0C               	movlw	12
  6312  012890  EC1A  F0A1         	call	_ADC
  6313  012894  0100               	movlb	0	; () banked
  6314  012896  0560               	decf	?_ADC& (0+255),w,b
  6315  012898  0E08               	movlw	8
  6316  01289A  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6317  01289C  E30E               	bnc	l1487
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6321  01289E  0101               	movlb	1	; () banked
  6322  0128A0  6B3B               	clrf	sleep_task@sleep_flag& (0+255),b
  6323                           
  6324                           ; BSR set to: 1
  6325                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6326  0128A2  0EE2               	movlw	low STR_47
  6327  0128A4  0100               	movlb	0	; () banked
  6328  0128A6  6F60               	movwf	display@str0& (0+255),b
  6329  0128A8  0EFE               	movlw	high STR_47
  6330  0128AA  6F61               	movwf	(display@str0+1)& (0+255),b
  6331  0128AC  0EF1               	movlw	low STR_48
  6332  0128AE  6F62               	movwf	display@str1& (0+255),b
  6333  0128B0  0EFE               	movlw	high STR_48
  6334  0128B2  6F63               	movwf	(display@str1+1)& (0+255),b
  6335  0128B4  0E00               	movlw	0
  6336  0128B6  EF5A  F090         	goto	_display
  6337  0128BA                     l1487:
  6338                           
  6339                           ; BSR set to: 0
  6340  0128BA  0003               	sleep		;# 
  6341                           
  6342                           ;ChargeStation_task.c: 186: __nop();
  6343  0128BC  F000               	nop	
  6344  0128BE                     l11708:
  6345  0128BE  0101               	movlb	1	; () banked
  6346  0128C0  513B               	movf	sleep_task@sleep_flag& (0+255),w,b
  6347  0128C2  E1E5               	bnz	l11702
  6348                           
  6349                           ; BSR set to: 1
  6350  0128C4  0012               	return		;funcret
  6351  0128C6                     __end_of_sleep_task:
  6352                           	opt stack 0
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           intcon	equ	0xFF2
  6360                           intcon2	equ	0xFF1
  6361                           postinc0	equ	0xFEE
  6362                           wreg	equ	0xFE8
  6363                           indf1	equ	0xFE7
  6364                           postinc1	equ	0xFE6
  6365                           postdec1	equ	0xFE5
  6366                           fsr1h	equ	0xFE2
  6367                           fsr1l	equ	0xFE1
  6368                           indf2	equ	0xFDF
  6369                           postinc2	equ	0xFDE
  6370                           postdec2	equ	0xFDD
  6371                           plusw2	equ	0xFDB
  6372                           fsr2h	equ	0xFDA
  6373                           fsr2l	equ	0xFD9
  6374                           status	equ	0xFD8
  6375                           
  6376 ;; *************** function _normal_task *****************
  6377 ;; Defined at:
  6378 ;;		line 121 in file "ChargeStation_task.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;		None               void
  6385 ;; Registers used:
  6386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:   18
  6399 ;; This function calls:
  6400 ;;		_Auto_cut
  6401 ;;		_data_out
  6402 ;;		_display
  6403 ;;		_display_LCD
  6404 ;;		_integrate_current
  6405 ;;		_integrate_time
  6406 ;;		_port_button_task
  6407 ;;		_settings_task
  6408 ;; This function is called by:
  6409 ;;		_main
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text16
  6414  0131E8                     __ptext16:
  6415                           	opt stack 0
  6416  0131E8                     _normal_task:
  6417                           	opt stack 12
  6418                           
  6419                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6420                           
  6421                           ; BSR set to: 1
  6422                           ;incstack = 0
  6423  0131E8  0101               	movlb	1	; () banked
  6424  0131EA  5131               	movf	_settings_flag& (0+255),w,b
  6425  0131EC  E003               	bz	l1467
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;ChargeStation_task.c: 124: settings_task();
  6429  0131EE  EC57  F089         	call	_settings_task	;wreg free
  6430                           
  6431                           ;ChargeStation_task.c: 125: } else {
  6432  0131F2  D010               	goto	l11646
  6433  0131F4                     l1467:
  6434                           
  6435                           ; BSR set to: 1
  6436                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6437  0131F4  A027               	btfss	_ctmu_m+2,0,c
  6438  0131F6  D006               	goto	l11638
  6439                           
  6440                           ; BSR set to: 1
  6441                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6442  0131F8  6A27               	clrf	_ctmu_m+2,c
  6443  0131FA  6A28               	clrf	_ctmu_m+3,c
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6447  0131FC  ECD8  F095         	call	PL18	;call to abstracted procedure
  6448  013200  EC5A  F090         	call	_display
  6449  013204                     l11638:
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;ChargeStation_task.c: 129: }
  6453                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6454  013204  A428               	btfss	_ctmu_m+3,2,c
  6455  013206  D004               	goto	l11644
  6456                           
  6457                           ; BSR set to: 1
  6458                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6459  013208  6A27               	clrf	_ctmu_m+2,c
  6460  01320A  6A28               	clrf	_ctmu_m+3,c
  6461                           
  6462                           ; BSR set to: 1
  6463                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6464  01320C  0E01               	movlw	1
  6465  01320E  6F31               	movwf	_settings_flag& (0+255),b
  6466  013210                     l11644:
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;ChargeStation_task.c: 133: }
  6470                           ;ChargeStation_task.c: 134: port_button_task();
  6471  013210  ECC0  F090         	call	_port_button_task	;wreg free
  6472  013214                     l11646:
  6473                           
  6474                           ;ChargeStation_task.c: 135: }
  6475                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6476  013214  0101               	movlb	1	; () banked
  6477  013216  512D               	movf	_cut_time_flag& (0+255),w,b
  6478  013218  E003               	bz	l11652
  6479                           
  6480                           ; BSR set to: 1
  6481                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6482  01321A  6B2D               	clrf	_cut_time_flag& (0+255),b
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;ChargeStation_task.c: 139: Auto_cut();
  6486  01321C  EC82  F092         	call	_Auto_cut	;wreg free
  6487  013220                     l11652:
  6488                           
  6489                           ;ChargeStation_task.c: 140: }
  6490                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6491  013220  0101               	movlb	1	; () banked
  6492  013222  5130               	movf	_integrate_flag& (0+255),w,b
  6493  013224  E005               	bz	l11658
  6494                           
  6495                           ; BSR set to: 1
  6496                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6497  013226  6B30               	clrf	_integrate_flag& (0+255),b
  6498                           
  6499                           ; BSR set to: 1
  6500                           ;ChargeStation_task.c: 144: integrate_current();
  6501  013228  EC37  F099         	call	_integrate_current	;wreg free
  6502                           
  6503                           ;ChargeStation_task.c: 145: integrate_time();
  6504  01322C  EC9A  F09F         	call	_integrate_time	;wreg free
  6505  013230                     l11658:
  6506                           
  6507                           ;ChargeStation_task.c: 146: }
  6508                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6509  013230  0101               	movlb	1	; () banked
  6510  013232  5135               	movf	_time_change_flag& (0+255),w,b
  6511  013234  E007               	bz	l1473
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6515  013236  6B35               	clrf	_time_change_flag& (0+255),b
  6516                           
  6517                           ; BSR set to: 1
  6518                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6519  013238  0100               	movlb	0	; () banked
  6520  01323A  05EC               	decf	_print_item& (0+255),w,b
  6521  01323C  E103               	bnz	l1473
  6522                           
  6523                           ; BSR set to: 0
  6524  01323E  0E01               	movlw	1
  6525  013240  0101               	movlb	1	; () banked
  6526  013242  6F2F               	movwf	_display_flag& (0+255),b
  6527  013244                     l1473:
  6528                           
  6529                           ;ChargeStation_task.c: 151: }
  6530                           ;ChargeStation_task.c: 153: if (display_flag) {
  6531  013244  0101               	movlb	1	; () banked
  6532  013246  512F               	movf	_display_flag& (0+255),w,b
  6533  013248  E003               	bz	l11670
  6534                           
  6535                           ; BSR set to: 1
  6536                           ;ChargeStation_task.c: 154: display_flag = 0;
  6537  01324A  6B2F               	clrf	_display_flag& (0+255),b
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;ChargeStation_task.c: 155: display_LCD();
  6541  01324C  ECA4  F081         	call	_display_LCD	;wreg free
  6542  013250                     l11670:
  6543                           
  6544                           ;ChargeStation_task.c: 156: }
  6545                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6546  013250  0101               	movlb	1	; () banked
  6547  013252  5133               	movf	_terminal_data_out& (0+255),w,b
  6548  013254  B4D8               	btfsc	status,2,c
  6549  013256  0012               	return	
  6550                           
  6551                           ; BSR set to: 1
  6552  013258  5134               	movf	_terminal_data_out_flag& (0+255),w,b
  6553  01325A  B4D8               	btfsc	status,2,c
  6554  01325C  0012               	return	
  6555                           
  6556                           ; BSR set to: 1
  6557                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6558  01325E  6B34               	clrf	_terminal_data_out_flag& (0+255),b
  6559                           
  6560                           ; BSR set to: 1
  6561                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6562  013260  0EBD               	movlw	low _usb_tx
  6563  013262  0100               	movlb	0	; () banked
  6564  013264  6FAA               	movwf	data_out@tx& (0+255),b
  6565  013266  0E02               	movlw	high _usb_tx
  6566  013268  6FAB               	movwf	(data_out@tx+1)& (0+255),b
  6567  01326A  EF06  F08E         	goto	_data_out	;wreg free
  6568  01326E                     __end_of_normal_task:
  6569                           	opt stack 0
  6570                           tblptru	equ	0xFF8
  6571                           tblptrh	equ	0xFF7
  6572                           tblptrl	equ	0xFF6
  6573                           tablat	equ	0xFF5
  6574                           prodh	equ	0xFF4
  6575                           prodl	equ	0xFF3
  6576                           intcon	equ	0xFF2
  6577                           intcon2	equ	0xFF1
  6578                           postinc0	equ	0xFEE
  6579                           wreg	equ	0xFE8
  6580                           indf1	equ	0xFE7
  6581                           postinc1	equ	0xFE6
  6582                           postdec1	equ	0xFE5
  6583                           fsr1h	equ	0xFE2
  6584                           fsr1l	equ	0xFE1
  6585                           indf2	equ	0xFDF
  6586                           postinc2	equ	0xFDE
  6587                           postdec2	equ	0xFDD
  6588                           plusw2	equ	0xFDB
  6589                           fsr2h	equ	0xFDA
  6590                           fsr2l	equ	0xFD9
  6591                           status	equ	0xFD8
  6592                           
  6593 ;; *************** function _settings_task *****************
  6594 ;; Defined at:
  6595 ;;		line 193 in file "settings.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;		None               void
  6602 ;; Registers used:
  6603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : F/1
  6606 ;;		On exit  : E/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6613 ;;Total ram usage:        1 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:   17
  6616 ;; This function calls:
  6617 ;;		_display
  6618 ;;		_settings_adjust_time
  6619 ;;		_settings_auto_stop
  6620 ;;		_settings_integrating_reset
  6621 ;;		_settings_led_indicator
  6622 ;; This function is called by:
  6623 ;;		_normal_task
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text17
  6628  0112AE                     __ptext17:
  6629                           	opt stack 0
  6630  0112AE                     _settings_task:
  6631                           	opt stack 12
  6632                           
  6633                           ; BSR set to: 1
  6634                           ;settings.c: 194: static uint8_t settings_state = 0;
  6635                           ;settings.c: 195: switch (settings_state) {
  6636                           
  6637                           ;incstack = 0
  6638  0112AE  D091               	goto	l11404
  6639  0112B0                     l1883:
  6640                           
  6641                           ; BSR set to: 1
  6642                           ;settings.c: 197: settings_item = SELECT;
  6643  0112B0  0100               	movlb	0	; () banked
  6644  0112B2  6BED               	clrf	_settings_item& (0+255),b
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6648  0112B4  D897               	call	PL144	;call to abstracted procedure
  6649  0112B6  D89B               	call	PL296	;call to abstracted procedure
  6650  0112B8  EC5A  F090         	call	_display
  6651                           
  6652                           ; BSR set to: 1
  6653                           ;settings.c: 199: settings_state += 1;
  6654  0112BC  2B3A               	incf	settings_task@settings_state& (0+255),f,b
  6655                           
  6656                           ;settings.c: 200: break;
  6657  0112BE  0012               	return	
  6658  0112C0                     l1885:
  6659                           
  6660                           ; BSR set to: 1
  6661                           ;settings.c: 202: {
  6662                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6663  0112C0  0100               	movlb	0	; () banked
  6664  0112C2  6B99               	clrf	settings_task@item_change_flag& (0+255),b
  6665                           
  6666                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6667  0112C4  0101               	movlb	1	; () banked
  6668  0112C6  A16D               	btfss	(_port+48)& (0+255),0,b
  6669  0112C8  D00B               	goto	l11340
  6670                           
  6671                           ; BSR set to: 1
  6672                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6673  0112CA  6B6D               	clrf	(_port+48)& (0+255),b
  6674  0112CC  6B6E               	clrf	(_port+49)& (0+255),b
  6675                           
  6676                           ; BSR set to: 1
  6677                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6678  0112CE  0E04               	movlw	4
  6679  0112D0  0100               	movlb	0	; () banked
  6680  0112D2  19ED               	xorwf	_settings_item& (0+255),w,b
  6681  0112D4  E102               	bnz	l11336
  6682                           
  6683                           ; BSR set to: 0
  6684  0112D6  6BED               	clrf	_settings_item& (0+255),b
  6685  0112D8  D001               	goto	l11338
  6686  0112DA                     l11336:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;settings.c: 207: else settings_item++;
  6690  0112DA  2BED               	incf	_settings_item& (0+255),f,b
  6691  0112DC                     l11338:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;settings.c: 208: item_change_flag = 1;
  6695  0112DC  0E01               	movlw	1
  6696  0112DE  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6697  0112E0                     l11340:
  6698                           
  6699                           ;settings.c: 209: }
  6700                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6701  0112E0  0101               	movlb	1	; () banked
  6702  0112E2  A13F               	btfss	(_port+2)& (0+255),0,b
  6703  0112E4  D00B               	goto	l11352
  6704                           
  6705                           ; BSR set to: 1
  6706                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6707  0112E6  6B3F               	clrf	(_port+2)& (0+255),b
  6708  0112E8  6B40               	clrf	(_port+3)& (0+255),b
  6709                           
  6710                           ; BSR set to: 1
  6711                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  6712  0112EA  0100               	movlb	0	; () banked
  6713  0112EC  51ED               	movf	_settings_item& (0+255),w,b
  6714  0112EE  E103               	bnz	l11348
  6715                           
  6716                           ; BSR set to: 0
  6717  0112F0  0E04               	movlw	4
  6718  0112F2  6FED               	movwf	_settings_item& (0+255),b
  6719  0112F4  D001               	goto	l11350
  6720  0112F6                     l11348:
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;settings.c: 213: else settings_item--;
  6724  0112F6  07ED               	decf	_settings_item& (0+255),f,b
  6725  0112F8                     l11350:
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;settings.c: 214: item_change_flag = 1;
  6729  0112F8  0E01               	movlw	1
  6730  0112FA  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6731  0112FC                     l11352:
  6732                           
  6733                           ;settings.c: 215: }
  6734                           ;settings.c: 216: if (item_change_flag) {
  6735  0112FC  0100               	movlb	0	; () banked
  6736  0112FE  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  6737  011300  E12A               	bnz	l11368
  6738  011302  D033               	goto	l1892
  6739  011304                     l11356:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  6743  011304  D86F               	call	PL144	;call to abstracted procedure
  6744  011306  D873               	call	PL296	;call to abstracted procedure
  6745  011308  EC5A  F090         	call	_display
  6746                           
  6747                           ;settings.c: 220: break;
  6748  01130C  D02E               	goto	l1892
  6749  01130E                     l11358:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  6753  01130E  D86A               	call	PL144	;call to abstracted procedure
  6754  011310  0EA3               	movlw	low STR_109
  6755  011312  6F62               	movwf	display@str1& (0+255),b
  6756  011314  0EFE               	movlw	high STR_109
  6757  011316  6F63               	movwf	(display@str1+1)& (0+255),b
  6758  011318  0E03               	movlw	3
  6759  01131A  EC5A  F090         	call	_display
  6760                           
  6761                           ;settings.c: 223: break;
  6762  01131E  D025               	goto	l1892
  6763  011320                     l11360:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  6767  011320  D861               	call	PL144	;call to abstracted procedure
  6768  011322  0E70               	movlw	low STR_111
  6769  011324  6F62               	movwf	display@str1& (0+255),b
  6770  011326  0EFE               	movlw	high STR_111
  6771  011328  6F63               	movwf	(display@str1+1)& (0+255),b
  6772  01132A  0E03               	movlw	3
  6773  01132C  EC5A  F090         	call	_display
  6774                           
  6775                           ;settings.c: 226: break;
  6776  011330  D01C               	goto	l1892
  6777  011332                     l11362:
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  6781  011332  D858               	call	PL144	;call to abstracted procedure
  6782  011334  0EB3               	movlw	low STR_113
  6783  011336  6F62               	movwf	display@str1& (0+255),b
  6784  011338  0EFE               	movlw	high STR_113
  6785  01133A  6F63               	movwf	(display@str1+1)& (0+255),b
  6786  01133C  0E03               	movlw	3
  6787  01133E  EC5A  F090         	call	_display
  6788                           
  6789                           ;settings.c: 229: break;
  6790  011342  D013               	goto	l1892
  6791  011344                     l11364:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  6795  011344  D84F               	call	PL144	;call to abstracted procedure
  6796  011346  0ED3               	movlw	low STR_115
  6797  011348  6F62               	movwf	display@str1& (0+255),b
  6798  01134A  0EFE               	movlw	high STR_115
  6799  01134C  6F63               	movwf	(display@str1+1)& (0+255),b
  6800  01134E  0E03               	movlw	3
  6801  011350  EC5A  F090         	call	_display
  6802                           
  6803                           ;settings.c: 232: break;
  6804  011354  D00A               	goto	l1892
  6805  011356                     l11368:
  6806                           
  6807                           ; BSR set to: 0
  6808  011356  51ED               	movf	_settings_item& (0+255),w,b
  6809                           
  6810                           ; Switch size 1, requested type "space"
  6811                           ; Number of cases is 5, Range of values is 0 to 4
  6812                           ; switch strategies available:
  6813                           ; Name         Instructions Cycles
  6814                           ; simple_byte           16     9 (average)
  6815                           ;	Chosen strategy is simple_byte
  6816  011358  E0D5               	bz	l11356
  6817  01135A  0A01               	xorlw	1	; case 1
  6818  01135C  E0D8               	bz	l11358
  6819  01135E  0A03               	xorlw	3	; case 2
  6820  011360  E0DF               	bz	l11360
  6821  011362  0A01               	xorlw	1	; case 3
  6822  011364  E0E6               	bz	l11362
  6823  011366  0A07               	xorlw	7	; case 4
  6824  011368  E0ED               	bz	l11364
  6825  01136A                     l1892:
  6826                           
  6827                           ;settings.c: 234: }
  6828                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  6829  01136A  0101               	movlb	1	; () banked
  6830  01136C  A156               	btfss	(_port+25)& (0+255),0,b
  6831  01136E  D003               	goto	l11374
  6832                           
  6833                           ; BSR set to: 1
  6834                           ;settings.c: 236: port[1].ctmu.flags = 0;
  6835  011370  6B56               	clrf	(_port+25)& (0+255),b
  6836  011372  6B57               	clrf	(_port+26)& (0+255),b
  6837                           
  6838                           ; BSR set to: 1
  6839                           ;settings.c: 237: settings_state += 1;
  6840  011374  2B3A               	incf	settings_task@settings_state& (0+255),f,b
  6841  011376                     l11374:
  6842                           
  6843                           ; BSR set to: 1
  6844                           ;settings.c: 238: }
  6845                           ;settings.c: 239: if (ctmu_m.flag.press) {
  6846  011376  A027               	btfss	_ctmu_m+2,0,c
  6847  011378  0012               	return	
  6848                           
  6849                           ; BSR set to: 1
  6850                           ;settings.c: 240: ctmu_m.flags = 0;
  6851  01137A  6A27               	clrf	_ctmu_m+2,c
  6852  01137C  6A28               	clrf	_ctmu_m+3,c
  6853                           
  6854                           ;settings.c: 241: settings_state = 0;
  6855  01137E  6B3A               	clrf	settings_task@settings_state& (0+255),b
  6856                           
  6857                           ;settings.c: 242: settings_flag = 0;
  6858  011380  6B31               	clrf	_settings_flag& (0+255),b
  6859                           
  6860                           ; BSR set to: 1
  6861                           ;settings.c: 243: display(PRINT_TIME, "", "");
  6862  011382  ECD8  F095         	call	PL18	;call to abstracted procedure
  6863  011386  EF5A  F090         	goto	_display
  6864  01138A                     l11380:
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;settings.c: 250: settings_state = 1;
  6868  01138A  0E01               	movlw	1
  6869  01138C  0101               	movlb	1	; () banked
  6870  01138E  6F3A               	movwf	settings_task@settings_state& (0+255),b
  6871                           
  6872                           ;settings.c: 251: break;
  6873  011390  0C01               	retlw	1
  6874  011392                     l11382:
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;settings.c: 253: if (settings_adjust_time()) {
  6878  011392  EC97  F095         	call	_settings_adjust_time	;wreg free
  6879  011396  0900               	iorlw	0
  6880  011398  B4D8               	btfsc	status,2,c
  6881  01139A  0012               	return	
  6882  01139C                     l11384:
  6883                           
  6884                           ;settings.c: 254: settings_state = 0;
  6885  01139C  0101               	movlb	1	; () banked
  6886  01139E  6B3A               	clrf	settings_task@settings_state& (0+255),b
  6887  0113A0  0012               	return	
  6888  0113A2                     l11386:
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;settings.c: 258: if (settings_auto_stop()) {
  6892  0113A2  ECF4  F08C         	call	_settings_auto_stop	;wreg free
  6893  0113A6                     L1:
  6894  0113A6  0900               	iorlw	0
  6895  0113A8  E1F9               	bnz	l11384
  6896  0113AA  0012               	return	
  6897  0113AC                     l11390:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;settings.c: 263: if (settings_led_indicator()) {
  6901  0113AC  EC68  F08C         	call	_settings_led_indicator	;wreg free
  6902  0113B0  D7FA               	goto	L1
  6903  0113B2                     l11394:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;settings.c: 268: if (settings_integrating_reset()) {
  6907  0113B2  EC3D  F08B         	call	_settings_integrating_reset	;wreg free
  6908  0113B6  D7F7               	goto	L1
  6909  0113B8                     l11400:
  6910                           
  6911                           ; BSR set to: 1
  6912  0113B8  0100               	movlb	0	; () banked
  6913  0113BA  51ED               	movf	_settings_item& (0+255),w,b
  6914                           
  6915                           ; Switch size 1, requested type "space"
  6916                           ; Number of cases is 5, Range of values is 0 to 4
  6917                           ; switch strategies available:
  6918                           ; Name         Instructions Cycles
  6919                           ; simple_byte           16     9 (average)
  6920                           ;	Chosen strategy is simple_byte
  6921  0113BC  E0E6               	bz	l11380
  6922  0113BE  0A01               	xorlw	1	; case 1
  6923  0113C0  E0E8               	bz	l11382
  6924  0113C2  0A03               	xorlw	3	; case 2
  6925  0113C4  E0EE               	bz	l11386
  6926  0113C6  0A01               	xorlw	1	; case 3
  6927  0113C8  E0F1               	bz	l11390
  6928  0113CA  0A07               	xorlw	7	; case 4
  6929  0113CC  A4D8               	btfss	status,2,c
  6930  0113CE  0012               	return	
  6931  0113D0  D7F0               	goto	l11394
  6932  0113D2                     l11404:
  6933                           
  6934                           ; BSR set to: 1
  6935  0113D2  513A               	movf	settings_task@settings_state& (0+255),w,b
  6936                           
  6937                           ; Switch size 1, requested type "space"
  6938                           ; Number of cases is 3, Range of values is 0 to 2
  6939                           ; switch strategies available:
  6940                           ; Name         Instructions Cycles
  6941                           ; simple_byte           10     6 (average)
  6942                           ;	Chosen strategy is simple_byte
  6943  0113D4  E101 D76C          	bz	l1883
  6944  0113D8  0A01               	xorlw	1	; case 1
  6945  0113DA  E101 D771          	bz	l1885
  6946  0113DE  0A03               	xorlw	3	; case 2
  6947  0113E0  E0EB               	bz	l11400
  6948  0113E2  0012               	return		;funcret
  6949  0113E4                     __end_of_settings_task:
  6950                           	opt stack 0
  6951  0113E4                     PL144:
  6952                           	opt stack 12
  6953  0113E4  0E5E               	movlw	low STR_104
  6954  0113E6  6F60               	movwf	display@str0& (0+255),b
  6955  0113E8  0EFF               	movlw	high STR_104
  6956  0113EA  6F61               	movwf	(display@str0+1)& (0+255),b
  6957  0113EC  0012               	return	
  6958  0113EE                     __end_ofPL144:
  6959                           	opt stack 0
  6960  0113EE                     PL296:
  6961                           	opt stack 12
  6962  0113EE  0E5F               	movlw	low STR_105
  6963  0113F0  6F62               	movwf	display@str1& (0+255),b
  6964  0113F2  0EFE               	movlw	high STR_105
  6965  0113F4  6F63               	movwf	(display@str1+1)& (0+255),b
  6966  0113F6  0C03               	retlw	3
  6967  0113F8                     __end_ofPL296:
  6968                           	opt stack 0
  6969                           tblptru	equ	0xFF8
  6970                           tblptrh	equ	0xFF7
  6971                           tblptrl	equ	0xFF6
  6972                           tablat	equ	0xFF5
  6973                           prodh	equ	0xFF4
  6974                           prodl	equ	0xFF3
  6975                           intcon	equ	0xFF2
  6976                           intcon2	equ	0xFF1
  6977                           postinc0	equ	0xFEE
  6978                           wreg	equ	0xFE8
  6979                           indf1	equ	0xFE7
  6980                           postinc1	equ	0xFE6
  6981                           postdec1	equ	0xFE5
  6982                           fsr1h	equ	0xFE2
  6983                           fsr1l	equ	0xFE1
  6984                           indf2	equ	0xFDF
  6985                           postinc2	equ	0xFDE
  6986                           postdec2	equ	0xFDD
  6987                           plusw2	equ	0xFDB
  6988                           fsr2h	equ	0xFDA
  6989                           fsr2l	equ	0xFD9
  6990                           status	equ	0xFD8
  6991                           
  6992 ;; *************** function _settings_led_indicator *****************
  6993 ;; Defined at:
  6994 ;;		line 96 in file "settings.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;		None
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  i               1   50[BANK0 ] unsigned char 
  6999 ;;  str            20   27[BANK0 ] unsigned char [20]
  7000 ;;  strp            1   48[BANK0 ] PTR unsigned char 
  7001 ;;		 -> settings_led_indicator@str_6175(20), 
  7002 ;;  i               1   49[BANK0 ] unsigned char 
  7003 ;;  j               1   51[BANK0 ] unsigned char 
  7004 ;;  str            20    7[BANK0 ] unsigned char [20]
  7005 ;;  strp            1   47[BANK0 ] PTR unsigned char 
  7006 ;;		 -> settings_led_indicator@str(20), 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      unsigned char 
  7009 ;; Registers used:
  7010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7011 ;; Tracked objects:
  7012 ;;		On entry : E/0
  7013 ;;		On exit  : E/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7017 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7019 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7020 ;;Total ram usage:       46 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; Hardware stack levels required when called:   12
  7023 ;; This function calls:
  7024 ;;		_LED_output
  7025 ;;		_display
  7026 ;;		_strcpy
  7027 ;; This function is called by:
  7028 ;;		_settings_task
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text18
  7033  0118D0                     __ptext18:
  7034                           	opt stack 0
  7035  0118D0                     _settings_led_indicator:
  7036                           	opt stack 16
  7037                           
  7038                           ;settings.c: 97: static uint8_t state = 0;
  7039                           ;settings.c: 98: switch (state) {
  7040                           
  7041                           ;incstack = 0
  7042  0118D0  D072               	goto	l10848
  7043  0118D2                     l10788:
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;settings.c: 100: {
  7047                           ;settings.c: 101: char str[20];
  7048                           ;settings.c: 102: char *strp;
  7049                           ;settings.c: 103: strp = str;
  7050  0118D2  0E67               	movlw	low settings_led_indicator@str
  7051  0118D4  0100               	movlb	0	; () banked
  7052  0118D6  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7056  0118D8  6B91               	clrf	settings_led_indicator@i& (0+255),b
  7057  0118DA                     l10794:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7061  0118DA  5191               	movf	settings_led_indicator@i& (0+255),w,b
  7062  0118DC  D87D               	call	PL4	;call to abstracted procedure
  7063  0118DE  A2DF               	btfss	indf2,1,c
  7064  0118E0  D007               	goto	l10798
  7065                           
  7066                           ; BSR set to: 1
  7067  0118E2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7068  0118E6  EC72  F08D         	call	PL94	;call to abstracted procedure
  7069  0118EA  EC9F  F0A0         	call	_strcpy	;wreg free
  7070  0118EE  D006               	goto	l10800
  7071  0118F0                     l10798:
  7072                           
  7073                           ; BSR set to: 1
  7074                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7075  0118F0  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7076  0118F4  EC79  F08D         	call	PL96	;call to abstracted procedure
  7077  0118F8  EC9F  F0A0         	call	_strcpy	;wreg free
  7078  0118FC                     l10800:
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;settings.c: 107: strp += 5;
  7082  0118FC  0E05               	movlw	5
  7083  0118FE  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7084                           
  7085                           ; BSR set to: 0
  7086  011900  2B91               	incf	settings_led_indicator@i& (0+255),f,b
  7087                           
  7088                           ; BSR set to: 0
  7089  011902  0E02               	movlw	2
  7090  011904  6591               	cpfsgt	settings_led_indicator@i& (0+255),b
  7091  011906  D7E9               	goto	l10794
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;settings.c: 108: }
  7095                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7096  011908  ECC2  F08B         	call	PL266	;call to abstracted procedure
  7097  01190C  0E67               	movlw	low settings_led_indicator@str
  7098  01190E  ECC7  F08B         	call	PL276	;call to abstracted procedure
  7099  011912  EC5A  F090         	call	_display
  7100                           
  7101                           ; BSR set to: 1
  7102                           ;settings.c: 110: state = 1;
  7103  011916  0E01               	movlw	1
  7104  011918  6F39               	movwf	settings_led_indicator@state& (0+255),b
  7105                           
  7106                           ;settings.c: 111: }
  7107                           ;settings.c: 112: break;
  7108  01191A  D052               	goto	l1844
  7109  01191C                     l1845:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7113  01191C  0100               	movlb	0	; () banked
  7114  01191E  6B93               	clrf	settings_led_indicator@j& (0+255),b
  7115  011920                     l10814:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7119  011920  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7120  011922  ECAD  F08B         	call	PL26	;call to abstracted procedure
  7121  011926  A0DF               	btfss	indf2,0,c
  7122  011928  D040               	goto	l10842
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7126  01192A  0100               	movlb	0	; () banked
  7127  01192C  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7128  01192E  ECAD  F08B         	call	PL26	;call to abstracted procedure
  7129  011932  6ADE               	clrf	postinc2,c
  7130  011934  6ADD               	clrf	postdec2,c
  7131                           
  7132                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7133  011936  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7134  011938  D84F               	call	PL4	;call to abstracted procedure
  7135  01193A  B2DF               	btfsc	indf2,1,c
  7136  01193C  D003               	goto	u11610
  7137  01193E  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7138  011940  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7139  011942  D002               	goto	u11628
  7140  011944                     u11610:
  7141  011944  0100               	movlb	0	; () banked
  7142  011946  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7143  011948                     u11628:
  7144  011948  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7145  01194A  D846               	call	PL4	;call to abstracted procedure
  7146  01194C  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7147  01194E  50DF               	movf	223,w,c
  7148  011950  0100               	movlb	0	; () banked
  7149  011952  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7150  011954  0BFD               	andlw	-3
  7151  011956  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7152  011958  6EDF               	movwf	223,c
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;settings.c: 118: LED_output(j, 0);
  7156  01195A  6B60               	clrf	LED_output@value& (0+255),b
  7157  01195C  5193               	movf	settings_led_indicator@j& (0+255),w,b
  7158  01195E  EC31  F09E         	call	_LED_output
  7159                           
  7160                           ;settings.c: 119: char str[20];
  7161                           ;settings.c: 120: char *strp;
  7162                           ;settings.c: 121: strp = str;
  7163  011962  0E7B               	movlw	low settings_led_indicator@str_6175
  7164  011964  0100               	movlb	0	; () banked
  7165  011966  6F90               	movwf	settings_led_indicator@strp_6176& (0+255),b
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7169  011968  6B92               	clrf	settings_led_indicator@i_6177& (0+255),b
  7170  01196A                     l10828:
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7174  01196A  5192               	movf	settings_led_indicator@i_6177& (0+255),w,b
  7175  01196C  D835               	call	PL4	;call to abstracted procedure
  7176  01196E  A2DF               	btfss	indf2,1,c
  7177  011970  D007               	goto	l10832
  7178                           
  7179                           ; BSR set to: 1
  7180  011972  C090  F060         	movff	settings_led_indicator@strp_6176,strcpy@to
  7181  011976  EC72  F08D         	call	PL94	;call to abstracted procedure
  7182  01197A  EC9F  F0A0         	call	_strcpy	;wreg free
  7183  01197E  D006               	goto	l10834
  7184  011980                     l10832:
  7185                           
  7186                           ; BSR set to: 1
  7187                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7188  011980  C090  F060         	movff	settings_led_indicator@strp_6176,strcpy@to
  7189  011984  EC79  F08D         	call	PL96	;call to abstracted procedure
  7190  011988  EC9F  F0A0         	call	_strcpy	;wreg free
  7191  01198C                     l10834:
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;settings.c: 125: strp += 5;
  7195  01198C  0E05               	movlw	5
  7196  01198E  2790               	addwf	settings_led_indicator@strp_6176& (0+255),f,b
  7197                           
  7198                           ; BSR set to: 0
  7199  011990  2B92               	incf	settings_led_indicator@i_6177& (0+255),f,b
  7200                           
  7201                           ; BSR set to: 0
  7202  011992  0E02               	movlw	2
  7203  011994  6592               	cpfsgt	settings_led_indicator@i_6177& (0+255),b
  7204  011996  D7E9               	goto	l10828
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;settings.c: 126: }
  7208                           ;settings.c: 127: display(SETTINGS, "", str);
  7209  011998  0EE6               	movlw	low (STR_19+3)
  7210  01199A  6F60               	movwf	display@str0& (0+255),b
  7211  01199C  0EFF               	movlw	high (STR_19+3)
  7212  01199E  6F61               	movwf	(display@str0+1)& (0+255),b
  7213  0119A0  0E7B               	movlw	low settings_led_indicator@str_6175
  7214  0119A2  ECC7  F08B         	call	PL276	;call to abstracted procedure
  7215  0119A6  EC5A  F090         	call	_display
  7216  0119AA                     l10842:
  7217                           
  7218                           ; BSR set to: 1
  7219  0119AA  0100               	movlb	0	; () banked
  7220  0119AC  2B93               	incf	settings_led_indicator@j& (0+255),f,b
  7221                           
  7222                           ; BSR set to: 0
  7223  0119AE  0E02               	movlw	2
  7224  0119B0  6593               	cpfsgt	settings_led_indicator@j& (0+255),b
  7225  0119B2  D7B6               	goto	l10814
  7226  0119B4  D005               	goto	l1844
  7227  0119B6                     l10848:
  7228  0119B6  0101               	movlb	1	; () banked
  7229  0119B8  5139               	movf	settings_led_indicator@state& (0+255),w,b
  7230                           
  7231                           ; Switch size 1, requested type "space"
  7232                           ; Number of cases is 2, Range of values is 0 to 1
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte            7     4 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  0119BA  E08B               	bz	l10788
  7238  0119BC  0A01               	xorlw	1	; case 1
  7239  0119BE  E0AE               	bz	l1845
  7240  0119C0                     l1844:
  7241                           
  7242                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7243  0119C0  A027               	btfss	_ctmu_m+2,0,c
  7244  0119C2  0C00               	retlw	0
  7245                           
  7246                           ;settings.c: 135: ctmu_m.flags = 0;
  7247  0119C4  6A27               	clrf	_ctmu_m+2,c
  7248  0119C6  6A28               	clrf	_ctmu_m+3,c
  7249                           
  7250                           ;settings.c: 136: state = 0;
  7251  0119C8  0101               	movlb	1	; () banked
  7252  0119CA  6B39               	clrf	settings_led_indicator@state& (0+255),b
  7253                           
  7254                           ;settings.c: 137: settings_flag = 0;
  7255  0119CC  6B31               	clrf	_settings_flag& (0+255),b
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7259  0119CE  ECD8  F095         	call	PL18	;call to abstracted procedure
  7260  0119D2  EC5A  F090         	call	_display
  7261                           
  7262                           ; BSR set to: 1
  7263                           ;settings.c: 139: return 1;
  7264  0119D6  0C01               	retlw	1
  7265  0119D8                     __end_of_settings_led_indicator:
  7266                           	opt stack 0
  7267  0119D8                     PL4:
  7268                           	opt stack 16
  7269  0119D8  0D17               	mullw	23
  7270  0119DA  0E53               	movlw	low (_port+22)
  7271  0119DC  24F3               	addwf	prodl,w,c
  7272  0119DE  6ED9               	movwf	fsr2l,c
  7273  0119E0  0E01               	movlw	high (_port+22)
  7274  0119E2  20F4               	addwfc	prodh,w,c
  7275  0119E4  6EDA               	movwf	fsr2h,c
  7276  0119E6  0012               	return	
  7277  0119E8                     __end_ofPL4:
  7278                           	opt stack 0
  7279                           tblptru	equ	0xFF8
  7280                           tblptrh	equ	0xFF7
  7281                           tblptrl	equ	0xFF6
  7282                           tablat	equ	0xFF5
  7283                           prodh	equ	0xFF4
  7284                           prodl	equ	0xFF3
  7285                           intcon	equ	0xFF2
  7286                           intcon2	equ	0xFF1
  7287                           postinc0	equ	0xFEE
  7288                           wreg	equ	0xFE8
  7289                           indf1	equ	0xFE7
  7290                           postinc1	equ	0xFE6
  7291                           postdec1	equ	0xFE5
  7292                           fsr1h	equ	0xFE2
  7293                           fsr1l	equ	0xFE1
  7294                           indf2	equ	0xFDF
  7295                           postinc2	equ	0xFDE
  7296                           postdec2	equ	0xFDD
  7297                           plusw2	equ	0xFDB
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function _settings_integrating_reset *****************
  7303 ;; Defined at:
  7304 ;;		line 144 in file "settings.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  i               1   53[BANK0 ] unsigned char 
  7309 ;;  str            20   30[BANK0 ] unsigned char [20]
  7310 ;;  strp            1   51[BANK0 ] PTR unsigned char 
  7311 ;;		 -> settings_integrating_reset@str_6192(20), 
  7312 ;;  i               1   52[BANK0 ] unsigned char 
  7313 ;;  j               1   54[BANK0 ] unsigned char 
  7314 ;;  str            20   10[BANK0 ] unsigned char [20]
  7315 ;;  strp            1   50[BANK0 ] PTR unsigned char 
  7316 ;;		 -> settings_integrating_reset@str(20), 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      unsigned char 
  7319 ;; Registers used:
  7320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : E/0
  7323 ;;		On exit  : E/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7327 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7328 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7329 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7330 ;;Total ram usage:       49 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:   12
  7333 ;; This function calls:
  7334 ;;		_display
  7335 ;;		_strcpy
  7336 ;; This function is called by:
  7337 ;;		_settings_task
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text19
  7342  01167A                     __ptext19:
  7343                           	opt stack 0
  7344  01167A                     _settings_integrating_reset:
  7345                           	opt stack 16
  7346                           
  7347                           ;settings.c: 145: static uint8_t state = 0;
  7348                           ;settings.c: 146: switch (state) {
  7349                           
  7350                           ;incstack = 0
  7351  01167A  D05E               	goto	l10922
  7352  01167C                     l10864:
  7353                           
  7354                           ; BSR set to: 1
  7355                           ;settings.c: 148: {
  7356                           ;settings.c: 149: char str[20];
  7357                           ;settings.c: 150: char *strp;
  7358                           ;settings.c: 151: strp = str;
  7359  01167C  0E6A               	movlw	low settings_integrating_reset@str
  7360  01167E  0100               	movlb	0	; () banked
  7361  011680  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7365  011682  6B94               	clrf	settings_integrating_reset@i& (0+255),b
  7366  011684                     l10870:
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7370  011684  5194               	movf	settings_integrating_reset@i& (0+255),w,b
  7371  011686  D871               	call	PL42	;call to abstracted procedure
  7372  011688  D891               	call	PL314	;call to abstracted procedure
  7373  01168A  E006               	bz	l10874
  7374                           
  7375                           ; BSR set to: 0
  7376  01168C  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7377  011690  D887               	call	PL294	;call to abstracted procedure
  7378  011692  EC9F  F0A0         	call	_strcpy	;wreg free
  7379  011696  D005               	goto	l10876
  7380  011698                     l10874:
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7384  011698  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7385  01169C  D87B               	call	PL288	;call to abstracted procedure
  7386  01169E  EC9F  F0A0         	call	_strcpy	;wreg free
  7387  0116A2                     l10876:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;settings.c: 155: strp += 5;
  7391  0116A2  0E05               	movlw	5
  7392  0116A4  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7393                           
  7394                           ; BSR set to: 0
  7395  0116A6  2B94               	incf	settings_integrating_reset@i& (0+255),f,b
  7396                           
  7397                           ; BSR set to: 0
  7398  0116A8  0E02               	movlw	2
  7399  0116AA  6594               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7400  0116AC  D7EB               	goto	l10870
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;settings.c: 156: }
  7404                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7405  0116AE  D86A               	call	PL266	;call to abstracted procedure
  7406  0116B0  0E6A               	movlw	low settings_integrating_reset@str
  7407  0116B2  D86D               	call	PL276	;call to abstracted procedure
  7408  0116B4  EC5A  F090         	call	_display
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;settings.c: 158: state = 1;
  7412  0116B8  0E01               	movlw	1
  7413  0116BA  6F38               	movwf	settings_integrating_reset@state& (0+255),b
  7414                           
  7415                           ;settings.c: 159: }
  7416                           ;settings.c: 160: break;
  7417  0116BC  D042               	goto	l1866
  7418  0116BE                     l1867:
  7419                           
  7420                           ; BSR set to: 1
  7421                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  7422  0116BE  0100               	movlb	0	; () banked
  7423  0116C0  6B96               	clrf	settings_integrating_reset@j& (0+255),b
  7424  0116C2                     l10890:
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  7428  0116C2  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7429  0116C4  D84A               	call	PL26	;call to abstracted procedure
  7430  0116C6  A0DF               	btfss	indf2,0,c
  7431  0116C8  D031               	goto	l10916
  7432                           
  7433                           ; BSR set to: 1
  7434                           ;settings.c: 164: port[j].ctmu.flags = 0;
  7435  0116CA  0100               	movlb	0	; () banked
  7436  0116CC  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7437  0116CE  D845               	call	PL26	;call to abstracted procedure
  7438  0116D0  6ADE               	clrf	postinc2,c
  7439  0116D2  6ADD               	clrf	postdec2,c
  7440                           
  7441                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  7442  0116D4  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7443  0116D6  EC73  F099         	call	PL116	;call to abstracted procedure
  7444  0116DA  EC90  F095         	call	PL76	;call to abstracted procedure
  7445                           
  7446                           ;settings.c: 166: port[j].integrated_current = 0;
  7447  0116DE  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7448  0116E0  D844               	call	PL42	;call to abstracted procedure
  7449  0116E2  D84B               	call	PL178	;call to abstracted procedure
  7450                           
  7451                           ;settings.c: 167: port[j].integrated_time = 0;
  7452  0116E4  5196               	movf	settings_integrating_reset@j& (0+255),w,b
  7453  0116E6  ECAC  F09F         	call	PL44	;call to abstracted procedure
  7454  0116EA  D847               	call	PL178	;call to abstracted procedure
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;settings.c: 168: char str[20];
  7458                           ;settings.c: 169: char *strp;
  7459                           ;settings.c: 170: strp = str;
  7460  0116EC  0E7E               	movlw	low settings_integrating_reset@str_6192
  7461  0116EE  6F93               	movwf	settings_integrating_reset@strp_6193& (0+255),b
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  7465  0116F0  6B95               	clrf	settings_integrating_reset@i_6194& (0+255),b
  7466  0116F2                     l10902:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  7470  0116F2  5195               	movf	settings_integrating_reset@i_6194& (0+255),w,b
  7471  0116F4  D83A               	call	PL42	;call to abstracted procedure
  7472  0116F6  D85A               	call	PL314	;call to abstracted procedure
  7473  0116F8  E006               	bz	l10906
  7474                           
  7475                           ; BSR set to: 0
  7476  0116FA  C093  F060         	movff	settings_integrating_reset@strp_6193,strcpy@to
  7477  0116FE  D850               	call	PL294	;call to abstracted procedure
  7478  011700  EC9F  F0A0         	call	_strcpy	;wreg free
  7479  011704  D005               	goto	l10908
  7480  011706                     l10906:
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;settings.c: 173: else strcpy(strp, "  0  ");
  7484  011706  C093  F060         	movff	settings_integrating_reset@strp_6193,strcpy@to
  7485  01170A  D844               	call	PL288	;call to abstracted procedure
  7486  01170C  EC9F  F0A0         	call	_strcpy	;wreg free
  7487  011710                     l10908:
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;settings.c: 174: strp += 5;
  7491  011710  0E05               	movlw	5
  7492  011712  2793               	addwf	settings_integrating_reset@strp_6193& (0+255),f,b
  7493                           
  7494                           ; BSR set to: 0
  7495  011714  2B95               	incf	settings_integrating_reset@i_6194& (0+255),f,b
  7496                           
  7497                           ; BSR set to: 0
  7498  011716  0E02               	movlw	2
  7499  011718  6595               	cpfsgt	settings_integrating_reset@i_6194& (0+255),b
  7500  01171A  D7EB               	goto	l10902
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;settings.c: 175: }
  7504                           ;settings.c: 176: display(SETTINGS, "", str);
  7505  01171C  0EE6               	movlw	low (STR_19+3)
  7506  01171E  6F60               	movwf	display@str0& (0+255),b
  7507  011720  0EFF               	movlw	high (STR_19+3)
  7508  011722  6F61               	movwf	(display@str0+1)& (0+255),b
  7509  011724  0E7E               	movlw	low settings_integrating_reset@str_6192
  7510  011726  D833               	call	PL276	;call to abstracted procedure
  7511  011728  EC5A  F090         	call	_display
  7512  01172C                     l10916:
  7513                           
  7514                           ; BSR set to: 1
  7515  01172C  0100               	movlb	0	; () banked
  7516  01172E  2B96               	incf	settings_integrating_reset@j& (0+255),f,b
  7517                           
  7518                           ; BSR set to: 0
  7519  011730  0E02               	movlw	2
  7520  011732  6596               	cpfsgt	settings_integrating_reset@j& (0+255),b
  7521  011734  D7C6               	goto	l10890
  7522  011736  D005               	goto	l1866
  7523  011738                     l10922:
  7524  011738  0101               	movlb	1	; () banked
  7525  01173A  5138               	movf	settings_integrating_reset@state& (0+255),w,b
  7526                           
  7527                           ; Switch size 1, requested type "space"
  7528                           ; Number of cases is 2, Range of values is 0 to 1
  7529                           ; switch strategies available:
  7530                           ; Name         Instructions Cycles
  7531                           ; simple_byte            7     4 (average)
  7532                           ;	Chosen strategy is simple_byte
  7533  01173C  E09F               	bz	l10864
  7534  01173E  0A01               	xorlw	1	; case 1
  7535  011740  E0BE               	bz	l1867
  7536  011742                     l1866:
  7537                           
  7538                           ;settings.c: 183: if (ctmu_m.flag.press) {
  7539  011742  A027               	btfss	_ctmu_m+2,0,c
  7540  011744  0C00               	retlw	0
  7541                           
  7542                           ;settings.c: 184: ctmu_m.flags = 0;
  7543  011746  6A27               	clrf	_ctmu_m+2,c
  7544  011748  6A28               	clrf	_ctmu_m+3,c
  7545                           
  7546                           ;settings.c: 185: state = 0;
  7547  01174A  0101               	movlb	1	; () banked
  7548  01174C  6B38               	clrf	settings_integrating_reset@state& (0+255),b
  7549                           
  7550                           ;settings.c: 186: settings_flag = 0;
  7551  01174E  6B31               	clrf	_settings_flag& (0+255),b
  7552                           
  7553                           ; BSR set to: 1
  7554                           ;settings.c: 187: display(PRINT_TIME, "", "");
  7555  011750  ECD8  F095         	call	PL18	;call to abstracted procedure
  7556  011754  EC5A  F090         	call	_display
  7557                           
  7558                           ; BSR set to: 1
  7559                           ;settings.c: 188: return 1;
  7560  011758  0C01               	retlw	1
  7561  01175A                     __end_of_settings_integrating_reset:
  7562                           	opt stack 0
  7563  01175A                     PL26:
  7564                           	opt stack 16
  7565  01175A  0D17               	mullw	23
  7566  01175C  0E3F               	movlw	low (_port+2)
  7567  01175E  24F3               	addwf	prodl,w,c
  7568  011760  6ED9               	movwf	fsr2l,c
  7569  011762  0E01               	movlw	high (_port+2)
  7570  011764  20F4               	addwfc	prodh,w,c
  7571  011766  6EDA               	movwf	fsr2h,c
  7572  011768  0012               	return	
  7573  01176A                     __end_ofPL26:
  7574                           	opt stack 0
  7575  01176A                     PL42:
  7576                           	opt stack 16
  7577  01176A  0D17               	mullw	23
  7578  01176C  0E49               	movlw	low (_port+12)
  7579  01176E  24F3               	addwf	prodl,w,c
  7580  011770  6ED9               	movwf	fsr2l,c
  7581  011772  0E01               	movlw	high (_port+12)
  7582  011774  20F4               	addwfc	prodh,w,c
  7583  011776  6EDA               	movwf	fsr2h,c
  7584  011778  0012               	return	
  7585  01177A                     __end_ofPL42:
  7586                           	opt stack 0
  7587  01177A                     PL178:
  7588                           	opt stack 16
  7589  01177A  6ADE               	clrf	postinc2,c
  7590  01177C  6ADE               	clrf	postinc2,c
  7591  01177E  6ADE               	clrf	postinc2,c
  7592  011780  6ADD               	clrf	postdec2,c
  7593  011782  0012               	return	
  7594  011784                     __end_ofPL178:
  7595                           	opt stack 0
  7596  011784                     PL266:
  7597                           	opt stack 16
  7598  011784  0E81               	movlw	low STR_82
  7599  011786  6F60               	movwf	display@str0& (0+255),b
  7600  011788  0EFE               	movlw	high STR_82
  7601  01178A  6F61               	movwf	(display@str0+1)& (0+255),b
  7602  01178C  0012               	return	
  7603  01178E                     __end_ofPL266:
  7604                           	opt stack 0
  7605  01178E                     PL276:
  7606                           	opt stack 16
  7607  01178E  6F62               	movwf	display@str1& (0+255),b
  7608  011790  6B63               	clrf	(display@str1+1)& (0+255),b
  7609  011792  0C03               	retlw	3
  7610  011794                     __end_ofPL276:
  7611                           	opt stack 0
  7612  011794                     PL288:
  7613                           	opt stack 16
  7614  011794  6B61               	clrf	(strcpy@to+1)& (0+255),b
  7615  011796  0E9F               	movlw	low STR_97
  7616  011798  6F62               	movwf	strcpy@from& (0+255),b
  7617  01179A  0EFF               	movlw	high STR_97
  7618  01179C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7619  01179E  0012               	return	
  7620  0117A0                     __end_ofPL288:
  7621                           	opt stack 0
  7622  0117A0                     PL294:
  7623                           	opt stack 16
  7624  0117A0  6B61               	clrf	(strcpy@to+1)& (0+255),b
  7625  0117A2  0EB1               	movlw	low STR_96
  7626  0117A4  6F62               	movwf	strcpy@from& (0+255),b
  7627  0117A6  0EFF               	movlw	high STR_96
  7628  0117A8  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7629  0117AA  0012               	return	
  7630  0117AC                     __end_ofPL294:
  7631                           	opt stack 0
  7632  0117AC                     PL314:
  7633                           	opt stack 16
  7634  0117AC  50DE               	movf	postinc2,w,c
  7635  0117AE  10DE               	iorwf	postinc2,w,c
  7636  0117B0  10DE               	iorwf	postinc2,w,c
  7637  0117B2  10DE               	iorwf	postinc2,w,c
  7638  0117B4  0012               	return	
  7639  0117B6                     __end_ofPL314:
  7640                           	opt stack 0
  7641                           tblptru	equ	0xFF8
  7642                           tblptrh	equ	0xFF7
  7643                           tblptrl	equ	0xFF6
  7644                           tablat	equ	0xFF5
  7645                           prodh	equ	0xFF4
  7646                           prodl	equ	0xFF3
  7647                           intcon	equ	0xFF2
  7648                           intcon2	equ	0xFF1
  7649                           postinc0	equ	0xFEE
  7650                           wreg	equ	0xFE8
  7651                           indf1	equ	0xFE7
  7652                           postinc1	equ	0xFE6
  7653                           postdec1	equ	0xFE5
  7654                           fsr1h	equ	0xFE2
  7655                           fsr1l	equ	0xFE1
  7656                           indf2	equ	0xFDF
  7657                           postinc2	equ	0xFDE
  7658                           postdec2	equ	0xFDD
  7659                           plusw2	equ	0xFDB
  7660                           fsr2h	equ	0xFDA
  7661                           fsr2l	equ	0xFD9
  7662                           status	equ	0xFD8
  7663                           
  7664 ;; *************** function _settings_auto_stop *****************
  7665 ;; Defined at:
  7666 ;;		line 49 in file "settings.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  i               1   50[BANK0 ] unsigned char 
  7671 ;;  str            20   27[BANK0 ] unsigned char [20]
  7672 ;;  strp            1   48[BANK0 ] PTR unsigned char 
  7673 ;;		 -> settings_auto_stop@str_6158(20), 
  7674 ;;  i               1   49[BANK0 ] unsigned char 
  7675 ;;  j               1   51[BANK0 ] unsigned char 
  7676 ;;  str            20    7[BANK0 ] unsigned char [20]
  7677 ;;  strp            1   47[BANK0 ] PTR unsigned char 
  7678 ;;		 -> settings_auto_stop@str(20), 
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  1    wreg      unsigned char 
  7681 ;; Registers used:
  7682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : E/0
  7685 ;;		On exit  : E/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7691 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7692 ;;Total ram usage:       46 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:   12
  7695 ;; This function calls:
  7696 ;;		_display
  7697 ;;		_strcpy
  7698 ;; This function is called by:
  7699 ;;		_settings_task
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text20
  7704  0119E8                     __ptext20:
  7705                           	opt stack 0
  7706  0119E8                     _settings_auto_stop:
  7707                           	opt stack 16
  7708                           
  7709                           ;settings.c: 50: static uint8_t state = 0;
  7710                           ;settings.c: 51: switch (state) {
  7711                           
  7712                           ;incstack = 0
  7713  0119E8  D06C               	goto	l10772
  7714  0119EA                     l10714:
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;settings.c: 53: {
  7718                           ;settings.c: 54: char str[20];
  7719                           ;settings.c: 55: char *strp;
  7720                           ;settings.c: 56: strp = str;
  7721  0119EA  0E67               	movlw	low settings_auto_stop@str
  7722  0119EC  0100               	movlb	0	; () banked
  7723  0119EE  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  7727  0119F0  6B91               	clrf	settings_auto_stop@i& (0+255),b
  7728  0119F2                     l10720:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  7732  0119F2  5191               	movf	settings_auto_stop@i& (0+255),w,b
  7733  0119F4  ECEC  F08C         	call	PL4	;call to abstracted procedure
  7734  0119F8  A0DF               	btfss	indf2,0,c
  7735  0119FA  D006               	goto	l10724
  7736                           
  7737                           ; BSR set to: 1
  7738  0119FC  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  7739  011A00  D871               	call	PL94	;call to abstracted procedure
  7740  011A02  EC9F  F0A0         	call	_strcpy	;wreg free
  7741  011A06  D005               	goto	l10726
  7742  011A08                     l10724:
  7743                           
  7744                           ; BSR set to: 1
  7745                           ;settings.c: 59: else strcpy(strp, " OFF ");
  7746  011A08  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  7747  011A0C  D872               	call	PL96	;call to abstracted procedure
  7748  011A0E  EC9F  F0A0         	call	_strcpy	;wreg free
  7749  011A12                     l10726:
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;settings.c: 60: strp += 5;
  7753  011A12  0E05               	movlw	5
  7754  011A14  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  7755                           
  7756                           ; BSR set to: 0
  7757  011A16  2B91               	incf	settings_auto_stop@i& (0+255),f,b
  7758                           
  7759                           ; BSR set to: 0
  7760  011A18  0E02               	movlw	2
  7761  011A1A  6591               	cpfsgt	settings_auto_stop@i& (0+255),b
  7762  011A1C  D7EA               	goto	l10720
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;settings.c: 61: }
  7766                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  7767  011A1E  ECC2  F08B         	call	PL266	;call to abstracted procedure
  7768  011A22  0E67               	movlw	low settings_auto_stop@str
  7769  011A24  ECC7  F08B         	call	PL276	;call to abstracted procedure
  7770  011A28  EC5A  F090         	call	_display
  7771                           
  7772                           ; BSR set to: 1
  7773                           ;settings.c: 63: state = 1;
  7774  011A2C  0E01               	movlw	1
  7775  011A2E  6F37               	movwf	settings_auto_stop@state& (0+255),b
  7776                           
  7777                           ;settings.c: 64: }
  7778                           ;settings.c: 65: break;
  7779  011A30  D04D               	goto	l1822
  7780  011A32                     l1823:
  7781                           
  7782                           ; BSR set to: 1
  7783                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  7784  011A32  0100               	movlb	0	; () banked
  7785  011A34  6B93               	clrf	settings_auto_stop@j& (0+255),b
  7786  011A36                     l10740:
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  7790  011A36  5193               	movf	settings_auto_stop@j& (0+255),w,b
  7791  011A38  ECAD  F08B         	call	PL26	;call to abstracted procedure
  7792  011A3C  A0DF               	btfss	indf2,0,c
  7793  011A3E  D03B               	goto	l10766
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;settings.c: 69: port[j].ctmu.flags = 0;
  7797  011A40  0100               	movlb	0	; () banked
  7798  011A42  5193               	movf	settings_auto_stop@j& (0+255),w,b
  7799  011A44  ECAD  F08B         	call	PL26	;call to abstracted procedure
  7800  011A48  6ADE               	clrf	postinc2,c
  7801  011A4A  6ADD               	clrf	postdec2,c
  7802                           
  7803                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  7804  011A4C  5193               	movf	settings_auto_stop@j& (0+255),w,b
  7805  011A4E  ECEC  F08C         	call	PL4	;call to abstracted procedure
  7806  011A52  B0DF               	btfsc	indf2,0,c
  7807  011A54  D003               	goto	u11520
  7808  011A56  6B66               	clrf	??_settings_auto_stop& (0+255),b
  7809  011A58  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  7810  011A5A  D002               	goto	u11538
  7811  011A5C                     u11520:
  7812  011A5C  0100               	movlb	0	; () banked
  7813  011A5E  6B66               	clrf	??_settings_auto_stop& (0+255),b
  7814  011A60                     u11538:
  7815  011A60  5193               	movf	settings_auto_stop@j& (0+255),w,b
  7816  011A62  ECEC  F08C         	call	PL4	;call to abstracted procedure
  7817  011A66  50DF               	movf	223,w,c
  7818  011A68  0100               	movlb	0	; () banked
  7819  011A6A  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  7820  011A6C  0BFE               	andlw	-2
  7821  011A6E  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  7822  011A70  6EDF               	movwf	223,c
  7823                           
  7824                           ; BSR set to: 1
  7825                           ;settings.c: 71: char str[20];
  7826                           ;settings.c: 72: char *strp;
  7827                           ;settings.c: 73: strp = str;
  7828  011A72  0E7B               	movlw	low settings_auto_stop@str_6158
  7829  011A74  6F90               	movwf	settings_auto_stop@strp_6159& (0+255),b
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  7833  011A76  6B92               	clrf	settings_auto_stop@i_6160& (0+255),b
  7834  011A78                     l10752:
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  7838  011A78  5192               	movf	settings_auto_stop@i_6160& (0+255),w,b
  7839  011A7A  ECEC  F08C         	call	PL4	;call to abstracted procedure
  7840  011A7E  A0DF               	btfss	indf2,0,c
  7841  011A80  D006               	goto	l10756
  7842                           
  7843                           ; BSR set to: 1
  7844  011A82  C090  F060         	movff	settings_auto_stop@strp_6159,strcpy@to
  7845  011A86  D82E               	call	PL94	;call to abstracted procedure
  7846  011A88  EC9F  F0A0         	call	_strcpy	;wreg free
  7847  011A8C  D005               	goto	l10758
  7848  011A8E                     l10756:
  7849                           
  7850                           ; BSR set to: 1
  7851                           ;settings.c: 76: else strcpy(strp, " OFF ");
  7852  011A8E  C090  F060         	movff	settings_auto_stop@strp_6159,strcpy@to
  7853  011A92  D82F               	call	PL96	;call to abstracted procedure
  7854  011A94  EC9F  F0A0         	call	_strcpy	;wreg free
  7855  011A98                     l10758:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;settings.c: 77: strp += 5;
  7859  011A98  0E05               	movlw	5
  7860  011A9A  2790               	addwf	settings_auto_stop@strp_6159& (0+255),f,b
  7861                           
  7862                           ; BSR set to: 0
  7863  011A9C  2B92               	incf	settings_auto_stop@i_6160& (0+255),f,b
  7864                           
  7865                           ; BSR set to: 0
  7866  011A9E  0E02               	movlw	2
  7867  011AA0  6592               	cpfsgt	settings_auto_stop@i_6160& (0+255),b
  7868  011AA2  D7EA               	goto	l10752
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;settings.c: 78: }
  7872                           ;settings.c: 79: display(SETTINGS, "", str);
  7873  011AA4  0EE6               	movlw	low (STR_19+3)
  7874  011AA6  6F60               	movwf	display@str0& (0+255),b
  7875  011AA8  0EFF               	movlw	high (STR_19+3)
  7876  011AAA  6F61               	movwf	(display@str0+1)& (0+255),b
  7877  011AAC  0E7B               	movlw	low settings_auto_stop@str_6158
  7878  011AAE  ECC7  F08B         	call	PL276	;call to abstracted procedure
  7879  011AB2  EC5A  F090         	call	_display
  7880  011AB6                     l10766:
  7881                           
  7882                           ; BSR set to: 1
  7883  011AB6  0100               	movlb	0	; () banked
  7884  011AB8  2B93               	incf	settings_auto_stop@j& (0+255),f,b
  7885                           
  7886                           ; BSR set to: 0
  7887  011ABA  0E02               	movlw	2
  7888  011ABC  6593               	cpfsgt	settings_auto_stop@j& (0+255),b
  7889  011ABE  D7BB               	goto	l10740
  7890  011AC0  D005               	goto	l1822
  7891  011AC2                     l10772:
  7892  011AC2  0101               	movlb	1	; () banked
  7893  011AC4  5137               	movf	settings_auto_stop@state& (0+255),w,b
  7894                           
  7895                           ; Switch size 1, requested type "space"
  7896                           ; Number of cases is 2, Range of values is 0 to 1
  7897                           ; switch strategies available:
  7898                           ; Name         Instructions Cycles
  7899                           ; simple_byte            7     4 (average)
  7900                           ;	Chosen strategy is simple_byte
  7901  011AC6  E091               	bz	l10714
  7902  011AC8  0A01               	xorlw	1	; case 1
  7903  011ACA  E0B3               	bz	l1823
  7904  011ACC                     l1822:
  7905                           
  7906                           ;settings.c: 86: if (ctmu_m.flag.press) {
  7907  011ACC  A027               	btfss	_ctmu_m+2,0,c
  7908  011ACE  0C00               	retlw	0
  7909                           
  7910                           ;settings.c: 87: ctmu_m.flags = 0;
  7911  011AD0  6A27               	clrf	_ctmu_m+2,c
  7912  011AD2  6A28               	clrf	_ctmu_m+3,c
  7913                           
  7914                           ;settings.c: 88: state = 0;
  7915  011AD4  0101               	movlb	1	; () banked
  7916  011AD6  6B37               	clrf	settings_auto_stop@state& (0+255),b
  7917                           
  7918                           ;settings.c: 89: settings_flag = 0;
  7919  011AD8  6B31               	clrf	_settings_flag& (0+255),b
  7920                           
  7921                           ; BSR set to: 1
  7922                           ;settings.c: 90: display(PRINT_TIME, "", "");
  7923  011ADA  ECD8  F095         	call	PL18	;call to abstracted procedure
  7924  011ADE  EC5A  F090         	call	_display
  7925                           
  7926                           ; BSR set to: 1
  7927                           ;settings.c: 91: return 1;
  7928  011AE2  0C01               	retlw	1
  7929  011AE4                     __end_of_settings_auto_stop:
  7930                           	opt stack 0
  7931  011AE4                     PL94:
  7932                           	opt stack 16
  7933  011AE4  0100               	movlb	0	; () banked
  7934  011AE6  6B61               	clrf	(strcpy@to+1)& (0+255),b
  7935  011AE8  0EA5               	movlw	low STR_80
  7936  011AEA  6F62               	movwf	strcpy@from& (0+255),b
  7937  011AEC  0EFF               	movlw	high STR_80
  7938  011AEE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7939  011AF0  0012               	return	
  7940  011AF2                     __end_ofPL94:
  7941                           	opt stack 0
  7942  011AF2                     PL96:
  7943                           	opt stack 16
  7944  011AF2  0100               	movlb	0	; () banked
  7945  011AF4  6B61               	clrf	(strcpy@to+1)& (0+255),b
  7946  011AF6  0EAB               	movlw	low STR_81
  7947  011AF8  6F62               	movwf	strcpy@from& (0+255),b
  7948  011AFA  0EFF               	movlw	high STR_81
  7949  011AFC  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7950  011AFE  0012               	return	
  7951  011B00                     __end_ofPL96:
  7952                           	opt stack 0
  7953                           tblptru	equ	0xFF8
  7954                           tblptrh	equ	0xFF7
  7955                           tblptrl	equ	0xFF6
  7956                           tablat	equ	0xFF5
  7957                           prodh	equ	0xFF4
  7958                           prodl	equ	0xFF3
  7959                           intcon	equ	0xFF2
  7960                           intcon2	equ	0xFF1
  7961                           postinc0	equ	0xFEE
  7962                           wreg	equ	0xFE8
  7963                           indf1	equ	0xFE7
  7964                           postinc1	equ	0xFE6
  7965                           postdec1	equ	0xFE5
  7966                           fsr1h	equ	0xFE2
  7967                           fsr1l	equ	0xFE1
  7968                           indf2	equ	0xFDF
  7969                           postinc2	equ	0xFDE
  7970                           postdec2	equ	0xFDD
  7971                           plusw2	equ	0xFDB
  7972                           fsr2h	equ	0xFDA
  7973                           fsr2l	equ	0xFD9
  7974                           status	equ	0xFD8
  7975                           
  7976 ;; *************** function _settings_adjust_time *****************
  7977 ;; Defined at:
  7978 ;;		line 13 in file "settings.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;		None
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      unsigned char 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : E/0
  7989 ;;		On exit  : F/1
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;Total ram usage:        0 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:   16
  7999 ;; This function calls:
  8000 ;;		_RTCC_adjust_time_cursor
  8001 ;;		_RTCC_adjust_time_dec
  8002 ;;		_RTCC_adjust_time_inc
  8003 ;;		_RTCC_adjust_time_toggle
  8004 ;;		_display
  8005 ;; This function is called by:
  8006 ;;		_settings_task
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text21
  8011  012B2E                     __ptext21:
  8012                           	opt stack 0
  8013  012B2E                     _settings_adjust_time:
  8014                           	opt stack 12
  8015                           
  8016                           ;settings.c: 14: static uint8_t state = 0;
  8017                           ;settings.c: 15: switch (state) {
  8018                           
  8019                           ;incstack = 0
  8020  012B2E  D02E               	goto	l10698
  8021  012B30                     l10674:
  8022                           
  8023                           ; BSR set to: 1
  8024                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8025  012B30  D83F               	call	PL18	;call to abstracted procedure
  8026  012B32  EC5A  F090         	call	_display
  8027                           
  8028                           ; BSR set to: 1
  8029                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8030  012B36  0E8F               	movlw	low _now
  8031  012B38  0100               	movlb	0	; () banked
  8032  012B3A  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8033  012B3C  0E02               	movlw	high _now
  8034  012B3E  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8035  012B40  ECFB  F0A1         	call	_RTCC_adjust_time_toggle	;wreg free
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;settings.c: 19: state = 1;
  8039  012B44  0E01               	movlw	1
  8040  012B46  0101               	movlb	1	; () banked
  8041  012B48  6F36               	movwf	settings_adjust_time@state& (0+255),b
  8042                           
  8043                           ;settings.c: 20: break;
  8044  012B4A  D025               	goto	l1804
  8045  012B4C                     l1805:
  8046                           
  8047                           ; BSR set to: 1
  8048                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8049  012B4C  A156               	btfss	(_port+25)& (0+255),0,b
  8050  012B4E  D008               	goto	l10684
  8051                           
  8052                           ; BSR set to: 1
  8053                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8054  012B50  9156               	bcf	(_port+25)& (0+255),0,b
  8055                           
  8056                           ; BSR set to: 1
  8057                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8058  012B52  0E8F               	movlw	low _now
  8059  012B54  0100               	movlb	0	; () banked
  8060  012B56  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8061  012B58  0E02               	movlw	high _now
  8062  012B5A  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8063  012B5C  EC68  F09B         	call	_RTCC_adjust_time_cursor	;wreg free
  8064  012B60                     l10684:
  8065                           
  8066                           ;settings.c: 25: }
  8067                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8068  012B60  0101               	movlb	1	; () banked
  8069  012B62  A16D               	btfss	(_port+48)& (0+255),0,b
  8070  012B64  D008               	goto	l10690
  8071                           
  8072                           ; BSR set to: 1
  8073                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8074  012B66  916D               	bcf	(_port+48)& (0+255),0,b
  8075                           
  8076                           ; BSR set to: 1
  8077                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8078  012B68  0E8F               	movlw	low _now
  8079  012B6A  0100               	movlb	0	; () banked
  8080  012B6C  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8081  012B6E  0E02               	movlw	high _now
  8082  012B70  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8083  012B72  ECFC  F089         	call	_RTCC_adjust_time_inc	;wreg free
  8084  012B76                     l10690:
  8085                           
  8086                           ; BSR set to: 1
  8087                           ;settings.c: 29: }
  8088                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8089  012B76  A13F               	btfss	(_port+2)& (0+255),0,b
  8090  012B78  D00E               	goto	l1804
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8094  012B7A  913F               	bcf	(_port+2)& (0+255),0,b
  8095                           
  8096                           ; BSR set to: 1
  8097                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8098  012B7C  0E8F               	movlw	low _now
  8099  012B7E  0100               	movlb	0	; () banked
  8100  012B80  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8101  012B82  0E02               	movlw	high _now
  8102  012B84  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8103  012B86  ECE6  F087         	call	_RTCC_adjust_time_dec	;wreg free
  8104  012B8A  D005               	goto	l1804
  8105  012B8C                     l10698:
  8106  012B8C  0101               	movlb	1	; () banked
  8107  012B8E  5136               	movf	settings_adjust_time@state& (0+255),w,b
  8108                           
  8109                           ; Switch size 1, requested type "space"
  8110                           ; Number of cases is 2, Range of values is 0 to 1
  8111                           ; switch strategies available:
  8112                           ; Name         Instructions Cycles
  8113                           ; simple_byte            7     4 (average)
  8114                           ;	Chosen strategy is simple_byte
  8115  012B90  E0CF               	bz	l10674
  8116  012B92  0A01               	xorlw	1	; case 1
  8117  012B94  E0DB               	bz	l1805
  8118  012B96                     l1804:
  8119                           
  8120                           ; BSR set to: 1
  8121                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8122  012B96  A027               	btfss	_ctmu_m+2,0,c
  8123  012B98  0C00               	retlw	0
  8124                           
  8125                           ; BSR set to: 1
  8126                           ;settings.c: 39: ctmu_m.flags = 0;
  8127  012B9A  6A27               	clrf	_ctmu_m+2,c
  8128  012B9C  6A28               	clrf	_ctmu_m+3,c
  8129                           
  8130                           ;settings.c: 40: now.edit.flags = 0;
  8131  012B9E  0102               	movlb	2	; () banked
  8132  012BA0  6B9C               	clrf	(_now+13)& (0+255),b
  8133                           
  8134                           ;settings.c: 41: state = 0;
  8135  012BA2  0101               	movlb	1	; () banked
  8136  012BA4  6B36               	clrf	settings_adjust_time@state& (0+255),b
  8137                           
  8138                           ;settings.c: 42: settings_flag = 0;
  8139  012BA6  6B31               	clrf	_settings_flag& (0+255),b
  8140                           
  8141                           ; BSR set to: 1
  8142                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8143  012BA8  D803               	call	PL18	;call to abstracted procedure
  8144  012BAA  EC5A  F090         	call	_display
  8145                           
  8146                           ; BSR set to: 1
  8147                           ;settings.c: 44: return 1;
  8148  012BAE  0C01               	retlw	1
  8149  012BB0                     __end_of_settings_adjust_time:
  8150                           	opt stack 0
  8151  012BB0                     PL18:
  8152                           	opt stack 12
  8153  012BB0  0EE6               	movlw	low (STR_19+3)
  8154  012BB2  0100               	movlb	0	; () banked
  8155  012BB4  6F60               	movwf	display@str0& (0+255),b
  8156  012BB6  0EFF               	movlw	high (STR_19+3)
  8157  012BB8  6F61               	movwf	(display@str0+1)& (0+255),b
  8158  012BBA  0EE6               	movlw	low (STR_19+3)
  8159  012BBC  6F62               	movwf	display@str1& (0+255),b
  8160  012BBE  0EFF               	movlw	high (STR_19+3)
  8161  012BC0  6F63               	movwf	(display@str1+1)& (0+255),b
  8162  012BC2  0C01               	retlw	1
  8163  012BC4                     __end_ofPL18:
  8164                           	opt stack 0
  8165                           tblptru	equ	0xFF8
  8166                           tblptrh	equ	0xFF7
  8167                           tblptrl	equ	0xFF6
  8168                           tablat	equ	0xFF5
  8169                           prodh	equ	0xFF4
  8170                           prodl	equ	0xFF3
  8171                           intcon	equ	0xFF2
  8172                           intcon2	equ	0xFF1
  8173                           postinc0	equ	0xFEE
  8174                           wreg	equ	0xFE8
  8175                           indf1	equ	0xFE7
  8176                           postinc1	equ	0xFE6
  8177                           postdec1	equ	0xFE5
  8178                           fsr1h	equ	0xFE2
  8179                           fsr1l	equ	0xFE1
  8180                           indf2	equ	0xFDF
  8181                           postinc2	equ	0xFDE
  8182                           postdec2	equ	0xFDD
  8183                           plusw2	equ	0xFDB
  8184                           fsr2h	equ	0xFDA
  8185                           fsr2l	equ	0xFD9
  8186                           status	equ	0xFD8
  8187                           
  8188 ;; *************** function _RTCC_adjust_time_toggle *****************
  8189 ;; Defined at:
  8190 ;;		line 268 in file "../My_library/My_RTCC.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  tm              2    0[BANK0 ] PTR struct .
  8193 ;;		 -> now(14), 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;		None               void
  8198 ;; Registers used:
  8199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : F/0
  8202 ;;		On exit  : F/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;Total ram usage:        2 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:   11
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_settings_adjust_time
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text22
  8220  0143F6                     __ptext22:
  8221                           	opt stack 0
  8222  0143F6                     _RTCC_adjust_time_toggle:
  8223                           	opt stack 0
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;My_RTCC.c: 269: if (tm->edit.flags) {
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;incstack = 0
  8230  0143F6  D808               	call	PL156	;call to abstracted procedure
  8231  0143F8  50DF               	movf	indf2,w,c
  8232  0143FA  E003               	bz	l10074
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;My_RTCC.c: 270: tm->edit.flags = 0;
  8236  0143FC  D805               	call	PL156	;call to abstracted procedure
  8237  0143FE  6ADF               	clrf	indf2,c
  8238                           
  8239                           ;My_RTCC.c: 271: } else {
  8240  014400  0C00               	retlw	0
  8241  014402                     l10074:
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;My_RTCC.c: 272: tm->edit.flag.ss = 1;
  8245  014402  D802               	call	PL156	;call to abstracted procedure
  8246  014404  80DF               	bsf	indf2,0,c
  8247                           
  8248                           ; BSR set to: 0
  8249  014406  0012               	return		;funcret
  8250  014408                     __end_of_RTCC_adjust_time_toggle:
  8251                           	opt stack 0
  8252  014408                     PL156:
  8253                           	opt stack 16
  8254  014408  EE20 F00D          	lfsr	2,13
  8255  01440C  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  8256  01440E  26D9               	addwf	fsr2l,f,c
  8257  014410  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  8258  014412  22DA               	addwfc	fsr2h,f,c
  8259  014414  0012               	return	
  8260  014416                     __end_ofPL156:
  8261                           	opt stack 0
  8262                           tblptru	equ	0xFF8
  8263                           tblptrh	equ	0xFF7
  8264                           tblptrl	equ	0xFF6
  8265                           tablat	equ	0xFF5
  8266                           prodh	equ	0xFF4
  8267                           prodl	equ	0xFF3
  8268                           intcon	equ	0xFF2
  8269                           intcon2	equ	0xFF1
  8270                           postinc0	equ	0xFEE
  8271                           wreg	equ	0xFE8
  8272                           indf1	equ	0xFE7
  8273                           postinc1	equ	0xFE6
  8274                           postdec1	equ	0xFE5
  8275                           fsr1h	equ	0xFE2
  8276                           fsr1l	equ	0xFE1
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           plusw2	equ	0xFDB
  8281                           fsr2h	equ	0xFDA
  8282                           fsr2l	equ	0xFD9
  8283                           status	equ	0xFD8
  8284                           
  8285 ;; *************** function _RTCC_adjust_time_inc *****************
  8286 ;; Defined at:
  8287 ;;		line 286 in file "../My_library/My_RTCC.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;  tm              2   49[BANK0 ] PTR struct .
  8290 ;;		 -> now(14), 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  i               1   55[BANK0 ] unsigned char 
  8293 ;;  i               1   56[BANK0 ] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;		None               void
  8296 ;; Registers used:
  8297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : F/0
  8300 ;;		On exit  : F/1
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8304 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8305 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8306 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8307 ;;Total ram usage:        8 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:   15
  8310 ;; This function calls:
  8311 ;;		_RTCC_from_RTCC
  8312 ;;		_RTCC_from_epoch
  8313 ;;		___lmul
  8314 ;;		_month_length
  8315 ;; This function is called by:
  8316 ;;		_settings_adjust_time
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text23
  8321  0113F8                     __ptext23:
  8322                           	opt stack 0
  8323  0113F8                     _RTCC_adjust_time_inc:
  8324                           	opt stack 12
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;My_RTCC.c: 287: RTCC_from_RTCC(tm);
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;incstack = 0
  8331  0113F8  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  8332  0113FC  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  8333  011400  EC8C  F0A2         	call	_RTCC_from_RTCC	;wreg free
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;My_RTCC.c: 288: if (tm->edit.flag.ss) tm->epoch += 1;
  8337  011404  D87E               	call	PL56	;call to abstracted procedure
  8338  011406  A0DF               	btfss	indf2,0,c
  8339  011408  D003               	goto	l933
  8340                           
  8341                           ; BSR set to: 0
  8342  01140A  D893               	call	PL84	;call to abstracted procedure
  8343  01140C  ECB4  F09F         	call	PL272	;call to abstracted procedure
  8344  011410                     l933:
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;My_RTCC.c: 289: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  8348  011410  D878               	call	PL56	;call to abstracted procedure
  8349  011412  A2DF               	btfss	indf2,1,c
  8350  011414  D007               	goto	l10110
  8351                           
  8352                           ; BSR set to: 0
  8353  011416  0E3C               	movlw	60
  8354  011418  D88C               	call	PL84	;call to abstracted procedure
  8355  01141A  26DE               	addwf	postinc2,f,c
  8356  01141C  0E00               	movlw	0
  8357  01141E  22DE               	addwfc	postinc2,f,c
  8358  011420  22DE               	addwfc	postinc2,f,c
  8359  011422  22DE               	addwfc	postinc2,f,c
  8360  011424                     l10110:
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;My_RTCC.c: 290: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  8364  011424  D86E               	call	PL56	;call to abstracted procedure
  8365  011426  A4DF               	btfss	indf2,2,c
  8366  011428  D008               	goto	l10114
  8367                           
  8368                           ; BSR set to: 0
  8369  01142A  D883               	call	PL84	;call to abstracted procedure
  8370  01142C  0E10               	movlw	16
  8371  01142E  26DE               	addwf	postinc2,f,c
  8372  011430  0E0E               	movlw	14
  8373  011432  22DE               	addwfc	postinc2,f,c
  8374  011434  0E00               	movlw	0
  8375  011436  22DE               	addwfc	postinc2,f,c
  8376  011438  22DE               	addwfc	postinc2,f,c
  8377  01143A                     l10114:
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;My_RTCC.c: 291: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  8381  01143A  D863               	call	PL56	;call to abstracted procedure
  8382  01143C  A6DF               	btfss	indf2,3,c
  8383  01143E  D009               	goto	l10118
  8384                           
  8385                           ; BSR set to: 0
  8386  011440  D878               	call	PL84	;call to abstracted procedure
  8387  011442  0E80               	movlw	128
  8388  011444  26DE               	addwf	postinc2,f,c
  8389  011446  0E51               	movlw	81
  8390  011448  22DE               	addwfc	postinc2,f,c
  8391  01144A  0E01               	movlw	1
  8392  01144C  22DE               	addwfc	postinc2,f,c
  8393  01144E  0E00               	movlw	0
  8394  011450  22DE               	addwfc	postinc2,f,c
  8395  011452                     l10118:
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;My_RTCC.c: 292: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  8399  011452  D857               	call	PL56	;call to abstracted procedure
  8400  011454  A8DF               	btfss	indf2,4,c
  8401  011456  D010               	goto	l10122
  8402                           
  8403                           ; BSR set to: 0
  8404  011458  EE20 F009          	lfsr	2,9
  8405  01145C  D859               	call	PL66	;call to abstracted procedure
  8406  01145E  6F66               	movwf	month_length@month& (0+255),b
  8407  011460  EE20 F00A          	lfsr	2,10
  8408  011464  D855               	call	PL66	;call to abstracted procedure
  8409  011466  EC3C  F09A         	call	_month_length
  8410  01146A  EC66  F088         	call	PL8	;call to abstracted procedure
  8411  01146E  ECE6  F09D         	call	___lmul	;wreg free
  8412  011472  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  8413  011476  D852               	call	PL68	;call to abstracted procedure
  8414  011478                     l10122:
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;My_RTCC.c: 293: if (tm->edit.flag.YY) {
  8418  011478  D844               	call	PL56	;call to abstracted procedure
  8419  01147A  AADF               	btfss	indf2,5,c
  8420  01147C  D035               	goto	l10144
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;My_RTCC.c: 294: for (uint8_t i = tm->MM; i <= 12; i++) {
  8424  01147E  EE20 F009          	lfsr	2,9
  8425  011482  D846               	call	PL66	;call to abstracted procedure
  8426  011484  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  8427  011486                     l10126:
  8428                           
  8429                           ; BSR set to: 0
  8430  011486  0E0C               	movlw	12
  8431  011488  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  8432  01148A  D001               	goto	l10130
  8433  01148C  D010               	goto	l10136
  8434  01148E                     l10130:
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;My_RTCC.c: 295: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  8438  01148E  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  8439  011492  EE20 F00A          	lfsr	2,10
  8440  011496  D83C               	call	PL66	;call to abstracted procedure
  8441  011498  EC3C  F09A         	call	_month_length
  8442  01149C  EC66  F088         	call	PL8	;call to abstracted procedure
  8443  0114A0  ECE6  F09D         	call	___lmul	;wreg free
  8444  0114A4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  8445  0114A8  D839               	call	PL68	;call to abstracted procedure
  8446                           
  8447                           ; BSR set to: 0
  8448  0114AA  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  8449  0114AC  D7EC               	goto	l10126
  8450  0114AE                     l10136:
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;My_RTCC.c: 296: }
  8454                           ;My_RTCC.c: 297: for (uint8_t i = 1; i < tm->MM; i++) {
  8455  0114AE  0E01               	movlw	1
  8456  0114B0  6F97               	movwf	RTCC_adjust_time_inc@i_3680& (0+255),b
  8457  0114B2  D011               	goto	l10142
  8458  0114B4                     l10138:
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;My_RTCC.c: 298: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  8462  0114B4  C097  F066         	movff	RTCC_adjust_time_inc@i_3680,month_length@month
  8463  0114B8  EE20 F00A          	lfsr	2,10
  8464  0114BC  D829               	call	PL66	;call to abstracted procedure
  8465  0114BE  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  8466  0114C0  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  8467  0114C2  EC3C  F09A         	call	_month_length
  8468  0114C6  EC66  F088         	call	PL8	;call to abstracted procedure
  8469  0114CA  ECE6  F09D         	call	___lmul	;wreg free
  8470  0114CE  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  8471  0114D2  D824               	call	PL68	;call to abstracted procedure
  8472                           
  8473                           ; BSR set to: 0
  8474  0114D4  2B97               	incf	RTCC_adjust_time_inc@i_3680& (0+255),f,b
  8475  0114D6                     l10142:
  8476                           
  8477                           ; BSR set to: 0
  8478  0114D6  EE20 F009          	lfsr	2,9
  8479  0114DA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  8480  0114DC  26D9               	addwf	fsr2l,f,c
  8481  0114DE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  8482  0114E0  22DA               	addwfc	fsr2h,f,c
  8483  0114E2  50DE               	movf	postinc2,w,c
  8484  0114E4  5D97               	subwf	RTCC_adjust_time_inc@i_3680& (0+255),w,b
  8485  0114E6  E3E6               	bnc	l10138
  8486  0114E8                     l10144:
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;My_RTCC.c: 299: }
  8490                           ;My_RTCC.c: 300: }
  8491                           ;My_RTCC.c: 302: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  8492  0114E8  D824               	call	PL84	;call to abstracted procedure
  8493  0114EA  EC8F  F088         	call	PL188	;call to abstracted procedure
  8494  0114EE  E303               	bnc	l10148
  8495                           
  8496                           ; BSR set to: 0
  8497  0114F0  D820               	call	PL84	;call to abstracted procedure
  8498  0114F2  ECF0  F08D         	call	PL184	;call to abstracted procedure
  8499  0114F6                     l10148:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;My_RTCC.c: 303: RTCC_from_epoch(&now);
  8503  0114F6  EC9C  F088         	call	PL304	;call to abstracted procedure
  8504  0114FA  EC80  F0A2         	call	_RTCC_from_epoch	;wreg free
  8505                           
  8506                           ; BSR set to: 15
  8507                           ;My_RTCC.c: 304: time_change_flag = 1;
  8508                           
  8509                           ; BSR set to: 1
  8510  0114FE  EF98  F088         	goto	PL302	;call to abstracted procedure
  8511  011502                     __end_of_RTCC_adjust_time_inc:
  8512                           	opt stack 0
  8513  011502                     PL56:
  8514                           	opt stack 12
  8515  011502  EE20 F00D          	lfsr	2,13
  8516  011506  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  8517  011508  26D9               	addwf	fsr2l,f,c
  8518  01150A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  8519  01150C  22DA               	addwfc	fsr2h,f,c
  8520  01150E  0012               	return	
  8521  011510                     __end_ofPL56:
  8522                           	opt stack 0
  8523  011510                     PL66:
  8524                           	opt stack 12
  8525  011510  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  8526  011512  26D9               	addwf	fsr2l,f,c
  8527  011514  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  8528  011516  22DA               	addwfc	fsr2h,f,c
  8529  011518  50DF               	movf	indf2,w,c
  8530  01151A  0012               	return	
  8531  01151C                     __end_ofPL66:
  8532                           	opt stack 0
  8533  01151C                     PL68:
  8534                           	opt stack 12
  8535  01151C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  8536  011520  516D               	movf	?___lmul& (0+255),w,b
  8537  011522  26DE               	addwf	postinc2,f,c
  8538  011524  516E               	movf	(?___lmul+1)& (0+255),w,b
  8539  011526  22DE               	addwfc	postinc2,f,c
  8540  011528  516F               	movf	(?___lmul+2)& (0+255),w,b
  8541  01152A  22DE               	addwfc	postinc2,f,c
  8542  01152C  5170               	movf	(?___lmul+3)& (0+255),w,b
  8543  01152E  22DE               	addwfc	postinc2,f,c
  8544  011530  0012               	return	
  8545  011532                     __end_ofPL68:
  8546                           	opt stack 0
  8547  011532                     PL84:
  8548                           	opt stack 12
  8549  011532  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  8550  011536  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  8551  01153A  0012               	return	
  8552  01153C                     __end_ofPL84:
  8553                           	opt stack 0
  8554                           tblptru	equ	0xFF8
  8555                           tblptrh	equ	0xFF7
  8556                           tblptrl	equ	0xFF6
  8557                           tablat	equ	0xFF5
  8558                           prodh	equ	0xFF4
  8559                           prodl	equ	0xFF3
  8560                           intcon	equ	0xFF2
  8561                           intcon2	equ	0xFF1
  8562                           postinc0	equ	0xFEE
  8563                           wreg	equ	0xFE8
  8564                           indf1	equ	0xFE7
  8565                           postinc1	equ	0xFE6
  8566                           postdec1	equ	0xFE5
  8567                           fsr1h	equ	0xFE2
  8568                           fsr1l	equ	0xFE1
  8569                           indf2	equ	0xFDF
  8570                           postinc2	equ	0xFDE
  8571                           postdec2	equ	0xFDD
  8572                           plusw2	equ	0xFDB
  8573                           fsr2h	equ	0xFDA
  8574                           fsr2l	equ	0xFD9
  8575                           status	equ	0xFD8
  8576                           
  8577 ;; *************** function _RTCC_adjust_time_dec *****************
  8578 ;; Defined at:
  8579 ;;		line 307 in file "../My_library/My_RTCC.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  tm              2   49[BANK0 ] PTR struct .
  8582 ;;		 -> now(14), 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  i               1   55[BANK0 ] unsigned char 
  8585 ;;  i               1   56[BANK0 ] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;		None               void
  8588 ;; Registers used:
  8589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : F/0
  8592 ;;		On exit  : F/1
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8599 ;;Total ram usage:        8 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:   15
  8602 ;; This function calls:
  8603 ;;		_RTCC_from_RTCC
  8604 ;;		_RTCC_from_epoch
  8605 ;;		___lmul
  8606 ;;		_month_length
  8607 ;; This function is called by:
  8608 ;;		_settings_adjust_time
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text24
  8613  010FCC                     __ptext24:
  8614                           	opt stack 0
  8615  010FCC                     _RTCC_adjust_time_dec:
  8616                           	opt stack 12
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;My_RTCC.c: 308: RTCC_from_RTCC(tm);
  8620                           
  8621                           ; BSR set to: 1
  8622                           ;incstack = 0
  8623  010FCC  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  8624  010FD0  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  8625  010FD4  EC8C  F0A2         	call	_RTCC_from_RTCC	;wreg free
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;My_RTCC.c: 309: if (tm->edit.flag.ss) tm->epoch -= 1;
  8629  010FD8  D885               	call	PL54	;call to abstracted procedure
  8630  010FDA  A0DF               	btfss	indf2,0,c
  8631  010FDC  D003               	goto	l948
  8632                           
  8633                           ; BSR set to: 0
  8634  010FDE  D89A               	call	PL86	;call to abstracted procedure
  8635  010FE0  06DE               	decf	postinc2,f,c
  8636  010FE2  D8AF               	call	PL308	;call to abstracted procedure
  8637  010FE4                     l948:
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;My_RTCC.c: 310: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  8641  010FE4  D87F               	call	PL54	;call to abstracted procedure
  8642  010FE6  A2DF               	btfss	indf2,1,c
  8643  010FE8  D004               	goto	l10160
  8644                           
  8645                           ; BSR set to: 0
  8646  010FEA  0E3C               	movlw	60
  8647  010FEC  D893               	call	PL86	;call to abstracted procedure
  8648  010FEE  5EDE               	subwf	postinc2,f,c
  8649  010FF0  D8A8               	call	PL308	;call to abstracted procedure
  8650  010FF2                     l10160:
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;My_RTCC.c: 311: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  8654  010FF2  D878               	call	PL54	;call to abstracted procedure
  8655  010FF4  A4DF               	btfss	indf2,2,c
  8656  010FF6  D008               	goto	l10164
  8657                           
  8658                           ; BSR set to: 0
  8659  010FF8  D88D               	call	PL86	;call to abstracted procedure
  8660  010FFA  0E10               	movlw	16
  8661  010FFC  5EDE               	subwf	postinc2,f,c
  8662  010FFE  0E0E               	movlw	14
  8663  011000  5ADE               	subwfb	postinc2,f,c
  8664  011002  0E00               	movlw	0
  8665  011004  5ADE               	subwfb	postinc2,f,c
  8666  011006  5ADE               	subwfb	postinc2,f,c
  8667  011008                     l10164:
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;My_RTCC.c: 312: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  8671  011008  D86D               	call	PL54	;call to abstracted procedure
  8672  01100A  A6DF               	btfss	indf2,3,c
  8673  01100C  D009               	goto	l10168
  8674                           
  8675                           ; BSR set to: 0
  8676  01100E  D882               	call	PL86	;call to abstracted procedure
  8677  011010  0E80               	movlw	128
  8678  011012  5EDE               	subwf	postinc2,f,c
  8679  011014  0E51               	movlw	81
  8680  011016  5ADE               	subwfb	postinc2,f,c
  8681  011018  0E01               	movlw	1
  8682  01101A  5ADE               	subwfb	postinc2,f,c
  8683  01101C  0E00               	movlw	0
  8684  01101E  5ADE               	subwfb	postinc2,f,c
  8685  011020                     l10168:
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;My_RTCC.c: 313: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  8689  011020  D861               	call	PL54	;call to abstracted procedure
  8690  011022  A8DF               	btfss	indf2,4,c
  8691  011024  D00F               	goto	l10172
  8692                           
  8693                           ; BSR set to: 0
  8694  011026  EE20 F009          	lfsr	2,9
  8695  01102A  D863               	call	PL62	;call to abstracted procedure
  8696  01102C  6F66               	movwf	month_length@month& (0+255),b
  8697  01102E  EE20 F00A          	lfsr	2,10
  8698  011032  D85F               	call	PL62	;call to abstracted procedure
  8699  011034  EC3C  F09A         	call	_month_length
  8700  011038  D849               	call	PL8	;call to abstracted procedure
  8701  01103A  ECE6  F09D         	call	___lmul	;wreg free
  8702  01103E  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  8703  011042  D85D               	call	PL70	;call to abstracted procedure
  8704  011044                     l10172:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;My_RTCC.c: 314: if (tm->edit.flag.YY) {
  8708  011044  D84F               	call	PL54	;call to abstracted procedure
  8709  011046  AADF               	btfss	indf2,5,c
  8710  011048  D031               	goto	l10194
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;My_RTCC.c: 315: for (uint8_t i = tm->MM; i >= 1; i--) {
  8714  01104A  EE20 F009          	lfsr	2,9
  8715  01104E  D851               	call	PL62	;call to abstracted procedure
  8716  011050  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  8717  011052                     l10176:
  8718                           
  8719                           ; BSR set to: 0
  8720  011052  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  8721  011054  E00F               	bz	l10186
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;My_RTCC.c: 316: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  8725  011056  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  8726  01105A  EE20 F00A          	lfsr	2,10
  8727  01105E  D849               	call	PL62	;call to abstracted procedure
  8728  011060  EC3C  F09A         	call	_month_length
  8729  011064  D833               	call	PL8	;call to abstracted procedure
  8730  011066  ECE6  F09D         	call	___lmul	;wreg free
  8731  01106A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  8732  01106E  D847               	call	PL70	;call to abstracted procedure
  8733                           
  8734                           ; BSR set to: 0
  8735  011070  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  8736  011072  D7EF               	goto	l10176
  8737  011074                     l10186:
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;My_RTCC.c: 317: }
  8741                           ;My_RTCC.c: 318: for (uint8_t i = 12; i > tm->MM; i--) {
  8742  011074  0E0C               	movlw	12
  8743  011076  6F97               	movwf	RTCC_adjust_time_dec@i_3710& (0+255),b
  8744  011078  D010               	goto	l10192
  8745  01107A                     l10188:
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;My_RTCC.c: 319: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  8749  01107A  C097  F066         	movff	RTCC_adjust_time_dec@i_3710,month_length@month
  8750  01107E  EE20 F00A          	lfsr	2,10
  8751  011082  D837               	call	PL62	;call to abstracted procedure
  8752  011084  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  8753  011086  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  8754  011088  EC3C  F09A         	call	_month_length
  8755  01108C  D81F               	call	PL8	;call to abstracted procedure
  8756  01108E  ECE6  F09D         	call	___lmul	;wreg free
  8757  011092  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  8758  011096  D833               	call	PL70	;call to abstracted procedure
  8759                           
  8760                           ; BSR set to: 0
  8761  011098  0797               	decf	RTCC_adjust_time_dec@i_3710& (0+255),f,b
  8762  01109A                     l10192:
  8763                           
  8764                           ; BSR set to: 0
  8765  01109A  EE20 F009          	lfsr	2,9
  8766  01109E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  8767  0110A0  26D9               	addwf	fsr2l,f,c
  8768  0110A2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  8769  0110A4  22DA               	addwfc	fsr2h,f,c
  8770  0110A6  5197               	movf	RTCC_adjust_time_dec@i_3710& (0+255),w,b
  8771  0110A8  5CDE               	subwf	postinc2,w,c
  8772  0110AA  E3E7               	bnc	l10188
  8773  0110AC                     l10194:
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;My_RTCC.c: 320: }
  8777                           ;My_RTCC.c: 321: }
  8778                           ;My_RTCC.c: 323: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  8779  0110AC  D833               	call	PL86	;call to abstracted procedure
  8780  0110AE  D837               	call	PL188	;call to abstracted procedure
  8781  0110B0  E309               	bnc	l10198
  8782                           
  8783                           ; BSR set to: 0
  8784  0110B2  D830               	call	PL86	;call to abstracted procedure
  8785  0110B4  0E80               	movlw	128
  8786  0110B6  26DE               	addwf	postinc2,f,c
  8787  0110B8  0E13               	movlw	19
  8788  0110BA  22DE               	addwfc	postinc2,f,c
  8789  0110BC  0E19               	movlw	25
  8790  0110BE  22DE               	addwfc	postinc2,f,c
  8791  0110C0  0EBC               	movlw	188
  8792  0110C2  22DE               	addwfc	postinc2,f,c
  8793  0110C4                     l10198:
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;My_RTCC.c: 324: RTCC_from_epoch(&now);
  8797  0110C4  D839               	call	PL304	;call to abstracted procedure
  8798  0110C6  EC80  F0A2         	call	_RTCC_from_epoch	;wreg free
  8799                           
  8800                           ; BSR set to: 15
  8801                           ;My_RTCC.c: 325: time_change_flag = 1;
  8802                           
  8803                           ; BSR set to: 1
  8804  0110CA  D032               	goto	PL302	;call to abstracted procedure
  8805  0110CC                     __end_of_RTCC_adjust_time_dec:
  8806                           	opt stack 0
  8807  0110CC                     PL8:
  8808                           	opt stack 12
  8809  0110CC  6F6D               	movwf	___lmul@multiplier& (0+255),b
  8810  0110CE  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  8811  0110D0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  8812  0110D2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  8813  0110D4  0E80               	movlw	128
  8814  0110D6  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8815  0110D8  0E51               	movlw	81
  8816  0110DA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8817  0110DC  0E01               	movlw	1
  8818  0110DE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8819  0110E0  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8820  0110E2  0C01               	retlw	1
  8821  0110E4                     __end_ofPL8:
  8822                           	opt stack 0
  8823  0110E4                     PL54:
  8824                           	opt stack 12
  8825  0110E4  EE20 F00D          	lfsr	2,13
  8826  0110E8  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  8827  0110EA  26D9               	addwf	fsr2l,f,c
  8828  0110EC  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  8829  0110EE  22DA               	addwfc	fsr2h,f,c
  8830  0110F0  0012               	return	
  8831  0110F2                     __end_ofPL54:
  8832                           	opt stack 0
  8833  0110F2                     PL62:
  8834                           	opt stack 12
  8835  0110F2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  8836  0110F4  26D9               	addwf	fsr2l,f,c
  8837  0110F6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  8838  0110F8  22DA               	addwfc	fsr2h,f,c
  8839  0110FA  50DF               	movf	indf2,w,c
  8840  0110FC  0012               	return	
  8841  0110FE                     __end_ofPL62:
  8842                           	opt stack 0
  8843  0110FE                     PL70:
  8844                           	opt stack 12
  8845  0110FE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  8846  011102  516D               	movf	?___lmul& (0+255),w,b
  8847  011104  5EDE               	subwf	postinc2,f,c
  8848  011106  516E               	movf	(?___lmul+1)& (0+255),w,b
  8849  011108  5ADE               	subwfb	postinc2,f,c
  8850  01110A  516F               	movf	(?___lmul+2)& (0+255),w,b
  8851  01110C  5ADE               	subwfb	postinc2,f,c
  8852  01110E  5170               	movf	(?___lmul+3)& (0+255),w,b
  8853  011110  5ADE               	subwfb	postinc2,f,c
  8854  011112  0012               	return	
  8855  011114                     __end_ofPL70:
  8856                           	opt stack 0
  8857  011114                     PL86:
  8858                           	opt stack 12
  8859  011114  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  8860  011118  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  8861  01111C  0012               	return	
  8862  01111E                     __end_ofPL86:
  8863                           	opt stack 0
  8864  01111E                     PL188:
  8865                           	opt stack 12
  8866  01111E  0E80               	movlw	128
  8867  011120  5CDE               	subwf	postinc2,w,c
  8868  011122  0E13               	movlw	19
  8869  011124  58DE               	subwfb	postinc2,w,c
  8870  011126  0E19               	movlw	25
  8871  011128  58DE               	subwfb	postinc2,w,c
  8872  01112A  0EBC               	movlw	188
  8873  01112C  58DE               	subwfb	postinc2,w,c
  8874  01112E  0012               	return	
  8875  011130                     __end_ofPL188:
  8876                           	opt stack 0
  8877  011130                     PL302:
  8878                           	opt stack 12
  8879  011130  0E01               	movlw	1
  8880  011132  0101               	movlb	1	; () banked
  8881  011134  6F35               	movwf	_time_change_flag& (0+255),b
  8882  011136  0C01               	retlw	1	;funcret
  8883  011138                     __end_ofPL302:
  8884                           	opt stack 0
  8885  011138                     PL304:
  8886                           	opt stack 12
  8887  011138  0E8F               	movlw	low _now
  8888  01113A  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  8889  01113C  0E02               	movlw	high _now
  8890  01113E  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  8891  011140  0012               	return	
  8892  011142                     __end_ofPL304:
  8893                           	opt stack 0
  8894  011142                     PL308:
  8895                           	opt stack 12
  8896  011142  0E00               	movlw	0
  8897  011144  5ADE               	subwfb	postinc2,f,c
  8898  011146  5ADE               	subwfb	postinc2,f,c
  8899  011148  5ADE               	subwfb	postinc2,f,c
  8900  01114A  0C00               	retlw	0
  8901  01114C                     __end_ofPL308:
  8902                           	opt stack 0
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           prodh	equ	0xFF4
  8908                           prodl	equ	0xFF3
  8909                           intcon	equ	0xFF2
  8910                           intcon2	equ	0xFF1
  8911                           postinc0	equ	0xFEE
  8912                           wreg	equ	0xFE8
  8913                           indf1	equ	0xFE7
  8914                           postinc1	equ	0xFE6
  8915                           postdec1	equ	0xFE5
  8916                           fsr1h	equ	0xFE2
  8917                           fsr1l	equ	0xFE1
  8918                           indf2	equ	0xFDF
  8919                           postinc2	equ	0xFDE
  8920                           postdec2	equ	0xFDD
  8921                           plusw2	equ	0xFDB
  8922                           fsr2h	equ	0xFDA
  8923                           fsr2l	equ	0xFD9
  8924                           status	equ	0xFD8
  8925                           
  8926 ;; *************** function _RTCC_adjust_time_cursor *****************
  8927 ;; Defined at:
  8928 ;;		line 276 in file "../My_library/My_RTCC.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  tm              2    0[BANK0 ] PTR struct .
  8931 ;;		 -> now(14), 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;		None               void
  8936 ;; Registers used:
  8937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : F/0
  8940 ;;		On exit  : F/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8946 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8947 ;;Total ram usage:        2 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; Hardware stack levels required when called:   11
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_settings_adjust_time
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text25
  8958  0136D0                     __ptext25:
  8959                           	opt stack 0
  8960  0136D0                     _RTCC_adjust_time_cursor:
  8961                           	opt stack 0
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;My_RTCC.c: 277: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
  8965                           
  8966                           ; BSR set to: 1
  8967                           ;incstack = 0
  8968  0136D0  D82C               	call	PL20	;call to abstracted procedure
  8969  0136D2  A0DF               	btfss	indf2,0,c
  8970  0136D4  D004               	goto	l10080
  8971                           
  8972                           ; BSR set to: 0
  8973  0136D6  D829               	call	PL20	;call to abstracted procedure
  8974  0136D8  0E02               	movlw	2
  8975  0136DA  6EDF               	movwf	indf2,c
  8976  0136DC  0C02               	retlw	2
  8977  0136DE                     l10080:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;My_RTCC.c: 278: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
  8981  0136DE  D825               	call	PL20	;call to abstracted procedure
  8982  0136E0  A2DF               	btfss	indf2,1,c
  8983  0136E2  D004               	goto	l10084
  8984                           
  8985                           ; BSR set to: 0
  8986  0136E4  D822               	call	PL20	;call to abstracted procedure
  8987  0136E6  0E04               	movlw	4
  8988  0136E8  6EDF               	movwf	indf2,c
  8989  0136EA  0C04               	retlw	4
  8990  0136EC                     l10084:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;My_RTCC.c: 279: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
  8994  0136EC  D81E               	call	PL20	;call to abstracted procedure
  8995  0136EE  A4DF               	btfss	indf2,2,c
  8996  0136F0  D004               	goto	l10088
  8997                           
  8998                           ; BSR set to: 0
  8999  0136F2  D81B               	call	PL20	;call to abstracted procedure
  9000  0136F4  0E08               	movlw	8
  9001  0136F6  6EDF               	movwf	indf2,c
  9002  0136F8  0C08               	retlw	8
  9003  0136FA                     l10088:
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;My_RTCC.c: 280: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
  9007  0136FA  D817               	call	PL20	;call to abstracted procedure
  9008  0136FC  A6DF               	btfss	indf2,3,c
  9009  0136FE  D004               	goto	l10092
  9010                           
  9011                           ; BSR set to: 0
  9012  013700  D814               	call	PL20	;call to abstracted procedure
  9013  013702  0E10               	movlw	16
  9014  013704  6EDF               	movwf	indf2,c
  9015  013706  0C10               	retlw	16
  9016  013708                     l10092:
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;My_RTCC.c: 281: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
  9020  013708  D810               	call	PL20	;call to abstracted procedure
  9021  01370A  A8DF               	btfss	indf2,4,c
  9022  01370C  D004               	goto	l10096
  9023                           
  9024                           ; BSR set to: 0
  9025  01370E  D80D               	call	PL20	;call to abstracted procedure
  9026  013710  0E20               	movlw	32
  9027  013712  6EDF               	movwf	indf2,c
  9028  013714  0C20               	retlw	32
  9029  013716                     l10096:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;My_RTCC.c: 282: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
  9033  013716  D809               	call	PL20	;call to abstracted procedure
  9034  013718  AADF               	btfss	indf2,5,c
  9035  01371A  D004               	goto	l10100
  9036                           
  9037                           ; BSR set to: 0
  9038  01371C  D806               	call	PL20	;call to abstracted procedure
  9039  01371E  0E01               	movlw	1
  9040  013720  6EDF               	movwf	indf2,c
  9041  013722  0C01               	retlw	1
  9042  013724                     l10100:
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;My_RTCC.c: 283: else tm->edit.flags = 0x00;
  9046  013724  D802               	call	PL20	;call to abstracted procedure
  9047  013726  6ADF               	clrf	indf2,c
  9048                           
  9049                           ; BSR set to: 0
  9050  013728  0C00               	retlw	0	;funcret
  9051  01372A                     __end_of_RTCC_adjust_time_cursor:
  9052                           	opt stack 0
  9053  01372A                     PL20:
  9054                           	opt stack 16
  9055  01372A  EE20 F00D          	lfsr	2,13
  9056  01372E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
  9057  013730  26D9               	addwf	fsr2l,f,c
  9058  013732  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
  9059  013734  22DA               	addwfc	fsr2h,f,c
  9060  013736  0012               	return	
  9061  013738                     __end_ofPL20:
  9062                           	opt stack 0
  9063                           tblptru	equ	0xFF8
  9064                           tblptrh	equ	0xFF7
  9065                           tblptrl	equ	0xFF6
  9066                           tablat	equ	0xFF5
  9067                           prodh	equ	0xFF4
  9068                           prodl	equ	0xFF3
  9069                           intcon	equ	0xFF2
  9070                           intcon2	equ	0xFF1
  9071                           postinc0	equ	0xFEE
  9072                           wreg	equ	0xFE8
  9073                           indf1	equ	0xFE7
  9074                           postinc1	equ	0xFE6
  9075                           postdec1	equ	0xFE5
  9076                           fsr1h	equ	0xFE2
  9077                           fsr1l	equ	0xFE1
  9078                           indf2	equ	0xFDF
  9079                           postinc2	equ	0xFDE
  9080                           postdec2	equ	0xFDD
  9081                           plusw2	equ	0xFDB
  9082                           fsr2h	equ	0xFDA
  9083                           fsr2l	equ	0xFD9
  9084                           status	equ	0xFD8
  9085                           
  9086 ;; *************** function _port_button_task *****************
  9087 ;; Defined at:
  9088 ;;		line 82 in file "ChargeStation_task.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;		None
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  i               1    6[BANK0 ] unsigned char 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;		None               void
  9095 ;; Registers used:
  9096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9097 ;; Tracked objects:
  9098 ;;		On entry : F/1
  9099 ;;		On exit  : F/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9106 ;;Total ram usage:        1 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:   12
  9109 ;; This function calls:
  9110 ;;		_LED_output
  9111 ;;		_OUT
  9112 ;;		_display
  9113 ;; This function is called by:
  9114 ;;		_normal_task
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text26
  9119  012180                     __ptext26:
  9120                           	opt stack 0
  9121  012180                     _port_button_task:
  9122                           	opt stack 17
  9123                           
  9124                           ; BSR set to: 1
  9125                           ;ChargeStation_task.c: 83: uint8_t i;
  9126                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;incstack = 0
  9130  012180  0100               	movlb	0	; () banked
  9131  012182  6B66               	clrf	port_button_task@i& (0+255),b
  9132  012184                     l11286:
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
  9136  012184  5166               	movf	port_button_task@i& (0+255),w,b
  9137  012186  0D17               	mullw	23
  9138  012188  0E40               	movlw	low (_port+3)
  9139  01218A  24F3               	addwf	prodl,w,c
  9140  01218C  6ED9               	movwf	fsr2l,c
  9141  01218E  0E01               	movlw	high (_port+3)
  9142  012190  20F4               	addwfc	prodh,w,c
  9143  012192  6EDA               	movwf	fsr2h,c
  9144  012194  A0DF               	btfss	indf2,0,c
  9145  012196  D007               	goto	l11290
  9146                           
  9147                           ; BSR set to: 1
  9148                           ;ChargeStation_task.c: 87: LED_output(i, 1);
  9149  012198  0E01               	movlw	1
  9150  01219A  0100               	movlb	0	; () banked
  9151  01219C  6F60               	movwf	LED_output@value& (0+255),b
  9152  01219E  5166               	movf	port_button_task@i& (0+255),w,b
  9153  0121A0  EC31  F09E         	call	_LED_output
  9154                           
  9155                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
  9156  0121A4  D00F               	goto	l11296
  9157  0121A6                     l11290:
  9158                           
  9159                           ; BSR set to: 1
  9160  0121A6  0100               	movlb	0	; () banked
  9161  0121A8  5166               	movf	port_button_task@i& (0+255),w,b
  9162  0121AA  ECEC  F08C         	call	PL4	;call to abstracted procedure
  9163  0121AE  B2DF               	btfsc	indf2,1,c
  9164  0121B0  D009               	goto	l11296
  9165                           
  9166                           ; BSR set to: 1
  9167  0121B2  5166               	movf	port_button_task@i& (0+255),w,b
  9168  0121B4  ECEC  F08C         	call	PL4	;call to abstracted procedure
  9169  0121B8  A6DF               	btfss	indf2,3,c
  9170  0121BA  D004               	goto	l11296
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;ChargeStation_task.c: 89: LED_output(i, 0);
  9174  0121BC  6B60               	clrf	LED_output@value& (0+255),b
  9175  0121BE  5166               	movf	port_button_task@i& (0+255),w,b
  9176  0121C0  EC31  F09E         	call	_LED_output
  9177  0121C4                     l11296:
  9178                           
  9179                           ;ChargeStation_task.c: 90: }
  9180                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
  9181  0121C4  0100               	movlb	0	; () banked
  9182  0121C6  5166               	movf	port_button_task@i& (0+255),w,b
  9183  0121C8  ECAD  F08B         	call	PL26	;call to abstracted procedure
  9184  0121CC  A0DF               	btfss	indf2,0,c
  9185  0121CE  D036               	goto	l11320
  9186                           
  9187                           ; BSR set to: 1
  9188                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
  9189  0121D0  5166               	movf	port_button_task@i& (0+255),w,b
  9190  0121D2  ECAD  F08B         	call	PL26	;call to abstracted procedure
  9191  0121D6  6ADE               	clrf	postinc2,c
  9192  0121D8  6ADD               	clrf	postdec2,c
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;ChargeStation_task.c: 94: LED_output(i, 0);
  9196  0121DA  6B60               	clrf	LED_output@value& (0+255),b
  9197  0121DC  5166               	movf	port_button_task@i& (0+255),w,b
  9198  0121DE  EC31  F09E         	call	_LED_output
  9199                           
  9200                           ;ChargeStation_task.c: 97: if (print_port == i) {
  9201  0121E2  0100               	movlb	0	; () banked
  9202  0121E4  5166               	movf	port_button_task@i& (0+255),w,b
  9203  0121E6  1823               	xorwf	_print_port,w,c
  9204  0121E8  E008               	bz	l11312
  9205  0121EA  D00E               	goto	l1456
  9206  0121EC                     l11306:
  9207                           
  9208                           ; BSR set to: 1
  9209                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
  9210  0121EC  0E01               	movlw	1
  9211  0121EE  D001               	goto	L2
  9212  0121F0                     l11308:
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
  9216  0121F0  0E02               	movlw	2
  9217  0121F2                     L2:
  9218  0121F2  6F2E               	movwf	_data_item& (0+255),b
  9219                           
  9220                           ;ChargeStation_task.c: 104: break;
  9221  0121F4  D00B               	goto	l11314
  9222  0121F6                     l1462:
  9223                           
  9224                           ; BSR set to: 1
  9225                           ;ChargeStation_task.c: 107: data_item = CURRENT;
  9226  0121F6  6B2E               	clrf	_data_item& (0+255),b
  9227                           
  9228                           ;ChargeStation_task.c: 108: break;
  9229  0121F8  D009               	goto	l11314
  9230  0121FA                     l11312:
  9231                           
  9232                           ; BSR set to: 0
  9233  0121FA  0101               	movlb	1	; () banked
  9234  0121FC  512E               	movf	_data_item& (0+255),w,b
  9235                           
  9236                           ; Switch size 1, requested type "space"
  9237                           ; Number of cases is 3, Range of values is 0 to 2
  9238                           ; switch strategies available:
  9239                           ; Name         Instructions Cycles
  9240                           ; simple_byte           10     6 (average)
  9241                           ;	Chosen strategy is simple_byte
  9242  0121FE  E0F6               	bz	l11306
  9243  012200  0A01               	xorlw	1	; case 1
  9244  012202  E0F6               	bz	l11308
  9245  012204  0A03               	xorlw	3	; case 2
  9246  012206  D7F7               	goto	l1462
  9247  012208                     l1456:
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;ChargeStation_task.c: 111: print_port = i;
  9251  012208  C066  F023         	movff	port_button_task@i,_print_port
  9252  01220C                     l11314:
  9253                           
  9254                           ;ChargeStation_task.c: 112: }
  9255                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
  9256  01220C  0EE6               	movlw	low (STR_19+3)
  9257  01220E  0100               	movlb	0	; () banked
  9258  012210  6F60               	movwf	display@str0& (0+255),b
  9259  012212  0EFF               	movlw	high (STR_19+3)
  9260  012214  6F61               	movwf	(display@str0+1)& (0+255),b
  9261  012216  0EE6               	movlw	low (STR_19+3)
  9262  012218  6F62               	movwf	display@str1& (0+255),b
  9263  01221A  0EFF               	movlw	high (STR_19+3)
  9264  01221C  6F63               	movwf	(display@str1+1)& (0+255),b
  9265  01221E  0E02               	movlw	2
  9266  012220  EC5A  F090         	call	_display
  9267                           
  9268                           ; BSR set to: 1
  9269                           ;ChargeStation_task.c: 115: OUT(i, 1);
  9270  012224  0E01               	movlw	1
  9271  012226  0100               	movlb	0	; () banked
  9272  012228  6F60               	movwf	OUT@value& (0+255),b
  9273  01222A  5166               	movf	port_button_task@i& (0+255),w,b
  9274  01222C  EC7B  F09E         	call	_OUT
  9275                           
  9276                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
  9277  012230  0100               	movlb	0	; () banked
  9278  012232  5166               	movf	port_button_task@i& (0+255),w,b
  9279  012234  ECCC  F092         	call	PL52	;call to abstracted procedure
  9280  012238  6ADE               	clrf	postinc2,c
  9281  01223A  6ADD               	clrf	postdec2,c
  9282  01223C                     l11320:
  9283  01223C  0100               	movlb	0	; () banked
  9284  01223E  2B66               	incf	port_button_task@i& (0+255),f,b
  9285                           
  9286                           ; BSR set to: 0
  9287  012240  0E02               	movlw	2
  9288  012242  6566               	cpfsgt	port_button_task@i& (0+255),b
  9289  012244  D79F               	goto	l11286
  9290  012246  0C02               	retlw	2
  9291  012248                     __end_of_port_button_task:
  9292                           	opt stack 0
  9293                           tblptru	equ	0xFF8
  9294                           tblptrh	equ	0xFF7
  9295                           tblptrl	equ	0xFF6
  9296                           tablat	equ	0xFF5
  9297                           prodh	equ	0xFF4
  9298                           prodl	equ	0xFF3
  9299                           intcon	equ	0xFF2
  9300                           intcon2	equ	0xFF1
  9301                           postinc0	equ	0xFEE
  9302                           wreg	equ	0xFE8
  9303                           indf1	equ	0xFE7
  9304                           postinc1	equ	0xFE6
  9305                           postdec1	equ	0xFE5
  9306                           fsr1h	equ	0xFE2
  9307                           fsr1l	equ	0xFE1
  9308                           indf2	equ	0xFDF
  9309                           postinc2	equ	0xFDE
  9310                           postdec2	equ	0xFDD
  9311                           plusw2	equ	0xFDB
  9312                           fsr2h	equ	0xFDA
  9313                           fsr2l	equ	0xFD9
  9314                           status	equ	0xFD8
  9315                           
  9316 ;; *************** function _display *****************
  9317 ;; Defined at:
  9318 ;;		line 15 in file "LCD_print.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;  item            1    wreg     enum E8527
  9321 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
  9322 ;;		 -> STR_116(1), STR_114(9), STR_112(9), STR_110(9), 
  9323 ;;		 -> STR_108(9), STR_106(9), STR_104(9), STR_102(1), 
  9324 ;;		 -> STR_101(1), STR_98(17), STR_94(1), STR_93(1), 
  9325 ;;		 -> STR_90(17), STR_86(1), STR_85(1), STR_82(17), 
  9326 ;;		 -> STR_78(1), STR_76(1), STR_74(15), STR_47(15), 
  9327 ;;		 -> STR_43(1), STR_41(1), 
  9328 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
  9329 ;;		 -> STR_117(1), STR_115(15), STR_113(16), STR_111(17), 
  9330 ;;		 -> STR_109(16), STR_107(17), STR_105(17), STR_103(1), 
  9331 ;;		 -> settings_integrating_reset@str_6192(20), settings_integrating_reset@str(20), STR_95(1), settings_led_indicator@s
      +tr_6175(20), 
  9332 ;;		 -> settings_led_indicator@str(20), STR_87(1), settings_auto_stop@str_6158(20), settings_auto_stop@str(20), 
  9333 ;;		 -> STR_79(1), STR_77(1), STR_75(13), STR_48(14), 
  9334 ;;		 -> STR_44(1), STR_42(1), 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  item            1    4[BANK0 ] enum E8527
  9337 ;;  i               1    5[BANK0 ] unsigned char 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;		None               void
  9340 ;; Registers used:
  9341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9342 ;; Tracked objects:
  9343 ;;		On entry : F/0
  9344 ;;		On exit  : F/1
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9351 ;;Total ram usage:        6 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:   11
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_port_button_task
  9358 ;;		_normal_task
  9359 ;;		_sleep_task
  9360 ;;		_software_init
  9361 ;;		_settings_adjust_time
  9362 ;;		_settings_auto_stop
  9363 ;;		_settings_led_indicator
  9364 ;;		_settings_integrating_reset
  9365 ;;		_settings_task
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text27
  9370  0120B4                     __ptext27:
  9371                           	opt stack 0
  9372  0120B4                     _display:
  9373                           	opt stack 18
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;incstack = 0
  9377                           ;display@item stored from wreg
  9378  0120B4  6F64               	movwf	display@item& (0+255),b
  9379                           
  9380                           ;LCD_print.c: 16: print_item = item;
  9381  0120B6  C064  F0EC         	movff	display@item,_print_item
  9382                           
  9383                           ;LCD_print.c: 17: uint8_t i;
  9384                           ;LCD_print.c: 18: if (*str0) {
  9385  0120BA  D84E               	call	PL160	;call to abstracted procedure
  9386  0120BC  D841               	call	PL124	;call to abstracted procedure
  9387  0120BE  E012               	bz	l10290
  9388                           
  9389                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
  9390  0120C0  0100               	movlb	0	; () banked
  9391  0120C2  6B65               	clrf	display@i& (0+255),b
  9392  0120C4  D00A               	goto	l10286
  9393  0120C6                     l10280:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
  9397  0120C6  D848               	call	PL160	;call to abstracted procedure
  9398  0120C8                     	if	0	;tblptru may be non-zero
  9399  0120C8                     	endif
  9400  0120C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9401  0120C8  0E00               	movlw	low (__mediumconst shr (0+16))
  9402  0120CA  6EF8               	movwf	tblptru,c
  9403  0120CC                     	endif
  9404  0120CC  D852               	call	PL246	;call to abstracted procedure
  9405  0120CE  0008               	tblrd		*
  9406  0120D0  CFF5 FFDF          	movff	tablat,indf2
  9407                           
  9408                           ; BSR set to: 0
  9409  0120D4  4B60               	infsnz	display@str0& (0+255),f,b
  9410  0120D6  2B61               	incf	(display@str0+1)& (0+255),f,b
  9411                           
  9412                           ; BSR set to: 0
  9413  0120D8  2B65               	incf	display@i& (0+255),f,b
  9414  0120DA                     l10286:
  9415                           
  9416                           ; BSR set to: 0
  9417  0120DA  D83E               	call	PL160	;call to abstracted procedure
  9418  0120DC  D831               	call	PL124	;call to abstracted procedure
  9419  0120DE  E1F3               	bnz	l10280
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;LCD_print.c: 21: }
  9423                           ;LCD_print.c: 22: display_char[0][i] = '\0';
  9424  0120E0  D848               	call	PL246	;call to abstracted procedure
  9425  0120E2  6ADF               	clrf	indf2,c
  9426  0120E4                     l10290:
  9427                           
  9428                           ;LCD_print.c: 23: }
  9429                           ;LCD_print.c: 24: if (*str1) {
  9430  0120E4  D832               	call	PL158	;call to abstracted procedure
  9431  0120E6  0E0E               	movlw	(high __ramtop+-1)
  9432  0120E8  64F7               	cpfsgt	tblptrh,c
  9433  0120EA  D003               	bra	u10867
  9434  0120EC  0008               	tblrd		*
  9435  0120EE  50F5               	movf	tablat,w,c
  9436  0120F0  D002               	bra	u10860
  9437  0120F2                     u10867:
  9438  0120F2  ECD2  F08F         	call	PL24	;call to abstracted procedure
  9439  0120F6                     u10860:
  9440  0120F6  0900               	iorlw	0
  9441  0120F8  E01F               	bz	l10304
  9442                           
  9443                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
  9444  0120FA  0100               	movlb	0	; () banked
  9445  0120FC  6B65               	clrf	display@i& (0+255),b
  9446  0120FE  D00F               	goto	l10300
  9447  012100                     l10294:
  9448                           
  9449                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
  9450  012100  D824               	call	PL158	;call to abstracted procedure
  9451  012102  D82F               	call	PL214	;call to abstracted procedure
  9452  012104  0E0E               	movlw	(high __ramtop+-1)
  9453  012106  64F7               	cpfsgt	tblptrh,c
  9454  012108  D003               	bra	u10887
  9455  01210A  0008               	tblrd		*
  9456  01210C  50F5               	movf	tablat,w,c
  9457  01210E  D002               	bra	u10880
  9458  012110                     u10887:
  9459  012110  ECD2  F08F         	call	PL24	;call to abstracted procedure
  9460  012114                     u10880:
  9461  012114  6EDF               	movwf	indf2,c
  9462  012116  0100               	movlb	0	; () banked
  9463  012118  4B62               	infsnz	display@str1& (0+255),f,b
  9464  01211A  2B63               	incf	(display@str1+1)& (0+255),f,b
  9465                           
  9466                           ; BSR set to: 0
  9467  01211C  2B65               	incf	display@i& (0+255),f,b
  9468  01211E                     l10300:
  9469                           
  9470                           ; BSR set to: 0
  9471  01211E  D815               	call	PL158	;call to abstracted procedure
  9472  012120  0E0E               	movlw	(high __ramtop+-1)
  9473  012122  64F7               	cpfsgt	tblptrh,c
  9474  012124  D003               	bra	u10897
  9475  012126  0008               	tblrd		*
  9476  012128  50F5               	movf	tablat,w,c
  9477  01212A  D002               	bra	u10890
  9478  01212C                     u10897:
  9479  01212C  ECD2  F08F         	call	PL24	;call to abstracted procedure
  9480  012130                     u10890:
  9481  012130  0900               	iorlw	0
  9482  012132  E1E6               	bnz	l10294
  9483                           
  9484                           ;LCD_print.c: 27: }
  9485                           ;LCD_print.c: 28: display_char[1][i] = '\0';
  9486  012134  D816               	call	PL214	;call to abstracted procedure
  9487  012136  6ADF               	clrf	indf2,c
  9488  012138                     l10304:
  9489                           
  9490                           ;LCD_print.c: 29: }
  9491                           ;LCD_print.c: 30: display_flag = 1;
  9492  012138  0E01               	movlw	1
  9493  01213A  0101               	movlb	1	; () banked
  9494  01213C  6F2F               	movwf	_display_flag& (0+255),b
  9495                           
  9496                           ; BSR set to: 1
  9497  01213E  0C01               	retlw	1	;funcret
  9498  012140                     __end_of_display:
  9499                           	opt stack 0
  9500  012140                     PL124:
  9501                           	opt stack 18
  9502  012140                     	if	0	;tblptru may be non-zero
  9503  012140                     	endif
  9504  012140                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9505  012140  0E00               	movlw	low (__mediumconst shr (0+16))
  9506  012142  6EF8               	movwf	tblptru,c
  9507  012144                     	endif
  9508  012144  0008               	tblrd		*
  9509  012146  50F5               	movf	tablat,w,c
  9510  012148  0012               	return	
  9511  01214A                     __end_ofPL124:
  9512                           	opt stack 0
  9513  01214A                     PL158:
  9514                           	opt stack 18
  9515  01214A  C062  FFF6         	movff	display@str1,tblptrl
  9516  01214E  C063  FFF7         	movff	display@str1+1,tblptrh
  9517  012152  0E00               	movlw	low (__mediumconst shr (0+16))
  9518  012154  6EF8               	movwf	tblptru,c
  9519  012156  0012               	return	
  9520  012158                     __end_ofPL158:
  9521                           	opt stack 0
  9522  012158                     PL160:
  9523                           	opt stack 18
  9524  012158  C060  FFF6         	movff	display@str0,tblptrl
  9525  01215C  C061  FFF7         	movff	display@str0+1,tblptrh
  9526  012160  0012               	return	
  9527  012162                     __end_ofPL160:
  9528                           	opt stack 0
  9529  012162                     PL214:
  9530                           	opt stack 18
  9531  012162  0E17               	movlw	low (_display_char+20)
  9532  012164  0100               	movlb	0	; () banked
  9533  012166  2565               	addwf	display@i& (0+255),w,b
  9534  012168  6ED9               	movwf	fsr2l,c
  9535  01216A  6ADA               	clrf	fsr2h,c
  9536  01216C  0E02               	movlw	high (_display_char+20)
  9537  01216E  22DA               	addwfc	fsr2h,f,c
  9538  012170  0012               	return	
  9539  012172                     __end_ofPL214:
  9540                           	opt stack 0
  9541  012172                     PL246:
  9542                           	opt stack 18
  9543  012172  0E03               	movlw	low _display_char
  9544  012174  2565               	addwf	display@i& (0+255),w,b
  9545  012176  6ED9               	movwf	fsr2l,c
  9546  012178  6ADA               	clrf	fsr2h,c
  9547  01217A  0E02               	movlw	high _display_char
  9548  01217C  22DA               	addwfc	fsr2h,f,c
  9549  01217E  0012               	return	
  9550  012180                     __end_ofPL246:
  9551                           	opt stack 0
  9552                           tblptru	equ	0xFF8
  9553                           tblptrh	equ	0xFF7
  9554                           tblptrl	equ	0xFF6
  9555                           tablat	equ	0xFF5
  9556                           prodh	equ	0xFF4
  9557                           prodl	equ	0xFF3
  9558                           intcon	equ	0xFF2
  9559                           intcon2	equ	0xFF1
  9560                           postinc0	equ	0xFEE
  9561                           wreg	equ	0xFE8
  9562                           indf1	equ	0xFE7
  9563                           postinc1	equ	0xFE6
  9564                           postdec1	equ	0xFE5
  9565                           fsr1h	equ	0xFE2
  9566                           fsr1l	equ	0xFE1
  9567                           indf2	equ	0xFDF
  9568                           postinc2	equ	0xFDE
  9569                           postdec2	equ	0xFDD
  9570                           plusw2	equ	0xFDB
  9571                           fsr2h	equ	0xFDA
  9572                           fsr2l	equ	0xFD9
  9573                           status	equ	0xFD8
  9574                           
  9575 ;; *************** function _LED_output *****************
  9576 ;; Defined at:
  9577 ;;		line 36 in file "io.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  b               1    wreg     unsigned char 
  9580 ;;  value           1    0[BANK0 ] unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  b               1    1[BANK0 ] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;		None               void
  9585 ;; Registers used:
  9586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9587 ;; Tracked objects:
  9588 ;;		On entry : F/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9592 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9596 ;;Total ram usage:        2 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:   11
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_port_button_task
  9603 ;;		_sleep_task
  9604 ;;		_software_init
  9605 ;;		_settings_led_indicator
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text28
  9610  013C62                     __ptext28:
  9611                           	opt stack 0
  9612  013C62                     _LED_output:
  9613                           	opt stack 18
  9614                           
  9615                           ; BSR set to: 1
  9616                           ;incstack = 0
  9617                           ;LED_output@b stored from wreg
  9618  013C62  6F61               	movwf	LED_output@b& (0+255),b
  9619                           
  9620                           ;io.c: 37: port[b].flag.led_flag = value;
  9621  013C64  0100               	movlb	0	; () banked
  9622  013C66  5161               	movf	LED_output@b& (0+255),w,b
  9623  013C68  ECEC  F08C         	call	PL4	;call to abstracted procedure
  9624  013C6C  B160               	btfsc	LED_output@value& (0+255),0,b
  9625  013C6E  D002               	bra	u10775
  9626  013C70  96DF               	bcf	indf2,3,c
  9627  013C72  D001               	bra	u10776
  9628  013C74                     u10775:
  9629  013C74  86DF               	bsf	indf2,3,c
  9630  013C76                     u10776:
  9631                           
  9632                           ;io.c: 38: switch (b) {
  9633  013C76  D012               	goto	l10272
  9634  013C78                     l1635:
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;io.c: 40: LATB7 = value;
  9638  013C78  A160               	btfss	LED_output@value& (0+255),0,b
  9639  013C7A  D002               	goto	u10780
  9640  013C7C  8E8A               	bsf	3978,7,c	;volatile
  9641  013C7E  0012               	return	
  9642  013C80                     u10780:
  9643  013C80  9E8A               	bcf	3978,7,c	;volatile
  9644                           
  9645                           ;io.c: 41: break;
  9646  013C82  0012               	return	
  9647  013C84                     l1637:
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;io.c: 43: LATB6 = value;
  9651  013C84  A160               	btfss	LED_output@value& (0+255),0,b
  9652  013C86  D002               	goto	u10800
  9653  013C88  8C8A               	bsf	3978,6,c	;volatile
  9654  013C8A  0012               	return	
  9655  013C8C                     u10800:
  9656  013C8C  9C8A               	bcf	3978,6,c	;volatile
  9657                           
  9658                           ;io.c: 44: break;
  9659  013C8E  0012               	return	
  9660  013C90                     l1638:
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;io.c: 46: LATC2 = value;
  9664  013C90  A160               	btfss	LED_output@value& (0+255),0,b
  9665  013C92  D002               	goto	u10820
  9666  013C94  848B               	bsf	3979,2,c	;volatile
  9667  013C96  0012               	return	
  9668  013C98                     u10820:
  9669  013C98  948B               	bcf	3979,2,c	;volatile
  9670                           
  9671                           ;io.c: 47: break;
  9672  013C9A  0012               	return	
  9673  013C9C                     l10272:
  9674                           
  9675                           ; BSR set to: 1
  9676  013C9C  0100               	movlb	0	; () banked
  9677  013C9E  5161               	movf	LED_output@b& (0+255),w,b
  9678                           
  9679                           ; Switch size 1, requested type "space"
  9680                           ; Number of cases is 3, Range of values is 0 to 2
  9681                           ; switch strategies available:
  9682                           ; Name         Instructions Cycles
  9683                           ; simple_byte           10     6 (average)
  9684                           ;	Chosen strategy is simple_byte
  9685  013CA0  E0EB               	bz	l1635
  9686  013CA2  0A01               	xorlw	1	; case 1
  9687  013CA4  E0EF               	bz	l1637
  9688  013CA6  0A03               	xorlw	3	; case 2
  9689  013CA8  E0F3               	bz	l1638
  9690  013CAA  0012               	return		;funcret
  9691  013CAC                     __end_of_LED_output:
  9692                           	opt stack 0
  9693                           tblptru	equ	0xFF8
  9694                           tblptrh	equ	0xFF7
  9695                           tblptrl	equ	0xFF6
  9696                           tablat	equ	0xFF5
  9697                           prodh	equ	0xFF4
  9698                           prodl	equ	0xFF3
  9699                           intcon	equ	0xFF2
  9700                           intcon2	equ	0xFF1
  9701                           postinc0	equ	0xFEE
  9702                           wreg	equ	0xFE8
  9703                           indf1	equ	0xFE7
  9704                           postinc1	equ	0xFE6
  9705                           postdec1	equ	0xFE5
  9706                           fsr1h	equ	0xFE2
  9707                           fsr1l	equ	0xFE1
  9708                           indf2	equ	0xFDF
  9709                           postinc2	equ	0xFDE
  9710                           postdec2	equ	0xFDD
  9711                           plusw2	equ	0xFDB
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function _integrate_time *****************
  9717 ;; Defined at:
  9718 ;;		line 76 in file "ChargeStation_task.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  i               1    2[BANK0 ] unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;		None               void
  9725 ;; Registers used:
  9726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9727 ;; Tracked objects:
  9728 ;;		On entry : F/0
  9729 ;;		On exit  : F/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9734 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9735 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9736 ;;Total ram usage:        3 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:   11
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_normal_task
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text29
  9747  013F34                     __ptext29:
  9748                           	opt stack 0
  9749  013F34                     _integrate_time:
  9750                           	opt stack 18
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
  9754                           
  9755                           ;incstack = 0
  9756  013F34  6B62               	clrf	integrate_time@i& (0+255),b
  9757  013F36                     l11272:
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
  9761  013F36  5162               	movf	integrate_time@i& (0+255),w,b
  9762  013F38  ECEA  F082         	call	PL16	;call to abstracted procedure
  9763  013F3C  0E01               	movlw	1
  9764  013F3E  50DB               	movf	plusw2,w,c
  9765  013F40  E103               	bnz	u12120
  9766  013F42  0E65               	movlw	101
  9767  013F44  5CDE               	subwf	postinc2,w,c
  9768  013F46  E303               	bnc	l11276
  9769  013F48                     u12120:
  9770                           
  9771                           ; BSR set to: 0
  9772  013F48  5162               	movf	integrate_time@i& (0+255),w,b
  9773  013F4A  D806               	call	PL44	;call to abstracted procedure
  9774  013F4C  D80D               	call	PL272	;call to abstracted procedure
  9775  013F4E                     l11276:
  9776                           
  9777                           ; BSR set to: 0
  9778  013F4E  2B62               	incf	integrate_time@i& (0+255),f,b
  9779                           
  9780                           ; BSR set to: 0
  9781  013F50  0E02               	movlw	2
  9782  013F52  6562               	cpfsgt	integrate_time@i& (0+255),b
  9783  013F54  D7F0               	goto	l11272
  9784  013F56  0C02               	retlw	2
  9785  013F58                     __end_of_integrate_time:
  9786                           	opt stack 0
  9787  013F58                     PL44:
  9788                           	opt stack 16
  9789  013F58  0D17               	mullw	23
  9790  013F5A  0E4D               	movlw	low (_port+16)
  9791  013F5C  24F3               	addwf	prodl,w,c
  9792  013F5E  6ED9               	movwf	fsr2l,c
  9793  013F60  0E01               	movlw	high (_port+16)
  9794  013F62  20F4               	addwfc	prodh,w,c
  9795  013F64  6EDA               	movwf	fsr2h,c
  9796  013F66  0012               	return	
  9797  013F68                     __end_ofPL44:
  9798                           	opt stack 0
  9799  013F68                     PL272:
  9800                           	opt stack 12
  9801  013F68  2ADE               	incf	postinc2,f,c
  9802  013F6A  0E00               	movlw	0
  9803  013F6C  22DE               	addwfc	postinc2,f,c
  9804  013F6E  22DE               	addwfc	postinc2,f,c
  9805  013F70  22DE               	addwfc	postinc2,f,c
  9806  013F72  0C00               	retlw	0
  9807  013F74                     __end_ofPL272:
  9808                           	opt stack 0
  9809                           tblptru	equ	0xFF8
  9810                           tblptrh	equ	0xFF7
  9811                           tblptrl	equ	0xFF6
  9812                           tablat	equ	0xFF5
  9813                           prodh	equ	0xFF4
  9814                           prodl	equ	0xFF3
  9815                           intcon	equ	0xFF2
  9816                           intcon2	equ	0xFF1
  9817                           postinc0	equ	0xFEE
  9818                           wreg	equ	0xFE8
  9819                           indf1	equ	0xFE7
  9820                           postinc1	equ	0xFE6
  9821                           postdec1	equ	0xFE5
  9822                           fsr1h	equ	0xFE2
  9823                           fsr1l	equ	0xFE1
  9824                           indf2	equ	0xFDF
  9825                           postinc2	equ	0xFDE
  9826                           postdec2	equ	0xFDD
  9827                           plusw2	equ	0xFDB
  9828                           fsr2h	equ	0xFDA
  9829                           fsr2l	equ	0xFD9
  9830                           status	equ	0xFD8
  9831                           
  9832 ;; *************** function _integrate_current *****************
  9833 ;; Defined at:
  9834 ;;		line 67 in file "ChargeStation_task.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;		None
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;  i               1   15[BANK0 ] unsigned char 
  9839 ;; Return value:  Size  Location     Type
  9840 ;;		None               void
  9841 ;; Registers used:
  9842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9843 ;; Tracked objects:
  9844 ;;		On entry : F/1
  9845 ;;		On exit  : F/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9851 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;Total ram usage:        3 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; Hardware stack levels required when called:   12
  9855 ;; This function calls:
  9856 ;;		___lldiv
  9857 ;; This function is called by:
  9858 ;;		_normal_task
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text30
  9863  01326E                     __ptext30:
  9864                           	opt stack 0
  9865  01326E                     _integrate_current:
  9866                           	opt stack 17
  9867                           
  9868                           ; BSR set to: 1
  9869                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;incstack = 0
  9873  01326E  0100               	movlb	0	; () banked
  9874  013270  6B6F               	clrf	integrate_current@i& (0+255),b
  9875  013272                     l11256:
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
  9879  013272  516F               	movf	integrate_current@i& (0+255),w,b
  9880  013274  ECEA  F082         	call	PL16	;call to abstracted procedure
  9881  013278  0E01               	movlw	1
  9882  01327A  50DB               	movf	plusw2,w,c
  9883  01327C  E103               	bnz	u12100
  9884  01327E  0E65               	movlw	101
  9885  013280  5CDE               	subwf	postinc2,w,c
  9886  013282  E32C               	bnc	l11262
  9887  013284                     u12100:
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
  9891  013284  516F               	movf	integrate_current@i& (0+255),w,b
  9892  013286  ECEA  F082         	call	PL16	;call to abstracted procedure
  9893  01328A  CFDE F06D          	movff	postinc2,??_integrate_current
  9894  01328E  CFDD F06E          	movff	postdec2,??_integrate_current+1
  9895  013292  516F               	movf	integrate_current@i& (0+255),w,b
  9896  013294  D828               	call	PL116	;call to abstracted procedure
  9897  013296  20F4               	addwfc	prodh,w,c
  9898  013298  6EDA               	movwf	fsr2h,c
  9899  01329A  516D               	movf	??_integrate_current& (0+255),w,b
  9900  01329C  26DE               	addwf	postinc2,f,c
  9901  01329E  516E               	movf	(??_integrate_current+1)& (0+255),w,b
  9902  0132A0  22DE               	addwfc	postinc2,f,c
  9903  0132A2  0E00               	movlw	0
  9904  0132A4  22DE               	addwfc	postinc2,f,c
  9905  0132A6  22DE               	addwfc	postinc2,f,c
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
  9909  0132A8  516F               	movf	integrate_current@i& (0+255),w,b
  9910  0132AA  D81D               	call	PL116	;call to abstracted procedure
  9911  0132AC  20F4               	addwfc	prodh,w,c
  9912  0132AE  6EDA               	movwf	fsr2h,c
  9913  0132B0  CFDE F060          	movff	postinc2,___lldiv@dividend
  9914  0132B4  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  9915  0132B8  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  9916  0132BC  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  9917  0132C0  0E10               	movlw	16
  9918  0132C2  EC12  F083         	call	PL204	;call to abstracted procedure
  9919  0132C6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  9920  0132C8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  9921  0132CA  ECF3  F09A         	call	___lldiv	;wreg free
  9922  0132CE  516F               	movf	integrate_current@i& (0+255),w,b
  9923  0132D0  ECB5  F08B         	call	PL42	;call to abstracted procedure
  9924  0132D4  ECD7  F097         	call	PL250	;call to abstracted procedure
  9925  0132D8  C063  FFDE         	movff	?___lldiv+3,postinc2
  9926  0132DC                     l11262:
  9927                           
  9928                           ; BSR set to: 0
  9929  0132DC  2B6F               	incf	integrate_current@i& (0+255),f,b
  9930                           
  9931                           ; BSR set to: 0
  9932  0132DE  0E02               	movlw	2
  9933  0132E0  656F               	cpfsgt	integrate_current@i& (0+255),b
  9934  0132E2  D7C7               	goto	l11256
  9935  0132E4  0C02               	retlw	2
  9936  0132E6                     __end_of_integrate_current:
  9937                           	opt stack 0
  9938  0132E6                     PL116:
  9939                           	opt stack 16
  9940  0132E6  0D17               	mullw	23
  9941  0132E8  0E45               	movlw	low (_port+8)
  9942  0132EA  24F3               	addwf	prodl,w,c
  9943  0132EC  6ED9               	movwf	fsr2l,c
  9944  0132EE  0E01               	movlw	high (_port+8)
  9945  0132F0  0012               	return	
  9946  0132F2                     __end_ofPL116:
  9947                           	opt stack 0
  9948                           tblptru	equ	0xFF8
  9949                           tblptrh	equ	0xFF7
  9950                           tblptrl	equ	0xFF6
  9951                           tablat	equ	0xFF5
  9952                           prodh	equ	0xFF4
  9953                           prodl	equ	0xFF3
  9954                           intcon	equ	0xFF2
  9955                           intcon2	equ	0xFF1
  9956                           postinc0	equ	0xFEE
  9957                           wreg	equ	0xFE8
  9958                           indf1	equ	0xFE7
  9959                           postinc1	equ	0xFE6
  9960                           postdec1	equ	0xFE5
  9961                           fsr1h	equ	0xFE2
  9962                           fsr1l	equ	0xFE1
  9963                           indf2	equ	0xFDF
  9964                           postinc2	equ	0xFDE
  9965                           postdec2	equ	0xFDD
  9966                           plusw2	equ	0xFDB
  9967                           fsr2h	equ	0xFDA
  9968                           fsr2l	equ	0xFD9
  9969                           status	equ	0xFD8
  9970                           
  9971 ;; *************** function _display_LCD *****************
  9972 ;; Defined at:
  9973 ;;		line 33 in file "LCD_print.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;  str            20   40[BANK1 ] unsigned char [20]
  9978 ;;  str            40    0[BANK1 ] unsigned char [20][2]
  9979 ;; Return value:  Size  Location     Type
  9980 ;;		None               void
  9981 ;; Registers used:
  9982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9983 ;; Tracked objects:
  9984 ;;		On entry : F/1
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9989 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;      Totals:         0       4      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;Total ram usage:       84 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:   16
  9995 ;; This function calls:
  9996 ;;		_ST7032_clear
  9997 ;;		_ST7032_cursor
  9998 ;;		_ST7032_puts
  9999 ;;		___lldiv
 10000 ;;		___llmod
 10001 ;;		___lwdiv
 10002 ;;		___lwmod
 10003 ;;		_display_time_1602
 10004 ;;		_sprintf
 10005 ;; This function is called by:
 10006 ;;		_normal_task
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           	psect	text31
 10011  010348                     __ptext31:
 10012                           	opt stack 0
 10013  010348                     _display_LCD:
 10014                           	opt stack 13
 10015                           
 10016                           ; BSR set to: 1
 10017                           ;LCD_print.c: 34: ST7032_clear();
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;incstack = 0
 10021  010348  ECCA  F0A2         	call	_ST7032_clear	;wreg free
 10022                           
 10023                           ;LCD_print.c: 35: switch (print_item) {
 10024  01034C  D136               	goto	l11456
 10025  01034E                     l11408:
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;LCD_print.c: 37: case SETTINGS:
 10029                           ;LCD_print.c: 38: ST7032_cursor(0, 0);
 10030  01034E  0E00               	movlw	0
 10031  010350  6B71               	clrf	ST7032_cursor@row& (0+255),b
 10032  010352  EC0B  F0A2         	call	_ST7032_cursor
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;LCD_print.c: 39: ST7032_puts(display_char[0]);
 10036  010356  0E03               	movlw	low _display_char
 10037  010358  6F70               	movwf	ST7032_puts@s& (0+255),b
 10038  01035A  0E02               	movlw	high _display_char
 10039  01035C  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 10040  01035E  ECBA  F09F         	call	_ST7032_puts	;wreg free
 10041                           
 10042                           ;LCD_print.c: 40: ST7032_cursor(0, 1);
 10043  010362  D95C               	call	PL170	;call to abstracted procedure
 10044  010364  EC0B  F0A2         	call	_ST7032_cursor
 10045                           
 10046                           ;LCD_print.c: 41: ST7032_puts(display_char[1]);
 10047  010368  0E17               	movlw	low (_display_char+20)
 10048  01036A  6F70               	movwf	ST7032_puts@s& (0+255),b
 10049  01036C  0E02               	movlw	high (_display_char+20)
 10050  01036E  D122               	goto	L4
 10051  010370                     l11414:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;LCD_print.c: 44: {
 10055                           ;LCD_print.c: 45: char str[2][20];
 10056                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 10057  010370  0E8F               	movlw	low _now
 10058  010372  6FB2               	movwf	display_time_1602@tm& (0+255),b
 10059  010374  0E02               	movlw	high _now
 10060  010376  6FB3               	movwf	(display_time_1602@tm+1)& (0+255),b
 10061  010378  0E94               	movlw	low display_LCD@str
 10062  01037A  6FB4               	movwf	display_time_1602@line0& (0+255),b
 10063  01037C  0E01               	movlw	high display_LCD@str
 10064  01037E  6FB5               	movwf	(display_time_1602@line0+1)& (0+255),b
 10065  010380  0EA8               	movlw	low (display_LCD@str+20)
 10066  010382  6FB6               	movwf	display_time_1602@line1& (0+255),b
 10067  010384  0E01               	movlw	high (display_LCD@str+20)
 10068  010386  6FB7               	movwf	(display_time_1602@line1+1)& (0+255),b
 10069  010388  EC47  F086         	call	_display_time_1602	;wreg free
 10070                           
 10071                           ;LCD_print.c: 47: ST7032_cursor(0, 0);
 10072  01038C  0E00               	movlw	0
 10073  01038E  0100               	movlb	0	; () banked
 10074  010390  6B71               	clrf	ST7032_cursor@row& (0+255),b
 10075  010392  EC0B  F0A2         	call	_ST7032_cursor
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;LCD_print.c: 48: ST7032_puts(str[0]);
 10079  010396  0E94               	movlw	low display_LCD@str
 10080  010398  6F70               	movwf	ST7032_puts@s& (0+255),b
 10081  01039A  0E01               	movlw	high display_LCD@str
 10082  01039C  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 10083  01039E  ECBA  F09F         	call	_ST7032_puts	;wreg free
 10084                           
 10085                           ;LCD_print.c: 49: ST7032_cursor(0, 1);
 10086  0103A2  D93C               	call	PL170	;call to abstracted procedure
 10087  0103A4  EC0B  F0A2         	call	_ST7032_cursor
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;LCD_print.c: 50: ST7032_puts(str[1]);
 10091  0103A8  0EA8               	movlw	low (display_LCD@str+20)
 10092  0103AA  6F70               	movwf	ST7032_puts@s& (0+255),b
 10093  0103AC  0E01               	movlw	high (display_LCD@str+20)
 10094  0103AE  D102               	goto	L4
 10095  0103B0                     l11424:
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;LCD_print.c: 54: {
 10099                           ;LCD_print.c: 55: char str[20];
 10100                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 10101                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 10102                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 10103                           ;LCD_print.c: 59: };
 10104                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 10105                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 10106                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 10107  0103B0  D948               	call	PL346	;call to abstracted procedure
 10108  0103B2  0EB7               	movlw	low STR_70
 10109  0103B4  6F85               	movwf	sprintf@f& (0+255),b
 10110  0103B6  0EFF               	movlw	high STR_70
 10111  0103B8  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10112  0103BA  5023               	movf	_print_port,w,c
 10113  0103BC  ECEC  F08C         	call	PL4	;call to abstracted procedure
 10114  0103C0  0E01               	movlw	1
 10115  0103C2  A0DF               	btfss	indf2,0,c
 10116  0103C4  0E00               	movlw	0
 10117  0103C6  0D3C               	mullw	60
 10118  0103C8  0E81               	movlw	low display_LCD@port_char
 10119  0103CA  0100               	movlb	0	; () banked
 10120  0103CC  6FB8               	movwf	??_display_LCD& (0+255),b
 10121  0103CE  0EFA               	movlw	high display_LCD@port_char
 10122  0103D0  6FB9               	movwf	(??_display_LCD+1)& (0+255),b
 10123  0103D2  50F3               	movf	prodl,w,c
 10124  0103D4  27B8               	addwf	??_display_LCD& (0+255),f,b
 10125  0103D6  50F4               	movf	prodh,w,c
 10126  0103D8  23B9               	addwfc	(??_display_LCD+1)& (0+255),f,b
 10127  0103DA  5023               	movf	_print_port,w,c
 10128  0103DC  0D14               	mullw	20
 10129  0103DE  50F3               	movf	prodl,w,c
 10130  0103E0  25B8               	addwf	??_display_LCD& (0+255),w,b
 10131  0103E2  6F87               	movwf	(?_sprintf+4)& (0+255),b
 10132  0103E4  50F4               	movf	prodh,w,c
 10133  0103E6  21B9               	addwfc	(??_display_LCD+1)& (0+255),w,b
 10134  0103E8  6F88               	movwf	(?_sprintf+5)& (0+255),b
 10135  0103EA  5023               	movf	_print_port,w,c
 10136  0103EC  D8F3               	call	PL16	;call to abstracted procedure
 10137  0103EE  0E01               	movlw	1
 10138  0103F0  50DB               	movf	plusw2,w,c
 10139  0103F2  E103               	bnz	u12321
 10140  0103F4  0E65               	movlw	101
 10141  0103F6  5CDE               	subwf	postinc2,w,c
 10142  0103F8  E302               	bnc	u12320
 10143  0103FA                     u12321:
 10144  0103FA  0E01               	movlw	1
 10145  0103FC  D001               	goto	u12330
 10146  0103FE                     u12320:
 10147  0103FE  0E00               	movlw	0
 10148  010400                     u12330:
 10149  010400  0D05               	mullw	5
 10150  010402  0ED2               	movlw	low display_LCD@onoff
 10151  010404  24F3               	addwf	prodl,w,c
 10152  010406  6F89               	movwf	(?_sprintf+6)& (0+255),b
 10153  010408  0EFB               	movlw	high display_LCD@onoff
 10154  01040A  20F4               	addwfc	prodh,w,c
 10155  01040C  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 10156  01040E  EC00  F080         	call	_sprintf	;wreg free
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;LCD_print.c: 63: ST7032_cursor(0, 0);
 10160  010412  0E00               	movlw	0
 10161  010414  6B71               	clrf	ST7032_cursor@row& (0+255),b
 10162  010416  EC0B  F0A2         	call	_ST7032_cursor
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;LCD_print.c: 64: ST7032_puts(str);
 10166  01041A  0EBC               	movlw	low display_LCD@str_5634
 10167  01041C  6F70               	movwf	ST7032_puts@s& (0+255),b
 10168  01041E  0E01               	movlw	high display_LCD@str_5634
 10169  010420  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 10170  010422  ECBA  F09F         	call	_ST7032_puts	;wreg free
 10171                           
 10172                           ;LCD_print.c: 65: switch (data_item) {
 10173  010426  D0B6               	goto	l11448
 10174  010428                     l11430:
 10175                           
 10176                           ; BSR set to: 1
 10177                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 10178  010428  D906               	call	PL298	;call to abstracted procedure
 10179  01042A  0E3D               	movlw	low STR_71
 10180  01042C  6F85               	movwf	sprintf@f& (0+255),b
 10181  01042E  0EFF               	movlw	high STR_71
 10182  010430  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10183  010432  5023               	movf	_print_port,w,c
 10184  010434  D8CF               	call	PL16	;call to abstracted procedure
 10185  010436  EC69  F08E         	call	PL180	;call to abstracted procedure
 10186  01043A  ECA0  F09E         	call	___lwdiv	;wreg free
 10187  01043E  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 10188  010442  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 10189  010446  5023               	movf	_print_port,w,c
 10190  010448  D8C5               	call	PL16	;call to abstracted procedure
 10191  01044A  EC72  F08E         	call	PL186	;call to abstracted procedure
 10192  01044E  ECF9  F09F         	call	___lwmod	;wreg free
 10193  010452  C060  F089         	movff	?___lwmod,?_sprintf+6
 10194  010456  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 10195  01045A  EC00  F080         	call	_sprintf	;wreg free
 10196                           
 10197                           ;LCD_print.c: 68: break;
 10198  01045E  D0A4               	goto	l11450
 10199  010460                     l11432:
 10200                           
 10201                           ; BSR set to: 1
 10202                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 10203  010460  D8EA               	call	PL298	;call to abstracted procedure
 10204  010462  0E44               	movlw	low (STR_68+15)
 10205  010464  6F85               	movwf	sprintf@f& (0+255),b
 10206  010466  0EFE               	movlw	high (STR_68+15)
 10207  010468  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10208  01046A  5023               	movf	_print_port,w,c
 10209  01046C  ECB5  F08B         	call	PL42	;call to abstracted procedure
 10210  010470  CFDE F087          	movff	postinc2,?_sprintf+4
 10211  010474  CFDE F088          	movff	postinc2,?_sprintf+5
 10212  010478  CFDE F089          	movff	postinc2,?_sprintf+6
 10213  01047C  CFDE F08A          	movff	postinc2,?_sprintf+7
 10214  010480  EC00  F080         	call	_sprintf	;wreg free
 10215                           
 10216                           ;LCD_print.c: 71: break;
 10217  010484  D091               	goto	l11450
 10218  010486                     l11434:
 10219                           
 10220                           ; BSR set to: 1
 10221                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10222                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10223                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10224                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10225                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10226  010486  0E10               	movlw	16
 10227  010488  0100               	movlb	0	; () banked
 10228  01048A  D8CC               	call	PL204	;call to abstracted procedure
 10229  01048C  D8AB               	call	PL28	;call to abstracted procedure
 10230  01048E  ECF3  F09A         	call	___lldiv	;wreg free
 10231  010492  C060  F1D0         	movff	?___lldiv,_display_LCD$7071
 10232  010496  C061  F1D1         	movff	?___lldiv+1,_display_LCD$7071+1
 10233  01049A  C062  F1D2         	movff	?___lldiv+2,_display_LCD$7071+2
 10234  01049E  C063  F1D3         	movff	?___lldiv+3,_display_LCD$7071+3
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10238                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10239                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10240                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10241                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10242  0104A2  C1D0  F060         	movff	_display_LCD$7071,___lldiv@dividend
 10243  0104A6  C1D1  F061         	movff	_display_LCD$7071+1,___lldiv@dividend+1
 10244  0104AA  C1D2  F062         	movff	_display_LCD$7071+2,___lldiv@dividend+2
 10245  0104AE  C1D3  F063         	movff	_display_LCD$7071+3,___lldiv@dividend+3
 10246  0104B2  0E18               	movlw	24
 10247  0104B4  ECD2  F097         	call	PL208	;call to abstracted procedure
 10248  0104B8  ECF3  F09A         	call	___lldiv	;wreg free
 10249  0104BC  C060  F1D4         	movff	?___lldiv,_display_LCD$7072
 10250  0104C0  C061  F1D5         	movff	?___lldiv+1,_display_LCD$7072+1
 10251  0104C4  C062  F1D6         	movff	?___lldiv+2,_display_LCD$7072+2
 10252  0104C8  C063  F1D7         	movff	?___lldiv+3,_display_LCD$7072+3
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10256                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10257                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10258                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10259                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10260  0104CC  0E10               	movlw	16
 10261  0104CE  D8AA               	call	PL204	;call to abstracted procedure
 10262  0104D0  D889               	call	PL28	;call to abstracted procedure
 10263  0104D2  ECF3  F09A         	call	___lldiv	;wreg free
 10264  0104D6  D899               	call	PL90	;call to abstracted procedure
 10265  0104D8  0E18               	movlw	24
 10266  0104DA  D8A8               	call	PL216	;call to abstracted procedure
 10267  0104DC  EC34  F09C         	call	___llmod	;wreg free
 10268  0104E0  C06D  F1D8         	movff	?___llmod,_display_LCD$7073
 10269  0104E4  C06E  F1D9         	movff	?___llmod+1,_display_LCD$7073+1
 10270  0104E8  C06F  F1DA         	movff	?___llmod+2,_display_LCD$7073+2
 10271  0104EC  C070  F1DB         	movff	?___llmod+3,_display_LCD$7073+3
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10275                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10276                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10277                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10278                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10279  0104F0  0E3C               	movlw	60
 10280  0104F2  6F64               	movwf	___lldiv@divisor& (0+255),b
 10281  0104F4  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 10282  0104F6  D876               	call	PL28	;call to abstracted procedure
 10283  0104F8  ECF3  F09A         	call	___lldiv	;wreg free
 10284  0104FC  D886               	call	PL90	;call to abstracted procedure
 10285  0104FE  0E3C               	movlw	60
 10286  010500  D895               	call	PL216	;call to abstracted procedure
 10287  010502  EC34  F09C         	call	___llmod	;wreg free
 10288  010506  C06D  F1DC         	movff	?___llmod,_display_LCD$7074
 10289  01050A  C06E  F1DD         	movff	?___llmod+1,_display_LCD$7074+1
 10290  01050E  C06F  F1DE         	movff	?___llmod+2,_display_LCD$7074+2
 10291  010512  C070  F1DF         	movff	?___llmod+3,_display_LCD$7074+3
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10295                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10296                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10297                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10298                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10299  010516  5023               	movf	_print_port,w,c
 10300  010518  ECAC  F09F         	call	PL44	;call to abstracted procedure
 10301  01051C  CFDE F06D          	movff	postinc2,___llmod@dividend
 10302  010520  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 10303  010524  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 10304  010528  CFDE F070          	movff	postinc2,___llmod@dividend+3
 10305  01052C  0E3C               	movlw	60
 10306  01052E  D87E               	call	PL216	;call to abstracted procedure
 10307  010530  EC34  F09C         	call	___llmod	;wreg free
 10308  010534  C06D  F1E0         	movff	?___llmod,_display_LCD$7075
 10309  010538  C06E  F1E1         	movff	?___llmod+1,_display_LCD$7075+1
 10310  01053C  C06F  F1E2         	movff	?___llmod+2,_display_LCD$7075+2
 10311  010540  C070  F1E3         	movff	?___llmod+3,_display_LCD$7075+3
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 10315                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 10316                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 10317                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 10318                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 10319  010544  D87E               	call	PL346	;call to abstracted procedure
 10320  010546  0E01               	movlw	low STR_73
 10321  010548  6F85               	movwf	sprintf@f& (0+255),b
 10322  01054A  0EFE               	movlw	high STR_73
 10323  01054C  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10324  01054E  C1D4  F087         	movff	_display_LCD$7072,?_sprintf+4
 10325  010552  C1D5  F088         	movff	_display_LCD$7072+1,?_sprintf+5
 10326  010556  C1D6  F089         	movff	_display_LCD$7072+2,?_sprintf+6
 10327  01055A  C1D7  F08A         	movff	_display_LCD$7072+3,?_sprintf+7
 10328  01055E  C1D8  F08B         	movff	_display_LCD$7073,?_sprintf+8
 10329  010562  C1D9  F08C         	movff	_display_LCD$7073+1,?_sprintf+9
 10330  010566  C1DA  F08D         	movff	_display_LCD$7073+2,?_sprintf+10
 10331  01056A  C1DB  F08E         	movff	_display_LCD$7073+3,?_sprintf+11
 10332  01056E  C1DC  F08F         	movff	_display_LCD$7074,?_sprintf+12
 10333  010572  C1DD  F090         	movff	_display_LCD$7074+1,?_sprintf+13
 10334  010576  C1DE  F091         	movff	_display_LCD$7074+2,?_sprintf+14
 10335  01057A  C1DF  F092         	movff	_display_LCD$7074+3,?_sprintf+15
 10336  01057E  C1E0  F093         	movff	_display_LCD$7075,?_sprintf+16
 10337  010582  C1E1  F094         	movff	_display_LCD$7075+1,?_sprintf+17
 10338  010586  C1E2  F095         	movff	_display_LCD$7075+2,?_sprintf+18
 10339  01058A  C1E3  F096         	movff	_display_LCD$7075+3,?_sprintf+19
 10340  01058E  EC00  F080         	call	_sprintf	;wreg free
 10341                           
 10342                           ;LCD_print.c: 78: break;
 10343  010592  D00A               	goto	l11450
 10344  010594                     l11448:
 10345  010594  0101               	movlb	1	; () banked
 10346  010596  512E               	movf	_data_item& (0+255),w,b
 10347                           
 10348                           ; Switch size 1, requested type "space"
 10349                           ; Number of cases is 3, Range of values is 0 to 2
 10350                           ; switch strategies available:
 10351                           ; Name         Instructions Cycles
 10352                           ; simple_byte           10     6 (average)
 10353                           ;	Chosen strategy is simple_byte
 10354  010598  E101 D746          	bz	l11430
 10355  01059C  0A01               	xorlw	1	; case 1
 10356  01059E  E101 D75F          	bz	l11432
 10357  0105A2  0A03               	xorlw	3	; case 2
 10358  0105A4  E101 D76F          	bz	l11434
 10359  0105A8                     l11450:
 10360                           
 10361                           ;LCD_print.c: 80: ST7032_cursor(0, 1);
 10362  0105A8  D839               	call	PL170	;call to abstracted procedure
 10363  0105AA  EC0B  F0A2         	call	_ST7032_cursor
 10364                           
 10365                           ; BSR set to: 0
 10366                           ;LCD_print.c: 81: ST7032_puts(str);
 10367  0105AE  0EBC               	movlw	low display_LCD@str_5634
 10368  0105B0  6F70               	movwf	ST7032_puts@s& (0+255),b
 10369  0105B2  0E01               	movlw	high display_LCD@str_5634
 10370  0105B4                     L4:
 10371  0105B4  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 10372  0105B6  EFC7  F09F         	goto	l10214	;wreg free
 10373  0105BA                     l11456:
 10374                           
 10375                           ; BSR set to: 0
 10376  0105BA  51EC               	movf	_print_item& (0+255),w,b
 10377                           
 10378                           ; Switch size 1, requested type "space"
 10379                           ; Number of cases is 4, Range of values is 0 to 3
 10380                           ; switch strategies available:
 10381                           ; Name         Instructions Cycles
 10382                           ; simple_byte           13     7 (average)
 10383                           ;	Chosen strategy is simple_byte
 10384  0105BC  E101 D6C7          	bz	l11408
 10385  0105C0  0A01               	xorlw	1	; case 1
 10386  0105C2  E101 D6D5          	bz	l11414
 10387  0105C6  0A03               	xorlw	3	; case 2
 10388  0105C8  E101 D6F2          	bz	l11424
 10389  0105CC  0A01               	xorlw	1	; case 3
 10390  0105CE  E101 D6BE          	bz	l11408
 10391  0105D2  0012               	return		;funcret
 10392  0105D4                     __end_of_display_LCD:
 10393                           	opt stack 0
 10394  0105D4                     PL16:
 10395                           	opt stack 18
 10396  0105D4  0D17               	mullw	23
 10397  0105D6  0E43               	movlw	low (_port+6)
 10398  0105D8  24F3               	addwf	prodl,w,c
 10399  0105DA  6ED9               	movwf	fsr2l,c
 10400  0105DC  0E01               	movlw	high (_port+6)
 10401  0105DE  20F4               	addwfc	prodh,w,c
 10402  0105E0  6EDA               	movwf	fsr2h,c
 10403  0105E2  0012               	return	
 10404  0105E4                     __end_ofPL16:
 10405                           	opt stack 0
 10406  0105E4                     PL28:
 10407                           	opt stack 13
 10408  0105E4  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 10409  0105E6  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 10410  0105E8  5023               	movf	_print_port,w,c
 10411  0105EA  0D17               	mullw	23
 10412  0105EC  0E4D               	movlw	low (_port+16)
 10413  0105EE  24F3               	addwf	prodl,w,c
 10414  0105F0  6ED9               	movwf	fsr2l,c
 10415  0105F2  0E01               	movlw	high (_port+16)
 10416  0105F4  20F4               	addwfc	prodh,w,c
 10417  0105F6  6EDA               	movwf	fsr2h,c
 10418  0105F8  CFDE F060          	movff	postinc2,___lldiv@dividend
 10419  0105FC  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 10420  010600  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 10421  010604  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 10422  010608  0012               	return	
 10423  01060A                     __end_ofPL28:
 10424                           	opt stack 0
 10425  01060A                     PL90:
 10426                           	opt stack 13
 10427  01060A  C060  F06D         	movff	?___lldiv,___llmod@dividend
 10428  01060E  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 10429  010612  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 10430  010616  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 10431  01061A  0012               	return	
 10432  01061C                     __end_ofPL90:
 10433                           	opt stack 0
 10434  01061C                     PL170:
 10435                           	opt stack 15
 10436  01061C  0E01               	movlw	1
 10437  01061E  0100               	movlb	0	; () banked
 10438  010620  6F71               	movwf	ST7032_cursor@row& (0+255),b
 10439  010622  0C00               	retlw	0
 10440  010624                     __end_ofPL170:
 10441                           	opt stack 0
 10442  010624                     PL204:
 10443                           	opt stack 17
 10444  010624  6F64               	movwf	___lldiv@divisor& (0+255),b
 10445  010626  0E0E               	movlw	14
 10446  010628  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 10447  01062A  0C0E               	retlw	14
 10448  01062C                     __end_ofPL204:
 10449                           	opt stack 0
 10450  01062C                     PL216:
 10451                           	opt stack 13
 10452  01062C  6F71               	movwf	___llmod@divisor& (0+255),b
 10453  01062E  6B72               	clrf	(___llmod@divisor+1)& (0+255),b
 10454  010630  6B73               	clrf	(___llmod@divisor+2)& (0+255),b
 10455  010632  6B74               	clrf	(___llmod@divisor+3)& (0+255),b
 10456  010634  0012               	return	
 10457  010636                     __end_ofPL216:
 10458                           	opt stack 0
 10459  010636                     PL298:
 10460                           	opt stack 13
 10461  010636  0EBC               	movlw	low display_LCD@str_5634
 10462  010638  0100               	movlb	0	; () banked
 10463  01063A  6F83               	movwf	sprintf@sp& (0+255),b
 10464  01063C  0E01               	movlw	high display_LCD@str_5634
 10465  01063E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 10466  010640  0012               	return	
 10467  010642                     __end_ofPL298:
 10468                           	opt stack 0
 10469  010642                     PL346:
 10470                           	opt stack 13
 10471  010642  0EBC               	movlw	low display_LCD@str_5634
 10472  010644  6F83               	movwf	sprintf@sp& (0+255),b
 10473  010646  0E01               	movlw	high display_LCD@str_5634
 10474  010648  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 10475  01064A  0012               	return	
 10476  01064C                     __end_ofPL346:
 10477                           	opt stack 0
 10478                           tblptru	equ	0xFF8
 10479                           tblptrh	equ	0xFF7
 10480                           tblptrl	equ	0xFF6
 10481                           tablat	equ	0xFF5
 10482                           prodh	equ	0xFF4
 10483                           prodl	equ	0xFF3
 10484                           intcon	equ	0xFF2
 10485                           intcon2	equ	0xFF1
 10486                           postinc0	equ	0xFEE
 10487                           wreg	equ	0xFE8
 10488                           indf1	equ	0xFE7
 10489                           postinc1	equ	0xFE6
 10490                           postdec1	equ	0xFE5
 10491                           fsr1h	equ	0xFE2
 10492                           fsr1l	equ	0xFE1
 10493                           indf2	equ	0xFDF
 10494                           postinc2	equ	0xFDE
 10495                           postdec2	equ	0xFDD
 10496                           plusw2	equ	0xFDB
 10497                           fsr2h	equ	0xFDA
 10498                           fsr2l	equ	0xFD9
 10499                           status	equ	0xFD8
 10500                           
 10501 ;; *************** function _display_time_1602 *****************
 10502 ;; Defined at:
 10503 ;;		line 243 in file "../My_library/My_RTCC.c"
 10504 ;; Parameters:    Size  Location     Type
 10505 ;;  tm              2   82[BANK0 ] PTR struct .
 10506 ;;		 -> now(14), 
 10507 ;;  line0           2   84[BANK0 ] PTR unsigned char 
 10508 ;;		 -> display_LCD@str(40), 
 10509 ;;  line1           2   86[BANK0 ] PTR unsigned char 
 10510 ;;		 -> display_LCD@str(40), 
 10511 ;; Auto vars:     Size  Location     Type
 10512 ;;		None
 10513 ;; Return value:  Size  Location     Type
 10514 ;;		None               void
 10515 ;; Registers used:
 10516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10517 ;; Tracked objects:
 10518 ;;		On entry : F/0
 10519 ;;		On exit  : 0/0
 10520 ;;		Unchanged: 0/0
 10521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10522 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10525 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10526 ;;Total ram usage:        6 bytes
 10527 ;; Hardware stack levels used:    1
 10528 ;; Hardware stack levels required when called:   15
 10529 ;; This function calls:
 10530 ;;		_RTCC_from_RTCC
 10531 ;;		_display_dec
 10532 ;;		_strcat
 10533 ;;		_strcpy
 10534 ;; This function is called by:
 10535 ;;		_display_LCD
 10536 ;; This function uses a non-reentrant model
 10537 ;;
 10538                           
 10539                           	psect	text32
 10540  010C8E                     __ptext32:
 10541                           	opt stack 0
 10542  010C8E                     _display_time_1602:
 10543                           	opt stack 13
 10544                           
 10545                           ; BSR set to: 0
 10546                           ;My_RTCC.c: 244: RTCC_from_RTCC(&now);
 10547                           
 10548                           ;incstack = 0
 10549  010C8E  0E8F               	movlw	low _now
 10550  010C90  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 10551  010C92  0E02               	movlw	high _now
 10552  010C94  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 10553  010C96  EC8C  F0A2         	call	_RTCC_from_RTCC	;wreg free
 10554                           
 10555                           ; BSR set to: 0
 10556                           ;My_RTCC.c: 246: strcpy(line0, "");
 10557  010C9A  C0B4  F060         	movff	display_time_1602@line0,strcpy@to
 10558  010C9E  C0B5  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 10559  010CA2  0EE6               	movlw	low (STR_19+3)
 10560  010CA4  6F62               	movwf	strcpy@from& (0+255),b
 10561  010CA6  0EFF               	movlw	high (STR_19+3)
 10562  010CA8  6F63               	movwf	(strcpy@from+1)& (0+255),b
 10563  010CAA  EC9F  F0A0         	call	_strcpy	;wreg free
 10564                           
 10565                           ; BSR set to: 0
 10566                           ;My_RTCC.c: 247: display_dec(line0, 20, tm->edit.flag.YY);
 10567  010CAE  C0B4  F0AA         	movff	display_time_1602@line0,display_dec@str
 10568  010CB2  C0B5  F0AB         	movff	display_time_1602@line0+1,display_dec@str+1
 10569  010CB6  0E14               	movlw	20
 10570  010CB8  6FAC               	movwf	display_dec@dec& (0+255),b
 10571  010CBA  EE20 F00D          	lfsr	2,13
 10572  010CBE  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10573  010CC0  26D9               	addwf	fsr2l,f,c
 10574  010CC2  51B3               	movf	(display_time_1602@tm+1)& (0+255),w,b
 10575  010CC4  22DA               	addwfc	fsr2h,f,c
 10576  010CC6  0E00               	movlw	0
 10577  010CC8  D8B4               	call	PL352	;call to abstracted procedure
 10578  010CCA  EC56  F09E         	call	_display_dec	;wreg free
 10579                           
 10580                           ;My_RTCC.c: 248: display_dec(line0, tm->YY, tm->edit.flag.YY);
 10581  010CCE  D89B               	call	PL198	;call to abstracted procedure
 10582  010CD0  EE20 F00A          	lfsr	2,10
 10583  010CD4  D881               	call	PL12	;call to abstracted procedure
 10584  010CD6  D8AD               	call	PL352	;call to abstracted procedure
 10585  010CD8  EC56  F09E         	call	_display_dec	;wreg free
 10586                           
 10587                           ;My_RTCC.c: 249: strcat(line0, "/");
 10588  010CDC  D88F               	call	PL174	;call to abstracted procedure
 10589  010CDE  D8A3               	call	PL280	;call to abstracted procedure
 10590  010CE0  EC71  F09D         	call	_strcat	;wreg free
 10591                           
 10592                           ;My_RTCC.c: 250: display_dec(line0, tm->MM, tm->edit.flag.MM);
 10593  010CE4  D890               	call	PL198	;call to abstracted procedure
 10594  010CE6  EE20 F009          	lfsr	2,9
 10595  010CEA  D876               	call	PL12	;call to abstracted procedure
 10596  010CEC  B8DF               	btfsc	indf2,4,c
 10597  010CEE  0E01               	movlw	1
 10598  010CF0  6FAD               	movwf	display_dec@edit& (0+255),b
 10599  010CF2  EC56  F09E         	call	_display_dec	;wreg free
 10600                           
 10601                           ;My_RTCC.c: 251: strcat(line0, "/");
 10602  010CF6  D882               	call	PL174	;call to abstracted procedure
 10603  010CF8  D896               	call	PL280	;call to abstracted procedure
 10604  010CFA  EC71  F09D         	call	_strcat	;wreg free
 10605                           
 10606                           ;My_RTCC.c: 252: display_dec(line0, tm->DD, tm->edit.flag.DD);
 10607  010CFE  D883               	call	PL198	;call to abstracted procedure
 10608  010D00  EE20 F008          	lfsr	2,8
 10609  010D04  D869               	call	PL12	;call to abstracted procedure
 10610  010D06  B6DF               	btfsc	indf2,3,c
 10611  010D08  0E01               	movlw	1
 10612  010D0A  6FAD               	movwf	display_dec@edit& (0+255),b
 10613  010D0C  EC56  F09E         	call	_display_dec	;wreg free
 10614                           
 10615                           ;My_RTCC.c: 253: strcat(line0, "(");
 10616  010D10  D875               	call	PL174	;call to abstracted procedure
 10617  010D12  0EF7               	movlw	low STR_13
 10618  010D14  0100               	movlb	0	; () banked
 10619  010D16  6F62               	movwf	strcat@from& (0+255),b
 10620  010D18  0EFF               	movlw	high STR_13
 10621  010D1A  6F63               	movwf	(strcat@from+1)& (0+255),b
 10622  010D1C  EC71  F09D         	call	_strcat	;wreg free
 10623                           
 10624                           ;My_RTCC.c: 254: strcat(line0, weekday_3char[tm->EE]);
 10625  010D20  D86D               	call	PL174	;call to abstracted procedure
 10626  010D22  0100               	movlb	0	; () banked
 10627  010D24  EE20 F007          	lfsr	2,7
 10628  010D28  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10629  010D2A  D863               	call	PL14	;call to abstracted procedure
 10630  010D2C  0D04               	mullw	4
 10631  010D2E  0EA4               	movlw	low _weekday_3char
 10632  010D30  24F3               	addwf	prodl,w,c
 10633  010D32  6F62               	movwf	strcat@from& (0+255),b
 10634  010D34  0EFB               	movlw	high _weekday_3char
 10635  010D36  20F4               	addwfc	prodh,w,c
 10636  010D38  6F63               	movwf	(strcat@from+1)& (0+255),b
 10637  010D3A  EC71  F09D         	call	_strcat	;wreg free
 10638                           
 10639                           ;My_RTCC.c: 255: strcat(line0, ")");
 10640  010D3E  D85E               	call	PL174	;call to abstracted procedure
 10641  010D40  0E8F               	movlw	low (STR_118+5)
 10642  010D42  0100               	movlb	0	; () banked
 10643  010D44  6F62               	movwf	strcat@from& (0+255),b
 10644  010D46  0EFF               	movlw	high (STR_118+5)
 10645  010D48  6F63               	movwf	(strcat@from+1)& (0+255),b
 10646  010D4A  EC71  F09D         	call	_strcat	;wreg free
 10647                           
 10648                           ;My_RTCC.c: 257: strcpy(line1, "        ");
 10649  010D4E  C0B6  F060         	movff	display_time_1602@line1,strcpy@to
 10650  010D52  C0B7  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 10651  010D56  0E79               	movlw	low STR_15
 10652  010D58  0100               	movlb	0	; () banked
 10653  010D5A  6F62               	movwf	strcpy@from& (0+255),b
 10654  010D5C  0EFF               	movlw	high STR_15
 10655  010D5E  6F63               	movwf	(strcpy@from+1)& (0+255),b
 10656  010D60  EC9F  F0A0         	call	_strcpy	;wreg free
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;My_RTCC.c: 258: display_dec(line1, tm->hh, tm->edit.flag.hh);
 10660  010D64  D85B               	call	PL264	;call to abstracted procedure
 10661  010D66  EE20 F006          	lfsr	2,6
 10662  010D6A  D836               	call	PL12	;call to abstracted procedure
 10663  010D6C  B4DF               	btfsc	indf2,2,c
 10664  010D6E  0E01               	movlw	1
 10665  010D70  6FAD               	movwf	display_dec@edit& (0+255),b
 10666  010D72  EC56  F09E         	call	_display_dec	;wreg free
 10667                           
 10668                           ;My_RTCC.c: 259: if (tm->colon) strcat(line1, ":");
 10669  010D76  0100               	movlb	0	; () banked
 10670  010D78  EE20 F00B          	lfsr	2,11
 10671  010D7C  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10672  010D7E  D839               	call	PL14	;call to abstracted procedure
 10673  010D80  E008               	bz	l10572
 10674                           
 10675                           ; BSR set to: 0
 10676  010D82  D847               	call	PL254	;call to abstracted procedure
 10677  010D84  0EFD               	movlw	low STR_7
 10678  010D86  6F62               	movwf	strcat@from& (0+255),b
 10679  010D88  0EFF               	movlw	high STR_7
 10680  010D8A  6F63               	movwf	(strcat@from+1)& (0+255),b
 10681  010D8C  EC71  F09D         	call	_strcat	;wreg free
 10682  010D90  D007               	goto	l10574
 10683  010D92                     l10572:
 10684                           
 10685                           ; BSR set to: 0
 10686                           ;My_RTCC.c: 260: else strcat(line1, " ");
 10687  010D92  D83F               	call	PL254	;call to abstracted procedure
 10688  010D94  0E80               	movlw	low (STR_15+7)
 10689  010D96  6F62               	movwf	strcat@from& (0+255),b
 10690  010D98  0EFF               	movlw	high (STR_15+7)
 10691  010D9A  6F63               	movwf	(strcat@from+1)& (0+255),b
 10692  010D9C  EC71  F09D         	call	_strcat	;wreg free
 10693  010DA0                     l10574:
 10694                           
 10695                           ;My_RTCC.c: 261: display_dec(line1, tm->mm, tm->edit.flag.mm);
 10696  010DA0  D83D               	call	PL264	;call to abstracted procedure
 10697  010DA2  0100               	movlb	0	; () banked
 10698  010DA4  EE20 F005          	lfsr	2,5
 10699  010DA8  D817               	call	PL12	;call to abstracted procedure
 10700  010DAA  B2DF               	btfsc	indf2,1,c
 10701  010DAC  0E01               	movlw	1
 10702  010DAE  6FAD               	movwf	display_dec@edit& (0+255),b
 10703  010DB0  EC56  F09E         	call	_display_dec	;wreg free
 10704                           
 10705                           ;My_RTCC.c: 262: strcat(line1, "-");
 10706  010DB4  D82E               	call	PL254	;call to abstracted procedure
 10707  010DB6  0EF9               	movlw	low STR_9
 10708  010DB8  0100               	movlb	0	; () banked
 10709  010DBA  6F62               	movwf	strcat@from& (0+255),b
 10710  010DBC  0EFF               	movlw	high STR_9
 10711  010DBE  6F63               	movwf	(strcat@from+1)& (0+255),b
 10712  010DC0  EC71  F09D         	call	_strcat	;wreg free
 10713                           
 10714                           ;My_RTCC.c: 263: display_dec(line1, tm->ss, tm->edit.flag.ss);
 10715  010DC4  D82B               	call	PL264	;call to abstracted procedure
 10716  010DC6  0100               	movlb	0	; () banked
 10717  010DC8  EE20 F004          	lfsr	2,4
 10718  010DCC  D805               	call	PL12	;call to abstracted procedure
 10719  010DCE  B0DF               	btfsc	indf2,0,c
 10720  010DD0  0E01               	movlw	1
 10721  010DD2  6FAD               	movwf	display_dec@edit& (0+255),b
 10722  010DD4  EF56  F09E         	goto	_display_dec	;wreg free
 10723  010DD8                     __end_of_display_time_1602:
 10724                           	opt stack 0
 10725  010DD8                     PL12:
 10726                           	opt stack 13
 10727  010DD8  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10728  010DDA  26D9               	addwf	fsr2l,f,c
 10729  010DDC  51B3               	movf	(display_time_1602@tm+1)& (0+255),w,b
 10730  010DDE  22DA               	addwfc	fsr2h,f,c
 10731  010DE0  50DF               	movf	indf2,w,c
 10732  010DE2  6FAC               	movwf	display_dec@dec& (0+255),b
 10733  010DE4  EE20 F00D          	lfsr	2,13
 10734  010DE8  51B2               	movf	display_time_1602@tm& (0+255),w,b
 10735  010DEA  26D9               	addwf	fsr2l,f,c
 10736  010DEC  51B3               	movf	(display_time_1602@tm+1)& (0+255),w,b
 10737  010DEE  22DA               	addwfc	fsr2h,f,c
 10738  010DF0  0C00               	retlw	0
 10739  010DF2                     __end_ofPL12:
 10740                           	opt stack 0
 10741  010DF2                     PL14:
 10742                           	opt stack 13
 10743  010DF2  26D9               	addwf	fsr2l,f,c
 10744  010DF4  51B3               	movf	(display_time_1602@tm+1)& (0+255),w,b
 10745  010DF6  22DA               	addwfc	fsr2h,f,c
 10746  010DF8  50DF               	movf	indf2,w,c
 10747  010DFA  0012               	return	
 10748  010DFC                     __end_ofPL14:
 10749                           	opt stack 0
 10750  010DFC                     PL174:
 10751                           	opt stack 13
 10752  010DFC  C0B4  F060         	movff	display_time_1602@line0,strcat@to
 10753  010E00  C0B5  F061         	movff	display_time_1602@line0+1,strcat@to+1
 10754  010E04  0012               	return	
 10755  010E06                     __end_ofPL174:
 10756                           	opt stack 0
 10757  010E06                     PL198:
 10758                           	opt stack 13
 10759  010E06  C0B4  F0AA         	movff	display_time_1602@line0,display_dec@str
 10760  010E0A  C0B5  F0AB         	movff	display_time_1602@line0+1,display_dec@str+1
 10761  010E0E  0100               	movlb	0	; () banked
 10762  010E10  0012               	return	
 10763  010E12                     __end_ofPL198:
 10764                           	opt stack 0
 10765  010E12                     PL254:
 10766                           	opt stack 13
 10767  010E12  C0B6  F060         	movff	display_time_1602@line1,strcat@to
 10768  010E16  C0B7  F061         	movff	display_time_1602@line1+1,strcat@to+1
 10769  010E1A  0012               	return	
 10770  010E1C                     __end_ofPL254:
 10771                           	opt stack 0
 10772  010E1C                     PL264:
 10773                           	opt stack 13
 10774  010E1C  C0B6  F0AA         	movff	display_time_1602@line1,display_dec@str
 10775  010E20  C0B7  F0AB         	movff	display_time_1602@line1+1,display_dec@str+1
 10776  010E24  0012               	return	
 10777  010E26                     __end_ofPL264:
 10778                           	opt stack 0
 10779  010E26                     PL280:
 10780                           	opt stack 13
 10781  010E26  0EFB               	movlw	low STR_4
 10782  010E28  0100               	movlb	0	; () banked
 10783  010E2A  6F62               	movwf	strcat@from& (0+255),b
 10784  010E2C  0EFF               	movlw	high STR_4
 10785  010E2E  6F63               	movwf	(strcat@from+1)& (0+255),b
 10786  010E30  0012               	return	
 10787  010E32                     __end_ofPL280:
 10788                           	opt stack 0
 10789  010E32                     PL352:
 10790                           	opt stack 13
 10791  010E32  BADF               	btfsc	indf2,5,c
 10792  010E34  0E01               	movlw	1
 10793  010E36  6FAD               	movwf	display_dec@edit& (0+255),b
 10794  010E38  0012               	return	
 10795  010E3A                     __end_ofPL352:
 10796                           	opt stack 0
 10797                           tblptru	equ	0xFF8
 10798                           tblptrh	equ	0xFF7
 10799                           tblptrl	equ	0xFF6
 10800                           tablat	equ	0xFF5
 10801                           prodh	equ	0xFF4
 10802                           prodl	equ	0xFF3
 10803                           intcon	equ	0xFF2
 10804                           intcon2	equ	0xFF1
 10805                           postinc0	equ	0xFEE
 10806                           wreg	equ	0xFE8
 10807                           indf1	equ	0xFE7
 10808                           postinc1	equ	0xFE6
 10809                           postdec1	equ	0xFE5
 10810                           fsr1h	equ	0xFE2
 10811                           fsr1l	equ	0xFE1
 10812                           indf2	equ	0xFDF
 10813                           postinc2	equ	0xFDE
 10814                           postdec2	equ	0xFDD
 10815                           plusw2	equ	0xFDB
 10816                           fsr2h	equ	0xFDA
 10817                           fsr2l	equ	0xFD9
 10818                           status	equ	0xFD8
 10819                           
 10820 ;; *************** function _strcpy *****************
 10821 ;; Defined at:
 10822 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;  to              2    0[BANK0 ] PTR unsigned char 
 10825 ;;		 -> settings_integrating_reset@str_6192(20), settings_integrating_reset@str(20), settings_led_indicator@str_6175(20)
      +, settings_led_indicator@str(20), 
 10826 ;;		 -> settings_auto_stop@str_6158(20), settings_auto_stop@str(20), display_LCD@str(40), 
 10827 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 10828 ;;		 -> STR_100(6), STR_99(6), STR_97(6), STR_96(6), 
 10829 ;;		 -> STR_92(6), STR_91(6), STR_89(6), STR_88(6), 
 10830 ;;		 -> STR_84(6), STR_83(6), STR_81(6), STR_80(6), 
 10831 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 10834 ;;		 -> settings_integrating_reset@str_6192(20), settings_integrating_reset@str(20), settings_led_indicator@str_6175(20)
      +, settings_led_indicator@str(20), 
 10835 ;;		 -> settings_auto_stop@str_6158(20), settings_auto_stop@str(20), display_LCD@str(40), 
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  2    0[BANK0 ] PTR unsigned char 
 10838 ;; Registers used:
 10839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10840 ;; Tracked objects:
 10841 ;;		On entry : F/0
 10842 ;;		On exit  : F/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10846 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10848 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10849 ;;Total ram usage:        6 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:   11
 10852 ;; This function calls:
 10853 ;;		Nothing
 10854 ;; This function is called by:
 10855 ;;		_display_time_1602
 10856 ;;		_settings_auto_stop
 10857 ;;		_settings_led_indicator
 10858 ;;		_settings_integrating_reset
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text33
 10863  01413E                     __ptext33:
 10864                           	opt stack 0
 10865  01413E                     _strcpy:
 10866                           	opt stack 16
 10867                           
 10868                           ; BSR set to: 0
 10869                           
 10870                           ;incstack = 0
 10871  01413E  C060  F064         	movff	strcpy@to,strcpy@cp
 10872  014142  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 10873  014146  D004               	goto	l10068
 10874  014148                     l10066:
 10875                           
 10876                           ; BSR set to: 0
 10877  014148  4B64               	infsnz	strcpy@cp& (0+255),f,b
 10878  01414A  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 10879  01414C  4B62               	infsnz	strcpy@from& (0+255),f,b
 10880  01414E  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 10881  014150                     l10068:
 10882                           
 10883                           ; BSR set to: 0
 10884  014150  C062  FFF6         	movff	strcpy@from,tblptrl
 10885  014154  C063  FFF7         	movff	strcpy@from+1,tblptrh
 10886  014158                     	if	0	;tblptru may be non-zero
 10887  014158                     	endif
 10888  014158                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10889  014158  0E00               	movlw	low (__mediumconst shr (0+16))
 10890  01415A  6EF8               	movwf	tblptru,c
 10891  01415C                     	endif
 10892  01415C  C064  FFD9         	movff	strcpy@cp,fsr2l
 10893  014160  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 10894  014164  0008               	tblrd		*
 10895  014166  CFF5 FFDF          	movff	tablat,indf2
 10896  01416A  50DF               	movf	indf2,w,c
 10897  01416C  E1ED               	bnz	l10066
 10898                           
 10899                           ; BSR set to: 0
 10900  01416E  0012               	return		;funcret
 10901  014170                     __end_of_strcpy:
 10902                           	opt stack 0
 10903                           tblptru	equ	0xFF8
 10904                           tblptrh	equ	0xFF7
 10905                           tblptrl	equ	0xFF6
 10906                           tablat	equ	0xFF5
 10907                           prodh	equ	0xFF4
 10908                           prodl	equ	0xFF3
 10909                           intcon	equ	0xFF2
 10910                           intcon2	equ	0xFF1
 10911                           postinc0	equ	0xFEE
 10912                           wreg	equ	0xFE8
 10913                           indf1	equ	0xFE7
 10914                           postinc1	equ	0xFE6
 10915                           postdec1	equ	0xFE5
 10916                           fsr1h	equ	0xFE2
 10917                           fsr1l	equ	0xFE1
 10918                           indf2	equ	0xFDF
 10919                           postinc2	equ	0xFDE
 10920                           postdec2	equ	0xFDD
 10921                           plusw2	equ	0xFDB
 10922                           fsr2h	equ	0xFDA
 10923                           fsr2l	equ	0xFD9
 10924                           status	equ	0xFD8
 10925                           
 10926 ;; *************** function _display_dec *****************
 10927 ;; Defined at:
 10928 ;;		line 217 in file "../My_library/My_RTCC.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  str             2   74[BANK0 ] PTR unsigned char 
 10931 ;;		 -> display_LCD@str(40), 
 10932 ;;  dec             1   76[BANK0 ] unsigned char 
 10933 ;;  edit            1   77[BANK0 ] unsigned char 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;  s               4   78[BANK0 ] unsigned char [4]
 10936 ;; Return value:  Size  Location     Type
 10937 ;;		None               void
 10938 ;; Registers used:
 10939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : F/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10946 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10948 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10949 ;;Total ram usage:        8 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:   13
 10952 ;; This function calls:
 10953 ;;		_sprintf
 10954 ;;		_strcat
 10955 ;; This function is called by:
 10956 ;;		_display_time_1602
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           	psect	text34
 10961  013CAC                     __ptext34:
 10962                           	opt stack 0
 10963  013CAC                     _display_dec:
 10964                           	opt stack 14
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;My_RTCC.c: 218: char s[4];
 10968                           ;My_RTCC.c: 219: sprintf(s, "%02d", dec);
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;incstack = 0
 10972  013CAC  0EAE               	movlw	low display_dec@s
 10973  013CAE  6F83               	movwf	sprintf@sp& (0+255),b
 10974  013CB0  6B84               	clrf	(sprintf@sp+1)& (0+255),b
 10975  013CB2  0EFC               	movlw	low (STR_67+27)
 10976  013CB4  6F85               	movwf	sprintf@f& (0+255),b
 10977  013CB6  0EFD               	movlw	high (STR_67+27)
 10978  013CB8  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10979  013CBA  C0AC  F087         	movff	display_dec@dec,?_sprintf+4
 10980  013CBE  6B88               	clrf	(?_sprintf+5)& (0+255),b
 10981  013CC0  EC00  F080         	call	_sprintf	;wreg free
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;My_RTCC.c: 220: if (edit && now.halfsec)strcat(str, "  ");
 10985  013CC4  51AD               	movf	display_dec@edit& (0+255),w,b
 10986  013CC6  E00B               	bz	l10062
 10987                           
 10988                           ; BSR set to: 0
 10989  013CC8  0102               	movlb	2	; () banked
 10990  013CCA  519B               	movf	(_now+12)& (0+255),w,b
 10991  013CCC  E008               	bz	l10062
 10992                           
 10993                           ; BSR set to: 2
 10994  013CCE  D80E               	call	PL324	;call to abstracted procedure
 10995  013CD0  0E7F               	movlw	low (STR_15+6)
 10996  013CD2  0100               	movlb	0	; () banked
 10997  013CD4  6F62               	movwf	strcat@from& (0+255),b
 10998  013CD6  0EFF               	movlw	high (STR_15+6)
 10999  013CD8  6F63               	movwf	(strcat@from+1)& (0+255),b
 11000  013CDA  EF71  F09D         	goto	_strcat	;wreg free
 11001  013CDE                     l10062:
 11002                           
 11003                           ;My_RTCC.c: 221: else strcat(str, s);
 11004  013CDE  D806               	call	PL324	;call to abstracted procedure
 11005  013CE0  0EAE               	movlw	low display_dec@s
 11006  013CE2  0100               	movlb	0	; () banked
 11007  013CE4  6F62               	movwf	strcat@from& (0+255),b
 11008  013CE6  6B63               	clrf	(strcat@from+1)& (0+255),b
 11009  013CE8  EF71  F09D         	goto	_strcat	;wreg free
 11010  013CEC                     __end_of_display_dec:
 11011                           	opt stack 0
 11012  013CEC                     PL324:
 11013                           	opt stack 14
 11014  013CEC  C0AA  F060         	movff	display_dec@str,strcat@to
 11015  013CF0  C0AB  F061         	movff	display_dec@str+1,strcat@to+1
 11016  013CF4  0012               	return	
 11017  013CF6                     __end_ofPL324:
 11018                           	opt stack 0
 11019                           tblptru	equ	0xFF8
 11020                           tblptrh	equ	0xFF7
 11021                           tblptrl	equ	0xFF6
 11022                           tablat	equ	0xFF5
 11023                           prodh	equ	0xFF4
 11024                           prodl	equ	0xFF3
 11025                           intcon	equ	0xFF2
 11026                           intcon2	equ	0xFF1
 11027                           postinc0	equ	0xFEE
 11028                           wreg	equ	0xFE8
 11029                           indf1	equ	0xFE7
 11030                           postinc1	equ	0xFE6
 11031                           postdec1	equ	0xFE5
 11032                           fsr1h	equ	0xFE2
 11033                           fsr1l	equ	0xFE1
 11034                           indf2	equ	0xFDF
 11035                           postinc2	equ	0xFDE
 11036                           postdec2	equ	0xFDD
 11037                           plusw2	equ	0xFDB
 11038                           fsr2h	equ	0xFDA
 11039                           fsr2l	equ	0xFD9
 11040                           status	equ	0xFD8
 11041                           
 11042 ;; *************** function _strcat *****************
 11043 ;; Defined at:
 11044 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  to              2    0[BANK0 ] PTR unsigned char 
 11047 ;;		 -> display_LCD@str(40), 
 11048 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 11049 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
 11050 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
 11051 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
 11052 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 11055 ;;		 -> display_LCD@str(40), 
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  2    0[BANK0 ] PTR unsigned char 
 11058 ;; Registers used:
 11059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11060 ;; Tracked objects:
 11061 ;;		On entry : F/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11068 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11069 ;;Total ram usage:        6 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:   11
 11072 ;; This function calls:
 11073 ;;		Nothing
 11074 ;; This function is called by:
 11075 ;;		_display_dec
 11076 ;;		_display_time_1602
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text35
 11081  013AE2                     __ptext35:
 11082                           	opt stack 0
 11083  013AE2                     _strcat:
 11084                           	opt stack 16
 11085                           
 11086                           ; BSR set to: 0
 11087                           
 11088                           ;incstack = 0
 11089  013AE2  C060  F064         	movff	strcat@to,strcat@cp
 11090  013AE6  C061  F065         	movff	strcat@to+1,strcat@cp+1
 11091  013AEA  D002               	goto	l9964
 11092  013AEC                     l9962:
 11093                           
 11094                           ; BSR set to: 0
 11095  013AEC  4B64               	infsnz	strcat@cp& (0+255),f,b
 11096  013AEE  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 11097  013AF0                     l9964:
 11098                           
 11099                           ; BSR set to: 0
 11100  013AF0  D81B               	call	PL322	;call to abstracted procedure
 11101  013AF2  50DF               	movf	indf2,w,c
 11102  013AF4  E006               	bz	l9968
 11103  013AF6  D7FA               	goto	l9962
 11104  013AF8                     l9966:
 11105  013AF8  0100               	movlb	0	; () banked
 11106  013AFA  4B64               	infsnz	strcat@cp& (0+255),f,b
 11107  013AFC  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 11108  013AFE  4B62               	infsnz	strcat@from& (0+255),f,b
 11109  013B00  2B63               	incf	(strcat@from+1)& (0+255),f,b
 11110  013B02                     l9968:
 11111                           
 11112                           ; BSR set to: 0
 11113  013B02  C062  FFF6         	movff	strcat@from,tblptrl
 11114  013B06  C063  FFF7         	movff	strcat@from+1,tblptrh
 11115  013B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 11116  013B0C  6EF8               	movwf	tblptru,c
 11117  013B0E  D80C               	call	PL322	;call to abstracted procedure
 11118  013B10  0E0E               	movlw	(high __ramtop+-1)
 11119  013B12  64F7               	cpfsgt	tblptrh,c
 11120  013B14  D003               	bra	u10277
 11121  013B16  0008               	tblrd		*
 11122  013B18  50F5               	movf	tablat,w,c
 11123  013B1A  D002               	bra	u10270
 11124  013B1C                     u10277:
 11125  013B1C  ECD2  F08F         	call	PL24	;call to abstracted procedure
 11126  013B20                     u10270:
 11127  013B20  6EDF               	movwf	indf2,c
 11128  013B22  50DF               	movf	indf2,w,c
 11129  013B24  E1E9               	bnz	l9966
 11130  013B26  0012               	return		;funcret
 11131  013B28                     __end_of_strcat:
 11132                           	opt stack 0
 11133  013B28                     PL322:
 11134                           	opt stack 16
 11135  013B28  C064  FFD9         	movff	strcat@cp,fsr2l
 11136  013B2C  C065  FFDA         	movff	strcat@cp+1,fsr2h
 11137  013B30  0012               	return	
 11138  013B32                     __end_ofPL322:
 11139                           	opt stack 0
 11140                           tblptru	equ	0xFF8
 11141                           tblptrh	equ	0xFF7
 11142                           tblptrl	equ	0xFF6
 11143                           tablat	equ	0xFF5
 11144                           prodh	equ	0xFF4
 11145                           prodl	equ	0xFF3
 11146                           intcon	equ	0xFF2
 11147                           intcon2	equ	0xFF1
 11148                           postinc0	equ	0xFEE
 11149                           wreg	equ	0xFE8
 11150                           indf1	equ	0xFE7
 11151                           postinc1	equ	0xFE6
 11152                           postdec1	equ	0xFE5
 11153                           fsr1h	equ	0xFE2
 11154                           fsr1l	equ	0xFE1
 11155                           indf2	equ	0xFDF
 11156                           postinc2	equ	0xFDE
 11157                           postdec2	equ	0xFDD
 11158                           plusw2	equ	0xFDB
 11159                           fsr2h	equ	0xFDA
 11160                           fsr2l	equ	0xFD9
 11161                           status	equ	0xFD8
 11162                           
 11163 ;; *************** function _ST7032_puts *****************
 11164 ;; Defined at:
 11165 ;;		line 43 in file "../My_library/My_ST7032.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 11168 ;;		 -> display_LCD@str_5634(20), display_LCD@str(40), display_char(40), STR_50(16), 
 11169 ;;		 -> STR_49(12), STR_46(13), STR_45(17), 
 11170 ;; Auto vars:     Size  Location     Type
 11171 ;;		None
 11172 ;; Return value:  Size  Location     Type
 11173 ;;		None               void
 11174 ;; Registers used:
 11175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11176 ;; Tracked objects:
 11177 ;;		On entry : F/0
 11178 ;;		On exit  : 0/0
 11179 ;;		Unchanged: 0/0
 11180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11185 ;;Total ram usage:        2 bytes
 11186 ;; Hardware stack levels used:    1
 11187 ;; Hardware stack levels required when called:   14
 11188 ;; This function calls:
 11189 ;;		_ST7032_put
 11190 ;; This function is called by:
 11191 ;;		_sleep_task
 11192 ;;		_bootload
 11193 ;;		_display_LCD
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text36
 11198  013F74                     __ptext36:
 11199                           	opt stack 0
 11200  013F74                     _ST7032_puts:
 11201                           	opt stack 13
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;My_ST7032.c: 44: while (*s) {
 11205                           
 11206                           ;incstack = 0
 11207  013F74  D00C               	goto	l10214
 11208  013F76                     l10210:
 11209                           
 11210                           ;My_ST7032.c: 45: ST7032_put(*s++);
 11211  013F76  D816               	call	PL236	;call to abstracted procedure
 11212  013F78  64F7               	cpfsgt	tblptrh,c
 11213  013F7A  D003               	bra	u10647
 11214  013F7C  0008               	tblrd		*
 11215  013F7E  50F5               	movf	tablat,w,c
 11216  013F80  D002               	bra	u10640
 11217  013F82                     u10647:
 11218  013F82  ECD2  F08F         	call	PL24	;call to abstracted procedure
 11219  013F86                     u10640:
 11220  013F86  ECDA  F09F         	call	_ST7032_put
 11221                           
 11222                           ; BSR set to: 0
 11223  013F8A  4B70               	infsnz	ST7032_puts@s& (0+255),f,b
 11224  013F8C  2B71               	incf	(ST7032_puts@s+1)& (0+255),f,b
 11225  013F8E                     l10214:
 11226                           
 11227                           ; BSR set to: 0
 11228  013F8E  D80A               	call	PL236	;call to abstracted procedure
 11229  013F90  64F7               	cpfsgt	tblptrh,c
 11230  013F92  D003               	bra	u10657
 11231  013F94  0008               	tblrd		*
 11232  013F96  50F5               	movf	tablat,w,c
 11233  013F98  D002               	bra	u10650
 11234  013F9A                     u10657:
 11235  013F9A  ECD2  F08F         	call	PL24	;call to abstracted procedure
 11236  013F9E                     u10650:
 11237  013F9E  0900               	iorlw	0
 11238  013FA0  E1EA               	bnz	l10210
 11239  013FA2  0012               	return		;funcret
 11240  013FA4                     __end_of_ST7032_puts:
 11241                           	opt stack 0
 11242  013FA4                     PL236:
 11243                           	opt stack 13
 11244  013FA4  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 11245  013FA8  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 11246  013FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 11247  013FAE  6EF8               	movwf	tblptru,c
 11248  013FB0  0E0E               	movlw	(high __ramtop+-1)
 11249  013FB2  0012               	return	
 11250  013FB4                     __end_ofPL236:
 11251                           	opt stack 0
 11252                           tblptru	equ	0xFF8
 11253                           tblptrh	equ	0xFF7
 11254                           tblptrl	equ	0xFF6
 11255                           tablat	equ	0xFF5
 11256                           prodh	equ	0xFF4
 11257                           prodl	equ	0xFF3
 11258                           intcon	equ	0xFF2
 11259                           intcon2	equ	0xFF1
 11260                           postinc0	equ	0xFEE
 11261                           wreg	equ	0xFE8
 11262                           indf1	equ	0xFE7
 11263                           postinc1	equ	0xFE6
 11264                           postdec1	equ	0xFE5
 11265                           fsr1h	equ	0xFE2
 11266                           fsr1l	equ	0xFE1
 11267                           indf2	equ	0xFDF
 11268                           postinc2	equ	0xFDE
 11269                           postdec2	equ	0xFDD
 11270                           plusw2	equ	0xFDB
 11271                           fsr2h	equ	0xFDA
 11272                           fsr2l	equ	0xFD9
 11273                           status	equ	0xFD8
 11274                           
 11275 ;; *************** function _ST7032_put *****************
 11276 ;; Defined at:
 11277 ;;		line 35 in file "../My_library/My_ST7032.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  c               1    wreg     unsigned char 
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;  c               1   15[BANK0 ] unsigned char 
 11282 ;; Return value:  Size  Location     Type
 11283 ;;		None               void
 11284 ;; Registers used:
 11285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : F/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;Total ram usage:        1 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:   13
 11298 ;; This function calls:
 11299 ;;		_ringbuf_put
 11300 ;; This function is called by:
 11301 ;;		_ST7032_puts
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           	psect	text37
 11306  013FB4                     __ptext37:
 11307                           	opt stack 0
 11308  013FB4                     _ST7032_put:
 11309                           	opt stack 13
 11310                           
 11311                           ;incstack = 0
 11312                           ;ST7032_put@c stored from wreg
 11313  013FB4  0100               	movlb	0	; () banked
 11314  013FB6  6F6F               	movwf	ST7032_put@c& (0+255),b
 11315                           
 11316                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 11317  013FB8  D817               	call	PL74	;call to abstracted procedure
 11318  013FBA  0E7C               	movlw	124
 11319  013FBC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 11320  013FBE  ECC5  F093         	call	_ringbuf_put	;wreg free
 11321                           
 11322                           ;My_ST7032.c: 37: ringbuf_put(&lcd_tx, 0b11000000);
 11323  013FC2  D812               	call	PL74	;call to abstracted procedure
 11324  013FC4  0EC0               	movlw	192
 11325  013FC6  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 11326  013FC8  ECC5  F093         	call	_ringbuf_put	;wreg free
 11327                           
 11328                           ;My_ST7032.c: 38: ringbuf_put(&lcd_tx, c);
 11329  013FCC  D80D               	call	PL74	;call to abstracted procedure
 11330  013FCE  C06F  F06A         	movff	ST7032_put@c,ringbuf_put@asciicode
 11331  013FD2  ECC5  F093         	call	_ringbuf_put	;wreg free
 11332                           
 11333                           ;My_ST7032.c: 39: ringbuf_put(&lcd_tx, 0);
 11334  013FD6  D808               	call	PL74	;call to abstracted procedure
 11335  013FD8  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
 11336  013FDA  ECC5  F093         	call	_ringbuf_put	;wreg free
 11337                           
 11338                           ;My_ST7032.c: 40: ringbuf_put(&lcd_tx, 1);
 11339  013FDE  D804               	call	PL74	;call to abstracted procedure
 11340  013FE0  0E01               	movlw	1
 11341  013FE2  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 11342  013FE4  EFC5  F093         	goto	_ringbuf_put	;wreg free
 11343  013FE8                     __end_of_ST7032_put:
 11344                           	opt stack 0
 11345  013FE8                     PL74:
 11346                           	opt stack 13
 11347  013FE8  0E82               	movlw	low _lcd_tx
 11348  013FEA  6F68               	movwf	ringbuf_put@rb& (0+255),b
 11349  013FEC  0E01               	movlw	high _lcd_tx
 11350  013FEE  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 11351  013FF0  0012               	return	
 11352  013FF2                     __end_ofPL74:
 11353                           	opt stack 0
 11354                           tblptru	equ	0xFF8
 11355                           tblptrh	equ	0xFF7
 11356                           tblptrl	equ	0xFF6
 11357                           tablat	equ	0xFF5
 11358                           prodh	equ	0xFF4
 11359                           prodl	equ	0xFF3
 11360                           intcon	equ	0xFF2
 11361                           intcon2	equ	0xFF1
 11362                           postinc0	equ	0xFEE
 11363                           wreg	equ	0xFE8
 11364                           indf1	equ	0xFE7
 11365                           postinc1	equ	0xFE6
 11366                           postdec1	equ	0xFE5
 11367                           fsr1h	equ	0xFE2
 11368                           fsr1l	equ	0xFE1
 11369                           indf2	equ	0xFDF
 11370                           postinc2	equ	0xFDE
 11371                           postdec2	equ	0xFDD
 11372                           plusw2	equ	0xFDB
 11373                           fsr2h	equ	0xFDA
 11374                           fsr2l	equ	0xFD9
 11375                           status	equ	0xFD8
 11376                           
 11377 ;; *************** function _ST7032_cursor *****************
 11378 ;; Defined at:
 11379 ;;		line 30 in file "../My_library/My_ST7032.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  col             1    wreg     unsigned char 
 11382 ;;  row             1   17[BANK0 ] unsigned char 
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;  col             1   20[BANK0 ] unsigned char 
 11385 ;;  row_offsets     2   18[BANK0 ] unsigned char [2]
 11386 ;; Return value:  Size  Location     Type
 11387 ;;		None               void
 11388 ;; Registers used:
 11389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11390 ;; Tracked objects:
 11391 ;;		On entry : F/0
 11392 ;;		On exit  : F/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11395 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11396 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11398 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11399 ;;Total ram usage:        4 bytes
 11400 ;; Hardware stack levels used:    1
 11401 ;; Hardware stack levels required when called:   14
 11402 ;; This function calls:
 11403 ;;		_ST7032_command
 11404 ;; This function is called by:
 11405 ;;		_sleep_task
 11406 ;;		_bootload
 11407 ;;		_display_LCD
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text38
 11412  014416                     __ptext38:
 11413                           	opt stack 0
 11414  014416                     _ST7032_cursor:
 11415                           	opt stack 13
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;incstack = 0
 11419                           ;ST7032_cursor@col stored from wreg
 11420  014416  6F74               	movwf	ST7032_cursor@col& (0+255),b
 11421                           
 11422                           ;My_ST7032.c: 31: uint8_t row_offsets[] = {0x00, 0x40};
 11423  014418  C1FD  F072         	movff	ST7032_cursor@F8592,ST7032_cursor@row_offsets
 11424  01441C  C1FE  F073         	movff	ST7032_cursor@F8592+1,ST7032_cursor@row_offsets+1
 11425                           
 11426                           ;My_ST7032.c: 32: ST7032_command(0x80 | (col + row_offsets[row]), 0);
 11427  014420  0100               	movlb	0	; () banked
 11428  014422  6B6F               	clrf	ST7032_command@wait& (0+255),b
 11429  014424  5171               	movf	ST7032_cursor@row& (0+255),w,b
 11430  014426  0F72               	addlw	low ST7032_cursor@row_offsets
 11431  014428  6ED9               	movwf	fsr2l,c
 11432  01442A  6ADA               	clrf	fsr2h,c
 11433  01442C  50DF               	movf	indf2,w,c
 11434  01442E  2574               	addwf	ST7032_cursor@col& (0+255),w,b
 11435  014430  0980               	iorlw	128
 11436  014432  EF79  F09F         	goto	_ST7032_command
 11437  014436                     __end_of_ST7032_cursor:
 11438                           	opt stack 0
 11439                           tblptru	equ	0xFF8
 11440                           tblptrh	equ	0xFF7
 11441                           tblptrl	equ	0xFF6
 11442                           tablat	equ	0xFF5
 11443                           prodh	equ	0xFF4
 11444                           prodl	equ	0xFF3
 11445                           intcon	equ	0xFF2
 11446                           intcon2	equ	0xFF1
 11447                           postinc0	equ	0xFEE
 11448                           wreg	equ	0xFE8
 11449                           indf1	equ	0xFE7
 11450                           postinc1	equ	0xFE6
 11451                           postdec1	equ	0xFE5
 11452                           fsr1h	equ	0xFE2
 11453                           fsr1l	equ	0xFE1
 11454                           indf2	equ	0xFDF
 11455                           postinc2	equ	0xFDE
 11456                           postdec2	equ	0xFDD
 11457                           plusw2	equ	0xFDB
 11458                           fsr2h	equ	0xFDA
 11459                           fsr2l	equ	0xFD9
 11460                           status	equ	0xFD8
 11461                           
 11462 ;; *************** function _data_out *****************
 11463 ;; Defined at:
 11464 ;;		line 248 in file "ChargeStation_task.c"
 11465 ;; Parameters:    Size  Location     Type
 11466 ;;  tx              2   74[BANK0 ] PTR struct ringbuf
 11467 ;;		 -> usb_tx(8), 
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;  i               1  106[BANK0 ] unsigned char 
 11470 ;;  str            30   76[BANK0 ] unsigned char [30]
 11471 ;; Return value:  Size  Location     Type
 11472 ;;		None               void
 11473 ;; Registers used:
 11474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11475 ;; Tracked objects:
 11476 ;;		On entry : F/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11481 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11484 ;;Total ram usage:       33 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:   14
 11487 ;; This function calls:
 11488 ;;		___lwdiv
 11489 ;;		___lwmod
 11490 ;;		_ringbuf_put_str
 11491 ;;		_sprintf
 11492 ;; This function is called by:
 11493 ;;		_normal_task
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           	psect	text39
 11498  011C0C                     __ptext39:
 11499                           	opt stack 0
 11500  011C0C                     _data_out:
 11501                           	opt stack 15
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;ChargeStation_task.c: 249: char str[30];
 11505                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 11506                           ;ChargeStation_task.c: 251: now.YY,
 11507                           ;ChargeStation_task.c: 252: now.MM,
 11508                           ;ChargeStation_task.c: 253: now.DD,
 11509                           ;ChargeStation_task.c: 254: now.hh,
 11510                           ;ChargeStation_task.c: 255: now.mm,
 11511                           ;ChargeStation_task.c: 256: now.ss
 11512                           ;ChargeStation_task.c: 257: );
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;incstack = 0
 11516  011C0C  0EAC               	movlw	low data_out@str
 11517  011C0E  6F83               	movwf	sprintf@sp& (0+255),b
 11518  011C10  6B84               	clrf	(sprintf@sp+1)& (0+255),b
 11519  011C12  0EE1               	movlw	low STR_67
 11520  011C14  6F85               	movwf	sprintf@f& (0+255),b
 11521  011C16  0EFD               	movlw	high STR_67
 11522  011C18  D851               	call	PL120	;call to abstracted procedure
 11523  011C1A  C295  F08D         	movff	_now+6,?_sprintf+10
 11524  011C1E  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 11525  011C20  C294  F08F         	movff	_now+5,?_sprintf+12
 11526  011C24  6B90               	clrf	(?_sprintf+13)& (0+255),b
 11527  011C26  C293  F091         	movff	_now+4,?_sprintf+14
 11528  011C2A  6B92               	clrf	(?_sprintf+15)& (0+255),b
 11529  011C2C  EC00  F080         	call	_sprintf	;wreg free
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 11533  011C30  D862               	call	PL262	;call to abstracted procedure
 11534  011C32  D866               	call	PL366	;call to abstracted procedure
 11535  011C34  ECC0  F09D         	call	_ringbuf_put_str	;wreg free
 11536                           
 11537                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 11538  011C38  0100               	movlb	0	; () banked
 11539  011C3A  6BCA               	clrf	data_out@i& (0+255),b
 11540  011C3C                     l11468:
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 11544                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 11545                           ;ChargeStation_task.c: 262: p[i],
 11546                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 11547                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 11548                           ;ChargeStation_task.c: 265: port[i].integrated_current
 11549                           ;ChargeStation_task.c: 266: );
 11550  011C3C  0EAC               	movlw	low data_out@str
 11551  011C3E  6F83               	movwf	sprintf@sp& (0+255),b
 11552  011C40  6B84               	clrf	(sprintf@sp+1)& (0+255),b
 11553  011C42  0E35               	movlw	low STR_68
 11554  011C44  6F85               	movwf	sprintf@f& (0+255),b
 11555  011C46  0EFE               	movlw	high STR_68
 11556  011C48  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11557  011C4A  51CA               	movf	data_out@i& (0+255),w,b
 11558  011C4C  0D02               	mullw	2
 11559  011C4E  0EDC               	movlw	low data_out@p
 11560  011C50  24F3               	addwf	prodl,w,c
 11561  011C52  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11562  011C54  0EFB               	movlw	high data_out@p
 11563  011C56  20F4               	addwfc	prodh,w,c
 11564  011C58  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11565  011C5A  51CA               	movf	data_out@i& (0+255),w,b
 11566  011C5C  ECEA  F082         	call	PL16	;call to abstracted procedure
 11567  011C60  D838               	call	PL180	;call to abstracted procedure
 11568  011C62  ECA0  F09E         	call	___lwdiv	;wreg free
 11569  011C66  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 11570  011C6A  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 11571  011C6E  51CA               	movf	data_out@i& (0+255),w,b
 11572  011C70  ECEA  F082         	call	PL16	;call to abstracted procedure
 11573  011C74  D837               	call	PL186	;call to abstracted procedure
 11574  011C76  ECF9  F09F         	call	___lwmod	;wreg free
 11575  011C7A  C060  F08B         	movff	?___lwmod,?_sprintf+8
 11576  011C7E  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 11577  011C82  51CA               	movf	data_out@i& (0+255),w,b
 11578  011C84  ECB5  F08B         	call	PL42	;call to abstracted procedure
 11579  011C88  CFDE F08D          	movff	postinc2,?_sprintf+10
 11580  011C8C  CFDE F08E          	movff	postinc2,?_sprintf+11
 11581  011C90  CFDE F08F          	movff	postinc2,?_sprintf+12
 11582  011C94  CFDE F090          	movff	postinc2,?_sprintf+13
 11583  011C98  EC00  F080         	call	_sprintf	;wreg free
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 11587  011C9C  D82C               	call	PL262	;call to abstracted procedure
 11588  011C9E  D830               	call	PL366	;call to abstracted procedure
 11589  011CA0  ECC0  F09D         	call	_ringbuf_put_str	;wreg free
 11590  011CA4  0100               	movlb	0	; () banked
 11591  011CA6  2BCA               	incf	data_out@i& (0+255),f,b
 11592                           
 11593                           ; BSR set to: 0
 11594  011CA8  0E02               	movlw	2
 11595  011CAA  65CA               	cpfsgt	data_out@i& (0+255),b
 11596  011CAC  D7C7               	goto	l11468
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;ChargeStation_task.c: 268: }
 11600                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 11601  011CAE  D823               	call	PL262	;call to abstracted procedure
 11602  011CB0  0EBB               	movlw	low (STR_23+35)
 11603  011CB2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 11604  011CB4  0EFD               	movlw	high (STR_23+35)
 11605  011CB6  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11606  011CB8  EFD3  F09D         	goto	l9736	;wreg free
 11607  011CBC                     __end_of_data_out:
 11608                           	opt stack 0
 11609  011CBC                     PL120:
 11610                           	opt stack 11
 11611  011CBC  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11612  011CBE  C299  F087         	movff	_now+10,?_sprintf+4
 11613  011CC2  6B88               	clrf	(?_sprintf+5)& (0+255),b
 11614  011CC4  C298  F089         	movff	_now+9,?_sprintf+6
 11615  011CC8  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 11616  011CCA  C297  F08B         	movff	_now+8,?_sprintf+8
 11617  011CCE  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 11618  011CD0  0012               	return	
 11619  011CD2                     __end_ofPL120:
 11620                           	opt stack 0
 11621  011CD2                     PL180:
 11622                           	opt stack 13
 11623  011CD2  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11624  011CD6  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11625  011CDA  0E03               	movlw	3
 11626  011CDC  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11627  011CDE  0EE8               	movlw	232
 11628  011CE0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11629  011CE2  0CE8               	retlw	232
 11630  011CE4                     __end_ofPL180:
 11631                           	opt stack 0
 11632  011CE4                     PL186:
 11633                           	opt stack 13
 11634  011CE4  CFDE F060          	movff	postinc2,___lwmod@dividend
 11635  011CE8  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11636  011CEC  0E03               	movlw	3
 11637  011CEE  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11638  011CF0  0EE8               	movlw	232
 11639  011CF2  6F62               	movwf	___lwmod@divisor& (0+255),b
 11640  011CF4  0CE8               	retlw	232
 11641  011CF6                     __end_ofPL186:
 11642                           	opt stack 0
 11643  011CF6                     PL262:
 11644                           	opt stack 15
 11645  011CF6  C0AA  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 11646  011CFA  C0AB  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 11647  011CFE  0012               	return	
 11648  011D00                     __end_ofPL262:
 11649                           	opt stack 0
 11650  011D00                     PL366:
 11651                           	opt stack 15
 11652  011D00  0EAC               	movlw	low data_out@str
 11653  011D02  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 11654  011D04  6B72               	clrf	(ringbuf_put_str@str+1)& (0+255),b
 11655  011D06  0012               	return	
 11656  011D08                     __end_ofPL366:
 11657                           	opt stack 0
 11658                           tblptru	equ	0xFF8
 11659                           tblptrh	equ	0xFF7
 11660                           tblptrl	equ	0xFF6
 11661                           tablat	equ	0xFF5
 11662                           prodh	equ	0xFF4
 11663                           prodl	equ	0xFF3
 11664                           intcon	equ	0xFF2
 11665                           intcon2	equ	0xFF1
 11666                           postinc0	equ	0xFEE
 11667                           wreg	equ	0xFE8
 11668                           indf1	equ	0xFE7
 11669                           postinc1	equ	0xFE6
 11670                           postdec1	equ	0xFE5
 11671                           fsr1h	equ	0xFE2
 11672                           fsr1l	equ	0xFE1
 11673                           indf2	equ	0xFDF
 11674                           postinc2	equ	0xFDE
 11675                           postdec2	equ	0xFDD
 11676                           plusw2	equ	0xFDB
 11677                           fsr2h	equ	0xFDA
 11678                           fsr2l	equ	0xFD9
 11679                           status	equ	0xFD8
 11680                           
 11681 ;; *************** function _sprintf *****************
 11682 ;; Defined at:
 11683 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 11686 ;;		 -> display_LCD@str_5634(20), data_out@str(30), print_time@str(30), print_time_dec@str(10), 
 11687 ;;		 -> display_dec@s(4), 
 11688 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 11689 ;;		 -> STR_73(28), STR_72(9), STR_71(11), STR_70(6), 
 11690 ;;		 -> STR_68(24), STR_67(32), STR_23(37), STR_21(5), 
 11691 ;;		 -> STR_1(5), 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  val             4   66[BANK0 ] unsigned long 
 11694 ;;  tmpval          4    0        struct .
 11695 ;;  width           2   72[BANK0 ] int 
 11696 ;;  len             2   64[BANK0 ] unsigned int 
 11697 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 11698 ;;		 -> STR_118(7), display_LCD@onoff(10), display_LCD@port_char(120), data_out@p(6), 
 11699 ;;		 -> sp__ADC(2), weekday_3char(28), 
 11700 ;;  prec            2   59[BANK0 ] int 
 11701 ;;  c               1   71[BANK0 ] char 
 11702 ;;  flag            1   70[BANK0 ] unsigned char 
 11703 ;;  ap              1   63[BANK0 ] PTR void [1]
 11704 ;;		 -> ?_sprintf(2), 
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  2   35[BANK0 ] int 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : F/0
 11711 ;;		On exit  : F/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11714 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11715 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11717 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11718 ;;Total ram usage:       39 bytes
 11719 ;; Hardware stack levels used:    1
 11720 ;; Hardware stack levels required when called:   12
 11721 ;; This function calls:
 11722 ;;		___lldiv
 11723 ;;		___llmod
 11724 ;;		___wmul
 11725 ;;		_isdigit
 11726 ;; This function is called by:
 11727 ;;		_display_dec
 11728 ;;		_print_time
 11729 ;;		_data_out
 11730 ;;		_display_LCD
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734                           	psect	text40
 11735  010000                     __ptext40:
 11736                           	opt stack 0
 11737  010000                     _sprintf:
 11738                           	opt stack 13
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;doprnt.c: 494: va_list ap;
 11742                           ;doprnt.c: 499: signed char c;
 11743                           ;doprnt.c: 501: int width;
 11744                           ;doprnt.c: 504: int prec;
 11745                           ;doprnt.c: 508: unsigned char flag;
 11746                           ;doprnt.c: 523: union {
 11747                           ;doprnt.c: 524: unsigned long vd;
 11748                           ;doprnt.c: 525: double integ;
 11749                           ;doprnt.c: 526: } tmpval;
 11750                           ;doprnt.c: 528: unsigned long val;
 11751                           ;doprnt.c: 529: unsigned len;
 11752                           ;doprnt.c: 530: const char * cp;
 11753                           ;doprnt.c: 533: *ap = __va_start();
 11754                           
 11755                           ;incstack = 0
 11756  010000  0E87               	movlw	low (?_sprintf+4)
 11757  010002  6F9F               	movwf	sprintf@ap& (0+255),b
 11758                           
 11759                           ;doprnt.c: 536: while(c = *f++) {
 11760  010004  D16C               	goto	l9946
 11761  010006                     l9808:
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;doprnt.c: 538: if(c != '%')
 11765  010006  0E25               	movlw	37
 11766  010008  19A7               	xorwf	sprintf@c& (0+255),w,b
 11767  01000A  E006               	bz	l1928
 11768                           
 11769                           ; BSR set to: 0
 11770                           ;doprnt.c: 540: {
 11771                           ;doprnt.c: 541: ((*sp++ = (c)));
 11772  01000C  D979               	call	PL88	;call to abstracted procedure
 11773  01000E  C0A7  FFDF         	movff	sprintf@c,indf2
 11774                           
 11775                           ; BSR set to: 0
 11776  010012  4B83               	infsnz	sprintf@sp& (0+255),f,b
 11777  010014  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 11778                           
 11779                           ;doprnt.c: 542: continue;
 11780  010016  D163               	goto	l9946
 11781  010018                     l1928:
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;doprnt.c: 543: }
 11785                           ;doprnt.c: 546: width = 0;
 11786  010018  6BA8               	clrf	sprintf@width& (0+255),b
 11787  01001A  6BA9               	clrf	(sprintf@width+1)& (0+255),b
 11788                           
 11789                           ;doprnt.c: 548: flag = 0;
 11790  01001C  6BA6               	clrf	sprintf@flag& (0+255),b
 11791  01001E  D003               	goto	l9818
 11792  010020                     l9814:
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;doprnt.c: 580: flag |= 0x04;
 11796  010020  85A6               	bsf	sprintf@flag& (0+255),2,b
 11797                           
 11798                           ;doprnt.c: 581: f++;
 11799  010022  4B85               	infsnz	sprintf@f& (0+255),f,b
 11800  010024  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 11801  010026                     l9818:
 11802                           
 11803                           ; BSR set to: 0
 11804  010026  D963               	call	PL60	;call to abstracted procedure
 11805                           
 11806                           ; Switch size 1, requested type "space"
 11807                           ; Number of cases is 1, Range of values is 48 to 48
 11808                           ; switch strategies available:
 11809                           ; Name         Instructions Cycles
 11810                           ; simple_byte            4     3 (average)
 11811                           ;	Chosen strategy is simple_byte
 11812  010028  0A30               	xorlw	48	; case 48
 11813  01002A  E0FA               	bz	l9814
 11814                           
 11815                           ; BSR set to: 0
 11816                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11817  01002C  D960               	call	PL60	;call to abstracted procedure
 11818  01002E  EC4B  F0A2         	call	_isdigit
 11819  010032  E201 D089          	bnc	l9868
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;doprnt.c: 598: width = 0;
 11823  010036  6BA8               	clrf	sprintf@width& (0+255),b
 11824  010038  6BA9               	clrf	(sprintf@width+1)& (0+255),b
 11825  01003A                     l9824:
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;doprnt.c: 600: width *= 10;
 11829  01003A  C0A8  F076         	movff	sprintf@width,___wmul@multiplier
 11830  01003E  C0A9  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 11831  010042  D97E               	call	PL356	;call to abstracted procedure
 11832  010044  EC81  F0A1         	call	___wmul	;wreg free
 11833  010048  C076  F0A8         	movff	?___wmul,sprintf@width
 11834  01004C  C077  F0A9         	movff	?___wmul+1,sprintf@width+1
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;doprnt.c: 601: width += *f++ - '0';
 11838  010050  0ED0               	movlw	208
 11839  010052  6F97               	movwf	??_sprintf& (0+255),b
 11840  010054  6998               	setf	(??_sprintf+1)& (0+255),b
 11841  010056  D94B               	call	PL60	;call to abstracted procedure
 11842  010058  6F99               	movwf	(??_sprintf+2)& (0+255),b
 11843  01005A  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 11844  01005C  5197               	movf	??_sprintf& (0+255),w,b
 11845  01005E  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 11846  010060  5198               	movf	(??_sprintf+1)& (0+255),w,b
 11847  010062  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 11848  010064  5199               	movf	(??_sprintf+2)& (0+255),w,b
 11849  010066  27A8               	addwf	sprintf@width& (0+255),f,b
 11850  010068  519A               	movf	(??_sprintf+3)& (0+255),w,b
 11851  01006A  23A9               	addwfc	(sprintf@width+1)& (0+255),f,b
 11852                           
 11853                           ; BSR set to: 0
 11854  01006C  4B85               	infsnz	sprintf@f& (0+255),f,b
 11855  01006E  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11859  010070  D93E               	call	PL60	;call to abstracted procedure
 11860  010072  EC4B  F0A2         	call	_isdigit
 11861  010076  E368               	bnc	l9868
 11862  010078  D7E0               	goto	l9824
 11863  01007A                     l9832:
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;doprnt.c: 643: flag |= 0x10;
 11867  01007A  89A6               	bsf	sprintf@flag& (0+255),4,b
 11868                           
 11869                           ;doprnt.c: 644: goto loop;
 11870  01007C  D065               	goto	l9868
 11871  01007E                     l9834:
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 11875  01007E  519F               	movf	sprintf@ap& (0+255),w,b
 11876  010080  6ED9               	movwf	fsr2l,c
 11877  010082  6ADA               	clrf	fsr2h,c
 11878  010084  CFDE F09D          	movff	postinc2,sprintf@cp
 11879  010088  CFDD F09E          	movff	postdec2,sprintf@cp+1
 11880                           
 11881                           ; BSR set to: 0
 11882  01008C  0E02               	movlw	2
 11883  01008E  279F               	addwf	sprintf@ap& (0+255),f,b
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;doprnt.c: 740: if(!cp)
 11887  010090  519D               	movf	sprintf@cp& (0+255),w,b
 11888  010092  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 11889  010094  E104               	bnz	l9842
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;doprnt.c: 741: cp = "(null)";
 11893  010096  0E8A               	movlw	low STR_118
 11894  010098  6F9D               	movwf	sprintf@cp& (0+255),b
 11895  01009A  0EFF               	movlw	high STR_118
 11896  01009C  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 11897  01009E                     l9842:
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;doprnt.c: 745: len = 0;
 11901  01009E  6BA0               	clrf	sprintf@len& (0+255),b
 11902  0100A0  6BA1               	clrf	(sprintf@len+1)& (0+255),b
 11903                           
 11904                           ;doprnt.c: 746: while(cp[len])
 11905  0100A2  D003               	goto	l9846
 11906  0100A4                     l9844:
 11907                           
 11908                           ;doprnt.c: 747: len++;
 11909  0100A4  0100               	movlb	0	; () banked
 11910  0100A6  4BA0               	infsnz	sprintf@len& (0+255),f,b
 11911  0100A8  2BA1               	incf	(sprintf@len+1)& (0+255),f,b
 11912  0100AA                     l9846:
 11913                           
 11914                           ; BSR set to: 0
 11915  0100AA  51A0               	movf	sprintf@len& (0+255),w,b
 11916  0100AC  259D               	addwf	sprintf@cp& (0+255),w,b
 11917  0100AE  6F97               	movwf	??_sprintf& (0+255),b
 11918  0100B0  51A1               	movf	(sprintf@len+1)& (0+255),w,b
 11919  0100B2  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 11920  0100B4  6F98               	movwf	(??_sprintf+1)& (0+255),b
 11921  0100B6  C097  FFF6         	movff	??_sprintf,tblptrl
 11922  0100BA  C098  FFF7         	movff	??_sprintf+1,tblptrh
 11923  0100BE  0E00               	movlw	low (__mediumconst shr (0+16))
 11924  0100C0  6EF8               	movwf	tblptru,c
 11925  0100C2  0E0E               	movlw	(high __ramtop+-1)
 11926  0100C4  64F7               	cpfsgt	tblptrh,c
 11927  0100C6  D003               	bra	u10047
 11928  0100C8  0008               	tblrd		*
 11929  0100CA  50F5               	movf	tablat,w,c
 11930  0100CC  D002               	bra	u10040
 11931  0100CE                     u10047:
 11932  0100CE  ECD2  F08F         	call	PL24	;call to abstracted procedure
 11933  0100D2                     u10040:
 11934  0100D2  0900               	iorlw	0
 11935  0100D4  E1E7               	bnz	l9844
 11936                           
 11937                           ;doprnt.c: 757: if(width > len)
 11938  0100D6  0100               	movlb	0	; () banked
 11939  0100D8  51A8               	movf	sprintf@width& (0+255),w,b
 11940  0100DA  5DA0               	subwf	sprintf@len& (0+255),w,b
 11941  0100DC  51A9               	movf	(sprintf@width+1)& (0+255),w,b
 11942  0100DE  59A1               	subwfb	(sprintf@len+1)& (0+255),w,b
 11943  0100E0  E205               	bc	l1951
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;doprnt.c: 758: width -= len;
 11947  0100E2  51A0               	movf	sprintf@len& (0+255),w,b
 11948  0100E4  5FA8               	subwf	sprintf@width& (0+255),f,b
 11949  0100E6  51A1               	movf	(sprintf@len+1)& (0+255),w,b
 11950  0100E8  5BA9               	subwfb	(sprintf@width+1)& (0+255),f,b
 11951  0100EA  D008               	goto	l9856
 11952  0100EC                     l1951:
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;doprnt.c: 759: else
 11956                           ;doprnt.c: 760: width = 0;
 11957  0100EC  6BA8               	clrf	sprintf@width& (0+255),b
 11958  0100EE  6BA9               	clrf	(sprintf@width+1)& (0+255),b
 11959  0100F0  D005               	goto	l9856
 11960  0100F2                     l9852:
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;doprnt.c: 765: ((*sp++ = (' ')));
 11964  0100F2  D906               	call	PL88	;call to abstracted procedure
 11965  0100F4  0E20               	movlw	32
 11966  0100F6  6EDF               	movwf	indf2,c
 11967                           
 11968                           ; BSR set to: 0
 11969  0100F8  4B83               	infsnz	sprintf@sp& (0+255),f,b
 11970  0100FA  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 11971  0100FC                     l9856:
 11972                           
 11973                           ; BSR set to: 0
 11974  0100FC  07A8               	decf	sprintf@width& (0+255),f,b
 11975  0100FE  A0D8               	btfss	status,0,c
 11976  010100  07A9               	decf	(sprintf@width+1)& (0+255),f,b
 11977  010102  29A8               	incf	sprintf@width& (0+255),w,b
 11978  010104  E1F6               	bnz	l9852
 11979  010106  29A9               	incf	(sprintf@width+1)& (0+255),w,b
 11980  010108  E016               	bz	l9864
 11981  01010A  D7F3               	goto	l9852
 11982  01010C                     l9858:
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 11986  01010C  C09D  FFF6         	movff	sprintf@cp,tblptrl
 11987  010110  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 11988  010114  0E00               	movlw	low (__mediumconst shr (0+16))
 11989  010116  6EF8               	movwf	tblptru,c
 11990  010118  D8F3               	call	PL88	;call to abstracted procedure
 11991  01011A  0E0E               	movlw	(high __ramtop+-1)
 11992  01011C  64F7               	cpfsgt	tblptrh,c
 11993  01011E  D003               	bra	u10087
 11994  010120  0008               	tblrd		*
 11995  010122  50F5               	movf	tablat,w,c
 11996  010124  D002               	bra	u10080
 11997  010126                     u10087:
 11998  010126  ECD2  F08F         	call	PL24	;call to abstracted procedure
 11999  01012A                     u10080:
 12000  01012A  6EDF               	movwf	indf2,c
 12001  01012C  0100               	movlb	0	; () banked
 12002  01012E  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 12003  010130  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 12004                           
 12005                           ; BSR set to: 0
 12006  010132  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12007  010134  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12008  010136                     l9864:
 12009                           
 12010                           ; BSR set to: 0
 12011  010136  07A0               	decf	sprintf@len& (0+255),f,b
 12012  010138  A0D8               	btfss	status,0,c
 12013  01013A  07A1               	decf	(sprintf@len+1)& (0+255),f,b
 12014  01013C  29A0               	incf	sprintf@len& (0+255),w,b
 12015  01013E  E1E6               	bnz	l9858
 12016  010140  29A1               	incf	(sprintf@len+1)& (0+255),w,b
 12017  010142  E101 D0CC          	bz	l9946
 12018  010146  D7E2               	goto	l9858
 12019  010148                     l9868:
 12020                           
 12021                           ; BSR set to: 0
 12022  010148  C085  FFF6         	movff	sprintf@f,tblptrl
 12023  01014C  D8DE               	call	PL130	;call to abstracted procedure
 12024                           
 12025                           ; Switch size 1, requested type "space"
 12026                           ; Number of cases is 5, Range of values is 0 to 115
 12027                           ; switch strategies available:
 12028                           ; Name         Instructions Cycles
 12029                           ; simple_byte           16     9 (average)
 12030                           ;	Chosen strategy is simple_byte
 12031  01014E  E101 D0CB          	bz	l9948
 12032  010152  0A64               	xorlw	100	; case 100
 12033  010154  E007               	bz	l1945
 12034  010156  0A0D               	xorlw	13	; case 105
 12035  010158  E005               	bz	l1945
 12036  01015A  0A05               	xorlw	5	; case 108
 12037  01015C  E08E               	bz	l9832
 12038  01015E  0A1F               	xorlw	31	; case 115
 12039  010160  E08E               	bz	l9834
 12040  010162  D0BD               	goto	l9946
 12041  010164                     l1945:
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;doprnt.c: 1253: {
 12045                           ;doprnt.c: 1255: if(flag & 0x10)
 12046  010164  A9A6               	btfss	sprintf@flag& (0+255),4,b
 12047  010166  D009               	goto	l9874
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 12051  010168  D8E0               	call	PL286	;call to abstracted procedure
 12052  01016A  CFDE F0A3          	movff	postinc2,sprintf@val+1
 12053  01016E  CFDE F0A4          	movff	postinc2,sprintf@val+2
 12054  010172  CFDE F0A5          	movff	postinc2,sprintf@val+3
 12055                           
 12056                           ; BSR set to: 0
 12057  010176  0E04               	movlw	4
 12058  010178  D009               	goto	L5
 12059  01017A                     l9874:
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;doprnt.c: 1257: else
 12063                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 12064  01017A  D8D7               	call	PL286	;call to abstracted procedure
 12065  01017C  CFDD F0A3          	movff	postdec2,sprintf@val+1
 12066  010180  0E00               	movlw	0
 12067  010182  BFA3               	btfsc	(sprintf@val+1)& (0+255),7,b
 12068  010184  0EFF               	movlw	-1
 12069  010186  6FA4               	movwf	(sprintf@val+2)& (0+255),b
 12070  010188  6FA5               	movwf	(sprintf@val+3)& (0+255),b
 12071                           
 12072                           ; BSR set to: 0
 12073  01018A  0E02               	movlw	2
 12074  01018C                     L5:
 12075  01018C  279F               	addwf	sprintf@ap& (0+255),f,b
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;doprnt.c: 1261: if((long)val < 0) {
 12079  01018E  AFA5               	btfss	(sprintf@val+3)& (0+255),7,b
 12080  010190  D00A               	goto	l9884
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;doprnt.c: 1262: flag |= 0x03;
 12084  010192  0E03               	movlw	3
 12085  010194  13A6               	iorwf	sprintf@flag& (0+255),f,b
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;doprnt.c: 1263: val = -val;
 12089  010196  1FA5               	comf	(sprintf@val+3)& (0+255),f,b
 12090  010198  1FA4               	comf	(sprintf@val+2)& (0+255),f,b
 12091  01019A  1FA3               	comf	(sprintf@val+1)& (0+255),f,b
 12092  01019C  6DA2               	negf	sprintf@val& (0+255),b
 12093  01019E  0E00               	movlw	0
 12094  0101A0  23A3               	addwfc	(sprintf@val+1)& (0+255),f,b
 12095  0101A2  23A4               	addwfc	(sprintf@val+2)& (0+255),f,b
 12096  0101A4  23A5               	addwfc	(sprintf@val+3)& (0+255),f,b
 12097  0101A6                     l9884:
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;doprnt.c: 1264: }
 12101                           ;doprnt.c: 1266: }
 12102                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12103  0101A6  0E01               	movlw	1
 12104  0101A8  6FA7               	movwf	sprintf@c& (0+255),b
 12105  0101AA                     l9890:
 12106                           
 12107                           ; BSR set to: 0
 12108                           ;doprnt.c: 1306: if(val < dpowers[c])
 12109  0101AA  51A7               	movf	sprintf@c& (0+255),w,b
 12110  0101AC  0D04               	mullw	4
 12111  0101AE  0E51               	movlw	low _dpowers
 12112  0101B0  24F3               	addwf	prodl,w,c
 12113  0101B2  6EF6               	movwf	tblptrl,c
 12114  0101B4  0EFA               	movlw	high _dpowers
 12115  0101B6  20F4               	addwfc	prodh,w,c
 12116  0101B8  ECE5  F08F         	call	PL142	;call to abstracted procedure
 12117  0101BC  50F5               	movf	tablat,w,c
 12118  0101BE  5DA2               	subwf	sprintf@val& (0+255),w,b
 12119  0101C0  0009               	tblrd		*+
 12120  0101C2  50F5               	movf	tablat,w,c
 12121  0101C4  59A3               	subwfb	(sprintf@val+1)& (0+255),w,b
 12122  0101C6  0009               	tblrd		*+
 12123  0101C8  50F5               	movf	tablat,w,c
 12124  0101CA  59A4               	subwfb	(sprintf@val+2)& (0+255),w,b
 12125  0101CC  0009               	tblrd		*+
 12126  0101CE  50F5               	movf	tablat,w,c
 12127  0101D0  59A5               	subwfb	(sprintf@val+3)& (0+255),w,b
 12128  0101D2  E304               	bnc	l9898
 12129                           
 12130                           ; BSR set to: 0
 12131  0101D4  2BA7               	incf	sprintf@c& (0+255),f,b
 12132                           
 12133                           ; BSR set to: 0
 12134  0101D6  0E0A               	movlw	10
 12135  0101D8  19A7               	xorwf	sprintf@c& (0+255),w,b
 12136  0101DA  E1E7               	bnz	l9890
 12137  0101DC                     l9898:
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;doprnt.c: 1345: if(width && flag & 0x03)
 12141  0101DC  51A8               	movf	sprintf@width& (0+255),w,b
 12142  0101DE  11A9               	iorwf	(sprintf@width+1)& (0+255),w,b
 12143  0101E0  E005               	bz	l9904
 12144                           
 12145                           ; BSR set to: 0
 12146  0101E2  D89E               	call	PL256	;call to abstracted procedure
 12147  0101E4  E003               	bz	l9904
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;doprnt.c: 1346: width--;
 12151  0101E6  07A8               	decf	sprintf@width& (0+255),f,b
 12152  0101E8  A0D8               	btfss	status,0,c
 12153  0101EA  07A9               	decf	(sprintf@width+1)& (0+255),f,b
 12154  0101EC                     l9904:
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;doprnt.c: 1381: if(width > c)
 12158  0101EC  0E80               	movlw	128
 12159  0101EE  BFA7               	btfsc	sprintf@c& (0+255),7,b
 12160  0101F0  0E7F               	movlw	127
 12161  0101F2  6F97               	movwf	??_sprintf& (0+255),b
 12162  0101F4  51A8               	movf	sprintf@width& (0+255),w,b
 12163  0101F6  5DA7               	subwf	sprintf@c& (0+255),w,b
 12164  0101F8  51A9               	movf	(sprintf@width+1)& (0+255),w,b
 12165  0101FA  0A80               	xorlw	128
 12166  0101FC  5997               	subwfb	??_sprintf& (0+255),w,b
 12167  0101FE  E207               	bc	l1967
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;doprnt.c: 1382: width -= c;
 12171  010200  51A7               	movf	sprintf@c& (0+255),w,b
 12172  010202  5FA8               	subwf	sprintf@width& (0+255),f,b
 12173  010204  0E00               	movlw	0
 12174  010206  BFA7               	btfsc	sprintf@c& (0+255),7,b
 12175  010208  0EFF               	movlw	255
 12176  01020A  5BA9               	subwfb	(sprintf@width+1)& (0+255),f,b
 12177  01020C  D002               	goto	l1968
 12178  01020E                     l1967:
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;doprnt.c: 1383: else
 12182                           ;doprnt.c: 1384: width = 0;
 12183  01020E  6BA8               	clrf	sprintf@width& (0+255),b
 12184  010210  6BA9               	clrf	(sprintf@width+1)& (0+255),b
 12185  010212                     l1968:
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;doprnt.c: 1387: if(flag & 0x04) {
 12189  010212  A5A6               	btfss	sprintf@flag& (0+255),2,b
 12190  010214  D010               	goto	l9922
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;doprnt.c: 1392: if(flag & 0x03)
 12194  010216  D884               	call	PL256	;call to abstracted procedure
 12195  010218  E005               	bz	l9914
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 12199  01021A  D872               	call	PL88	;call to abstracted procedure
 12200  01021C  0E2D               	movlw	45
 12201  01021E  6EDF               	movwf	indf2,c
 12202                           
 12203                           ; BSR set to: 0
 12204  010220  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12205  010222  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12206  010224                     l9914:
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;doprnt.c: 1415: if(width)
 12210  010224  51A8               	movf	sprintf@width& (0+255),w,b
 12211  010226  11A9               	iorwf	(sprintf@width+1)& (0+255),w,b
 12212  010228  E018               	bz	l9936
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 12216  01022A  D86A               	call	PL88	;call to abstracted procedure
 12217  01022C  0E30               	movlw	48
 12218                           
 12219                           ; BSR set to: 0
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;doprnt.c: 1418: while(--width);
 12223  01022E  D883               	call	PL300	;call to abstracted procedure
 12224  010230  A0D8               	btfss	status,0,c
 12225  010232  07A9               	decf	(sprintf@width+1)& (0+255),f,b
 12226  010234  D7F7               	goto	l9914
 12227  010236                     l9922:
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;doprnt.c: 1422: {
 12231                           ;doprnt.c: 1424: if(width
 12232                           ;doprnt.c: 1428: )
 12233  010236  51A8               	movf	sprintf@width& (0+255),w,b
 12234  010238  11A9               	iorwf	(sprintf@width+1)& (0+255),w,b
 12235  01023A  E008               	bz	l9930
 12236  01023C                     l9924:
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 12240  01023C  D861               	call	PL88	;call to abstracted procedure
 12241  01023E  0E20               	movlw	32
 12242                           
 12243                           ; BSR set to: 0
 12244                           
 12245                           ; BSR set to: 0
 12246                           ;doprnt.c: 1431: while(--width);
 12247  010240  D87A               	call	PL300	;call to abstracted procedure
 12248  010242  A0D8               	btfss	status,0,c
 12249  010244  07A9               	decf	(sprintf@width+1)& (0+255),f,b
 12250  010246  51A8               	movf	sprintf@width& (0+255),w,b
 12251  010248  11A9               	iorwf	(sprintf@width+1)& (0+255),w,b
 12252  01024A  E1F8               	bnz	l9924
 12253  01024C                     l9930:
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;doprnt.c: 1438: if(flag & 0x03)
 12257  01024C  D869               	call	PL256	;call to abstracted procedure
 12258  01024E  E005               	bz	l9936
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 12262  010250  D857               	call	PL88	;call to abstracted procedure
 12263  010252  0E2D               	movlw	45
 12264  010254  6EDF               	movwf	indf2,c
 12265                           
 12266                           ; BSR set to: 0
 12267  010256  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12268  010258  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12269  01025A                     l9936:
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;doprnt.c: 1469: }
 12273                           ;doprnt.c: 1472: prec = c;
 12274  01025A  51A7               	movf	sprintf@c& (0+255),w,b
 12275  01025C  6F9B               	movwf	sprintf@prec& (0+255),b
 12276  01025E  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 12277  010260  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 12278  010262  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 12279                           
 12280                           ;doprnt.c: 1474: while(prec--) {
 12281  010264  D035               	goto	l9944
 12282  010266                     l9938:
 12283                           
 12284                           ; BSR set to: 0
 12285                           ;doprnt.c: 1478: {
 12286                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12287  010266  C09B  F097         	movff	sprintf@prec,??_sprintf
 12288  01026A  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 12289  01026E  90D8               	bcf	status,0,c
 12290  010270  3797               	rlcf	??_sprintf& (0+255),f,b
 12291  010272  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 12292  010274  90D8               	bcf	status,0,c
 12293  010276  3797               	rlcf	??_sprintf& (0+255),f,b
 12294  010278  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 12295  01027A  0E51               	movlw	low _dpowers
 12296  01027C  2597               	addwf	??_sprintf& (0+255),w,b
 12297  01027E  6EF6               	movwf	tblptrl,c
 12298  010280  0EFA               	movlw	high _dpowers
 12299  010282  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 12300  010284  ECE5  F08F         	call	PL142	;call to abstracted procedure
 12301  010288  CFF5 F064          	movff	tablat,___lldiv@divisor
 12302  01028C  0009               	tblrd		*+
 12303  01028E  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 12304  010292  0009               	tblrd		*+
 12305  010294  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 12306  010298  000A               	tblrd		*-
 12307  01029A  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 12308  01029E  C0A2  F060         	movff	sprintf@val,___lldiv@dividend
 12309  0102A2  C0A3  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 12310  0102A6  C0A4  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 12311  0102AA  C0A5  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 12312  0102AE  ECF3  F09A         	call	___lldiv	;wreg free
 12313  0102B2  EC05  F083         	call	PL90	;call to abstracted procedure
 12314  0102B6  0E0A               	movlw	10
 12315  0102B8  EC16  F083         	call	PL216	;call to abstracted procedure
 12316  0102BC  EC34  F09C         	call	___llmod	;wreg free
 12317  0102C0  516D               	movf	?___llmod& (0+255),w,b
 12318  0102C2  0F30               	addlw	48
 12319  0102C4  6FA7               	movwf	sprintf@c& (0+255),b
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;doprnt.c: 1523: }
 12323                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12324  0102C6  D81C               	call	PL88	;call to abstracted procedure
 12325  0102C8  C0A7  FFDF         	movff	sprintf@c,indf2
 12326                           
 12327                           ; BSR set to: 0
 12328  0102CC  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12329  0102CE  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12330  0102D0                     l9944:
 12331                           
 12332                           ; BSR set to: 0
 12333  0102D0  079B               	decf	sprintf@prec& (0+255),f,b
 12334  0102D2  A0D8               	btfss	status,0,c
 12335  0102D4  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 12336  0102D6  299B               	incf	sprintf@prec& (0+255),w,b
 12337  0102D8  E1C6               	bnz	l9938
 12338  0102DA  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 12339  0102DC  E1C4               	bnz	l9938
 12340  0102DE                     l9946:
 12341                           
 12342                           ; BSR set to: 0
 12343  0102DE  C085  FFF6         	movff	sprintf@f,tblptrl
 12344  0102E2  D813               	call	PL130	;call to abstracted procedure
 12345  0102E4  E001 D68F          	bnz	l9808
 12346  0102E8                     l9948:
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;doprnt.c: 1538: *sp = 0;
 12350  0102E8  D80B               	call	PL88	;call to abstracted procedure
 12351  0102EA  6ADF               	clrf	indf2,c
 12352                           
 12353                           ; BSR set to: 0
 12354  0102EC  0C00               	retlw	0	;funcret
 12355  0102EE                     __end_of_sprintf:
 12356                           	opt stack 0
 12357  0102EE                     PL60:
 12358                           	opt stack 13
 12359  0102EE  C085  FFF6         	movff	sprintf@f,tblptrl
 12360  0102F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 12361  0102F6                     	if	0	;tblptru may be non-zero
 12362  0102F6                     	endif
 12363  0102F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12364  0102F6  0E00               	movlw	low (__mediumconst shr (0+16))
 12365  0102F8  6EF8               	movwf	tblptru,c
 12366  0102FA                     	endif
 12367  0102FA  0008               	tblrd		*
 12368  0102FC  50F5               	movf	tablat,w,c
 12369  0102FE  0012               	return	
 12370  010300                     __end_ofPL60:
 12371                           	opt stack 0
 12372  010300                     PL88:
 12373                           	opt stack 13
 12374  010300  C083  FFD9         	movff	sprintf@sp,fsr2l
 12375  010304  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12376  010308  0012               	return	
 12377  01030A                     __end_ofPL88:
 12378                           	opt stack 0
 12379  01030A                     PL130:
 12380                           	opt stack 13
 12381  01030A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 12382  01030E  4B85               	infsnz	sprintf@f& (0+255),f,b
 12383  010310  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 12384  010312                     	if	0	;tblptru may be non-zero
 12385  010312                     	endif
 12386  010312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12387  010312  0E00               	movlw	low (__mediumconst shr (0+16))
 12388  010314  6EF8               	movwf	tblptru,c
 12389  010316                     	endif
 12390  010316  0008               	tblrd		*
 12391  010318  CFF5 F0A7          	movff	tablat,sprintf@c
 12392  01031C  51A7               	movf	sprintf@c& (0+255),w,b
 12393  01031E  0012               	return	
 12394  010320                     __end_ofPL130:
 12395                           	opt stack 0
 12396  010320                     PL256:
 12397                           	opt stack 13
 12398  010320  C0A6  F097         	movff	sprintf@flag,??_sprintf
 12399  010324  0E03               	movlw	3
 12400  010326  1797               	andwf	??_sprintf& (0+255),f,b
 12401  010328  0C03               	retlw	3
 12402  01032A                     __end_ofPL256:
 12403                           	opt stack 0
 12404  01032A                     PL286:
 12405                           	opt stack 13
 12406  01032A  519F               	movf	sprintf@ap& (0+255),w,b
 12407  01032C  6ED9               	movwf	fsr2l,c
 12408  01032E  6ADA               	clrf	fsr2h,c
 12409  010330  CFDE F0A2          	movff	postinc2,sprintf@val
 12410  010334  0012               	return	
 12411  010336                     __end_ofPL286:
 12412                           	opt stack 0
 12413  010336                     PL300:
 12414                           	opt stack 13
 12415  010336  6EDF               	movwf	indf2,c
 12416  010338  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12417  01033A  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12418  01033C  07A8               	decf	sprintf@width& (0+255),f,b
 12419  01033E  0012               	return	
 12420  010340                     __end_ofPL300:
 12421                           	opt stack 0
 12422  010340                     PL356:
 12423                           	opt stack 15
 12424  010340  6B79               	clrf	(___wmul@multiplicand+1)& (0+255),b
 12425  010342  0E0A               	movlw	10
 12426  010344  6F78               	movwf	___wmul@multiplicand& (0+255),b
 12427  010346  0C0A               	retlw	10
 12428  010348                     __end_ofPL356:
 12429                           	opt stack 0
 12430                           tblptru	equ	0xFF8
 12431                           tblptrh	equ	0xFF7
 12432                           tblptrl	equ	0xFF6
 12433                           tablat	equ	0xFF5
 12434                           prodh	equ	0xFF4
 12435                           prodl	equ	0xFF3
 12436                           intcon	equ	0xFF2
 12437                           intcon2	equ	0xFF1
 12438                           postinc0	equ	0xFEE
 12439                           wreg	equ	0xFE8
 12440                           indf1	equ	0xFE7
 12441                           postinc1	equ	0xFE6
 12442                           postdec1	equ	0xFE5
 12443                           fsr1h	equ	0xFE2
 12444                           fsr1l	equ	0xFE1
 12445                           indf2	equ	0xFDF
 12446                           postinc2	equ	0xFDE
 12447                           postdec2	equ	0xFDD
 12448                           plusw2	equ	0xFDB
 12449                           fsr2h	equ	0xFDA
 12450                           fsr2l	equ	0xFD9
 12451                           status	equ	0xFD8
 12452                           
 12453 ;; *************** function _isdigit *****************
 12454 ;; Defined at:
 12455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;  c               1    wreg     unsigned char 
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;  c               1    2[BANK0 ] unsigned char 
 12460 ;; Return value:  Size  Location     Type
 12461 ;;		None               void
 12462 ;; Registers used:
 12463 ;;		wreg, status,2, status,0
 12464 ;; Tracked objects:
 12465 ;;		On entry : F/0
 12466 ;;		On exit  : F/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12472 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12473 ;;Total ram usage:        3 bytes
 12474 ;; Hardware stack levels used:    1
 12475 ;; Hardware stack levels required when called:   11
 12476 ;; This function calls:
 12477 ;;		Nothing
 12478 ;; This function is called by:
 12479 ;;		_sprintf
 12480 ;;		_atoi
 12481 ;; This function uses a non-reentrant model
 12482 ;;
 12483                           
 12484                           	psect	text41
 12485  014496                     __ptext41:
 12486                           	opt stack 0
 12487  014496                     _isdigit:
 12488                           	opt stack 13
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;incstack = 0
 12492                           ;isdigit@c stored from wreg
 12493  014496  6F62               	movwf	isdigit@c& (0+255),b
 12494  014498  0100               	movlb	0	; () banked
 12495  01449A  6B61               	clrf	_isdigit$6473& (0+255),b
 12496                           
 12497                           ; BSR set to: 0
 12498  01449C  0E3A               	movlw	58
 12499  01449E  6162               	cpfslt	isdigit@c& (0+255),b
 12500  0144A0  D005               	goto	l9704
 12501                           
 12502                           ; BSR set to: 0
 12503  0144A2  0E2F               	movlw	47
 12504  0144A4  6562               	cpfsgt	isdigit@c& (0+255),b
 12505  0144A6  D002               	goto	l9704
 12506                           
 12507                           ; BSR set to: 0
 12508  0144A8  0E01               	movlw	1
 12509  0144AA  6F61               	movwf	_isdigit$6473& (0+255),b
 12510  0144AC                     l9704:
 12511                           
 12512                           ; BSR set to: 0
 12513  0144AC  C061  F060         	movff	_isdigit$6473,??_isdigit
 12514  0144B0  3160               	rrcf	??_isdigit& (0+255),w,b
 12515                           
 12516                           ; BSR set to: 0
 12517  0144B2  0012               	return		;funcret
 12518  0144B4                     __end_of_isdigit:
 12519                           	opt stack 0
 12520                           tblptru	equ	0xFF8
 12521                           tblptrh	equ	0xFF7
 12522                           tblptrl	equ	0xFF6
 12523                           tablat	equ	0xFF5
 12524                           prodh	equ	0xFF4
 12525                           prodl	equ	0xFF3
 12526                           intcon	equ	0xFF2
 12527                           intcon2	equ	0xFF1
 12528                           postinc0	equ	0xFEE
 12529                           wreg	equ	0xFE8
 12530                           indf1	equ	0xFE7
 12531                           postinc1	equ	0xFE6
 12532                           postdec1	equ	0xFE5
 12533                           fsr1h	equ	0xFE2
 12534                           fsr1l	equ	0xFE1
 12535                           indf2	equ	0xFDF
 12536                           postinc2	equ	0xFDE
 12537                           postdec2	equ	0xFDD
 12538                           plusw2	equ	0xFDB
 12539                           fsr2h	equ	0xFDA
 12540                           fsr2l	equ	0xFD9
 12541                           status	equ	0xFD8
 12542                           
 12543 ;; *************** function ___llmod *****************
 12544 ;; Defined at:
 12545 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;  dividend        4   13[BANK0 ] unsigned long 
 12548 ;;  divisor         4   17[BANK0 ] unsigned long 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;  counter         1   21[BANK0 ] unsigned char 
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  4   13[BANK0 ] unsigned long 
 12553 ;; Registers used:
 12554 ;;		wreg, status,2, status,0
 12555 ;; Tracked objects:
 12556 ;;		On entry : F/0
 12557 ;;		On exit  : F/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12560 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12563 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12564 ;;Total ram usage:        9 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:   11
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_display_LCD
 12571 ;;		_sprintf
 12572 ;; This function uses a non-reentrant model
 12573 ;;
 12574                           
 12575                           	psect	text42
 12576  013868                     __ptext42:
 12577                           	opt stack 0
 12578  013868                     ___llmod:
 12579                           	opt stack 13
 12580                           
 12581                           ; BSR set to: 0
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;incstack = 0
 12585  013868  5171               	movf	___llmod@divisor& (0+255),w,b
 12586  01386A  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12587  01386C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12588  01386E  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12589  013870  E023               	bz	l2363
 12590                           
 12591                           ; BSR set to: 0
 12592  013872  0E01               	movlw	1
 12593  013874  6F75               	movwf	___llmod@counter& (0+255),b
 12594  013876  D006               	goto	l9720
 12595  013878                     l9718:
 12596                           
 12597                           ; BSR set to: 0
 12598  013878  90D8               	bcf	status,0,c
 12599  01387A  3771               	rlcf	___llmod@divisor& (0+255),f,b
 12600  01387C  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12601  01387E  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12602  013880  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12603  013882  2B75               	incf	___llmod@counter& (0+255),f,b
 12604  013884                     l9720:
 12605                           
 12606                           ; BSR set to: 0
 12607  013884  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12608  013886  D7F8               	goto	l9718
 12609  013888                     l9722:
 12610                           
 12611                           ; BSR set to: 0
 12612  013888  5171               	movf	___llmod@divisor& (0+255),w,b
 12613  01388A  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 12614  01388C  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 12615  01388E  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12616  013890  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 12617  013892  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12618  013894  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 12619  013896  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12620  013898  E308               	bnc	l9726
 12621                           
 12622                           ; BSR set to: 0
 12623  01389A  5171               	movf	___llmod@divisor& (0+255),w,b
 12624  01389C  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 12625  01389E  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 12626  0138A0  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12627  0138A2  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 12628  0138A4  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12629  0138A6  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 12630  0138A8  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12631  0138AA                     l9726:
 12632                           
 12633                           ; BSR set to: 0
 12634  0138AA  90D8               	bcf	status,0,c
 12635  0138AC  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12636  0138AE  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12637  0138B0  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12638  0138B2  3371               	rrcf	___llmod@divisor& (0+255),f,b
 12639                           
 12640                           ; BSR set to: 0
 12641  0138B4  2F75               	decfsz	___llmod@counter& (0+255),f,b
 12642  0138B6  D7E8               	goto	l9722
 12643  0138B8                     l2363:
 12644                           
 12645                           ; BSR set to: 0
 12646  0138B8  C06D  F06D         	movff	___llmod@dividend,?___llmod
 12647  0138BC  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 12648  0138C0  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 12649  0138C4  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 12650                           
 12651                           ; BSR set to: 0
 12652  0138C8  0012               	return		;funcret
 12653  0138CA                     __end_of___llmod:
 12654                           	opt stack 0
 12655                           tblptru	equ	0xFF8
 12656                           tblptrh	equ	0xFF7
 12657                           tblptrl	equ	0xFF6
 12658                           tablat	equ	0xFF5
 12659                           prodh	equ	0xFF4
 12660                           prodl	equ	0xFF3
 12661                           intcon	equ	0xFF2
 12662                           intcon2	equ	0xFF1
 12663                           postinc0	equ	0xFEE
 12664                           wreg	equ	0xFE8
 12665                           indf1	equ	0xFE7
 12666                           postinc1	equ	0xFE6
 12667                           postdec1	equ	0xFE5
 12668                           fsr1h	equ	0xFE2
 12669                           fsr1l	equ	0xFE1
 12670                           indf2	equ	0xFDF
 12671                           postinc2	equ	0xFDE
 12672                           postdec2	equ	0xFDD
 12673                           plusw2	equ	0xFDB
 12674                           fsr2h	equ	0xFDA
 12675                           fsr2l	equ	0xFD9
 12676                           status	equ	0xFD8
 12677                           
 12678 ;; *************** function _ringbuf_put_str *****************
 12679 ;; Defined at:
 12680 ;;		line 39 in file "../My_library/My_ringbuf.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 12683 ;;		 -> usb_tx(8), 
 12684 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 12685 ;;		 -> STR_69(2), data_out@str(30), STR_66(18), STR_63(36), 
 12686 ;;		 -> STR_62(24), STR_53(434), STR_24(8), print_time@str(30), 
 12687 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
 12688 ;; Auto vars:     Size  Location     Type
 12689 ;;		None
 12690 ;; Return value:  Size  Location     Type
 12691 ;;		None               void
 12692 ;; Registers used:
 12693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12694 ;; Tracked objects:
 12695 ;;		On entry : F/0
 12696 ;;		On exit  : 0/0
 12697 ;;		Unchanged: 0/0
 12698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12699 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12702 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12703 ;;Total ram usage:        4 bytes
 12704 ;; Hardware stack levels used:    1
 12705 ;; Hardware stack levels required when called:   13
 12706 ;; This function calls:
 12707 ;;		_ringbuf_put
 12708 ;; This function is called by:
 12709 ;;		_terminal_task
 12710 ;;		_print_time
 12711 ;;		_terminal_at_hand
 12712 ;;		_terminal_operation
 12713 ;;		_data_out
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           
 12717                           	psect	text43
 12718  013B80                     __ptext43:
 12719                           	opt stack 0
 12720  013B80                     _ringbuf_put_str:
 12721                           	opt stack 13
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;My_ringbuf.c: 40: while (*str) {
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;incstack = 0
 12728  013B80  D012               	goto	l9736
 12729  013B82                     l9732:
 12730                           
 12731                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 12732  013B82  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 12733  013B86  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 12734  013B8A  D818               	call	PL234	;call to abstracted procedure
 12735  013B8C  64F7               	cpfsgt	tblptrh,c
 12736  013B8E  D003               	bra	u9937
 12737  013B90  0008               	tblrd		*
 12738  013B92  50F5               	movf	tablat,w,c
 12739  013B94  D002               	bra	u9930
 12740  013B96                     u9937:
 12741  013B96  ECD2  F08F         	call	PL24	;call to abstracted procedure
 12742  013B9A                     u9930:
 12743  013B9A  0100               	movlb	0	; () banked
 12744  013B9C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12745  013B9E  ECC5  F093         	call	_ringbuf_put	;wreg free
 12746                           
 12747                           ; BSR set to: 0
 12748  013BA2  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 12749  013BA4  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 12750  013BA6                     l9736:
 12751                           
 12752                           ; BSR set to: 0
 12753  013BA6  D80A               	call	PL234	;call to abstracted procedure
 12754  013BA8  64F7               	cpfsgt	tblptrh,c
 12755  013BAA  D003               	bra	u9947
 12756  013BAC  0008               	tblrd		*
 12757  013BAE  50F5               	movf	tablat,w,c
 12758  013BB0  D002               	bra	u9940
 12759  013BB2                     u9947:
 12760  013BB2  ECD2  F08F         	call	PL24	;call to abstracted procedure
 12761  013BB6                     u9940:
 12762  013BB6  0900               	iorlw	0
 12763  013BB8  E1E4               	bnz	l9732
 12764  013BBA  0012               	return		;funcret
 12765  013BBC                     __end_of_ringbuf_put_str:
 12766                           	opt stack 0
 12767  013BBC                     PL234:
 12768                           	opt stack 13
 12769  013BBC  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 12770  013BC0  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 12771  013BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 12772  013BC6  6EF8               	movwf	tblptru,c
 12773  013BC8  0E0E               	movlw	(high __ramtop+-1)
 12774  013BCA  0012               	return	
 12775  013BCC                     __end_ofPL234:
 12776                           	opt stack 0
 12777                           tblptru	equ	0xFF8
 12778                           tblptrh	equ	0xFF7
 12779                           tblptrl	equ	0xFF6
 12780                           tablat	equ	0xFF5
 12781                           prodh	equ	0xFF4
 12782                           prodl	equ	0xFF3
 12783                           intcon	equ	0xFF2
 12784                           intcon2	equ	0xFF1
 12785                           postinc0	equ	0xFEE
 12786                           wreg	equ	0xFE8
 12787                           indf1	equ	0xFE7
 12788                           postinc1	equ	0xFE6
 12789                           postdec1	equ	0xFE5
 12790                           fsr1h	equ	0xFE2
 12791                           fsr1l	equ	0xFE1
 12792                           indf2	equ	0xFDF
 12793                           postinc2	equ	0xFDE
 12794                           postdec2	equ	0xFDD
 12795                           plusw2	equ	0xFDB
 12796                           fsr2h	equ	0xFDA
 12797                           fsr2l	equ	0xFD9
 12798                           status	equ	0xFD8
 12799                           
 12800 ;; *************** function ___lwmod *****************
 12801 ;; Defined at:
 12802 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  dividend        2    0[BANK0 ] unsigned int 
 12805 ;;  divisor         2    2[BANK0 ] unsigned int 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  counter         1    4[BANK0 ] unsigned char 
 12808 ;; Return value:  Size  Location     Type
 12809 ;;                  2    0[BANK0 ] unsigned int 
 12810 ;; Registers used:
 12811 ;;		wreg, status,2, status,0
 12812 ;; Tracked objects:
 12813 ;;		On entry : F/0
 12814 ;;		On exit  : F/0
 12815 ;;		Unchanged: 0/0
 12816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12820 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12821 ;;Total ram usage:        5 bytes
 12822 ;; Hardware stack levels used:    1
 12823 ;; Hardware stack levels required when called:   11
 12824 ;; This function calls:
 12825 ;;		Nothing
 12826 ;; This function is called by:
 12827 ;;		_ringbuf_put_num
 12828 ;;		_data_out
 12829 ;;		_display_LCD
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           	psect	text44
 12834  013FF2                     __ptext44:
 12835                           	opt stack 0
 12836  013FF2                     ___lwmod:
 12837                           	opt stack 17
 12838                           
 12839                           ; BSR set to: 0
 12840                           
 12841                           ;incstack = 0
 12842  013FF2  5162               	movf	___lwmod@divisor& (0+255),w,b
 12843  013FF4  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 12844  013FF6  E017               	bz	l2416
 12845                           
 12846                           ; BSR set to: 0
 12847  013FF8  0E01               	movlw	1
 12848  013FFA  6F64               	movwf	___lwmod@counter& (0+255),b
 12849  013FFC  D004               	goto	l10942
 12850  013FFE                     l10940:
 12851                           
 12852                           ; BSR set to: 0
 12853  013FFE  90D8               	bcf	status,0,c
 12854  014000  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 12855  014002  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 12856  014004  2B64               	incf	___lwmod@counter& (0+255),f,b
 12857  014006                     l10942:
 12858                           
 12859                           ; BSR set to: 0
 12860  014006  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 12861  014008  D7FA               	goto	l10940
 12862  01400A                     l10944:
 12863                           
 12864                           ; BSR set to: 0
 12865  01400A  5162               	movf	___lwmod@divisor& (0+255),w,b
 12866  01400C  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 12867  01400E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12868  014010  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 12869  014012  E304               	bnc	l10948
 12870                           
 12871                           ; BSR set to: 0
 12872  014014  5162               	movf	___lwmod@divisor& (0+255),w,b
 12873  014016  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 12874  014018  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12875  01401A  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 12876  01401C                     l10948:
 12877                           
 12878                           ; BSR set to: 0
 12879  01401C  90D8               	bcf	status,0,c
 12880  01401E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 12881  014020  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 12882                           
 12883                           ; BSR set to: 0
 12884  014022  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 12885  014024  D7F2               	goto	l10944
 12886  014026                     l2416:
 12887                           
 12888                           ; BSR set to: 0
 12889  014026  C060  F060         	movff	___lwmod@dividend,?___lwmod
 12890  01402A  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 12891                           
 12892                           ; BSR set to: 0
 12893  01402E  0012               	return		;funcret
 12894  014030                     __end_of___lwmod:
 12895                           	opt stack 0
 12896                           tblptru	equ	0xFF8
 12897                           tblptrh	equ	0xFF7
 12898                           tblptrl	equ	0xFF6
 12899                           tablat	equ	0xFF5
 12900                           prodh	equ	0xFF4
 12901                           prodl	equ	0xFF3
 12902                           intcon	equ	0xFF2
 12903                           intcon2	equ	0xFF1
 12904                           postinc0	equ	0xFEE
 12905                           wreg	equ	0xFE8
 12906                           indf1	equ	0xFE7
 12907                           postinc1	equ	0xFE6
 12908                           postdec1	equ	0xFE5
 12909                           fsr1h	equ	0xFE2
 12910                           fsr1l	equ	0xFE1
 12911                           indf2	equ	0xFDF
 12912                           postinc2	equ	0xFDE
 12913                           postdec2	equ	0xFDD
 12914                           plusw2	equ	0xFDB
 12915                           fsr2h	equ	0xFDA
 12916                           fsr2l	equ	0xFD9
 12917                           status	equ	0xFD8
 12918                           
 12919 ;; *************** function _Auto_cut *****************
 12920 ;; Defined at:
 12921 ;;		line 49 in file "ChargeStation_task.c"
 12922 ;; Parameters:    Size  Location     Type
 12923 ;;		None
 12924 ;; Auto vars:     Size  Location     Type
 12925 ;;  i               1   30[BANK0 ] unsigned char 
 12926 ;; Return value:  Size  Location     Type
 12927 ;;		None               void
 12928 ;; Registers used:
 12929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12930 ;; Tracked objects:
 12931 ;;		On entry : F/1
 12932 ;;		On exit  : F/0
 12933 ;;		Unchanged: 0/0
 12934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12937 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12938 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12939 ;;Total ram usage:        3 bytes
 12940 ;; Hardware stack levels used:    1
 12941 ;; Hardware stack levels required when called:   12
 12942 ;; This function calls:
 12943 ;;		_ADC
 12944 ;;		_ANALOG_IN
 12945 ;;		_OUT
 12946 ;;		___wmul
 12947 ;; This function is called by:
 12948 ;;		_normal_task
 12949 ;; This function uses a non-reentrant model
 12950 ;;
 12951                           
 12952                           	psect	text45
 12953  012504                     __ptext45:
 12954                           	opt stack 0
 12955  012504                     _Auto_cut:
 12956                           	opt stack 17
 12957                           
 12958                           ; BSR set to: 1
 12959                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;incstack = 0
 12963  012504  0100               	movlb	0	; () banked
 12964  012506  6B7E               	clrf	Auto_cut@i& (0+255),b
 12965  012508                     l11234:
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 12969  012508  517E               	movf	Auto_cut@i& (0+255),w,b
 12970  01250A  EC68  F0A2         	call	_ANALOG_IN
 12971  01250E  EC1A  F0A1         	call	_ADC
 12972  012512  C060  F076         	movff	?_ADC,___wmul@multiplier
 12973  012516  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 12974  01251A  0100               	movlb	0	; () banked
 12975  01251C  6B79               	clrf	(___wmul@multiplicand+1)& (0+255),b
 12976  01251E  0E0D               	movlw	13
 12977  012520  6F78               	movwf	___wmul@multiplicand& (0+255),b
 12978  012522  EC81  F0A1         	call	___wmul	;wreg free
 12979  012526  0E04               	movlw	4
 12980  012528  6F7C               	movwf	??_Auto_cut& (0+255),b
 12981  01252A                     u12055:
 12982  01252A  90D8               	bcf	status,0,c
 12983  01252C  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 12984  01252E  3376               	rrcf	?___wmul& (0+255),f,b
 12985  012530  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 12986  012532  D7FB               	goto	u12055
 12987  012534  517E               	movf	Auto_cut@i& (0+255),w,b
 12988  012536  ECEA  F082         	call	PL16	;call to abstracted procedure
 12989  01253A  C076  FFDE         	movff	?___wmul,postinc2
 12990  01253E  C077  FFDD         	movff	?___wmul+1,postdec2
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 12994  012542  517E               	movf	Auto_cut@i& (0+255),w,b
 12995  012544  ECEC  F08C         	call	PL4	;call to abstracted procedure
 12996  012548  A0DF               	btfss	indf2,0,c
 12997  01254A  D020               	goto	l11246
 12998                           
 12999                           ; BSR set to: 1
 13000                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 13001  01254C  0100               	movlb	0	; () banked
 13002  01254E  517E               	movf	Auto_cut@i& (0+255),w,b
 13003  012550  ECEA  F082         	call	PL16	;call to abstracted procedure
 13004  012554  0E01               	movlw	1
 13005  012556  50DB               	movf	plusw2,w,c
 13006  012558  E115               	bnz	l11244
 13007  01255A  0E64               	movlw	100
 13008  01255C  5CDE               	subwf	postinc2,w,c
 13009  01255E  E212               	bc	l11244
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 13013  012560  517E               	movf	Auto_cut@i& (0+255),w,b
 13014  012562  D81A               	call	PL52	;call to abstracted procedure
 13015  012564  2ADE               	incf	postinc2,f,c
 13016  012566  0E00               	movlw	0
 13017  012568  22DD               	addwfc	postdec2,f,c
 13018                           
 13019                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 13020  01256A  517E               	movf	Auto_cut@i& (0+255),w,b
 13021  01256C  D815               	call	PL52	;call to abstracted procedure
 13022  01256E  0E01               	movlw	1
 13023  012570  50DB               	movf	plusw2,w,c
 13024  012572  E103               	bnz	u12080
 13025  012574  0E07               	movlw	7
 13026  012576  5CDE               	subwf	postinc2,w,c
 13027  012578  E309               	bnc	l11246
 13028  01257A                     u12080:
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;ChargeStation_task.c: 57: OUT(i, 0);
 13032  01257A  6B60               	clrf	OUT@value& (0+255),b
 13033  01257C  517E               	movf	Auto_cut@i& (0+255),w,b
 13034  01257E  EC7B  F09E         	call	_OUT
 13035  012582  D004               	goto	l11246
 13036  012584                     l11244:
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 13040  012584  517E               	movf	Auto_cut@i& (0+255),w,b
 13041  012586  D808               	call	PL52	;call to abstracted procedure
 13042  012588  6ADE               	clrf	postinc2,c
 13043  01258A  6ADD               	clrf	postdec2,c
 13044  01258C                     l11246:
 13045  01258C  0100               	movlb	0	; () banked
 13046  01258E  2B7E               	incf	Auto_cut@i& (0+255),f,b
 13047                           
 13048                           ; BSR set to: 0
 13049  012590  0E02               	movlw	2
 13050  012592  657E               	cpfsgt	Auto_cut@i& (0+255),b
 13051  012594  D7B9               	goto	l11234
 13052  012596  0C02               	retlw	2
 13053  012598                     __end_of_Auto_cut:
 13054                           	opt stack 0
 13055  012598                     PL52:
 13056                           	opt stack 16
 13057  012598  0D17               	mullw	23
 13058  01259A  0E51               	movlw	low (_port+20)
 13059  01259C  24F3               	addwf	prodl,w,c
 13060  01259E  6ED9               	movwf	fsr2l,c
 13061  0125A0  0E01               	movlw	high (_port+20)
 13062  0125A2  20F4               	addwfc	prodh,w,c
 13063  0125A4  6EDA               	movwf	fsr2h,c
 13064  0125A6  0012               	return	
 13065  0125A8                     __end_ofPL52:
 13066                           	opt stack 0
 13067                           tblptru	equ	0xFF8
 13068                           tblptrh	equ	0xFF7
 13069                           tblptrl	equ	0xFF6
 13070                           tablat	equ	0xFF5
 13071                           prodh	equ	0xFF4
 13072                           prodl	equ	0xFF3
 13073                           intcon	equ	0xFF2
 13074                           intcon2	equ	0xFF1
 13075                           postinc0	equ	0xFEE
 13076                           wreg	equ	0xFE8
 13077                           indf1	equ	0xFE7
 13078                           postinc1	equ	0xFE6
 13079                           postdec1	equ	0xFE5
 13080                           fsr1h	equ	0xFE2
 13081                           fsr1l	equ	0xFE1
 13082                           indf2	equ	0xFDF
 13083                           postinc2	equ	0xFDE
 13084                           postdec2	equ	0xFDD
 13085                           plusw2	equ	0xFDB
 13086                           fsr2h	equ	0xFDA
 13087                           fsr2l	equ	0xFD9
 13088                           status	equ	0xFD8
 13089                           
 13090 ;; *************** function ___wmul *****************
 13091 ;; Defined at:
 13092 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;  multiplier      2   22[BANK0 ] unsigned int 
 13095 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;  product         2   26[BANK0 ] unsigned int 
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  2   22[BANK0 ] unsigned int 
 13100 ;; Registers used:
 13101 ;;		wreg, status,2, status,0, prodl, prodh
 13102 ;; Tracked objects:
 13103 ;;		On entry : F/0
 13104 ;;		On exit  : F/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13107 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13108 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13110 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13111 ;;Total ram usage:        6 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:   11
 13114 ;; This function calls:
 13115 ;;		Nothing
 13116 ;; This function is called by:
 13117 ;;		_Auto_cut
 13118 ;;		_ctmu_set_ratio
 13119 ;;		_sprintf
 13120 ;;		_atoi
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text46
 13125  014302                     __ptext46:
 13126                           	opt stack 0
 13127  014302                     ___wmul:
 13128                           	opt stack 13
 13129                           
 13130                           ; BSR set to: 0
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;incstack = 0
 13134  014302  5176               	movf	___wmul@multiplier& (0+255),w,b
 13135  014304  0378               	mulwf	___wmul@multiplicand& (0+255),b
 13136  014306  CFF3 F07A          	movff	prodl,___wmul@product
 13137  01430A  CFF4 F07B          	movff	prodh,___wmul@product+1
 13138  01430E  5176               	movf	___wmul@multiplier& (0+255),w,b
 13139  014310  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13140  014312  50F3               	movf	prodl,w,c
 13141  014314  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 13142  014316  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13143  014318  0378               	mulwf	___wmul@multiplicand& (0+255),b
 13144  01431A  50F3               	movf	prodl,w,c
 13145  01431C  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 13146                           
 13147                           ; BSR set to: 0
 13148  01431E  C07A  F076         	movff	___wmul@product,?___wmul
 13149  014322  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 13150                           
 13151                           ; BSR set to: 0
 13152  014326  0012               	return		;funcret
 13153  014328                     __end_of___wmul:
 13154                           	opt stack 0
 13155                           tblptru	equ	0xFF8
 13156                           tblptrh	equ	0xFF7
 13157                           tblptrl	equ	0xFF6
 13158                           tablat	equ	0xFF5
 13159                           prodh	equ	0xFF4
 13160                           prodl	equ	0xFF3
 13161                           intcon	equ	0xFF2
 13162                           intcon2	equ	0xFF1
 13163                           postinc0	equ	0xFEE
 13164                           wreg	equ	0xFE8
 13165                           indf1	equ	0xFE7
 13166                           postinc1	equ	0xFE6
 13167                           postdec1	equ	0xFE5
 13168                           fsr1h	equ	0xFE2
 13169                           fsr1l	equ	0xFE1
 13170                           indf2	equ	0xFDF
 13171                           postinc2	equ	0xFDE
 13172                           postdec2	equ	0xFDD
 13173                           plusw2	equ	0xFDB
 13174                           fsr2h	equ	0xFDA
 13175                           fsr2l	equ	0xFD9
 13176                           status	equ	0xFD8
 13177                           
 13178 ;; *************** function _OUT *****************
 13179 ;; Defined at:
 13180 ;;		line 7 in file "io.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;  b               1    wreg     unsigned char 
 13183 ;;  value           1    0[BANK0 ] unsigned char 
 13184 ;; Auto vars:     Size  Location     Type
 13185 ;;  b               1    1[BANK0 ] unsigned char 
 13186 ;; Return value:  Size  Location     Type
 13187 ;;		None               void
 13188 ;; Registers used:
 13189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13190 ;; Tracked objects:
 13191 ;;		On entry : F/0
 13192 ;;		On exit  : 0/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13195 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13198 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13199 ;;Total ram usage:        2 bytes
 13200 ;; Hardware stack levels used:    1
 13201 ;; Hardware stack levels required when called:   11
 13202 ;; This function calls:
 13203 ;;		Nothing
 13204 ;; This function is called by:
 13205 ;;		_Auto_cut
 13206 ;;		_port_button_task
 13207 ;;		_sleep_task
 13208 ;;		_software_init
 13209 ;; This function uses a non-reentrant model
 13210 ;;
 13211                           
 13212                           	psect	text47
 13213  013CF6                     __ptext47:
 13214                           	opt stack 0
 13215  013CF6                     _OUT:
 13216                           	opt stack 18
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;incstack = 0
 13220                           ;OUT@b stored from wreg
 13221  013CF6  6F61               	movwf	OUT@b& (0+255),b
 13222                           
 13223                           ;io.c: 8: port[b].flag.out_flag = value;
 13224  013CF8  0100               	movlb	0	; () banked
 13225  013CFA  5161               	movf	OUT@b& (0+255),w,b
 13226  013CFC  ECEC  F08C         	call	PL4	;call to abstracted procedure
 13227  013D00  B160               	btfsc	OUT@value& (0+255),0,b
 13228  013D02  D002               	bra	u11385
 13229  013D04  94DF               	bcf	indf2,2,c
 13230  013D06  D001               	bra	u11386
 13231  013D08                     u11385:
 13232  013D08  84DF               	bsf	indf2,2,c
 13233  013D0A                     u11386:
 13234                           
 13235                           ;io.c: 9: switch (b) {
 13236  013D0A  D012               	goto	l10662
 13237  013D0C                     l1619:
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;io.c: 11: LATA5 = value;
 13241  013D0C  A160               	btfss	OUT@value& (0+255),0,b
 13242  013D0E  D002               	goto	u11390
 13243  013D10  8A89               	bsf	3977,5,c	;volatile
 13244  013D12  0012               	return	
 13245  013D14                     u11390:
 13246  013D14  9A89               	bcf	3977,5,c	;volatile
 13247                           
 13248                           ;io.c: 12: break;
 13249  013D16  0012               	return	
 13250  013D18                     l1621:
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;io.c: 14: LATA6 = value;
 13254  013D18  A160               	btfss	OUT@value& (0+255),0,b
 13255  013D1A  D002               	goto	u11410
 13256  013D1C  8C89               	bsf	3977,6,c	;volatile
 13257  013D1E  0012               	return	
 13258  013D20                     u11410:
 13259  013D20  9C89               	bcf	3977,6,c	;volatile
 13260                           
 13261                           ;io.c: 15: break;
 13262  013D22  0012               	return	
 13263  013D24                     l1622:
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;io.c: 17: LATA7 = value;
 13267  013D24  A160               	btfss	OUT@value& (0+255),0,b
 13268  013D26  D002               	goto	u11430
 13269  013D28  8E89               	bsf	3977,7,c	;volatile
 13270  013D2A  0012               	return	
 13271  013D2C                     u11430:
 13272  013D2C  9E89               	bcf	3977,7,c	;volatile
 13273                           
 13274                           ;io.c: 18: break;
 13275  013D2E  0012               	return	
 13276  013D30                     l10662:
 13277                           
 13278                           ; BSR set to: 1
 13279  013D30  0100               	movlb	0	; () banked
 13280  013D32  5161               	movf	OUT@b& (0+255),w,b
 13281                           
 13282                           ; Switch size 1, requested type "space"
 13283                           ; Number of cases is 3, Range of values is 0 to 2
 13284                           ; switch strategies available:
 13285                           ; Name         Instructions Cycles
 13286                           ; simple_byte           10     6 (average)
 13287                           ;	Chosen strategy is simple_byte
 13288  013D34  E0EB               	bz	l1619
 13289  013D36  0A01               	xorlw	1	; case 1
 13290  013D38  E0EF               	bz	l1621
 13291  013D3A  0A03               	xorlw	3	; case 2
 13292  013D3C  E0F3               	bz	l1622
 13293  013D3E  0012               	return		;funcret
 13294  013D40                     __end_of_OUT:
 13295                           	opt stack 0
 13296                           tblptru	equ	0xFF8
 13297                           tblptrh	equ	0xFF7
 13298                           tblptrl	equ	0xFF6
 13299                           tablat	equ	0xFF5
 13300                           prodh	equ	0xFF4
 13301                           prodl	equ	0xFF3
 13302                           intcon	equ	0xFF2
 13303                           intcon2	equ	0xFF1
 13304                           postinc0	equ	0xFEE
 13305                           wreg	equ	0xFE8
 13306                           indf1	equ	0xFE7
 13307                           postinc1	equ	0xFE6
 13308                           postdec1	equ	0xFE5
 13309                           fsr1h	equ	0xFE2
 13310                           fsr1l	equ	0xFE1
 13311                           indf2	equ	0xFDF
 13312                           postinc2	equ	0xFDE
 13313                           postdec2	equ	0xFDD
 13314                           plusw2	equ	0xFDB
 13315                           fsr2h	equ	0xFDA
 13316                           fsr2l	equ	0xFD9
 13317                           status	equ	0xFD8
 13318                           
 13319 ;; *************** function _ANALOG_IN *****************
 13320 ;; Defined at:
 13321 ;;		line 23 in file "io.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;  b               1    wreg     unsigned char 
 13324 ;; Auto vars:     Size  Location     Type
 13325 ;;  b               1    0[BANK0 ] unsigned char 
 13326 ;; Return value:  Size  Location     Type
 13327 ;;                  1    wreg      unsigned char 
 13328 ;; Registers used:
 13329 ;;		wreg, status,2, status,0
 13330 ;; Tracked objects:
 13331 ;;		On entry : F/0
 13332 ;;		On exit  : F/0
 13333 ;;		Unchanged: 0/0
 13334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13338 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13339 ;;Total ram usage:        1 bytes
 13340 ;; Hardware stack levels used:    1
 13341 ;; Hardware stack levels required when called:   11
 13342 ;; This function calls:
 13343 ;;		Nothing
 13344 ;; This function is called by:
 13345 ;;		_Auto_cut
 13346 ;; This function uses a non-reentrant model
 13347 ;;
 13348                           
 13349                           	psect	text48
 13350  0144D0                     __ptext48:
 13351                           	opt stack 0
 13352  0144D0                     _ANALOG_IN:
 13353                           	opt stack 17
 13354                           
 13355                           ;incstack = 0
 13356                           ;ANALOG_IN@b stored from wreg
 13357  0144D0  6F60               	movwf	ANALOG_IN@b& (0+255),b
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;io.c: 30: return 10;
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;io.c: 28: return 9;
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;io.c: 26: return 8;
 13367                           
 13368                           ;io.c: 24: switch (b) {
 13369  0144D2  0100               	movlb	0	; () banked
 13370  0144D4  5160               	movf	ANALOG_IN@b& (0+255),w,b
 13371                           
 13372                           ; Switch size 1, requested type "space"
 13373                           ; Number of cases is 3, Range of values is 0 to 2
 13374                           ; switch strategies available:
 13375                           ; Name         Instructions Cycles
 13376                           ; simple_byte           10     6 (average)
 13377                           ;	Chosen strategy is simple_byte
 13378  0144D6  B4D8               	btfsc	status,2,c
 13379  0144D8  0C08               	retlw	8
 13380  0144DA  0A01               	xorlw	1	; case 1
 13381  0144DC  B4D8               	btfsc	status,2,c
 13382  0144DE  0C09               	retlw	9
 13383  0144E0  0A03               	xorlw	3	; case 2
 13384  0144E2  B4D8               	btfsc	status,2,c
 13385  0144E4  0C0A               	retlw	10
 13386                           
 13387                           ; BSR set to: 0
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;io.c: 32: return 0;
 13391  0144E6  0C00               	retlw	0	;funcret
 13392  0144E8                     __end_of_ANALOG_IN:
 13393                           	opt stack 0
 13394                           tblptru	equ	0xFF8
 13395                           tblptrh	equ	0xFF7
 13396                           tblptrl	equ	0xFF6
 13397                           tablat	equ	0xFF5
 13398                           prodh	equ	0xFF4
 13399                           prodl	equ	0xFF3
 13400                           intcon	equ	0xFF2
 13401                           intcon2	equ	0xFF1
 13402                           postinc0	equ	0xFEE
 13403                           wreg	equ	0xFE8
 13404                           indf1	equ	0xFE7
 13405                           postinc1	equ	0xFE6
 13406                           postdec1	equ	0xFE5
 13407                           fsr1h	equ	0xFE2
 13408                           fsr1l	equ	0xFE1
 13409                           indf2	equ	0xFDF
 13410                           postinc2	equ	0xFDE
 13411                           postdec2	equ	0xFDD
 13412                           plusw2	equ	0xFDB
 13413                           fsr2h	equ	0xFDA
 13414                           fsr2l	equ	0xFD9
 13415                           status	equ	0xFD8
 13416                           
 13417 ;; *************** function _ADC *****************
 13418 ;; Defined at:
 13419 ;;		line 156 in file "../My_library/My_PIC.c"
 13420 ;; Parameters:    Size  Location     Type
 13421 ;;  ch              1    wreg     unsigned char 
 13422 ;; Auto vars:     Size  Location     Type
 13423 ;;  ch              1    3[BANK0 ] unsigned char 
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  2    0[BANK0 ] unsigned int 
 13426 ;; Registers used:
 13427 ;;		wreg, status,2, status,0
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/0
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13433 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13435 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13436 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13437 ;;Total ram usage:        4 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:   11
 13440 ;; This function calls:
 13441 ;;		Nothing
 13442 ;; This function is called by:
 13443 ;;		_Auto_cut
 13444 ;;		_sleep_task
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           	psect	text49
 13449  014234                     __ptext49:
 13450                           	opt stack 0
 13451  014234                     _ADC:
 13452                           	opt stack 18
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;incstack = 0
 13456                           ;ADC@ch stored from wreg
 13457  014234  0100               	movlb	0	; () banked
 13458  014236  6F63               	movwf	ADC@ch& (0+255),b
 13459                           
 13460                           ;My_PIC.c: 157: ADCON0bits.CHS = ch;
 13461  014238  C063  F062         	movff	ADC@ch,??_ADC
 13462  01423C  4762               	rlncf	??_ADC& (0+255),f,b
 13463  01423E  4762               	rlncf	??_ADC& (0+255),f,b
 13464  014240  50C2               	movf	4034,w,c	;volatile
 13465  014242  1962               	xorwf	??_ADC& (0+255),w,b
 13466  014244  0BC3               	andlw	-61
 13467  014246  1962               	xorwf	??_ADC& (0+255),w,b
 13468  014248  6EC2               	movwf	4034,c	;volatile
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;My_PIC.c: 158: ADCON0bits.ADON = 1;
 13472  01424A  80C2               	bsf	4034,0,c	;volatile
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;My_PIC.c: 160: PIR1bits.ADIF = 0;
 13476  01424C  9C9E               	bcf	3998,6,c	;volatile
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;My_PIC.c: 161: ADCON0bits.GO_nDONE = 1;
 13480  01424E  82C2               	bsf	4034,1,c	;volatile
 13481  014250                     l720:
 13482  014250  AC9E               	btfss	3998,6,c	;volatile
 13483  014252  D7FE               	goto	l720
 13484                           
 13485                           ;My_PIC.c: 163: return ADRES;
 13486  014254  CFC3 F060          	movff	4035,?_ADC	;volatile
 13487  014258  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 13488  01425C  0012               	return		;funcret
 13489  01425E                     __end_of_ADC:
 13490                           	opt stack 0
 13491                           tblptru	equ	0xFF8
 13492                           tblptrh	equ	0xFF7
 13493                           tblptrl	equ	0xFF6
 13494                           tablat	equ	0xFF5
 13495                           prodh	equ	0xFF4
 13496                           prodl	equ	0xFF3
 13497                           intcon	equ	0xFF2
 13498                           intcon2	equ	0xFF1
 13499                           postinc0	equ	0xFEE
 13500                           wreg	equ	0xFE8
 13501                           indf1	equ	0xFE7
 13502                           postinc1	equ	0xFE6
 13503                           postdec1	equ	0xFE5
 13504                           fsr1h	equ	0xFE2
 13505                           fsr1l	equ	0xFE1
 13506                           indf2	equ	0xFDF
 13507                           postinc2	equ	0xFDE
 13508                           postdec2	equ	0xFDD
 13509                           plusw2	equ	0xFDB
 13510                           fsr2h	equ	0xFDA
 13511                           fsr2l	equ	0xFD9
 13512                           status	equ	0xFD8
 13513                           
 13514 ;; *************** function _hardware_init *****************
 13515 ;; Defined at:
 13516 ;;		line 82 in file "main.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;		None
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;		None
 13521 ;; Return value:  Size  Location     Type
 13522 ;;		None               void
 13523 ;; Registers used:
 13524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : F/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13534 ;;Total ram usage:        0 bytes
 13535 ;; Hardware stack levels used:    1
 13536 ;; Hardware stack levels required when called:   16
 13537 ;; This function calls:
 13538 ;;		_ADC_init
 13539 ;;		_CTMU_init
 13540 ;;		_RTCC_init
 13541 ;;		_ST7032_init
 13542 ;;		_USB_init
 13543 ;;		_ringbuf_init
 13544 ;;		_timer0_init
 13545 ;;		_timer1_init
 13546 ;;		_timer3_init
 13547 ;; This function is called by:
 13548 ;;		_main
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           	psect	text50
 13553  013376                     __ptext50:
 13554                           	opt stack 0
 13555  013376                     _hardware_init:
 13556                           	opt stack 14
 13557                           
 13558                           ;main.c: 83: OSCCONbits.IRCF = 7;
 13559                           
 13560                           ;incstack = 0
 13561  013376  0E70               	movlw	112
 13562  013378  12D3               	iorwf	4051,f,c	;volatile
 13563                           
 13564                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 13565  01337A  8C9B               	bsf	3995,6,c	;volatile
 13566                           
 13567                           ;main.c: 85: OSCCONbits.SCS = 0;
 13568  01337C  0EFC               	movlw	-4
 13569  01337E  16D3               	andwf	4051,f,c	;volatile
 13570                           
 13571                           ;main.c: 86: TRISA = 0b00011111;
 13572  013380  0E1F               	movlw	31
 13573  013382  6E92               	movwf	3986,c	;volatile
 13574                           
 13575                           ;main.c: 87: TRISB = 0b00111111;
 13576  013384  0E3F               	movlw	63
 13577  013386  6E93               	movwf	3987,c	;volatile
 13578                           
 13579                           ;main.c: 88: TRISC = 0b10110010;
 13580  013388  0EB2               	movlw	178
 13581  01338A  6E94               	movwf	3988,c	;volatile
 13582                           
 13583                           ;main.c: 89: ANCON0 = 0b11110000;
 13584  01338C  0EF0               	movlw	240
 13585  01338E  010F               	movlb	15	; () banked
 13586  013390  6F48               	movwf	72,b	;volatile
 13587                           
 13588                           ;main.c: 90: ANCON1 = 0b00001000;
 13589  013392  0E08               	movlw	8
 13590  013394  6F49               	movwf	73,b	;volatile
 13591                           
 13592                           ; BSR set to: 15
 13593                           ;main.c: 91: INTCON2bits.RBPU = 0;
 13594  013396  9EF1               	bcf	intcon2,7,c	;volatile
 13595                           
 13596                           ; BSR set to: 15
 13597                           ;main.c: 93: timer0_init(0);
 13598  013398  0E00               	movlw	0
 13599  01339A  EC03  F0A1         	call	_timer0_init
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;main.c: 94: timer1_init(0, 2);
 13603  01339E  0E02               	movlw	2
 13604  0133A0  6F60               	movwf	timer1_init@clock_select& (0+255),b
 13605  0133A2  0E00               	movlw	0
 13606  0133A4  EC57  F09F         	call	_timer1_init
 13607                           
 13608                           ; BSR set to: 0
 13609                           ;main.c: 95: timer3_init(2);
 13610  0133A8  0E02               	movlw	2
 13611  0133AA  EC59  F0A1         	call	_timer3_init
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;main.c: 96: ST7032_init();
 13615  0133AE  EC2F  F092         	call	_ST7032_init	;wreg free
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;main.c: 97: RTCC_init();
 13619  0133B2  EC99  F09D         	call	_RTCC_init	;wreg free
 13620                           
 13621                           ;main.c: 98: ADC_init(0);
 13622  0133B6  0E00               	movlw	0
 13623  0133B8  EC1B  F0A2         	call	_ADC_init
 13624                           
 13625                           ;main.c: 99: CTMU_init();
 13626  0133BC  ECB7  F0A1         	call	_CTMU_init	;wreg free
 13627                           
 13628                           ;main.c: 101: USB_init();
 13629  0133C0  EC74  F0A2         	call	_USB_init	;wreg free
 13630                           
 13631                           ; BSR set to: 2
 13632                           ;main.c: 102: static uint8_t usbtx[2000];
 13633                           ;main.c: 103: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 13634  0133C4  0EBD               	movlw	low _usb_tx
 13635  0133C6  0100               	movlb	0	; () banked
 13636  0133C8  6F60               	movwf	ringbuf_init@rb& (0+255),b
 13637  0133CA  0E02               	movlw	high _usb_tx
 13638  0133CC  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 13639  0133CE  0EC8               	movlw	low hardware_init@usbtx
 13640  0133D0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 13641  0133D2  0E04               	movlw	high hardware_init@usbtx
 13642  0133D4  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 13643  0133D6  0E07               	movlw	7
 13644  0133D8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 13645  0133DA  0ED0               	movlw	208
 13646  0133DC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 13647  0133DE  EC18  F0A0         	call	_ringbuf_init	;wreg free
 13648                           
 13649                           ; BSR set to: 0
 13650                           ;main.c: 104: static uint8_t usbrx[100];
 13651                           ;main.c: 105: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 13652  0133E2  0EB5               	movlw	low _usb_rx
 13653  0133E4  6F60               	movwf	ringbuf_init@rb& (0+255),b
 13654  0133E6  0E02               	movlw	high _usb_rx
 13655  0133E8  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 13656  0133EA  0E00               	movlw	low hardware_init@usbrx
 13657  0133EC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 13658  0133EE  0E03               	movlw	high hardware_init@usbrx
 13659  0133F0  EC3D  F084         	call	PL342	;call to abstracted procedure
 13660  0133F4  EF18  F0A0         	goto	_ringbuf_init	;wreg free
 13661  0133F8                     __end_of_hardware_init:
 13662                           	opt stack 0
 13663                           tblptru	equ	0xFF8
 13664                           tblptrh	equ	0xFF7
 13665                           tblptrl	equ	0xFF6
 13666                           tablat	equ	0xFF5
 13667                           prodh	equ	0xFF4
 13668                           prodl	equ	0xFF3
 13669                           intcon	equ	0xFF2
 13670                           intcon2	equ	0xFF1
 13671                           postinc0	equ	0xFEE
 13672                           wreg	equ	0xFE8
 13673                           indf1	equ	0xFE7
 13674                           postinc1	equ	0xFE6
 13675                           postdec1	equ	0xFE5
 13676                           fsr1h	equ	0xFE2
 13677                           fsr1l	equ	0xFE1
 13678                           indf2	equ	0xFDF
 13679                           postinc2	equ	0xFDE
 13680                           postdec2	equ	0xFDD
 13681                           plusw2	equ	0xFDB
 13682                           fsr2h	equ	0xFDA
 13683                           fsr2l	equ	0xFD9
 13684                           status	equ	0xFD8
 13685                           
 13686 ;; *************** function _timer3_init *****************
 13687 ;; Defined at:
 13688 ;;		line 101 in file "../My_library/My_PIC.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;  prescaler       1    wreg     unsigned char 
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  prescaler       1    1[BANK0 ] unsigned char 
 13693 ;; Return value:  Size  Location     Type
 13694 ;;		None               void
 13695 ;; Registers used:
 13696 ;;		wreg, status,2, status,0
 13697 ;; Tracked objects:
 13698 ;;		On entry : F/0
 13699 ;;		On exit  : F/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13704 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13705 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13706 ;;Total ram usage:        2 bytes
 13707 ;; Hardware stack levels used:    1
 13708 ;; Hardware stack levels required when called:   11
 13709 ;; This function calls:
 13710 ;;		Nothing
 13711 ;; This function is called by:
 13712 ;;		_hardware_init
 13713 ;; This function uses a non-reentrant model
 13714 ;;
 13715                           
 13716                           	psect	text51
 13717  0142B2                     __ptext51:
 13718                           	opt stack 0
 13719  0142B2                     _timer3_init:
 13720                           	opt stack 18
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;incstack = 0
 13724                           ;timer3_init@prescaler stored from wreg
 13725  0142B2  6F61               	movwf	timer3_init@prescaler& (0+255),b
 13726                           
 13727                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
 13728  0142B4  0E3F               	movlw	-193
 13729  0142B6  1679               	andwf	3961,f,c	;volatile
 13730                           
 13731                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
 13732  0142B8  9679               	bcf	3961,3,c	;volatile
 13733                           
 13734                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
 13735  0142BA  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 13736  0142BE  0100               	movlb	0	; () banked
 13737  0142C0  3B60               	swapf	??_timer3_init& (0+255),f,b
 13738  0142C2  5079               	movf	3961,w,c	;volatile
 13739  0142C4  1960               	xorwf	??_timer3_init& (0+255),w,b
 13740  0142C6  0BCF               	andlw	-49
 13741  0142C8  1960               	xorwf	??_timer3_init& (0+255),w,b
 13742  0142CA  6E79               	movwf	3961,c	;volatile
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
 13746  0142CC  9E79               	bcf	3961,7,c	;volatile
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
 13750  0142CE  8079               	bsf	3961,0,c	;volatile
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
 13754  0142D0  92A2               	bcf	4002,1,c	;volatile
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
 13758  0142D2  92A1               	bcf	4001,1,c	;volatile
 13759                           
 13760                           ; BSR set to: 0
 13761                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
 13762  0142D4  82A0               	bsf	4000,1,c	;volatile
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
 13766  0142D6  8CF2               	bsf	intcon,6,c	;volatile
 13767                           
 13768                           ; BSR set to: 0
 13769  0142D8  0012               	return		;funcret
 13770  0142DA                     __end_of_timer3_init:
 13771                           	opt stack 0
 13772                           tblptru	equ	0xFF8
 13773                           tblptrh	equ	0xFF7
 13774                           tblptrl	equ	0xFF6
 13775                           tablat	equ	0xFF5
 13776                           prodh	equ	0xFF4
 13777                           prodl	equ	0xFF3
 13778                           intcon	equ	0xFF2
 13779                           intcon2	equ	0xFF1
 13780                           postinc0	equ	0xFEE
 13781                           wreg	equ	0xFE8
 13782                           indf1	equ	0xFE7
 13783                           postinc1	equ	0xFE6
 13784                           postdec1	equ	0xFE5
 13785                           fsr1h	equ	0xFE2
 13786                           fsr1l	equ	0xFE1
 13787                           indf2	equ	0xFDF
 13788                           postinc2	equ	0xFDE
 13789                           postdec2	equ	0xFDD
 13790                           plusw2	equ	0xFDB
 13791                           fsr2h	equ	0xFDA
 13792                           fsr2l	equ	0xFD9
 13793                           status	equ	0xFD8
 13794                           
 13795 ;; *************** function _timer1_init *****************
 13796 ;; Defined at:
 13797 ;;		line 70 in file "../My_library/My_PIC.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;  prescaler       1    wreg     unsigned char 
 13800 ;;  clock_select    1    0[BANK0 ] unsigned char 
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;  prescaler       1    2[BANK0 ] unsigned char 
 13803 ;; Return value:  Size  Location     Type
 13804 ;;		None               void
 13805 ;; Registers used:
 13806 ;;		wreg, status,2, status,0
 13807 ;; Tracked objects:
 13808 ;;		On entry : F/0
 13809 ;;		On exit  : F/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13812 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13815 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13816 ;;Total ram usage:        3 bytes
 13817 ;; Hardware stack levels used:    1
 13818 ;; Hardware stack levels required when called:   11
 13819 ;; This function calls:
 13820 ;;		Nothing
 13821 ;; This function is called by:
 13822 ;;		_hardware_init
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           	psect	text52
 13827  013EAE                     __ptext52:
 13828                           	opt stack 0
 13829  013EAE                     _timer1_init:
 13830                           	opt stack 18
 13831                           
 13832                           ; BSR set to: 0
 13833                           ;incstack = 0
 13834                           ;timer1_init@prescaler stored from wreg
 13835  013EAE  6F62               	movwf	timer1_init@prescaler& (0+255),b
 13836                           
 13837                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
 13838  013EB0  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 13839  013EB4  0100               	movlb	0	; () banked
 13840  013EB6  3B61               	swapf	??_timer1_init& (0+255),f,b
 13841  013EB8  4761               	rlncf	??_timer1_init& (0+255),f,b
 13842  013EBA  4761               	rlncf	??_timer1_init& (0+255),f,b
 13843  013EBC  50CD               	movf	4045,w,c	;volatile
 13844  013EBE  1961               	xorwf	??_timer1_init& (0+255),w,b
 13845  013EC0  0B3F               	andlw	-193
 13846  013EC2  1961               	xorwf	??_timer1_init& (0+255),w,b
 13847  013EC4  6ECD               	movwf	4045,c	;volatile
 13848                           
 13849                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 13850  013EC6  0E02               	movlw	2
 13851  013EC8  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 13852  013ECA  E102               	bnz	l706
 13853                           
 13854                           ; BSR set to: 0
 13855  013ECC  86CD               	bsf	4045,3,c	;volatile
 13856  013ECE  D001               	goto	l10972
 13857  013ED0                     l706:
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
 13861  013ED0  96CD               	bcf	4045,3,c	;volatile
 13862  013ED2                     l10972:
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
 13866  013ED2  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 13867  013ED6  3B61               	swapf	??_timer1_init& (0+255),f,b
 13868  013ED8  50CD               	movf	4045,w,c	;volatile
 13869  013EDA  1961               	xorwf	??_timer1_init& (0+255),w,b
 13870  013EDC  0BCF               	andlw	-49
 13871  013EDE  1961               	xorwf	??_timer1_init& (0+255),w,b
 13872  013EE0  6ECD               	movwf	4045,c	;volatile
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
 13876  013EE2  84CD               	bsf	4045,2,c	;volatile
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
 13880  013EE4  92CD               	bcf	4045,1,c	;volatile
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
 13884  013EE6  80CD               	bsf	4045,0,c	;volatile
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
 13888  013EE8  909F               	bcf	3999,0,c	;volatile
 13889                           
 13890                           ; BSR set to: 0
 13891                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
 13892  013EEA  909E               	bcf	3998,0,c	;volatile
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
 13896  013EEC  809D               	bsf	3997,0,c	;volatile
 13897                           
 13898                           ; BSR set to: 0
 13899                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 13900  013EEE  8CF2               	bsf	intcon,6,c	;volatile
 13901                           
 13902                           ; BSR set to: 0
 13903  013EF0  0012               	return		;funcret
 13904  013EF2                     __end_of_timer1_init:
 13905                           	opt stack 0
 13906                           tblptru	equ	0xFF8
 13907                           tblptrh	equ	0xFF7
 13908                           tblptrl	equ	0xFF6
 13909                           tablat	equ	0xFF5
 13910                           prodh	equ	0xFF4
 13911                           prodl	equ	0xFF3
 13912                           intcon	equ	0xFF2
 13913                           intcon2	equ	0xFF1
 13914                           postinc0	equ	0xFEE
 13915                           wreg	equ	0xFE8
 13916                           indf1	equ	0xFE7
 13917                           postinc1	equ	0xFE6
 13918                           postdec1	equ	0xFE5
 13919                           fsr1h	equ	0xFE2
 13920                           fsr1l	equ	0xFE1
 13921                           indf2	equ	0xFDF
 13922                           postinc2	equ	0xFDE
 13923                           postdec2	equ	0xFDD
 13924                           plusw2	equ	0xFDB
 13925                           fsr2h	equ	0xFDA
 13926                           fsr2l	equ	0xFD9
 13927                           status	equ	0xFD8
 13928                           
 13929 ;; *************** function _timer0_init *****************
 13930 ;; Defined at:
 13931 ;;		line 34 in file "../My_library/My_PIC.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  prescaler       1    wreg     unsigned char 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  prescaler       1    1[BANK0 ] unsigned char 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;		None               void
 13938 ;; Registers used:
 13939 ;;		wreg, status,2, status,0
 13940 ;; Tracked objects:
 13941 ;;		On entry : F/F
 13942 ;;		On exit  : F/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13949 ;;Total ram usage:        2 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:   11
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_hardware_init
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           	psect	text53
 13960  014206                     __ptext53:
 13961                           	opt stack 0
 13962  014206                     _timer0_init:
 13963                           	opt stack 18
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;incstack = 0
 13967                           ;timer0_init@prescaler stored from wreg
 13968  014206  0100               	movlb	0	; () banked
 13969  014208  6F61               	movwf	timer0_init@prescaler& (0+255),b
 13970                           
 13971                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
 13972  01420A  8ED5               	bsf	4053,7,c	;volatile
 13973                           
 13974                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
 13975  01420C  8CD5               	bsf	4053,6,c	;volatile
 13976                           
 13977                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
 13978  01420E  9AD5               	bcf	4053,5,c	;volatile
 13979                           
 13980                           ;My_PIC.c: 38: if (prescaler == 0) {
 13981  014210  5161               	movf	timer0_init@prescaler& (0+255),w,b
 13982  014212  E102               	bnz	l701
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
 13986  014214  86D5               	bsf	4053,3,c	;volatile
 13987                           
 13988                           ;My_PIC.c: 40: } else {
 13989  014216  D009               	goto	l10960
 13990  014218                     l701:
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
 13994  014218  96D5               	bcf	4053,3,c	;volatile
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
 13998  01421A  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 13999  01421E  0760               	decf	??_timer0_init& (0+255),f,b
 14000  014220  50D5               	movf	4053,w,c	;volatile
 14001  014222  1960               	xorwf	??_timer0_init& (0+255),w,b
 14002  014224  0BF8               	andlw	-8
 14003  014226  1960               	xorwf	??_timer0_init& (0+255),w,b
 14004  014228  6ED5               	movwf	4053,c	;volatile
 14005  01422A                     l10960:
 14006                           
 14007                           ; BSR set to: 0
 14008                           ;My_PIC.c: 43: }
 14009                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
 14010  01422A  8AF2               	bsf	intcon,5,c	;volatile
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
 14014  01422C  94F2               	bcf	intcon,2,c	;volatile
 14015                           
 14016                           ; BSR set to: 0
 14017                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
 14018  01422E  94F1               	bcf	intcon2,2,c	;volatile
 14019                           
 14020                           ; BSR set to: 0
 14021                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
 14022  014230  8CF2               	bsf	intcon,6,c	;volatile
 14023                           
 14024                           ; BSR set to: 0
 14025  014232  0012               	return		;funcret
 14026  014234                     __end_of_timer0_init:
 14027                           	opt stack 0
 14028                           tblptru	equ	0xFF8
 14029                           tblptrh	equ	0xFF7
 14030                           tblptrl	equ	0xFF6
 14031                           tablat	equ	0xFF5
 14032                           prodh	equ	0xFF4
 14033                           prodl	equ	0xFF3
 14034                           intcon	equ	0xFF2
 14035                           intcon2	equ	0xFF1
 14036                           postinc0	equ	0xFEE
 14037                           wreg	equ	0xFE8
 14038                           indf1	equ	0xFE7
 14039                           postinc1	equ	0xFE6
 14040                           postdec1	equ	0xFE5
 14041                           fsr1h	equ	0xFE2
 14042                           fsr1l	equ	0xFE1
 14043                           indf2	equ	0xFDF
 14044                           postinc2	equ	0xFDE
 14045                           postdec2	equ	0xFDD
 14046                           plusw2	equ	0xFDB
 14047                           fsr2h	equ	0xFDA
 14048                           fsr2l	equ	0xFD9
 14049                           status	equ	0xFD8
 14050                           
 14051 ;; *************** function _USB_init *****************
 14052 ;; Defined at:
 14053 ;;		line 11 in file "../My_library/My_usb_cdc.c"
 14054 ;; Parameters:    Size  Location     Type
 14055 ;;		None
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;		None
 14058 ;; Return value:  Size  Location     Type
 14059 ;;		None               void
 14060 ;; Registers used:
 14061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/2
 14064 ;;		On exit  : F/2
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14071 ;;Total ram usage:        0 bytes
 14072 ;; Hardware stack levels used:    1
 14073 ;; Hardware stack levels required when called:   13
 14074 ;; This function calls:
 14075 ;;		_USBDeviceAttach
 14076 ;;		_USBDeviceInit
 14077 ;; This function is called by:
 14078 ;;		_hardware_init
 14079 ;; This function uses a non-reentrant model
 14080 ;;
 14081                           
 14082                           	psect	text54
 14083  0144E8                     __ptext54:
 14084                           	opt stack 0
 14085  0144E8                     _USB_init:
 14086                           	opt stack 16
 14087                           
 14088                           ;My_usb_cdc.c: 12: USBDeviceInit();
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;incstack = 0
 14092  0144E8  EC4B  F095         	call	_USBDeviceInit	;wreg free
 14093                           
 14094                           ; BSR set to: 13
 14095                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 14096  0144EC  ECB8  F0A0         	call	_USBDeviceAttach	;wreg free
 14097                           
 14098                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
 14099  0144F0  0102               	movlb	2	; () banked
 14100  0144F2  6BC5               	clrf	_line_coding& (0+255),b
 14101  0144F4  0EC2               	movlw	194
 14102  0144F6  6FC6               	movwf	(_line_coding+1)& (0+255),b
 14103  0144F8  0E01               	movlw	1
 14104  0144FA  6FC7               	movwf	(_line_coding+2)& (0+255),b
 14105  0144FC  6BC8               	clrf	(_line_coding+3)& (0+255),b
 14106                           
 14107                           ; BSR set to: 2
 14108  0144FE  0C00               	retlw	0	;funcret
 14109  014500                     __end_of_USB_init:
 14110                           	opt stack 0
 14111                           tblptru	equ	0xFF8
 14112                           tblptrh	equ	0xFF7
 14113                           tblptrl	equ	0xFF6
 14114                           tablat	equ	0xFF5
 14115                           prodh	equ	0xFF4
 14116                           prodl	equ	0xFF3
 14117                           intcon	equ	0xFF2
 14118                           intcon2	equ	0xFF1
 14119                           postinc0	equ	0xFEE
 14120                           wreg	equ	0xFE8
 14121                           indf1	equ	0xFE7
 14122                           postinc1	equ	0xFE6
 14123                           postdec1	equ	0xFE5
 14124                           fsr1h	equ	0xFE2
 14125                           fsr1l	equ	0xFE1
 14126                           indf2	equ	0xFDF
 14127                           postinc2	equ	0xFDE
 14128                           postdec2	equ	0xFDD
 14129                           plusw2	equ	0xFDB
 14130                           fsr2h	equ	0xFDA
 14131                           fsr2l	equ	0xFD9
 14132                           status	equ	0xFD8
 14133                           
 14134 ;; *************** function _USBDeviceInit *****************
 14135 ;; Defined at:
 14136 ;;		line 298 in file "../My_library/usb/usb_device.c"
 14137 ;; Parameters:    Size  Location     Type
 14138 ;;		None
 14139 ;; Auto vars:     Size  Location     Type
 14140 ;;  i               1    8[BANK0 ] unsigned char 
 14141 ;; Return value:  Size  Location     Type
 14142 ;;		None               void
 14143 ;; Registers used:
 14144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14145 ;; Tracked objects:
 14146 ;;		On entry : 0/2
 14147 ;;		On exit  : F/D
 14148 ;;		Unchanged: 0/0
 14149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14153 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;Total ram usage:        1 bytes
 14155 ;; Hardware stack levels used:    1
 14156 ;; Hardware stack levels required when called:   12
 14157 ;; This function calls:
 14158 ;;		_memset
 14159 ;; This function is called by:
 14160 ;;		_USB_init
 14161 ;; This function uses a non-reentrant model
 14162 ;;
 14163                           
 14164                           	psect	text55
 14165  012A96                     __ptext55:
 14166                           	opt stack 0
 14167  012A96                     _USBDeviceInit:
 14168                           	opt stack 16
 14169                           
 14170                           ;usb_device.c: 300: uint8_t i;
 14171                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 14172                           
 14173                           ; BSR set to: 2
 14174                           ;incstack = 0
 14175  012A96  98A0               	bcf	4000,4,c	;volatile
 14176                           
 14177                           ;usb_device.c: 305: {UEIR = 0;};
 14178  012A98  6A63               	clrf	3939,c	;volatile
 14179                           
 14180                           ;usb_device.c: 308: {UIR = 0;};
 14181  012A9A  6A62               	clrf	3938,c	;volatile
 14182                           
 14183                           ;usb_device.c: 311: UEP0 = 0;
 14184  012A9C  010F               	movlb	15	; () banked
 14185  012A9E  6B26               	clrf	38,b	;volatile
 14186                           
 14187                           ; BSR set to: 15
 14188                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 14189  012AA0  0E27               	movlw	39
 14190  012AA2  0100               	movlb	0	; () banked
 14191  012AA4  6F60               	movwf	memset@p1& (0+255),b
 14192  012AA6  0E0F               	movlw	15
 14193  012AA8  6F61               	movwf	(memset@p1+1)& (0+255),b
 14194  012AAA  6B63               	clrf	(memset@c+1)& (0+255),b
 14195  012AAC  6B62               	clrf	memset@c& (0+255),b
 14196  012AAE  6B65               	clrf	(memset@n+1)& (0+255),b
 14197  012AB0  0E02               	movlw	2
 14198  012AB2  6F64               	movwf	memset@n& (0+255),b
 14199  012AB4  EC2F  F0A1         	call	_memset	;wreg free
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14203  012AB8  0E16               	movlw	22
 14204  012ABA  010F               	movlb	15	; () banked
 14205                           
 14206                           ; BSR set to: 15
 14207                           
 14208                           ; BSR set to: 15
 14209  012ABC  ECCB  F0A0         	call	PL200	;call to abstracted procedure
 14210                           
 14211                           ; BSR set to: 15
 14212                           ;usb_device.c: 318: ;
 14213                           ;usb_device.c: 321: ;
 14214                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14215  012AC0  0100               	movlb	0	; () banked
 14216  012AC2  6B68               	clrf	USBDeviceInit@i& (0+255),b
 14217  012AC4                     l10344:
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;usb_device.c: 325: {
 14221                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 14222  012AC4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 14223  012AC6  EC3A  F090         	call	PL118	;call to abstracted procedure
 14224  012ACA  D82A               	call	PL76	;call to abstracted procedure
 14225                           
 14226                           ; BSR set to: 0
 14227  012ACC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 14228                           
 14229                           ; BSR set to: 0
 14230  012ACE  0E0B               	movlw	11
 14231  012AD0  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 14232  012AD2  D7F8               	goto	l10344
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;usb_device.c: 327: }
 14236                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 14237  012AD4  8C65               	bsf	3941,6,c	;volatile
 14238                           
 14239                           ;usb_device.c: 333: UADDR = 0x00;
 14240  012AD6  010F               	movlb	15	; () banked
 14241  012AD8  6B38               	clrf	56,b	;volatile
 14242                           
 14243                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 14244  012ADA  9865               	bcf	3941,4,c	;volatile
 14245                           
 14246                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 14247  012ADC  9C65               	bcf	3941,6,c	;volatile
 14248                           
 14249                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 14250  012ADE  D002               	goto	l10358
 14251  012AE0                     l10350:
 14252                           
 14253                           ;usb_device.c: 343: {
 14254                           ;usb_device.c: 344: (UIR &= 0xF7);
 14255                           
 14256                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 14257                           
 14258                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 14259                           
 14260                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 14261  012AE0  EC54  F090         	call	PL292	;call to abstracted procedure
 14262  012AE4                     l10358:
 14263  012AE4  B662               	btfsc	3938,3,c	;volatile
 14264  012AE6  D7FC               	goto	l10350
 14265                           
 14266                           ;usb_device.c: 349: }
 14267                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 14268                           
 14269                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 14270                           
 14271                           ; BSR set to: 1
 14272                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 14273                           
 14274                           ; BSR set to: 1
 14275                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 14276                           
 14277                           ; BSR set to: 1
 14278                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 14279  012AE8  EC4C  F090         	call	PL210	;call to abstracted procedure
 14280                           
 14281                           ; BSR set to: 1
 14282                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 14283  012AEC  0100               	movlb	0	; () banked
 14284  012AEE  6B68               	clrf	USBDeviceInit@i& (0+255),b
 14285  012AF0                     l10374:
 14286                           
 14287                           ; BSR set to: 0
 14288                           ;usb_device.c: 363: {
 14289                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 14290  012AF0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 14291  012AF2  EC3B  F095         	call	PL46	;call to abstracted procedure
 14292  012AF6  6ADE               	clrf	postinc2,c
 14293  012AF8  6ADD               	clrf	postdec2,c
 14294                           
 14295                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 14296  012AFA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 14297  012AFC  EC33  F095         	call	PL22	;call to abstracted procedure
 14298  012B00  6ADE               	clrf	postinc2,c
 14299  012B02  6ADD               	clrf	postdec2,c
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 14303  012B04  0E09               	movlw	low _ep_data_in
 14304  012B06  2568               	addwf	USBDeviceInit@i& (0+255),w,b
 14305                           
 14306                           ; BSR set to: 0
 14307                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 14308  012B08  EC3F  F090         	call	PL164	;call to abstracted procedure
 14309  012B0C  2568               	addwf	USBDeviceInit@i& (0+255),w,b
 14310  012B0E  EC46  F090         	call	PL194	;call to abstracted procedure
 14311                           
 14312                           ; BSR set to: 0
 14313  012B12  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 14314                           
 14315                           ; BSR set to: 0
 14316  012B14  0E02               	movlw	2
 14317  012B16  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 14318  012B18  D7EB               	goto	l10374
 14319                           
 14320                           ; BSR set to: 0
 14321                           ;usb_device.c: 368: }
 14322                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14323  012B1A  0E08               	movlw	8
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 14327                           
 14328                           ; BSR set to: 15
 14329                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 14330                           
 14331                           ; BSR set to: 13
 14332                           ;usb_device.c: 376: BDT[0].CNT = 8;
 14333                           
 14334                           ; BSR set to: 13
 14335                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 14336                           
 14337                           ; BSR set to: 13
 14338                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 14339                           
 14340                           ; BSR set to: 13
 14341                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 14342                           
 14343                           ; BSR set to: 13
 14344                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 14345                           
 14346                           ; BSR set to: 13
 14347  012B1C  EF27  F090         	goto	PL58	;call to abstracted procedure
 14348  012B20                     __end_of_USBDeviceInit:
 14349                           	opt stack 0
 14350  012B20                     PL76:
 14351                           	opt stack 16
 14352  012B20  20F4               	addwfc	prodh,w,c
 14353  012B22  6EDA               	movwf	fsr2h,c
 14354  012B24  6ADE               	clrf	postinc2,c
 14355  012B26  6ADE               	clrf	postinc2,c
 14356  012B28  6ADE               	clrf	postinc2,c
 14357  012B2A  6ADD               	clrf	postdec2,c
 14358  012B2C  0012               	return	
 14359  012B2E                     __end_ofPL76:
 14360                           	opt stack 0
 14361                           tblptru	equ	0xFF8
 14362                           tblptrh	equ	0xFF7
 14363                           tblptrl	equ	0xFF6
 14364                           tablat	equ	0xFF5
 14365                           prodh	equ	0xFF4
 14366                           prodl	equ	0xFF3
 14367                           intcon	equ	0xFF2
 14368                           intcon2	equ	0xFF1
 14369                           postinc0	equ	0xFEE
 14370                           wreg	equ	0xFE8
 14371                           indf1	equ	0xFE7
 14372                           postinc1	equ	0xFE6
 14373                           postdec1	equ	0xFE5
 14374                           fsr1h	equ	0xFE2
 14375                           fsr1l	equ	0xFE1
 14376                           indf2	equ	0xFDF
 14377                           postinc2	equ	0xFDE
 14378                           postdec2	equ	0xFDD
 14379                           plusw2	equ	0xFDB
 14380                           fsr2h	equ	0xFDA
 14381                           fsr2l	equ	0xFD9
 14382                           status	equ	0xFD8
 14383                           
 14384 ;; *************** function _memset *****************
 14385 ;; Defined at:
 14386 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;  p1              2    0[BANK0 ] PTR void 
 14389 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14390 ;;  c               2    2[BANK0 ] int 
 14391 ;;  n               2    4[BANK0 ] unsigned int 
 14392 ;; Auto vars:     Size  Location     Type
 14393 ;;  p               2    6[BANK0 ] PTR unsigned char 
 14394 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14395 ;; Return value:  Size  Location     Type
 14396 ;;                  2    0[BANK0 ] PTR void 
 14397 ;; Registers used:
 14398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14399 ;; Tracked objects:
 14400 ;;		On entry : F/0
 14401 ;;		On exit  : F/0
 14402 ;;		Unchanged: 0/0
 14403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14404 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14405 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14407 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14408 ;;Total ram usage:        8 bytes
 14409 ;; Hardware stack levels used:    1
 14410 ;; Hardware stack levels required when called:   11
 14411 ;; This function calls:
 14412 ;;		Nothing
 14413 ;; This function is called by:
 14414 ;;		_USBDeviceInit
 14415 ;; This function uses a non-reentrant model
 14416 ;;
 14417                           
 14418                           	psect	text56
 14419  01425E                     __ptext56:
 14420                           	opt stack 0
 14421  01425E                     _memset:
 14422                           	opt stack 16
 14423                           
 14424                           ; BSR set to: 0
 14425                           
 14426                           ; BSR set to: 13
 14427                           ;incstack = 0
 14428  01425E  C060  F066         	movff	memset@p1,memset@p
 14429  014262  C061  F067         	movff	memset@p1+1,memset@p+1
 14430  014266  D008               	goto	l9986
 14431  014268                     l9982:
 14432                           
 14433                           ; BSR set to: 0
 14434  014268  C066  FFD9         	movff	memset@p,fsr2l
 14435  01426C  C067  FFDA         	movff	memset@p+1,fsr2h
 14436  014270  C062  FFDF         	movff	memset@c,indf2
 14437                           
 14438                           ; BSR set to: 0
 14439  014274  4B66               	infsnz	memset@p& (0+255),f,b
 14440  014276  2B67               	incf	(memset@p+1)& (0+255),f,b
 14441  014278                     l9986:
 14442                           
 14443                           ; BSR set to: 0
 14444  014278  0764               	decf	memset@n& (0+255),f,b
 14445  01427A  A0D8               	btfss	status,0,c
 14446  01427C  0765               	decf	(memset@n+1)& (0+255),f,b
 14447  01427E  2964               	incf	memset@n& (0+255),w,b
 14448  014280  E1F3               	bnz	l9982
 14449  014282  2965               	incf	(memset@n+1)& (0+255),w,b
 14450  014284  E1F1               	bnz	l9982
 14451                           
 14452                           ; BSR set to: 0
 14453  014286  0012               	return		;funcret
 14454  014288                     __end_of_memset:
 14455                           	opt stack 0
 14456                           tblptru	equ	0xFF8
 14457                           tblptrh	equ	0xFF7
 14458                           tblptrl	equ	0xFF6
 14459                           tablat	equ	0xFF5
 14460                           prodh	equ	0xFF4
 14461                           prodl	equ	0xFF3
 14462                           intcon	equ	0xFF2
 14463                           intcon2	equ	0xFF1
 14464                           postinc0	equ	0xFEE
 14465                           wreg	equ	0xFE8
 14466                           indf1	equ	0xFE7
 14467                           postinc1	equ	0xFE6
 14468                           postdec1	equ	0xFE5
 14469                           fsr1h	equ	0xFE2
 14470                           fsr1l	equ	0xFE1
 14471                           indf2	equ	0xFDF
 14472                           postinc2	equ	0xFDE
 14473                           postdec2	equ	0xFDD
 14474                           plusw2	equ	0xFDB
 14475                           fsr2h	equ	0xFDA
 14476                           fsr2l	equ	0xFD9
 14477                           status	equ	0xFD8
 14478                           
 14479 ;; *************** function _USBDeviceAttach *****************
 14480 ;; Defined at:
 14481 ;;		line 1352 in file "../My_library/usb/usb_device.c"
 14482 ;; Parameters:    Size  Location     Type
 14483 ;;		None
 14484 ;; Auto vars:     Size  Location     Type
 14485 ;;		None
 14486 ;; Return value:  Size  Location     Type
 14487 ;;		None               void
 14488 ;; Registers used:
 14489 ;;		wreg, status,2
 14490 ;; Tracked objects:
 14491 ;;		On entry : F/D
 14492 ;;		On exit  : D/D
 14493 ;;		Unchanged: 0/0
 14494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14499 ;;Total ram usage:        0 bytes
 14500 ;; Hardware stack levels used:    1
 14501 ;; Hardware stack levels required when called:   11
 14502 ;; This function calls:
 14503 ;;		Nothing
 14504 ;; This function is called by:
 14505 ;;		_USB_init
 14506 ;; This function uses a non-reentrant model
 14507 ;;
 14508                           
 14509                           	psect	text57
 14510  014170                     __ptext57:
 14511                           	opt stack 0
 14512  014170                     _USBDeviceAttach:
 14513                           	opt stack 17
 14514                           
 14515                           ; BSR set to: 13
 14516                           ;usb_device.c: 1356: {
 14517                           ;usb_device.c: 1357: if(1 == 1)
 14518                           
 14519                           ; BSR set to: 0
 14520                           ;incstack = 0
 14521  014170  501C               	movf	_USBDeviceState,w,c	;volatile
 14522  014172  A4D8               	btfss	status,2,c
 14523  014174  0012               	return	
 14524                           
 14525                           ; BSR set to: 13
 14526                           ;usb_device.c: 1358: {
 14527                           ;usb_device.c: 1360: UCON = 0;
 14528  014176  6A65               	clrf	3941,c	;volatile
 14529                           
 14530                           ;usb_device.c: 1363: UIE = 0;
 14531  014178  010F               	movlb	15	; () banked
 14532  01417A  6B36               	clrf	54,b	;volatile
 14533                           
 14534                           ; BSR set to: 15
 14535                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 14536  01417C  0E16               	movlw	22
 14537  01417E  D80B               	call	PL200	;call to abstracted procedure
 14538                           
 14539                           ; BSR set to: 15
 14540                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 14541  014180  8ED0               	bsf	4048,7,c	;volatile
 14542                           
 14543                           ; BSR set to: 15
 14544  014182  88A2               	bsf	4002,4,c	;volatile
 14545                           
 14546                           ; BSR set to: 15
 14547  014184  88A0               	bsf	4000,4,c	;volatile
 14548                           
 14549                           ; BSR set to: 15
 14550  014186  8EF2               	bsf	intcon,7,c	;volatile
 14551                           
 14552                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 14553  014188  D001               	goto	l207
 14554  01418A                     l208:
 14555  01418A  8665               	bsf	3941,3,c	;volatile
 14556  01418C                     l207:
 14557  01418C  A665               	btfss	3941,3,c	;volatile
 14558  01418E  D7FD               	goto	l208
 14559                           
 14560                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 14561  014190  0E01               	movlw	1
 14562  014192  6E1C               	movwf	_USBDeviceState,c	;volatile
 14563  014194  0C01               	retlw	1	;funcret
 14564  014196                     __end_of_USBDeviceAttach:
 14565                           	opt stack 0
 14566  014196                     PL200:
 14567                           	opt stack 16
 14568  014196  6F39               	movwf	57,b	;volatile
 14569  014198  0E9F               	movlw	159
 14570  01419A  6F37               	movwf	55,b	;volatile
 14571  01419C  0E7B               	movlw	123
 14572  01419E  6F36               	movwf	54,b	;volatile
 14573  0141A0  0C7B               	retlw	123
 14574  0141A2                     __end_ofPL200:
 14575                           	opt stack 0
 14576                           tblptru	equ	0xFF8
 14577                           tblptrh	equ	0xFF7
 14578                           tblptrl	equ	0xFF6
 14579                           tablat	equ	0xFF5
 14580                           prodh	equ	0xFF4
 14581                           prodl	equ	0xFF3
 14582                           intcon	equ	0xFF2
 14583                           intcon2	equ	0xFF1
 14584                           postinc0	equ	0xFEE
 14585                           wreg	equ	0xFE8
 14586                           indf1	equ	0xFE7
 14587                           postinc1	equ	0xFE6
 14588                           postdec1	equ	0xFE5
 14589                           fsr1h	equ	0xFE2
 14590                           fsr1l	equ	0xFE1
 14591                           indf2	equ	0xFDF
 14592                           postinc2	equ	0xFDE
 14593                           postdec2	equ	0xFDD
 14594                           plusw2	equ	0xFDB
 14595                           fsr2h	equ	0xFDA
 14596                           fsr2l	equ	0xFD9
 14597                           status	equ	0xFD8
 14598                           
 14599 ;; *************** function _ST7032_init *****************
 14600 ;; Defined at:
 14601 ;;		line 62 in file "../My_library/My_ST7032.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;		None
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;		None
 14606 ;; Return value:  Size  Location     Type
 14607 ;;		None               void
 14608 ;; Registers used:
 14609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14610 ;; Tracked objects:
 14611 ;;		On entry : F/0
 14612 ;;		On exit  : F/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14619 ;;Total ram usage:        0 bytes
 14620 ;; Hardware stack levels used:    1
 14621 ;; Hardware stack levels required when called:   15
 14622 ;; This function calls:
 14623 ;;		_ST7032_clear
 14624 ;;		_ST7032_command
 14625 ;;		_ringbuf_init
 14626 ;;		_ringbuf_put
 14627 ;; This function is called by:
 14628 ;;		_hardware_init
 14629 ;; This function uses a non-reentrant model
 14630 ;;
 14631                           
 14632                           	psect	text58
 14633  01245E                     __ptext58:
 14634                           	opt stack 0
 14635  01245E                     _ST7032_init:
 14636                           	opt stack 14
 14637                           
 14638                           ; BSR set to: 0
 14639                           ;My_ST7032.c: 63: SSP1STAT = 0b10000000;
 14640                           
 14641                           ;incstack = 0
 14642  01245E  0E80               	movlw	128
 14643  012460  6EC7               	movwf	4039,c	;volatile
 14644                           
 14645                           ;My_ST7032.c: 64: SSP1CON1 = 0b00101000;
 14646  012462  0E28               	movlw	40
 14647  012464  6EC6               	movwf	4038,c	;volatile
 14648                           
 14649                           ;My_ST7032.c: 65: SSP1ADD = 0x13;
 14650  012466  0E13               	movlw	19
 14651  012468  6EC8               	movwf	4040,c	;volatile
 14652                           
 14653                           ; BSR set to: 0
 14654                           ;My_ST7032.c: 66: PIE1bits.SSP1IE = 1;
 14655  01246A  869D               	bsf	3997,3,c	;volatile
 14656                           
 14657                           ; BSR set to: 0
 14658                           ;My_ST7032.c: 67: IPR1bits.SSP1IP = 0;
 14659  01246C  969F               	bcf	3999,3,c	;volatile
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;My_ST7032.c: 68: PIR1bits.SSP1IF = 0;
 14663  01246E  969E               	bcf	3998,3,c	;volatile
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;My_ST7032.c: 69: PIE2bits.BCL1IE = 1;
 14667  012470  86A0               	bsf	4000,3,c	;volatile
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;My_ST7032.c: 70: IPR2bits.BCL1IP = 0;
 14671  012472  96A2               	bcf	4002,3,c	;volatile
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;My_ST7032.c: 71: PIR2bits.BCL1IF = 0;
 14675  012474  96A1               	bcf	4001,3,c	;volatile
 14676                           
 14677                           ; BSR set to: 0
 14678                           ;My_ST7032.c: 72: INTCONbits.PEIE = 1;
 14679  012476  8CF2               	bsf	intcon,6,c	;volatile
 14680                           
 14681                           ; BSR set to: 0
 14682                           ;My_ST7032.c: 74: static char buf[200];
 14683                           ;My_ST7032.c: 75: ringbuf_init(&lcd_tx, buf, sizeof (buf));
 14684  012478  0E82               	movlw	low _lcd_tx
 14685  01247A  6F60               	movwf	ringbuf_init@rb& (0+255),b
 14686  01247C  0E01               	movlw	high _lcd_tx
 14687  01247E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 14688  012480  0E00               	movlw	low ST7032_init@buf
 14689  012482  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 14690  012484  0E04               	movlw	high ST7032_init@buf
 14691  012486  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 14692  012488  6B65               	clrf	(ringbuf_init@bufsize+1)& (0+255),b
 14693  01248A  0EC8               	movlw	200
 14694  01248C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 14695  01248E  EC18  F0A0         	call	_ringbuf_init	;wreg free
 14696                           
 14697                           ; BSR set to: 0
 14698                           ;My_ST7032.c: 77: ringbuf_put(&lcd_tx, 0);
 14699  012492  ECF4  F09F         	call	PL74	;call to abstracted procedure
 14700  012496  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
 14701  012498  ECC5  F093         	call	_ringbuf_put	;wreg free
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;My_ST7032.c: 78: ringbuf_put(&lcd_tx, 3);
 14705  01249C  ECF4  F09F         	call	PL74	;call to abstracted procedure
 14706  0124A0  0E03               	movlw	3
 14707  0124A2  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 14708  0124A4  ECC5  F093         	call	_ringbuf_put	;wreg free
 14709                           
 14710                           ; BSR set to: 0
 14711                           ;My_ST7032.c: 80: ST7032_command(0x38, 1);
 14712  0124A8  D82A               	call	PL358	;call to abstracted procedure
 14713  0124AA  EC79  F09F         	call	_ST7032_command
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;My_ST7032.c: 81: ST7032_command(0x39, 1);
 14717  0124AE  0E01               	movlw	1
 14718  0124B0  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14719  0124B2  0E39               	movlw	57
 14720  0124B4  EC79  F09F         	call	_ST7032_command
 14721                           
 14722                           ; BSR set to: 0
 14723                           ;My_ST7032.c: 82: ST7032_command(0x14, 1);
 14724  0124B8  0E01               	movlw	1
 14725  0124BA  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14726  0124BC  0E14               	movlw	20
 14727  0124BE  EC79  F09F         	call	_ST7032_command
 14728                           
 14729                           ; BSR set to: 0
 14730                           ;My_ST7032.c: 83: ST7032_command(0x70, 1);
 14731  0124C2  0E01               	movlw	1
 14732  0124C4  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14733  0124C6  0E70               	movlw	112
 14734  0124C8  EC79  F09F         	call	_ST7032_command
 14735                           
 14736                           ; BSR set to: 0
 14737                           ;My_ST7032.c: 84: ST7032_command(0x56, 1);
 14738  0124CC  0E01               	movlw	1
 14739  0124CE  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14740  0124D0  0E56               	movlw	86
 14741  0124D2  EC79  F09F         	call	_ST7032_command
 14742                           
 14743                           ; BSR set to: 0
 14744                           ;My_ST7032.c: 85: ST7032_command(0x6C, 3);
 14745  0124D6  0E03               	movlw	3
 14746  0124D8  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14747  0124DA  0E6C               	movlw	108
 14748  0124DC  EC79  F09F         	call	_ST7032_command
 14749                           
 14750                           ; BSR set to: 0
 14751                           ;My_ST7032.c: 86: ST7032_command(0x38, 1);
 14752  0124E0  D80E               	call	PL358	;call to abstracted procedure
 14753  0124E2  EC79  F09F         	call	_ST7032_command
 14754                           
 14755                           ; BSR set to: 0
 14756                           ;My_ST7032.c: 87: ST7032_command(0x0C, 1);
 14757  0124E6  0E01               	movlw	1
 14758  0124E8  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14759  0124EA  0E0C               	movlw	12
 14760  0124EC  EC79  F09F         	call	_ST7032_command
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;My_ST7032.c: 88: ST7032_command(0x06, 1);
 14764  0124F0  0E01               	movlw	1
 14765  0124F2  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14766  0124F4  0E06               	movlw	6
 14767  0124F6  EC79  F09F         	call	_ST7032_command
 14768                           
 14769                           ; BSR set to: 0
 14770                           ;My_ST7032.c: 89: ST7032_clear();
 14771  0124FA  EFCA  F0A2         	goto	_ST7032_clear	;wreg free
 14772  0124FE                     __end_of_ST7032_init:
 14773                           	opt stack 0
 14774  0124FE                     PL358:
 14775                           	opt stack 14
 14776  0124FE  0E01               	movlw	1
 14777  012500  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14778  012502  0C38               	retlw	56
 14779  012504                     __end_ofPL358:
 14780                           	opt stack 0
 14781                           tblptru	equ	0xFF8
 14782                           tblptrh	equ	0xFF7
 14783                           tblptrl	equ	0xFF6
 14784                           tablat	equ	0xFF5
 14785                           prodh	equ	0xFF4
 14786                           prodl	equ	0xFF3
 14787                           intcon	equ	0xFF2
 14788                           intcon2	equ	0xFF1
 14789                           postinc0	equ	0xFEE
 14790                           wreg	equ	0xFE8
 14791                           indf1	equ	0xFE7
 14792                           postinc1	equ	0xFE6
 14793                           postdec1	equ	0xFE5
 14794                           fsr1h	equ	0xFE2
 14795                           fsr1l	equ	0xFE1
 14796                           indf2	equ	0xFDF
 14797                           postinc2	equ	0xFDE
 14798                           postdec2	equ	0xFDD
 14799                           plusw2	equ	0xFDB
 14800                           fsr2h	equ	0xFDA
 14801                           fsr2l	equ	0xFD9
 14802                           status	equ	0xFD8
 14803                           
 14804 ;; *************** function _ringbuf_init *****************
 14805 ;; Defined at:
 14806 ;;		line 5 in file "../My_library/My_ringbuf.c"
 14807 ;; Parameters:    Size  Location     Type
 14808 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 14809 ;;		 -> usb_tx(8), usb_rx(8), terminal_task@command(8), lcd_tx(8), 
 14810 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 14811 ;;		 -> hardware_init@usbrx(100), hardware_init@usbtx(2000), terminal_task@buf(100), ST7032_init@buf(200), 
 14812 ;;  bufsize         2    4[BANK0 ] unsigned int 
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;		None
 14815 ;; Return value:  Size  Location     Type
 14816 ;;		None               void
 14817 ;; Registers used:
 14818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14819 ;; Tracked objects:
 14820 ;;		On entry : F/0
 14821 ;;		On exit  : F/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14824 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14827 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14828 ;;Total ram usage:        6 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; Hardware stack levels required when called:   11
 14831 ;; This function calls:
 14832 ;;		Nothing
 14833 ;; This function is called by:
 14834 ;;		_ST7032_init
 14835 ;;		_terminal_task
 14836 ;;		_hardware_init
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text59
 14841  014030                     __ptext59:
 14842                           	opt stack 0
 14843  014030                     _ringbuf_init:
 14844                           	opt stack 18
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;incstack = 0
 14851  014030  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 14852  014034  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 14853  014038  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 14854  01403C  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 14855                           
 14856                           ; BSR set to: 0
 14857                           ;My_ringbuf.c: 7: rb->size = bufsize;
 14858  014040  EE20 F002          	lfsr	2,2
 14859  014044  D80E               	call	PL270	;call to abstracted procedure
 14860  014046  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 14861  01404A  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 14862                           
 14863                           ; BSR set to: 0
 14864                           ;My_ringbuf.c: 8: rb->head = 0;
 14865  01404E  EE20 F004          	lfsr	2,4
 14866  014052  D807               	call	PL270	;call to abstracted procedure
 14867  014054  6ADE               	clrf	postinc2,c
 14868  014056  6ADD               	clrf	postdec2,c
 14869                           
 14870                           ; BSR set to: 0
 14871                           ;My_ringbuf.c: 9: rb->tail = 0;
 14872  014058  EE20 F006          	lfsr	2,6
 14873  01405C  D802               	call	PL270	;call to abstracted procedure
 14874                           
 14875                           ; BSR set to: 0
 14876  01405E  EF12  F094         	goto	PL362	;call to abstracted procedure
 14877  014062                     __end_of_ringbuf_init:
 14878                           	opt stack 0
 14879  014062                     PL270:
 14880                           	opt stack 18
 14881  014062  5160               	movf	ringbuf_init@rb& (0+255),w,b
 14882  014064  26D9               	addwf	fsr2l,f,c
 14883  014066  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 14884  014068  22DA               	addwfc	fsr2h,f,c
 14885  01406A  0012               	return	
 14886  01406C                     __end_ofPL270:
 14887                           	opt stack 0
 14888                           tblptru	equ	0xFF8
 14889                           tblptrh	equ	0xFF7
 14890                           tblptrl	equ	0xFF6
 14891                           tablat	equ	0xFF5
 14892                           prodh	equ	0xFF4
 14893                           prodl	equ	0xFF3
 14894                           intcon	equ	0xFF2
 14895                           intcon2	equ	0xFF1
 14896                           postinc0	equ	0xFEE
 14897                           wreg	equ	0xFE8
 14898                           indf1	equ	0xFE7
 14899                           postinc1	equ	0xFE6
 14900                           postdec1	equ	0xFE5
 14901                           fsr1h	equ	0xFE2
 14902                           fsr1l	equ	0xFE1
 14903                           indf2	equ	0xFDF
 14904                           postinc2	equ	0xFDE
 14905                           postdec2	equ	0xFDD
 14906                           plusw2	equ	0xFDB
 14907                           fsr2h	equ	0xFDA
 14908                           fsr2l	equ	0xFD9
 14909                           status	equ	0xFD8
 14910                           
 14911 ;; *************** function _ST7032_clear *****************
 14912 ;; Defined at:
 14913 ;;		line 26 in file "../My_library/My_ST7032.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;		None               void
 14920 ;; Registers used:
 14921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : E/1
 14924 ;;		On exit  : F/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14931 ;;Total ram usage:        0 bytes
 14932 ;; Hardware stack levels used:    1
 14933 ;; Hardware stack levels required when called:   14
 14934 ;; This function calls:
 14935 ;;		_ST7032_command
 14936 ;; This function is called by:
 14937 ;;		_ST7032_init
 14938 ;;		_sleep_task
 14939 ;;		_bootload
 14940 ;;		_display_LCD
 14941 ;; This function uses a non-reentrant model
 14942 ;;
 14943                           
 14944                           	psect	text60
 14945  014594                     __ptext60:
 14946                           	opt stack 0
 14947  014594                     _ST7032_clear:
 14948                           	opt stack 13
 14949                           
 14950                           ;My_ST7032.c: 27: ST7032_command(0x01, 2);
 14951                           
 14952                           ; BSR set to: 0
 14953                           ;incstack = 0
 14954  014594  0E02               	movlw	2
 14955  014596  0100               	movlb	0	; () banked
 14956  014598  6F6F               	movwf	ST7032_command@wait& (0+255),b
 14957  01459A  0E01               	movlw	1
 14958  01459C  EF79  F09F         	goto	_ST7032_command
 14959  0145A0                     __end_of_ST7032_clear:
 14960                           	opt stack 0
 14961                           tblptru	equ	0xFF8
 14962                           tblptrh	equ	0xFF7
 14963                           tblptrl	equ	0xFF6
 14964                           tablat	equ	0xFF5
 14965                           prodh	equ	0xFF4
 14966                           prodl	equ	0xFF3
 14967                           intcon	equ	0xFF2
 14968                           intcon2	equ	0xFF1
 14969                           postinc0	equ	0xFEE
 14970                           wreg	equ	0xFE8
 14971                           indf1	equ	0xFE7
 14972                           postinc1	equ	0xFE6
 14973                           postdec1	equ	0xFE5
 14974                           fsr1h	equ	0xFE2
 14975                           fsr1l	equ	0xFE1
 14976                           indf2	equ	0xFDF
 14977                           postinc2	equ	0xFDE
 14978                           postdec2	equ	0xFDD
 14979                           plusw2	equ	0xFDB
 14980                           fsr2h	equ	0xFDA
 14981                           fsr2l	equ	0xFD9
 14982                           status	equ	0xFD8
 14983                           
 14984 ;; *************** function _ST7032_command *****************
 14985 ;; Defined at:
 14986 ;;		line 18 in file "../My_library/My_ST7032.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  command         1    wreg     unsigned char 
 14989 ;;  wait            1   15[BANK0 ] unsigned char 
 14990 ;; Auto vars:     Size  Location     Type
 14991 ;;  command         1   16[BANK0 ] unsigned char 
 14992 ;; Return value:  Size  Location     Type
 14993 ;;		None               void
 14994 ;; Registers used:
 14995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14996 ;; Tracked objects:
 14997 ;;		On entry : F/0
 14998 ;;		On exit  : F/0
 14999 ;;		Unchanged: 0/0
 15000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15001 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15004 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15005 ;;Total ram usage:        2 bytes
 15006 ;; Hardware stack levels used:    1
 15007 ;; Hardware stack levels required when called:   13
 15008 ;; This function calls:
 15009 ;;		_ringbuf_put
 15010 ;; This function is called by:
 15011 ;;		_ST7032_clear
 15012 ;;		_ST7032_cursor
 15013 ;;		_ST7032_init
 15014 ;; This function uses a non-reentrant model
 15015 ;;
 15016                           
 15017                           	psect	text61
 15018  013EF2                     __ptext61:
 15019                           	opt stack 0
 15020  013EF2                     _ST7032_command:
 15021                           	opt stack 13
 15022                           
 15023                           ; BSR set to: 0
 15024                           ;incstack = 0
 15025                           ;ST7032_command@command stored from wreg
 15026  013EF2  6F70               	movwf	ST7032_command@command& (0+255),b
 15027                           
 15028                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 15029  013EF4  0E82               	movlw	low _lcd_tx
 15030  013EF6  0100               	movlb	0	; () banked
 15031  013EF8  6F68               	movwf	ringbuf_put@rb& (0+255),b
 15032  013EFA  0E01               	movlw	high _lcd_tx
 15033  013EFC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 15034  013EFE  0E7C               	movlw	124
 15035  013F00  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 15036  013F02  ECC5  F093         	call	_ringbuf_put	;wreg free
 15037                           
 15038                           ;My_ST7032.c: 20: ringbuf_put(&lcd_tx, 0x80);
 15039  013F06  ECF4  F09F         	call	PL74	;call to abstracted procedure
 15040  013F0A  0E80               	movlw	128
 15041  013F0C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 15042  013F0E  ECC5  F093         	call	_ringbuf_put	;wreg free
 15043                           
 15044                           ;My_ST7032.c: 21: ringbuf_put(&lcd_tx, command);
 15045  013F12  ECF4  F09F         	call	PL74	;call to abstracted procedure
 15046  013F16  C070  F06A         	movff	ST7032_command@command,ringbuf_put@asciicode
 15047  013F1A  ECC5  F093         	call	_ringbuf_put	;wreg free
 15048                           
 15049                           ;My_ST7032.c: 22: ringbuf_put(&lcd_tx, 0);
 15050  013F1E  ECF4  F09F         	call	PL74	;call to abstracted procedure
 15051  013F22  6B6A               	clrf	ringbuf_put@asciicode& (0+255),b
 15052  013F24  ECC5  F093         	call	_ringbuf_put	;wreg free
 15053                           
 15054                           ;My_ST7032.c: 23: ringbuf_put(&lcd_tx, wait);
 15055  013F28  ECF4  F09F         	call	PL74	;call to abstracted procedure
 15056  013F2C  C06F  F06A         	movff	ST7032_command@wait,ringbuf_put@asciicode
 15057  013F30  EFC5  F093         	goto	_ringbuf_put	;wreg free
 15058  013F34                     __end_of_ST7032_command:
 15059                           	opt stack 0
 15060                           tblptru	equ	0xFF8
 15061                           tblptrh	equ	0xFF7
 15062                           tblptrl	equ	0xFF6
 15063                           tablat	equ	0xFF5
 15064                           prodh	equ	0xFF4
 15065                           prodl	equ	0xFF3
 15066                           intcon	equ	0xFF2
 15067                           intcon2	equ	0xFF1
 15068                           postinc0	equ	0xFEE
 15069                           wreg	equ	0xFE8
 15070                           indf1	equ	0xFE7
 15071                           postinc1	equ	0xFE6
 15072                           postdec1	equ	0xFE5
 15073                           fsr1h	equ	0xFE2
 15074                           fsr1l	equ	0xFE1
 15075                           indf2	equ	0xFDF
 15076                           postinc2	equ	0xFDE
 15077                           postdec2	equ	0xFDD
 15078                           plusw2	equ	0xFDB
 15079                           fsr2h	equ	0xFDA
 15080                           fsr2l	equ	0xFD9
 15081                           status	equ	0xFD8
 15082                           
 15083 ;; *************** function _RTCC_init *****************
 15084 ;; Defined at:
 15085 ;;		line 22 in file "../My_library/My_RTCC.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;		None
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;		None
 15090 ;; Return value:  Size  Location     Type
 15091 ;;		None               void
 15092 ;; Registers used:
 15093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15094 ;; Tracked objects:
 15095 ;;		On entry : F/0
 15096 ;;		On exit  : 2/2
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15103 ;;Total ram usage:        0 bytes
 15104 ;; Hardware stack levels used:    1
 15105 ;; Hardware stack levels required when called:   15
 15106 ;; This function calls:
 15107 ;;		_RTCC_from_RTCC
 15108 ;;		_RTCC_from_epoch
 15109 ;; This function is called by:
 15110 ;;		_hardware_init
 15111 ;; This function uses a non-reentrant model
 15112 ;;
 15113                           
 15114                           	psect	text62
 15115  013B32                     __ptext62:
 15116                           	opt stack 0
 15117  013B32                     _RTCC_init:
 15118                           	opt stack 14
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 15122                           
 15123                           ; BSR set to: 0
 15124                           ;incstack = 0
 15125  013B32  010F               	movlb	15	; () banked
 15126  013B34  8B3F               	bsf	63,5,b	;volatile
 15127                           
 15128                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 15129  013B36  BB3F               	btfsc	63,5,b	;volatile
 15130  013B38  D005               	goto	l11080
 15131                           
 15132                           ; BSR set to: 15
 15133                           ;My_RTCC.c: 25: EECON2 = 0x55;
 15134  013B3A  0E55               	movlw	85
 15135  013B3C  6EA7               	movwf	4007,c	;volatile
 15136                           
 15137                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 15138  013B3E  0EAA               	movlw	170
 15139  013B40  6EA7               	movwf	4007,c	;volatile
 15140                           
 15141                           ; BSR set to: 15
 15142                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 15143  013B42  8B3F               	bsf	63,5,b	;volatile
 15144  013B44                     l11080:
 15145                           
 15146                           ; BSR set to: 15
 15147                           ;My_RTCC.c: 28: }
 15148                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 15149  013B44  8F3F               	bsf	63,7,b	;volatile
 15150                           
 15151                           ; BSR set to: 15
 15152                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 15153  013B46  953F               	bcf	63,2,b	;volatile
 15154                           
 15155                           ; BSR set to: 15
 15156                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 15157  013B48  833C               	bsf	60,1,b	;volatile
 15158                           
 15159                           ; BSR set to: 15
 15160                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 15161  013B4A  853C               	bsf	60,2,b	;volatile
 15162                           
 15163                           ; BSR set to: 15
 15164                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 15165  013B4C  6B3E               	clrf	62,b	;volatile
 15166                           
 15167                           ; BSR set to: 15
 15168                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 15169  013B4E  86CD               	bsf	4045,3,c	;volatile
 15170                           
 15171                           ; BSR set to: 15
 15172                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
 15173  013B50  D811               	call	PL206	;call to abstracted procedure
 15174  013B52  EC8C  F0A2         	call	_RTCC_from_RTCC	;wreg free
 15175                           
 15176                           ; BSR set to: 0
 15177                           ;My_RTCC.c: 37: if (now.DD == 0) {
 15178  013B56  0102               	movlb	2	; () banked
 15179  013B58  5197               	movf	(_now+8)& (0+255),w,b
 15180  013B5A  A4D8               	btfss	status,2,c
 15181  013B5C  0012               	return	
 15182                           
 15183                           ; BSR set to: 2
 15184                           ;My_RTCC.c: 38: now.epoch = 0;
 15185  013B5E  6B8F               	clrf	_now& (0+255),b
 15186  013B60  6B90               	clrf	(_now+1)& (0+255),b
 15187  013B62  6B91               	clrf	(_now+2)& (0+255),b
 15188  013B64  6B92               	clrf	(_now+3)& (0+255),b
 15189                           
 15190                           ; BSR set to: 2
 15191                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
 15192  013B66  0E8F               	movlw	low _now
 15193  013B68  0100               	movlb	0	; () banked
 15194  013B6A  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 15195  013B6C  0E02               	movlw	high _now
 15196  013B6E  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 15197  013B70  EF80  F0A2         	goto	_RTCC_from_epoch	;wreg free
 15198  013B74                     __end_of_RTCC_init:
 15199                           	opt stack 0
 15200  013B74                     PL206:
 15201                           	opt stack 11
 15202  013B74  0E8F               	movlw	low _now
 15203  013B76  0100               	movlb	0	; () banked
 15204  013B78  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 15205  013B7A  0E02               	movlw	high _now
 15206  013B7C  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 15207  013B7E  0012               	return	
 15208  013B80                     __end_ofPL206:
 15209                           	opt stack 0
 15210                           tblptru	equ	0xFF8
 15211                           tblptrh	equ	0xFF7
 15212                           tblptrl	equ	0xFF6
 15213                           tablat	equ	0xFF5
 15214                           prodh	equ	0xFF4
 15215                           prodl	equ	0xFF3
 15216                           intcon	equ	0xFF2
 15217                           intcon2	equ	0xFF1
 15218                           postinc0	equ	0xFEE
 15219                           wreg	equ	0xFE8
 15220                           indf1	equ	0xFE7
 15221                           postinc1	equ	0xFE6
 15222                           postdec1	equ	0xFE5
 15223                           fsr1h	equ	0xFE2
 15224                           fsr1l	equ	0xFE1
 15225                           indf2	equ	0xFDF
 15226                           postinc2	equ	0xFDE
 15227                           postdec2	equ	0xFDD
 15228                           plusw2	equ	0xFDB
 15229                           fsr2h	equ	0xFDA
 15230                           fsr2l	equ	0xFD9
 15231                           status	equ	0xFD8
 15232                           
 15233 ;; *************** function _RTCC_from_epoch *****************
 15234 ;; Defined at:
 15235 ;;		line 210 in file "../My_library/My_RTCC.c"
 15236 ;; Parameters:    Size  Location     Type
 15237 ;;  tm              2   47[BANK0 ] PTR struct .
 15238 ;;		 -> now(14), 
 15239 ;; Auto vars:     Size  Location     Type
 15240 ;;		None
 15241 ;; Return value:  Size  Location     Type
 15242 ;;		None               void
 15243 ;; Registers used:
 15244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15245 ;; Tracked objects:
 15246 ;;		On entry : F/0
 15247 ;;		On exit  : F/F
 15248 ;;		Unchanged: 0/0
 15249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15253 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15254 ;;Total ram usage:        2 bytes
 15255 ;; Hardware stack levels used:    1
 15256 ;; Hardware stack levels required when called:   14
 15257 ;; This function calls:
 15258 ;;		_caltime_to_RTCC
 15259 ;;		_epoch_to_caltime
 15260 ;; This function is called by:
 15261 ;;		_RTCC_init
 15262 ;;		_RTCC_adjust_time_inc
 15263 ;;		_RTCC_adjust_time_dec
 15264 ;; This function uses a non-reentrant model
 15265 ;;
 15266                           
 15267                           	psect	text63
 15268  014500                     __ptext63:
 15269                           	opt stack 0
 15270  014500                     _RTCC_from_epoch:
 15271                           	opt stack 12
 15272                           
 15273                           ; BSR set to: 0
 15274                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
 15275                           
 15276                           ;incstack = 0
 15277  014500  C08F  F082         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 15278  014504  C090  F083         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 15279  014508  EC80  F08D         	call	_epoch_to_caltime	;wreg free
 15280                           
 15281                           ; BSR set to: 0
 15282                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
 15283  01450C  C08F  F065         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 15284  014510  C090  F066         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 15285  014514  EF77  F096         	goto	_caltime_to_RTCC	;wreg free
 15286  014518                     __end_of_RTCC_from_epoch:
 15287                           	opt stack 0
 15288                           tblptru	equ	0xFF8
 15289                           tblptrh	equ	0xFF7
 15290                           tblptrl	equ	0xFF6
 15291                           tablat	equ	0xFF5
 15292                           prodh	equ	0xFF4
 15293                           prodl	equ	0xFF3
 15294                           intcon	equ	0xFF2
 15295                           intcon2	equ	0xFF1
 15296                           postinc0	equ	0xFEE
 15297                           wreg	equ	0xFE8
 15298                           indf1	equ	0xFE7
 15299                           postinc1	equ	0xFE6
 15300                           postdec1	equ	0xFE5
 15301                           fsr1h	equ	0xFE2
 15302                           fsr1l	equ	0xFE1
 15303                           indf2	equ	0xFDF
 15304                           postinc2	equ	0xFDE
 15305                           postdec2	equ	0xFDD
 15306                           plusw2	equ	0xFDB
 15307                           fsr2h	equ	0xFDA
 15308                           fsr2l	equ	0xFD9
 15309                           status	equ	0xFD8
 15310                           
 15311 ;; *************** function _epoch_to_caltime *****************
 15312 ;; Defined at:
 15313 ;;		line 125 in file "../My_library/My_RTCC.c"
 15314 ;; Parameters:    Size  Location     Type
 15315 ;;  tm              2   34[BANK0 ] PTR struct .
 15316 ;;		 -> now(14), 
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;  num             4   43[BANK0 ] unsigned long 
 15319 ;;  day             2   39[BANK0 ] unsigned int 
 15320 ;;  day_since_ep    2    0        unsigned int 
 15321 ;;  month           1   42[BANK0 ] unsigned char 
 15322 ;;  year            1   41[BANK0 ] unsigned char 
 15323 ;; Return value:  Size  Location     Type
 15324 ;;		None               void
 15325 ;; Registers used:
 15326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15327 ;; Tracked objects:
 15328 ;;		On entry : F/0
 15329 ;;		On exit  : F/0
 15330 ;;		Unchanged: 0/0
 15331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15333 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15334 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15335 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15336 ;;Total ram usage:       13 bytes
 15337 ;; Hardware stack levels used:    1
 15338 ;; Hardware stack levels required when called:   13
 15339 ;; This function calls:
 15340 ;;		_get_quot_rem
 15341 ;;		_month_length
 15342 ;; This function is called by:
 15343 ;;		_RTCC_from_caltime
 15344 ;;		_RTCC_from_epoch
 15345 ;; This function uses a non-reentrant model
 15346 ;;
 15347                           
 15348                           	psect	text64
 15349  011B00                     __ptext64:
 15350                           	opt stack 0
 15351  011B00                     _epoch_to_caltime:
 15352                           	opt stack 12
 15353                           
 15354                           ; BSR set to: 0
 15355                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
 15356                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
 15357                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
 15358                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
 15359                           ;My_RTCC.c: 132: uint16_t day;
 15360                           ;My_RTCC.c: 133: uint8_t year = 0;
 15361                           
 15362                           ; BSR set to: 15
 15363                           ;incstack = 0
 15364  011B00  6B89               	clrf	epoch_to_caltime@year& (0+255),b
 15365                           
 15366                           ; BSR set to: 0
 15367                           ;My_RTCC.c: 134: uint8_t month = 1;
 15368  011B02  0E01               	movlw	1
 15369  011B04  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 15370                           
 15371                           ; BSR set to: 0
 15372                           ;My_RTCC.c: 135: epoch_t num;
 15373                           ;My_RTCC.c: 137: num = tm->epoch;
 15374  011B06  D875               	call	PL344	;call to abstracted procedure
 15375  011B08  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 15376  011B0C  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 15377  011B10  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 15378  011B14  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 15379                           
 15380                           ; BSR set to: 0
 15381                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
 15382  011B18  D875               	call	PL364	;call to abstracted procedure
 15383  011B1A  EC97  F097         	call	_get_quot_rem
 15384  011B1E  EE20 F004          	lfsr	2,4
 15385  011B22  D859               	call	PL110	;call to abstracted procedure
 15386  011B24  C079  FFDF         	movff	?_get_quot_rem,indf2
 15387                           
 15388                           ; BSR set to: 0
 15389                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
 15390  011B28  D86D               	call	PL364	;call to abstracted procedure
 15391  011B2A  EC97  F097         	call	_get_quot_rem
 15392  011B2E  EE20 F005          	lfsr	2,5
 15393  011B32  D851               	call	PL110	;call to abstracted procedure
 15394  011B34  C079  FFDF         	movff	?_get_quot_rem,indf2
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
 15398  011B38  0E18               	movlw	24
 15399  011B3A  6F79               	movwf	get_quot_rem@div& (0+255),b
 15400  011B3C  0E8B               	movlw	epoch_to_caltime@num& (0+255)
 15401  011B3E  EC97  F097         	call	_get_quot_rem
 15402  011B42  EE20 F006          	lfsr	2,6
 15403  011B46  D847               	call	PL110	;call to abstracted procedure
 15404  011B48  C079  FFDF         	movff	?_get_quot_rem,indf2
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;My_RTCC.c: 141: day = num;
 15408  011B4C  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 15409  011B50  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 15410                           
 15411                           ; BSR set to: 0
 15412                           ;My_RTCC.c: 144: num += 6;
 15413                           
 15414                           ; BSR set to: 0
 15415  011B54  0E06               	movlw	6
 15416  011B56  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 15417  011B58  0E00               	movlw	0
 15418  011B5A  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 15419  011B5C  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 15420  011B5E  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
 15424  011B60  0E07               	movlw	7
 15425  011B62  6F79               	movwf	get_quot_rem@div& (0+255),b
 15426  011B64  0E8B               	movlw	epoch_to_caltime@num& (0+255)
 15427  011B66  EC97  F097         	call	_get_quot_rem
 15428  011B6A  EE20 F007          	lfsr	2,7
 15429  011B6E  D833               	call	PL110	;call to abstracted procedure
 15430  011B70  C079  FFDF         	movff	?_get_quot_rem,indf2
 15431                           
 15432                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
 15433  011B74  D015               	goto	l9796
 15434  011B76                     l870:
 15435                           
 15436                           ; BSR set to: 0
 15437                           ;My_RTCC.c: 155: LATB2 = 1;
 15438  011B76  848A               	bsf	3978,2,c	;volatile
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;My_RTCC.c: 156: day = day - month_length(year, month);
 15442  011B78  D841               	call	PL360	;call to abstracted procedure
 15443  011B7A  EC3C  F09A         	call	_month_length
 15444  011B7E  5F87               	subwf	epoch_to_caltime@day& (0+255),f,b
 15445  011B80  0E00               	movlw	0
 15446  011B82  5B88               	subwfb	(epoch_to_caltime@day+1)& (0+255),f,b
 15447                           
 15448                           ; BSR set to: 0
 15449                           ;My_RTCC.c: 157: if (month == 12) {
 15450  011B84  0E0C               	movlw	12
 15451  011B86  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 15452  011B88  E10A               	bnz	l9794
 15453                           
 15454                           ; BSR set to: 0
 15455                           ;My_RTCC.c: 158: month = 1;
 15456  011B8A  0E01               	movlw	1
 15457  011B8C  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 15458                           
 15459                           ; BSR set to: 0
 15460                           ;My_RTCC.c: 159: year++;
 15461  011B8E  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 15462                           
 15463                           ; BSR set to: 0
 15464                           ;My_RTCC.c: 161: if (year >= 100) {
 15465  011B90  0E63               	movlw	99
 15466  011B92  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 15467  011B94  D005               	goto	l9796
 15468                           
 15469                           ; BSR set to: 0
 15470                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
 15471  011B96  D82D               	call	PL344	;call to abstracted procedure
 15472  011B98  D823               	call	PL184	;call to abstracted procedure
 15473                           
 15474                           ; BSR set to: 0
 15475                           ;My_RTCC.c: 163: year = 0;
 15476  011B9A  6B89               	clrf	epoch_to_caltime@year& (0+255),b
 15477  011B9C  D001               	goto	l9796
 15478  011B9E                     l9794:
 15479                           
 15480                           ; BSR set to: 0
 15481                           ;My_RTCC.c: 166: month++;
 15482  011B9E  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 15483  011BA0                     l9796:
 15484                           
 15485                           ; BSR set to: 0
 15486  011BA0  D82D               	call	PL360	;call to abstracted procedure
 15487  011BA2  EC3C  F09A         	call	_month_length
 15488  011BA6  6F84               	movwf	??_epoch_to_caltime& (0+255),b
 15489  011BA8  5184               	movf	??_epoch_to_caltime& (0+255),w,b
 15490  011BAA  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 15491  011BAC  0E00               	movlw	0
 15492  011BAE  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 15493  011BB0  E2E2               	bc	l870
 15494                           
 15495                           ; BSR set to: 0
 15496                           ;My_RTCC.c: 172: day++;
 15497  011BB2  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 15498  011BB4  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;My_RTCC.c: 174: tm->YY = year;
 15502  011BB6  EE20 F00A          	lfsr	2,10
 15503  011BBA  D80D               	call	PL110	;call to abstracted procedure
 15504  011BBC  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;My_RTCC.c: 175: tm->MM = month;
 15508  011BC0  EE20 F009          	lfsr	2,9
 15509  011BC4  D808               	call	PL110	;call to abstracted procedure
 15510  011BC6  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 15511                           
 15512                           ; BSR set to: 0
 15513                           ;My_RTCC.c: 176: tm->DD = day;
 15514  011BCA  EE20 F008          	lfsr	2,8
 15515  011BCE  D803               	call	PL110	;call to abstracted procedure
 15516  011BD0  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 15517                           
 15518                           ; BSR set to: 0
 15519  011BD4  0012               	return		;funcret
 15520  011BD6                     __end_of_epoch_to_caltime:
 15521                           	opt stack 0
 15522  011BD6                     PL110:
 15523                           	opt stack 12
 15524  011BD6  5182               	movf	epoch_to_caltime@tm& (0+255),w,b
 15525  011BD8  26D9               	addwf	fsr2l,f,c
 15526  011BDA  5183               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 15527  011BDC  22DA               	addwfc	fsr2h,f,c
 15528  011BDE  0012               	return	
 15529  011BE0                     __end_ofPL110:
 15530                           	opt stack 0
 15531  011BE0                     PL184:
 15532                           	opt stack 12
 15533  011BE0  0E80               	movlw	128
 15534  011BE2  5EDE               	subwf	postinc2,f,c
 15535  011BE4  0E13               	movlw	19
 15536  011BE6  5ADE               	subwfb	postinc2,f,c
 15537  011BE8  0E19               	movlw	25
 15538  011BEA  5ADE               	subwfb	postinc2,f,c
 15539  011BEC  0EBC               	movlw	188
 15540  011BEE  5ADE               	subwfb	postinc2,f,c
 15541  011BF0  0CBC               	retlw	188
 15542  011BF2                     __end_ofPL184:
 15543                           	opt stack 0
 15544  011BF2                     PL344:
 15545                           	opt stack 12
 15546  011BF2  C082  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 15547  011BF6  C083  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 15548  011BFA  0012               	return	
 15549  011BFC                     __end_ofPL344:
 15550                           	opt stack 0
 15551  011BFC                     PL360:
 15552                           	opt stack 12
 15553  011BFC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 15554  011C00  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 15555  011C02  0012               	return	
 15556  011C04                     __end_ofPL360:
 15557                           	opt stack 0
 15558  011C04                     PL364:
 15559                           	opt stack 12
 15560  011C04  0E3C               	movlw	60
 15561  011C06  6F79               	movwf	get_quot_rem@div& (0+255),b
 15562  011C08  0E8B               	movlw	epoch_to_caltime@num& (0+255)
 15563  011C0A  0012               	return	
 15564  011C0C                     __end_ofPL364:
 15565                           	opt stack 0
 15566                           tblptru	equ	0xFF8
 15567                           tblptrh	equ	0xFF7
 15568                           tblptrl	equ	0xFF6
 15569                           tablat	equ	0xFF5
 15570                           prodh	equ	0xFF4
 15571                           prodl	equ	0xFF3
 15572                           intcon	equ	0xFF2
 15573                           intcon2	equ	0xFF1
 15574                           postinc0	equ	0xFEE
 15575                           wreg	equ	0xFE8
 15576                           indf1	equ	0xFE7
 15577                           postinc1	equ	0xFE6
 15578                           postdec1	equ	0xFE5
 15579                           fsr1h	equ	0xFE2
 15580                           fsr1l	equ	0xFE1
 15581                           indf2	equ	0xFDF
 15582                           postinc2	equ	0xFDE
 15583                           postdec2	equ	0xFDD
 15584                           plusw2	equ	0xFDB
 15585                           fsr2h	equ	0xFDA
 15586                           fsr2l	equ	0xFD9
 15587                           status	equ	0xFD8
 15588                           
 15589 ;; *************** function _get_quot_rem *****************
 15590 ;; Defined at:
 15591 ;;		line 80 in file "../My_library/My_RTCC.c"
 15592 ;; Parameters:    Size  Location     Type
 15593 ;;  quot            1    wreg     PTR unsigned long 
 15594 ;;		 -> epoch_to_caltime@num(4), 
 15595 ;;  div             1   25[BANK0 ] unsigned char 
 15596 ;; Auto vars:     Size  Location     Type
 15597 ;;  quot            1   33[BANK0 ] PTR unsigned long 
 15598 ;;		 -> epoch_to_caltime@num(4), 
 15599 ;;  num             4   29[BANK0 ] unsigned long 
 15600 ;; Return value:  Size  Location     Type
 15601 ;;                  4   25[BANK0 ] unsigned long 
 15602 ;; Registers used:
 15603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15604 ;; Tracked objects:
 15605 ;;		On entry : F/0
 15606 ;;		On exit  : F/0
 15607 ;;		Unchanged: 0/0
 15608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15610 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15612 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15613 ;;Total ram usage:        9 bytes
 15614 ;; Hardware stack levels used:    1
 15615 ;; Hardware stack levels required when called:   12
 15616 ;; This function calls:
 15617 ;;		___lldiv
 15618 ;;		___lmul
 15619 ;; This function is called by:
 15620 ;;		_epoch_to_caltime
 15621 ;; This function uses a non-reentrant model
 15622 ;;
 15623                           
 15624                           	psect	text65
 15625  012F2E                     __ptext65:
 15626                           	opt stack 0
 15627  012F2E                     _get_quot_rem:
 15628                           	opt stack 12
 15629                           
 15630                           ; BSR set to: 0
 15631                           ;incstack = 0
 15632                           ;get_quot_rem@quot stored from wreg
 15633  012F2E  6F81               	movwf	get_quot_rem@quot& (0+255),b
 15634                           
 15635                           ;My_RTCC.c: 83: epoch_t num = *quot;
 15636  012F30  0100               	movlb	0	; () banked
 15637  012F32  5181               	movf	get_quot_rem@quot& (0+255),w,b
 15638  012F34  6ED9               	movwf	fsr2l,c
 15639  012F36  6ADA               	clrf	fsr2h,c
 15640  012F38  CFDE F07D          	movff	postinc2,get_quot_rem@num
 15641  012F3C  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 15642  012F40  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 15643  012F44  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 15644                           
 15645                           ; BSR set to: 0
 15646                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
 15647  012F48  5179               	movf	get_quot_rem@div& (0+255),w,b
 15648  012F4A  D82C               	call	PL208	;call to abstracted procedure
 15649  012F4C  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 15650  012F50  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 15651  012F54  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 15652  012F58  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 15653  012F5C  ECF3  F09A         	call	___lldiv	;wreg free
 15654  012F60  5181               	movf	get_quot_rem@quot& (0+255),w,b
 15655  012F62  6ED9               	movwf	fsr2l,c
 15656  012F64  6ADA               	clrf	fsr2h,c
 15657  012F66  D823               	call	PL250	;call to abstracted procedure
 15658  012F68  C063  FFDD         	movff	?___lldiv+3,postdec2
 15659  012F6C  52DD               	movf	postdec2,f,c
 15660  012F6E  52DD               	movf	postdec2,f,c
 15661  012F70  CFDE F06D          	movff	postinc2,___lmul@multiplier
 15662  012F74  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 15663  012F78  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 15664  012F7C  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 15665  012F80  5179               	movf	get_quot_rem@div& (0+255),w,b
 15666  012F82  EC38  F08B         	call	PL334	;call to abstracted procedure
 15667  012F86  ECE6  F09D         	call	___lmul	;wreg free
 15668  012F8A  516D               	movf	?___lmul& (0+255),w,b
 15669  012F8C  5D7D               	subwf	get_quot_rem@num& (0+255),w,b
 15670  012F8E  6F79               	movwf	?_get_quot_rem& (0+255),b
 15671  012F90  516E               	movf	(?___lmul+1)& (0+255),w,b
 15672  012F92  597E               	subwfb	(get_quot_rem@num+1)& (0+255),w,b
 15673  012F94  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 15674  012F96  516F               	movf	(?___lmul+2)& (0+255),w,b
 15675  012F98  597F               	subwfb	(get_quot_rem@num+2)& (0+255),w,b
 15676  012F9A  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 15677  012F9C  5170               	movf	(?___lmul+3)& (0+255),w,b
 15678  012F9E  5980               	subwfb	(get_quot_rem@num+3)& (0+255),w,b
 15679  012FA0  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 15680                           
 15681                           ; BSR set to: 0
 15682  012FA2  0012               	return		;funcret
 15683  012FA4                     __end_of_get_quot_rem:
 15684                           	opt stack 0
 15685  012FA4                     PL208:
 15686                           	opt stack 13
 15687  012FA4  6F64               	movwf	___lldiv@divisor& (0+255),b
 15688  012FA6  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 15689  012FA8  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 15690  012FAA  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 15691  012FAC  0012               	return	
 15692  012FAE                     __end_ofPL208:
 15693                           	opt stack 0
 15694  012FAE                     PL250:
 15695                           	opt stack 17
 15696  012FAE  C060  FFDE         	movff	?___lldiv,postinc2
 15697  012FB2  C061  FFDE         	movff	?___lldiv+1,postinc2
 15698  012FB6  C062  FFDE         	movff	?___lldiv+2,postinc2
 15699  012FBA  0012               	return	
 15700  012FBC                     __end_ofPL250:
 15701                           	opt stack 0
 15702                           tblptru	equ	0xFF8
 15703                           tblptrh	equ	0xFF7
 15704                           tblptrl	equ	0xFF6
 15705                           tablat	equ	0xFF5
 15706                           prodh	equ	0xFF4
 15707                           prodl	equ	0xFF3
 15708                           intcon	equ	0xFF2
 15709                           intcon2	equ	0xFF1
 15710                           postinc0	equ	0xFEE
 15711                           wreg	equ	0xFE8
 15712                           indf1	equ	0xFE7
 15713                           postinc1	equ	0xFE6
 15714                           postdec1	equ	0xFE5
 15715                           fsr1h	equ	0xFE2
 15716                           fsr1l	equ	0xFE1
 15717                           indf2	equ	0xFDF
 15718                           postinc2	equ	0xFDE
 15719                           postdec2	equ	0xFDD
 15720                           plusw2	equ	0xFDB
 15721                           fsr2h	equ	0xFDA
 15722                           fsr2l	equ	0xFD9
 15723                           status	equ	0xFD8
 15724                           
 15725 ;; *************** function _caltime_to_RTCC *****************
 15726 ;; Defined at:
 15727 ;;		line 105 in file "../My_library/My_RTCC.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;  tm              2    5[BANK0 ] PTR struct .
 15730 ;;		 -> now(14), 
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;		None
 15733 ;; Return value:  Size  Location     Type
 15734 ;;		None               void
 15735 ;; Registers used:
 15736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15737 ;; Tracked objects:
 15738 ;;		On entry : F/0
 15739 ;;		On exit  : F/F
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15746 ;;Total ram usage:        2 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:   13
 15749 ;; This function calls:
 15750 ;;		_d_to_x
 15751 ;; This function is called by:
 15752 ;;		_RTCC_from_caltime
 15753 ;;		_RTCC_from_epoch
 15754 ;; This function uses a non-reentrant model
 15755 ;;
 15756                           
 15757                           	psect	text66
 15758  012CEE                     __ptext66:
 15759                           	opt stack 0
 15760  012CEE                     _caltime_to_RTCC:
 15761                           	opt stack 12
 15762  012CEE                     l857:
 15763  012CEE  010F               	movlb	15	; () banked
 15764  012CF0  B93F               	btfsc	63,4,b	;volatile
 15765  012CF2  D7FD               	goto	l857
 15766                           
 15767                           ; BSR set to: 15
 15768                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
 15769                           
 15770                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
 15771                           
 15772                           ; BSR set to: 15
 15773                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
 15774  012CF4  EC65  F098         	call	PL284	;call to abstracted procedure
 15775  012CF8  D83C               	call	PL72	;call to abstracted procedure
 15776  012CFA  ECA4  F0A2         	call	_d_to_x
 15777  012CFE  010F               	movlb	15	; () banked
 15778  012D00  6F3A               	movwf	58,b	;volatile
 15779                           
 15780                           ; BSR set to: 15
 15781                           ;My_RTCC.c: 110: RTCVALH = 0x00;
 15782  012D02  6B3B               	clrf	59,b	;volatile
 15783                           
 15784                           ; BSR set to: 15
 15785                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
 15786  012D04  913F               	bcf	63,0,b	;volatile
 15787                           
 15788                           ; BSR set to: 15
 15789                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
 15790  012D06  833F               	bsf	63,1,b	;volatile
 15791                           
 15792                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
 15793  012D08  0100               	movlb	0	; () banked
 15794  012D0A  EE20 F008          	lfsr	2,8
 15795  012D0E  D831               	call	PL72	;call to abstracted procedure
 15796  012D10  ECA4  F0A2         	call	_d_to_x
 15797  012D14  010F               	movlb	15	; () banked
 15798  012D16  6F3A               	movwf	58,b	;volatile
 15799                           
 15800                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
 15801  012D18  0100               	movlb	0	; () banked
 15802  012D1A  EE20 F009          	lfsr	2,9
 15803  012D1E  D829               	call	PL72	;call to abstracted procedure
 15804  012D20  ECA4  F0A2         	call	_d_to_x
 15805  012D24  010F               	movlb	15	; () banked
 15806  012D26  6F3B               	movwf	59,b	;volatile
 15807                           
 15808                           ; BSR set to: 15
 15809                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
 15810  012D28  813F               	bsf	63,0,b	;volatile
 15811                           
 15812                           ; BSR set to: 15
 15813                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
 15814  012D2A  933F               	bcf	63,1,b	;volatile
 15815                           
 15816                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
 15817  012D2C  0100               	movlb	0	; () banked
 15818  012D2E  EE20 F006          	lfsr	2,6
 15819  012D32  D81F               	call	PL72	;call to abstracted procedure
 15820  012D34  ECA4  F0A2         	call	_d_to_x
 15821  012D38  010F               	movlb	15	; () banked
 15822  012D3A  6F3A               	movwf	58,b	;volatile
 15823                           
 15824                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
 15825  012D3C  0100               	movlb	0	; () banked
 15826  012D3E  EE20 F007          	lfsr	2,7
 15827  012D42  D817               	call	PL72	;call to abstracted procedure
 15828  012D44  ECA4  F0A2         	call	_d_to_x
 15829  012D48  010F               	movlb	15	; () banked
 15830  012D4A  6F3B               	movwf	59,b	;volatile
 15831                           
 15832                           ; BSR set to: 15
 15833                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
 15834  012D4C  913F               	bcf	63,0,b	;volatile
 15835                           
 15836                           ; BSR set to: 15
 15837                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
 15838  012D4E  933F               	bcf	63,1,b	;volatile
 15839                           
 15840                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
 15841  012D50  0100               	movlb	0	; () banked
 15842  012D52  EE20 F004          	lfsr	2,4
 15843  012D56  D80D               	call	PL72	;call to abstracted procedure
 15844  012D58  ECA4  F0A2         	call	_d_to_x
 15845  012D5C  010F               	movlb	15	; () banked
 15846  012D5E  6F3A               	movwf	58,b	;volatile
 15847                           
 15848                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
 15849  012D60  0100               	movlb	0	; () banked
 15850  012D62  EE20 F005          	lfsr	2,5
 15851  012D66  D805               	call	PL72	;call to abstracted procedure
 15852  012D68  ECA4  F0A2         	call	_d_to_x
 15853  012D6C  010F               	movlb	15	; () banked
 15854  012D6E  6F3B               	movwf	59,b	;volatile
 15855                           
 15856                           ; BSR set to: 15
 15857  012D70  0012               	return		;funcret
 15858  012D72                     __end_of_caltime_to_RTCC:
 15859                           	opt stack 0
 15860  012D72                     PL72:
 15861                           	opt stack 12
 15862  012D72  5165               	movf	caltime_to_RTCC@tm& (0+255),w,b
 15863  012D74  26D9               	addwf	fsr2l,f,c
 15864  012D76  5166               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 15865  012D78  22DA               	addwfc	fsr2h,f,c
 15866  012D7A  50DF               	movf	indf2,w,c
 15867  012D7C  0012               	return	
 15868  012D7E                     __end_ofPL72:
 15869                           	opt stack 0
 15870                           tblptru	equ	0xFF8
 15871                           tblptrh	equ	0xFF7
 15872                           tblptrl	equ	0xFF6
 15873                           tablat	equ	0xFF5
 15874                           prodh	equ	0xFF4
 15875                           prodl	equ	0xFF3
 15876                           intcon	equ	0xFF2
 15877                           intcon2	equ	0xFF1
 15878                           postinc0	equ	0xFEE
 15879                           wreg	equ	0xFE8
 15880                           indf1	equ	0xFE7
 15881                           postinc1	equ	0xFE6
 15882                           postdec1	equ	0xFE5
 15883                           fsr1h	equ	0xFE2
 15884                           fsr1l	equ	0xFE1
 15885                           indf2	equ	0xFDF
 15886                           postinc2	equ	0xFDE
 15887                           postdec2	equ	0xFDD
 15888                           plusw2	equ	0xFDB
 15889                           fsr2h	equ	0xFDA
 15890                           fsr2l	equ	0xFD9
 15891                           status	equ	0xFD8
 15892                           
 15893 ;; *************** function _d_to_x *****************
 15894 ;; Defined at:
 15895 ;;		line 45 in file "../My_library/My_RTCC.c"
 15896 ;; Parameters:    Size  Location     Type
 15897 ;;  dec             1    wreg     unsigned char 
 15898 ;; Auto vars:     Size  Location     Type
 15899 ;;  dec             1    4[BANK0 ] unsigned char 
 15900 ;; Return value:  Size  Location     Type
 15901 ;;                  1    wreg      unsigned char 
 15902 ;; Registers used:
 15903 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15904 ;; Tracked objects:
 15905 ;;		On entry : F/0
 15906 ;;		On exit  : F/0
 15907 ;;		Unchanged: 0/0
 15908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15913 ;;Total ram usage:        1 bytes
 15914 ;; Hardware stack levels used:    1
 15915 ;; Hardware stack levels required when called:   12
 15916 ;; This function calls:
 15917 ;;		___lbdiv
 15918 ;; This function is called by:
 15919 ;;		_caltime_to_RTCC
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text67
 15924  014548                     __ptext67:
 15925                           	opt stack 0
 15926  014548                     _d_to_x:
 15927                           	opt stack 12
 15928                           
 15929                           ; BSR set to: 15
 15930                           ;incstack = 0
 15931                           ;d_to_x@dec stored from wreg
 15932  014548  6F64               	movwf	d_to_x@dec& (0+255),b
 15933                           
 15934                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
 15935  01454A  0E0A               	movlw	10
 15936  01454C  0100               	movlb	0	; () banked
 15937  01454E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 15938  014550  5164               	movf	d_to_x@dec& (0+255),w,b
 15939  014552  EC36  F0A0         	call	___lbdiv
 15940  014556  0D06               	mullw	6
 15941  014558  50F3               	movf	prodl,w,c
 15942  01455A  2564               	addwf	d_to_x@dec& (0+255),w,b
 15943                           
 15944                           ; BSR set to: 0
 15945  01455C  0012               	return		;funcret
 15946  01455E                     __end_of_d_to_x:
 15947                           	opt stack 0
 15948                           tblptru	equ	0xFF8
 15949                           tblptrh	equ	0xFF7
 15950                           tblptrl	equ	0xFF6
 15951                           tablat	equ	0xFF5
 15952                           prodh	equ	0xFF4
 15953                           prodl	equ	0xFF3
 15954                           intcon	equ	0xFF2
 15955                           intcon2	equ	0xFF1
 15956                           postinc0	equ	0xFEE
 15957                           wreg	equ	0xFE8
 15958                           indf1	equ	0xFE7
 15959                           postinc1	equ	0xFE6
 15960                           postdec1	equ	0xFE5
 15961                           fsr1h	equ	0xFE2
 15962                           fsr1l	equ	0xFE1
 15963                           indf2	equ	0xFDF
 15964                           postinc2	equ	0xFDE
 15965                           postdec2	equ	0xFDD
 15966                           plusw2	equ	0xFDB
 15967                           fsr2h	equ	0xFDA
 15968                           fsr2l	equ	0xFD9
 15969                           status	equ	0xFD8
 15970                           
 15971 ;; *************** function ___lbdiv *****************
 15972 ;; Defined at:
 15973 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbdiv.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;  dividend        1    wreg     unsigned char 
 15976 ;;  divisor         1    0[BANK0 ] unsigned char 
 15977 ;; Auto vars:     Size  Location     Type
 15978 ;;  dividend        1    1[BANK0 ] unsigned char 
 15979 ;;  quotient        1    3[BANK0 ] unsigned char 
 15980 ;;  counter         1    2[BANK0 ] unsigned char 
 15981 ;; Return value:  Size  Location     Type
 15982 ;;                  1    wreg      unsigned char 
 15983 ;; Registers used:
 15984 ;;		wreg, status,2, status,0
 15985 ;; Tracked objects:
 15986 ;;		On entry : F/0
 15987 ;;		On exit  : F/0
 15988 ;;		Unchanged: 0/0
 15989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15990 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15991 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15993 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15994 ;;Total ram usage:        4 bytes
 15995 ;; Hardware stack levels used:    1
 15996 ;; Hardware stack levels required when called:   11
 15997 ;; This function calls:
 15998 ;;		Nothing
 15999 ;; This function is called by:
 16000 ;;		_d_to_x
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text68
 16005  01406C                     __ptext68:
 16006                           	opt stack 0
 16007  01406C                     ___lbdiv:
 16008                           	opt stack 12
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;incstack = 0
 16012                           ;___lbdiv@dividend stored from wreg
 16013  01406C  6F61               	movwf	___lbdiv@dividend& (0+255),b
 16014  01406E  0100               	movlb	0	; () banked
 16015  014070  6B63               	clrf	___lbdiv@quotient& (0+255),b
 16016                           
 16017                           ; BSR set to: 0
 16018  014072  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16019  014074  E014               	bz	l9600
 16020                           
 16021                           ; BSR set to: 0
 16022  014076  0E01               	movlw	1
 16023  014078  6F62               	movwf	___lbdiv@counter& (0+255),b
 16024  01407A  D003               	goto	l9588
 16025  01407C                     l9584:
 16026                           
 16027                           ; BSR set to: 0
 16028  01407C  90D8               	bcf	status,0,c
 16029  01407E  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 16030                           
 16031                           ; BSR set to: 0
 16032  014080  2B62               	incf	___lbdiv@counter& (0+255),f,b
 16033  014082                     l9588:
 16034                           
 16035                           ; BSR set to: 0
 16036  014082  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 16037  014084  D7FB               	goto	l9584
 16038  014086                     l9590:
 16039                           
 16040                           ; BSR set to: 0
 16041  014086  90D8               	bcf	status,0,c
 16042  014088  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 16043  01408A  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16044  01408C  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 16045  01408E  E303               	bnc	l9596
 16046                           
 16047                           ; BSR set to: 0
 16048  014090  5160               	movf	___lbdiv@divisor& (0+255),w,b
 16049  014092  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 16050                           
 16051                           ; BSR set to: 0
 16052  014094  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 16053  014096                     l9596:
 16054                           
 16055                           ; BSR set to: 0
 16056  014096  90D8               	bcf	status,0,c
 16057  014098  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 16058                           
 16059                           ; BSR set to: 0
 16060  01409A  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 16061  01409C  D7F4               	goto	l9590
 16062  01409E                     l9600:
 16063                           
 16064                           ; BSR set to: 0
 16065  01409E  5163               	movf	___lbdiv@quotient& (0+255),w,b
 16066                           
 16067                           ; BSR set to: 0
 16068  0140A0  0012               	return		;funcret
 16069  0140A2                     __end_of___lbdiv:
 16070                           	opt stack 0
 16071                           tblptru	equ	0xFF8
 16072                           tblptrh	equ	0xFF7
 16073                           tblptrl	equ	0xFF6
 16074                           tablat	equ	0xFF5
 16075                           prodh	equ	0xFF4
 16076                           prodl	equ	0xFF3
 16077                           intcon	equ	0xFF2
 16078                           intcon2	equ	0xFF1
 16079                           postinc0	equ	0xFEE
 16080                           wreg	equ	0xFE8
 16081                           indf1	equ	0xFE7
 16082                           postinc1	equ	0xFE6
 16083                           postdec1	equ	0xFE5
 16084                           fsr1h	equ	0xFE2
 16085                           fsr1l	equ	0xFE1
 16086                           indf2	equ	0xFDF
 16087                           postinc2	equ	0xFDE
 16088                           postdec2	equ	0xFDD
 16089                           plusw2	equ	0xFDB
 16090                           fsr2h	equ	0xFDA
 16091                           fsr2l	equ	0xFD9
 16092                           status	equ	0xFD8
 16093                           
 16094 ;; *************** function _CTMU_init *****************
 16095 ;; Defined at:
 16096 ;;		line 169 in file "../My_library/My_PIC.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;		None
 16099 ;; Auto vars:     Size  Location     Type
 16100 ;;		None
 16101 ;; Return value:  Size  Location     Type
 16102 ;;		None               void
 16103 ;; Registers used:
 16104 ;;		wreg, status,2
 16105 ;; Tracked objects:
 16106 ;;		On entry : 0/2
 16107 ;;		On exit  : 0/0
 16108 ;;		Unchanged: 0/0
 16109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16114 ;;Total ram usage:        0 bytes
 16115 ;; Hardware stack levels used:    1
 16116 ;; Hardware stack levels required when called:   11
 16117 ;; This function calls:
 16118 ;;		Nothing
 16119 ;; This function is called by:
 16120 ;;		_hardware_init
 16121 ;; This function uses a non-reentrant model
 16122 ;;
 16123                           
 16124                           	psect	text69
 16125  01436E                     __ptext69:
 16126                           	opt stack 0
 16127  01436E                     _CTMU_init:
 16128                           	opt stack 18
 16129                           
 16130                           ;My_PIC.c: 170: CTMUCONH = 0x00;
 16131                           
 16132                           ; BSR set to: 0
 16133                           ;incstack = 0
 16134  01436E  6AB3               	clrf	4019,c	;volatile
 16135                           
 16136                           ;My_PIC.c: 171: CTMUCONL = 0x90;
 16137  014370  0E90               	movlw	144
 16138  014372  6EB2               	movwf	4018,c	;volatile
 16139                           
 16140                           ;My_PIC.c: 172: CTMUICON = 0x01;
 16141  014374  0E01               	movlw	1
 16142  014376  6EB1               	movwf	4017,c	;volatile
 16143                           
 16144                           ;My_PIC.c: 174: ADCON1bits.ADFM = 1;
 16145  014378  8EC1               	bsf	4033,7,c	;volatile
 16146                           
 16147                           ;My_PIC.c: 175: ADCON1bits.ADCAL = 0;
 16148  01437A  9CC1               	bcf	4033,6,c	;volatile
 16149                           
 16150                           ;My_PIC.c: 176: ADCON1bits.ACQT = 1;
 16151  01437C  50C1               	movf	4033,w,c	;volatile
 16152  01437E  0BC7               	andlw	-57
 16153  014380  0908               	iorlw	8
 16154  014382  6EC1               	movwf	4033,c	;volatile
 16155                           
 16156                           ;My_PIC.c: 177: ADCON1bits.ADCS = 6;
 16157  014384  EC26  F0A2         	call	PL318	;call to abstracted procedure
 16158                           
 16159                           ;My_PIC.c: 179: ADCON0bits.VCFG0 = 0;
 16160  014388  9CC2               	bcf	4034,6,c	;volatile
 16161                           
 16162                           ;My_PIC.c: 180: ADCON0bits.VCFG1 = 0;
 16163  01438A  9EC2               	bcf	4034,7,c	;volatile
 16164                           
 16165                           ;My_PIC.c: 181: ADCON0bits.ADON = 1;
 16166  01438C  80C2               	bsf	4034,0,c	;volatile
 16167  01438E  0012               	return		;funcret
 16168  014390                     __end_of_CTMU_init:
 16169                           	opt stack 0
 16170                           tblptru	equ	0xFF8
 16171                           tblptrh	equ	0xFF7
 16172                           tblptrl	equ	0xFF6
 16173                           tablat	equ	0xFF5
 16174                           prodh	equ	0xFF4
 16175                           prodl	equ	0xFF3
 16176                           intcon	equ	0xFF2
 16177                           intcon2	equ	0xFF1
 16178                           postinc0	equ	0xFEE
 16179                           wreg	equ	0xFE8
 16180                           indf1	equ	0xFE7
 16181                           postinc1	equ	0xFE6
 16182                           postdec1	equ	0xFE5
 16183                           fsr1h	equ	0xFE2
 16184                           fsr1l	equ	0xFE1
 16185                           indf2	equ	0xFDF
 16186                           postinc2	equ	0xFDE
 16187                           postdec2	equ	0xFDD
 16188                           plusw2	equ	0xFDB
 16189                           fsr2h	equ	0xFDA
 16190                           fsr2l	equ	0xFD9
 16191                           status	equ	0xFD8
 16192                           
 16193 ;; *************** function _ADC_init *****************
 16194 ;; Defined at:
 16195 ;;		line 133 in file "../My_library/My_PIC.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;  p_ref           1    wreg     unsigned char 
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;  p_ref           1    0[BANK0 ] unsigned char 
 16200 ;; Return value:  Size  Location     Type
 16201 ;;		None               void
 16202 ;; Registers used:
 16203 ;;		wreg, status,2
 16204 ;; Tracked objects:
 16205 ;;		On entry : 2/2
 16206 ;;		On exit  : 0/0
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16212 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;Total ram usage:        1 bytes
 16214 ;; Hardware stack levels used:    1
 16215 ;; Hardware stack levels required when called:   11
 16216 ;; This function calls:
 16217 ;;		Nothing
 16218 ;; This function is called by:
 16219 ;;		_hardware_init
 16220 ;; This function uses a non-reentrant model
 16221 ;;
 16222                           
 16223                           	psect	text70
 16224  014436                     __ptext70:
 16225                           	opt stack 0
 16226  014436                     _ADC_init:
 16227                           	opt stack 18
 16228                           
 16229                           ;incstack = 0
 16230                           ;ADC_init@p_ref stored from wreg
 16231  014436  0100               	movlb	0	; () banked
 16232  014438  6F60               	movwf	ADC_init@p_ref& (0+255),b
 16233                           
 16234                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
 16235  01443A  9EC2               	bcf	4034,7,c	;volatile
 16236                           
 16237                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
 16238  01443C  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 16239  01443E  D002               	bra	u11795
 16240  014440  9CC2               	bcf	4034,6,c	;volatile
 16241  014442  D001               	bra	u11796
 16242  014444                     u11795:
 16243  014444  8CC2               	bsf	4034,6,c	;volatile
 16244  014446                     u11796:
 16245                           
 16246                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
 16247  014446  8EC1               	bsf	4033,7,c	;volatile
 16248                           
 16249                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
 16250  014448  9CC1               	bcf	4033,6,c	;volatile
 16251                           
 16252                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
 16253  01444A  D000               	goto	PL318	;call to abstracted procedure
 16254  01444C                     __end_of_ADC_init:
 16255                           	opt stack 0
 16256  01444C                     PL318:
 16257                           	opt stack 18
 16258  01444C  50C1               	movf	4033,w,c	;volatile
 16259  01444E  0BF8               	andlw	-8
 16260  014450  0906               	iorlw	6
 16261  014452  6EC1               	movwf	4033,c	;volatile
 16262  014454  0012               	return	
 16263  014456                     __end_ofPL318:
 16264                           	opt stack 0
 16265                           tblptru	equ	0xFF8
 16266                           tblptrh	equ	0xFF7
 16267                           tblptrl	equ	0xFF6
 16268                           tablat	equ	0xFF5
 16269                           prodh	equ	0xFF4
 16270                           prodl	equ	0xFF3
 16271                           intcon	equ	0xFF2
 16272                           intcon2	equ	0xFF1
 16273                           postinc0	equ	0xFEE
 16274                           wreg	equ	0xFE8
 16275                           indf1	equ	0xFE7
 16276                           postinc1	equ	0xFE6
 16277                           postdec1	equ	0xFE5
 16278                           fsr1h	equ	0xFE2
 16279                           fsr1l	equ	0xFE1
 16280                           indf2	equ	0xFDF
 16281                           postinc2	equ	0xFDE
 16282                           postdec2	equ	0xFDD
 16283                           plusw2	equ	0xFDB
 16284                           fsr2h	equ	0xFDA
 16285                           fsr2l	equ	0xFD9
 16286                           status	equ	0xFD8
 16287                           
 16288 ;; *************** function _ctmu_task *****************
 16289 ;; Defined at:
 16290 ;;		line 29 in file "ctmu.c"
 16291 ;; Parameters:    Size  Location     Type
 16292 ;;		None
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;		None
 16295 ;; Return value:  Size  Location     Type
 16296 ;;		None               void
 16297 ;; Registers used:
 16298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16299 ;; Tracked objects:
 16300 ;;		On entry : 0/0
 16301 ;;		On exit  : E/0
 16302 ;;		Unchanged: 0/0
 16303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;Total ram usage:        0 bytes
 16309 ;; Hardware stack levels used:    1
 16310 ;; Hardware stack levels required when called:   14
 16311 ;; This function calls:
 16312 ;;		_ctmu_sampling
 16313 ;; This function is called by:
 16314 ;;		_main
 16315 ;; This function uses a non-reentrant model
 16316 ;;
 16317                           
 16318                           	psect	text71
 16319  014586                     __ptext71:
 16320                           	opt stack 0
 16321  014586                     _ctmu_task:
 16322                           	opt stack 16
 16323                           
 16324                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 16325                           
 16326                           ;incstack = 0
 16327  014586  0101               	movlb	1	; () banked
 16328  014588  512C               	movf	_ctmu_sampling_flag& (0+255),w,b
 16329  01458A  B4D8               	btfsc	status,2,c
 16330  01458C  0012               	return	
 16331                           
 16332                           ; BSR set to: 1
 16333                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 16334  01458E  6B2C               	clrf	_ctmu_sampling_flag& (0+255),b
 16335                           
 16336                           ; BSR set to: 1
 16337                           ;ctmu.c: 32: ctmu_sampling();
 16338  014590  EF75  F093         	goto	_ctmu_sampling	;wreg free
 16339  014594                     __end_of_ctmu_task:
 16340                           	opt stack 0
 16341                           tblptru	equ	0xFF8
 16342                           tblptrh	equ	0xFF7
 16343                           tblptrl	equ	0xFF6
 16344                           tablat	equ	0xFF5
 16345                           prodh	equ	0xFF4
 16346                           prodl	equ	0xFF3
 16347                           intcon	equ	0xFF2
 16348                           intcon2	equ	0xFF1
 16349                           postinc0	equ	0xFEE
 16350                           wreg	equ	0xFE8
 16351                           indf1	equ	0xFE7
 16352                           postinc1	equ	0xFE6
 16353                           postdec1	equ	0xFE5
 16354                           fsr1h	equ	0xFE2
 16355                           fsr1l	equ	0xFE1
 16356                           indf2	equ	0xFDF
 16357                           postinc2	equ	0xFDE
 16358                           postdec2	equ	0xFDD
 16359                           plusw2	equ	0xFDB
 16360                           fsr2h	equ	0xFDA
 16361                           fsr2l	equ	0xFD9
 16362                           status	equ	0xFD8
 16363                           
 16364 ;; *************** function _ctmu_sampling *****************
 16365 ;; Defined at:
 16366 ;;		line 22 in file "ctmu.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;		None
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;		None
 16371 ;; Return value:  Size  Location     Type
 16372 ;;		None               void
 16373 ;; Registers used:
 16374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16375 ;; Tracked objects:
 16376 ;;		On entry : F/1
 16377 ;;		On exit  : F/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16384 ;;Total ram usage:        0 bytes
 16385 ;; Hardware stack levels used:    1
 16386 ;; Hardware stack levels required when called:   13
 16387 ;; This function calls:
 16388 ;;		_CTMU_read
 16389 ;;		___lwdiv
 16390 ;;		_button_timer_interrupt
 16391 ;; This function is called by:
 16392 ;;		_ctmu_task
 16393 ;; This function uses a non-reentrant model
 16394 ;;
 16395                           
 16396                           	psect	text72
 16397  0126EA                     __ptext72:
 16398                           	opt stack 0
 16399  0126EA                     _ctmu_sampling:
 16400                           	opt stack 16
 16401                           
 16402                           ; BSR set to: 1
 16403                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 16404                           
 16405                           ;incstack = 0
 16406  0126EA  0E3D               	movlw	low _port
 16407  0126EC  0100               	movlb	0	; () banked
 16408  0126EE  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 16409  0126F0  0E01               	movlw	high _port
 16410  0126F2  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16411  0126F4  0E00               	movlw	0
 16412  0126F6  ECBF  F096         	call	_CTMU_read
 16413  0126FA  D842               	call	PL222	;call to abstracted procedure
 16414  0126FC  C141  F07E         	movff	_port+4,___lwdiv@divisor
 16415  012700  C142  F07F         	movff	_port+5,___lwdiv@divisor+1
 16416  012704  ECA0  F09E         	call	___lwdiv	;wreg free
 16417  012708  D834               	call	PL98	;call to abstracted procedure
 16418  01270A  ECA6  F088         	call	_button_timer_interrupt	;wreg free
 16419                           
 16420                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 16421  01270E  0E54               	movlw	low (_port+23)
 16422  012710  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 16423  012712  0E01               	movlw	high (_port+23)
 16424  012714  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16425  012716  0E01               	movlw	1
 16426  012718  ECBF  F096         	call	_CTMU_read
 16427  01271C  D831               	call	PL222	;call to abstracted procedure
 16428  01271E  C158  F07E         	movff	_port+27,___lwdiv@divisor
 16429  012722  C159  F07F         	movff	_port+28,___lwdiv@divisor+1
 16430  012726  ECA0  F09E         	call	___lwdiv	;wreg free
 16431  01272A  D823               	call	PL98	;call to abstracted procedure
 16432  01272C  ECA6  F088         	call	_button_timer_interrupt	;wreg free
 16433                           
 16434                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 16435  012730  0E6B               	movlw	low (_port+46)
 16436  012732  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 16437  012734  0E01               	movlw	high (_port+46)
 16438  012736  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 16439  012738  0E02               	movlw	2
 16440  01273A  ECBF  F096         	call	_CTMU_read
 16441  01273E  D820               	call	PL222	;call to abstracted procedure
 16442  012740  C16F  F07E         	movff	_port+50,___lwdiv@divisor
 16443  012744  C170  F07F         	movff	_port+51,___lwdiv@divisor+1
 16444  012748  ECA0  F09E         	call	___lwdiv	;wreg free
 16445  01274C  D812               	call	PL98	;call to abstracted procedure
 16446  01274E  ECA6  F088         	call	_button_timer_interrupt	;wreg free
 16447                           
 16448                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 16449  012752  0E25               	movlw	low _ctmu_m
 16450  012754  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 16451  012756  6B84               	clrf	(button_timer_interrupt@bt+1)& (0+255),b
 16452  012758  0E03               	movlw	3
 16453  01275A  ECBF  F096         	call	_CTMU_read
 16454  01275E  D810               	call	PL222	;call to abstracted procedure
 16455  012760  C11B  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 16456  012764  C11C  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 16457  012768  ECA0  F09E         	call	___lwdiv	;wreg free
 16458  01276C  D802               	call	PL98	;call to abstracted procedure
 16459  01276E  EFA6  F088         	goto	_button_timer_interrupt	;wreg free
 16460  012772                     __end_of_ctmu_sampling:
 16461                           	opt stack 0
 16462  012772                     PL98:
 16463                           	opt stack 16
 16464  012772  517C               	movf	?___lwdiv& (0+255),w,b
 16465  012774  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 16466  012776  0E01               	movlw	1
 16467  012778  A4D8               	btfss	status,2,c
 16468  01277A  0E00               	movlw	0
 16469  01277C  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 16470  01277E  0012               	return	
 16471  012780                     __end_ofPL98:
 16472                           	opt stack 0
 16473  012780                     PL222:
 16474                           	opt stack 16
 16475  012780  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 16476  012784  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 16477  012788  0012               	return	
 16478  01278A                     __end_ofPL222:
 16479                           	opt stack 0
 16480                           tblptru	equ	0xFF8
 16481                           tblptrh	equ	0xFF7
 16482                           tblptrl	equ	0xFF6
 16483                           tablat	equ	0xFF5
 16484                           prodh	equ	0xFF4
 16485                           prodl	equ	0xFF3
 16486                           intcon	equ	0xFF2
 16487                           intcon2	equ	0xFF1
 16488                           postinc0	equ	0xFEE
 16489                           wreg	equ	0xFE8
 16490                           indf1	equ	0xFE7
 16491                           postinc1	equ	0xFE6
 16492                           postdec1	equ	0xFE5
 16493                           fsr1h	equ	0xFE2
 16494                           fsr1l	equ	0xFE1
 16495                           indf2	equ	0xFDF
 16496                           postinc2	equ	0xFDE
 16497                           postdec2	equ	0xFDD
 16498                           plusw2	equ	0xFDB
 16499                           fsr2h	equ	0xFDA
 16500                           fsr2l	equ	0xFD9
 16501                           status	equ	0xFD8
 16502                           
 16503 ;; *************** function _button_timer_interrupt *****************
 16504 ;; Defined at:
 16505 ;;		line 3 in file "../My_library/My_button.c"
 16506 ;; Parameters:    Size  Location     Type
 16507 ;;  bt              2   35[BANK0 ] PTR struct button
 16508 ;;		 -> ctmu_m(4), port(69), 
 16509 ;;  sw_value        1   37[BANK0 ] unsigned char 
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;		None
 16512 ;; Return value:  Size  Location     Type
 16513 ;;		None               void
 16514 ;; Registers used:
 16515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16516 ;; Tracked objects:
 16517 ;;		On entry : F/0
 16518 ;;		On exit  : F/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16521 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16523 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16524 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16525 ;;Total ram usage:        5 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; Hardware stack levels required when called:   11
 16528 ;; This function calls:
 16529 ;;		Nothing
 16530 ;; This function is called by:
 16531 ;;		_ctmu_sampling
 16532 ;; This function uses a non-reentrant model
 16533 ;;
 16534                           
 16535                           	psect	text73
 16536  01114C                     __ptext73:
 16537                           	opt stack 0
 16538  01114C                     _button_timer_interrupt:
 16539                           	opt stack 17
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;My_button.c: 4: if (sw_value) {
 16543                           
 16544                           ; BSR set to: 0
 16545                           ;incstack = 0
 16546  01114C  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 16547  01114E  E048               	bz	l7826
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 16551  011150  D8A2               	call	PL32	;call to abstracted procedure
 16552  011152  0E84               	movlw	132
 16553  011154  18DE               	xorwf	postinc2,w,c
 16554  011156  E105               	bnz	l525
 16555  011158  0E03               	movlw	3
 16556  01115A  18DE               	xorwf	postinc2,w,c
 16557  01115C  E102               	bnz	l525
 16558                           
 16559                           ; BSR set to: 0
 16560  01115E  D8A0               	call	PL38	;call to abstracted procedure
 16561  011160  8EDF               	bsf	indf2,7,c
 16562  011162                     l525:
 16563                           
 16564                           ; BSR set to: 0
 16565                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 16566  011162  D899               	call	PL32	;call to abstracted procedure
 16567  011164  0EBC               	movlw	188
 16568  011166  18DE               	xorwf	postinc2,w,c
 16569  011168  E105               	bnz	l526
 16570  01116A  0E02               	movlw	2
 16571  01116C  18DE               	xorwf	postinc2,w,c
 16572  01116E  E102               	bnz	l526
 16573                           
 16574                           ; BSR set to: 0
 16575  011170  D897               	call	PL38	;call to abstracted procedure
 16576  011172  8CDF               	bsf	indf2,6,c
 16577  011174                     l526:
 16578                           
 16579                           ; BSR set to: 0
 16580                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 16581  011174  D890               	call	PL32	;call to abstracted procedure
 16582  011176  0EF4               	movlw	244
 16583  011178  18DE               	xorwf	postinc2,w,c
 16584  01117A  E104               	bnz	l527
 16585  01117C  04DE               	decf	postinc2,w,c
 16586  01117E  E102               	bnz	l527
 16587                           
 16588                           ; BSR set to: 0
 16589  011180  D88F               	call	PL38	;call to abstracted procedure
 16590  011182  8ADF               	bsf	indf2,5,c
 16591  011184                     l527:
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 16595  011184  D888               	call	PL32	;call to abstracted procedure
 16596  011186  0E2C               	movlw	44
 16597  011188  18DE               	xorwf	postinc2,w,c
 16598  01118A  E104               	bnz	l528
 16599  01118C  04DE               	decf	postinc2,w,c
 16600  01118E  E102               	bnz	l528
 16601                           
 16602                           ; BSR set to: 0
 16603  011190  D887               	call	PL38	;call to abstracted procedure
 16604  011192  88DF               	bsf	indf2,4,c
 16605  011194                     l528:
 16606                           
 16607                           ; BSR set to: 0
 16608                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 16609  011194  D880               	call	PL32	;call to abstracted procedure
 16610  011196  0E96               	movlw	150
 16611  011198  18DE               	xorwf	postinc2,w,c
 16612  01119A  10DE               	iorwf	postinc2,w,c
 16613  01119C  E102               	bnz	l529
 16614                           
 16615                           ; BSR set to: 0
 16616  01119E  D880               	call	PL38	;call to abstracted procedure
 16617  0111A0  86DF               	bsf	indf2,3,c
 16618  0111A2                     l529:
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 16622  0111A2  D879               	call	PL32	;call to abstracted procedure
 16623  0111A4  0E3C               	movlw	60
 16624  0111A6  18DE               	xorwf	postinc2,w,c
 16625  0111A8  10DE               	iorwf	postinc2,w,c
 16626  0111AA  E102               	bnz	l530
 16627                           
 16628                           ; BSR set to: 0
 16629  0111AC  D879               	call	PL38	;call to abstracted procedure
 16630  0111AE  84DF               	bsf	indf2,2,c
 16631  0111B0                     l530:
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 16635  0111B0  D872               	call	PL32	;call to abstracted procedure
 16636  0111B2  0E10               	movlw	16
 16637  0111B4  18DE               	xorwf	postinc2,w,c
 16638  0111B6  10DE               	iorwf	postinc2,w,c
 16639  0111B8  E102               	bnz	l531
 16640                           
 16641                           ; BSR set to: 0
 16642  0111BA  D872               	call	PL38	;call to abstracted procedure
 16643  0111BC  82DF               	bsf	indf2,1,c
 16644  0111BE                     l531:
 16645                           
 16646                           ; BSR set to: 0
 16647                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 16648  0111BE  D86B               	call	PL32	;call to abstracted procedure
 16649  0111C0  0E02               	movlw	2
 16650  0111C2  18DE               	xorwf	postinc2,w,c
 16651  0111C4  10DE               	iorwf	postinc2,w,c
 16652  0111C6  E102               	bnz	l532
 16653                           
 16654                           ; BSR set to: 0
 16655  0111C8  D86B               	call	PL38	;call to abstracted procedure
 16656  0111CA  80DF               	bsf	indf2,0,c
 16657  0111CC                     l532:
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 16661  0111CC  D864               	call	PL32	;call to abstracted procedure
 16662  0111CE  0E85               	movlw	133
 16663  0111D0  5CDE               	subwf	postinc2,w,c
 16664  0111D2  0E03               	movlw	3
 16665  0111D4  58DE               	subwfb	postinc2,w,c
 16666  0111D6  B0D8               	btfsc	status,0,c
 16667  0111D8  0012               	return	
 16668                           
 16669                           ; BSR set to: 0
 16670  0111DA  D85D               	call	PL32	;call to abstracted procedure
 16671  0111DC  EF0E  F094         	goto	PL328	;call to abstracted procedure
 16672  0111E0                     l7826:
 16673                           
 16674                           ; BSR set to: 0
 16675                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 16676  0111E0  D85A               	call	PL32	;call to abstracted procedure
 16677  0111E2  0E84               	movlw	132
 16678  0111E4  5CDE               	subwf	postinc2,w,c
 16679  0111E6  0E03               	movlw	3
 16680  0111E8  58DE               	subwfb	postinc2,w,c
 16681  0111EA  E303               	bnc	l7830
 16682                           
 16683                           ; BSR set to: 0
 16684  0111EC  D84D               	call	PL30	;call to abstracted procedure
 16685  0111EE  8EDF               	bsf	indf2,7,c
 16686  0111F0  D042               	goto	l7858
 16687  0111F2                     l7830:
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 16691  0111F2  D851               	call	PL32	;call to abstracted procedure
 16692  0111F4  0EBC               	movlw	188
 16693  0111F6  5CDE               	subwf	postinc2,w,c
 16694  0111F8  0E02               	movlw	2
 16695  0111FA  58DE               	subwfb	postinc2,w,c
 16696  0111FC  E303               	bnc	l7834
 16697                           
 16698                           ; BSR set to: 0
 16699  0111FE  D844               	call	PL30	;call to abstracted procedure
 16700  011200  8CDF               	bsf	indf2,6,c
 16701  011202  D039               	goto	l7858
 16702  011204                     l7834:
 16703                           
 16704                           ; BSR set to: 0
 16705                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 16706  011204  D848               	call	PL32	;call to abstracted procedure
 16707  011206  0EF4               	movlw	244
 16708  011208  5CDE               	subwf	postinc2,w,c
 16709  01120A  0E01               	movlw	1
 16710  01120C  58DE               	subwfb	postinc2,w,c
 16711  01120E  E303               	bnc	l7838
 16712                           
 16713                           ; BSR set to: 0
 16714  011210  D83B               	call	PL30	;call to abstracted procedure
 16715  011212  8ADF               	bsf	indf2,5,c
 16716  011214  D030               	goto	l7858
 16717  011216                     l7838:
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 16721  011216  D83F               	call	PL32	;call to abstracted procedure
 16722  011218  0E2C               	movlw	44
 16723  01121A  5CDE               	subwf	postinc2,w,c
 16724  01121C  0E01               	movlw	1
 16725  01121E  58DE               	subwfb	postinc2,w,c
 16726  011220  E303               	bnc	l7842
 16727                           
 16728                           ; BSR set to: 0
 16729  011222  D832               	call	PL30	;call to abstracted procedure
 16730  011224  88DF               	bsf	indf2,4,c
 16731  011226  D027               	goto	l7858
 16732  011228                     l7842:
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 16736  011228  D836               	call	PL32	;call to abstracted procedure
 16737  01122A  0E01               	movlw	1
 16738  01122C  50DB               	movf	plusw2,w,c
 16739  01122E  E103               	bnz	u7390
 16740  011230  0E96               	movlw	150
 16741  011232  5CDE               	subwf	postinc2,w,c
 16742  011234  E303               	bnc	l7846
 16743  011236                     u7390:
 16744                           
 16745                           ; BSR set to: 0
 16746  011236  D828               	call	PL30	;call to abstracted procedure
 16747  011238  86DF               	bsf	indf2,3,c
 16748  01123A  D01D               	goto	l7858
 16749  01123C                     l7846:
 16750                           
 16751                           ; BSR set to: 0
 16752                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 16753  01123C  D82C               	call	PL32	;call to abstracted procedure
 16754  01123E  0E01               	movlw	1
 16755  011240  50DB               	movf	plusw2,w,c
 16756  011242  E103               	bnz	u7400
 16757  011244  0E3C               	movlw	60
 16758  011246  5CDE               	subwf	postinc2,w,c
 16759  011248  E303               	bnc	l7850
 16760  01124A                     u7400:
 16761                           
 16762                           ; BSR set to: 0
 16763  01124A  D81E               	call	PL30	;call to abstracted procedure
 16764  01124C  84DF               	bsf	indf2,2,c
 16765  01124E  D013               	goto	l7858
 16766  011250                     l7850:
 16767                           
 16768                           ; BSR set to: 0
 16769                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 16770  011250  D822               	call	PL32	;call to abstracted procedure
 16771  011252  0E01               	movlw	1
 16772  011254  50DB               	movf	plusw2,w,c
 16773  011256  E103               	bnz	u7410
 16774  011258  0E10               	movlw	16
 16775  01125A  5CDE               	subwf	postinc2,w,c
 16776  01125C  E303               	bnc	l7854
 16777  01125E                     u7410:
 16778                           
 16779                           ; BSR set to: 0
 16780  01125E  D814               	call	PL30	;call to abstracted procedure
 16781  011260  82DF               	bsf	indf2,1,c
 16782  011262  D009               	goto	l7858
 16783  011264                     l7854:
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 16787  011264  D818               	call	PL32	;call to abstracted procedure
 16788  011266  0E01               	movlw	1
 16789  011268  50DB               	movf	plusw2,w,c
 16790  01126A  E103               	bnz	u7420
 16791  01126C  0E02               	movlw	2
 16792  01126E  5CDE               	subwf	postinc2,w,c
 16793  011270  E302               	bnc	l7858
 16794  011272                     u7420:
 16795                           
 16796                           ; BSR set to: 0
 16797  011272  D80A               	call	PL30	;call to abstracted procedure
 16798  011274  80DF               	bsf	indf2,0,c
 16799  011276                     l7858:
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;My_button.c: 23: bt->cnt_sw = 0;
 16803  011276  D80F               	call	PL32	;call to abstracted procedure
 16804  011278  6ADE               	clrf	postinc2,c
 16805  01127A  6ADD               	clrf	postdec2,c
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;My_button.c: 24: bt->flags &= 0x00FF;
 16809  01127C  D805               	call	PL30	;call to abstracted procedure
 16810  01127E  0EFF               	movlw	255
 16811  011280  16DE               	andwf	postinc2,f,c
 16812  011282  0E00               	movlw	0
 16813  011284  16DD               	andwf	postdec2,f,c
 16814                           
 16815                           ; BSR set to: 0
 16816  011286  0C00               	retlw	0	;funcret
 16817  011288                     __end_of_button_timer_interrupt:
 16818                           	opt stack 0
 16819  011288                     PL30:
 16820                           	opt stack 17
 16821  011288  EE20 F002          	lfsr	2,2
 16822  01128C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 16823  01128E  26D9               	addwf	fsr2l,f,c
 16824  011290  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16825  011292  22DA               	addwfc	fsr2h,f,c
 16826  011294  0012               	return	
 16827  011296                     __end_ofPL30:
 16828                           	opt stack 0
 16829  011296                     PL32:
 16830                           	opt stack 17
 16831  011296  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 16832  01129A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 16833  01129E  0012               	return	
 16834  0112A0                     __end_ofPL32:
 16835                           	opt stack 0
 16836  0112A0                     PL38:
 16837                           	opt stack 17
 16838  0112A0  EE20 F003          	lfsr	2,3
 16839  0112A4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 16840  0112A6  26D9               	addwf	fsr2l,f,c
 16841  0112A8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 16842  0112AA  22DA               	addwfc	fsr2h,f,c
 16843  0112AC  0012               	return	
 16844  0112AE                     __end_ofPL38:
 16845                           	opt stack 0
 16846                           tblptru	equ	0xFF8
 16847                           tblptrh	equ	0xFF7
 16848                           tblptrl	equ	0xFF6
 16849                           tablat	equ	0xFF5
 16850                           prodh	equ	0xFF4
 16851                           prodl	equ	0xFF3
 16852                           intcon	equ	0xFF2
 16853                           intcon2	equ	0xFF1
 16854                           postinc0	equ	0xFEE
 16855                           wreg	equ	0xFE8
 16856                           indf1	equ	0xFE7
 16857                           postinc1	equ	0xFE6
 16858                           postdec1	equ	0xFE5
 16859                           fsr1h	equ	0xFE2
 16860                           fsr1l	equ	0xFE1
 16861                           indf2	equ	0xFDF
 16862                           postinc2	equ	0xFDE
 16863                           postdec2	equ	0xFDD
 16864                           plusw2	equ	0xFDB
 16865                           fsr2h	equ	0xFDA
 16866                           fsr2l	equ	0xFD9
 16867                           status	equ	0xFD8
 16868                           
 16869 ;; *************** function ___lwdiv *****************
 16870 ;; Defined at:
 16871 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;  dividend        2   28[BANK0 ] unsigned int 
 16874 ;;  divisor         2   30[BANK0 ] unsigned int 
 16875 ;; Auto vars:     Size  Location     Type
 16876 ;;  quotient        2   33[BANK0 ] unsigned int 
 16877 ;;  counter         1   32[BANK0 ] unsigned char 
 16878 ;; Return value:  Size  Location     Type
 16879 ;;                  2   28[BANK0 ] unsigned int 
 16880 ;; Registers used:
 16881 ;;		wreg, status,2, status,0
 16882 ;; Tracked objects:
 16883 ;;		On entry : F/0
 16884 ;;		On exit  : F/0
 16885 ;;		Unchanged: 0/0
 16886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16890 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16891 ;;Total ram usage:        7 bytes
 16892 ;; Hardware stack levels used:    1
 16893 ;; Hardware stack levels required when called:   11
 16894 ;; This function calls:
 16895 ;;		Nothing
 16896 ;; This function is called by:
 16897 ;;		_ringbuf_put_num
 16898 ;;		_data_out
 16899 ;;		_display_LCD
 16900 ;;		_ctmu_set_ratio
 16901 ;;		_ctmu_sampling
 16902 ;; This function uses a non-reentrant model
 16903 ;;
 16904                           
 16905                           	psect	text74
 16906  013D40                     __ptext74:
 16907                           	opt stack 0
 16908  013D40                     ___lwdiv:
 16909                           	opt stack 16
 16910                           
 16911                           ; BSR set to: 0
 16912                           
 16913                           ; BSR set to: 0
 16914                           ;incstack = 0
 16915  013D40  6B81               	clrf	___lwdiv@quotient& (0+255),b
 16916  013D42  6B82               	clrf	(___lwdiv@quotient+1)& (0+255),b
 16917                           
 16918                           ; BSR set to: 0
 16919  013D44  517E               	movf	___lwdiv@divisor& (0+255),w,b
 16920  013D46  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16921  013D48  E01B               	bz	l2406
 16922                           
 16923                           ; BSR set to: 0
 16924  013D4A  0E01               	movlw	1
 16925  013D4C  6F80               	movwf	___lwdiv@counter& (0+255),b
 16926  013D4E  D004               	goto	l10314
 16927  013D50                     l10312:
 16928                           
 16929                           ; BSR set to: 0
 16930  013D50  90D8               	bcf	status,0,c
 16931  013D52  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 16932  013D54  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16933  013D56  2B80               	incf	___lwdiv@counter& (0+255),f,b
 16934  013D58                     l10314:
 16935                           
 16936                           ; BSR set to: 0
 16937  013D58  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16938  013D5A  D7FA               	goto	l10312
 16939  013D5C                     l10316:
 16940                           
 16941                           ; BSR set to: 0
 16942  013D5C  90D8               	bcf	status,0,c
 16943  013D5E  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 16944  013D60  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16945                           
 16946                           ; BSR set to: 0
 16947  013D62  517E               	movf	___lwdiv@divisor& (0+255),w,b
 16948  013D64  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 16949  013D66  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16950  013D68  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16951  013D6A  E305               	bnc	l10324
 16952                           
 16953                           ; BSR set to: 0
 16954  013D6C  517E               	movf	___lwdiv@divisor& (0+255),w,b
 16955  013D6E  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 16956  013D70  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16957  013D72  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16958                           
 16959                           ; BSR set to: 0
 16960  013D74  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 16961  013D76                     l10324:
 16962                           
 16963                           ; BSR set to: 0
 16964  013D76  90D8               	bcf	status,0,c
 16965  013D78  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16966  013D7A  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 16967                           
 16968                           ; BSR set to: 0
 16969  013D7C  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 16970  013D7E  D7EE               	goto	l10316
 16971  013D80                     l2406:
 16972                           
 16973                           ; BSR set to: 0
 16974  013D80  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 16975  013D84  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16976                           
 16977                           ; BSR set to: 0
 16978  013D88  0012               	return		;funcret
 16979  013D8A                     __end_of___lwdiv:
 16980                           	opt stack 0
 16981                           tblptru	equ	0xFF8
 16982                           tblptrh	equ	0xFF7
 16983                           tblptrl	equ	0xFF6
 16984                           tablat	equ	0xFF5
 16985                           prodh	equ	0xFF4
 16986                           prodl	equ	0xFF3
 16987                           intcon	equ	0xFF2
 16988                           intcon2	equ	0xFF1
 16989                           postinc0	equ	0xFEE
 16990                           wreg	equ	0xFE8
 16991                           indf1	equ	0xFE7
 16992                           postinc1	equ	0xFE6
 16993                           postdec1	equ	0xFE5
 16994                           fsr1h	equ	0xFE2
 16995                           fsr1l	equ	0xFE1
 16996                           indf2	equ	0xFDF
 16997                           postinc2	equ	0xFDE
 16998                           postdec2	equ	0xFDD
 16999                           plusw2	equ	0xFDB
 17000                           fsr2h	equ	0xFDA
 17001                           fsr2l	equ	0xFD9
 17002                           status	equ	0xFD8
 17003                           
 17004 ;; *************** function _CTMU_read *****************
 17005 ;; Defined at:
 17006 ;;		line 184 in file "../My_library/My_PIC.c"
 17007 ;; Parameters:    Size  Location     Type
 17008 ;;  ch              1    wreg     unsigned char 
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;  ch              1   16[BANK0 ] unsigned char 
 17011 ;;  i               1   21[BANK0 ] unsigned char 
 17012 ;;  sum             4   17[BANK0 ] unsigned long 
 17013 ;; Return value:  Size  Location     Type
 17014 ;;                  2   13[BANK0 ] unsigned int 
 17015 ;; Registers used:
 17016 ;;		wreg, status,2, status,0, cstack
 17017 ;; Tracked objects:
 17018 ;;		On entry : F/0
 17019 ;;		On exit  : F/0
 17020 ;;		Unchanged: 0/0
 17021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17023 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17026 ;;Total ram usage:        9 bytes
 17027 ;; Hardware stack levels used:    1
 17028 ;; Hardware stack levels required when called:   12
 17029 ;; This function calls:
 17030 ;;		___lldiv
 17031 ;; This function is called by:
 17032 ;;		_ctmu_set_ratio
 17033 ;;		_ctmu_sampling
 17034 ;; This function uses a non-reentrant model
 17035 ;;
 17036                           
 17037                           	psect	text75
 17038  012D7E                     __ptext75:
 17039                           	opt stack 0
 17040  012D7E                     _CTMU_read:
 17041                           	opt stack 15
 17042                           
 17043                           ; BSR set to: 0
 17044                           ;incstack = 0
 17045                           ;CTMU_read@ch stored from wreg
 17046  012D7E  6F70               	movwf	CTMU_read@ch& (0+255),b
 17047                           
 17048                           ;My_PIC.c: 185: uint32_t sum = 0;
 17049  012D80  0100               	movlb	0	; () banked
 17050  012D82  6B71               	clrf	CTMU_read@sum& (0+255),b
 17051  012D84  6B72               	clrf	(CTMU_read@sum+1)& (0+255),b
 17052  012D86  6B73               	clrf	(CTMU_read@sum+2)& (0+255),b
 17053  012D88  6B74               	clrf	(CTMU_read@sum+3)& (0+255),b
 17054                           
 17055                           ;My_PIC.c: 186: for (uint8_t i = 0; i < 10; i++) {
 17056  012D8A  6B75               	clrf	CTMU_read@i& (0+255),b
 17057  012D8C                     l10022:
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;My_PIC.c: 187: ADCON0bits.CHS = ch;
 17061  012D8C  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 17062  012D90  476F               	rlncf	??_CTMU_read& (0+255),f,b
 17063  012D92  476F               	rlncf	??_CTMU_read& (0+255),f,b
 17064  012D94  50C2               	movf	4034,w,c	;volatile
 17065  012D96  196F               	xorwf	??_CTMU_read& (0+255),w,b
 17066  012D98  0BC3               	andlw	-61
 17067  012D9A  196F               	xorwf	??_CTMU_read& (0+255),w,b
 17068  012D9C  6EC2               	movwf	4034,c	;volatile
 17069                           
 17070                           ; BSR set to: 0
 17071                           ;My_PIC.c: 188: CTMUCONHbits.CTMUEN = 1;
 17072  012D9E  8EB3               	bsf	4019,7,c	;volatile
 17073                           
 17074                           ; BSR set to: 0
 17075                           ;My_PIC.c: 189: CTMUCONLbits.EDG1STAT = 0;
 17076  012DA0  90B2               	bcf	4018,0,c	;volatile
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;My_PIC.c: 190: CTMUCONLbits.EDG2STAT = 0;
 17080  012DA2  92B2               	bcf	4018,1,c	;volatile
 17081                           
 17082                           ; BSR set to: 0
 17083                           ;My_PIC.c: 193: CTMUCONHbits.IDISSEN = 1;
 17084  012DA4  82B3               	bsf	4019,1,c	;volatile
 17085                           
 17086                           ; BSR set to: 0
 17087                           ;My_PIC.c: 194: _delay((unsigned long)((20)*(48000000/4000000.0)));
 17088  012DA6  0E50               	movlw	80
 17089  012DA8                     u12817:
 17090  012DA8  2EE8               	decfsz	wreg,f,c
 17091  012DAA  D7FE               	goto	u12817
 17092                           
 17093                           ;My_PIC.c: 195: CTMUCONHbits.IDISSEN = 0;
 17094  012DAC  92B3               	bcf	4019,1,c	;volatile
 17095                           
 17096                           ;My_PIC.c: 197: CTMUCONLbits.EDG1STAT = 1;
 17097  012DAE  80B2               	bsf	4018,0,c	;volatile
 17098                           
 17099                           ;My_PIC.c: 198: _delay((unsigned long)((5)*(48000000/4000000.0)));
 17100  012DB0  0E14               	movlw	20
 17101  012DB2                     u12827:
 17102  012DB2  2EE8               	decfsz	wreg,f,c
 17103  012DB4  D7FE               	goto	u12827
 17104                           
 17105                           ;My_PIC.c: 199: CTMUCONLbits.EDG1STAT = 0;
 17106  012DB6  90B2               	bcf	4018,0,c	;volatile
 17107                           
 17108                           ;My_PIC.c: 201: PIR1bits.ADIF = 0;
 17109  012DB8  9C9E               	bcf	3998,6,c	;volatile
 17110                           
 17111                           ;My_PIC.c: 202: ADCON0bits.GO = 1;
 17112  012DBA  82C2               	bsf	4034,1,c	;volatile
 17113  012DBC                     l731:
 17114  012DBC  AC9E               	btfss	3998,6,c	;volatile
 17115  012DBE  D7FE               	goto	l731
 17116                           
 17117                           ;My_PIC.c: 204: sum += ADRES;
 17118  012DC0  50C3               	movf	4035,w,c	;volatile
 17119  012DC2  0100               	movlb	0	; () banked
 17120  012DC4  2771               	addwf	CTMU_read@sum& (0+255),f,b
 17121  012DC6  50C4               	movf	4036,w,c	;volatile
 17122  012DC8  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 17123  012DCA  0E00               	movlw	0
 17124  012DCC  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 17125  012DCE  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 17126  012DD0  2B75               	incf	CTMU_read@i& (0+255),f,b
 17127                           
 17128                           ; BSR set to: 0
 17129  012DD2  0E09               	movlw	9
 17130  012DD4  6575               	cpfsgt	CTMU_read@i& (0+255),b
 17131  012DD6  D7DA               	goto	l10022
 17132                           
 17133                           ; BSR set to: 0
 17134                           ;My_PIC.c: 205: }
 17135                           ;My_PIC.c: 206: return sum / 10 / 4;
 17136  012DD8  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 17137  012DDC  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 17138  012DE0  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 17139  012DE4  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 17140  012DE8  0E0A               	movlw	10
 17141  012DEA  ECD2  F097         	call	PL208	;call to abstracted procedure
 17142  012DEE  ECF3  F09A         	call	___lldiv	;wreg free
 17143  012DF2  0E03               	movlw	3
 17144  012DF4  D005               	goto	u10350
 17145  012DF6                     u10355:
 17146  012DF6  90D8               	bcf	status,0,c
 17147  012DF8  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 17148  012DFA  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 17149  012DFC  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 17150  012DFE  3360               	rrcf	?___lldiv& (0+255),f,b
 17151  012E00                     u10350:
 17152  012E00  2EE8               	decfsz	wreg,f,c
 17153  012E02  D7F9               	goto	u10355
 17154  012E04  C060  F06D         	movff	?___lldiv,?_CTMU_read
 17155  012E08  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 17156                           
 17157                           ; BSR set to: 0
 17158  012E0C  0012               	return		;funcret
 17159  012E0E                     __end_of_CTMU_read:
 17160                           	opt stack 0
 17161                           tblptru	equ	0xFF8
 17162                           tblptrh	equ	0xFF7
 17163                           tblptrl	equ	0xFF6
 17164                           tablat	equ	0xFF5
 17165                           prodh	equ	0xFF4
 17166                           prodl	equ	0xFF3
 17167                           intcon	equ	0xFF2
 17168                           intcon2	equ	0xFF1
 17169                           postinc0	equ	0xFEE
 17170                           wreg	equ	0xFE8
 17171                           indf1	equ	0xFE7
 17172                           postinc1	equ	0xFE6
 17173                           postdec1	equ	0xFE5
 17174                           fsr1h	equ	0xFE2
 17175                           fsr1l	equ	0xFE1
 17176                           indf2	equ	0xFDF
 17177                           postinc2	equ	0xFDE
 17178                           postdec2	equ	0xFDD
 17179                           plusw2	equ	0xFDB
 17180                           fsr2h	equ	0xFDA
 17181                           fsr2l	equ	0xFD9
 17182                           status	equ	0xFD8
 17183                           
 17184 ;; *************** function ___lldiv *****************
 17185 ;; Defined at:
 17186 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;  dividend        4    0[BANK0 ] unsigned long 
 17189 ;;  divisor         4    4[BANK0 ] unsigned long 
 17190 ;; Auto vars:     Size  Location     Type
 17191 ;;  quotient        4    8[BANK0 ] unsigned long 
 17192 ;;  counter         1   12[BANK0 ] unsigned char 
 17193 ;; Return value:  Size  Location     Type
 17194 ;;                  4    0[BANK0 ] unsigned long 
 17195 ;; Registers used:
 17196 ;;		wreg, status,2, status,0
 17197 ;; Tracked objects:
 17198 ;;		On entry : F/0
 17199 ;;		On exit  : F/0
 17200 ;;		Unchanged: 0/0
 17201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17202 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17203 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17205 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17206 ;;Total ram usage:       13 bytes
 17207 ;; Hardware stack levels used:    1
 17208 ;; Hardware stack levels required when called:   11
 17209 ;; This function calls:
 17210 ;;		Nothing
 17211 ;; This function is called by:
 17212 ;;		_CTMU_read
 17213 ;;		_get_quot_rem
 17214 ;;		_integrate_current
 17215 ;;		_display_LCD
 17216 ;;		_sprintf
 17217 ;; This function uses a non-reentrant model
 17218 ;;
 17219                           
 17220                           	psect	text76
 17221  0135E6                     __ptext76:
 17222                           	opt stack 0
 17223  0135E6                     ___lldiv:
 17224                           	opt stack 13
 17225                           
 17226                           ; BSR set to: 0
 17227                           
 17228                           ; BSR set to: 0
 17229                           ;incstack = 0
 17230  0135E6  6B68               	clrf	___lldiv@quotient& (0+255),b
 17231  0135E8  6B69               	clrf	(___lldiv@quotient+1)& (0+255),b
 17232  0135EA  6B6A               	clrf	(___lldiv@quotient+2)& (0+255),b
 17233  0135EC  6B6B               	clrf	(___lldiv@quotient+3)& (0+255),b
 17234                           
 17235                           ; BSR set to: 0
 17236  0135EE  5164               	movf	___lldiv@divisor& (0+255),w,b
 17237  0135F0  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 17238  0135F2  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 17239  0135F4  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 17240  0135F6  E029               	bz	l2353
 17241                           
 17242                           ; BSR set to: 0
 17243  0135F8  0E01               	movlw	1
 17244  0135FA  6F6C               	movwf	___lldiv@counter& (0+255),b
 17245  0135FC  D006               	goto	l9612
 17246  0135FE                     l9610:
 17247                           
 17248                           ; BSR set to: 0
 17249  0135FE  90D8               	bcf	status,0,c
 17250  013600  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 17251  013602  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 17252  013604  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 17253  013606  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 17254  013608  2B6C               	incf	___lldiv@counter& (0+255),f,b
 17255  01360A                     l9612:
 17256                           
 17257                           ; BSR set to: 0
 17258  01360A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 17259  01360C  D7F8               	goto	l9610
 17260  01360E                     l9614:
 17261                           
 17262                           ; BSR set to: 0
 17263  01360E  90D8               	bcf	status,0,c
 17264  013610  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 17265  013612  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 17266  013614  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 17267  013616  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 17268                           
 17269                           ; BSR set to: 0
 17270  013618  5164               	movf	___lldiv@divisor& (0+255),w,b
 17271  01361A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 17272  01361C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17273  01361E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 17274  013620  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17275  013622  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 17276  013624  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17277  013626  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 17278  013628  E309               	bnc	l9622
 17279                           
 17280                           ; BSR set to: 0
 17281  01362A  5164               	movf	___lldiv@divisor& (0+255),w,b
 17282  01362C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 17283  01362E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17284  013630  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 17285  013632  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17286  013634  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 17287  013636  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17288  013638  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 17289                           
 17290                           ; BSR set to: 0
 17291  01363A  8168               	bsf	___lldiv@quotient& (0+255),0,b
 17292  01363C                     l9622:
 17293                           
 17294                           ; BSR set to: 0
 17295  01363C  90D8               	bcf	status,0,c
 17296  01363E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 17297  013640  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 17298  013642  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 17299  013644  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 17300                           
 17301                           ; BSR set to: 0
 17302  013646  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 17303  013648  D7E2               	goto	l9614
 17304  01364A                     l2353:
 17305                           
 17306                           ; BSR set to: 0
 17307  01364A  C068  F060         	movff	___lldiv@quotient,?___lldiv
 17308  01364E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 17309  013652  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 17310  013656  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 17311                           
 17312                           ; BSR set to: 0
 17313  01365A  0012               	return		;funcret
 17314  01365C                     __end_of___lldiv:
 17315                           	opt stack 0
 17316                           tblptru	equ	0xFF8
 17317                           tblptrh	equ	0xFF7
 17318                           tblptrl	equ	0xFF6
 17319                           tablat	equ	0xFF5
 17320                           prodh	equ	0xFF4
 17321                           prodl	equ	0xFF3
 17322                           intcon	equ	0xFF2
 17323                           intcon2	equ	0xFF1
 17324                           postinc0	equ	0xFEE
 17325                           wreg	equ	0xFE8
 17326                           indf1	equ	0xFE7
 17327                           postinc1	equ	0xFE6
 17328                           postdec1	equ	0xFE5
 17329                           fsr1h	equ	0xFE2
 17330                           fsr1l	equ	0xFE1
 17331                           indf2	equ	0xFDF
 17332                           postinc2	equ	0xFDE
 17333                           postdec2	equ	0xFDD
 17334                           plusw2	equ	0xFDB
 17335                           fsr2h	equ	0xFDA
 17336                           fsr2l	equ	0xFD9
 17337                           status	equ	0xFD8
 17338                           
 17339 ;; *************** function _USB_task *****************
 17340 ;; Defined at:
 17341 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 17342 ;; Parameters:    Size  Location     Type
 17343 ;;		None
 17344 ;; Auto vars:     Size  Location     Type
 17345 ;;  rx_len          2   17[BANK0 ] int 
 17346 ;;  data            1   19[BANK0 ] unsigned char 
 17347 ;; Return value:  Size  Location     Type
 17348 ;;		None               void
 17349 ;; Registers used:
 17350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17351 ;; Tracked objects:
 17352 ;;		On entry : E/1
 17353 ;;		On exit  : F/0
 17354 ;;		Unchanged: 0/0
 17355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17357 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17359 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17360 ;;Total ram usage:        3 bytes
 17361 ;; Hardware stack levels used:    1
 17362 ;; Hardware stack levels required when called:   14
 17363 ;; This function calls:
 17364 ;;		_get_string_usb
 17365 ;;		_put_string_usb
 17366 ;;		_ringbuf_num
 17367 ;;		_ringbuf_pop
 17368 ;;		_ringbuf_put
 17369 ;; This function is called by:
 17370 ;;		_main
 17371 ;; This function uses a non-reentrant model
 17372 ;;
 17373                           
 17374                           	psect	text77
 17375  01398A                     __ptext77:
 17376                           	opt stack 0
 17377  01398A                     _USB_task:
 17378                           	opt stack 16
 17379                           
 17380                           ;My_usb_cdc.c: 67: char data;
 17381                           ;My_usb_cdc.c: 68: int rx_len;
 17382                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 17383                           
 17384                           ; BSR set to: 0
 17385                           ;incstack = 0
 17386  01398A  0100               	movlb	0	; () banked
 17387  01398C  6B6D               	clrf	(get_string_usb@len+1)& (0+255),b
 17388  01398E  0E01               	movlw	1
 17389  013990  6F6C               	movwf	get_string_usb@len& (0+255),b
 17390  013992  0E73               	movlw	USB_task@data& (0+255)
 17391  013994  EC6C  F0A0         	call	_get_string_usb
 17392  013998  C06C  F071         	movff	?_get_string_usb,USB_task@rx_len
 17393  01399C  C06D  F072         	movff	?_get_string_usb+1,USB_task@rx_len+1
 17394                           
 17395                           ; BSR set to: 0
 17396                           ;My_usb_cdc.c: 70: if (rx_len) {
 17397  0139A0  5171               	movf	USB_task@rx_len& (0+255),w,b
 17398  0139A2  1172               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 17399  0139A4  E008               	bz	l1341
 17400                           
 17401                           ; BSR set to: 0
 17402                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 17403  0139A6  0EB5               	movlw	low _usb_rx
 17404  0139A8  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17405  0139AA  0E02               	movlw	high _usb_rx
 17406  0139AC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17407  0139AE  C073  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 17408  0139B2  ECC5  F093         	call	_ringbuf_put	;wreg free
 17409  0139B6                     l1341:
 17410                           
 17411                           ; BSR set to: 0
 17412                           ;My_usb_cdc.c: 72: }
 17413                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 17414  0139B6  0EBD               	movlw	low _usb_tx
 17415  0139B8  6F60               	movwf	ringbuf_num@rb& (0+255),b
 17416  0139BA  0E02               	movlw	high _usb_tx
 17417  0139BC  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 17418  0139BE  ECDE  F097         	call	_ringbuf_num	;wreg free
 17419  0139C2  5160               	movf	?_ringbuf_num& (0+255),w,b
 17420  0139C4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 17421  0139C6  B4D8               	btfsc	status,2,c
 17422  0139C8  0012               	return	
 17423                           
 17424                           ; BSR set to: 0
 17425                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 17426  0139CA  0EBD               	movlw	low _usb_tx
 17427  0139CC  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 17428  0139CE  0E02               	movlw	high _usb_tx
 17429  0139D0  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 17430  0139D2  EC4F  F097         	call	_ringbuf_pop	;wreg free
 17431  0139D6  6F73               	movwf	USB_task@data& (0+255),b
 17432                           
 17433                           ; BSR set to: 0
 17434                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 17435  0139D8  6B6C               	clrf	(put_string_usb@len+1)& (0+255),b
 17436  0139DA  0E01               	movlw	1
 17437  0139DC  6F6B               	movwf	put_string_usb@len& (0+255),b
 17438  0139DE  0E73               	movlw	USB_task@data& (0+255)
 17439  0139E0  EFC8  F0A1         	goto	_put_string_usb
 17440  0139E4                     __end_of_USB_task:
 17441                           	opt stack 0
 17442                           tblptru	equ	0xFF8
 17443                           tblptrh	equ	0xFF7
 17444                           tblptrl	equ	0xFF6
 17445                           tablat	equ	0xFF5
 17446                           prodh	equ	0xFF4
 17447                           prodl	equ	0xFF3
 17448                           intcon	equ	0xFF2
 17449                           intcon2	equ	0xFF1
 17450                           postinc0	equ	0xFEE
 17451                           wreg	equ	0xFE8
 17452                           indf1	equ	0xFE7
 17453                           postinc1	equ	0xFE6
 17454                           postdec1	equ	0xFE5
 17455                           fsr1h	equ	0xFE2
 17456                           fsr1l	equ	0xFE1
 17457                           indf2	equ	0xFDF
 17458                           postinc2	equ	0xFDE
 17459                           postdec2	equ	0xFDD
 17460                           plusw2	equ	0xFDB
 17461                           fsr2h	equ	0xFDA
 17462                           fsr2l	equ	0xFD9
 17463                           status	equ	0xFD8
 17464                           
 17465 ;; *************** function _ringbuf_put *****************
 17466 ;; Defined at:
 17467 ;;		line 20 in file "../My_library/My_ringbuf.c"
 17468 ;; Parameters:    Size  Location     Type
 17469 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 17470 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 17471 ;;		 -> lcd_tx(8), 
 17472 ;;  asciicode       1   10[BANK0 ] unsigned char 
 17473 ;; Auto vars:     Size  Location     Type
 17474 ;;		None
 17475 ;; Return value:  Size  Location     Type
 17476 ;;		None               void
 17477 ;; Registers used:
 17478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17479 ;; Tracked objects:
 17480 ;;		On entry : F/0
 17481 ;;		On exit  : F/0
 17482 ;;		Unchanged: 0/0
 17483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17484 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17486 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17487 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17488 ;;Total ram usage:        7 bytes
 17489 ;; Hardware stack levels used:    1
 17490 ;; Hardware stack levels required when called:   12
 17491 ;; This function calls:
 17492 ;;		_ringbuf_num
 17493 ;; This function is called by:
 17494 ;;		_ringbuf_put_num
 17495 ;;		_ringbuf_put_str
 17496 ;;		_ST7032_command
 17497 ;;		_ST7032_put
 17498 ;;		_ST7032_init
 17499 ;;		_terminal_task
 17500 ;;		_USB_task
 17501 ;; This function uses a non-reentrant model
 17502 ;;
 17503                           
 17504                           	psect	text78
 17505  01278A                     __ptext78:
 17506                           	opt stack 0
 17507  01278A                     _ringbuf_put:
 17508                           	opt stack 13
 17509                           
 17510                           ; BSR set to: 0
 17511                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 17512                           
 17513                           ; BSR set to: 0
 17514                           ;incstack = 0
 17515  01278A  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 17516  01278E  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 17517  012792  ECDE  F097         	call	_ringbuf_num	;wreg free
 17518  012796  EE20 F002          	lfsr	2,2
 17519  01279A  D83B               	call	PL176	;call to abstracted procedure
 17520  01279C  50DE               	movf	postinc2,w,c
 17521  01279E  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 17522  0127A0  50DE               	movf	postinc2,w,c
 17523  0127A2  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 17524  0127A4  B0D8               	btfsc	status,0,c
 17525  0127A6  0012               	return	
 17526                           
 17527                           ; BSR set to: 0
 17528                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 17529  0127A8  D82D               	call	PL150	;call to abstracted procedure
 17530  0127AA  CFDE F06B          	movff	postinc2,??_ringbuf_put
 17531  0127AE  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 17532  0127B2  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 17533  0127B6  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 17534  0127BA  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 17535  0127BE  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 17536  0127C2  516B               	movf	??_ringbuf_put& (0+255),w,b
 17537  0127C4  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 17538  0127C6  6ED9               	movwf	fsr2l,c
 17539  0127C8  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 17540  0127CA  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 17541  0127CC  6EDA               	movwf	fsr2h,c
 17542  0127CE  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 17543                           
 17544                           ; BSR set to: 0
 17545                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 17546  0127D2  EE20 F002          	lfsr	2,2
 17547  0127D6  D81D               	call	PL176	;call to abstracted procedure
 17548  0127D8  EE10 F004          	lfsr	1,4
 17549  0127DC  5168               	movf	ringbuf_put@rb& (0+255),w,b
 17550  0127DE  26E1               	addwf	fsr1l,f,c
 17551  0127E0  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17552  0127E2  22E2               	addwfc	fsr1h,f,c
 17553  0127E4  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 17554  0127E8  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 17555  0127EC  2B6D               	incf	(??_ringbuf_put+2)& (0+255),f,b
 17556  0127EE  0E00               	movlw	0
 17557  0127F0  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 17558  0127F2  50DE               	movf	postinc2,w,c
 17559  0127F4  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 17560  0127F6  50DE               	movf	postinc2,w,c
 17561  0127F8  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 17562  0127FA  E202               	bc	l9634
 17563                           
 17564                           ; BSR set to: 0
 17565  0127FC  D803               	call	PL150	;call to abstracted procedure
 17566  0127FE  D00E               	goto	PL328	;call to abstracted procedure
 17567  012800                     l9634:
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;My_ringbuf.c: 24: else rb->head = 0;
 17571  012800  D801               	call	PL150	;call to abstracted procedure
 17572                           
 17573                           ; BSR set to: 0
 17574  012802  D010               	goto	PL362	;call to abstracted procedure
 17575  012804                     __end_of_ringbuf_put:
 17576                           	opt stack 0
 17577  012804                     PL150:
 17578                           	opt stack 13
 17579  012804  EE20 F004          	lfsr	2,4
 17580  012808  5168               	movf	ringbuf_put@rb& (0+255),w,b
 17581  01280A  26D9               	addwf	fsr2l,f,c
 17582  01280C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17583  01280E  22DA               	addwfc	fsr2h,f,c
 17584  012810  0012               	return	
 17585  012812                     __end_ofPL150:
 17586                           	opt stack 0
 17587  012812                     PL176:
 17588                           	opt stack 13
 17589  012812  5168               	movf	ringbuf_put@rb& (0+255),w,b
 17590  012814  26D9               	addwf	fsr2l,f,c
 17591  012816  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 17592  012818  22DA               	addwfc	fsr2h,f,c
 17593  01281A  0012               	return	
 17594  01281C                     __end_ofPL176:
 17595                           	opt stack 0
 17596  01281C                     PL328:
 17597                           	opt stack 17
 17598  01281C  2ADE               	incf	postinc2,f,c
 17599  01281E  0E00               	movlw	0
 17600  012820  22DD               	addwfc	postdec2,f,c
 17601  012822  0C00               	retlw	0
 17602  012824                     __end_ofPL328:
 17603                           	opt stack 0
 17604  012824                     PL362:
 17605                           	opt stack 18
 17606  012824  6ADE               	clrf	postinc2,c
 17607  012826  6ADD               	clrf	postdec2,c
 17608  012828  0C00               	retlw	0	;funcret
 17609  01282A                     __end_ofPL362:
 17610                           	opt stack 0
 17611                           tblptru	equ	0xFF8
 17612                           tblptrh	equ	0xFF7
 17613                           tblptrl	equ	0xFF6
 17614                           tablat	equ	0xFF5
 17615                           prodh	equ	0xFF4
 17616                           prodl	equ	0xFF3
 17617                           intcon	equ	0xFF2
 17618                           intcon2	equ	0xFF1
 17619                           postinc0	equ	0xFEE
 17620                           wreg	equ	0xFE8
 17621                           indf1	equ	0xFE7
 17622                           postinc1	equ	0xFE6
 17623                           postdec1	equ	0xFE5
 17624                           fsr1h	equ	0xFE2
 17625                           fsr1l	equ	0xFE1
 17626                           indf2	equ	0xFDF
 17627                           postinc2	equ	0xFDE
 17628                           postdec2	equ	0xFDD
 17629                           plusw2	equ	0xFDB
 17630                           fsr2h	equ	0xFDA
 17631                           fsr2l	equ	0xFD9
 17632                           status	equ	0xFD8
 17633                           
 17634 ;; *************** function _put_string_usb *****************
 17635 ;; Defined at:
 17636 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 17637 ;; Parameters:    Size  Location     Type
 17638 ;;  s               1    wreg     PTR unsigned char 
 17639 ;;		 -> USB_task@data(1), 
 17640 ;;  len             2   11[BANK0 ] int 
 17641 ;; Auto vars:     Size  Location     Type
 17642 ;;  s               1   13[BANK0 ] PTR unsigned char 
 17643 ;;		 -> USB_task@data(1), 
 17644 ;; Return value:  Size  Location     Type
 17645 ;;                  2   11[BANK0 ] int 
 17646 ;; Registers used:
 17647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17648 ;; Tracked objects:
 17649 ;;		On entry : F/0
 17650 ;;		On exit  : F/0
 17651 ;;		Unchanged: 0/0
 17652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17656 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17657 ;;Total ram usage:        3 bytes
 17658 ;; Hardware stack levels used:    1
 17659 ;; Hardware stack levels required when called:   13
 17660 ;; This function calls:
 17661 ;;		_CDCTxService
 17662 ;;		_is_usb_available
 17663 ;;		_putUSBUSART
 17664 ;; This function is called by:
 17665 ;;		_USB_task
 17666 ;; This function uses a non-reentrant model
 17667 ;;
 17668                           
 17669                           	psect	text79
 17670  014390                     __ptext79:
 17671                           	opt stack 0
 17672  014390                     _put_string_usb:
 17673                           	opt stack 16
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;incstack = 0
 17677                           ;put_string_usb@s stored from wreg
 17678  014390  6F6D               	movwf	put_string_usb@s& (0+255),b
 17679                           
 17680                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 17681  014392  ECAF  F0A2         	call	_is_usb_available	;wreg free
 17682  014396  0900               	iorlw	0
 17683  014398  E103               	bnz	l11206
 17684  01439A  0012               	return	
 17685  01439C                     l11204:
 17686                           
 17687                           ; BSR set to: 0
 17688  01439C  EC01  F08F         	call	_CDCTxService	;wreg free
 17689  0143A0                     l11206:
 17690                           
 17691                           ; BSR set to: 0
 17692  0143A0  501F               	movf	_cdc_trf_state,w,c
 17693  0143A2  E1FC               	bnz	l11204
 17694                           
 17695                           ; BSR set to: 0
 17696                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 17697  0143A4  C06B  F060         	movff	put_string_usb@len,putUSBUSART@length
 17698  0143A8  516D               	movf	put_string_usb@s& (0+255),w,b
 17699  0143AA  EC5A  F0A2         	call	_putUSBUSART
 17700                           
 17701                           ;My_usb_cdc.c: 28: CDCTxService();
 17702  0143AE  EF01  F08F         	goto	_CDCTxService	;wreg free
 17703  0143B2                     __end_of_put_string_usb:
 17704                           	opt stack 0
 17705                           tblptru	equ	0xFF8
 17706                           tblptrh	equ	0xFF7
 17707                           tblptrl	equ	0xFF6
 17708                           tablat	equ	0xFF5
 17709                           prodh	equ	0xFF4
 17710                           prodl	equ	0xFF3
 17711                           intcon	equ	0xFF2
 17712                           intcon2	equ	0xFF1
 17713                           postinc0	equ	0xFEE
 17714                           wreg	equ	0xFE8
 17715                           indf1	equ	0xFE7
 17716                           postinc1	equ	0xFE6
 17717                           postdec1	equ	0xFE5
 17718                           fsr1h	equ	0xFE2
 17719                           fsr1l	equ	0xFE1
 17720                           indf2	equ	0xFDF
 17721                           postinc2	equ	0xFDE
 17722                           postdec2	equ	0xFDD
 17723                           plusw2	equ	0xFDB
 17724                           fsr2h	equ	0xFDA
 17725                           fsr2l	equ	0xFD9
 17726                           status	equ	0xFD8
 17727                           
 17728 ;; *************** function _putUSBUSART *****************
 17729 ;; Defined at:
 17730 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 17731 ;; Parameters:    Size  Location     Type
 17732 ;;  data            1    wreg     PTR unsigned char 
 17733 ;;		 -> USB_task@data(1), 
 17734 ;;  length          1    0[BANK0 ] unsigned char 
 17735 ;; Auto vars:     Size  Location     Type
 17736 ;;  data            1    1[BANK0 ] PTR unsigned char 
 17737 ;;		 -> USB_task@data(1), 
 17738 ;; Return value:  Size  Location     Type
 17739 ;;		None               void
 17740 ;; Registers used:
 17741 ;;		wreg, status,2, status,0
 17742 ;; Tracked objects:
 17743 ;;		On entry : F/0
 17744 ;;		On exit  : 0/0
 17745 ;;		Unchanged: 0/0
 17746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17747 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17750 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17751 ;;Total ram usage:        2 bytes
 17752 ;; Hardware stack levels used:    1
 17753 ;; Hardware stack levels required when called:   11
 17754 ;; This function calls:
 17755 ;;		Nothing
 17756 ;; This function is called by:
 17757 ;;		_put_string_usb
 17758 ;; This function uses a non-reentrant model
 17759 ;;
 17760                           
 17761                           	psect	text80
 17762  0144B4                     __ptext80:
 17763                           	opt stack 0
 17764  0144B4                     _putUSBUSART:
 17765                           	opt stack 17
 17766                           
 17767                           ; BSR set to: 0
 17768                           ;incstack = 0
 17769                           ;putUSBUSART@data stored from wreg
 17770  0144B4  6F61               	movwf	putUSBUSART@data& (0+255),b
 17771                           
 17772                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 17773  0144B6  98A0               	bcf	4000,4,c	;volatile
 17774                           
 17775                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 17776  0144B8  501F               	movf	_cdc_trf_state,w,c
 17777  0144BA  E108               	bnz	l10454
 17778                           
 17779                           ;usb_device_cdc.c: 640: {
 17780                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17781  0144BC  C061  F112         	movff	putUSBUSART@data,_pCDCSrc
 17782  0144C0  C060  F0EB         	movff	putUSBUSART@length,_cdc_tx_len
 17783  0144C4  0E01               	movlw	1
 17784  0144C6  0101               	movlb	1	; () banked
 17785  0144C8  6F2B               	movwf	_cdc_mem_type& (0+255),b
 17786                           
 17787                           ; BSR set to: 1
 17788  0144CA  6E1F               	movwf	_cdc_trf_state,c
 17789  0144CC                     l10454:
 17790                           
 17791                           ;usb_device_cdc.c: 642: }
 17792                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 17793  0144CC  88A0               	bsf	4000,4,c	;volatile
 17794  0144CE  0012               	return		;funcret
 17795  0144D0                     __end_of_putUSBUSART:
 17796                           	opt stack 0
 17797                           tblptru	equ	0xFF8
 17798                           tblptrh	equ	0xFF7
 17799                           tblptrl	equ	0xFF6
 17800                           tablat	equ	0xFF5
 17801                           prodh	equ	0xFF4
 17802                           prodl	equ	0xFF3
 17803                           intcon	equ	0xFF2
 17804                           intcon2	equ	0xFF1
 17805                           postinc0	equ	0xFEE
 17806                           wreg	equ	0xFE8
 17807                           indf1	equ	0xFE7
 17808                           postinc1	equ	0xFE6
 17809                           postdec1	equ	0xFE5
 17810                           fsr1h	equ	0xFE2
 17811                           fsr1l	equ	0xFE1
 17812                           indf2	equ	0xFDF
 17813                           postinc2	equ	0xFDE
 17814                           postdec2	equ	0xFDD
 17815                           plusw2	equ	0xFDB
 17816                           fsr2h	equ	0xFDA
 17817                           fsr2l	equ	0xFD9
 17818                           status	equ	0xFD8
 17819                           
 17820 ;; *************** function _get_string_usb *****************
 17821 ;; Defined at:
 17822 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 17823 ;; Parameters:    Size  Location     Type
 17824 ;;  s               1    wreg     PTR unsigned char 
 17825 ;;		 -> USB_task@data(1), 
 17826 ;;  len             2   12[BANK0 ] int 
 17827 ;; Auto vars:     Size  Location     Type
 17828 ;;  s               1   16[BANK0 ] PTR unsigned char 
 17829 ;;		 -> USB_task@data(1), 
 17830 ;;  rx_len          2   14[BANK0 ] int 
 17831 ;; Return value:  Size  Location     Type
 17832 ;;                  2   12[BANK0 ] int 
 17833 ;; Registers used:
 17834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17835 ;; Tracked objects:
 17836 ;;		On entry : F/0
 17837 ;;		On exit  : F/0
 17838 ;;		Unchanged: 0/0
 17839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17841 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17843 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17844 ;;Total ram usage:        5 bytes
 17845 ;; Hardware stack levels used:    1
 17846 ;; Hardware stack levels required when called:   13
 17847 ;; This function calls:
 17848 ;;		_CDCTxService
 17849 ;;		_getsUSBUSART
 17850 ;;		_is_usb_available
 17851 ;; This function is called by:
 17852 ;;		_USB_task
 17853 ;; This function uses a non-reentrant model
 17854 ;;
 17855                           
 17856                           	psect	text81
 17857  0140D8                     __ptext81:
 17858                           	opt stack 0
 17859  0140D8                     _get_string_usb:
 17860                           	opt stack 16
 17861                           
 17862                           ;incstack = 0
 17863                           ;get_string_usb@s stored from wreg
 17864  0140D8  6F70               	movwf	get_string_usb@s& (0+255),b
 17865                           
 17866                           ;My_usb_cdc.c: 33: int rx_len;
 17867                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 17868  0140DA  ECAF  F0A2         	call	_is_usb_available	;wreg free
 17869  0140DE  0900               	iorlw	0
 17870  0140E0  E105               	bnz	l11220
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;My_usb_cdc.c: 36: return 0;
 17874  0140E2  6B6C               	clrf	?_get_string_usb& (0+255),b
 17875  0140E4  6B6D               	clrf	(?_get_string_usb+1)& (0+255),b
 17876  0140E6  0012               	return	
 17877  0140E8                     l11218:
 17878                           
 17879                           ; BSR set to: 0
 17880  0140E8  EC01  F08F         	call	_CDCTxService	;wreg free
 17881  0140EC                     l11220:
 17882                           
 17883                           ; BSR set to: 0
 17884  0140EC  501F               	movf	_cdc_trf_state,w,c
 17885  0140EE  E1FC               	bnz	l11218
 17886                           
 17887                           ; BSR set to: 0
 17888                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 17889  0140F0  C06C  F067         	movff	get_string_usb@len,getsUSBUSART@len
 17890  0140F4  5170               	movf	get_string_usb@s& (0+255),w,b
 17891  0140F6  EC07  F097         	call	_getsUSBUSART
 17892  0140FA  6F6E               	movwf	get_string_usb@rx_len& (0+255),b
 17893  0140FC  6B6F               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 17894                           
 17895                           ;My_usb_cdc.c: 40: CDCTxService();
 17896  0140FE  EC01  F08F         	call	_CDCTxService	;wreg free
 17897                           
 17898                           ; BSR set to: 0
 17899                           ;My_usb_cdc.c: 41: return rx_len;
 17900  014102  C06E  F06C         	movff	get_string_usb@rx_len,?_get_string_usb
 17901  014106  C06F  F06D         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 17902                           
 17903                           ; BSR set to: 0
 17904  01410A  0012               	return		;funcret
 17905  01410C                     __end_of_get_string_usb:
 17906                           	opt stack 0
 17907                           tblptru	equ	0xFF8
 17908                           tblptrh	equ	0xFF7
 17909                           tblptrl	equ	0xFF6
 17910                           tablat	equ	0xFF5
 17911                           prodh	equ	0xFF4
 17912                           prodl	equ	0xFF3
 17913                           intcon	equ	0xFF2
 17914                           intcon2	equ	0xFF1
 17915                           postinc0	equ	0xFEE
 17916                           wreg	equ	0xFE8
 17917                           indf1	equ	0xFE7
 17918                           postinc1	equ	0xFE6
 17919                           postdec1	equ	0xFE5
 17920                           fsr1h	equ	0xFE2
 17921                           fsr1l	equ	0xFE1
 17922                           indf2	equ	0xFDF
 17923                           postinc2	equ	0xFDE
 17924                           postdec2	equ	0xFDD
 17925                           plusw2	equ	0xFDB
 17926                           fsr2h	equ	0xFDA
 17927                           fsr2l	equ	0xFD9
 17928                           status	equ	0xFD8
 17929                           
 17930 ;; *************** function _is_usb_available *****************
 17931 ;; Defined at:
 17932 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 17933 ;; Parameters:    Size  Location     Type
 17934 ;;		None
 17935 ;; Auto vars:     Size  Location     Type
 17936 ;;		None
 17937 ;; Return value:  Size  Location     Type
 17938 ;;                  1    wreg      unsigned char 
 17939 ;; Registers used:
 17940 ;;		wreg, status,2, status,0
 17941 ;; Tracked objects:
 17942 ;;		On entry : 0/0
 17943 ;;		On exit  : F/0
 17944 ;;		Unchanged: 0/0
 17945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17949 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17950 ;;Total ram usage:        1 bytes
 17951 ;; Hardware stack levels used:    1
 17952 ;; Hardware stack levels required when called:   11
 17953 ;; This function calls:
 17954 ;;		Nothing
 17955 ;; This function is called by:
 17956 ;;		_put_string_usb
 17957 ;;		_get_string_usb
 17958 ;; This function uses a non-reentrant model
 17959 ;;
 17960                           
 17961                           	psect	text82
 17962  01455E                     __ptext82:
 17963                           	opt stack 0
 17964  01455E                     _is_usb_available:
 17965                           	opt stack 17
 17966                           
 17967                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;incstack = 0
 17971  01455E  0100               	movlb	0	; () banked
 17972  014560  6B60               	clrf	_is_usb_available$5165& (0+255),b
 17973                           
 17974                           ; BSR set to: 0
 17975  014562  0E1F               	movlw	31
 17976  014564  641C               	cpfsgt	_USBDeviceState,c	;volatile
 17977  014566  D004               	goto	l1309
 17978                           
 17979                           ; BSR set to: 0
 17980  014568  B265               	btfsc	3941,1,c	;volatile
 17981  01456A  D002               	goto	l1309
 17982                           
 17983                           ; BSR set to: 0
 17984  01456C  0E01               	movlw	1
 17985  01456E  6F60               	movwf	_is_usb_available$5165& (0+255),b
 17986  014570                     l1309:
 17987                           
 17988                           ; BSR set to: 0
 17989  014570  5160               	movf	_is_usb_available$5165& (0+255),w,b
 17990                           
 17991                           ; BSR set to: 0
 17992  014572  0012               	return		;funcret
 17993  014574                     __end_of_is_usb_available:
 17994                           	opt stack 0
 17995                           tblptru	equ	0xFF8
 17996                           tblptrh	equ	0xFF7
 17997                           tblptrl	equ	0xFF6
 17998                           tablat	equ	0xFF5
 17999                           prodh	equ	0xFF4
 18000                           prodl	equ	0xFF3
 18001                           intcon	equ	0xFF2
 18002                           intcon2	equ	0xFF1
 18003                           postinc0	equ	0xFEE
 18004                           wreg	equ	0xFE8
 18005                           indf1	equ	0xFE7
 18006                           postinc1	equ	0xFE6
 18007                           postdec1	equ	0xFE5
 18008                           fsr1h	equ	0xFE2
 18009                           fsr1l	equ	0xFE1
 18010                           indf2	equ	0xFDF
 18011                           postinc2	equ	0xFDE
 18012                           postdec2	equ	0xFDD
 18013                           plusw2	equ	0xFDB
 18014                           fsr2h	equ	0xFDA
 18015                           fsr2l	equ	0xFD9
 18016                           status	equ	0xFD8
 18017                           
 18018 ;; *************** function _getsUSBUSART *****************
 18019 ;; Defined at:
 18020 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 18021 ;; Parameters:    Size  Location     Type
 18022 ;;  buffer          1    wreg     PTR unsigned char 
 18023 ;;		 -> USB_task@data(1), 
 18024 ;;  len             1    7[BANK0 ] unsigned char 
 18025 ;; Auto vars:     Size  Location     Type
 18026 ;;  buffer          1    9[BANK0 ] PTR unsigned char 
 18027 ;;		 -> USB_task@data(1), 
 18028 ;; Return value:  Size  Location     Type
 18029 ;;                  1    wreg      unsigned char 
 18030 ;; Registers used:
 18031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18032 ;; Tracked objects:
 18033 ;;		On entry : F/0
 18034 ;;		On exit  : F/0
 18035 ;;		Unchanged: 0/0
 18036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18037 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18038 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18040 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18041 ;;Total ram usage:        5 bytes
 18042 ;; Hardware stack levels used:    1
 18043 ;; Hardware stack levels required when called:   12
 18044 ;; This function calls:
 18045 ;;		_USBTransferOnePacket
 18046 ;; This function is called by:
 18047 ;;		_get_string_usb
 18048 ;; This function uses a non-reentrant model
 18049 ;;
 18050                           
 18051                           	psect	text83
 18052  012E0E                     __ptext83:
 18053                           	opt stack 0
 18054  012E0E                     _getsUSBUSART:
 18055                           	opt stack 16
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;incstack = 0
 18059                           ;getsUSBUSART@buffer stored from wreg
 18060  012E0E  6F69               	movwf	getsUSBUSART@buffer& (0+255),b
 18061                           
 18062                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 18063  012E10  6A1E               	clrf	_cdc_rx_len,c
 18064                           
 18065                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 18066  012E12  0101               	movlb	1	; () banked
 18067  012E14  5119               	movf	_CDCDataOutHandle& (0+255),w,b
 18068  012E16  111A               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18069  012E18  E008               	bz	l470
 18070                           
 18071                           ; BSR set to: 1
 18072  012E1A  C119  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18073  012E1E  C11A  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18074  012E22  EC76  F08F         	call	PL330	;call to abstracted procedure
 18075  012E26  6F6A               	movwf	_getsUSBUSART$1957& (0+255),b
 18076  012E28  D002               	goto	L6
 18077  012E2A                     l470:
 18078                           
 18079                           ; BSR set to: 1
 18080  012E2A  0100               	movlb	0	; () banked
 18081  012E2C  6B6A               	clrf	_getsUSBUSART$1957& (0+255),b
 18082  012E2E                     L6:
 18083  012E2E  6B6B               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 18084                           
 18085                           ; BSR set to: 0
 18086  012E30  516A               	movf	_getsUSBUSART$1957& (0+255),w,b
 18087  012E32  116B               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 18088  012E34  E12A               	bnz	l10438
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;usb_device_cdc.c: 547: {
 18092                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18093  012E36  D82B               	call	PL220	;call to abstracted procedure
 18094  012E38  0100               	movlb	0	; () banked
 18095  012E3A  5167               	movf	getsUSBUSART@len& (0+255),w,b
 18096  012E3C  5CDE               	subwf	postinc2,w,c
 18097  012E3E  E204               	bc	l10428
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18101  012E40  D826               	call	PL220	;call to abstracted procedure
 18102  012E42  50DF               	movf	indf2,w,c
 18103  012E44  0100               	movlb	0	; () banked
 18104  012E46  6F67               	movwf	getsUSBUSART@len& (0+255),b
 18105  012E48                     l10428:
 18106                           
 18107                           ; BSR set to: 0
 18108                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18109  012E48  6A1E               	clrf	_cdc_rx_len,c
 18110  012E4A  D00D               	goto	l10434
 18111  012E4C                     l10430:
 18112                           
 18113                           ; BSR set to: 0
 18114                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18115  012E4C  0E64               	movlw	low _cdc_data_rx
 18116  012E4E  241E               	addwf	_cdc_rx_len,w,c
 18117  012E50  6ED9               	movwf	fsr2l,c
 18118  012E52  6ADA               	clrf	fsr2h,c
 18119  012E54  0E03               	movlw	high _cdc_data_rx
 18120  012E56  22DA               	addwfc	fsr2h,f,c
 18121  012E58  5169               	movf	getsUSBUSART@buffer& (0+255),w,b
 18122  012E5A  241E               	addwf	_cdc_rx_len,w,c
 18123  012E5C  6EE1               	movwf	fsr1l,c
 18124  012E5E  6AE2               	clrf	fsr1h,c
 18125  012E60  CFDF FFE7          	movff	indf2,indf1
 18126                           
 18127                           ; BSR set to: 0
 18128  012E64  2A1E               	incf	_cdc_rx_len,f,c
 18129  012E66                     l10434:
 18130                           
 18131                           ; BSR set to: 0
 18132  012E66  5167               	movf	getsUSBUSART@len& (0+255),w,b
 18133  012E68  5C1E               	subwf	_cdc_rx_len,w,c
 18134  012E6A  E3F0               	bnc	l10430
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18138  012E6C  0E00               	movlw	0
 18139  012E6E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 18140  012E70  0E64               	movlw	low _cdc_data_rx
 18141  012E72  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 18142  012E74  0E03               	movlw	high _cdc_data_rx
 18143  012E76  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18144  012E78  0E40               	movlw	64
 18145  012E7A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 18146  012E7C  0E02               	movlw	2
 18147  012E7E  ECFE  F094         	call	_USBTransferOnePacket
 18148  012E82  C060  F119         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18149  012E86  C061  F11A         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18150  012E8A                     l10438:
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;usb_device_cdc.c: 567: }
 18154                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 18155  012E8A  501E               	movf	_cdc_rx_len,w,c
 18156                           
 18157                           ; BSR set to: 0
 18158  012E8C  0012               	return		;funcret
 18159  012E8E                     __end_of_getsUSBUSART:
 18160                           	opt stack 0
 18161  012E8E                     PL220:
 18162                           	opt stack 16
 18163  012E8E  0101               	movlb	1	; () banked
 18164  012E90  EE20 F001          	lfsr	2,1
 18165  012E94  5119               	movf	_CDCDataOutHandle& (0+255),w,b
 18166  012E96  26D9               	addwf	fsr2l,f,c
 18167  012E98  511A               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18168  012E9A  22DA               	addwfc	fsr2h,f,c
 18169  012E9C  0012               	return	
 18170  012E9E                     __end_ofPL220:
 18171                           	opt stack 0
 18172                           tblptru	equ	0xFF8
 18173                           tblptrh	equ	0xFF7
 18174                           tblptrl	equ	0xFF6
 18175                           tablat	equ	0xFF5
 18176                           prodh	equ	0xFF4
 18177                           prodl	equ	0xFF3
 18178                           intcon	equ	0xFF2
 18179                           intcon2	equ	0xFF1
 18180                           postinc0	equ	0xFEE
 18181                           wreg	equ	0xFE8
 18182                           indf1	equ	0xFE7
 18183                           postinc1	equ	0xFE6
 18184                           postdec1	equ	0xFE5
 18185                           fsr1h	equ	0xFE2
 18186                           fsr1l	equ	0xFE1
 18187                           indf2	equ	0xFDF
 18188                           postinc2	equ	0xFDE
 18189                           postdec2	equ	0xFDD
 18190                           plusw2	equ	0xFDB
 18191                           fsr2h	equ	0xFDA
 18192                           fsr2l	equ	0xFD9
 18193                           status	equ	0xFD8
 18194                           
 18195 ;; *************** function _CDCTxService *****************
 18196 ;; Defined at:
 18197 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 18198 ;; Parameters:    Size  Location     Type
 18199 ;;		None
 18200 ;; Auto vars:     Size  Location     Type
 18201 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 18202 ;;  i               1    9[BANK0 ] unsigned char 
 18203 ;; Return value:  Size  Location     Type
 18204 ;;		None               void
 18205 ;; Registers used:
 18206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18207 ;; Tracked objects:
 18208 ;;		On entry : 0/0
 18209 ;;		On exit  : F/0
 18210 ;;		Unchanged: 0/0
 18211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18213 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18215 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18216 ;;Total ram usage:        4 bytes
 18217 ;; Hardware stack levels used:    1
 18218 ;; Hardware stack levels required when called:   12
 18219 ;; This function calls:
 18220 ;;		_USBTransferOnePacket
 18221 ;; This function is called by:
 18222 ;;		_put_string_usb
 18223 ;;		_get_string_usb
 18224 ;; This function uses a non-reentrant model
 18225 ;;
 18226                           
 18227                           	psect	text84
 18228  011E02                     __ptext84:
 18229                           	opt stack 0
 18230  011E02                     _CDCTxService:
 18231                           	opt stack 16
 18232                           
 18233                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 18234                           ;usb_device_cdc.c: 896: uint8_t i;
 18235                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 18236                           
 18237                           ; BSR set to: 0
 18238                           ;incstack = 0
 18239  011E02  98A0               	bcf	4000,4,c	;volatile
 18240                           
 18241                           ;usb_device_cdc.c: 900: {};
 18242                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 18243  011E04  0101               	movlb	1	; () banked
 18244  011E06  5117               	movf	_CDCDataInHandle& (0+255),w,b
 18245  011E08  1118               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 18246  011E0A  E007               	bz	l500
 18247                           
 18248                           ; BSR set to: 1
 18249  011E0C  C117  FFD9         	movff	_CDCDataInHandle,fsr2l
 18250  011E10  C118  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 18251  011E14  D86B               	call	PL330	;call to abstracted procedure
 18252  011E16  6F67               	movwf	_CDCTxService$2005& (0+255),b
 18253  011E18  D002               	goto	L7
 18254  011E1A                     l500:
 18255                           
 18256                           ; BSR set to: 1
 18257  011E1A  0100               	movlb	0	; () banked
 18258  011E1C  6B67               	clrf	_CDCTxService$2005& (0+255),b
 18259  011E1E                     L7:
 18260  011E1E  6B68               	clrf	(_CDCTxService$2005+1)& (0+255),b
 18261                           
 18262                           ; BSR set to: 0
 18263  011E20  5167               	movf	_CDCTxService$2005& (0+255),w,b
 18264  011E22  1168               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 18265  011E24  E002               	bz	l10466
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;usb_device_cdc.c: 903: {
 18269                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 18270  011E26  88A0               	bsf	4000,4,c	;volatile
 18271                           
 18272                           ;usb_device_cdc.c: 905: return;
 18273  011E28  0012               	return	
 18274  011E2A                     l10466:
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;usb_device_cdc.c: 906: }
 18278                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 18279  011E2A  0E03               	movlw	3
 18280  011E2C  181F               	xorwf	_cdc_trf_state,w,c
 18281  011E2E  E101               	bnz	l10470
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 18285  011E30  6A1F               	clrf	_cdc_trf_state,c
 18286  011E32                     l10470:
 18287                           
 18288                           ; BSR set to: 0
 18289                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 18290  011E32  501F               	movf	_cdc_trf_state,w,c
 18291  011E34  E102               	bnz	l10474
 18292                           
 18293                           ; BSR set to: 0
 18294                           ;usb_device_cdc.c: 920: {
 18295                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 18296  011E36  88A0               	bsf	4000,4,c	;volatile
 18297                           
 18298                           ;usb_device_cdc.c: 922: return;
 18299  011E38  0012               	return	
 18300  011E3A                     l10474:
 18301                           
 18302                           ; BSR set to: 0
 18303                           ;usb_device_cdc.c: 923: }
 18304                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 18305  011E3A  0E02               	movlw	2
 18306  011E3C  181F               	xorwf	_cdc_trf_state,w,c
 18307  011E3E  E10D               	bnz	l10480
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;usb_device_cdc.c: 929: {
 18311                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 18312  011E40  0E01               	movlw	1
 18313  011E42  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 18314  011E44  0E00               	movlw	0
 18315  011E46  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 18316  011E48  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18317  011E4A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 18318  011E4C  0E02               	movlw	2
 18319  011E4E  ECFE  F094         	call	_USBTransferOnePacket
 18320  011E52  D847               	call	PL310	;call to abstracted procedure
 18321                           
 18322                           ; BSR set to: 0
 18323                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 18324  011E54  0E03               	movlw	3
 18325  011E56  6E1F               	movwf	_cdc_trf_state,c
 18326                           
 18327                           ;usb_device_cdc.c: 933: }
 18328  011E58  D032               	goto	l10524
 18329  011E5A                     l10480:
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 18333  011E5A  041F               	decf	_cdc_trf_state,w,c
 18334  011E5C  E130               	bnz	l10524
 18335                           
 18336                           ; BSR set to: 0
 18337                           ;usb_device_cdc.c: 935: {
 18338                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 18339  011E5E  0E40               	movlw	64
 18340  011E60  65EB               	cpfsgt	_cdc_tx_len& (0+255),b
 18341  011E62  D002               	goto	l509
 18342                           
 18343                           ; BSR set to: 0
 18344                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 18345  011E64  6F6A               	movwf	CDCTxService@byte_to_send& (0+255),b
 18346  011E66  D002               	goto	l10486
 18347  011E68                     l509:
 18348                           
 18349                           ; BSR set to: 0
 18350                           ;usb_device_cdc.c: 941: else
 18351                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 18352  011E68  C0EB  F06A         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 18353  011E6C                     l10486:
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 18357  011E6C  516A               	movf	CDCTxService@byte_to_send& (0+255),w,b
 18358  011E6E  5FEB               	subwf	_cdc_tx_len& (0+255),f,b
 18359                           
 18360                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 18361  011E70  0EA4               	movlw	low _cdc_data_tx
 18362  011E72  0101               	movlb	1	; () banked
 18363  011E74  6F0F               	movwf	_pCDCDst& (0+255),b
 18364  011E76  0E03               	movlw	high _cdc_data_tx
 18365  011E78  6F10               	movwf	(_pCDCDst+1)& (0+255),b
 18366                           
 18367                           ; BSR set to: 1
 18368                           ;usb_device_cdc.c: 951: i = byte_to_send;
 18369  011E7A  C06A  F069         	movff	CDCTxService@byte_to_send,CDCTxService@i
 18370                           
 18371                           ; BSR set to: 1
 18372                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 18373  011E7E  512B               	movf	_cdc_mem_type& (0+255),w,b
 18374  011E80  E002               	bz	l10502
 18375  011E82  D006               	goto	l10512
 18376  011E84                     l10494:
 18377                           
 18378                           ; BSR set to: 0
 18379                           ;usb_device_cdc.c: 955: {
 18380                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 18381                           
 18382                           ; BSR set to: 1
 18383                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 18384                           
 18385                           ; BSR set to: 1
 18386                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 18387                           
 18388                           ; BSR set to: 1
 18389                           ;usb_device_cdc.c: 959: i--;
 18390  011E84  D81E               	call	PL82	;call to abstracted procedure
 18391  011E86                     l10502:
 18392  011E86  0100               	movlb	0	; () banked
 18393  011E88  5169               	movf	CDCTxService@i& (0+255),w,b
 18394  011E8A  E005               	bz	l10514
 18395  011E8C  D7FB               	goto	l10494
 18396  011E8E                     l10504:
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;usb_device_cdc.c: 965: {
 18400                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 18401                           
 18402                           ; BSR set to: 1
 18403                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 18404                           
 18405                           ; BSR set to: 1
 18406                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 18407                           
 18408                           ; BSR set to: 1
 18409                           ;usb_device_cdc.c: 969: i--;
 18410  011E8E  D819               	call	PL82	;call to abstracted procedure
 18411  011E90                     l10512:
 18412  011E90  0100               	movlb	0	; () banked
 18413  011E92  5169               	movf	CDCTxService@i& (0+255),w,b
 18414  011E94  E1FC               	bnz	l10504
 18415  011E96                     l10514:
 18416                           
 18417                           ; BSR set to: 0
 18418                           ;usb_device_cdc.c: 970: }
 18419                           ;usb_device_cdc.c: 971: }
 18420                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 18421  011E96  51EB               	movf	_cdc_tx_len& (0+255),w,b
 18422  011E98  E106               	bnz	l10522
 18423                           
 18424                           ; BSR set to: 0
 18425                           ;usb_device_cdc.c: 978: {
 18426                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 18427  011E9A  0E40               	movlw	64
 18428  011E9C  196A               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 18429                           
 18430                           ; BSR set to: 0
 18431                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 18432  011E9E  0E02               	movlw	2
 18433  011EA0  A4D8               	btfss	status,2,c
 18434                           
 18435                           ; BSR set to: 0
 18436                           ;usb_device_cdc.c: 981: else
 18437                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 18438  011EA2  0E03               	movlw	3
 18439  011EA4  6E1F               	movwf	_cdc_trf_state,c
 18440  011EA6                     l10522:
 18441                           
 18442                           ; BSR set to: 0
 18443                           ;usb_device_cdc.c: 983: }
 18444                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 18445  011EA6  0E01               	movlw	1
 18446  011EA8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 18447  011EAA  0EA4               	movlw	low _cdc_data_tx
 18448  011EAC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 18449  011EAE  0E03               	movlw	high _cdc_data_tx
 18450  011EB0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18451  011EB2  C06A  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 18452  011EB6  0E02               	movlw	2
 18453  011EB8  ECFE  F094         	call	_USBTransferOnePacket
 18454  011EBC  D812               	call	PL310	;call to abstracted procedure
 18455  011EBE                     l10524:
 18456                           
 18457                           ; BSR set to: 0
 18458                           ;usb_device_cdc.c: 986: }
 18459                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 18460  011EBE  88A0               	bsf	4000,4,c	;volatile
 18461                           
 18462                           ; BSR set to: 0
 18463  011EC0  0012               	return		;funcret
 18464  011EC2                     __end_of_CDCTxService:
 18465                           	opt stack 0
 18466  011EC2                     PL82:
 18467                           	opt stack 16
 18468  011EC2  0101               	movlb	1	; () banked
 18469  011EC4  5112               	movf	_pCDCSrc& (0+255),w,b
 18470  011EC6  6ED9               	movwf	fsr2l,c
 18471  011EC8  6ADA               	clrf	fsr2h,c
 18472  011ECA  C10F  FFE1         	movff	_pCDCDst,fsr1l
 18473  011ECE  C110  FFE2         	movff	_pCDCDst+1,fsr1h
 18474  011ED2  CFDF FFE7          	movff	indf2,indf1
 18475  011ED6  4B0F               	infsnz	_pCDCDst& (0+255),f,b
 18476  011ED8  2B10               	incf	(_pCDCDst+1)& (0+255),f,b
 18477  011EDA  2B12               	incf	_pCDCSrc& (0+255),f,b
 18478  011EDC  0100               	movlb	0	; () banked
 18479  011EDE  0769               	decf	CDCTxService@i& (0+255),f,b
 18480  011EE0  0012               	return	
 18481  011EE2                     __end_ofPL82:
 18482                           	opt stack 0
 18483  011EE2                     PL310:
 18484                           	opt stack 16
 18485  011EE2  C060  F117         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 18486  011EE6  C061  F118         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 18487  011EEA  0012               	return	
 18488  011EEC                     __end_ofPL310:
 18489                           	opt stack 0
 18490  011EEC                     PL330:
 18491                           	opt stack 16
 18492  011EEC  0E01               	movlw	1
 18493  011EEE  AEDF               	btfss	indf2,7,c
 18494  011EF0  0E00               	movlw	0
 18495  011EF2  0100               	movlb	0	; () banked
 18496  011EF4  0012               	return	
 18497  011EF6                     __end_ofPL330:
 18498                           	opt stack 0
 18499                           tblptru	equ	0xFF8
 18500                           tblptrh	equ	0xFF7
 18501                           tblptrl	equ	0xFF6
 18502                           tablat	equ	0xFF5
 18503                           prodh	equ	0xFF4
 18504                           prodl	equ	0xFF3
 18505                           intcon	equ	0xFF2
 18506                           intcon2	equ	0xFF1
 18507                           postinc0	equ	0xFEE
 18508                           wreg	equ	0xFE8
 18509                           indf1	equ	0xFE7
 18510                           postinc1	equ	0xFE6
 18511                           postdec1	equ	0xFE5
 18512                           fsr1h	equ	0xFE2
 18513                           fsr1l	equ	0xFE1
 18514                           indf2	equ	0xFDF
 18515                           postinc2	equ	0xFDE
 18516                           postdec2	equ	0xFDD
 18517                           plusw2	equ	0xFDB
 18518                           fsr2h	equ	0xFDA
 18519                           fsr2l	equ	0xFD9
 18520                           status	equ	0xFD8
 18521                           
 18522 ;; *************** function _USBTransferOnePacket *****************
 18523 ;; Defined at:
 18524 ;;		line 995 in file "../My_library/usb/usb_device.c"
 18525 ;; Parameters:    Size  Location     Type
 18526 ;;  ep              1    wreg     unsigned char 
 18527 ;;  dir             1    0[BANK0 ] unsigned char 
 18528 ;;  data            2    1[BANK0 ] PTR unsigned char 
 18529 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18530 ;;  len             1    3[BANK0 ] unsigned char 
 18531 ;; Auto vars:     Size  Location     Type
 18532 ;;  ep              1    4[BANK0 ] unsigned char 
 18533 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 18534 ;;		 -> NULL(0), BDT(48), 
 18535 ;; Return value:  Size  Location     Type
 18536 ;;                  2    0[BANK0 ] PTR void 
 18537 ;; Registers used:
 18538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18539 ;; Tracked objects:
 18540 ;;		On entry : F/0
 18541 ;;		On exit  : F/0
 18542 ;;		Unchanged: 0/0
 18543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18544 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18545 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18547 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18548 ;;Total ram usage:        7 bytes
 18549 ;; Hardware stack levels used:    1
 18550 ;; Hardware stack levels required when called:   11
 18551 ;; This function calls:
 18552 ;;		Nothing
 18553 ;; This function is called by:
 18554 ;;		_getsUSBUSART
 18555 ;;		_CDCTxService
 18556 ;; This function uses a non-reentrant model
 18557 ;;
 18558                           
 18559                           	psect	text85
 18560  0129FC                     __ptext85:
 18561                           	opt stack 0
 18562  0129FC                     _USBTransferOnePacket:
 18563                           	opt stack 16
 18564                           
 18565                           ; BSR set to: 0
 18566                           ;incstack = 0
 18567                           ;USBTransferOnePacket@ep stored from wreg
 18568  0129FC  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 18569                           
 18570                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18571                           ;usb_device.c: 1000: if(dir != 0)
 18572  0129FE  0100               	movlb	0	; () banked
 18573  012A00  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18574  012A02  E003               	bz	l9992
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;usb_device.c: 1001: {
 18578                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18579  012A04  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18580  012A06  D837               	call	PL46	;call to abstracted procedure
 18581  012A08  D002               	goto	L9
 18582  012A0A                     l9992:
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;usb_device.c: 1005: else
 18586                           ;usb_device.c: 1006: {
 18587                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18588  012A0A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18589  012A0C  D82C               	call	PL22	;call to abstracted procedure
 18590  012A0E                     L9:
 18591  012A0E  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 18592  012A12  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;usb_device.c: 1009: }
 18596                           ;usb_device.c: 1013: if(handle == 0)
 18597  012A16  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18598  012A18  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18599  012A1A  E103               	bnz	l9998
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;usb_device.c: 1014: {
 18603                           ;usb_device.c: 1015: return 0;
 18604  012A1C  6B60               	clrf	?_USBTransferOnePacket& (0+255),b
 18605  012A1E  6B61               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 18606  012A20  0012               	return	
 18607  012A22                     l9998:
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;usb_device.c: 1016: }
 18611                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18612  012A22  EE20 F002          	lfsr	2,2
 18613  012A26  D832               	call	PL340	;call to abstracted procedure
 18614  012A28  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18615  012A2C  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18616                           
 18617                           ;usb_device.c: 1030: handle->CNT = len;
 18618  012A30  EE20 F001          	lfsr	2,1
 18619  012A34  D82B               	call	PL340	;call to abstracted procedure
 18620  012A36  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18624  012A3A  D823               	call	PL258	;call to abstracted procedure
 18625  012A3C  0E40               	movlw	64
 18626  012A3E  16DF               	andwf	indf2,f,c
 18627                           
 18628                           ; BSR set to: 0
 18629                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18630  012A40  D820               	call	PL258	;call to abstracted procedure
 18631  012A42  0E00               	movlw	0
 18632  012A44  86DB               	bsf	plusw2,3,c
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18636  012A46  D81D               	call	PL258	;call to abstracted procedure
 18637  012A48  8EDB               	bsf	plusw2,7,c
 18638                           
 18639                           ; BSR set to: 0
 18640                           ;usb_device.c: 1036: if(dir != 0)
 18641  012A4A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18642  012A4C  E003               	bz	l10010
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;usb_device.c: 1037: {
 18646                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18647  012A4E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18648  012A50  D812               	call	PL46	;call to abstracted procedure
 18649  012A52  D002               	goto	L10
 18650  012A54                     l10010:
 18651                           
 18652                           ; BSR set to: 0
 18653                           ;usb_device.c: 1041: else
 18654                           ;usb_device.c: 1042: {
 18655                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18656  012A54  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18657  012A56  D807               	call	PL22	;call to abstracted procedure
 18658  012A58                     L10:
 18659  012A58  0E04               	movlw	4
 18660  012A5A  1ADF               	xorwf	indf2,f,c
 18661                           
 18662                           ; BSR set to: 0
 18663                           ;usb_device.c: 1045: }
 18664                           ;usb_device.c: 1046: return (void*)handle;
 18665  012A5C  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18666  012A60  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18667                           
 18668                           ; BSR set to: 0
 18669  012A64  0C04               	retlw	4	;funcret
 18670  012A66                     __end_of_USBTransferOnePacket:
 18671                           	opt stack 0
 18672  012A66                     PL22:
 18673                           	opt stack 16
 18674  012A66  0D02               	mullw	2
 18675  012A68  0E00               	movlw	low _pBDTEntryOut
 18676  012A6A  24F3               	addwf	prodl,w,c
 18677  012A6C  6ED9               	movwf	fsr2l,c
 18678  012A6E  0E01               	movlw	high _pBDTEntryOut
 18679  012A70  20F4               	addwfc	prodh,w,c
 18680  012A72  6EDA               	movwf	fsr2h,c
 18681  012A74  0012               	return	
 18682  012A76                     __end_ofPL22:
 18683                           	opt stack 0
 18684  012A76                     PL46:
 18685                           	opt stack 16
 18686  012A76  0D02               	mullw	2
 18687  012A78  50F3               	movf	prodl,w,c
 18688  012A7A  0F10               	addlw	low _pBDTEntryIn
 18689  012A7C  6ED9               	movwf	fsr2l,c
 18690  012A7E  6ADA               	clrf	fsr2h,c
 18691  012A80  0012               	return	
 18692  012A82                     __end_ofPL46:
 18693                           	opt stack 0
 18694  012A82                     PL258:
 18695                           	opt stack 16
 18696  012A82  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18697  012A86  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18698  012A8A  0012               	return	
 18699  012A8C                     __end_ofPL258:
 18700                           	opt stack 0
 18701  012A8C                     PL340:
 18702                           	opt stack 16
 18703  012A8C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18704  012A8E  26D9               	addwf	fsr2l,f,c
 18705  012A90  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18706  012A92  22DA               	addwfc	fsr2h,f,c
 18707  012A94  0012               	return	
 18708  012A96                     __end_ofPL340:
 18709                           	opt stack 0
 18710                           tblptru	equ	0xFF8
 18711                           tblptrh	equ	0xFF7
 18712                           tblptrl	equ	0xFF6
 18713                           tablat	equ	0xFF5
 18714                           prodh	equ	0xFF4
 18715                           prodl	equ	0xFF3
 18716                           intcon	equ	0xFF2
 18717                           intcon2	equ	0xFF1
 18718                           postinc0	equ	0xFEE
 18719                           wreg	equ	0xFE8
 18720                           indf1	equ	0xFE7
 18721                           postinc1	equ	0xFE6
 18722                           postdec1	equ	0xFE5
 18723                           fsr1h	equ	0xFE2
 18724                           fsr1l	equ	0xFE1
 18725                           indf2	equ	0xFDF
 18726                           postinc2	equ	0xFDE
 18727                           postdec2	equ	0xFDD
 18728                           plusw2	equ	0xFDB
 18729                           fsr2h	equ	0xFDA
 18730                           fsr2l	equ	0xFD9
 18731                           status	equ	0xFD8
 18732                           
 18733 ;; *************** function _ST7032_task *****************
 18734 ;; Defined at:
 18735 ;;		line 102 in file "../My_library/My_ST7032.c"
 18736 ;; Parameters:    Size  Location     Type
 18737 ;;		None
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;  data            1   17[BANK0 ] unsigned char 
 18740 ;; Return value:  Size  Location     Type
 18741 ;;		None               void
 18742 ;; Registers used:
 18743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18744 ;; Tracked objects:
 18745 ;;		On entry : 0/1
 18746 ;;		On exit  : E/0
 18747 ;;		Unchanged: 0/0
 18748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18752 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18753 ;;Total ram usage:        3 bytes
 18754 ;; Hardware stack levels used:    1
 18755 ;; Hardware stack levels required when called:   13
 18756 ;; This function calls:
 18757 ;;		_ringbuf_num
 18758 ;;		_ringbuf_pop
 18759 ;; This function is called by:
 18760 ;;		_main
 18761 ;; This function uses a non-reentrant model
 18762 ;;
 18763                           
 18764                           	psect	text86
 18765  011D08                     __ptext86:
 18766                           	opt stack 0
 18767  011D08                     _ST7032_task:
 18768                           	opt stack 17
 18769                           
 18770                           ;My_ST7032.c: 103: if ((SSP1CON2 & 0x1F) | (SSP1STAT & 0x05)) {
 18771                           
 18772                           ; BSR set to: 0
 18773                           ;incstack = 0
 18774  011D08  CFC7 F06F          	movff	4039,??_ST7032_task	;volatile
 18775  011D0C  0E05               	movlw	5
 18776  011D0E  0100               	movlb	0	; () banked
 18777  011D10  176F               	andwf	??_ST7032_task& (0+255),f,b
 18778  011D12  50C5               	movf	4037,w,c	;volatile
 18779  011D14  0B1F               	andlw	31
 18780  011D16  116F               	iorwf	??_ST7032_task& (0+255),w,b
 18781  011D18  E064               	bz	l11542
 18782  011D1A  0012               	return	
 18783  011D1C                     l11498:
 18784                           
 18785                           ; BSR set to: 1
 18786                           ;My_ST7032.c: 112: if (ringbuf_num(&lcd_tx)) {
 18787  011D1C  0E82               	movlw	low _lcd_tx
 18788  011D1E  0100               	movlb	0	; () banked
 18789  011D20  6F60               	movwf	ringbuf_num@rb& (0+255),b
 18790  011D22  0E01               	movlw	high _lcd_tx
 18791  011D24  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 18792  011D26  ECDE  F097         	call	_ringbuf_num	;wreg free
 18793  011D2A  5160               	movf	?_ringbuf_num& (0+255),w,b
 18794  011D2C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 18795  011D2E  B4D8               	btfsc	status,2,c
 18796  011D30  0012               	return	
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;My_ST7032.c: 113: st7032_state = ST7032_START;
 18800  011D32  0E01               	movlw	1
 18801  011D34  0101               	movlb	1	; () banked
 18802  011D36  6F24               	movwf	ST7032_task@st7032_state& (0+255),b
 18803  011D38  0C01               	retlw	1
 18804  011D3A                     l11502:
 18805                           
 18806                           ; BSR set to: 1
 18807                           ;My_ST7032.c: 117: st7032_flag = 1;
 18808  011D3A  0E01               	movlw	1
 18809  011D3C  6F32               	movwf	_st7032_flag& (0+255),b
 18810                           
 18811                           ; BSR set to: 1
 18812                           ;My_ST7032.c: 118: SSP1CON2bits.SEN = 1;
 18813  011D3E  80C5               	bsf	4037,0,c	;volatile
 18814                           
 18815                           ;My_ST7032.c: 119: st7032_state = ST7032_SEND;
 18816  011D40  0E02               	movlw	2
 18817  011D42  6F24               	movwf	ST7032_task@st7032_state& (0+255),b
 18818                           
 18819                           ;My_ST7032.c: 120: break;
 18820  011D44  0C02               	retlw	2
 18821  011D46                     l11506:
 18822                           
 18823                           ; BSR set to: 1
 18824                           ;My_ST7032.c: 122: if (!st7032_flag) {
 18825  011D46  5132               	movf	_st7032_flag& (0+255),w,b
 18826  011D48  E101               	bnz	l11510
 18827  011D4A  0012               	return	
 18828  011D4C                     l11510:
 18829                           
 18830                           ; BSR set to: 1
 18831                           ;My_ST7032.c: 125: }
 18832                           ;My_ST7032.c: 126: char data = ringbuf_pop(&lcd_tx);
 18833  011D4C  0E82               	movlw	low _lcd_tx
 18834  011D4E  0100               	movlb	0	; () banked
 18835  011D50  D854               	call	PL354	;call to abstracted procedure
 18836  011D52  EC4F  F097         	call	_ringbuf_pop	;wreg free
 18837  011D56  6F71               	movwf	ST7032_task@data& (0+255),b
 18838                           
 18839                           ; BSR set to: 0
 18840                           ;My_ST7032.c: 127: if (data != 0) {
 18841  011D58  5171               	movf	ST7032_task@data& (0+255),w,b
 18842  011D5A  E005               	bz	l11516
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;My_ST7032.c: 128: st7032_flag = 0;
 18846  011D5C  0101               	movlb	1	; () banked
 18847  011D5E  6B32               	clrf	_st7032_flag& (0+255),b
 18848                           
 18849                           ;My_ST7032.c: 129: SSP1BUF = data;
 18850  011D60  C071  FFC9         	movff	ST7032_task@data,4041	;volatile
 18851                           
 18852                           ;My_ST7032.c: 130: } else {
 18853  011D64  0012               	return	
 18854  011D66                     l11516:
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;My_ST7032.c: 131: wait = ringbuf_pop(&lcd_tx);
 18858  011D66  0E82               	movlw	low _lcd_tx
 18859  011D68  D848               	call	PL354	;call to abstracted procedure
 18860  011D6A  EC4F  F097         	call	_ringbuf_pop	;wreg free
 18861  011D6E  0101               	movlb	1	; () banked
 18862  011D70  6F15               	movwf	ST7032_task@wait& (0+255),b
 18863  011D72  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18864                           
 18865                           ;My_ST7032.c: 132: switch (wait) {
 18866  011D74  D016               	goto	l11528
 18867  011D76                     l1094:
 18868                           
 18869                           ; BSR set to: 0
 18870                           ;My_ST7032.c: 134: wait = 0;
 18871  011D76  0101               	movlb	1	; () banked
 18872  011D78  6B15               	clrf	ST7032_task@wait& (0+255),b
 18873  011D7A  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18874                           
 18875                           ;My_ST7032.c: 135: break;
 18876  011D7C  D022               	goto	l11530
 18877  011D7E                     l11518:
 18878                           
 18879                           ; BSR set to: 0
 18880                           ;My_ST7032.c: 137: wait = 2;
 18881  011D7E  0101               	movlb	1	; () banked
 18882  011D80  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18883  011D82  0E02               	movlw	2
 18884  011D84  D00C               	goto	L13
 18885  011D86                     l11520:
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;My_ST7032.c: 140: wait = 25;
 18889  011D86  0101               	movlb	1	; () banked
 18890  011D88  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18891  011D8A  0E19               	movlw	25
 18892  011D8C  D008               	goto	L13
 18893  011D8E                     l11522:
 18894                           
 18895                           ; BSR set to: 0
 18896                           ;My_ST7032.c: 143: wait = 800;
 18897  011D8E  0E03               	movlw	3
 18898  011D90  0101               	movlb	1	; () banked
 18899  011D92  6F16               	movwf	(ST7032_task@wait+1)& (0+255),b
 18900  011D94  0E20               	movlw	32
 18901  011D96  D003               	goto	L13
 18902  011D98                     l11524:
 18903                           
 18904                           ; BSR set to: 0
 18905                           ;My_ST7032.c: 146: wait = 1;
 18906  011D98  0101               	movlb	1	; () banked
 18907  011D9A  6B16               	clrf	(ST7032_task@wait+1)& (0+255),b
 18908  011D9C  0E01               	movlw	1
 18909  011D9E                     L13:
 18910  011D9E  6F15               	movwf	ST7032_task@wait& (0+255),b
 18911                           
 18912                           ;My_ST7032.c: 147: break;
 18913  011DA0  D010               	goto	l11530
 18914  011DA2                     l11528:
 18915                           
 18916                           ; BSR set to: 1
 18917  011DA2  C115  F06F         	movff	ST7032_task@wait,??_ST7032_task
 18918  011DA6  C116  F070         	movff	ST7032_task@wait+1,??_ST7032_task+1
 18919                           
 18920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18921                           ; Switch size 1, requested type "space"
 18922                           ; Number of cases is 1, Range of values is 0 to 0
 18923                           ; switch strategies available:
 18924                           ; Name         Instructions Cycles
 18925                           ; simple_byte            4     3 (average)
 18926                           ;	Chosen strategy is simple_byte
 18927  011DAA  0100               	movlb	0	; () banked
 18928  011DAC  5170               	movf	(??_ST7032_task+1)& (0+255),w,b
 18929  011DAE  E1F4               	bnz	l11524
 18930                           
 18931                           ; BSR set to: 0
 18932                           ; Switch size 1, requested type "space"
 18933                           ; Number of cases is 4, Range of values is 0 to 3
 18934                           ; switch strategies available:
 18935                           ; Name         Instructions Cycles
 18936                           ; simple_byte           13     7 (average)
 18937                           ;	Chosen strategy is simple_byte
 18938  011DB0  516F               	movf	??_ST7032_task& (0+255),w,b
 18939  011DB2  E0E1               	bz	l1094
 18940  011DB4  0A01               	xorlw	1	; case 1
 18941  011DB6  E0E3               	bz	l11518
 18942  011DB8  0A03               	xorlw	3	; case 2
 18943  011DBA  E0E5               	bz	l11520
 18944  011DBC  0A01               	xorlw	1	; case 3
 18945  011DBE  E0E7               	bz	l11522
 18946  011DC0  D7EB               	goto	l11524
 18947  011DC2                     l11530:
 18948                           
 18949                           ; BSR set to: 1
 18950                           ;My_ST7032.c: 149: st7032_state = ST7032_STOP;
 18951  011DC2  0E03               	movlw	3
 18952  011DC4  6F24               	movwf	ST7032_task@st7032_state& (0+255),b
 18953  011DC6  0C03               	retlw	3
 18954  011DC8                     l1100:
 18955                           
 18956                           ; BSR set to: 1
 18957                           ;My_ST7032.c: 153: SSP1CON2bits.PEN = 1;
 18958  011DC8  84C5               	bsf	4037,2,c	;volatile
 18959                           
 18960                           ; BSR set to: 1
 18961                           ;My_ST7032.c: 154: st7032_state = ST7032_WAIT;
 18962  011DCA  0E04               	movlw	4
 18963  011DCC  6F24               	movwf	ST7032_task@st7032_state& (0+255),b
 18964                           
 18965                           ;My_ST7032.c: 155: break;
 18966  011DCE  0C04               	retlw	4
 18967  011DD0                     l11534:
 18968                           
 18969                           ; BSR set to: 1
 18970                           ;My_ST7032.c: 157: if (wait == 0) st7032_state = ST7032_IDOLE;
 18971  011DD0  5115               	movf	ST7032_task@wait& (0+255),w,b
 18972  011DD2  1116               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
 18973  011DD4  E102               	bnz	l11538
 18974                           
 18975                           ; BSR set to: 1
 18976  011DD6  6B24               	clrf	ST7032_task@st7032_state& (0+255),b
 18977  011DD8  0012               	return	
 18978  011DDA                     l11538:
 18979                           
 18980                           ; BSR set to: 1
 18981                           ;My_ST7032.c: 158: else wait--;
 18982  011DDA  0715               	decf	ST7032_task@wait& (0+255),f,b
 18983  011DDC  A0D8               	btfss	status,0,c
 18984  011DDE  0716               	decf	(ST7032_task@wait+1)& (0+255),f,b
 18985  011DE0  0012               	return	
 18986  011DE2                     l11542:
 18987                           
 18988                           ; BSR set to: 0
 18989  011DE2  0101               	movlb	1	; () banked
 18990  011DE4  5124               	movf	ST7032_task@st7032_state& (0+255),w,b
 18991                           
 18992                           ; Switch size 1, requested type "space"
 18993                           ; Number of cases is 5, Range of values is 0 to 4
 18994                           ; switch strategies available:
 18995                           ; Name         Instructions Cycles
 18996                           ; simple_byte           16     9 (average)
 18997                           ;	Chosen strategy is simple_byte
 18998  011DE6  E09A               	bz	l11498
 18999  011DE8  0A01               	xorlw	1	; case 1
 19000  011DEA  E0A7               	bz	l11502
 19001  011DEC  0A03               	xorlw	3	; case 2
 19002  011DEE  E0AB               	bz	l11506
 19003  011DF0  0A01               	xorlw	1	; case 3
 19004  011DF2  E0EA               	bz	l1100
 19005  011DF4  0A07               	xorlw	7	; case 4
 19006  011DF6  E0EC               	bz	l11534
 19007  011DF8  0012               	return		;funcret
 19008  011DFA                     __end_of_ST7032_task:
 19009                           	opt stack 0
 19010  011DFA                     PL354:
 19011                           	opt stack 17
 19012  011DFA  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 19013  011DFC  0E01               	movlw	high _lcd_tx
 19014  011DFE  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 19015  011E00  0012               	return	
 19016  011E02                     __end_ofPL354:
 19017                           	opt stack 0
 19018                           tblptru	equ	0xFF8
 19019                           tblptrh	equ	0xFF7
 19020                           tblptrl	equ	0xFF6
 19021                           tablat	equ	0xFF5
 19022                           prodh	equ	0xFF4
 19023                           prodl	equ	0xFF3
 19024                           intcon	equ	0xFF2
 19025                           intcon2	equ	0xFF1
 19026                           postinc0	equ	0xFEE
 19027                           wreg	equ	0xFE8
 19028                           indf1	equ	0xFE7
 19029                           postinc1	equ	0xFE6
 19030                           postdec1	equ	0xFE5
 19031                           fsr1h	equ	0xFE2
 19032                           fsr1l	equ	0xFE1
 19033                           indf2	equ	0xFDF
 19034                           postinc2	equ	0xFDE
 19035                           postdec2	equ	0xFDD
 19036                           plusw2	equ	0xFDB
 19037                           fsr2h	equ	0xFDA
 19038                           fsr2l	equ	0xFD9
 19039                           status	equ	0xFD8
 19040                           
 19041 ;; *************** function _ringbuf_pop *****************
 19042 ;; Defined at:
 19043 ;;		line 45 in file "../My_library/My_ringbuf.c"
 19044 ;; Parameters:    Size  Location     Type
 19045 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 19046 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 19047 ;;		 -> lcd_tx(8), 
 19048 ;; Auto vars:     Size  Location     Type
 19049 ;;  ret             1   14[BANK0 ] unsigned char 
 19050 ;; Return value:  Size  Location     Type
 19051 ;;                  1    wreg      unsigned char 
 19052 ;; Registers used:
 19053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19054 ;; Tracked objects:
 19055 ;;		On entry : F/0
 19056 ;;		On exit  : F/0
 19057 ;;		Unchanged: 0/0
 19058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19061 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19062 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19063 ;;Total ram usage:        7 bytes
 19064 ;; Hardware stack levels used:    1
 19065 ;; Hardware stack levels required when called:   12
 19066 ;; This function calls:
 19067 ;;		_ringbuf_num
 19068 ;; This function is called by:
 19069 ;;		_ST7032_task
 19070 ;;		_terminal_task
 19071 ;;		_USB_task
 19072 ;; This function uses a non-reentrant model
 19073 ;;
 19074                           
 19075                           	psect	text87
 19076  012E9E                     __ptext87:
 19077                           	opt stack 0
 19078  012E9E                     _ringbuf_pop:
 19079                           	opt stack 17
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 19083                           
 19084                           ;incstack = 0
 19085  012E9E  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 19086  012EA2  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 19087  012EA6  ECDE  F097         	call	_ringbuf_num	;wreg free
 19088  012EAA  5160               	movf	?_ringbuf_num& (0+255),w,b
 19089  012EAC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 19090  012EAE  E037               	bz	l11060
 19091                           
 19092                           ; BSR set to: 0
 19093                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 19094  012EB0  D837               	call	PL148	;call to abstracted procedure
 19095  012EB2  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 19096  012EB6  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 19097  012EBA  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 19098  012EBE  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 19099  012EC2  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 19100  012EC6  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 19101  012ECA  516A               	movf	??_ringbuf_pop& (0+255),w,b
 19102  012ECC  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 19103  012ECE  6ED9               	movwf	fsr2l,c
 19104  012ED0  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 19105  012ED2  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 19106  012ED4  6EDA               	movwf	fsr2h,c
 19107  012ED6  50DF               	movf	indf2,w,c
 19108  012ED8  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 19109                           
 19110                           ; BSR set to: 0
 19111                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 19112  012EDA  EE20 F002          	lfsr	2,2
 19113  012EDE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19114  012EE0  26D9               	addwf	fsr2l,f,c
 19115  012EE2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19116  012EE4  22DA               	addwfc	fsr2h,f,c
 19117  012EE6  EE10 F006          	lfsr	1,6
 19118  012EEA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19119  012EEC  26E1               	addwf	fsr1l,f,c
 19120  012EEE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19121  012EF0  22E2               	addwfc	fsr1h,f,c
 19122  012EF2  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 19123  012EF6  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 19124  012EFA  2B6C               	incf	(??_ringbuf_pop+2)& (0+255),f,b
 19125  012EFC  0E00               	movlw	0
 19126  012EFE  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 19127  012F00  50DE               	movf	postinc2,w,c
 19128  012F02  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 19129  012F04  50DE               	movf	postinc2,w,c
 19130  012F06  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 19131  012F08  E205               	bc	l11052
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;My_ringbuf.c: 49: rb->tail++;
 19135  012F0A  D80A               	call	PL148	;call to abstracted procedure
 19136  012F0C  2ADE               	incf	postinc2,f,c
 19137  012F0E  0E00               	movlw	0
 19138  012F10  22DD               	addwfc	postdec2,f,c
 19139                           
 19140                           ;My_ringbuf.c: 50: } else {
 19141  012F12  D003               	goto	l11054
 19142  012F14                     l11052:
 19143                           
 19144                           ; BSR set to: 0
 19145                           ;My_ringbuf.c: 51: rb->tail = 0;
 19146  012F14  D805               	call	PL148	;call to abstracted procedure
 19147  012F16  6ADE               	clrf	postinc2,c
 19148  012F18  6ADD               	clrf	postdec2,c
 19149  012F1A                     l11054:
 19150                           
 19151                           ; BSR set to: 0
 19152                           ;My_ringbuf.c: 52: }
 19153                           ;My_ringbuf.c: 53: return ret;
 19154  012F1A  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 19155  012F1C  0012               	return	
 19156  012F1E                     l11060:
 19157                           
 19158                           ; BSR set to: 0
 19159                           
 19160                           ; BSR set to: 0
 19161                           ;My_ringbuf.c: 55: return 0;
 19162  012F1E  0C00               	retlw	0	;funcret
 19163  012F20                     __end_of_ringbuf_pop:
 19164                           	opt stack 0
 19165  012F20                     PL148:
 19166                           	opt stack 17
 19167  012F20  EE20 F006          	lfsr	2,6
 19168  012F24  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19169  012F26  26D9               	addwf	fsr2l,f,c
 19170  012F28  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19171  012F2A  22DA               	addwfc	fsr2h,f,c
 19172  012F2C  0012               	return	
 19173  012F2E                     __end_ofPL148:
 19174                           	opt stack 0
 19175                           tblptru	equ	0xFF8
 19176                           tblptrh	equ	0xFF7
 19177                           tblptrl	equ	0xFF6
 19178                           tablat	equ	0xFF5
 19179                           prodh	equ	0xFF4
 19180                           prodl	equ	0xFF3
 19181                           intcon	equ	0xFF2
 19182                           intcon2	equ	0xFF1
 19183                           postinc0	equ	0xFEE
 19184                           wreg	equ	0xFE8
 19185                           indf1	equ	0xFE7
 19186                           postinc1	equ	0xFE6
 19187                           postdec1	equ	0xFE5
 19188                           fsr1h	equ	0xFE2
 19189                           fsr1l	equ	0xFE1
 19190                           indf2	equ	0xFDF
 19191                           postinc2	equ	0xFDE
 19192                           postdec2	equ	0xFDD
 19193                           plusw2	equ	0xFDB
 19194                           fsr2h	equ	0xFDA
 19195                           fsr2l	equ	0xFD9
 19196                           status	equ	0xFD8
 19197                           
 19198 ;; *************** function _ringbuf_num *****************
 19199 ;; Defined at:
 19200 ;;		line 12 in file "../My_library/My_ringbuf.c"
 19201 ;; Parameters:    Size  Location     Type
 19202 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 19203 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 19204 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 19205 ;; Auto vars:     Size  Location     Type
 19206 ;;		None
 19207 ;; Return value:  Size  Location     Type
 19208 ;;                  2    0[BANK0 ] unsigned int 
 19209 ;; Registers used:
 19210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19211 ;; Tracked objects:
 19212 ;;		On entry : E/1
 19213 ;;		On exit  : F/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19218 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19219 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19220 ;;Total ram usage:        8 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:   11
 19223 ;; This function calls:
 19224 ;;		Nothing
 19225 ;; This function is called by:
 19226 ;;		_ringbuf_put
 19227 ;;		_ringbuf_pop
 19228 ;;		_ringbuf_backspace
 19229 ;;		_ST7032_task
 19230 ;;		_terminal_task
 19231 ;;		_USB_task
 19232 ;; This function uses a non-reentrant model
 19233 ;;
 19234                           
 19235                           	psect	text88
 19236  012FBC                     __ptext88:
 19237                           	opt stack 0
 19238  012FBC                     _ringbuf_num:
 19239                           	opt stack 13
 19240                           
 19241                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;incstack = 0
 19245  012FBC  0100               	movlb	0	; () banked
 19246  012FBE  EE20 F006          	lfsr	2,6
 19247  012FC2  D834               	call	PL146	;call to abstracted procedure
 19248  012FC4  EE10 F004          	lfsr	1,4
 19249  012FC8  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19250  012FCA  26E1               	addwf	fsr1l,f,c
 19251  012FCC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19252  012FCE  22E2               	addwfc	fsr1h,f,c
 19253  012FD0  50DE               	movf	postinc2,w,c
 19254  012FD2  5CE6               	subwf	postinc1,w,c
 19255  012FD4  50DE               	movf	postinc2,w,c
 19256  012FD6  58E6               	subwfb	postinc1,w,c
 19257  012FD8  E30F               	bnc	l9550
 19258                           
 19259                           ; BSR set to: 0
 19260                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 19261  012FDA  EE20 F006          	lfsr	2,6
 19262  012FDE  D826               	call	PL146	;call to abstracted procedure
 19263  012FE0  D82F               	call	PL332	;call to abstracted procedure
 19264  012FE2  EE20 F004          	lfsr	2,4
 19265  012FE6  D822               	call	PL146	;call to abstracted procedure
 19266  012FE8  D826               	call	PL316	;call to abstracted procedure
 19267  012FEA  5162               	movf	??_ringbuf_num& (0+255),w,b
 19268  012FEC  5D64               	subwf	(??_ringbuf_num+2)& (0+255),w,b
 19269  012FEE  6F60               	movwf	?_ringbuf_num& (0+255),b
 19270  012FF0  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 19271  012FF2  5965               	subwfb	(??_ringbuf_num+3)& (0+255),w,b
 19272  012FF4  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 19273  012FF6  0012               	return	
 19274  012FF8                     l9550:
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 19278  012FF8  EE20 F004          	lfsr	2,4
 19279  012FFC  D817               	call	PL146	;call to abstracted procedure
 19280  012FFE  D820               	call	PL332	;call to abstracted procedure
 19281  013000  EE20 F006          	lfsr	2,6
 19282  013004  D813               	call	PL146	;call to abstracted procedure
 19283  013006  D817               	call	PL316	;call to abstracted procedure
 19284  013008  EE20 F002          	lfsr	2,2
 19285  01300C  D80F               	call	PL146	;call to abstracted procedure
 19286  01300E  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 19287  013012  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 19288  013016  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 19289  013018  5F66               	subwf	(??_ringbuf_num+4)& (0+255),f,b
 19290  01301A  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 19291  01301C  5B67               	subwfb	(??_ringbuf_num+5)& (0+255),f,b
 19292  01301E  5162               	movf	??_ringbuf_num& (0+255),w,b
 19293  013020  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 19294  013022  6F60               	movwf	?_ringbuf_num& (0+255),b
 19295  013024  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 19296  013026  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 19297  013028  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 19298                           
 19299                           ; BSR set to: 0
 19300  01302A  0012               	return		;funcret
 19301  01302C                     __end_of_ringbuf_num:
 19302                           	opt stack 0
 19303  01302C                     PL146:
 19304                           	opt stack 13
 19305  01302C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19306  01302E  26D9               	addwf	fsr2l,f,c
 19307  013030  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19308  013032  22DA               	addwfc	fsr2h,f,c
 19309  013034  0012               	return	
 19310  013036                     __end_ofPL146:
 19311                           	opt stack 0
 19312  013036                     PL316:
 19313                           	opt stack 13
 19314  013036  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 19315  01303A  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 19316  01303E  0012               	return	
 19317  013040                     __end_ofPL316:
 19318                           	opt stack 0
 19319  013040                     PL332:
 19320                           	opt stack 13
 19321  013040  CFDE F062          	movff	postinc2,??_ringbuf_num
 19322  013044  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 19323  013048  0012               	return	
 19324  01304A                     __end_ofPL332:
 19325                           	opt stack 0
 19326                           tblptru	equ	0xFF8
 19327                           tblptrh	equ	0xFF7
 19328                           tblptrl	equ	0xFF6
 19329                           tablat	equ	0xFF5
 19330                           prodh	equ	0xFF4
 19331                           prodl	equ	0xFF3
 19332                           intcon	equ	0xFF2
 19333                           intcon2	equ	0xFF1
 19334                           postinc0	equ	0xFEE
 19335                           wreg	equ	0xFE8
 19336                           indf1	equ	0xFE7
 19337                           postinc1	equ	0xFE6
 19338                           postdec1	equ	0xFE5
 19339                           fsr1h	equ	0xFE2
 19340                           fsr1l	equ	0xFE1
 19341                           indf2	equ	0xFDF
 19342                           postinc2	equ	0xFDE
 19343                           postdec2	equ	0xFDD
 19344                           plusw2	equ	0xFDB
 19345                           fsr2h	equ	0xFDA
 19346                           fsr2l	equ	0xFD9
 19347                           status	equ	0xFD8
 19348                           
 19349 ;; *************** function _RTCC_task *****************
 19350 ;; Defined at:
 19351 ;;		line 352 in file "../My_library/My_RTCC.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;		None
 19354 ;; Auto vars:     Size  Location     Type
 19355 ;;		None
 19356 ;; Return value:  Size  Location     Type
 19357 ;;		None               void
 19358 ;; Registers used:
 19359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19360 ;; Tracked objects:
 19361 ;;		On entry : 0/1
 19362 ;;		On exit  : 0/0
 19363 ;;		Unchanged: 0/0
 19364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19369 ;;Total ram usage:        0 bytes
 19370 ;; Hardware stack levels used:    1
 19371 ;; Hardware stack levels required when called:   15
 19372 ;; This function calls:
 19373 ;;		_RTCC_from_RTCC
 19374 ;; This function is called by:
 19375 ;;		_main
 19376 ;; This function uses a non-reentrant model
 19377 ;;
 19378                           
 19379                           	psect	text89
 19380  0141A2                     __ptext89:
 19381                           	opt stack 0
 19382  0141A2                     _RTCC_task:
 19383                           	opt stack 15
 19384                           
 19385                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 19386                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 19387                           
 19388                           ; BSR set to: 0
 19389                           ;incstack = 0
 19390  0141A2  010F               	movlb	15	; () banked
 19391  0141A4  B93F               	btfsc	63,4,b	;volatile
 19392  0141A6  0012               	return	
 19393                           
 19394                           ; BSR set to: 15
 19395                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 19396  0141A8  0E00               	movlw	0
 19397  0141AA  B73F               	btfsc	63,3,b	;volatile
 19398  0141AC  0E01               	movlw	1
 19399  0141AE  0102               	movlb	2	; () banked
 19400  0141B0  6F9B               	movwf	(_now+12)& (0+255),b
 19401                           
 19402                           ; BSR set to: 2
 19403                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 19404  0141B2  0101               	movlb	1	; () banked
 19405  0141B4  5123               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 19406  0141B6  0102               	movlb	2	; () banked
 19407  0141B8  199B               	xorwf	(_now+12)& (0+255),w,b
 19408  0141BA  B4D8               	btfsc	status,2,c
 19409  0141BC  0012               	return	
 19410                           
 19411                           ; BSR set to: 2
 19412                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 19413  0141BE  C29B  F123         	movff	_now+12,RTCC_task@prev_halfsec
 19414                           
 19415                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 19416  0141C2  C29B  F29A         	movff	_now+12,_now+11
 19417                           
 19418                           ; BSR set to: 2
 19419                           ;My_RTCC.c: 359: time_change_flag = 1;
 19420  0141C6  0E01               	movlw	1
 19421  0141C8  0101               	movlb	1	; () banked
 19422  0141CA  6F35               	movwf	_time_change_flag& (0+255),b
 19423                           
 19424                           ; BSR set to: 1
 19425                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 19426  0141CC  ECBA  F09D         	call	PL206	;call to abstracted procedure
 19427  0141D0  EF8C  F0A2         	goto	_RTCC_from_RTCC	;wreg free
 19428  0141D4                     __end_of_RTCC_task:
 19429                           	opt stack 0
 19430                           tblptru	equ	0xFF8
 19431                           tblptrh	equ	0xFF7
 19432                           tblptrl	equ	0xFF6
 19433                           tablat	equ	0xFF5
 19434                           prodh	equ	0xFF4
 19435                           prodl	equ	0xFF3
 19436                           intcon	equ	0xFF2
 19437                           intcon2	equ	0xFF1
 19438                           postinc0	equ	0xFEE
 19439                           wreg	equ	0xFE8
 19440                           indf1	equ	0xFE7
 19441                           postinc1	equ	0xFE6
 19442                           postdec1	equ	0xFE5
 19443                           fsr1h	equ	0xFE2
 19444                           fsr1l	equ	0xFE1
 19445                           indf2	equ	0xFDF
 19446                           postinc2	equ	0xFDE
 19447                           postdec2	equ	0xFDD
 19448                           plusw2	equ	0xFDB
 19449                           fsr2h	equ	0xFDA
 19450                           fsr2l	equ	0xFD9
 19451                           status	equ	0xFD8
 19452                           
 19453 ;; *************** function _RTCC_from_RTCC *****************
 19454 ;; Defined at:
 19455 ;;		line 199 in file "../My_library/My_RTCC.c"
 19456 ;; Parameters:    Size  Location     Type
 19457 ;;  tm              2   38[BANK0 ] PTR struct .
 19458 ;;		 -> now(14), 
 19459 ;; Auto vars:     Size  Location     Type
 19460 ;;		None
 19461 ;; Return value:  Size  Location     Type
 19462 ;;		None               void
 19463 ;; Registers used:
 19464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19465 ;; Tracked objects:
 19466 ;;		On entry : F/0
 19467 ;;		On exit  : F/0
 19468 ;;		Unchanged: 0/0
 19469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19474 ;;Total ram usage:        2 bytes
 19475 ;; Hardware stack levels used:    1
 19476 ;; Hardware stack levels required when called:   14
 19477 ;; This function calls:
 19478 ;;		_RTCC_to_caltime
 19479 ;;		_caltime_to_epoch
 19480 ;; This function is called by:
 19481 ;;		_RTCC_init
 19482 ;;		_display_time_1602
 19483 ;;		_RTCC_adjust_time_inc
 19484 ;;		_RTCC_adjust_time_dec
 19485 ;;		_RTCC_task
 19486 ;;		_print_time
 19487 ;; This function uses a non-reentrant model
 19488 ;;
 19489                           
 19490                           	psect	text90
 19491  014518                     __ptext90:
 19492                           	opt stack 0
 19493  014518                     _RTCC_from_RTCC:
 19494                           	opt stack 11
 19495                           
 19496                           ; BSR set to: 0
 19497                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 19498                           
 19499                           ;incstack = 0
 19500  014518  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 19501  01451C  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 19502  014520  EC25  F098         	call	_RTCC_to_caltime	;wreg free
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 19506  014524  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 19507  014528  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 19508  01452C  EF9E  F08A         	goto	_caltime_to_epoch	;wreg free
 19509  014530                     __end_of_RTCC_from_RTCC:
 19510                           	opt stack 0
 19511                           tblptru	equ	0xFF8
 19512                           tblptrh	equ	0xFF7
 19513                           tblptrl	equ	0xFF6
 19514                           tablat	equ	0xFF5
 19515                           prodh	equ	0xFF4
 19516                           prodl	equ	0xFF3
 19517                           intcon	equ	0xFF2
 19518                           intcon2	equ	0xFF1
 19519                           postinc0	equ	0xFEE
 19520                           wreg	equ	0xFE8
 19521                           indf1	equ	0xFE7
 19522                           postinc1	equ	0xFE6
 19523                           postdec1	equ	0xFE5
 19524                           fsr1h	equ	0xFE2
 19525                           fsr1l	equ	0xFE1
 19526                           indf2	equ	0xFDF
 19527                           postinc2	equ	0xFDE
 19528                           postdec2	equ	0xFDD
 19529                           plusw2	equ	0xFDB
 19530                           fsr2h	equ	0xFDA
 19531                           fsr2l	equ	0xFD9
 19532                           status	equ	0xFD8
 19533                           
 19534 ;; *************** function _caltime_to_epoch *****************
 19535 ;; Defined at:
 19536 ;;		line 179 in file "../My_library/My_RTCC.c"
 19537 ;; Parameters:    Size  Location     Type
 19538 ;;  tm              2   25[BANK0 ] PTR struct .
 19539 ;;		 -> now(14), 
 19540 ;; Auto vars:     Size  Location     Type
 19541 ;;  month           1   37[BANK0 ] unsigned char 
 19542 ;;  month           1   32[BANK0 ] unsigned char 
 19543 ;;  year            1   31[BANK0 ] unsigned char 
 19544 ;;  epoch           4   33[BANK0 ] unsigned long 
 19545 ;; Return value:  Size  Location     Type
 19546 ;;		None               void
 19547 ;; Registers used:
 19548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19549 ;; Tracked objects:
 19550 ;;		On entry : F/0
 19551 ;;		On exit  : F/0
 19552 ;;		Unchanged: 0/0
 19553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19555 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19557 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19558 ;;Total ram usage:       13 bytes
 19559 ;; Hardware stack levels used:    1
 19560 ;; Hardware stack levels required when called:   13
 19561 ;; This function calls:
 19562 ;;		___lmul
 19563 ;;		_month_length
 19564 ;; This function is called by:
 19565 ;;		_RTCC_from_RTCC
 19566 ;;		_RTCC_from_caltime
 19567 ;; This function uses a non-reentrant model
 19568 ;;
 19569                           
 19570                           	psect	text91
 19571  01153C                     __ptext91:
 19572                           	opt stack 0
 19573  01153C                     _caltime_to_epoch:
 19574                           	opt stack 11
 19575                           
 19576                           ; BSR set to: 0
 19577                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 19578                           
 19579                           ; BSR set to: 0
 19580                           ;incstack = 0
 19581  01153C  6B81               	clrf	caltime_to_epoch@epoch& (0+255),b
 19582  01153E  6B82               	clrf	(caltime_to_epoch@epoch+1)& (0+255),b
 19583  011540  6B83               	clrf	(caltime_to_epoch@epoch+2)& (0+255),b
 19584  011542  6B84               	clrf	(caltime_to_epoch@epoch+3)& (0+255),b
 19585                           
 19586                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 19587  011544  6B7F               	clrf	caltime_to_epoch@year& (0+255),b
 19588  011546  D011               	goto	l9680
 19589  011548                     l9666:
 19590                           
 19591                           ; BSR set to: 0
 19592                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 19593  011548  0E01               	movlw	1
 19594  01154A  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 19595  01154C                     l9672:
 19596                           
 19597                           ; BSR set to: 0
 19598                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 19599  01154C  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 19600  011550  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 19601  011552  EC3C  F09A         	call	_month_length
 19602  011556  EC66  F088         	call	PL8	;call to abstracted procedure
 19603  01155A  ECE6  F09D         	call	___lmul	;wreg free
 19604  01155E  D871               	call	PL50	;call to abstracted procedure
 19605                           
 19606                           ; BSR set to: 0
 19607  011560  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 19608                           
 19609                           ; BSR set to: 0
 19610  011562  0E0C               	movlw	12
 19611  011564  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 19612  011566  D7F2               	goto	l9672
 19613                           
 19614                           ; BSR set to: 0
 19615  011568  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 19616  01156A                     l9680:
 19617                           
 19618                           ; BSR set to: 0
 19619  01156A  D879               	call	PL248	;call to abstracted procedure
 19620  01156C  D87C               	call	PL320	;call to abstracted procedure
 19621  01156E  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 19622  011570  E3EB               	bnc	l9666
 19623                           
 19624                           ; BSR set to: 0
 19625                           ;My_RTCC.c: 184: }
 19626                           ;My_RTCC.c: 185: }
 19627                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 19628  011572  0E01               	movlw	1
 19629  011574  6F80               	movwf	caltime_to_epoch@month_3500& (0+255),b
 19630  011576  D00C               	goto	l9688
 19631  011578                     l9684:
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 19635  011578  C080  F066         	movff	caltime_to_epoch@month_3500,month_length@month
 19636  01157C  D870               	call	PL248	;call to abstracted procedure
 19637  01157E  D86A               	call	PL172	;call to abstracted procedure
 19638  011580  EC3C  F09A         	call	_month_length
 19639  011584  EC66  F088         	call	PL8	;call to abstracted procedure
 19640  011588  ECE6  F09D         	call	___lmul	;wreg free
 19641  01158C  D85A               	call	PL50	;call to abstracted procedure
 19642                           
 19643                           ; BSR set to: 0
 19644  01158E  2B80               	incf	caltime_to_epoch@month_3500& (0+255),f,b
 19645  011590                     l9688:
 19646                           
 19647                           ; BSR set to: 0
 19648  011590  EE20 F009          	lfsr	2,9
 19649  011594  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19650  011596  D867               	call	PL320	;call to abstracted procedure
 19651  011598  5D80               	subwf	caltime_to_epoch@month_3500& (0+255),w,b
 19652  01159A  E3EE               	bnc	l9684
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;My_RTCC.c: 188: }
 19656                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 19657  01159C  697B               	setf	??_caltime_to_epoch& (0+255),b
 19658  01159E  697C               	setf	(??_caltime_to_epoch+1)& (0+255),b
 19659  0115A0  EE20 F008          	lfsr	2,8
 19660  0115A4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19661  0115A6  D856               	call	PL172	;call to abstracted procedure
 19662  0115A8  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 19663  0115AA  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 19664  0115AC  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 19665  0115AE  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 19666  0115B0  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 19667  0115B2  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 19668  0115B4  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 19669  0115B8  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 19670  0115BC  0E00               	movlw	0
 19671  0115BE  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 19672  0115C0  0EFF               	movlw	-1
 19673  0115C2  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 19674  0115C4  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 19675  0115C6  0E80               	movlw	128
 19676  0115C8  6F71               	movwf	___lmul@multiplicand& (0+255),b
 19677  0115CA  0E51               	movlw	81
 19678  0115CC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19679  0115CE  0E01               	movlw	1
 19680  0115D0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19681  0115D2  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19682  0115D4  ECE6  F09D         	call	___lmul	;wreg free
 19683  0115D8  D834               	call	PL50	;call to abstracted procedure
 19684                           
 19685                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 19686  0115DA  EE20 F006          	lfsr	2,6
 19687  0115DE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19688  0115E0  D839               	call	PL172	;call to abstracted procedure
 19689  0115E2  6F6D               	movwf	___lmul@multiplier& (0+255),b
 19690  0115E4  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 19691  0115E6  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 19692  0115E8  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 19693  0115EA  0E10               	movlw	16
 19694  0115EC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 19695  0115EE  0E0E               	movlw	14
 19696  0115F0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19697  0115F2  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 19698  0115F4  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19699  0115F6  ECE6  F09D         	call	___lmul	;wreg free
 19700  0115FA  D823               	call	PL50	;call to abstracted procedure
 19701                           
 19702                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 19703  0115FC  EE20 F005          	lfsr	2,5
 19704  011600  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19705  011602  D828               	call	PL172	;call to abstracted procedure
 19706  011604  6F6D               	movwf	___lmul@multiplier& (0+255),b
 19707  011606  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 19708  011608  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 19709  01160A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 19710  01160C  0E3C               	movlw	60
 19711  01160E  D830               	call	PL334	;call to abstracted procedure
 19712  011610  ECE6  F09D         	call	___lmul	;wreg free
 19713  011614  D816               	call	PL50	;call to abstracted procedure
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;My_RTCC.c: 192: epoch += tm->ss;
 19717  011616  EE20 F004          	lfsr	2,4
 19718  01161A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19719  01161C  D81B               	call	PL172	;call to abstracted procedure
 19720  01161E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19721  011620  0E00               	movlw	0
 19722  011622  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19723  011624  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19724  011626  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;My_RTCC.c: 194: tm->epoch = epoch;
 19728  011628  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 19729  01162C  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 19730  011630  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 19731  011634  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 19732  011638  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 19733  01163C  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 19734                           
 19735                           ; BSR set to: 0
 19736  011640  0C00               	retlw	0	;funcret
 19737  011642                     __end_of_caltime_to_epoch:
 19738                           	opt stack 0
 19739  011642                     PL50:
 19740                           	opt stack 11
 19741  011642  516D               	movf	?___lmul& (0+255),w,b
 19742  011644  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 19743  011646  516E               	movf	(?___lmul+1)& (0+255),w,b
 19744  011648  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 19745  01164A  516F               	movf	(?___lmul+2)& (0+255),w,b
 19746  01164C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 19747  01164E  5170               	movf	(?___lmul+3)& (0+255),w,b
 19748  011650  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 19749  011652  0012               	return	
 19750  011654                     __end_ofPL50:
 19751                           	opt stack 0
 19752  011654                     PL172:
 19753                           	opt stack 11
 19754  011654  26D9               	addwf	fsr2l,f,c
 19755  011656  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 19756  011658  22DA               	addwfc	fsr2h,f,c
 19757  01165A  50DF               	movf	indf2,w,c
 19758  01165C  0012               	return	
 19759  01165E                     __end_ofPL172:
 19760                           	opt stack 0
 19761  01165E                     PL248:
 19762                           	opt stack 11
 19763  01165E  EE20 F00A          	lfsr	2,10
 19764  011662  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 19765  011664  0012               	return	
 19766  011666                     __end_ofPL248:
 19767                           	opt stack 0
 19768  011666                     PL320:
 19769                           	opt stack 11
 19770  011666  26D9               	addwf	fsr2l,f,c
 19771  011668  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 19772  01166A  22DA               	addwfc	fsr2h,f,c
 19773  01166C  50DE               	movf	postinc2,w,c
 19774  01166E  0012               	return	
 19775  011670                     __end_ofPL320:
 19776                           	opt stack 0
 19777  011670                     PL334:
 19778                           	opt stack 12
 19779  011670  6F71               	movwf	___lmul@multiplicand& (0+255),b
 19780  011672  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 19781  011674  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 19782  011676  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19783  011678  0012               	return	
 19784  01167A                     __end_ofPL334:
 19785                           	opt stack 0
 19786                           tblptru	equ	0xFF8
 19787                           tblptrh	equ	0xFF7
 19788                           tblptrl	equ	0xFF6
 19789                           tablat	equ	0xFF5
 19790                           prodh	equ	0xFF4
 19791                           prodl	equ	0xFF3
 19792                           intcon	equ	0xFF2
 19793                           intcon2	equ	0xFF1
 19794                           postinc0	equ	0xFEE
 19795                           wreg	equ	0xFE8
 19796                           indf1	equ	0xFE7
 19797                           postinc1	equ	0xFE6
 19798                           postdec1	equ	0xFE5
 19799                           fsr1h	equ	0xFE2
 19800                           fsr1l	equ	0xFE1
 19801                           indf2	equ	0xFDF
 19802                           postinc2	equ	0xFDE
 19803                           postdec2	equ	0xFDD
 19804                           plusw2	equ	0xFDB
 19805                           fsr2h	equ	0xFDA
 19806                           fsr2l	equ	0xFD9
 19807                           status	equ	0xFD8
 19808                           
 19809 ;; *************** function _month_length *****************
 19810 ;; Defined at:
 19811 ;;		line 55 in file "../My_library/My_RTCC.c"
 19812 ;; Parameters:    Size  Location     Type
 19813 ;;  year            1    wreg     unsigned char 
 19814 ;;  month           1    6[BANK0 ] unsigned char 
 19815 ;; Auto vars:     Size  Location     Type
 19816 ;;  year            1   11[BANK0 ] unsigned char 
 19817 ;; Return value:  Size  Location     Type
 19818 ;;                  1    wreg      unsigned char 
 19819 ;; Registers used:
 19820 ;;		wreg, status,2, status,0, cstack
 19821 ;; Tracked objects:
 19822 ;;		On entry : D/2
 19823 ;;		On exit  : F/0
 19824 ;;		Unchanged: 0/0
 19825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19826 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19828 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19829 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19830 ;;Total ram usage:        6 bytes
 19831 ;; Hardware stack levels used:    1
 19832 ;; Hardware stack levels required when called:   12
 19833 ;; This function calls:
 19834 ;;		___awmod
 19835 ;;		___lbmod
 19836 ;; This function is called by:
 19837 ;;		_epoch_to_caltime
 19838 ;;		_caltime_to_epoch
 19839 ;;		_RTCC_adjust_time_inc
 19840 ;;		_RTCC_adjust_time_dec
 19841 ;;		_terminal_time
 19842 ;; This function uses a non-reentrant model
 19843 ;;
 19844                           
 19845                           	psect	text92
 19846  013478                     __ptext92:
 19847                           	opt stack 0
 19848  013478                     _month_length:
 19849                           	opt stack 11
 19850                           
 19851                           ; BSR set to: 0
 19852                           ;incstack = 0
 19853                           ;month_length@year stored from wreg
 19854  013478  0100               	movlb	0	; () banked
 19855  01347A  6F6B               	movwf	month_length@year& (0+255),b
 19856                           
 19857                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 19858  01347C  0E02               	movlw	2
 19859  01347E  1966               	xorwf	month_length@month& (0+255),w,b
 19860  013480  E12A               	bnz	l9566
 19861                           
 19862                           ; BSR set to: 0
 19863  013482  0E64               	movlw	100
 19864  013484  6F60               	movwf	___lbmod@divisor& (0+255),b
 19865  013486  516B               	movf	month_length@year& (0+255),w,b
 19866  013488  EC6D  F0A1         	call	___lbmod
 19867  01348C  0900               	iorlw	0
 19868  01348E  E103               	bnz	u9660
 19869  013490  6B67               	clrf	??_month_length& (0+255),b
 19870  013492  2B67               	incf	??_month_length& (0+255),f,b
 19871  013494  D002               	goto	u9678
 19872  013496                     u9660:
 19873  013496  0100               	movlb	0	; () banked
 19874  013498  6B67               	clrf	??_month_length& (0+255),b
 19875  01349A                     u9678:
 19876  01349A  C06B  F060         	movff	month_length@year,___awmod@dividend
 19877  01349E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 19878  0134A0  0E01               	movlw	1
 19879  0134A2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 19880  0134A4  0E90               	movlw	144
 19881  0134A6  6F62               	movwf	___awmod@divisor& (0+255),b
 19882  0134A8  EC9C  F09B         	call	___awmod	;wreg free
 19883  0134AC  5160               	movf	?___awmod& (0+255),w,b
 19884  0134AE  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 19885  0134B0  E103               	bnz	u9680
 19886  0134B2  6B68               	clrf	(??_month_length+1)& (0+255),b
 19887  0134B4  2B68               	incf	(??_month_length+1)& (0+255),f,b
 19888  0134B6  D002               	goto	u9698
 19889  0134B8                     u9680:
 19890  0134B8  0100               	movlb	0	; () banked
 19891  0134BA  6B68               	clrf	(??_month_length+1)& (0+255),b
 19892  0134BC                     u9698:
 19893  0134BC  C06B  F069         	movff	month_length@year,??_month_length+2
 19894  0134C0  0E03               	movlw	3
 19895  0134C2  1769               	andwf	(??_month_length+2)& (0+255),f,b
 19896  0134C4  0E01               	movlw	1
 19897  0134C6  A4D8               	btfss	status,2,c
 19898  0134C8  0E00               	movlw	0
 19899  0134CA  2568               	addwf	(??_month_length+1)& (0+255),w,b
 19900  0134CC  6F6A               	movwf	(??_month_length+3)& (0+255),b
 19901  0134CE  5167               	movf	??_month_length& (0+255),w,b
 19902  0134D0  5D6A               	subwf	(??_month_length+3)& (0+255),w,b
 19903  0134D2  0F1C               	addlw	28
 19904  0134D4  0012               	return	
 19905  0134D6                     l9566:
 19906                           
 19907                           ; BSR set to: 0
 19908                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 19909  0134D6  5166               	movf	month_length@month& (0+255),w,b
 19910  0134D8  0B01               	andlw	1
 19911  0134DA  0800               	sublw	0
 19912  0134DC  1966               	xorwf	month_length@month& (0+255),w,b
 19913  0134DE  0B0D               	andlw	13
 19914  0134E0  0A04               	xorlw	4
 19915  0134E2  E103               	bnz	u9720
 19916  0134E4  6B67               	clrf	??_month_length& (0+255),b
 19917  0134E6  2B67               	incf	??_month_length& (0+255),f,b
 19918  0134E8  D002               	goto	u9738
 19919  0134EA                     u9720:
 19920  0134EA  0100               	movlb	0	; () banked
 19921  0134EC  6B67               	clrf	??_month_length& (0+255),b
 19922  0134EE                     u9738:
 19923  0134EE  5167               	movf	??_month_length& (0+255),w,b
 19924  0134F0  081F               	sublw	31
 19925                           
 19926                           ; BSR set to: 0
 19927  0134F2  0012               	return		;funcret
 19928  0134F4                     __end_of_month_length:
 19929                           	opt stack 0
 19930                           tblptru	equ	0xFF8
 19931                           tblptrh	equ	0xFF7
 19932                           tblptrl	equ	0xFF6
 19933                           tablat	equ	0xFF5
 19934                           prodh	equ	0xFF4
 19935                           prodl	equ	0xFF3
 19936                           intcon	equ	0xFF2
 19937                           intcon2	equ	0xFF1
 19938                           postinc0	equ	0xFEE
 19939                           wreg	equ	0xFE8
 19940                           indf1	equ	0xFE7
 19941                           postinc1	equ	0xFE6
 19942                           postdec1	equ	0xFE5
 19943                           fsr1h	equ	0xFE2
 19944                           fsr1l	equ	0xFE1
 19945                           indf2	equ	0xFDF
 19946                           postinc2	equ	0xFDE
 19947                           postdec2	equ	0xFDD
 19948                           plusw2	equ	0xFDB
 19949                           fsr2h	equ	0xFDA
 19950                           fsr2l	equ	0xFD9
 19951                           status	equ	0xFD8
 19952                           
 19953 ;; *************** function ___lbmod *****************
 19954 ;; Defined at:
 19955 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
 19956 ;; Parameters:    Size  Location     Type
 19957 ;;  dividend        1    wreg     unsigned char 
 19958 ;;  divisor         1    0[BANK0 ] unsigned char 
 19959 ;; Auto vars:     Size  Location     Type
 19960 ;;  dividend        1    1[BANK0 ] unsigned char 
 19961 ;;  rem             1    3[BANK0 ] unsigned char 
 19962 ;;  counter         1    2[BANK0 ] unsigned char 
 19963 ;; Return value:  Size  Location     Type
 19964 ;;                  1    wreg      unsigned char 
 19965 ;; Registers used:
 19966 ;;		wreg, status,2, status,0
 19967 ;; Tracked objects:
 19968 ;;		On entry : F/0
 19969 ;;		On exit  : F/0
 19970 ;;		Unchanged: 0/0
 19971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19972 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19973 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19976 ;;Total ram usage:        4 bytes
 19977 ;; Hardware stack levels used:    1
 19978 ;; Hardware stack levels required when called:   11
 19979 ;; This function calls:
 19980 ;;		Nothing
 19981 ;; This function is called by:
 19982 ;;		_month_length
 19983 ;; This function uses a non-reentrant model
 19984 ;;
 19985                           
 19986                           	psect	text93
 19987  0142DA                     __ptext93:
 19988                           	opt stack 0
 19989  0142DA                     ___lbmod:
 19990                           	opt stack 11
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;incstack = 0
 19994                           ;___lbmod@dividend stored from wreg
 19995  0142DA  6F61               	movwf	___lbmod@dividend& (0+255),b
 19996  0142DC  0E08               	movlw	8
 19997  0142DE  0100               	movlb	0	; () banked
 19998  0142E0  6F62               	movwf	___lbmod@counter& (0+255),b
 19999                           
 20000                           ; BSR set to: 0
 20001  0142E2  6B63               	clrf	___lbmod@rem& (0+255),b
 20002  0142E4                     l9528:
 20003                           
 20004                           ; BSR set to: 0
 20005  0142E4  90D8               	bcf	status,0,c
 20006  0142E6  3561               	rlcf	___lbmod@dividend& (0+255),w,b
 20007  0142E8  3563               	rlcf	___lbmod@rem& (0+255),w,b
 20008  0142EA  6F63               	movwf	___lbmod@rem& (0+255),b
 20009                           
 20010                           ; BSR set to: 0
 20011  0142EC  90D8               	bcf	status,0,c
 20012  0142EE  3761               	rlcf	___lbmod@dividend& (0+255),f,b
 20013                           
 20014                           ; BSR set to: 0
 20015  0142F0  5160               	movf	___lbmod@divisor& (0+255),w,b
 20016  0142F2  5D63               	subwf	___lbmod@rem& (0+255),w,b
 20017  0142F4  E302               	bnc	l9536
 20018                           
 20019                           ; BSR set to: 0
 20020  0142F6  5160               	movf	___lbmod@divisor& (0+255),w,b
 20021  0142F8  5F63               	subwf	___lbmod@rem& (0+255),f,b
 20022  0142FA                     l9536:
 20023                           
 20024                           ; BSR set to: 0
 20025  0142FA  2F62               	decfsz	___lbmod@counter& (0+255),f,b
 20026  0142FC  D7F3               	goto	l9528
 20027                           
 20028                           ; BSR set to: 0
 20029  0142FE  5163               	movf	___lbmod@rem& (0+255),w,b
 20030                           
 20031                           ; BSR set to: 0
 20032  014300  0012               	return		;funcret
 20033  014302                     __end_of___lbmod:
 20034                           	opt stack 0
 20035                           tblptru	equ	0xFF8
 20036                           tblptrh	equ	0xFF7
 20037                           tblptrl	equ	0xFF6
 20038                           tablat	equ	0xFF5
 20039                           prodh	equ	0xFF4
 20040                           prodl	equ	0xFF3
 20041                           intcon	equ	0xFF2
 20042                           intcon2	equ	0xFF1
 20043                           postinc0	equ	0xFEE
 20044                           wreg	equ	0xFE8
 20045                           indf1	equ	0xFE7
 20046                           postinc1	equ	0xFE6
 20047                           postdec1	equ	0xFE5
 20048                           fsr1h	equ	0xFE2
 20049                           fsr1l	equ	0xFE1
 20050                           indf2	equ	0xFDF
 20051                           postinc2	equ	0xFDE
 20052                           postdec2	equ	0xFDD
 20053                           plusw2	equ	0xFDB
 20054                           fsr2h	equ	0xFDA
 20055                           fsr2l	equ	0xFD9
 20056                           status	equ	0xFD8
 20057                           
 20058 ;; *************** function ___awmod *****************
 20059 ;; Defined at:
 20060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 20061 ;; Parameters:    Size  Location     Type
 20062 ;;  dividend        2    0[BANK0 ] int 
 20063 ;;  divisor         2    2[BANK0 ] int 
 20064 ;; Auto vars:     Size  Location     Type
 20065 ;;  sign            1    5[BANK0 ] unsigned char 
 20066 ;;  counter         1    4[BANK0 ] unsigned char 
 20067 ;; Return value:  Size  Location     Type
 20068 ;;                  2    0[BANK0 ] int 
 20069 ;; Registers used:
 20070 ;;		wreg, status,2, status,0
 20071 ;; Tracked objects:
 20072 ;;		On entry : F/0
 20073 ;;		On exit  : F/0
 20074 ;;		Unchanged: 0/0
 20075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20077 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20079 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20080 ;;Total ram usage:        6 bytes
 20081 ;; Hardware stack levels used:    1
 20082 ;; Hardware stack levels required when called:   11
 20083 ;; This function calls:
 20084 ;;		Nothing
 20085 ;; This function is called by:
 20086 ;;		_month_length
 20087 ;; This function uses a non-reentrant model
 20088 ;;
 20089                           
 20090                           	psect	text94
 20091  013738                     __ptext94:
 20092                           	opt stack 0
 20093  013738                     ___awmod:
 20094                           	opt stack 11
 20095                           
 20096                           ; BSR set to: 0
 20097                           
 20098                           ; BSR set to: 0
 20099                           ;incstack = 0
 20100  013738  6B65               	clrf	___awmod@sign& (0+255),b
 20101                           
 20102                           ; BSR set to: 0
 20103  01373A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 20104  01373C  D006               	goto	l9496
 20105                           
 20106                           ; BSR set to: 0
 20107  01373E  6D60               	negf	___awmod@dividend& (0+255),b
 20108  013740  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 20109  013742  B0D8               	btfsc	status,0,c
 20110  013744  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 20111                           
 20112                           ; BSR set to: 0
 20113  013746  0E01               	movlw	1
 20114  013748  6F65               	movwf	___awmod@sign& (0+255),b
 20115  01374A                     l9496:
 20116                           
 20117                           ; BSR set to: 0
 20118  01374A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20119  01374C  D004               	goto	l9500
 20120                           
 20121                           ; BSR set to: 0
 20122  01374E  6D62               	negf	___awmod@divisor& (0+255),b
 20123  013750  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 20124  013752  B0D8               	btfsc	status,0,c
 20125  013754  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 20126  013756                     l9500:
 20127                           
 20128                           ; BSR set to: 0
 20129  013756  5162               	movf	___awmod@divisor& (0+255),w,b
 20130  013758  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 20131  01375A  E017               	bz	l9516
 20132                           
 20133                           ; BSR set to: 0
 20134  01375C  0E01               	movlw	1
 20135  01375E  6F64               	movwf	___awmod@counter& (0+255),b
 20136  013760  D004               	goto	l9506
 20137  013762                     l9504:
 20138                           
 20139                           ; BSR set to: 0
 20140  013762  90D8               	bcf	status,0,c
 20141  013764  3762               	rlcf	___awmod@divisor& (0+255),f,b
 20142  013766  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 20143  013768  2B64               	incf	___awmod@counter& (0+255),f,b
 20144  01376A                     l9506:
 20145                           
 20146                           ; BSR set to: 0
 20147  01376A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20148  01376C  D7FA               	goto	l9504
 20149  01376E                     l9508:
 20150                           
 20151                           ; BSR set to: 0
 20152  01376E  5162               	movf	___awmod@divisor& (0+255),w,b
 20153  013770  5D60               	subwf	___awmod@dividend& (0+255),w,b
 20154  013772  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 20155  013774  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 20156  013776  E304               	bnc	l9512
 20157                           
 20158                           ; BSR set to: 0
 20159  013778  5162               	movf	___awmod@divisor& (0+255),w,b
 20160  01377A  5F60               	subwf	___awmod@dividend& (0+255),f,b
 20161  01377C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 20162  01377E  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 20163  013780                     l9512:
 20164                           
 20165                           ; BSR set to: 0
 20166  013780  90D8               	bcf	status,0,c
 20167  013782  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 20168  013784  3362               	rrcf	___awmod@divisor& (0+255),f,b
 20169                           
 20170                           ; BSR set to: 0
 20171  013786  2F64               	decfsz	___awmod@counter& (0+255),f,b
 20172  013788  D7F2               	goto	l9508
 20173  01378A                     l9516:
 20174                           
 20175                           ; BSR set to: 0
 20176  01378A  5165               	movf	___awmod@sign& (0+255),w,b
 20177  01378C  E004               	bz	l9520
 20178                           
 20179                           ; BSR set to: 0
 20180  01378E  6D60               	negf	___awmod@dividend& (0+255),b
 20181  013790  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 20182  013792  B0D8               	btfsc	status,0,c
 20183  013794  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 20184  013796                     l9520:
 20185                           
 20186                           ; BSR set to: 0
 20187  013796  C060  F060         	movff	___awmod@dividend,?___awmod
 20188  01379A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 20189                           
 20190                           ; BSR set to: 0
 20191  01379E  0012               	return		;funcret
 20192  0137A0                     __end_of___awmod:
 20193                           	opt stack 0
 20194                           tblptru	equ	0xFF8
 20195                           tblptrh	equ	0xFF7
 20196                           tblptrl	equ	0xFF6
 20197                           tablat	equ	0xFF5
 20198                           prodh	equ	0xFF4
 20199                           prodl	equ	0xFF3
 20200                           intcon	equ	0xFF2
 20201                           intcon2	equ	0xFF1
 20202                           postinc0	equ	0xFEE
 20203                           wreg	equ	0xFE8
 20204                           indf1	equ	0xFE7
 20205                           postinc1	equ	0xFE6
 20206                           postdec1	equ	0xFE5
 20207                           fsr1h	equ	0xFE2
 20208                           fsr1l	equ	0xFE1
 20209                           indf2	equ	0xFDF
 20210                           postinc2	equ	0xFDE
 20211                           postdec2	equ	0xFDD
 20212                           plusw2	equ	0xFDB
 20213                           fsr2h	equ	0xFDA
 20214                           fsr2l	equ	0xFD9
 20215                           status	equ	0xFD8
 20216                           
 20217 ;; *************** function ___lmul *****************
 20218 ;; Defined at:
 20219 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 20220 ;; Parameters:    Size  Location     Type
 20221 ;;  multiplier      4   13[BANK0 ] unsigned long 
 20222 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 20223 ;; Auto vars:     Size  Location     Type
 20224 ;;  product         4   21[BANK0 ] unsigned long 
 20225 ;; Return value:  Size  Location     Type
 20226 ;;                  4   13[BANK0 ] unsigned long 
 20227 ;; Registers used:
 20228 ;;		wreg, status,2, status,0
 20229 ;; Tracked objects:
 20230 ;;		On entry : F/0
 20231 ;;		On exit  : F/0
 20232 ;;		Unchanged: 0/0
 20233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20234 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20235 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20237 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20238 ;;Total ram usage:       12 bytes
 20239 ;; Hardware stack levels used:    1
 20240 ;; Hardware stack levels required when called:   11
 20241 ;; This function calls:
 20242 ;;		Nothing
 20243 ;; This function is called by:
 20244 ;;		_get_quot_rem
 20245 ;;		_caltime_to_epoch
 20246 ;;		_RTCC_adjust_time_inc
 20247 ;;		_RTCC_adjust_time_dec
 20248 ;; This function uses a non-reentrant model
 20249 ;;
 20250                           
 20251                           	psect	text95
 20252  013BCC                     __ptext95:
 20253                           	opt stack 0
 20254  013BCC                     ___lmul:
 20255                           	opt stack 12
 20256                           
 20257                           ; BSR set to: 0
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;incstack = 0
 20261  013BCC  6B75               	clrf	___lmul@product& (0+255),b
 20262  013BCE  6B76               	clrf	(___lmul@product+1)& (0+255),b
 20263  013BD0  6B77               	clrf	(___lmul@product+2)& (0+255),b
 20264  013BD2  6B78               	clrf	(___lmul@product+3)& (0+255),b
 20265  013BD4                     l1995:
 20266                           
 20267                           ; BSR set to: 0
 20268  013BD4  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 20269  013BD6  D008               	goto	l9574
 20270                           
 20271                           ; BSR set to: 0
 20272  013BD8  5171               	movf	___lmul@multiplicand& (0+255),w,b
 20273  013BDA  2775               	addwf	___lmul@product& (0+255),f,b
 20274  013BDC  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 20275  013BDE  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 20276  013BE0  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 20277  013BE2  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 20278  013BE4  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 20279  013BE6  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 20280  013BE8                     l9574:
 20281                           
 20282                           ; BSR set to: 0
 20283  013BE8  90D8               	bcf	status,0,c
 20284  013BEA  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 20285  013BEC  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 20286  013BEE  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 20287  013BF0  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 20288                           
 20289                           ; BSR set to: 0
 20290  013BF2  90D8               	bcf	status,0,c
 20291  013BF4  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 20292  013BF6  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 20293  013BF8  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 20294  013BFA  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 20295  013BFC  516D               	movf	___lmul@multiplier& (0+255),w,b
 20296  013BFE  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 20297  013C00  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 20298  013C02  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 20299  013C04  E1E7               	bnz	l1995
 20300                           
 20301                           ; BSR set to: 0
 20302  013C06  C075  F06D         	movff	___lmul@product,?___lmul
 20303  013C0A  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 20304  013C0E  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 20305  013C12  C078  F070         	movff	___lmul@product+3,?___lmul+3
 20306                           
 20307                           ; BSR set to: 0
 20308  013C16  0012               	return		;funcret
 20309  013C18                     __end_of___lmul:
 20310                           	opt stack 0
 20311                           tblptru	equ	0xFF8
 20312                           tblptrh	equ	0xFF7
 20313                           tblptrl	equ	0xFF6
 20314                           tablat	equ	0xFF5
 20315                           prodh	equ	0xFF4
 20316                           prodl	equ	0xFF3
 20317                           intcon	equ	0xFF2
 20318                           intcon2	equ	0xFF1
 20319                           postinc0	equ	0xFEE
 20320                           wreg	equ	0xFE8
 20321                           indf1	equ	0xFE7
 20322                           postinc1	equ	0xFE6
 20323                           postdec1	equ	0xFE5
 20324                           fsr1h	equ	0xFE2
 20325                           fsr1l	equ	0xFE1
 20326                           indf2	equ	0xFDF
 20327                           postinc2	equ	0xFDE
 20328                           postdec2	equ	0xFDD
 20329                           plusw2	equ	0xFDB
 20330                           fsr2h	equ	0xFDA
 20331                           fsr2l	equ	0xFD9
 20332                           status	equ	0xFD8
 20333                           
 20334 ;; *************** function _RTCC_to_caltime *****************
 20335 ;; Defined at:
 20336 ;;		line 89 in file "../My_library/My_RTCC.c"
 20337 ;; Parameters:    Size  Location     Type
 20338 ;;  tm              2    2[BANK0 ] PTR struct .
 20339 ;;		 -> now(14), 
 20340 ;; Auto vars:     Size  Location     Type
 20341 ;;  dumy            1    0        unsigned char 
 20342 ;; Return value:  Size  Location     Type
 20343 ;;		None               void
 20344 ;; Registers used:
 20345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20346 ;; Tracked objects:
 20347 ;;		On entry : F/0
 20348 ;;		On exit  : F/0
 20349 ;;		Unchanged: 0/0
 20350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20354 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20355 ;;Total ram usage:        2 bytes
 20356 ;; Hardware stack levels used:    1
 20357 ;; Hardware stack levels required when called:   12
 20358 ;; This function calls:
 20359 ;;		_x_to_d
 20360 ;; This function is called by:
 20361 ;;		_RTCC_from_RTCC
 20362 ;; This function uses a non-reentrant model
 20363 ;;
 20364                           
 20365                           	psect	text96
 20366  01304A                     __ptext96:
 20367                           	opt stack 0
 20368  01304A                     _RTCC_to_caltime:
 20369                           	opt stack 12
 20370  01304A                     l851:
 20371  01304A  010F               	movlb	15	; () banked
 20372  01304C  B93F               	btfsc	63,4,b	;volatile
 20373  01304E  D7FD               	goto	l851
 20374                           
 20375                           ; BSR set to: 15
 20376                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 20377                           
 20378                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 20379                           
 20380                           ; BSR set to: 15
 20381                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 20382  013050  D83C               	call	PL284	;call to abstracted procedure
 20383  013052  D82E               	call	PL104	;call to abstracted procedure
 20384  013054  EC98  F0A2         	call	_x_to_d
 20385  013058  6EDF               	movwf	indf2,c
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 20389  01305A  010F               	movlb	15	; () banked
 20390  01305C  513B               	movf	59,w,b	;volatile
 20391                           
 20392                           ; BSR set to: 15
 20393                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 20394  01305E  0100               	movlb	0	; () banked
 20395  013060  EE20 F008          	lfsr	2,8
 20396  013064  D825               	call	PL104	;call to abstracted procedure
 20397  013066  EC98  F0A2         	call	_x_to_d
 20398  01306A  6EDF               	movwf	indf2,c
 20399                           
 20400                           ; BSR set to: 0
 20401                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 20402  01306C  EE20 F009          	lfsr	2,9
 20403  013070  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 20404  013072  D825               	call	PL128	;call to abstracted procedure
 20405  013074  EC98  F0A2         	call	_x_to_d
 20406  013078  6EDF               	movwf	indf2,c
 20407                           
 20408                           ; BSR set to: 0
 20409                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 20410  01307A  EE20 F006          	lfsr	2,6
 20411  01307E  D818               	call	PL104	;call to abstracted procedure
 20412  013080  EC98  F0A2         	call	_x_to_d
 20413  013084  6EDF               	movwf	indf2,c
 20414                           
 20415                           ; BSR set to: 0
 20416                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 20417  013086  EE20 F007          	lfsr	2,7
 20418  01308A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 20419  01308C  D818               	call	PL128	;call to abstracted procedure
 20420  01308E  EC98  F0A2         	call	_x_to_d
 20421  013092  6EDF               	movwf	indf2,c
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 20425  013094  EE20 F004          	lfsr	2,4
 20426  013098  D80B               	call	PL104	;call to abstracted procedure
 20427  01309A  EC98  F0A2         	call	_x_to_d
 20428  01309E  6EDF               	movwf	indf2,c
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 20432  0130A0  EE20 F005          	lfsr	2,5
 20433  0130A4  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 20434  0130A6  D80B               	call	PL128	;call to abstracted procedure
 20435  0130A8  EC98  F0A2         	call	_x_to_d
 20436  0130AC  6EDF               	movwf	indf2,c
 20437                           
 20438                           ; BSR set to: 0
 20439  0130AE  0012               	return		;funcret
 20440  0130B0                     __end_of_RTCC_to_caltime:
 20441                           	opt stack 0
 20442  0130B0                     PL104:
 20443                           	opt stack 12
 20444  0130B0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 20445  0130B2  26D9               	addwf	fsr2l,f,c
 20446  0130B4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 20447  0130B6  22DA               	addwfc	fsr2h,f,c
 20448  0130B8  010F               	movlb	15	; () banked
 20449  0130BA  513A               	movf	58,w,b	;volatile
 20450  0130BC  0012               	return	
 20451  0130BE                     __end_ofPL104:
 20452                           	opt stack 0
 20453  0130BE                     PL128:
 20454                           	opt stack 12
 20455  0130BE  26D9               	addwf	fsr2l,f,c
 20456  0130C0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 20457  0130C2  22DA               	addwfc	fsr2h,f,c
 20458  0130C4  010F               	movlb	15	; () banked
 20459  0130C6  513B               	movf	59,w,b	;volatile
 20460  0130C8  0012               	return	
 20461  0130CA                     __end_ofPL128:
 20462                           	opt stack 0
 20463  0130CA                     PL284:
 20464                           	opt stack 12
 20465  0130CA  813F               	bsf	63,0,b	;volatile
 20466  0130CC  833F               	bsf	63,1,b	;volatile
 20467  0130CE  0100               	movlb	0	; () banked
 20468  0130D0  EE20 F00A          	lfsr	2,10
 20469  0130D4  0012               	return	
 20470  0130D6                     __end_ofPL284:
 20471                           	opt stack 0
 20472                           tblptru	equ	0xFF8
 20473                           tblptrh	equ	0xFF7
 20474                           tblptrl	equ	0xFF6
 20475                           tablat	equ	0xFF5
 20476                           prodh	equ	0xFF4
 20477                           prodl	equ	0xFF3
 20478                           intcon	equ	0xFF2
 20479                           intcon2	equ	0xFF1
 20480                           postinc0	equ	0xFEE
 20481                           wreg	equ	0xFE8
 20482                           indf1	equ	0xFE7
 20483                           postinc1	equ	0xFE6
 20484                           postdec1	equ	0xFE5
 20485                           fsr1h	equ	0xFE2
 20486                           fsr1l	equ	0xFE1
 20487                           indf2	equ	0xFDF
 20488                           postinc2	equ	0xFDE
 20489                           postdec2	equ	0xFDD
 20490                           plusw2	equ	0xFDB
 20491                           fsr2h	equ	0xFDA
 20492                           fsr2l	equ	0xFD9
 20493                           status	equ	0xFD8
 20494                           
 20495 ;; *************** function _x_to_d *****************
 20496 ;; Defined at:
 20497 ;;		line 51 in file "../My_library/My_RTCC.c"
 20498 ;; Parameters:    Size  Location     Type
 20499 ;;  hex             1    wreg     unsigned char 
 20500 ;; Auto vars:     Size  Location     Type
 20501 ;;  hex             1    1[BANK0 ] unsigned char 
 20502 ;; Return value:  Size  Location     Type
 20503 ;;                  1    wreg      unsigned char 
 20504 ;; Registers used:
 20505 ;;		wreg, status,2, status,0, prodl, prodh
 20506 ;; Tracked objects:
 20507 ;;		On entry : F/F
 20508 ;;		On exit  : F/0
 20509 ;;		Unchanged: 0/0
 20510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20515 ;;Total ram usage:        2 bytes
 20516 ;; Hardware stack levels used:    1
 20517 ;; Hardware stack levels required when called:   11
 20518 ;; This function calls:
 20519 ;;		Nothing
 20520 ;; This function is called by:
 20521 ;;		_RTCC_to_caltime
 20522 ;; This function uses a non-reentrant model
 20523 ;;
 20524                           
 20525                           	psect	text97
 20526  014530                     __ptext97:
 20527                           	opt stack 0
 20528  014530                     _x_to_d:
 20529                           	opt stack 12
 20530                           
 20531                           ; BSR set to: 0
 20532                           ;incstack = 0
 20533                           ;x_to_d@hex stored from wreg
 20534  014530  0100               	movlb	0	; () banked
 20535  014532  6F61               	movwf	x_to_d@hex& (0+255),b
 20536                           
 20537                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 20538  014534  C061  F060         	movff	x_to_d@hex,??_x_to_d
 20539  014538  0E0F               	movlw	15
 20540  01453A  1760               	andwf	??_x_to_d& (0+255),f,b
 20541  01453C  3961               	swapf	x_to_d@hex& (0+255),w,b
 20542  01453E  0B0F               	andlw	15
 20543  014540  0D0A               	mullw	10
 20544  014542  50F3               	movf	prodl,w,c
 20545  014544  2560               	addwf	??_x_to_d& (0+255),w,b
 20546                           
 20547                           ; BSR set to: 0
 20548  014546  0012               	return		;funcret
 20549  014548                     __end_of_x_to_d:
 20550                           	opt stack 0
 20551                           tblptru	equ	0xFF8
 20552                           tblptrh	equ	0xFF7
 20553                           tblptrl	equ	0xFF6
 20554                           tablat	equ	0xFF5
 20555                           prodh	equ	0xFF4
 20556                           prodl	equ	0xFF3
 20557                           intcon	equ	0xFF2
 20558                           intcon2	equ	0xFF1
 20559                           postinc0	equ	0xFEE
 20560                           wreg	equ	0xFE8
 20561                           indf1	equ	0xFE7
 20562                           postinc1	equ	0xFE6
 20563                           postdec1	equ	0xFE5
 20564                           fsr1h	equ	0xFE2
 20565                           fsr1l	equ	0xFE1
 20566                           indf2	equ	0xFDF
 20567                           postinc2	equ	0xFDE
 20568                           postdec2	equ	0xFDD
 20569                           plusw2	equ	0xFDB
 20570                           fsr2h	equ	0xFDA
 20571                           fsr2l	equ	0xFD9
 20572                           status	equ	0xFD8
 20573                           
 20574 ;; *************** function _ISR *****************
 20575 ;; Defined at:
 20576 ;;		line 49 in file "main.c"
 20577 ;; Parameters:    Size  Location     Type
 20578 ;;		None
 20579 ;; Auto vars:     Size  Location     Type
 20580 ;;		None
 20581 ;; Return value:  Size  Location     Type
 20582 ;;		None               void
 20583 ;; Registers used:
 20584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20585 ;; Tracked objects:
 20586 ;;		On entry : 0/0
 20587 ;;		On exit  : 0/0
 20588 ;;		Unchanged: 0/0
 20589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20592 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20593 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20594 ;;Total ram usage:       10 bytes
 20595 ;; Hardware stack levels used:    1
 20596 ;; Hardware stack levels required when called:   10
 20597 ;; This function calls:
 20598 ;;		_LED_indicator
 20599 ;;		_USB_ISR
 20600 ;;		_millis_timer
 20601 ;; This function is called by:
 20602 ;;		Interrupt level 2
 20603 ;; This function uses a non-reentrant model
 20604 ;;
 20605                           
 20606                           	psect	intcode
 20607  000008                     __pintcode:
 20608                           	opt stack 0
 20609  000008                     _ISR:
 20610                           	opt stack 11
 20611                           
 20612                           ; BSR set to: 0
 20613                           ;incstack = 0
 20614  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20615  00000A  CFE1 F04A          	movff	fsr1l,??_ISR
 20616  00000E  CFE2 F04B          	movff	fsr1h,??_ISR+1
 20617  000012  CFD9 F04C          	movff	fsr2l,??_ISR+2
 20618  000016  CFDA F04D          	movff	fsr2h,??_ISR+3
 20619  00001A  CFF3 F04E          	movff	prodl,??_ISR+4
 20620  00001E  CFF4 F04F          	movff	prodh,??_ISR+5
 20621  000022  CFF6 F050          	movff	tblptrl,??_ISR+6
 20622  000026  CFF7 F051          	movff	tblptrh,??_ISR+7
 20623  00002A  CFF8 F052          	movff	tblptru,??_ISR+8
 20624  00002E  CFF5 F053          	movff	tablat,??_ISR+9
 20625                           
 20626                           ;main.c: 50: USB_ISR();
 20627  000032  ECD0  F0A2         	call	_USB_ISR	;wreg free
 20628                           
 20629                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 20630  000036  B4F2               	btfsc	intcon,2,c	;volatile
 20631  000038  AAF2               	btfss	intcon,5,c	;volatile
 20632  00003A  D003               	goto	i2l9350
 20633                           
 20634                           ;main.c: 52: INTCONbits.T0IF = 0;
 20635  00003C  94F2               	bcf	intcon,2,c	;volatile
 20636                           
 20637                           ;main.c: 53: millis_timer();
 20638  00003E  ECBA  F0A2         	call	_millis_timer	;wreg free
 20639  000042                     i2l9350:
 20640                           
 20641                           ;main.c: 54: }
 20642                           ;main.c: 55: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 20643  000042  B09E               	btfsc	3998,0,c	;volatile
 20644  000044  A09D               	btfss	3997,0,c	;volatile
 20645  000046  D015               	goto	i2l9366
 20646                           
 20647                           ;main.c: 56: PIR1bits.TMR1IF = 0;
 20648  000048  909E               	bcf	3998,0,c	;volatile
 20649                           
 20650                           ;main.c: 57: TMR1H = 0xC0;
 20651  00004A  0EC0               	movlw	192
 20652  00004C  6ECF               	movwf	4047,c	;volatile
 20653                           
 20654                           ;main.c: 58: cut_time_flag = 1;
 20655  00004E  0E01               	movlw	1
 20656  000050  0101               	movlb	1	; () banked
 20657  000052  6F2D               	movwf	_cut_time_flag& (0+255),b
 20658                           
 20659                           ;main.c: 59: static uint8_t cnt_t1 = 0;
 20660                           ;main.c: 60: if (cnt_t1) {
 20661  000054  5122               	movf	ISR@cnt_t1& (0+255),w,b
 20662  000056  E002               	bz	i2l9360
 20663                           
 20664                           ; BSR set to: 1
 20665                           ;main.c: 61: cnt_t1 = 0;
 20666  000058  6B22               	clrf	ISR@cnt_t1& (0+255),b
 20667                           
 20668                           ;main.c: 62: } else {
 20669  00005A  D00B               	goto	i2l9366
 20670  00005C                     i2l9360:
 20671                           
 20672                           ; BSR set to: 1
 20673                           ;main.c: 63: cnt_t1 = 1;
 20674  00005C  0E01               	movlw	1
 20675  00005E  6F22               	movwf	ISR@cnt_t1& (0+255),b
 20676                           
 20677                           ;main.c: 64: terminal_data_out_flag = 1;
 20678  000060  6F34               	movwf	_terminal_data_out_flag& (0+255),b
 20679                           
 20680                           ;main.c: 65: integrate_flag = 1;
 20681  000062  6F30               	movwf	_integrate_flag& (0+255),b
 20682                           
 20683                           ; BSR set to: 1
 20684                           ;main.c: 66: if (print_item == PRINT_DATA)display_flag = 1;
 20685  000064  0E02               	movlw	2
 20686  000066  0100               	movlb	0	; () banked
 20687  000068  19EC               	xorwf	_print_item& (0+255),w,b
 20688  00006A  E103               	bnz	i2l9366
 20689                           
 20690                           ; BSR set to: 0
 20691  00006C  0E01               	movlw	1
 20692  00006E  0101               	movlb	1	; () banked
 20693  000070  6F2F               	movwf	_display_flag& (0+255),b
 20694  000072                     i2l9366:
 20695                           
 20696                           ;main.c: 67: }
 20697                           ;main.c: 68: }
 20698                           ;main.c: 69: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 20699  000072  B2A1               	btfsc	4001,1,c	;volatile
 20700  000074  A2A0               	btfss	4000,1,c	;volatile
 20701  000076  D00C               	goto	i2l1754
 20702                           
 20703                           ;main.c: 70: PIR2bits.TMR3IF = 0;
 20704  000078  92A1               	bcf	4001,1,c	;volatile
 20705                           
 20706                           ;main.c: 71: ctmu_sampling_flag = 1;
 20707  00007A  0E01               	movlw	1
 20708  00007C  0101               	movlb	1	; () banked
 20709  00007E  6F2C               	movwf	_ctmu_sampling_flag& (0+255),b
 20710                           
 20711                           ;main.c: 72: static uint8_t cnt;
 20712                           ;main.c: 73: if (cnt) {
 20713  000080  5121               	movf	ISR@cnt& (0+255),w,b
 20714  000082  E002               	bz	i2l9376
 20715                           
 20716                           ; BSR set to: 1
 20717                           ;main.c: 74: cnt--;
 20718  000084  0721               	decf	ISR@cnt& (0+255),f,b
 20719                           
 20720                           ;main.c: 75: } else {
 20721  000086  D004               	goto	i2l1754
 20722  000088                     i2l9376:
 20723                           
 20724                           ; BSR set to: 1
 20725                           ;main.c: 76: cnt = 8;
 20726  000088  0E08               	movlw	8
 20727  00008A  6F21               	movwf	ISR@cnt& (0+255),b
 20728                           
 20729                           ; BSR set to: 1
 20730                           ;main.c: 77: LED_indicator();
 20731  00008C  ECDA  F091         	call	_LED_indicator	;wreg free
 20732  000090                     i2l1754:
 20733  000090  C053  FFF5         	movff	??_ISR+9,tablat
 20734  000094  C052  FFF8         	movff	??_ISR+8,tblptru
 20735  000098  C051  FFF7         	movff	??_ISR+7,tblptrh
 20736  00009C  C050  FFF6         	movff	??_ISR+6,tblptrl
 20737  0000A0  C04F  FFF4         	movff	??_ISR+5,prodh
 20738  0000A4  C04E  FFF3         	movff	??_ISR+4,prodl
 20739  0000A8  C04D  FFDA         	movff	??_ISR+3,fsr2h
 20740  0000AC  C04C  FFD9         	movff	??_ISR+2,fsr2l
 20741  0000B0  C04B  FFE2         	movff	??_ISR+1,fsr1h
 20742  0000B4  C04A  FFE1         	movff	??_ISR,fsr1l
 20743  0000B8  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20744  0000BA  0011               	retfie		f
 20745  0000BC                     __end_of_ISR:
 20746                           	opt stack 0
 20747                           tblptru	equ	0xFF8
 20748                           tblptrh	equ	0xFF7
 20749                           tblptrl	equ	0xFF6
 20750                           tablat	equ	0xFF5
 20751                           prodh	equ	0xFF4
 20752                           prodl	equ	0xFF3
 20753                           intcon	equ	0xFF2
 20754                           intcon2	equ	0xFF1
 20755                           postinc0	equ	0xFEE
 20756                           wreg	equ	0xFE8
 20757                           indf1	equ	0xFE7
 20758                           postinc1	equ	0xFE6
 20759                           postdec1	equ	0xFE5
 20760                           fsr1h	equ	0xFE2
 20761                           fsr1l	equ	0xFE1
 20762                           indf2	equ	0xFDF
 20763                           postinc2	equ	0xFDE
 20764                           postdec2	equ	0xFDD
 20765                           plusw2	equ	0xFDB
 20766                           fsr2h	equ	0xFDA
 20767                           fsr2l	equ	0xFD9
 20768                           status	equ	0xFD8
 20769                           
 20770 ;; *************** function _millis_timer *****************
 20771 ;; Defined at:
 20772 ;;		line 219 in file "../My_library/My_PIC.c"
 20773 ;; Parameters:    Size  Location     Type
 20774 ;;		None
 20775 ;; Auto vars:     Size  Location     Type
 20776 ;;		None
 20777 ;; Return value:  Size  Location     Type
 20778 ;;		None               void
 20779 ;; Registers used:
 20780 ;;		wreg, status,2, status,0
 20781 ;; Tracked objects:
 20782 ;;		On entry : 0/0
 20783 ;;		On exit  : F/1
 20784 ;;		Unchanged: 0/0
 20785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20790 ;;Total ram usage:        0 bytes
 20791 ;; Hardware stack levels used:    1
 20792 ;; This function calls:
 20793 ;;		Nothing
 20794 ;; This function is called by:
 20795 ;;		_ISR
 20796 ;; This function uses a non-reentrant model
 20797 ;;
 20798                           
 20799                           	psect	text99
 20800  014574                     __ptext99:
 20801                           	opt stack 0
 20802  014574                     _millis_timer:
 20803                           	opt stack 20
 20804                           
 20805                           ;My_PIC.c: 220: static uint16_t cnt;
 20806                           ;My_PIC.c: 221: if (cnt) {
 20807                           
 20808                           ;incstack = 0
 20809  014574  0101               	movlb	1	; () banked
 20810  014576  511F               	movf	millis_timer@cnt& (0+255),w,b
 20811  014578  1120               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 20812  01457A  E001               	bz	i2l9020
 20813  01457C  0012               	return	
 20814  01457E                     i2l9020:
 20815                           
 20816                           ; BSR set to: 1
 20817                           ;My_PIC.c: 225: ms++;
 20818  01457E  6B20               	clrf	(millis_timer@cnt+1)& (0+255),b
 20819  014580  0E2F               	movlw	47
 20820  014582  6F1F               	movwf	millis_timer@cnt& (0+255),b
 20821                           
 20822                           ; BSR set to: 1
 20823  014584  0C2F               	retlw	47	;funcret
 20824  014586                     __end_of_millis_timer:
 20825                           	opt stack 0
 20826                           tblptru	equ	0xFF8
 20827                           tblptrh	equ	0xFF7
 20828                           tblptrl	equ	0xFF6
 20829                           tablat	equ	0xFF5
 20830                           prodh	equ	0xFF4
 20831                           prodl	equ	0xFF3
 20832                           intcon	equ	0xFF2
 20833                           intcon2	equ	0xFF1
 20834                           postinc0	equ	0xFEE
 20835                           wreg	equ	0xFE8
 20836                           indf1	equ	0xFE7
 20837                           postinc1	equ	0xFE6
 20838                           postdec1	equ	0xFE5
 20839                           fsr1h	equ	0xFE2
 20840                           fsr1l	equ	0xFE1
 20841                           indf2	equ	0xFDF
 20842                           postinc2	equ	0xFDE
 20843                           postdec2	equ	0xFDD
 20844                           plusw2	equ	0xFDB
 20845                           fsr2h	equ	0xFDA
 20846                           fsr2l	equ	0xFD9
 20847                           status	equ	0xFD8
 20848                           
 20849 ;; *************** function _USB_ISR *****************
 20850 ;; Defined at:
 20851 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;		None
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;		None
 20856 ;; Return value:  Size  Location     Type
 20857 ;;		None               void
 20858 ;; Registers used:
 20859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20869 ;;Total ram usage:        0 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:    9
 20872 ;; This function calls:
 20873 ;;		_USBDeviceTasks
 20874 ;; This function is called by:
 20875 ;;		_ISR
 20876 ;; This function uses a non-reentrant model
 20877 ;;
 20878                           
 20879                           	psect	text100
 20880  0145A0                     __ptext100:
 20881                           	opt stack 0
 20882  0145A0                     _USB_ISR:
 20883                           	opt stack 11
 20884                           
 20885                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 20886                           
 20887                           ; BSR set to: 1
 20888                           ;incstack = 0
 20889  0145A0  EFDB  F08B         	goto	_USBDeviceTasks	;wreg free
 20890  0145A4                     __end_of_USB_ISR:
 20891                           	opt stack 0
 20892                           tblptru	equ	0xFF8
 20893                           tblptrh	equ	0xFF7
 20894                           tblptrl	equ	0xFF6
 20895                           tablat	equ	0xFF5
 20896                           prodh	equ	0xFF4
 20897                           prodl	equ	0xFF3
 20898                           intcon	equ	0xFF2
 20899                           intcon2	equ	0xFF1
 20900                           postinc0	equ	0xFEE
 20901                           wreg	equ	0xFE8
 20902                           indf1	equ	0xFE7
 20903                           postinc1	equ	0xFE6
 20904                           postdec1	equ	0xFE5
 20905                           fsr1h	equ	0xFE2
 20906                           fsr1l	equ	0xFE1
 20907                           indf2	equ	0xFDF
 20908                           postinc2	equ	0xFDE
 20909                           postdec2	equ	0xFDD
 20910                           plusw2	equ	0xFDB
 20911                           fsr2h	equ	0xFDA
 20912                           fsr2l	equ	0xFD9
 20913                           status	equ	0xFD8
 20914                           
 20915 ;; *************** function _USBDeviceTasks *****************
 20916 ;; Defined at:
 20917 ;;		line 489 in file "../My_library/usb/usb_device.c"
 20918 ;; Parameters:    Size  Location     Type
 20919 ;;		None
 20920 ;; Auto vars:     Size  Location     Type
 20921 ;;  i               1   30[COMRAM] unsigned char 
 20922 ;; Return value:  Size  Location     Type
 20923 ;;		None               void
 20924 ;; Registers used:
 20925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20926 ;; Tracked objects:
 20927 ;;		On entry : 0/0
 20928 ;;		On exit  : 0/0
 20929 ;;		Unchanged: 0/0
 20930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20935 ;;Total ram usage:        1 bytes
 20936 ;; Hardware stack levels used:    1
 20937 ;; Hardware stack levels required when called:    8
 20938 ;; This function calls:
 20939 ;;		_USBCtrlEPAllowStatusStage
 20940 ;;		_USBCtrlEPService
 20941 ;;		_USBStallHandler
 20942 ;;		_USBSuspend
 20943 ;;		_USBWakeFromSuspend
 20944 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20945 ;;		i2_USBDeviceInit
 20946 ;; This function is called by:
 20947 ;;		_USB_ISR
 20948 ;; This function uses a non-reentrant model
 20949 ;;
 20950                           
 20951                           	psect	text101
 20952  0117B6                     __ptext101:
 20953                           	opt stack 0
 20954  0117B6                     _USBDeviceTasks:
 20955                           	opt stack 11
 20956                           
 20957                           ;usb_device.c: 491: uint8_t i;
 20958                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 20959                           
 20960                           ;incstack = 0
 20961  0117B6  041C               	decf	_USBDeviceState,w,c	;volatile
 20962  0117B8  E108               	bnz	i2l8368
 20963                           
 20964                           ;usb_device.c: 603: {
 20965                           ;usb_device.c: 613: if(!UCONbits.SE0)
 20966  0117BA  BA65               	btfsc	3941,5,c	;volatile
 20967  0117BC  D006               	goto	i2l8368
 20968                           
 20969                           ;usb_device.c: 614: {
 20970                           ;usb_device.c: 615: {UIR = 0;};
 20971  0117BE  6A62               	clrf	3938,c	;volatile
 20972                           
 20973                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 20974  0117C0  010F               	movlb	15	; () banked
 20975  0117C2  8136               	bsf	54,0,b	;volatile
 20976                           
 20977                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 20978  0117C4  8936               	bsf	54,4,b	;volatile
 20979                           
 20980                           ; BSR set to: 15
 20981                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 20982  0117C6  0E02               	movlw	2
 20983  0117C8  6E1C               	movwf	_USBDeviceState,c	;volatile
 20984  0117CA                     i2l8368:
 20985                           
 20986                           ;usb_device.c: 622: }
 20987                           ;usb_device.c: 623: }
 20988                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 20989  0117CA  A462               	btfss	3938,2,c	;volatile
 20990  0117CC  D006               	goto	i2l8376
 20991  0117CE  010F               	movlb	15	; () banked
 20992  0117D0  A536               	btfss	54,2,b	;volatile
 20993  0117D2  D003               	goto	i2l8376
 20994                           
 20995                           ; BSR set to: 15
 20996                           ;usb_device.c: 640: {
 20997                           ;usb_device.c: 641: (UIR &= 0xFB);
 20998  0117D4  9462               	bcf	3938,2,c	;volatile
 20999                           
 21000                           ; BSR set to: 15
 21001                           ;usb_device.c: 645: USBWakeFromSuspend();
 21002  0117D6  EC2B  F0A2         	call	_USBWakeFromSuspend	;wreg free
 21003  0117DA                     i2l8376:
 21004                           
 21005                           ;usb_device.c: 647: }
 21006                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 21007  0117DA  A265               	btfss	3941,1,c	;volatile
 21008  0117DC  D002               	goto	i2l158
 21009                           
 21010                           ;usb_device.c: 653: {
 21011                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 21012  0117DE  98A1               	bcf	4001,4,c	;volatile
 21013                           
 21014                           ;usb_device.c: 655: return;
 21015  0117E0  0012               	return	
 21016  0117E2                     i2l158:
 21017                           
 21018                           ;usb_device.c: 656: }
 21019                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 21020  0117E2  A062               	btfss	3938,0,c	;volatile
 21021  0117E4  D009               	goto	i2l8390
 21022  0117E6  010F               	movlb	15	; () banked
 21023  0117E8  A136               	btfss	54,0,b	;volatile
 21024  0117EA  D006               	goto	i2l8390
 21025                           
 21026                           ; BSR set to: 15
 21027                           ;usb_device.c: 669: {
 21028                           ;usb_device.c: 670: USBDeviceInit();
 21029  0117EC  ECF1  F08F         	call	i2_USBDeviceInit	;wreg free
 21030                           
 21031                           ; BSR set to: 13
 21032                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 21033  0117F0  88A0               	bsf	4000,4,c	;volatile
 21034                           
 21035                           ; BSR set to: 13
 21036                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 21037  0117F2  0E04               	movlw	4
 21038  0117F4  6E1C               	movwf	_USBDeviceState,c	;volatile
 21039                           
 21040                           ; BSR set to: 13
 21041                           ;usb_device.c: 686: (UIR &= 0xFE);
 21042  0117F6  9062               	bcf	3938,0,c	;volatile
 21043  0117F8                     i2l8390:
 21044                           
 21045                           ;usb_device.c: 687: }
 21046                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 21047  0117F8  A862               	btfss	3938,4,c	;volatile
 21048  0117FA  D006               	goto	i2l8398
 21049  0117FC  010F               	movlb	15	; () banked
 21050  0117FE  A936               	btfss	54,4,b	;volatile
 21051  011800  D003               	goto	i2l8398
 21052                           
 21053                           ; BSR set to: 15
 21054                           ;usb_device.c: 693: {
 21055                           ;usb_device.c: 698: USBSuspend();
 21056  011802  ECD9  F0A1         	call	_USBSuspend	;wreg free
 21057                           
 21058                           ;usb_device.c: 701: (UIR &= 0xEF);
 21059  011806  9862               	bcf	3938,4,c	;volatile
 21060  011808                     i2l8398:
 21061                           
 21062                           ;usb_device.c: 702: }
 21063                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 21064  011808  AC62               	btfss	3938,6,c	;volatile
 21065  01180A  D012               	goto	i2l8414
 21066                           
 21067                           ;usb_device.c: 705: {
 21068                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 21069  01180C  010F               	movlb	15	; () banked
 21070  01180E  AD36               	btfss	54,6,b	;volatile
 21071  011810  D007               	goto	i2l8404
 21072                           
 21073                           ; BSR set to: 15
 21074                           ;usb_device.c: 707: {
 21075                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 21076  011812  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21077  011814  0E73               	movlw	115
 21078  011816  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21079  011818  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21080  01181A  D855               	call	PL268	;call to abstracted procedure
 21081  01181C  ECEA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21082  011820                     i2l8404:
 21083                           
 21084                           ;usb_device.c: 709: }
 21085                           ;usb_device.c: 710: (UIR &= 0xBF);
 21086  011820  9C62               	bcf	3938,6,c	;volatile
 21087                           
 21088                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 21089  011822  501D               	movf	_USBStatusStageTimeoutCounter,w,c
 21090  011824  E001               	bz	i2l8410
 21091                           
 21092                           ;usb_device.c: 736: {
 21093                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 21094  011826  061D               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 21095  011828                     i2l8410:
 21096                           
 21097                           ;usb_device.c: 738: }
 21098                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 21099  011828  501D               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 21100  01182A  E102               	bnz	i2l8414
 21101                           
 21102                           ;usb_device.c: 745: {
 21103                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 21104  01182C  ECFC  F099         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21105  011830                     i2l8414:
 21106                           
 21107                           ;usb_device.c: 747: }
 21108                           ;usb_device.c: 749: }
 21109                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 21110  011830  AA62               	btfss	3938,5,c	;volatile
 21111  011832  D004               	goto	i2l8420
 21112  011834  010F               	movlb	15	; () banked
 21113  011836  BB36               	btfsc	54,5,b	;volatile
 21114                           
 21115                           ; BSR set to: 15
 21116                           ;usb_device.c: 752: {
 21117                           ;usb_device.c: 753: USBStallHandler();
 21118  011838  ECEA  F0A0         	call	_USBStallHandler	;wreg free
 21119  01183C                     i2l8420:
 21120                           
 21121                           ;usb_device.c: 754: }
 21122                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 21123  01183C  A262               	btfss	3938,1,c	;volatile
 21124  01183E  D00B               	goto	i2l8428
 21125  011840  010F               	movlb	15	; () banked
 21126  011842  A336               	btfss	54,1,b	;volatile
 21127  011844  D008               	goto	i2l8428
 21128                           
 21129                           ; BSR set to: 15
 21130                           ;usb_device.c: 757: {
 21131                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 21132  011846  0E7F               	movlw	127
 21133  011848  6E38               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21134  01184A  6837               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21135  01184C  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21136  01184E  D83B               	call	PL268	;call to abstracted procedure
 21137  011850  ECEA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21138                           
 21139                           ;usb_device.c: 759: {UEIR = 0;};
 21140  011854  6A63               	clrf	3939,c	;volatile
 21141  011856                     i2l8428:
 21142                           
 21143                           ;usb_device.c: 767: }
 21144                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 21145  011856  0E04               	movlw	4
 21146  011858  601C               	cpfslt	_USBDeviceState,c	;volatile
 21147  01185A  D002               	goto	i2l168
 21148                           
 21149                           ;usb_device.c: 775: {
 21150                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 21151  01185C  98A1               	bcf	4001,4,c	;volatile
 21152                           
 21153                           ;usb_device.c: 777: return;
 21154  01185E  0C04               	retlw	4
 21155  011860                     i2l168:
 21156                           
 21157                           ;usb_device.c: 778: }
 21158                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 21159  011860  010F               	movlb	15	; () banked
 21160  011862  A736               	btfss	54,3,b	;volatile
 21161  011864  D02E               	goto	i2l169
 21162                           
 21163                           ; BSR set to: 15
 21164                           ;usb_device.c: 784: {
 21165                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 21166  011866  6A49               	clrf	USBDeviceTasks@i,c
 21167  011868                     i2l170:
 21168                           
 21169                           ;usb_device.c: 786: {
 21170                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 21171  011868  A662               	btfss	3938,3,c	;volatile
 21172  01186A  D02B               	goto	i2l169
 21173                           
 21174                           ;usb_device.c: 788: {
 21175                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 21176  01186C  CF64 F02A          	movff	3940,_USTATcopy	;volatile
 21177                           
 21178                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 21179  011870  302A               	rrcf	_USTATcopy,w,c	;volatile
 21180  011872  32E8               	rrcf	wreg,f,c
 21181  011874  32E8               	rrcf	wreg,f,c
 21182  011876  0B0F               	andlw	15
 21183  011878  6E22               	movwf	_endpoint_number,c	;volatile
 21184                           
 21185                           ;usb_device.c: 793: (UIR &= 0xF7);
 21186  01187A  9662               	bcf	3938,3,c	;volatile
 21187                           
 21188                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 21189  01187C  B42A               	btfsc	_USTATcopy,2,c	;volatile
 21190  01187E  D006               	goto	i2l8448
 21191                           
 21192                           ;usb_device.c: 799: {
 21193                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 21194  011880  0E0C               	movlw	low _ep_data_out
 21195  011882  2422               	addwf	_endpoint_number,w,c	;volatile
 21196  011884  6ED9               	movwf	fsr2l,c
 21197  011886  6ADA               	clrf	fsr2h,c
 21198  011888  0E01               	movlw	high _ep_data_out
 21199  01188A  D005               	goto	L14
 21200  01188C                     i2l8448:
 21201                           
 21202                           ;usb_device.c: 802: else
 21203                           ;usb_device.c: 803: {
 21204                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 21205  01188C  0E09               	movlw	low _ep_data_in
 21206  01188E  2422               	addwf	_endpoint_number,w,c	;volatile
 21207  011890  6ED9               	movwf	fsr2l,c
 21208  011892  6ADA               	clrf	fsr2h,c
 21209  011894  0E01               	movlw	high _ep_data_in
 21210  011896                     L14:
 21211  011896  22DA               	addwfc	fsr2h,f,c
 21212  011898  0101               	movlb	1	; () banked
 21213  01189A  70DF               	btg	indf2,0,c
 21214                           
 21215                           ; BSR set to: 1
 21216                           ;usb_device.c: 805: }
 21217                           ;usb_device.c: 810: if(endpoint_number == 0)
 21218  01189C  5022               	movf	_endpoint_number,w,c	;volatile
 21219  01189E  E103               	bnz	i2l8454
 21220                           
 21221                           ; BSR set to: 1
 21222                           ;usb_device.c: 811: {
 21223                           ;usb_device.c: 812: USBCtrlEPService();
 21224  0118A0  ECE2  F095         	call	_USBCtrlEPService	;wreg free
 21225                           
 21226                           ;usb_device.c: 813: }
 21227  0118A4  D00A               	goto	i2l8456
 21228  0118A6                     i2l8454:
 21229                           
 21230                           ; BSR set to: 1
 21231                           ;usb_device.c: 814: else
 21232                           ;usb_device.c: 815: {
 21233                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 21234  0118A6  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21235  0118A8  0E72               	movlw	114
 21236  0118AA  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21237  0118AC  0E2A               	movlw	low _USTATcopy
 21238  0118AE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21239  0118B0  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21240  0118B2  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21241  0118B4  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21242  0118B6  ECEA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21243  0118BA                     i2l8456:
 21244  0118BA  2A49               	incf	USBDeviceTasks@i,f,c
 21245  0118BC  0E03               	movlw	3
 21246  0118BE  6449               	cpfsgt	USBDeviceTasks@i,c
 21247  0118C0  D7D3               	goto	i2l170
 21248  0118C2                     i2l169:
 21249                           
 21250                           ;usb_device.c: 822: }
 21251                           ;usb_device.c: 823: }
 21252                           ;usb_device.c: 824: }
 21253                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 21254  0118C2  98A1               	bcf	4001,4,c	;volatile
 21255  0118C4  0012               	return		;funcret
 21256  0118C6                     __end_of_USBDeviceTasks:
 21257                           	opt stack 0
 21258  0118C6                     PL268:
 21259                           	opt stack 11
 21260  0118C6  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21261  0118C8  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21262  0118CA  0E01               	movlw	1
 21263  0118CC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21264  0118CE  0C01               	retlw	1
 21265  0118D0                     __end_ofPL268:
 21266                           	opt stack 0
 21267                           tblptru	equ	0xFF8
 21268                           tblptrh	equ	0xFF7
 21269                           tblptrl	equ	0xFF6
 21270                           tablat	equ	0xFF5
 21271                           prodh	equ	0xFF4
 21272                           prodl	equ	0xFF3
 21273                           intcon	equ	0xFF2
 21274                           intcon2	equ	0xFF1
 21275                           postinc0	equ	0xFEE
 21276                           wreg	equ	0xFE8
 21277                           indf1	equ	0xFE7
 21278                           postinc1	equ	0xFE6
 21279                           postdec1	equ	0xFE5
 21280                           fsr1h	equ	0xFE2
 21281                           fsr1l	equ	0xFE1
 21282                           indf2	equ	0xFDF
 21283                           postinc2	equ	0xFDE
 21284                           postdec2	equ	0xFDD
 21285                           plusw2	equ	0xFDB
 21286                           fsr2h	equ	0xFDA
 21287                           fsr2l	equ	0xFD9
 21288                           status	equ	0xFD8
 21289                           
 21290 ;; *************** function i2_USBDeviceInit *****************
 21291 ;; Defined at:
 21292 ;;		line 298 in file "../My_library/usb/usb_device.c"
 21293 ;; Parameters:    Size  Location     Type
 21294 ;;		None
 21295 ;; Auto vars:     Size  Location     Type
 21296 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 21297 ;; Return value:  Size  Location     Type
 21298 ;;		None               void
 21299 ;; Registers used:
 21300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21301 ;; Tracked objects:
 21302 ;;		On entry : F/F
 21303 ;;		On exit  : F/D
 21304 ;;		Unchanged: 0/0
 21305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21310 ;;Total ram usage:        1 bytes
 21311 ;; Hardware stack levels used:    1
 21312 ;; Hardware stack levels required when called:    1
 21313 ;; This function calls:
 21314 ;;		i2_memset
 21315 ;; This function is called by:
 21316 ;;		_USBDeviceTasks
 21317 ;; This function uses a non-reentrant model
 21318 ;;
 21319                           
 21320                           	psect	text102
 21321  011FE2                     __ptext102:
 21322                           	opt stack 0
 21323  011FE2                     i2_USBDeviceInit:
 21324                           	opt stack 17
 21325                           
 21326                           ; BSR set to: 15
 21327                           ;usb_device.c: 300: uint8_t i;
 21328                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 21329                           
 21330                           ;incstack = 0
 21331  011FE2  98A0               	bcf	4000,4,c	;volatile
 21332                           
 21333                           ;usb_device.c: 305: {UEIR = 0;};
 21334  011FE4  6A63               	clrf	3939,c	;volatile
 21335                           
 21336                           ;usb_device.c: 308: {UIR = 0;};
 21337  011FE6  6A62               	clrf	3938,c	;volatile
 21338                           
 21339                           ;usb_device.c: 311: UEP0 = 0;
 21340  011FE8  6B26               	clrf	38,b	;volatile
 21341                           
 21342                           ; BSR set to: 15
 21343                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 21344  011FEA  ECA8  F094         	call	PL168	;call to abstracted procedure
 21345  011FEE  ECA1  F094         	call	PL162	;call to abstracted procedure
 21346  011FF2  EC44  F0A1         	call	i2_memset	;wreg free
 21347                           
 21348                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 21349  011FF6  0E16               	movlw	22
 21350  011FF8  010F               	movlb	15	; () banked
 21351                           
 21352                           ; BSR set to: 15
 21353                           
 21354                           ; BSR set to: 15
 21355  011FFA  ECCB  F0A0         	call	PL200	;call to abstracted procedure
 21356                           
 21357                           ; BSR set to: 15
 21358                           ;usb_device.c: 318: ;
 21359                           ;usb_device.c: 321: ;
 21360                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 21361  011FFE  6A33               	clrf	i2USBDeviceInit@i,c
 21362  012000                     i2l8304:
 21363                           
 21364                           ; BSR set to: 15
 21365                           ;usb_device.c: 325: {
 21366                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 21367  012000  5033               	movf	i2USBDeviceInit@i,w,c
 21368  012002  D838               	call	PL118	;call to abstracted procedure
 21369  012004  EC90  F095         	call	PL76	;call to abstracted procedure
 21370                           
 21371                           ; BSR set to: 15
 21372  012008  2A33               	incf	i2USBDeviceInit@i,f,c
 21373                           
 21374                           ; BSR set to: 15
 21375  01200A  0E0B               	movlw	11
 21376  01200C  6433               	cpfsgt	i2USBDeviceInit@i,c
 21377  01200E  D7F8               	goto	i2l8304
 21378                           
 21379                           ; BSR set to: 15
 21380                           ;usb_device.c: 327: }
 21381                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 21382  012010  8C65               	bsf	3941,6,c	;volatile
 21383                           
 21384                           ;usb_device.c: 333: UADDR = 0x00;
 21385  012012  6B38               	clrf	56,b	;volatile
 21386                           
 21387                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 21388  012014  9865               	bcf	3941,4,c	;volatile
 21389                           
 21390                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 21391  012016  9C65               	bcf	3941,6,c	;volatile
 21392                           
 21393                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 21394  012018  D001               	goto	i2l8318
 21395  01201A                     i2l8310:
 21396                           
 21397                           ; BSR set to: 15
 21398                           ;usb_device.c: 343: {
 21399                           ;usb_device.c: 344: (UIR &= 0xF7);
 21400                           
 21401                           ; BSR set to: 15
 21402                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 21403                           
 21404                           ; BSR set to: 15
 21405                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 21406                           
 21407                           ; BSR set to: 15
 21408                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 21409  01201A  D846               	call	PL292	;call to abstracted procedure
 21410  01201C                     i2l8318:
 21411                           
 21412                           ; BSR set to: 15
 21413  01201C  B662               	btfsc	3938,3,c	;volatile
 21414  01201E  D7FD               	goto	i2l8310
 21415                           
 21416                           ; BSR set to: 15
 21417                           ;usb_device.c: 349: }
 21418                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 21419                           
 21420                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 21421                           
 21422                           ; BSR set to: 1
 21423                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 21424                           
 21425                           ; BSR set to: 1
 21426                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 21427                           
 21428                           ; BSR set to: 1
 21429                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 21430  012020  D83B               	call	PL210	;call to abstracted procedure
 21431                           
 21432                           ; BSR set to: 1
 21433                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 21434  012022  6A33               	clrf	i2USBDeviceInit@i,c
 21435  012024                     i2l8334:
 21436                           
 21437                           ;usb_device.c: 363: {
 21438                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 21439  012024  5033               	movf	i2USBDeviceInit@i,w,c
 21440  012026  EC3B  F095         	call	PL46	;call to abstracted procedure
 21441  01202A  6ADE               	clrf	postinc2,c
 21442  01202C  6ADD               	clrf	postdec2,c
 21443                           
 21444                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 21445  01202E  5033               	movf	i2USBDeviceInit@i,w,c
 21446  012030  EC33  F095         	call	PL22	;call to abstracted procedure
 21447  012034  6ADE               	clrf	postinc2,c
 21448  012036  6ADD               	clrf	postdec2,c
 21449                           
 21450                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 21451  012038  0E09               	movlw	low _ep_data_in
 21452  01203A  2433               	addwf	i2USBDeviceInit@i,w,c
 21453                           
 21454                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 21455  01203C  D820               	call	PL164	;call to abstracted procedure
 21456  01203E  2433               	addwf	i2USBDeviceInit@i,w,c
 21457  012040  D825               	call	PL194	;call to abstracted procedure
 21458  012042  2A33               	incf	i2USBDeviceInit@i,f,c
 21459  012044  0E02               	movlw	2
 21460  012046  6433               	cpfsgt	i2USBDeviceInit@i,c
 21461  012048  D7ED               	goto	i2l8334
 21462                           
 21463                           ;usb_device.c: 368: }
 21464                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 21465  01204A  0E08               	movlw	8
 21466                           
 21467                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 21468                           
 21469                           ; BSR set to: 15
 21470                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 21471                           
 21472                           ; BSR set to: 13
 21473                           ;usb_device.c: 376: BDT[0].CNT = 8;
 21474                           
 21475                           ; BSR set to: 13
 21476                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 21477                           
 21478                           ; BSR set to: 13
 21479                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 21480                           
 21481                           ; BSR set to: 13
 21482                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 21483                           
 21484                           ; BSR set to: 13
 21485                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 21486                           
 21487                           ; BSR set to: 13
 21488  01204C  D000               	goto	PL58	;call to abstracted procedure
 21489  01204E                     __end_ofi2_USBDeviceInit:
 21490                           	opt stack 0
 21491  01204E                     PL58:
 21492                           	opt stack 16
 21493  01204E  6E10               	movwf	_pBDTEntryIn,c
 21494  012050  0E0D               	movlw	13
 21495  012052  6E11               	movwf	_pBDTEntryIn+1,c
 21496  012054  0E16               	movlw	22
 21497  012056  010F               	movlb	15	; () banked
 21498  012058  6F26               	movwf	38,b	;volatile
 21499  01205A  0E0D               	movlw	13
 21500  01205C  010D               	movlb	13	; () banked
 21501  01205E  6F03               	movwf	3,b	;volatile
 21502  012060  0E30               	movlw	48
 21503  012062  6F02               	movwf	2,b	;volatile
 21504  012064  0E08               	movlw	8
 21505  012066  6F01               	movwf	1,b	;volatile
 21506  012068  0E04               	movlw	4
 21507  01206A  6F00               	movwf	0,b	;volatile
 21508  01206C  8F00               	bsf	0,7,b	;volatile
 21509  01206E  6A29               	clrf	_USBActiveConfiguration,c	;volatile
 21510  012070  6A1C               	clrf	_USBDeviceState,c	;volatile
 21511  012072  0012               	return		;funcret
 21512  012074                     __end_ofPL58:
 21513                           	opt stack 0
 21514  012074                     PL118:
 21515                           	opt stack 16
 21516  012074  0D04               	mullw	4
 21517  012076  0E00               	movlw	0
 21518  012078  24F3               	addwf	prodl,w,c
 21519  01207A  6ED9               	movwf	fsr2l,c
 21520  01207C  0C0D               	retlw	13
 21521  01207E                     __end_ofPL118:
 21522                           	opt stack 0
 21523  01207E                     PL164:
 21524                           	opt stack 16
 21525  01207E  6ED9               	movwf	fsr2l,c
 21526  012080  6ADA               	clrf	fsr2h,c
 21527  012082  0E01               	movlw	high _ep_data_in
 21528  012084  22DA               	addwfc	fsr2h,f,c
 21529  012086  6ADF               	clrf	indf2,c
 21530  012088  0E0C               	movlw	low _ep_data_out
 21531  01208A  0012               	return	
 21532  01208C                     __end_ofPL164:
 21533                           	opt stack 0
 21534  01208C                     PL194:
 21535                           	opt stack 16
 21536  01208C  6ED9               	movwf	fsr2l,c
 21537  01208E  6ADA               	clrf	fsr2h,c
 21538  012090  0E01               	movlw	high _ep_data_out
 21539  012092  22DA               	addwfc	fsr2h,f,c
 21540  012094  6ADF               	clrf	indf2,c
 21541  012096  0012               	return	
 21542  012098                     __end_ofPL194:
 21543                           	opt stack 0
 21544  012098                     PL210:
 21545                           	opt stack 16
 21546  012098  0E01               	movlw	1
 21547  01209A  0101               	movlb	1	; () banked
 21548  01209C  6F29               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21549  01209E  6F2A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21550  0120A0  6B27               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21551  0120A2  6B28               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21552  0120A4  6B26               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 21553  0120A6  0012               	return	
 21554  0120A8                     __end_ofPL210:
 21555                           	opt stack 0
 21556  0120A8                     PL292:
 21557                           	opt stack 16
 21558  0120A8  9662               	bcf	3938,3,c	;volatile
 21559  0120AA  6A0D               	clrf	_inPipes+3,c	;volatile
 21560  0120AC  6A04               	clrf	_outPipes+3,c	;volatile
 21561  0120AE  6A05               	clrf	_outPipes+4,c	;volatile
 21562  0120B0  6A06               	clrf	_outPipes+5,c	;volatile
 21563  0120B2  0012               	return	
 21564  0120B4                     __end_ofPL292:
 21565                           	opt stack 0
 21566                           tblptru	equ	0xFF8
 21567                           tblptrh	equ	0xFF7
 21568                           tblptrl	equ	0xFF6
 21569                           tablat	equ	0xFF5
 21570                           prodh	equ	0xFF4
 21571                           prodl	equ	0xFF3
 21572                           intcon	equ	0xFF2
 21573                           intcon2	equ	0xFF1
 21574                           postinc0	equ	0xFEE
 21575                           wreg	equ	0xFE8
 21576                           indf1	equ	0xFE7
 21577                           postinc1	equ	0xFE6
 21578                           postdec1	equ	0xFE5
 21579                           fsr1h	equ	0xFE2
 21580                           fsr1l	equ	0xFE1
 21581                           indf2	equ	0xFDF
 21582                           postinc2	equ	0xFDE
 21583                           postdec2	equ	0xFDD
 21584                           plusw2	equ	0xFDB
 21585                           fsr2h	equ	0xFDA
 21586                           fsr2l	equ	0xFD9
 21587                           status	equ	0xFD8
 21588                           
 21589 ;; *************** function _USBWakeFromSuspend *****************
 21590 ;; Defined at:
 21591 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 21592 ;; Parameters:    Size  Location     Type
 21593 ;;		None
 21594 ;; Auto vars:     Size  Location     Type
 21595 ;;		None
 21596 ;; Return value:  Size  Location     Type
 21597 ;;		None               void
 21598 ;; Registers used:
 21599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21600 ;; Tracked objects:
 21601 ;;		On entry : F/F
 21602 ;;		On exit  : F/F
 21603 ;;		Unchanged: 0/0
 21604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21609 ;;Total ram usage:        0 bytes
 21610 ;; Hardware stack levels used:    1
 21611 ;; Hardware stack levels required when called:    4
 21612 ;; This function calls:
 21613 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21614 ;; This function is called by:
 21615 ;;		_USBDeviceTasks
 21616 ;; This function uses a non-reentrant model
 21617 ;;
 21618                           
 21619                           	psect	text103
 21620  014456                     __ptext103:
 21621                           	opt stack 0
 21622  014456                     _USBWakeFromSuspend:
 21623                           	opt stack 14
 21624                           
 21625                           ; BSR set to: 15
 21626                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 21627                           
 21628                           ; BSR set to: 13
 21629                           ;incstack = 0
 21630  014456  0101               	movlb	1	; () banked
 21631  014458  6B26               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 21632                           
 21633                           ; BSR set to: 1
 21634                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 21635  01445A  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21636  01445C  0E74               	movlw	116
 21637  01445E  ECE4  F0A1         	call	PL122	;call to abstracted procedure
 21638  014462  ECEA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21639                           
 21640                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 21641  014466  9265               	bcf	3941,1,c	;volatile
 21642                           
 21643                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 21644  014468  010F               	movlb	15	; () banked
 21645  01446A  9536               	bcf	54,2,b	;volatile
 21646                           
 21647                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 21648  01446C  D001               	goto	i2l7618
 21649  01446E                     i2l7616:
 21650                           
 21651                           ; BSR set to: 15
 21652                           ;usb_device.c: 2342: {
 21653                           ;usb_device.c: 2343: (UIR &= 0xFB);
 21654  01446E  9462               	bcf	3938,2,c	;volatile
 21655  014470                     i2l7618:
 21656                           
 21657                           ; BSR set to: 15
 21658  014470  A462               	btfss	3938,2,c	;volatile
 21659                           
 21660                           ; BSR set to: 15
 21661  014472  0012               	return		;funcret
 21662  014474  D7FC               	goto	i2l7616
 21663  014476                     __end_of_USBWakeFromSuspend:
 21664                           	opt stack 0
 21665                           tblptru	equ	0xFF8
 21666                           tblptrh	equ	0xFF7
 21667                           tblptrl	equ	0xFF6
 21668                           tablat	equ	0xFF5
 21669                           prodh	equ	0xFF4
 21670                           prodl	equ	0xFF3
 21671                           intcon	equ	0xFF2
 21672                           intcon2	equ	0xFF1
 21673                           postinc0	equ	0xFEE
 21674                           wreg	equ	0xFE8
 21675                           indf1	equ	0xFE7
 21676                           postinc1	equ	0xFE6
 21677                           postdec1	equ	0xFE5
 21678                           fsr1h	equ	0xFE2
 21679                           fsr1l	equ	0xFE1
 21680                           indf2	equ	0xFDF
 21681                           postinc2	equ	0xFDE
 21682                           postdec2	equ	0xFDD
 21683                           plusw2	equ	0xFDB
 21684                           fsr2h	equ	0xFDA
 21685                           fsr2l	equ	0xFD9
 21686                           status	equ	0xFD8
 21687                           
 21688 ;; *************** function _USBSuspend *****************
 21689 ;; Defined at:
 21690 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 21691 ;; Parameters:    Size  Location     Type
 21692 ;;		None
 21693 ;; Auto vars:     Size  Location     Type
 21694 ;;		None
 21695 ;; Return value:  Size  Location     Type
 21696 ;;		None               void
 21697 ;; Registers used:
 21698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21699 ;; Tracked objects:
 21700 ;;		On entry : F/F
 21701 ;;		On exit  : 0/0
 21702 ;;		Unchanged: 0/0
 21703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21708 ;;Total ram usage:        0 bytes
 21709 ;; Hardware stack levels used:    1
 21710 ;; Hardware stack levels required when called:    4
 21711 ;; This function calls:
 21712 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21713 ;; This function is called by:
 21714 ;;		_USBDeviceTasks
 21715 ;; This function uses a non-reentrant model
 21716 ;;
 21717                           
 21718                           	psect	text104
 21719  0143B2                     __ptext104:
 21720                           	opt stack 0
 21721  0143B2                     _USBSuspend:
 21722                           	opt stack 14
 21723                           
 21724                           ; BSR set to: 15
 21725                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 21726                           
 21727                           ; BSR set to: 15
 21728                           ;incstack = 0
 21729  0143B2  8536               	bsf	54,2,b	;volatile
 21730                           
 21731                           ; BSR set to: 15
 21732                           ;usb_device.c: 2271: (UIR &= 0xEF);
 21733  0143B4  9862               	bcf	3938,4,c	;volatile
 21734                           
 21735                           ; BSR set to: 15
 21736                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 21737  0143B6  8265               	bsf	3941,1,c	;volatile
 21738                           
 21739                           ; BSR set to: 15
 21740                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 21741  0143B8  0E01               	movlw	1
 21742  0143BA  0101               	movlb	1	; () banked
 21743  0143BC  6F26               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 21744                           
 21745                           ; BSR set to: 1
 21746                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 21747  0143BE  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21748  0143C0  0E75               	movlw	117
 21749  0143C2  D802               	call	PL122	;call to abstracted procedure
 21750  0143C4  EFEA  F0A1         	goto	i2l6340	;wreg free
 21751  0143C8                     __end_of_USBSuspend:
 21752                           	opt stack 0
 21753  0143C8                     PL122:
 21754                           	opt stack 14
 21755  0143C8  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21756  0143CA  6A39               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21757  0143CC  6A3A               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21758  0143CE  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21759  0143D0  6A3B               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21760  0143D2  0012               	return	
 21761  0143D4                     __end_ofPL122:
 21762                           	opt stack 0
 21763                           tblptru	equ	0xFF8
 21764                           tblptrh	equ	0xFF7
 21765                           tblptrl	equ	0xFF6
 21766                           tablat	equ	0xFF5
 21767                           prodh	equ	0xFF4
 21768                           prodl	equ	0xFF3
 21769                           intcon	equ	0xFF2
 21770                           intcon2	equ	0xFF1
 21771                           postinc0	equ	0xFEE
 21772                           wreg	equ	0xFE8
 21773                           indf1	equ	0xFE7
 21774                           postinc1	equ	0xFE6
 21775                           postdec1	equ	0xFE5
 21776                           fsr1h	equ	0xFE2
 21777                           fsr1l	equ	0xFE1
 21778                           indf2	equ	0xFDF
 21779                           postinc2	equ	0xFDE
 21780                           postdec2	equ	0xFDD
 21781                           plusw2	equ	0xFDB
 21782                           fsr2h	equ	0xFDA
 21783                           fsr2l	equ	0xFD9
 21784                           status	equ	0xFD8
 21785                           
 21786 ;; *************** function _USBStallHandler *****************
 21787 ;; Defined at:
 21788 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 21789 ;; Parameters:    Size  Location     Type
 21790 ;;		None
 21791 ;; Auto vars:     Size  Location     Type
 21792 ;;		None
 21793 ;; Return value:  Size  Location     Type
 21794 ;;		None               void
 21795 ;; Registers used:
 21796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21797 ;; Tracked objects:
 21798 ;;		On entry : F/F
 21799 ;;		On exit  : F/F
 21800 ;;		Unchanged: 0/0
 21801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21806 ;;Total ram usage:        1 bytes
 21807 ;; Hardware stack levels used:    1
 21808 ;; This function calls:
 21809 ;;		Nothing
 21810 ;; This function is called by:
 21811 ;;		_USBDeviceTasks
 21812 ;; This function uses a non-reentrant model
 21813 ;;
 21814                           
 21815                           	psect	text105
 21816  0141D4                     __ptext105:
 21817                           	opt stack 0
 21818  0141D4                     _USBStallHandler:
 21819                           	opt stack 18
 21820                           
 21821                           ; BSR set to: 15
 21822                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 21823                           
 21824                           ;incstack = 0
 21825  0141D4  A126               	btfss	38,0,b	;volatile
 21826  0141D6  D010               	goto	i2l308
 21827                           
 21828                           ; BSR set to: 15
 21829                           ;usb_device.c: 2215: {
 21830                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 21831  0141D8  D811               	call	PL112	;call to abstracted procedure
 21832  0141DA  0E80               	movlw	128
 21833  0141DC  18DE               	xorwf	postinc2,w,c
 21834  0141DE  E10B               	bnz	i2l7640
 21835                           
 21836                           ; BSR set to: 15
 21837  0141E0  ECE1  F098         	call	PL48	;call to abstracted procedure
 21838  0141E4  0E84               	movlw	132
 21839  0141E6  18DE               	xorwf	postinc2,w,c
 21840  0141E8  E106               	bnz	i2l7640
 21841                           
 21842                           ; BSR set to: 15
 21843                           ;usb_device.c: 2218: {
 21844                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21845  0141EA  D808               	call	PL112	;call to abstracted procedure
 21846  0141EC  0E0C               	movlw	12
 21847  0141EE  6EDF               	movwf	indf2,c
 21848                           
 21849                           ; BSR set to: 15
 21850                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 21851  0141F0  D805               	call	PL112	;call to abstracted procedure
 21852  0141F2  0E00               	movlw	0
 21853  0141F4  8EDB               	bsf	plusw2,7,c
 21854  0141F6                     i2l7640:
 21855                           
 21856                           ; BSR set to: 15
 21857                           ;usb_device.c: 2222: }
 21858                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 21859  0141F6  9126               	bcf	38,0,b	;volatile
 21860  0141F8                     i2l308:
 21861                           
 21862                           ; BSR set to: 15
 21863                           ;usb_device.c: 2224: }
 21864                           ;usb_device.c: 2226: (UIR &= 0xDF);
 21865  0141F8  9A62               	bcf	3938,5,c	;volatile
 21866                           
 21867                           ; BSR set to: 15
 21868  0141FA  0012               	return		;funcret
 21869  0141FC                     __end_of_USBStallHandler:
 21870                           	opt stack 0
 21871  0141FC                     PL112:
 21872                           	opt stack 18
 21873  0141FC  C016  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21874  014200  C017  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21875  014204  0012               	return	
 21876  014206                     __end_ofPL112:
 21877                           	opt stack 0
 21878                           tblptru	equ	0xFF8
 21879                           tblptrh	equ	0xFF7
 21880                           tblptrl	equ	0xFF6
 21881                           tablat	equ	0xFF5
 21882                           prodh	equ	0xFF4
 21883                           prodl	equ	0xFF3
 21884                           intcon	equ	0xFF2
 21885                           intcon2	equ	0xFF1
 21886                           postinc0	equ	0xFEE
 21887                           wreg	equ	0xFE8
 21888                           indf1	equ	0xFE7
 21889                           postinc1	equ	0xFE6
 21890                           postdec1	equ	0xFE5
 21891                           fsr1h	equ	0xFE2
 21892                           fsr1l	equ	0xFE1
 21893                           indf2	equ	0xFDF
 21894                           postinc2	equ	0xFDE
 21895                           postdec2	equ	0xFDD
 21896                           plusw2	equ	0xFDB
 21897                           fsr2h	equ	0xFDA
 21898                           fsr2l	equ	0xFD9
 21899                           status	equ	0xFD8
 21900                           
 21901 ;; *************** function _USBCtrlEPService *****************
 21902 ;; Defined at:
 21903 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 21904 ;; Parameters:    Size  Location     Type
 21905 ;;		None
 21906 ;; Auto vars:     Size  Location     Type
 21907 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 21908 ;; Return value:  Size  Location     Type
 21909 ;;		None               void
 21910 ;; Registers used:
 21911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21912 ;; Tracked objects:
 21913 ;;		On entry : F/1
 21914 ;;		On exit  : 0/0
 21915 ;;		Unchanged: 0/0
 21916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21921 ;;Total ram usage:        3 bytes
 21922 ;; Hardware stack levels used:    1
 21923 ;; Hardware stack levels required when called:    7
 21924 ;; This function calls:
 21925 ;;		_USBCtrlTrfInHandler
 21926 ;;		_USBCtrlTrfOutHandler
 21927 ;;		_USBCtrlTrfSetupHandler
 21928 ;; This function is called by:
 21929 ;;		_USBDeviceTasks
 21930 ;; This function uses a non-reentrant model
 21931 ;;
 21932                           
 21933                           	psect	text106
 21934  012BC4                     __ptext106:
 21935                           	opt stack 0
 21936  012BC4                     _USBCtrlEPService:
 21937                           	opt stack 11
 21938                           
 21939                           ; BSR set to: 1
 21940                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 21941                           
 21942                           ; BSR set to: 15
 21943                           ;incstack = 0
 21944  012BC4  0E2D               	movlw	45
 21945  012BC6  6E1D               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 21946                           
 21947                           ; BSR set to: 1
 21948                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 21949  012BC8  C02A  F046         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 21950  012BCC  0EFD               	movlw	253
 21951  012BCE  1646               	andwf	??_USBCtrlEPService,f,c
 21952  012BD0  E137               	bnz	i2l7674
 21953                           
 21954                           ; BSR set to: 1
 21955                           ;usb_device.c: 2380: {
 21956                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 21957  012BD2  90D8               	bcf	status,0,c
 21958  012BD4  302A               	rrcf	_USTATcopy,w,c	;volatile
 21959  012BD6  0B3F               	andlw	63
 21960  012BD8  0D04               	mullw	4
 21961  012BDA  0E00               	movlw	0
 21962  012BDC  24F3               	addwf	prodl,w,c
 21963  012BDE  6E16               	movwf	_pBDTEntryEP0OutCurrent,c
 21964  012BE0  0E0D               	movlw	13
 21965  012BE2  20F4               	addwfc	prodh,w,c
 21966                           
 21967                           ; BSR set to: 1
 21968                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 21969  012BE4  ECAB  F094         	call	PL278	;call to abstracted procedure
 21970                           
 21971                           ; BSR set to: 1
 21972                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 21973  012BE8  0E04               	movlw	4
 21974  012BEA  1A18               	xorwf	_pBDTEntryEP0OutNext,f,c
 21975                           
 21976                           ; BSR set to: 1
 21977                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 21978  012BEC  ECFE  F0A0         	call	PL112	;call to abstracted procedure
 21979  012BF0  30DF               	rrcf	indf2,w,c
 21980  012BF2  32E8               	rrcf	wreg,f,c
 21981  012BF4  0B0F               	andlw	15
 21982  012BF6  0A0D               	xorlw	13
 21983  012BF8  E002 EF3B  F0A2    	bnz	_USBCtrlTrfOutHandler
 21984                           
 21985                           ; BSR set to: 1
 21986                           ;usb_device.c: 2397: {
 21987                           ;usb_device.c: 2398: unsigned char setup_cnt;
 21988                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 21989  012BFE  6A48               	clrf	USBCtrlEPService@setup_cnt,c
 21990  012C00                     i2l7660:
 21991                           
 21992                           ; BSR set to: 1
 21993                           ;usb_device.c: 2405: {
 21994                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 21995  012C00  D826               	call	PL102	;call to abstracted procedure
 21996  012C02  22DA               	addwfc	fsr2h,f,c
 21997  012C04  CFDE F046          	movff	postinc2,??_USBCtrlEPService
 21998  012C08  CFDD F047          	movff	postdec2,??_USBCtrlEPService+1
 21999  012C0C  C046  FFD9         	movff	??_USBCtrlEPService,fsr2l
 22000  012C10  C047  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 22001  012C14  0E30               	movlw	48
 22002  012C16  2448               	addwf	USBCtrlEPService@setup_cnt,w,c
 22003  012C18  6EE1               	movwf	fsr1l,c
 22004  012C1A  6AE2               	clrf	fsr1h,c
 22005  012C1C  0E0D               	movlw	13
 22006  012C1E  22E2               	addwfc	fsr1h,f,c
 22007  012C20  CFDF FFE7          	movff	indf2,indf1
 22008                           
 22009                           ; BSR set to: 1
 22010                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 22011  012C24  D814               	call	PL102	;call to abstracted procedure
 22012  012C26  22DA               	addwfc	fsr2h,f,c
 22013  012C28  2ADE               	incf	postinc2,f,c
 22014  012C2A  0E00               	movlw	0
 22015  012C2C  22DD               	addwfc	postdec2,f,c
 22016                           
 22017                           ; BSR set to: 1
 22018  012C2E  2A48               	incf	USBCtrlEPService@setup_cnt,f,c
 22019                           
 22020                           ; BSR set to: 1
 22021  012C30  0E07               	movlw	7
 22022  012C32  6448               	cpfsgt	USBCtrlEPService@setup_cnt,c
 22023  012C34  D7E5               	goto	i2l7660
 22024                           
 22025                           ; BSR set to: 1
 22026                           ;usb_device.c: 2408: }
 22027                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 22028  012C36  D80B               	call	PL102	;call to abstracted procedure
 22029  012C38  EC32  F09A         	call	PL36	;call to abstracted procedure
 22030                           
 22031                           ; BSR set to: 1
 22032                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 22033  012C3C  EFC5  F09E         	goto	_USBCtrlTrfSetupHandler	;wreg free
 22034  012C40                     i2l7674:
 22035                           
 22036                           ; BSR set to: 1
 22037                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 22038  012C40  502A               	movf	_USTATcopy,w,c	;volatile
 22039  012C42  0BFD               	andlw	253
 22040  012C44  0A04               	xorlw	4
 22041  012C46  B4D8               	btfsc	status,2,c
 22042                           
 22043                           ; BSR set to: 1
 22044                           ;usb_device.c: 2421: {
 22045                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 22046  012C48  ECB0  F098         	call	_USBCtrlTrfInHandler	;wreg free
 22047  012C4C  0012               	return		;funcret
 22048  012C4E                     __end_of_USBCtrlEPService:
 22049                           	opt stack 0
 22050  012C4E                     PL102:
 22051                           	opt stack 11
 22052  012C4E  EE20 F002          	lfsr	2,2
 22053  012C52  5016               	movf	_pBDTEntryEP0OutCurrent,w,c
 22054  012C54  26D9               	addwf	fsr2l,f,c
 22055  012C56  5017               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22056  012C58  0012               	return	
 22057  012C5A                     __end_ofPL102:
 22058                           	opt stack 0
 22059                           tblptru	equ	0xFF8
 22060                           tblptrh	equ	0xFF7
 22061                           tblptrl	equ	0xFF6
 22062                           tablat	equ	0xFF5
 22063                           prodh	equ	0xFF4
 22064                           prodl	equ	0xFF3
 22065                           intcon	equ	0xFF2
 22066                           intcon2	equ	0xFF1
 22067                           postinc0	equ	0xFEE
 22068                           wreg	equ	0xFE8
 22069                           indf1	equ	0xFE7
 22070                           postinc1	equ	0xFE6
 22071                           postdec1	equ	0xFE5
 22072                           fsr1h	equ	0xFE2
 22073                           fsr1l	equ	0xFE1
 22074                           indf2	equ	0xFDF
 22075                           postinc2	equ	0xFDE
 22076                           postdec2	equ	0xFDD
 22077                           plusw2	equ	0xFDB
 22078                           fsr2h	equ	0xFDA
 22079                           fsr2l	equ	0xFD9
 22080                           status	equ	0xFD8
 22081                           
 22082 ;; *************** function _USBCtrlTrfSetupHandler *****************
 22083 ;; Defined at:
 22084 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 22085 ;; Parameters:    Size  Location     Type
 22086 ;;		None
 22087 ;; Auto vars:     Size  Location     Type
 22088 ;;		None
 22089 ;; Return value:  Size  Location     Type
 22090 ;;		None               void
 22091 ;; Registers used:
 22092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22093 ;; Tracked objects:
 22094 ;;		On entry : F/1
 22095 ;;		On exit  : 0/0
 22096 ;;		Unchanged: 0/0
 22097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22102 ;;Total ram usage:        0 bytes
 22103 ;; Hardware stack levels used:    1
 22104 ;; Hardware stack levels required when called:    6
 22105 ;; This function calls:
 22106 ;;		_USBCheckStdRequest
 22107 ;;		_USBCtrlEPServiceComplete
 22108 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22109 ;; This function is called by:
 22110 ;;		_USBCtrlEPService
 22111 ;; This function uses a non-reentrant model
 22112 ;;
 22113                           
 22114                           	psect	text107
 22115  013D8A                     __ptext107:
 22116                           	opt stack 0
 22117  013D8A                     _USBCtrlTrfSetupHandler:
 22118                           	opt stack 11
 22119                           
 22120                           ; BSR set to: 1
 22121                           ;usb_device.c: 2474: shortPacketStatus = 0;
 22122                           
 22123                           ;incstack = 0
 22124  013D8A  6A24               	clrf	_shortPacketStatus,c	;volatile
 22125                           
 22126                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 22127  013D8C  6A1B               	clrf	_USBDeferStatusStagePacket,c	;volatile
 22128                           
 22129                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 22130  013D8E  6B27               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22131                           
 22132                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 22133  013D90  6B28               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22134                           
 22135                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 22136  013D92  6B25               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 22137                           
 22138                           ;usb_device.c: 2479: controlTransferState = 0;
 22139  013D94  6A20               	clrf	_controlTransferState,c	;volatile
 22140                           
 22141                           ; BSR set to: 1
 22142                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 22143  013D96  ECE1  F098         	call	PL48	;call to abstracted procedure
 22144                           
 22145                           ; BSR set to: 1
 22146                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 22147  013D9A  D817               	call	PL336	;call to abstracted procedure
 22148                           
 22149                           ; BSR set to: 1
 22150                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 22151  013D9C  ECE1  F098         	call	PL48	;call to abstracted procedure
 22152                           
 22153                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 22154  013DA0  D814               	call	PL336	;call to abstracted procedure
 22155                           
 22156                           ; BSR set to: 1
 22157                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 22158  013DA2  EC7B  F091         	call	PL40	;call to abstracted procedure
 22159  013DA6  0E7F               	movlw	127
 22160  013DA8  16DF               	andwf	indf2,f,c
 22161                           
 22162                           ; BSR set to: 1
 22163                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 22164  013DAA  6A0D               	clrf	_inPipes+3,c	;volatile
 22165                           
 22166                           ; BSR set to: 1
 22167                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 22168  013DAC  6A0E               	clrf	_inPipes+4,c	;volatile
 22169  013DAE  6A0F               	clrf	_inPipes+5,c	;volatile
 22170                           
 22171                           ; BSR set to: 1
 22172                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 22173  013DB0  6A04               	clrf	_outPipes+3,c	;volatile
 22174                           
 22175                           ; BSR set to: 1
 22176                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 22177  013DB2  6A05               	clrf	_outPipes+4,c	;volatile
 22178  013DB4  6A06               	clrf	_outPipes+5,c	;volatile
 22179                           
 22180                           ; BSR set to: 1
 22181                           ;usb_device.c: 2503: USBCheckStdRequest();
 22182  013DB6  EC2D  F096         	call	_USBCheckStdRequest	;wreg free
 22183                           
 22184                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 22185  013DBA  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22186  013DBC  0E03               	movlw	3
 22187  013DBE  ECE4  F0A1         	call	PL122	;call to abstracted procedure
 22188  013DC2  ECEA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22189                           
 22190                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 22191  013DC6  EFD4  F092         	goto	_USBCtrlEPServiceComplete	;wreg free
 22192  013DCA                     __end_of_USBCtrlTrfSetupHandler:
 22193                           	opt stack 0
 22194  013DCA                     PL336:
 22195                           	opt stack 11
 22196  013DCA  0E7F               	movlw	127
 22197  013DCC  16DF               	andwf	indf2,f,c
 22198  013DCE  0E04               	movlw	4
 22199  013DD0  1A10               	xorwf	_pBDTEntryIn,f,c
 22200  013DD2  0C04               	retlw	4
 22201  013DD4                     __end_ofPL336:
 22202                           	opt stack 0
 22203                           tblptru	equ	0xFF8
 22204                           tblptrh	equ	0xFF7
 22205                           tblptrl	equ	0xFF6
 22206                           tablat	equ	0xFF5
 22207                           prodh	equ	0xFF4
 22208                           prodl	equ	0xFF3
 22209                           intcon	equ	0xFF2
 22210                           intcon2	equ	0xFF1
 22211                           postinc0	equ	0xFEE
 22212                           wreg	equ	0xFE8
 22213                           indf1	equ	0xFE7
 22214                           postinc1	equ	0xFE6
 22215                           postdec1	equ	0xFE5
 22216                           fsr1h	equ	0xFE2
 22217                           fsr1l	equ	0xFE1
 22218                           indf2	equ	0xFDF
 22219                           postinc2	equ	0xFDE
 22220                           postdec2	equ	0xFDD
 22221                           plusw2	equ	0xFDB
 22222                           fsr2h	equ	0xFDA
 22223                           fsr2l	equ	0xFD9
 22224                           status	equ	0xFD8
 22225                           
 22226 ;; *************** function _USBCtrlEPServiceComplete *****************
 22227 ;; Defined at:
 22228 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 22229 ;; Parameters:    Size  Location     Type
 22230 ;;		None
 22231 ;; Auto vars:     Size  Location     Type
 22232 ;;		None
 22233 ;; Return value:  Size  Location     Type
 22234 ;;		None               void
 22235 ;; Registers used:
 22236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22237 ;; Tracked objects:
 22238 ;;		On entry : 0/1
 22239 ;;		On exit  : 0/0
 22240 ;;		Unchanged: 0/0
 22241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22246 ;;Total ram usage:        0 bytes
 22247 ;; Hardware stack levels used:    1
 22248 ;; Hardware stack levels required when called:    2
 22249 ;; This function calls:
 22250 ;;		_USBCtrlEPAllowDataStage
 22251 ;;		_USBCtrlEPAllowStatusStage
 22252 ;; This function is called by:
 22253 ;;		_USBCtrlTrfSetupHandler
 22254 ;; This function uses a non-reentrant model
 22255 ;;
 22256                           
 22257                           	psect	text108
 22258  0125A8                     __ptext108:
 22259                           	opt stack 0
 22260  0125A8                     _USBCtrlEPServiceComplete:
 22261                           	opt stack 14
 22262                           
 22263                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 22264                           
 22265                           ;incstack = 0
 22266  0125A8  9865               	bcf	3941,4,c	;volatile
 22267                           
 22268                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 22269  0125AA  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 22270  0125AC  D018               	goto	i2l232
 22271                           
 22272                           ;usb_device.c: 1629: {
 22273                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 22274  0125AE  AE04               	btfss	_outPipes+3,7,c	;volatile
 22275  0125B0  D00A               	goto	i2l6966
 22276                           
 22277                           ;usb_device.c: 1631: {
 22278                           ;usb_device.c: 1632: controlTransferState = 2;
 22279  0125B2  0E02               	movlw	2
 22280  0125B4  6E20               	movwf	_controlTransferState,c	;volatile
 22281                           
 22282                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 22283  0125B6  0101               	movlb	1	; () banked
 22284  0125B8  5128               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 22285  0125BA  E102               	bnz	i2l6962
 22286                           
 22287                           ; BSR set to: 1
 22288                           ;usb_device.c: 1644: {
 22289                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 22290  0125BC  ECF2  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 22291  0125C0                     i2l6962:
 22292                           
 22293                           ; BSR set to: 1
 22294                           ;usb_device.c: 1646: }
 22295                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 22296  0125C0  6B2A               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22297                           
 22298                           ; BSR set to: 1
 22299                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 22300  0125C2  6B29               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22301                           
 22302                           ;usb_device.c: 1652: }
 22303  0125C4  0012               	return	
 22304  0125C6                     i2l6966:
 22305                           
 22306                           ;usb_device.c: 1653: else
 22307                           ;usb_device.c: 1654: {
 22308                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 22309                           
 22310                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22311                           
 22312                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22313  0125C6  D82A               	call	PL2	;call to abstracted procedure
 22314  0125C8  0E0C               	movlw	12
 22315                           
 22316                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22317  0125CA  EC73  F091         	call	PL34	;call to abstracted procedure
 22318                           
 22319                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 22320  0125CE  ECE1  F098         	call	PL48	;call to abstracted procedure
 22321  0125D2  0E04               	movlw	4
 22322  0125D4  6EDF               	movwf	indf2,c
 22323                           
 22324                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22325  0125D6  ECE1  F098         	call	PL48	;call to abstracted procedure
 22326  0125DA  EFF1  F098         	goto	PL244	;call to abstracted procedure
 22327  0125DE                     i2l232:
 22328                           
 22329                           ;usb_device.c: 1667: else
 22330                           ;usb_device.c: 1668: {
 22331                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 22332  0125DE  010D               	movlb	13	; () banked
 22333  0125E0  AF30               	btfss	48,7,b	;volatile
 22334  0125E2  D00E               	goto	i2l6986
 22335                           
 22336                           ; BSR set to: 13
 22337                           ;usb_device.c: 1670: {
 22338                           ;usb_device.c: 1671: controlTransferState = 1;
 22339  0125E4  0E01               	movlw	1
 22340  0125E6  6E20               	movwf	_controlTransferState,c	;volatile
 22341                           
 22342                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 22343  0125E8  0101               	movlb	1	; () banked
 22344  0125EA  5127               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 22345  0125EC  E102               	bnz	i2l6978
 22346                           
 22347                           ; BSR set to: 1
 22348                           ;usb_device.c: 1686: {
 22349                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 22350  0125EE  ECF2  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 22351  0125F2                     i2l6978:
 22352                           
 22353                           ; BSR set to: 1
 22354                           ;usb_device.c: 1688: }
 22355                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 22356  0125F2  6B2A               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22357                           
 22358                           ; BSR set to: 1
 22359                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 22360  0125F4  6B29               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22361                           
 22362                           ; BSR set to: 1
 22363                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 22364  0125F6  501B               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 22365  0125F8  A4D8               	btfss	status,2,c
 22366  0125FA  0012               	return	
 22367                           
 22368                           ; BSR set to: 1
 22369                           ;usb_device.c: 1713: {
 22370                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 22371  0125FC  EFFC  F099         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 22372  012600                     i2l6986:
 22373                           
 22374                           ; BSR set to: 13
 22375                           ;usb_device.c: 1717: else
 22376                           ;usb_device.c: 1718: {
 22377                           ;usb_device.c: 1729: controlTransferState = 2;
 22378  012600  0E02               	movlw	2
 22379  012602  6E20               	movwf	_controlTransferState,c	;volatile
 22380                           
 22381                           ; BSR set to: 13
 22382                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 22383                           
 22384                           ; BSR set to: 13
 22385                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22386                           
 22387                           ; BSR set to: 13
 22388                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 22389  012604  D80B               	call	PL2	;call to abstracted procedure
 22390  012606  0E04               	movlw	4
 22391                           
 22392                           ; BSR set to: 13
 22393                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22394  012608  EC73  F091         	call	PL34	;call to abstracted procedure
 22395                           
 22396                           ; BSR set to: 13
 22397                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 22398  01260C  0101               	movlb	1	; () banked
 22399  01260E  6B2A               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22400                           
 22401                           ; BSR set to: 1
 22402                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 22403  012610  6B29               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22404                           
 22405                           ; BSR set to: 1
 22406                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 22407  012612  501B               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 22408  012614  E102 EFFC  F099    	bz	_USBCtrlEPAllowStatusStage
 22409  01261A  0012               	return	
 22410  01261C                     __end_of_USBCtrlEPServiceComplete:
 22411                           	opt stack 0
 22412  01261C                     PL2:
 22413                           	opt stack 14
 22414  01261C  EE20 F001          	lfsr	2,1
 22415  012620  5018               	movf	_pBDTEntryEP0OutNext,w,c
 22416  012622  26D9               	addwf	fsr2l,f,c
 22417  012624  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 22418  012626  22DA               	addwfc	fsr2h,f,c
 22419  012628  0E08               	movlw	8
 22420  01262A  6EDF               	movwf	indf2,c
 22421  01262C  EE20 F002          	lfsr	2,2
 22422  012630  5018               	movf	_pBDTEntryEP0OutNext,w,c
 22423  012632  26D9               	addwf	fsr2l,f,c
 22424  012634  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 22425  012636  22DA               	addwfc	fsr2h,f,c
 22426  012638  0E30               	movlw	48
 22427  01263A  6EDE               	movwf	postinc2,c
 22428  01263C  0E0D               	movlw	13
 22429  01263E  6EDD               	movwf	postdec2,c
 22430  012640  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22431  012644  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22432  012648  0C0D               	retlw	13
 22433  01264A                     __end_ofPL2:
 22434                           	opt stack 0
 22435                           tblptru	equ	0xFF8
 22436                           tblptrh	equ	0xFF7
 22437                           tblptrl	equ	0xFF6
 22438                           tablat	equ	0xFF5
 22439                           prodh	equ	0xFF4
 22440                           prodl	equ	0xFF3
 22441                           intcon	equ	0xFF2
 22442                           intcon2	equ	0xFF1
 22443                           postinc0	equ	0xFEE
 22444                           wreg	equ	0xFE8
 22445                           indf1	equ	0xFE7
 22446                           postinc1	equ	0xFE6
 22447                           postdec1	equ	0xFE5
 22448                           fsr1h	equ	0xFE2
 22449                           fsr1l	equ	0xFE1
 22450                           indf2	equ	0xFDF
 22451                           postinc2	equ	0xFDE
 22452                           postdec2	equ	0xFDD
 22453                           plusw2	equ	0xFDB
 22454                           fsr2h	equ	0xFDA
 22455                           fsr2l	equ	0xFD9
 22456                           status	equ	0xFD8
 22457                           
 22458 ;; *************** function _USBCtrlEPAllowDataStage *****************
 22459 ;; Defined at:
 22460 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 22461 ;; Parameters:    Size  Location     Type
 22462 ;;		None
 22463 ;; Auto vars:     Size  Location     Type
 22464 ;;		None
 22465 ;; Return value:  Size  Location     Type
 22466 ;;		None               void
 22467 ;; Registers used:
 22468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22469 ;; Tracked objects:
 22470 ;;		On entry : F/1
 22471 ;;		On exit  : F/1
 22472 ;;		Unchanged: 0/0
 22473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22478 ;;Total ram usage:        0 bytes
 22479 ;; Hardware stack levels used:    1
 22480 ;; Hardware stack levels required when called:    1
 22481 ;; This function calls:
 22482 ;;		_USBCtrlTrfTxService
 22483 ;; This function is called by:
 22484 ;;		_USBCtrlEPServiceComplete
 22485 ;; This function uses a non-reentrant model
 22486 ;;
 22487                           
 22488                           	psect	text109
 22489  0139E4                     __ptext109:
 22490                           	opt stack 0
 22491  0139E4                     _USBCtrlEPAllowDataStage:
 22492                           	opt stack 14
 22493                           
 22494                           ; BSR set to: 1
 22495                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 22496                           
 22497                           ;incstack = 0
 22498  0139E4  6B27               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22499                           
 22500                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 22501  0139E6  6B28               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22502                           
 22503                           ; BSR set to: 1
 22504                           ;usb_device.c: 1493: if(controlTransferState == 2)
 22505  0139E8  0E02               	movlw	2
 22506  0139EA  1820               	xorwf	_controlTransferState,w,c	;volatile
 22507  0139EC  E110               	bnz	i2l6544
 22508                           
 22509                           ; BSR set to: 1
 22510                           ;usb_device.c: 1494: {
 22511                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 22512  0139EE  EE20 F001          	lfsr	2,1
 22513  0139F2  EC69  F091         	call	PL6	;call to abstracted procedure
 22514                           
 22515                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 22516  0139F6  EC6E  F091         	call	PL10	;call to abstracted procedure
 22517  0139FA  EC69  F091         	call	PL6	;call to abstracted procedure
 22518  0139FE  EC80  F091         	call	PL238	;call to abstracted procedure
 22519                           
 22520                           ; BSR set to: 1
 22521                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 22522  013A02  EC7B  F091         	call	PL40	;call to abstracted procedure
 22523  013A06  0E48               	movlw	72
 22524                           
 22525                           ; BSR set to: 1
 22526                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22527  013A08  EC73  F091         	call	PL34	;call to abstracted procedure
 22528                           
 22529                           ;usb_device.c: 1500: }
 22530  013A0C  0C00               	retlw	0
 22531  013A0E                     i2l6544:
 22532                           
 22533                           ; BSR set to: 1
 22534                           ;usb_device.c: 1501: else
 22535                           ;usb_device.c: 1502: {
 22536                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 22537  013A0E  500E               	movf	_inPipes+4,w,c	;volatile
 22538  013A10  010D               	movlb	13	; () banked
 22539  013A12  5D36               	subwf	54,w,b	;volatile
 22540  013A14  500F               	movf	_inPipes+5,w,c	;volatile
 22541  013A16  5937               	subwfb	55,w,b	;volatile
 22542  013A18  E204               	bc	i2l6548
 22543                           
 22544                           ; BSR set to: 13
 22545                           ;usb_device.c: 1506: {
 22546                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 22547  013A1A  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 22548  013A1E  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 22549  013A22                     i2l6548:
 22550                           
 22551                           ; BSR set to: 13
 22552                           ;usb_device.c: 1508: }
 22553                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 22554  013A22  EC85  F091         	call	_USBCtrlTrfTxService	;wreg free
 22555                           
 22556                           ; BSR set to: 1
 22557                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 22558  013A26  ECE6  F098         	call	PL126	;call to abstracted procedure
 22559                           
 22560                           ; BSR set to: 1
 22561                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 22562  013A2A  ECE1  F098         	call	PL48	;call to abstracted procedure
 22563  013A2E  0E48               	movlw	72
 22564  013A30  6EDF               	movwf	indf2,c
 22565                           
 22566                           ; BSR set to: 1
 22567                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22568  013A32  ECE1  F098         	call	PL48	;call to abstracted procedure
 22569  013A36  0E00               	movlw	0
 22570  013A38  8EDB               	bsf	plusw2,7,c
 22571                           
 22572                           ; BSR set to: 1
 22573  013A3A  0C00               	retlw	0	;funcret
 22574  013A3C                     __end_of_USBCtrlEPAllowDataStage:
 22575                           	opt stack 0
 22576                           tblptru	equ	0xFF8
 22577                           tblptrh	equ	0xFF7
 22578                           tblptrl	equ	0xFF6
 22579                           tablat	equ	0xFF5
 22580                           prodh	equ	0xFF4
 22581                           prodl	equ	0xFF3
 22582                           intcon	equ	0xFF2
 22583                           intcon2	equ	0xFF1
 22584                           postinc0	equ	0xFEE
 22585                           wreg	equ	0xFE8
 22586                           indf1	equ	0xFE7
 22587                           postinc1	equ	0xFE6
 22588                           postdec1	equ	0xFE5
 22589                           fsr1h	equ	0xFE2
 22590                           fsr1l	equ	0xFE1
 22591                           indf2	equ	0xFDF
 22592                           postinc2	equ	0xFDE
 22593                           postdec2	equ	0xFDD
 22594                           plusw2	equ	0xFDB
 22595                           fsr2h	equ	0xFDA
 22596                           fsr2l	equ	0xFD9
 22597                           status	equ	0xFD8
 22598                           
 22599 ;; *************** function _USBCheckStdRequest *****************
 22600 ;; Defined at:
 22601 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 22602 ;; Parameters:    Size  Location     Type
 22603 ;;		None
 22604 ;; Auto vars:     Size  Location     Type
 22605 ;;		None
 22606 ;; Return value:  Size  Location     Type
 22607 ;;		None               void
 22608 ;; Registers used:
 22609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22610 ;; Tracked objects:
 22611 ;;		On entry : F/1
 22612 ;;		On exit  : 0/0
 22613 ;;		Unchanged: 0/0
 22614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22619 ;;Total ram usage:        0 bytes
 22620 ;; Hardware stack levels used:    1
 22621 ;; Hardware stack levels required when called:    5
 22622 ;; This function calls:
 22623 ;;		_USBStdFeatureReqHandler
 22624 ;;		_USBStdGetDscHandler
 22625 ;;		_USBStdGetStatusHandler
 22626 ;;		_USBStdSetCfgHandler
 22627 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22628 ;; This function is called by:
 22629 ;;		_USBCtrlTrfSetupHandler
 22630 ;; This function uses a non-reentrant model
 22631 ;;
 22632                           
 22633                           	psect	text110
 22634  012C5A                     __ptext110:
 22635                           	opt stack 0
 22636  012C5A                     _USBCheckStdRequest:
 22637                           	opt stack 11
 22638                           
 22639                           ; BSR set to: 1
 22640                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 22641                           
 22642                           ; BSR set to: 1
 22643                           ;incstack = 0
 22644  012C5A  010D               	movlb	13	; () banked
 22645  012C5C  3930               	swapf	48,w,b	;volatile
 22646  012C5E  32E8               	rrcf	wreg,f,c
 22647  012C60  0B03               	andlw	3
 22648  012C62  E020               	bz	i2l7084
 22649  012C64  0012               	return	
 22650  012C66                     i2l359:
 22651                           
 22652                           ; BSR set to: 13
 22653                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 22654  012C66  8E0D               	bsf	_inPipes+3,7,c	;volatile
 22655                           
 22656                           ; BSR set to: 13
 22657                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 22658  012C68  0E08               	movlw	8
 22659  012C6A  6E1C               	movwf	_USBDeviceState,c	;volatile
 22660                           
 22661                           ;usb_device.c: 2699: break;
 22662  012C6C  0C08               	retlw	8
 22663  012C6E                     i2l7058:
 22664                           
 22665                           ; BSR set to: 13
 22666                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 22667  012C6E  0E29               	movlw	low _USBActiveConfiguration
 22668  012C70  6E0A               	movwf	_inPipes,c	;volatile
 22669  012C72  6A0B               	clrf	_inPipes+1,c	;volatile
 22670                           
 22671                           ; BSR set to: 13
 22672                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22673                           
 22674                           ; BSR set to: 13
 22675                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 22676                           
 22677                           ; BSR set to: 13
 22678                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 22679                           
 22680                           ;usb_device.c: 2711: break;
 22681  012C74  D037               	goto	PL274	;call to abstracted procedure
 22682  012C76                     i2l7070:
 22683                           
 22684                           ; BSR set to: 13
 22685                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 22686  012C76  0E92               	movlw	low _USBAlternateInterface
 22687  012C78  2534               	addwf	52,w,b	;volatile
 22688  012C7A  6E0A               	movwf	_inPipes,c	;volatile
 22689  012C7C  6A0B               	clrf	_inPipes+1,c	;volatile
 22690  012C7E  0E01               	movlw	high _USBAlternateInterface
 22691  012C80  220B               	addwfc	_inPipes+1,f,c	;volatile
 22692                           
 22693                           ; BSR set to: 13
 22694                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22695                           
 22696                           ; BSR set to: 13
 22697                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 22698                           
 22699                           ; BSR set to: 13
 22700                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 22701                           
 22702                           ;usb_device.c: 2724: break;
 22703  012C82  D030               	goto	PL274	;call to abstracted procedure
 22704  012C84                     i2l368:
 22705                           
 22706                           ; BSR set to: 13
 22707                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 22708  012C84  8E0D               	bsf	_inPipes+3,7,c	;volatile
 22709                           
 22710                           ; BSR set to: 13
 22711                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 22712  012C86  0E92               	movlw	low _USBAlternateInterface
 22713  012C88  2534               	addwf	52,w,b	;volatile
 22714  012C8A  6ED9               	movwf	fsr2l,c
 22715  012C8C  6ADA               	clrf	fsr2h,c
 22716  012C8E  0E01               	movlw	high _USBAlternateInterface
 22717  012C90  22DA               	addwfc	fsr2h,f,c
 22718  012C92  CD32 FFDF          	movff	3378,indf2	;volatile
 22719                           
 22720                           ;usb_device.c: 2728: break;
 22721  012C96  0012               	return	
 22722  012C98                     i2l7080:
 22723                           
 22724                           ; BSR set to: 13
 22725                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 22726  012C98  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22727  012C9A  0E02               	movlw	2
 22728  012C9C  ECE4  F0A1         	call	PL122	;call to abstracted procedure
 22729  012CA0  EFEA  F0A1         	goto	i2l6340	;wreg free
 22730  012CA4                     i2l7084:
 22731                           
 22732                           ; BSR set to: 13
 22733  012CA4  5131               	movf	49,w,b	;volatile
 22734                           
 22735                           ; Switch size 1, requested type "space"
 22736                           ; Number of cases is 11, Range of values is 0 to 12
 22737                           ; switch strategies available:
 22738                           ; Name         Instructions Cycles
 22739                           ; simple_byte           34    18 (average)
 22740                           ;	Chosen strategy is simple_byte
 22741  012CA6  E102 EF2E  F09B    	bz	_USBStdGetStatusHandler
 22742  012CAC  0A01               	xorlw	1	; case 1
 22743  012CAE  E102 EF1D  F087    	bz	_USBStdFeatureReqHandler
 22744  012CB4  0A02               	xorlw	2	; case 3
 22745  012CB6  E102 EF1D  F087    	bz	_USBStdFeatureReqHandler
 22746  012CBC  0A06               	xorlw	6	; case 5
 22747  012CBE  E0D3               	bz	i2l359
 22748  012CC0  0A03               	xorlw	3	; case 6
 22749  012CC2  E102 EF7B  F08F    	bz	_USBStdGetDscHandler
 22750  012CC8  0A01               	xorlw	1	; case 7
 22751  012CCA  E0E6               	bz	i2l7080
 22752  012CCC  0A0F               	xorlw	15	; case 8
 22753  012CCE  E0CF               	bz	i2l7058
 22754  012CD0  0A01               	xorlw	1	; case 9
 22755  012CD2  E102 EF63  F094    	bz	_USBStdSetCfgHandler
 22756  012CD8  0A03               	xorlw	3	; case 10
 22757  012CDA  E0CD               	bz	i2l7070
 22758  012CDC  0A01               	xorlw	1	; case 11
 22759  012CDE  E0D2               	bz	i2l368
 22760  012CE0  0A07               	xorlw	7	; case 12
 22761  012CE2  0012               	return	
 22762  012CE4                     __end_of_USBCheckStdRequest:
 22763                           	opt stack 0
 22764  012CE4                     PL274:
 22765                           	opt stack 11
 22766  012CE4  800D               	bsf	_inPipes+3,0,c	;volatile
 22767  012CE6  0E01               	movlw	1
 22768  012CE8  6E0E               	movwf	_inPipes+4,c	;volatile
 22769  012CEA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 22770  012CEC  0C01               	retlw	1
 22771  012CEE                     __end_ofPL274:
 22772                           	opt stack 0
 22773                           tblptru	equ	0xFF8
 22774                           tblptrh	equ	0xFF7
 22775                           tblptrl	equ	0xFF6
 22776                           tablat	equ	0xFF5
 22777                           prodh	equ	0xFF4
 22778                           prodl	equ	0xFF3
 22779                           intcon	equ	0xFF2
 22780                           intcon2	equ	0xFF1
 22781                           postinc0	equ	0xFEE
 22782                           wreg	equ	0xFE8
 22783                           indf1	equ	0xFE7
 22784                           postinc1	equ	0xFE6
 22785                           postdec1	equ	0xFE5
 22786                           fsr1h	equ	0xFE2
 22787                           fsr1l	equ	0xFE1
 22788                           indf2	equ	0xFDF
 22789                           postinc2	equ	0xFDE
 22790                           postdec2	equ	0xFDD
 22791                           plusw2	equ	0xFDB
 22792                           fsr2h	equ	0xFDA
 22793                           fsr2l	equ	0xFD9
 22794                           status	equ	0xFD8
 22795                           
 22796 ;; *************** function _USBStdSetCfgHandler *****************
 22797 ;; Defined at:
 22798 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 22799 ;; Parameters:    Size  Location     Type
 22800 ;;		None
 22801 ;; Auto vars:     Size  Location     Type
 22802 ;;  i               1   20[COMRAM] unsigned char 
 22803 ;; Return value:  Size  Location     Type
 22804 ;;		None               void
 22805 ;; Registers used:
 22806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22807 ;; Tracked objects:
 22808 ;;		On entry : 3/D
 22809 ;;		On exit  : 0/0
 22810 ;;		Unchanged: 0/0
 22811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22816 ;;Total ram usage:        1 bytes
 22817 ;; Hardware stack levels used:    1
 22818 ;; Hardware stack levels required when called:    4
 22819 ;; This function calls:
 22820 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22821 ;;		i2_memset
 22822 ;; This function is called by:
 22823 ;;		_USBCheckStdRequest
 22824 ;; This function uses a non-reentrant model
 22825 ;;
 22826                           
 22827                           	psect	text111
 22828  0128C6                     __ptext111:
 22829                           	opt stack 0
 22830  0128C6                     _USBStdSetCfgHandler:
 22831                           	opt stack 11
 22832                           
 22833                           ;usb_device.c: 1970: uint8_t i;
 22834                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 22835                           
 22836                           ;incstack = 0
 22837  0128C6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 22838                           
 22839                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 22840  0128C8  D843               	call	PL168	;call to abstracted procedure
 22841  0128CA  D83B               	call	PL162	;call to abstracted procedure
 22842  0128CC  EC44  F0A1         	call	i2_memset	;wreg free
 22843                           
 22844                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 22845  0128D0  6A2B               	clrf	i2memset@p1,c
 22846  0128D2  0E0D               	movlw	13
 22847  0128D4  6E2C               	movwf	i2memset@p1+1,c
 22848  0128D6  6A2E               	clrf	i2memset@c+1,c
 22849  0128D8  6A2D               	clrf	i2memset@c,c
 22850  0128DA  6A30               	clrf	i2memset@n+1,c
 22851  0128DC  0E30               	movlw	48
 22852  0128DE  6E2F               	movwf	i2memset@n,c
 22853  0128E0  EC44  F0A1         	call	i2_memset	;wreg free
 22854                           
 22855                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 22856  0128E4  8C65               	bsf	3941,6,c	;volatile
 22857                           
 22858                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 22859  0128E6  6A3F               	clrf	USBStdSetCfgHandler@i,c
 22860  0128E8                     i2l6568:
 22861                           
 22862                           ;usb_device.c: 1988: {
 22863                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 22864  0128E8  0E09               	movlw	low _ep_data_in
 22865  0128EA  243F               	addwf	USBStdSetCfgHandler@i,w,c
 22866                           
 22867                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 22868  0128EC  EC3F  F090         	call	PL164	;call to abstracted procedure
 22869  0128F0  243F               	addwf	USBStdSetCfgHandler@i,w,c
 22870  0128F2  EC46  F090         	call	PL194	;call to abstracted procedure
 22871  0128F6  2A3F               	incf	USBStdSetCfgHandler@i,f,c
 22872  0128F8  0E02               	movlw	2
 22873  0128FA  643F               	cpfsgt	USBStdSetCfgHandler@i,c
 22874  0128FC  D7F5               	goto	i2l6568
 22875                           
 22876                           ;usb_device.c: 1991: }
 22877                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 22878  0128FE  0E92               	movlw	low _USBAlternateInterface
 22879  012900  6E2B               	movwf	i2memset@p1,c
 22880  012902  0E01               	movlw	high _USBAlternateInterface
 22881  012904  D81E               	call	PL162	;call to abstracted procedure
 22882  012906  EC44  F0A1         	call	i2_memset	;wreg free
 22883                           
 22884                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 22885  01290A  9C65               	bcf	3941,6,c	;volatile
 22886                           
 22887                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22888  01290C  0E08               	movlw	8
 22889  01290E  6E10               	movwf	_pBDTEntryIn,c
 22890  012910  0E0D               	movlw	13
 22891  012912  6E11               	movwf	_pBDTEntryIn+1,c
 22892                           
 22893                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 22894  012914  0E00               	movlw	0
 22895  012916  6E16               	movwf	_pBDTEntryEP0OutCurrent,c
 22896  012918  0E0D               	movlw	13
 22897                           
 22898                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 22899  01291A  D81D               	call	PL278	;call to abstracted procedure
 22900                           
 22901                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 22902  01291C  CD32 F029          	movff	3378,_USBActiveConfiguration	;volatile
 22903                           
 22904                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 22905  012920  5029               	movf	_USBActiveConfiguration,w,c	;volatile
 22906  012922  E103               	bnz	i2l6590
 22907                           
 22908                           ;usb_device.c: 2010: {
 22909                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 22910  012924  0E10               	movlw	16
 22911  012926  6E1C               	movwf	_USBDeviceState,c	;volatile
 22912                           
 22913                           ;usb_device.c: 2013: }
 22914  012928  0C10               	retlw	16
 22915  01292A                     i2l6590:
 22916                           
 22917                           ;usb_device.c: 2014: else
 22918                           ;usb_device.c: 2015: {
 22919                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 22920  01292A  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22921  01292C  0E01               	movlw	1
 22922  01292E  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22923  012930  0E29               	movlw	low _USBActiveConfiguration
 22924  012932  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22925  012934  EC63  F08C         	call	PL268	;call to abstracted procedure
 22926  012938  ECEA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22927                           
 22928                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 22929  01293C  0E20               	movlw	32
 22930  01293E  6E1C               	movwf	_USBDeviceState,c	;volatile
 22931  012940  0C20               	retlw	32	;funcret
 22932  012942                     __end_of_USBStdSetCfgHandler:
 22933                           	opt stack 0
 22934  012942                     PL162:
 22935                           	opt stack 17
 22936  012942  6E2C               	movwf	i2memset@p1+1,c
 22937  012944  6A2E               	clrf	i2memset@c+1,c
 22938  012946  6A2D               	clrf	i2memset@c,c
 22939  012948  6A30               	clrf	i2memset@n+1,c
 22940  01294A  0E02               	movlw	2
 22941  01294C  6E2F               	movwf	i2memset@n,c
 22942  01294E  0C02               	retlw	2
 22943  012950                     __end_ofPL162:
 22944                           	opt stack 0
 22945  012950                     PL168:
 22946                           	opt stack 17
 22947  012950  0E27               	movlw	39
 22948  012952  6E2B               	movwf	i2memset@p1,c
 22949  012954  0C0F               	retlw	15
 22950  012956                     __end_ofPL168:
 22951                           	opt stack 0
 22952  012956                     PL278:
 22953                           	opt stack 11
 22954  012956  6E17               	movwf	_pBDTEntryEP0OutCurrent+1,c
 22955  012958  C016  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 22956  01295C  C017  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 22957  012960  0012               	return	
 22958  012962                     __end_ofPL278:
 22959                           	opt stack 0
 22960                           tblptru	equ	0xFF8
 22961                           tblptrh	equ	0xFF7
 22962                           tblptrl	equ	0xFF6
 22963                           tablat	equ	0xFF5
 22964                           prodh	equ	0xFF4
 22965                           prodl	equ	0xFF3
 22966                           intcon	equ	0xFF2
 22967                           intcon2	equ	0xFF1
 22968                           postinc0	equ	0xFEE
 22969                           wreg	equ	0xFE8
 22970                           indf1	equ	0xFE7
 22971                           postinc1	equ	0xFE6
 22972                           postdec1	equ	0xFE5
 22973                           fsr1h	equ	0xFE2
 22974                           fsr1l	equ	0xFE1
 22975                           indf2	equ	0xFDF
 22976                           postinc2	equ	0xFDE
 22977                           postdec2	equ	0xFDD
 22978                           plusw2	equ	0xFDB
 22979                           fsr2h	equ	0xFDA
 22980                           fsr2l	equ	0xFD9
 22981                           status	equ	0xFD8
 22982                           
 22983 ;; *************** function i2_memset *****************
 22984 ;; Defined at:
 22985 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 22986 ;; Parameters:    Size  Location     Type
 22987 ;;  p1              2    0[COMRAM] PTR void 
 22988 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22989 ;;  c               2    2[COMRAM] int 
 22990 ;;  n               2    4[COMRAM] unsigned int 
 22991 ;; Auto vars:     Size  Location     Type
 22992 ;;  memset          2    6[COMRAM] PTR unsigned char 
 22993 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22994 ;; Return value:  Size  Location     Type
 22995 ;;                  2    0[COMRAM] PTR void 
 22996 ;; Registers used:
 22997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22998 ;; Tracked objects:
 22999 ;;		On entry : 0/F
 23000 ;;		On exit  : 0/0
 23001 ;;		Unchanged: 0/0
 23002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23003 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23006 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23007 ;;Total ram usage:        8 bytes
 23008 ;; Hardware stack levels used:    1
 23009 ;; This function calls:
 23010 ;;		Nothing
 23011 ;; This function is called by:
 23012 ;;		_USBStdSetCfgHandler
 23013 ;;		i2_USBDeviceInit
 23014 ;; This function uses a non-reentrant model
 23015 ;;
 23016                           
 23017                           	psect	text112
 23018  014288                     __ptext112:
 23019                           	opt stack 0
 23020  014288                     i2_memset:
 23021                           	opt stack 17
 23022                           
 23023                           ;incstack = 0
 23024  014288  C02B  F031         	movff	i2memset@p1,i2memset@p
 23025  01428C  C02C  F032         	movff	i2memset@p1+1,i2memset@p+1
 23026  014290  D008               	goto	i2l6500
 23027  014292                     i2l6496:
 23028  014292  C031  FFD9         	movff	i2memset@p,fsr2l
 23029  014296  C032  FFDA         	movff	i2memset@p+1,fsr2h
 23030  01429A  C02D  FFDF         	movff	i2memset@c,indf2
 23031  01429E  4A31               	infsnz	i2memset@p,f,c
 23032  0142A0  2A32               	incf	i2memset@p+1,f,c
 23033  0142A2                     i2l6500:
 23034  0142A2  062F               	decf	i2memset@n,f,c
 23035  0142A4  A0D8               	btfss	status,0,c
 23036  0142A6  0630               	decf	i2memset@n+1,f,c
 23037  0142A8  282F               	incf	i2memset@n,w,c
 23038  0142AA  E1F3               	bnz	i2l6496
 23039  0142AC  2830               	incf	i2memset@n+1,w,c
 23040  0142AE  E1F1               	bnz	i2l6496
 23041  0142B0  0012               	return		;funcret
 23042  0142B2                     __end_ofi2_memset:
 23043                           	opt stack 0
 23044                           tblptru	equ	0xFF8
 23045                           tblptrh	equ	0xFF7
 23046                           tblptrl	equ	0xFF6
 23047                           tablat	equ	0xFF5
 23048                           prodh	equ	0xFF4
 23049                           prodl	equ	0xFF3
 23050                           intcon	equ	0xFF2
 23051                           intcon2	equ	0xFF1
 23052                           postinc0	equ	0xFEE
 23053                           wreg	equ	0xFE8
 23054                           indf1	equ	0xFE7
 23055                           postinc1	equ	0xFE6
 23056                           postdec1	equ	0xFE5
 23057                           fsr1h	equ	0xFE2
 23058                           fsr1l	equ	0xFE1
 23059                           indf2	equ	0xFDF
 23060                           postinc2	equ	0xFDE
 23061                           postdec2	equ	0xFDD
 23062                           plusw2	equ	0xFDB
 23063                           fsr2h	equ	0xFDA
 23064                           fsr2l	equ	0xFD9
 23065                           status	equ	0xFD8
 23066                           
 23067 ;; *************** function _USBStdGetStatusHandler *****************
 23068 ;; Defined at:
 23069 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 23070 ;; Parameters:    Size  Location     Type
 23071 ;;		None
 23072 ;; Auto vars:     Size  Location     Type
 23073 ;;  p               2    0[COMRAM] PTR struct __BDT
 23074 ;;		 -> NULL(0), BDT(48), 
 23075 ;; Return value:  Size  Location     Type
 23076 ;;		None               void
 23077 ;; Registers used:
 23078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23079 ;; Tracked objects:
 23080 ;;		On entry : 3/D
 23081 ;;		On exit  : F/D
 23082 ;;		Unchanged: 0/0
 23083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23088 ;;Total ram usage:        2 bytes
 23089 ;; Hardware stack levels used:    1
 23090 ;; This function calls:
 23091 ;;		Nothing
 23092 ;; This function is called by:
 23093 ;;		_USBCheckStdRequest
 23094 ;; This function uses a non-reentrant model
 23095 ;;
 23096                           
 23097                           	psect	text113
 23098  01365C                     __ptext113:
 23099                           	opt stack 0
 23100  01365C                     _USBStdGetStatusHandler:
 23101                           	opt stack 15
 23102                           
 23103                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 23104                           
 23105                           ;incstack = 0
 23106  01365C  010D               	movlb	13	; () banked
 23107  01365E  6B38               	clrf	56,b	;volatile
 23108                           
 23109                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 23110  013660  6B39               	clrf	57,b	;volatile
 23111                           
 23112                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 23113  013662  D020               	goto	i2l6640
 23114  013664                     i2l295:
 23115                           
 23116                           ; BSR set to: 13
 23117                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 23118  013664  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23119                           
 23120                           ; BSR set to: 13
 23121                           ;usb_device.c: 2145: }
 23122                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 23123                           
 23124                           ;usb_device.c: 2142: if(0 == 1)
 23125  013666  041A               	decf	_RemoteWakeup,w,c	;volatile
 23126  013668  E124               	bnz	i2l298
 23127                           
 23128                           ; BSR set to: 13
 23129                           ;usb_device.c: 2148: {
 23130                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 23131  01366A  8338               	bsf	56,1,b	;volatile
 23132  01366C  D022               	goto	i2l298
 23133  01366E                     i2l299:
 23134                           
 23135                           ; BSR set to: 13
 23136                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 23137  01366E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23138                           
 23139                           ;usb_device.c: 2154: break;
 23140  013670  D020               	goto	i2l298
 23141  013672                     i2l300:
 23142                           
 23143                           ; BSR set to: 13
 23144                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 23145  013672  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23146                           
 23147                           ;usb_device.c: 2160: {
 23148                           ;usb_device.c: 2161: BDT_ENTRY *p;
 23149                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 23150  013674  BF34               	btfsc	52,7,b	;volatile
 23151  013676  D005               	goto	i2l6630
 23152                           
 23153                           ; BSR set to: 13
 23154                           ;usb_device.c: 2164: {
 23155                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23156  013678  5134               	movf	52,w,b	;volatile
 23157  01367A  0B0F               	andlw	15
 23158  01367C  EC33  F095         	call	PL22	;call to abstracted procedure
 23159  013680  D004               	goto	L15
 23160  013682                     i2l6630:
 23161                           
 23162                           ; BSR set to: 13
 23163                           ;usb_device.c: 2167: else
 23164                           ;usb_device.c: 2168: {
 23165                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23166  013682  5134               	movf	52,w,b	;volatile
 23167  013684  0B0F               	andlw	15
 23168  013686  EC3B  F095         	call	PL46	;call to abstracted procedure
 23169  01368A                     L15:
 23170  01368A  CFDE F02B          	movff	postinc2,USBStdGetStatusHandler@p
 23171  01368E  CFDD F02C          	movff	postdec2,USBStdGetStatusHandler@p+1
 23172                           
 23173                           ; BSR set to: 13
 23174                           ;usb_device.c: 2170: }
 23175                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 23176  013692  D819               	call	PL312	;call to abstracted procedure
 23177  013694  AEDF               	btfss	indf2,7,c
 23178  013696  D00D               	goto	i2l298
 23179                           
 23180                           ; BSR set to: 13
 23181  013698  D816               	call	PL312	;call to abstracted procedure
 23182  01369A  A4DF               	btfss	indf2,2,c
 23183  01369C  D00A               	goto	i2l298
 23184                           
 23185                           ; BSR set to: 13
 23186                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 23187  01369E  0E01               	movlw	1
 23188  0136A0  6F38               	movwf	56,b	;volatile
 23189  0136A2  D007               	goto	i2l298
 23190  0136A4                     i2l6640:
 23191                           
 23192                           ; BSR set to: 13
 23193  0136A4  5130               	movf	48,w,b	;volatile
 23194  0136A6  0B1F               	andlw	31
 23195                           
 23196                           ; Switch size 1, requested type "space"
 23197                           ; Number of cases is 3, Range of values is 0 to 2
 23198                           ; switch strategies available:
 23199                           ; Name         Instructions Cycles
 23200                           ; simple_byte           10     6 (average)
 23201                           ;	Chosen strategy is simple_byte
 23202  0136A8  E0DD               	bz	i2l295
 23203  0136AA  0A01               	xorlw	1	; case 1
 23204  0136AC  E0E0               	bz	i2l299
 23205  0136AE  0A03               	xorlw	3	; case 2
 23206  0136B0  E0E0               	bz	i2l300
 23207  0136B2                     i2l298:
 23208                           
 23209                           ; BSR set to: 13
 23210                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 23211  0136B2  AE0D               	btfss	_inPipes+3,7,c	;volatile
 23212  0136B4  0012               	return	
 23213                           
 23214                           ; BSR set to: 13
 23215                           ;usb_device.c: 2179: {
 23216                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 23217  0136B6  0E38               	movlw	56
 23218  0136B8  6E0A               	movwf	_inPipes,c	;volatile
 23219  0136BA  0E0D               	movlw	13
 23220  0136BC  6E0B               	movwf	_inPipes+1,c	;volatile
 23221                           
 23222                           ; BSR set to: 13
 23223                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23224  0136BE  800D               	bsf	_inPipes+3,0,c	;volatile
 23225                           
 23226                           ; BSR set to: 13
 23227                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 23228  0136C0  0E02               	movlw	2
 23229  0136C2  6E0E               	movwf	_inPipes+4,c	;volatile
 23230                           
 23231                           ; BSR set to: 13
 23232  0136C4  0C02               	retlw	2	;funcret
 23233  0136C6                     __end_of_USBStdGetStatusHandler:
 23234                           	opt stack 0
 23235  0136C6                     PL312:
 23236                           	opt stack 15
 23237  0136C6  C02B  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 23238  0136CA  C02C  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 23239  0136CE  0012               	return	
 23240  0136D0                     __end_ofPL312:
 23241                           	opt stack 0
 23242                           tblptru	equ	0xFF8
 23243                           tblptrh	equ	0xFF7
 23244                           tblptrl	equ	0xFF6
 23245                           tablat	equ	0xFF5
 23246                           prodh	equ	0xFF4
 23247                           prodl	equ	0xFF3
 23248                           intcon	equ	0xFF2
 23249                           intcon2	equ	0xFF1
 23250                           postinc0	equ	0xFEE
 23251                           wreg	equ	0xFE8
 23252                           indf1	equ	0xFE7
 23253                           postinc1	equ	0xFE6
 23254                           postdec1	equ	0xFE5
 23255                           fsr1h	equ	0xFE2
 23256                           fsr1l	equ	0xFE1
 23257                           indf2	equ	0xFDF
 23258                           postinc2	equ	0xFDE
 23259                           postdec2	equ	0xFDD
 23260                           plusw2	equ	0xFDB
 23261                           fsr2h	equ	0xFDA
 23262                           fsr2l	equ	0xFD9
 23263                           status	equ	0xFD8
 23264                           
 23265 ;; *************** function _USBStdGetDscHandler *****************
 23266 ;; Defined at:
 23267 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 23268 ;; Parameters:    Size  Location     Type
 23269 ;;		None
 23270 ;; Auto vars:     Size  Location     Type
 23271 ;;		None
 23272 ;; Return value:  Size  Location     Type
 23273 ;;		None               void
 23274 ;; Registers used:
 23275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23276 ;; Tracked objects:
 23277 ;;		On entry : 3/D
 23278 ;;		On exit  : 0/0
 23279 ;;		Unchanged: 0/0
 23280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23285 ;;Total ram usage:        2 bytes
 23286 ;; Hardware stack levels used:    1
 23287 ;; This function calls:
 23288 ;;		Nothing
 23289 ;; This function is called by:
 23290 ;;		_USBCheckStdRequest
 23291 ;; This function uses a non-reentrant model
 23292 ;;
 23293                           
 23294                           	psect	text114
 23295  011EF6                     __ptext114:
 23296                           	opt stack 0
 23297  011EF6                     _USBStdGetDscHandler:
 23298                           	opt stack 15
 23299                           
 23300                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 23301                           
 23302                           ; BSR set to: 13
 23303                           ;incstack = 0
 23304  011EF6  0E80               	movlw	128
 23305  011EF8  010D               	movlb	13	; () banked
 23306  011EFA  1930               	xorwf	48,w,b	;volatile
 23307  011EFC  A4D8               	btfss	status,2,c
 23308  011EFE  0012               	return	
 23309                           
 23310                           ; BSR set to: 13
 23311                           ;usb_device.c: 2046: {
 23312                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 23313  011F00  0EC0               	movlw	192
 23314  011F02  6E0D               	movwf	_inPipes+3,c	;volatile
 23315                           
 23316                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 23317  011F04  D047               	goto	i2l6618
 23318  011F06                     i2l6598:
 23319                           
 23320                           ; BSR set to: 13
 23321                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 23322  011F06  0EC0               	movlw	low _device_dsc
 23323  011F08  6E0A               	movwf	_inPipes,c	;volatile
 23324  011F0A  0EFB               	movlw	high _device_dsc
 23325  011F0C  6E0B               	movwf	_inPipes+1,c	;volatile
 23326                           
 23327                           ; BSR set to: 13
 23328                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 23329  011F0E  6A0F               	clrf	_inPipes+5,c	;volatile
 23330  011F10  0E12               	movlw	18
 23331  011F12  6E0E               	movwf	_inPipes+4,c	;volatile
 23332                           
 23333                           ;usb_device.c: 2058: break;
 23334  011F14  0C12               	retlw	18
 23335  011F16                     i2l6602:
 23336                           
 23337                           ; BSR set to: 13
 23338                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 23339  011F16  5132               	movf	50,w,b	;volatile
 23340  011F18  E11C               	bnz	i2l285
 23341                           
 23342                           ; BSR set to: 13
 23343                           ;usb_device.c: 2064: {
 23344                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 23345  011F1A  5132               	movf	50,w,b	;volatile
 23346  011F1C  0D02               	mullw	2
 23347  011F1E  0E7F               	movlw	low _USB_CD_Ptr
 23348  011F20  24F3               	addwf	prodl,w,c
 23349  011F22  6EF6               	movwf	tblptrl,c
 23350  011F24  0EFA               	movlw	high _USB_CD_Ptr
 23351  011F26  20F4               	addwfc	prodh,w,c
 23352  011F28  D850               	call	PL142	;call to abstracted procedure
 23353  011F2A  D855               	call	PL290	;call to abstracted procedure
 23354                           
 23355                           ; BSR set to: 13
 23356                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 23357  011F2C  0E02               	movlw	2
 23358  011F2E  D840               	call	PL108	;call to abstracted procedure
 23359  011F30  64F7               	cpfsgt	tblptrh,c
 23360  011F32  D003               	bra	i2u544_47
 23361  011F34  0008               	tblrd		*
 23362  011F36  50F5               	movf	tablat,w,c
 23363  011F38  D001               	bra	i2u544_40
 23364  011F3A                     i2u544_47:
 23365  011F3A  D834               	call	PL24	;call to abstracted procedure
 23366  011F3C                     i2u544_40:
 23367  011F3C  6E0E               	movwf	_inPipes+4,c	;volatile
 23368                           
 23369                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 23370  011F3E  0E03               	movlw	3
 23371  011F40  D837               	call	PL108	;call to abstracted procedure
 23372  011F42  64F7               	cpfsgt	tblptrh,c
 23373  011F44  D003               	bra	i2u545_47
 23374  011F46  0008               	tblrd		*
 23375  011F48  50F5               	movf	tablat,w,c
 23376  011F4A  D001               	bra	i2u545_40
 23377  011F4C                     i2u545_47:
 23378  011F4C  D82B               	call	PL24	;call to abstracted procedure
 23379  011F4E                     i2u545_40:
 23380  011F4E  6E0F               	movwf	_inPipes+5,c	;volatile
 23381                           
 23382                           ;usb_device.c: 2076: }
 23383  011F50  0012               	return	
 23384  011F52                     i2l285:
 23385                           
 23386                           ; BSR set to: 13
 23387                           ;usb_device.c: 2077: else
 23388                           ;usb_device.c: 2078: {
 23389                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 23390  011F52  6A0D               	clrf	_inPipes+3,c	;volatile
 23391  011F54  0012               	return	
 23392  011F56                     i2l6610:
 23393                           
 23394                           ; BSR set to: 13
 23395                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 23396  011F56  0E03               	movlw	3
 23397  011F58  6132               	cpfslt	50,b	;volatile
 23398  011F5A  D018               	goto	i2l288
 23399                           
 23400                           ; BSR set to: 13
 23401                           ;usb_device.c: 2087: {
 23402                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 23403  011F5C  5132               	movf	50,w,b	;volatile
 23404  011F5E  0D02               	mullw	2
 23405  011F60  0E79               	movlw	low _USB_SD_Ptr
 23406  011F62  24F3               	addwf	prodl,w,c
 23407  011F64  6EF6               	movwf	tblptrl,c
 23408  011F66  0EFA               	movlw	high _USB_SD_Ptr
 23409  011F68  20F4               	addwfc	prodh,w,c
 23410  011F6A  D82F               	call	PL142	;call to abstracted procedure
 23411  011F6C  D834               	call	PL290	;call to abstracted procedure
 23412                           
 23413                           ; BSR set to: 13
 23414                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 23415  011F6E  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 23416  011F72  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23417  011F76  6EF8               	movwf	tblptru,c
 23418  011F78  0E0E               	movlw	(high __ramtop+-1)
 23419  011F7A  64F7               	cpfsgt	tblptrh,c
 23420  011F7C  D003               	bra	i2u547_47
 23421  011F7E  0008               	tblrd		*
 23422  011F80  50F5               	movf	tablat,w,c
 23423  011F82  D001               	bra	i2u547_40
 23424  011F84                     i2u547_47:
 23425  011F84  D80F               	call	PL24	;call to abstracted procedure
 23426  011F86                     i2u547_40:
 23427  011F86  6E0E               	movwf	_inPipes+4,c	;volatile
 23428  011F88  6A0F               	clrf	_inPipes+5,c	;volatile
 23429                           
 23430                           ;usb_device.c: 2092: }
 23431  011F8A  0012               	return	
 23432  011F8C                     i2l288:
 23433                           
 23434                           ; BSR set to: 13
 23435                           ;usb_device.c: 2102: else
 23436                           ;usb_device.c: 2103: {
 23437                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 23438  011F8C  6A0D               	clrf	_inPipes+3,c	;volatile
 23439  011F8E  0012               	return	
 23440  011F90                     i2l290:
 23441                           
 23442                           ; BSR set to: 13
 23443                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 23444  011F90  6A0D               	clrf	_inPipes+3,c	;volatile
 23445                           
 23446                           ;usb_device.c: 2109: break;
 23447  011F92  0012               	return	
 23448  011F94                     i2l6618:
 23449                           
 23450                           ; BSR set to: 13
 23451  011F94  5133               	movf	51,w,b	;volatile
 23452                           
 23453                           ; Switch size 1, requested type "space"
 23454                           ; Number of cases is 3, Range of values is 1 to 3
 23455                           ; switch strategies available:
 23456                           ; Name         Instructions Cycles
 23457                           ; simple_byte           10     6 (average)
 23458                           ;	Chosen strategy is simple_byte
 23459  011F96  0A01               	xorlw	1	; case 1
 23460  011F98  E0B6               	bz	i2l6598
 23461  011F9A  0A03               	xorlw	3	; case 2
 23462  011F9C  E0BC               	bz	i2l6602
 23463  011F9E  0A01               	xorlw	1	; case 3
 23464  011FA0  E0DA               	bz	i2l6610
 23465  011FA2  D7F6               	goto	i2l290
 23466  011FA4                     __end_of_USBStdGetDscHandler:
 23467                           	opt stack 0
 23468  011FA4                     PL24:
 23469                           	opt stack 18
 23470  011FA4  CFF6 FFE1          	movff	tblptrl,fsr1l
 23471  011FA8  CFF7 FFE2          	movff	tblptrh,fsr1h
 23472  011FAC  50E7               	movf	indf1,w,c
 23473  011FAE  0012               	return	
 23474  011FB0                     __end_ofPL24:
 23475                           	opt stack 0
 23476  011FB0                     PL108:
 23477                           	opt stack 15
 23478  011FB0  240A               	addwf	_inPipes,w,c	;volatile
 23479  011FB2  6E2B               	movwf	??_USBStdGetDscHandler& (0+255),c
 23480  011FB4  0E00               	movlw	0
 23481  011FB6  200B               	addwfc	_inPipes+1,w,c	;volatile
 23482  011FB8  6E2C               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 23483  011FBA  C02B  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 23484  011FBE  C02C  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 23485  011FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 23486  011FC4  6EF8               	movwf	tblptru,c
 23487  011FC6  0E0E               	movlw	(high __ramtop+-1)
 23488  011FC8  0012               	return	
 23489  011FCA                     __end_ofPL108:
 23490                           	opt stack 0
 23491  011FCA                     PL142:
 23492                           	opt stack 13
 23493  011FCA  6EF7               	movwf	tblptrh,c
 23494  011FCC                     	if	1	;There are 3 active tblptr bytes
 23495  011FCC  6AF8               	clrf	tblptru,c
 23496  011FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 23497  011FD0  22F8               	addwfc	tblptru,f,c
 23498  011FD2                     	endif
 23499  011FD2  0009               	tblrd		*+
 23500  011FD4  0012               	return	
 23501  011FD6                     __end_ofPL142:
 23502                           	opt stack 0
 23503  011FD6                     PL290:
 23504                           	opt stack 15
 23505  011FD6  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 23506  011FDA  000A               	tblrd		*-
 23507  011FDC  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 23508  011FE0  0012               	return	
 23509  011FE2                     __end_ofPL290:
 23510                           	opt stack 0
 23511                           tblptru	equ	0xFF8
 23512                           tblptrh	equ	0xFF7
 23513                           tblptrl	equ	0xFF6
 23514                           tablat	equ	0xFF5
 23515                           prodh	equ	0xFF4
 23516                           prodl	equ	0xFF3
 23517                           intcon	equ	0xFF2
 23518                           intcon2	equ	0xFF1
 23519                           postinc0	equ	0xFEE
 23520                           wreg	equ	0xFE8
 23521                           indf1	equ	0xFE7
 23522                           postinc1	equ	0xFE6
 23523                           postdec1	equ	0xFE5
 23524                           fsr1h	equ	0xFE2
 23525                           fsr1l	equ	0xFE1
 23526                           indf2	equ	0xFDF
 23527                           postinc2	equ	0xFDE
 23528                           postdec2	equ	0xFDD
 23529                           plusw2	equ	0xFDB
 23530                           fsr2h	equ	0xFDA
 23531                           fsr2l	equ	0xFD9
 23532                           status	equ	0xFD8
 23533                           
 23534 ;; *************** function _USBStdFeatureReqHandler *****************
 23535 ;; Defined at:
 23536 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 23537 ;; Parameters:    Size  Location     Type
 23538 ;;		None
 23539 ;; Auto vars:     Size  Location     Type
 23540 ;;  p               2   25[COMRAM] PTR struct __BDT
 23541 ;;		 -> NULL(0), BDT(48), 
 23542 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 23543 ;;		 -> UEP0(1), 
 23544 ;;  current_ep_d    1   24[COMRAM] struct .
 23545 ;; Return value:  Size  Location     Type
 23546 ;;		None               void
 23547 ;; Registers used:
 23548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23549 ;; Tracked objects:
 23550 ;;		On entry : 3/D
 23551 ;;		On exit  : 3/1
 23552 ;;		Unchanged: 0/0
 23553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23555 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23557 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23558 ;;Total ram usage:        7 bytes
 23559 ;; Hardware stack levels used:    1
 23560 ;; Hardware stack levels required when called:    4
 23561 ;; This function calls:
 23562 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23563 ;; This function is called by:
 23564 ;;		_USBCheckStdRequest
 23565 ;; This function uses a non-reentrant model
 23566 ;;
 23567                           
 23568                           	psect	text115
 23569  010E3A                     __ptext115:
 23570                           	opt stack 0
 23571  010E3A                     _USBStdFeatureReqHandler:
 23572                           	opt stack 11
 23573                           
 23574                           ;usb_device.c: 2759: BDT_ENTRY *p;
 23575                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 23576                           ;usb_device.c: 2764: unsigned char* pUEP;
 23577                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 23578                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 23579                           
 23580                           ;incstack = 0
 23581  010E3A  010D               	movlb	13	; () banked
 23582  010E3C  0532               	decf	50,w,b	;volatile
 23583  010E3E  E10B               	bnz	i2l6658
 23584                           
 23585                           ; BSR set to: 13
 23586  010E40  5130               	movf	48,w,b	;volatile
 23587  010E42  0B1F               	andlw	31
 23588  010E44  E108               	bnz	i2l6658
 23589                           
 23590                           ; BSR set to: 13
 23591                           ;usb_device.c: 2804: {
 23592                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 23593  010E46  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23594                           
 23595                           ; BSR set to: 13
 23596                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 23597  010E48  0E03               	movlw	3
 23598  010E4A  1931               	xorwf	49,w,b	;volatile
 23599  010E4C  E103               	bnz	i2l375
 23600                           
 23601                           ; BSR set to: 13
 23602                           ;usb_device.c: 2807: RemoteWakeup = 1;
 23603  010E4E  0E01               	movlw	1
 23604  010E50  6E1A               	movwf	_RemoteWakeup,c	;volatile
 23605  010E52  D001               	goto	i2l6658
 23606  010E54                     i2l375:
 23607                           
 23608                           ; BSR set to: 13
 23609                           ;usb_device.c: 2808: else
 23610                           ;usb_device.c: 2809: RemoteWakeup = 0;
 23611  010E54  6A1A               	clrf	_RemoteWakeup,c	;volatile
 23612  010E56                     i2l6658:
 23613                           
 23614                           ; BSR set to: 13
 23615                           ;usb_device.c: 2810: }
 23616                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 23617                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 23618                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 23619                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 23620  010E56  5132               	movf	50,w,b	;volatile
 23621  010E58  A4D8               	btfss	status,2,c
 23622  010E5A  0012               	return	
 23623                           
 23624                           ; BSR set to: 13
 23625  010E5C  5130               	movf	48,w,b	;volatile
 23626  010E5E  0B1F               	andlw	31
 23627  010E60  0A02               	xorlw	2
 23628  010E62  A4D8               	btfss	status,2,c
 23629  010E64  0012               	return	
 23630                           
 23631                           ; BSR set to: 13
 23632  010E66  5134               	movf	52,w,b	;volatile
 23633  010E68  0B0F               	andlw	15
 23634  010E6A  B4D8               	btfsc	status,2,c
 23635  010E6C  0012               	return	
 23636                           
 23637                           ; BSR set to: 13
 23638  010E6E  5134               	movf	52,w,b	;volatile
 23639  010E70  0B0F               	andlw	15
 23640  010E72  6E3F               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23641  010E74  0E03               	movlw	3
 23642  010E76  603F               	cpfslt	??_USBStdFeatureReqHandler,c
 23643  010E78  0C03               	retlw	3
 23644                           
 23645                           ; BSR set to: 13
 23646  010E7A  0E20               	movlw	32
 23647  010E7C  181C               	xorwf	_USBDeviceState,w,c	;volatile
 23648  010E7E  A4D8               	btfss	status,2,c
 23649  010E80  0012               	return	
 23650                           
 23651                           ; BSR set to: 13
 23652                           ;usb_device.c: 2817: {
 23653                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 23654  010E82  8E0D               	bsf	_inPipes+3,7,c	;volatile
 23655                           
 23656                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 23657  010E84  BF34               	btfsc	52,7,b	;volatile
 23658  010E86  D007               	goto	i2l6674
 23659                           
 23660                           ; BSR set to: 13
 23661                           ;usb_device.c: 2824: {
 23662                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23663  010E88  5134               	movf	52,w,b	;volatile
 23664  010E8A  0B0F               	andlw	15
 23665  010E8C  EC33  F095         	call	PL22	;call to abstracted procedure
 23666  010E90  D898               	call	PL192	;call to abstracted procedure
 23667                           
 23668                           ; BSR set to: 13
 23669                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 23670  010E92  D87B               	call	PL92	;call to abstracted procedure
 23671  010E94  D007               	goto	L16
 23672  010E96                     i2l6674:
 23673                           
 23674                           ; BSR set to: 13
 23675                           ;usb_device.c: 2828: else
 23676                           ;usb_device.c: 2829: {
 23677                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23678  010E96  5134               	movf	52,w,b	;volatile
 23679  010E98  0B0F               	andlw	15
 23680  010E9A  EC3B  F095         	call	PL46	;call to abstracted procedure
 23681  010E9E  D891               	call	PL192	;call to abstracted procedure
 23682                           
 23683                           ; BSR set to: 13
 23684                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 23685  010EA0  5134               	movf	52,w,b	;volatile
 23686  010EA2  D87C               	call	PL114	;call to abstracted procedure
 23687  010EA4                     L16:
 23688  010EA4  2040               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 23689  010EA6  6EDA               	movwf	fsr2h,c
 23690  010EA8  50DF               	movf	indf2,w,c
 23691  010EAA  6E43               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 23692                           
 23693                           ; BSR set to: 13
 23694                           ;usb_device.c: 2832: }
 23695                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 23696  010EAC  B043               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 23697  010EAE  D002               	goto	i2l6682
 23698                           
 23699                           ; BSR set to: 13
 23700                           ;usb_device.c: 2839: {
 23701                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 23702  010EB0  9444               	bcf	USBStdFeatureReqHandler@p,2,c
 23703                           
 23704                           ;usb_device.c: 2841: }
 23705  010EB2  D001               	goto	i2l6684
 23706  010EB4                     i2l6682:
 23707                           
 23708                           ; BSR set to: 13
 23709                           ;usb_device.c: 2842: else
 23710                           ;usb_device.c: 2843: {
 23711                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 23712  010EB4  8444               	bsf	USBStdFeatureReqHandler@p,2,c
 23713  010EB6                     i2l6684:
 23714                           
 23715                           ; BSR set to: 13
 23716                           ;usb_device.c: 2845: }
 23717                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 23718  010EB6  BF34               	btfsc	52,7,b	;volatile
 23719  010EB8  D005               	goto	i2l6688
 23720                           
 23721                           ; BSR set to: 13
 23722                           ;usb_device.c: 2851: {
 23723                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23724  010EBA  5134               	movf	52,w,b	;volatile
 23725  010EBC  0B0F               	andlw	15
 23726  010EBE  EC33  F095         	call	PL22	;call to abstracted procedure
 23727  010EC2  D004               	goto	L17
 23728  010EC4                     i2l6688:
 23729                           
 23730                           ; BSR set to: 13
 23731                           ;usb_device.c: 2854: else
 23732                           ;usb_device.c: 2855: {
 23733                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23734  010EC4  5134               	movf	52,w,b	;volatile
 23735  010EC6  0B0F               	andlw	15
 23736  010EC8  EC3B  F095         	call	PL46	;call to abstracted procedure
 23737  010ECC                     L17:
 23738  010ECC  C044  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 23739  010ED0  C045  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 23740                           
 23741                           ; BSR set to: 13
 23742                           ;usb_device.c: 2857: }
 23743                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 23744  010ED4  0E03               	movlw	3
 23745  010ED6  1931               	xorwf	49,w,b	;volatile
 23746  010ED8  E113               	bnz	i2l6700
 23747                           
 23748                           ; BSR set to: 13
 23749                           ;usb_device.c: 2861: {
 23750                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 23751  010EDA  D852               	call	PL78	;call to abstracted procedure
 23752  010EDC  AEDF               	btfss	indf2,7,c
 23753  010EDE  D00A               	goto	i2l385
 23754                           
 23755                           ; BSR set to: 13
 23756                           ;usb_device.c: 2863: {
 23757                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 23758  010EE0  BF34               	btfsc	52,7,b	;volatile
 23759  010EE2  D002               	goto	i2l6698
 23760                           
 23761                           ; BSR set to: 13
 23762                           ;usb_device.c: 2867: {
 23763                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 23764  010EE4  D852               	call	PL92	;call to abstracted procedure
 23765  010EE6  D002               	goto	L18
 23766  010EE8                     i2l6698:
 23767                           
 23768                           ; BSR set to: 13
 23769                           ;usb_device.c: 2870: else
 23770                           ;usb_device.c: 2871: {
 23771                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 23772  010EE8  5134               	movf	52,w,b	;volatile
 23773  010EEA  D858               	call	PL114	;call to abstracted procedure
 23774  010EEC                     L18:
 23775  010EEC  2040               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 23776  010EEE  6EDA               	movwf	fsr2h,c
 23777  010EF0  0101               	movlb	1	; () banked
 23778  010EF2  82DF               	bsf	indf2,1,c
 23779  010EF4                     i2l385:
 23780                           
 23781                           ;usb_device.c: 2873: }
 23782                           ;usb_device.c: 2874: }
 23783                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 23784  010EF4  D845               	call	PL78	;call to abstracted procedure
 23785  010EF6  0E00               	movlw	0
 23786  010EF8  84DB               	bsf	plusw2,2,c
 23787                           
 23788                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 23789  010EFA  D842               	call	PL78	;call to abstracted procedure
 23790  010EFC  8EDB               	bsf	plusw2,7,c
 23791                           
 23792                           ;usb_device.c: 2879: }
 23793  010EFE  0C00               	retlw	0
 23794  010F00                     i2l6700:
 23795                           
 23796                           ; BSR set to: 13
 23797                           ;usb_device.c: 2880: else
 23798                           ;usb_device.c: 2881: {
 23799                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 23800  010F00  0E04               	movlw	4
 23801  010F02  1A44               	xorwf	USBStdFeatureReqHandler@p,f,c
 23802                           
 23803                           ; BSR set to: 13
 23804                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 23805  010F04  D83D               	call	PL78	;call to abstracted procedure
 23806  010F06  AEDF               	btfss	indf2,7,c
 23807  010F08  D00A               	goto	i2l6710
 23808                           
 23809                           ; BSR set to: 13
 23810                           ;usb_device.c: 2888: {
 23811                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 23812  010F0A  D83A               	call	PL78	;call to abstracted procedure
 23813  010F0C  0E7F               	movlw	127
 23814  010F0E  16DF               	andwf	indf2,f,c
 23815                           
 23816                           ; BSR set to: 13
 23817                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 23818  010F10  D837               	call	PL78	;call to abstracted procedure
 23819  010F12  0E00               	movlw	0
 23820  010F14  8CDB               	bsf	plusw2,6,c
 23821                           
 23822                           ; BSR set to: 13
 23823                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23824  010F16  D84A               	call	PL138	;call to abstracted procedure
 23825  010F18  ECEA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23826                           
 23827                           ;usb_device.c: 2894: }
 23828  010F1C  D003               	goto	i2l6712
 23829  010F1E                     i2l6710:
 23830                           
 23831                           ; BSR set to: 13
 23832                           ;usb_device.c: 2895: else
 23833                           ;usb_device.c: 2896: {
 23834                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 23835  010F1E  D830               	call	PL78	;call to abstracted procedure
 23836  010F20  0E00               	movlw	0
 23837  010F22  8CDB               	bsf	plusw2,6,c
 23838  010F24                     i2l6712:
 23839                           
 23840                           ;usb_device.c: 2899: }
 23841                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 23842  010F24  0E04               	movlw	4
 23843  010F26  1A44               	xorwf	USBStdFeatureReqHandler@p,f,c
 23844                           
 23845                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 23846  010F28  B243               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 23847  010F2A  D003               	goto	i2l393
 23848  010F2C  D829               	call	PL78	;call to abstracted procedure
 23849  010F2E  AEDF               	btfss	indf2,7,c
 23850  010F30  D012               	goto	i2l6726
 23851  010F32                     i2l393:
 23852                           
 23853                           ;usb_device.c: 2910: {
 23854                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 23855  010F32  010D               	movlb	13	; () banked
 23856  010F34  BF34               	btfsc	52,7,b	;volatile
 23857  010F36  D002               	goto	i2l6720
 23858                           
 23859                           ; BSR set to: 13
 23860                           ;usb_device.c: 2912: {
 23861                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 23862  010F38  D828               	call	PL92	;call to abstracted procedure
 23863  010F3A  D002               	goto	L19
 23864  010F3C                     i2l6720:
 23865                           
 23866                           ; BSR set to: 13
 23867                           ;usb_device.c: 2915: else
 23868                           ;usb_device.c: 2916: {
 23869                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 23870  010F3C  5134               	movf	52,w,b	;volatile
 23871  010F3E  D82E               	call	PL114	;call to abstracted procedure
 23872  010F40                     L19:
 23873  010F40  2040               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 23874  010F42  6EDA               	movwf	fsr2h,c
 23875  010F44  0101               	movlb	1	; () banked
 23876  010F46  92DF               	bcf	indf2,1,c
 23877                           
 23878                           ; BSR set to: 1
 23879                           ;usb_device.c: 2918: }
 23880                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23881  010F48  D81B               	call	PL78	;call to abstracted procedure
 23882  010F4A  0E3B               	movlw	59
 23883  010F4C  16DF               	andwf	indf2,f,c
 23884                           
 23885                           ; BSR set to: 1
 23886                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23887  010F4E  D82E               	call	PL138	;call to abstracted procedure
 23888  010F50  ECEA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23889                           
 23890                           ;usb_device.c: 2924: }
 23891  010F54  D003               	goto	i2l6728
 23892  010F56                     i2l6726:
 23893                           
 23894                           ;usb_device.c: 2925: else
 23895                           ;usb_device.c: 2926: {
 23896                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23897  010F56  D814               	call	PL78	;call to abstracted procedure
 23898  010F58  0E3B               	movlw	59
 23899  010F5A  16DF               	andwf	indf2,f,c
 23900  010F5C                     i2l6728:
 23901                           
 23902                           ;usb_device.c: 2929: }
 23903                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 23904  010F5C  010D               	movlb	13	; () banked
 23905  010F5E  5134               	movf	52,w,b	;volatile
 23906  010F60  0B0F               	andlw	15
 23907  010F62  6E3F               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23908  010F64  6A40               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 23909  010F66  0E26               	movlw	38
 23910  010F68  243F               	addwf	??_USBStdFeatureReqHandler,w,c
 23911  010F6A  6E41               	movwf	USBStdFeatureReqHandler@pUEP,c
 23912  010F6C  0E0F               	movlw	15
 23913  010F6E  2040               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 23914  010F70  6E42               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 23915                           
 23916                           ; BSR set to: 13
 23917                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 23918  010F72  C041  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 23919  010F76  C042  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 23920  010F7A  0EFE               	movlw	254
 23921  010F7C  16DF               	andwf	indf2,f,c
 23922  010F7E  0CFE               	retlw	254	;funcret
 23923  010F80                     __end_of_USBStdFeatureReqHandler:
 23924                           	opt stack 0
 23925  010F80                     PL78:
 23926                           	opt stack 11
 23927  010F80  C044  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23928  010F84  C045  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23929  010F88  0012               	return	
 23930  010F8A                     __end_ofPL78:
 23931                           	opt stack 0
 23932  010F8A                     PL92:
 23933                           	opt stack 11
 23934  010F8A  5134               	movf	52,w,b	;volatile
 23935  010F8C  0B0F               	andlw	15
 23936  010F8E  6E3F               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23937  010F90  6A40               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 23938  010F92  0E0C               	movlw	low _ep_data_out
 23939  010F94  243F               	addwf	??_USBStdFeatureReqHandler,w,c
 23940  010F96  6ED9               	movwf	fsr2l,c
 23941  010F98  0E01               	movlw	high _ep_data_out
 23942  010F9A  0012               	return	
 23943  010F9C                     __end_ofPL92:
 23944                           	opt stack 0
 23945  010F9C                     PL114:
 23946                           	opt stack 11
 23947  010F9C  0B0F               	andlw	15
 23948  010F9E  6E3F               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23949  010FA0  6A40               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 23950  010FA2  0E09               	movlw	low _ep_data_in
 23951  010FA4  243F               	addwf	??_USBStdFeatureReqHandler,w,c
 23952  010FA6  6ED9               	movwf	fsr2l,c
 23953  010FA8  0E01               	movlw	high _ep_data_in
 23954  010FAA  0012               	return	
 23955  010FAC                     __end_ofPL114:
 23956                           	opt stack 0
 23957  010FAC                     PL138:
 23958                           	opt stack 11
 23959  010FAC  6A38               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23960  010FAE  0E05               	movlw	5
 23961  010FB0  6E37               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23962  010FB2  C044  F039         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23963  010FB6  C045  F03A         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23964  010FBA  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23965  010FBC  0E02               	movlw	2
 23966  010FBE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23967  010FC0  0C02               	retlw	2
 23968  010FC2                     __end_ofPL138:
 23969                           	opt stack 0
 23970  010FC2                     PL192:
 23971                           	opt stack 11
 23972  010FC2  CFDE F044          	movff	postinc2,USBStdFeatureReqHandler@p
 23973  010FC6  CFDD F045          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23974  010FCA  0012               	return	
 23975  010FCC                     __end_ofPL192:
 23976                           	opt stack 0
 23977                           tblptru	equ	0xFF8
 23978                           tblptrh	equ	0xFF7
 23979                           tblptrl	equ	0xFF6
 23980                           tablat	equ	0xFF5
 23981                           prodh	equ	0xFF4
 23982                           prodl	equ	0xFF3
 23983                           intcon	equ	0xFF2
 23984                           intcon2	equ	0xFF1
 23985                           postinc0	equ	0xFEE
 23986                           wreg	equ	0xFE8
 23987                           indf1	equ	0xFE7
 23988                           postinc1	equ	0xFE6
 23989                           postdec1	equ	0xFE5
 23990                           fsr1h	equ	0xFE2
 23991                           fsr1l	equ	0xFE1
 23992                           indf2	equ	0xFDF
 23993                           postinc2	equ	0xFDE
 23994                           postdec2	equ	0xFDD
 23995                           plusw2	equ	0xFDB
 23996                           fsr2h	equ	0xFDA
 23997                           fsr2l	equ	0xFD9
 23998                           status	equ	0xFD8
 23999                           
 24000 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 24001 ;; Defined at:
 24002 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 24003 ;; Parameters:    Size  Location     Type
 24004 ;;  event           2   12[COMRAM] enum E8545
 24005 ;;  pdata           2   14[COMRAM] PTR void 
 24006 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 24007 ;;  size            2   16[COMRAM] unsigned int 
 24008 ;; Auto vars:     Size  Location     Type
 24009 ;;		None
 24010 ;; Return value:  Size  Location     Type
 24011 ;;                  1    wreg      unsigned char 
 24012 ;; Registers used:
 24013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24014 ;; Tracked objects:
 24015 ;;		On entry : 0/F
 24016 ;;		On exit  : 0/0
 24017 ;;		Unchanged: 0/0
 24018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24019 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24022 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24023 ;;Total ram usage:        8 bytes
 24024 ;; Hardware stack levels used:    1
 24025 ;; Hardware stack levels required when called:    3
 24026 ;; This function calls:
 24027 ;;		_CDCInitEP
 24028 ;;		_USBCheckCDCRequest
 24029 ;; This function is called by:
 24030 ;;		_USBDeviceTasks
 24031 ;;		_USBStdSetCfgHandler
 24032 ;;		_USBSuspend
 24033 ;;		_USBWakeFromSuspend
 24034 ;;		_USBCtrlTrfSetupHandler
 24035 ;;		_USBCheckStdRequest
 24036 ;;		_USBStdFeatureReqHandler
 24037 ;; This function uses a non-reentrant model
 24038 ;;
 24039                           
 24040                           	psect	text116
 24041  0143D4                     __ptext116:
 24042                           	opt stack 0
 24043  0143D4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 24044                           	opt stack 15
 24045  0143D4                     i2l6340:
 24046  0143D4  C037  F03D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 24047  0143D8  C038  F03E         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 24048                           
 24049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24050                           ; Switch size 1, requested type "space"
 24051                           ; Number of cases is 1, Range of values is 0 to 0
 24052                           ; switch strategies available:
 24053                           ; Name         Instructions Cycles
 24054                           ; simple_byte            4     3 (average)
 24055                           ;	Chosen strategy is simple_byte
 24056  0143DC  503E               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 24057  0143DE  A4D8               	btfss	status,2,c
 24058  0143E0  0012               	return	
 24059                           
 24060                           ; Switch size 1, requested type "space"
 24061                           ; Number of cases is 2, Range of values is 1 to 3
 24062                           ; switch strategies available:
 24063                           ; Name         Instructions Cycles
 24064                           ; simple_byte            7     4 (average)
 24065                           ;	Chosen strategy is simple_byte
 24066  0143E2  503D               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 24067  0143E4  0A01               	xorlw	1	; case 1
 24068  0143E6  E102 EF48  F09D    	bz	_CDCInitEP
 24069  0143EC  0A02               	xorlw	2	; case 3
 24070  0143EE  E102 EF6B  F098    	bz	_USBCheckCDCRequest
 24071  0143F4  0012               	return		;funcret
 24072  0143F6                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 24073                           	opt stack 0
 24074                           tblptru	equ	0xFF8
 24075                           tblptrh	equ	0xFF7
 24076                           tblptrl	equ	0xFF6
 24077                           tablat	equ	0xFF5
 24078                           prodh	equ	0xFF4
 24079                           prodl	equ	0xFF3
 24080                           intcon	equ	0xFF2
 24081                           intcon2	equ	0xFF1
 24082                           postinc0	equ	0xFEE
 24083                           wreg	equ	0xFE8
 24084                           indf1	equ	0xFE7
 24085                           postinc1	equ	0xFE6
 24086                           postdec1	equ	0xFE5
 24087                           fsr1h	equ	0xFE2
 24088                           fsr1l	equ	0xFE1
 24089                           indf2	equ	0xFDF
 24090                           postinc2	equ	0xFDE
 24091                           postdec2	equ	0xFDD
 24092                           plusw2	equ	0xFDB
 24093                           fsr2h	equ	0xFDA
 24094                           fsr2l	equ	0xFD9
 24095                           status	equ	0xFD8
 24096                           
 24097 ;; *************** function _USBCheckCDCRequest *****************
 24098 ;; Defined at:
 24099 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 24100 ;; Parameters:    Size  Location     Type
 24101 ;;		None
 24102 ;; Auto vars:     Size  Location     Type
 24103 ;;		None
 24104 ;; Return value:  Size  Location     Type
 24105 ;;		None               void
 24106 ;; Registers used:
 24107 ;;		wreg, status,2, status,0
 24108 ;; Tracked objects:
 24109 ;;		On entry : 0/F
 24110 ;;		On exit  : F/D
 24111 ;;		Unchanged: 0/0
 24112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24117 ;;Total ram usage:        0 bytes
 24118 ;; Hardware stack levels used:    1
 24119 ;; This function calls:
 24120 ;;		Nothing
 24121 ;; This function is called by:
 24122 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24123 ;; This function uses a non-reentrant model
 24124 ;;
 24125                           
 24126                           	psect	text117
 24127  0130D6                     __ptext117:
 24128                           	opt stack 0
 24129  0130D6                     _USBCheckCDCRequest:
 24130                           	opt stack 17
 24131                           
 24132                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 24133                           
 24134                           ;incstack = 0
 24135  0130D6  010D               	movlb	13	; () banked
 24136  0130D8  5130               	movf	48,w,b	;volatile
 24137  0130DA  0B1F               	andlw	31
 24138  0130DC  06E8               	decf	wreg,f,c
 24139  0130DE  E001               	bz	i2l6188
 24140  0130E0  0012               	return	
 24141  0130E2                     i2l6188:
 24142                           
 24143                           ; BSR set to: 13
 24144                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 24145  0130E2  3930               	swapf	48,w,b	;volatile
 24146  0130E4  32E8               	rrcf	wreg,f,c
 24147  0130E6  0B03               	andlw	3
 24148  0130E8  06E8               	decf	wreg,f,c
 24149  0130EA  E001               	bz	i2l6192
 24150  0130EC  0012               	return	
 24151  0130EE                     i2l6192:
 24152                           
 24153                           ; BSR set to: 13
 24154                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 24155                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 24156  0130EE  5134               	movf	52,w,b	;volatile
 24157  0130F0  E027               	bz	i2l6228
 24158                           
 24159                           ; BSR set to: 13
 24160  0130F2  0534               	decf	52,w,b	;volatile
 24161  0130F4  E025               	bz	i2l6228
 24162  0130F6  0012               	return	
 24163  0130F8                     i2l6198:
 24164                           
 24165                           ; BSR set to: 13
 24166                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 24167  0130F8  D82E               	call	PL306	;call to abstracted procedure
 24168                           
 24169                           ; BSR set to: 13
 24170                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 24171  0130FA  6A0F               	clrf	_inPipes+5,c	;volatile
 24172  0130FC  0E08               	movlw	8
 24173  0130FE  6E0E               	movwf	_inPipes+4,c	;volatile
 24174                           
 24175                           ; BSR set to: 13
 24176                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 24177  013100  800D               	bsf	_inPipes+3,0,c	;volatile
 24178                           
 24179                           ; BSR set to: 13
 24180                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 24181  013102  8E0D               	bsf	_inPipes+3,7,c	;volatile
 24182                           
 24183                           ;usb_device_cdc.c: 232: break;
 24184  013104  0C08               	retlw	8
 24185  013106                     i2l6206:
 24186                           
 24187                           ; BSR set to: 13
 24188                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 24189  013106  D827               	call	PL306	;call to abstracted procedure
 24190                           
 24191                           ; BSR set to: 13
 24192                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 24193  013108  8E0D               	bsf	_inPipes+3,7,c	;volatile
 24194                           
 24195                           ;usb_device_cdc.c: 237: break;
 24196  01310A  0012               	return	
 24197  01310C                     i2l450:
 24198                           
 24199                           ; BSR set to: 13
 24200                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 24201  01310C  CD36 F005          	movff	3382,_outPipes+4	;volatile
 24202  013110  CD37 F006          	movff	3383,_outPipes+5	;volatile
 24203                           
 24204                           ; BSR set to: 13
 24205                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 24206  013114  0EC5               	movlw	low _line_coding
 24207  013116  6E01               	movwf	_outPipes,c	;volatile
 24208  013118  0E02               	movlw	high _line_coding
 24209  01311A  6E02               	movwf	_outPipes+1,c	;volatile
 24210                           
 24211                           ; BSR set to: 13
 24212                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 24213  01311C  6A07               	clrf	_outPipes+6,c	;volatile
 24214  01311E  6A08               	clrf	_outPipes+7,c	;volatile
 24215  013120  6A09               	clrf	_outPipes+8,c	;volatile
 24216                           
 24217                           ; BSR set to: 13
 24218                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 24219  013122  8E04               	bsf	_outPipes+3,7,c	;volatile
 24220                           
 24221                           ;usb_device_cdc.c: 246: break;
 24222  013124  0012               	return	
 24223  013126                     i2l6216:
 24224                           
 24225                           ; BSR set to: 13
 24226                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 24227  013126  0EC5               	movlw	low _line_coding
 24228  013128  6E0A               	movwf	_inPipes,c	;volatile
 24229  01312A  0E02               	movlw	high _line_coding
 24230  01312C  6E0B               	movwf	_inPipes+1,c	;volatile
 24231                           
 24232                           ; BSR set to: 13
 24233  01312E  6A0F               	clrf	_inPipes+5,c	;volatile
 24234  013130  0E07               	movlw	7
 24235  013132  6E0E               	movwf	_inPipes+4,c	;volatile
 24236                           
 24237                           ; BSR set to: 13
 24238  013134  0EC1               	movlw	193
 24239  013136  6E0D               	movwf	_inPipes+3,c	;volatile
 24240                           
 24241                           ;usb_device_cdc.c: 253: break;
 24242  013138  0CC1               	retlw	193
 24243  01313A                     i2l6222:
 24244                           
 24245                           ; BSR set to: 13
 24246                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 24247  01313A  5132               	movf	50,w,b	;volatile
 24248                           
 24249                           ; BSR set to: 13
 24250                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 24251  01313C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 24252                           
 24253                           ;usb_device_cdc.c: 289: break;
 24254  01313E  0012               	return	
 24255  013140                     i2l6228:
 24256                           
 24257                           ; BSR set to: 13
 24258  013140  5131               	movf	49,w,b	;volatile
 24259                           
 24260                           ; Switch size 1, requested type "space"
 24261                           ; Number of cases is 5, Range of values is 0 to 34
 24262                           ; switch strategies available:
 24263                           ; Name         Instructions Cycles
 24264                           ; simple_byte           16     9 (average)
 24265                           ;	Chosen strategy is simple_byte
 24266  013142  E0DA               	bz	i2l6198
 24267  013144  0A01               	xorlw	1	; case 1
 24268  013146  E0DF               	bz	i2l6206
 24269  013148  0A21               	xorlw	33	; case 32
 24270  01314A  E0E0               	bz	i2l450
 24271  01314C  0A01               	xorlw	1	; case 33
 24272  01314E  E0EB               	bz	i2l6216
 24273  013150  0A03               	xorlw	3	; case 34
 24274  013152  E0F3               	bz	i2l6222
 24275                           
 24276                           ; BSR set to: 13
 24277  013154  0012               	return		;funcret
 24278  013156                     __end_of_USBCheckCDCRequest:
 24279                           	opt stack 0
 24280  013156                     PL306:
 24281                           	opt stack 17
 24282  013156  0E9D               	movlw	low _dummy_encapsulated_cmd_response
 24283  013158  6E0A               	movwf	_inPipes,c	;volatile
 24284  01315A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 24285  01315C  6E0B               	movwf	_inPipes+1,c	;volatile
 24286  01315E  0012               	return	
 24287  013160                     __end_ofPL306:
 24288                           	opt stack 0
 24289                           tblptru	equ	0xFF8
 24290                           tblptrh	equ	0xFF7
 24291                           tblptrl	equ	0xFF6
 24292                           tablat	equ	0xFF5
 24293                           prodh	equ	0xFF4
 24294                           prodl	equ	0xFF3
 24295                           intcon	equ	0xFF2
 24296                           intcon2	equ	0xFF1
 24297                           postinc0	equ	0xFEE
 24298                           wreg	equ	0xFE8
 24299                           indf1	equ	0xFE7
 24300                           postinc1	equ	0xFE6
 24301                           postdec1	equ	0xFE5
 24302                           fsr1h	equ	0xFE2
 24303                           fsr1l	equ	0xFE1
 24304                           indf2	equ	0xFDF
 24305                           postinc2	equ	0xFDE
 24306                           postdec2	equ	0xFDD
 24307                           plusw2	equ	0xFDB
 24308                           fsr2h	equ	0xFDA
 24309                           fsr2l	equ	0xFD9
 24310                           status	equ	0xFD8
 24311                           
 24312 ;; *************** function _CDCInitEP *****************
 24313 ;; Defined at:
 24314 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 24315 ;; Parameters:    Size  Location     Type
 24316 ;;		None
 24317 ;; Auto vars:     Size  Location     Type
 24318 ;;		None
 24319 ;; Return value:  Size  Location     Type
 24320 ;;		None               void
 24321 ;; Registers used:
 24322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24323 ;; Tracked objects:
 24324 ;;		On entry : 0/F
 24325 ;;		On exit  : F/1
 24326 ;;		Unchanged: 0/0
 24327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24332 ;;Total ram usage:        0 bytes
 24333 ;; Hardware stack levels used:    1
 24334 ;; Hardware stack levels required when called:    2
 24335 ;; This function calls:
 24336 ;;		_USBEnableEndpoint
 24337 ;;		i2_USBTransferOnePacket
 24338 ;; This function is called by:
 24339 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24340 ;; This function uses a non-reentrant model
 24341 ;;
 24342                           
 24343                           	psect	text118
 24344  013A90                     __ptext118:
 24345                           	opt stack 0
 24346  013A90                     _CDCInitEP:
 24347                           	opt stack 15
 24348                           
 24349                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 24350                           
 24351                           ; BSR set to: 13
 24352                           ;incstack = 0
 24353  013A90  0102               	movlb	2	; () banked
 24354  013A92  6BC5               	clrf	_line_coding& (0+255),b
 24355  013A94  0E4B               	movlw	75
 24356  013A96  6FC6               	movwf	(_line_coding+1)& (0+255),b
 24357  013A98  6BC7               	clrf	(_line_coding+2)& (0+255),b
 24358  013A9A  6BC8               	clrf	(_line_coding+3)& (0+255),b
 24359                           
 24360                           ; BSR set to: 2
 24361                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 24362  013A9C  6BC9               	clrf	(_line_coding+4)& (0+255),b
 24363                           
 24364                           ; BSR set to: 2
 24365                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 24366  013A9E  6BCA               	clrf	(_line_coding+5)& (0+255),b
 24367                           
 24368                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 24369  013AA0  0E08               	movlw	8
 24370  013AA2  6FCB               	movwf	(_line_coding+6)& (0+255),b
 24371                           
 24372                           ; BSR set to: 2
 24373                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 24374  013AA4  6A1E               	clrf	_cdc_rx_len,c
 24375                           
 24376                           ; BSR set to: 2
 24377                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 24378  013AA6  0E1A               	movlw	26
 24379  013AA8  6E33               	movwf	USBEnableEndpoint@options,c
 24380  013AAA  0E01               	movlw	1
 24381  013AAC  EC51  F0A0         	call	_USBEnableEndpoint
 24382                           
 24383                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 24384  013AB0  0E1E               	movlw	30
 24385  013AB2  6E33               	movwf	USBEnableEndpoint@options,c
 24386  013AB4  0E02               	movlw	2
 24387  013AB6  EC51  F0A0         	call	_USBEnableEndpoint
 24388                           
 24389                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 24390  013ABA  0E00               	movlw	0
 24391  013ABC  6E2B               	movwf	i2USBTransferOnePacket@dir,c
 24392  013ABE  0E64               	movlw	low _cdc_data_rx
 24393  013AC0  6E2C               	movwf	i2USBTransferOnePacket@data,c
 24394  013AC2  0E03               	movlw	high _cdc_data_rx
 24395  013AC4  6E2D               	movwf	i2USBTransferOnePacket@data+1,c
 24396  013AC6  0E40               	movlw	64
 24397  013AC8  6E2E               	movwf	i2USBTransferOnePacket@len,c
 24398  013ACA  0E02               	movlw	2
 24399  013ACC  EC79  F099         	call	i2_USBTransferOnePacket
 24400  013AD0  C02B  F119         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 24401  013AD4  C02C  F11A         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 24402                           
 24403                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 24404  013AD8  0101               	movlb	1	; () banked
 24405  013ADA  6B17               	clrf	_CDCDataInHandle& (0+255),b
 24406  013ADC  6B18               	clrf	(_CDCDataInHandle+1)& (0+255),b
 24407                           
 24408                           ; BSR set to: 1
 24409                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 24410  013ADE  6A1F               	clrf	_cdc_trf_state,c
 24411                           
 24412                           ; BSR set to: 1
 24413  013AE0  0012               	return		;funcret
 24414  013AE2                     __end_of_CDCInitEP:
 24415                           	opt stack 0
 24416                           tblptru	equ	0xFF8
 24417                           tblptrh	equ	0xFF7
 24418                           tblptrl	equ	0xFF6
 24419                           tablat	equ	0xFF5
 24420                           prodh	equ	0xFF4
 24421                           prodl	equ	0xFF3
 24422                           intcon	equ	0xFF2
 24423                           intcon2	equ	0xFF1
 24424                           postinc0	equ	0xFEE
 24425                           wreg	equ	0xFE8
 24426                           indf1	equ	0xFE7
 24427                           postinc1	equ	0xFE6
 24428                           postdec1	equ	0xFE5
 24429                           fsr1h	equ	0xFE2
 24430                           fsr1l	equ	0xFE1
 24431                           indf2	equ	0xFDF
 24432                           postinc2	equ	0xFDE
 24433                           postdec2	equ	0xFDD
 24434                           plusw2	equ	0xFDB
 24435                           fsr2h	equ	0xFDA
 24436                           fsr2l	equ	0xFD9
 24437                           status	equ	0xFD8
 24438                           
 24439 ;; *************** function i2_USBTransferOnePacket *****************
 24440 ;; Defined at:
 24441 ;;		line 995 in file "../My_library/usb/usb_device.c"
 24442 ;; Parameters:    Size  Location     Type
 24443 ;;  ep              1    wreg     unsigned char 
 24444 ;;  dir             1    0[COMRAM] unsigned char 
 24445 ;;  data            2    1[COMRAM] PTR unsigned char 
 24446 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 24447 ;;  len             1    3[COMRAM] unsigned char 
 24448 ;; Auto vars:     Size  Location     Type
 24449 ;;  ep              1    4[COMRAM] unsigned char 
 24450 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 24451 ;;		 -> NULL(0), BDT(48), 
 24452 ;; Return value:  Size  Location     Type
 24453 ;;                  2    0[COMRAM] PTR void 
 24454 ;; Registers used:
 24455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24456 ;; Tracked objects:
 24457 ;;		On entry : 0/2
 24458 ;;		On exit  : 0/0
 24459 ;;		Unchanged: 0/0
 24460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24464 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24465 ;;Total ram usage:        7 bytes
 24466 ;; Hardware stack levels used:    1
 24467 ;; This function calls:
 24468 ;;		Nothing
 24469 ;; This function is called by:
 24470 ;;		_CDCInitEP
 24471 ;; This function uses a non-reentrant model
 24472 ;;
 24473                           
 24474                           	psect	text119
 24475  0132F2                     __ptext119:
 24476                           	opt stack 0
 24477  0132F2                     i2_USBTransferOnePacket:
 24478                           	opt stack 16
 24479                           
 24480                           ; BSR set to: 1
 24481                           ;incstack = 0
 24482                           ;i2USBTransferOnePacket@ep stored from wreg
 24483  0132F2  6E2F               	movwf	i2USBTransferOnePacket@ep,c
 24484                           
 24485                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 24486                           ;usb_device.c: 1000: if(dir != 0)
 24487  0132F4  502B               	movf	i2USBTransferOnePacket@dir,w,c
 24488  0132F6  E004               	bz	i2l6160
 24489                           
 24490                           ;usb_device.c: 1001: {
 24491                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 24492  0132F8  502F               	movf	i2USBTransferOnePacket@ep,w,c
 24493  0132FA  EC3B  F095         	call	PL46	;call to abstracted procedure
 24494  0132FE  D003               	goto	L20
 24495  013300                     i2l6160:
 24496                           
 24497                           ;usb_device.c: 1005: else
 24498                           ;usb_device.c: 1006: {
 24499                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 24500  013300  502F               	movf	i2USBTransferOnePacket@ep,w,c
 24501  013302  EC33  F095         	call	PL22	;call to abstracted procedure
 24502  013306                     L20:
 24503  013306  CFDE F030          	movff	postinc2,i2USBTransferOnePacket@handle
 24504  01330A  CFDD F031          	movff	postdec2,i2USBTransferOnePacket@handle+1
 24505                           
 24506                           ;usb_device.c: 1009: }
 24507                           ;usb_device.c: 1013: if(handle == 0)
 24508  01330E  5030               	movf	i2USBTransferOnePacket@handle,w,c
 24509  013310  1031               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 24510  013312  E103               	bnz	i2l6166
 24511                           
 24512                           ;usb_device.c: 1014: {
 24513                           ;usb_device.c: 1015: return 0;
 24514  013314  6A2B               	clrf	?i2_USBTransferOnePacket,c
 24515  013316  6A2C               	clrf	?i2_USBTransferOnePacket+1,c
 24516  013318  0012               	return	
 24517  01331A                     i2l6166:
 24518                           
 24519                           ;usb_device.c: 1016: }
 24520                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 24521  01331A  EE20 F002          	lfsr	2,2
 24522  01331E  D826               	call	PL326	;call to abstracted procedure
 24523  013320  C02C  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 24524  013324  C02D  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 24525                           
 24526                           ;usb_device.c: 1030: handle->CNT = len;
 24527  013328  EE20 F001          	lfsr	2,1
 24528  01332C  D81F               	call	PL326	;call to abstracted procedure
 24529  01332E  C02E  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 24530                           
 24531                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 24532  013332  D817               	call	PL260	;call to abstracted procedure
 24533  013334  0E40               	movlw	64
 24534  013336  16DF               	andwf	indf2,f,c
 24535                           
 24536                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 24537  013338  D814               	call	PL260	;call to abstracted procedure
 24538  01333A  0E00               	movlw	0
 24539  01333C  86DB               	bsf	plusw2,3,c
 24540                           
 24541                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 24542  01333E  D811               	call	PL260	;call to abstracted procedure
 24543  013340  8EDB               	bsf	plusw2,7,c
 24544                           
 24545                           ;usb_device.c: 1036: if(dir != 0)
 24546  013342  502B               	movf	i2USBTransferOnePacket@dir,w,c
 24547  013344  E004               	bz	i2l6178
 24548                           
 24549                           ;usb_device.c: 1037: {
 24550                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 24551  013346  502F               	movf	i2USBTransferOnePacket@ep,w,c
 24552  013348  EC3B  F095         	call	PL46	;call to abstracted procedure
 24553  01334C  D003               	goto	L21
 24554  01334E                     i2l6178:
 24555                           
 24556                           ;usb_device.c: 1041: else
 24557                           ;usb_device.c: 1042: {
 24558                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 24559  01334E  502F               	movf	i2USBTransferOnePacket@ep,w,c
 24560  013350  EC33  F095         	call	PL22	;call to abstracted procedure
 24561  013354                     L21:
 24562  013354  0E04               	movlw	4
 24563  013356  1ADF               	xorwf	indf2,f,c
 24564                           
 24565                           ;usb_device.c: 1045: }
 24566                           ;usb_device.c: 1046: return (void*)handle;
 24567  013358  C030  F02B         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 24568  01335C  C031  F02C         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 24569  013360  0C04               	retlw	4	;funcret
 24570  013362                     __end_ofi2_USBTransferOnePacket:
 24571                           	opt stack 0
 24572  013362                     PL260:
 24573                           	opt stack 16
 24574  013362  C030  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 24575  013366  C031  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 24576  01336A  0012               	return	
 24577  01336C                     __end_ofPL260:
 24578                           	opt stack 0
 24579  01336C                     PL326:
 24580                           	opt stack 16
 24581  01336C  5030               	movf	i2USBTransferOnePacket@handle,w,c
 24582  01336E  26D9               	addwf	fsr2l,f,c
 24583  013370  5031               	movf	i2USBTransferOnePacket@handle+1,w,c
 24584  013372  22DA               	addwfc	fsr2h,f,c
 24585  013374  0012               	return	
 24586  013376                     __end_ofPL326:
 24587                           	opt stack 0
 24588                           tblptru	equ	0xFF8
 24589                           tblptrh	equ	0xFF7
 24590                           tblptrl	equ	0xFF6
 24591                           tablat	equ	0xFF5
 24592                           prodh	equ	0xFF4
 24593                           prodl	equ	0xFF3
 24594                           intcon	equ	0xFF2
 24595                           intcon2	equ	0xFF1
 24596                           postinc0	equ	0xFEE
 24597                           wreg	equ	0xFE8
 24598                           indf1	equ	0xFE7
 24599                           postinc1	equ	0xFE6
 24600                           postdec1	equ	0xFE5
 24601                           fsr1h	equ	0xFE2
 24602                           fsr1l	equ	0xFE1
 24603                           indf2	equ	0xFDF
 24604                           postinc2	equ	0xFDE
 24605                           postdec2	equ	0xFDD
 24606                           plusw2	equ	0xFDB
 24607                           fsr2h	equ	0xFDA
 24608                           fsr2l	equ	0xFD9
 24609                           status	equ	0xFD8
 24610                           
 24611 ;; *************** function _USBEnableEndpoint *****************
 24612 ;; Defined at:
 24613 ;;		line 878 in file "../My_library/usb/usb_device.c"
 24614 ;; Parameters:    Size  Location     Type
 24615 ;;  ep              1    wreg     unsigned char 
 24616 ;;  options         1    8[COMRAM] unsigned char 
 24617 ;; Auto vars:     Size  Location     Type
 24618 ;;  ep              1   11[COMRAM] unsigned char 
 24619 ;;  p               2    9[COMRAM] PTR unsigned char 
 24620 ;;		 -> UEP0(1), 
 24621 ;; Return value:  Size  Location     Type
 24622 ;;		None               void
 24623 ;; Registers used:
 24624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24625 ;; Tracked objects:
 24626 ;;		On entry : 0/2
 24627 ;;		On exit  : 0/0
 24628 ;;		Unchanged: 0/0
 24629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24630 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24631 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24634 ;;Total ram usage:        4 bytes
 24635 ;; Hardware stack levels used:    1
 24636 ;; Hardware stack levels required when called:    1
 24637 ;; This function calls:
 24638 ;;		_USBConfigureEndpoint
 24639 ;; This function is called by:
 24640 ;;		_CDCInitEP
 24641 ;; This function uses a non-reentrant model
 24642 ;;
 24643                           
 24644                           	psect	text120
 24645  0140A2                     __ptext120:
 24646                           	opt stack 0
 24647  0140A2                     _USBEnableEndpoint:
 24648                           	opt stack 15
 24649                           
 24650                           ;incstack = 0
 24651                           ;USBEnableEndpoint@ep stored from wreg
 24652  0140A2  6E36               	movwf	USBEnableEndpoint@ep,c
 24653                           
 24654                           ;usb_device.c: 880: unsigned char* p;
 24655                           ;usb_device.c: 884: if(options & 0x04)
 24656  0140A4  A433               	btfss	USBEnableEndpoint@options,2,c
 24657  0140A6  D004               	goto	i2l6094
 24658                           
 24659                           ;usb_device.c: 885: {
 24660                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 24661  0140A8  6A2B               	clrf	USBConfigureEndpoint@direction,c
 24662  0140AA  5036               	movf	USBEnableEndpoint@ep,w,c
 24663  0140AC  ECB7  F09A         	call	_USBConfigureEndpoint
 24664  0140B0                     i2l6094:
 24665                           
 24666                           ;usb_device.c: 887: }
 24667                           ;usb_device.c: 888: if(options & 0x02)
 24668  0140B0  A233               	btfss	USBEnableEndpoint@options,1,c
 24669  0140B2  D005               	goto	i2l6098
 24670                           
 24671                           ;usb_device.c: 889: {
 24672                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 24673  0140B4  0E01               	movlw	1
 24674  0140B6  6E2B               	movwf	USBConfigureEndpoint@direction,c
 24675  0140B8  5036               	movf	USBEnableEndpoint@ep,w,c
 24676  0140BA  ECB7  F09A         	call	_USBConfigureEndpoint
 24677  0140BE                     i2l6098:
 24678                           
 24679                           ;usb_device.c: 891: }
 24680                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 24681  0140BE  0E26               	movlw	38
 24682  0140C0  2436               	addwf	USBEnableEndpoint@ep,w,c
 24683  0140C2  6E34               	movwf	USBEnableEndpoint@p,c
 24684  0140C4  6A35               	clrf	USBEnableEndpoint@p+1,c
 24685  0140C6  0E0F               	movlw	15
 24686  0140C8  2235               	addwfc	USBEnableEndpoint@p+1,f,c
 24687                           
 24688                           ;usb_device.c: 901: *p = options;
 24689  0140CA  C034  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 24690  0140CE  C035  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 24691  0140D2  C033  FFDF         	movff	USBEnableEndpoint@options,indf2
 24692  0140D6  0C0F               	retlw	15	;funcret
 24693  0140D8                     __end_of_USBEnableEndpoint:
 24694                           	opt stack 0
 24695                           tblptru	equ	0xFF8
 24696                           tblptrh	equ	0xFF7
 24697                           tblptrl	equ	0xFF6
 24698                           tablat	equ	0xFF5
 24699                           prodh	equ	0xFF4
 24700                           prodl	equ	0xFF3
 24701                           intcon	equ	0xFF2
 24702                           intcon2	equ	0xFF1
 24703                           postinc0	equ	0xFEE
 24704                           wreg	equ	0xFE8
 24705                           indf1	equ	0xFE7
 24706                           postinc1	equ	0xFE6
 24707                           postdec1	equ	0xFE5
 24708                           fsr1h	equ	0xFE2
 24709                           fsr1l	equ	0xFE1
 24710                           indf2	equ	0xFDF
 24711                           postinc2	equ	0xFDE
 24712                           postdec2	equ	0xFDD
 24713                           plusw2	equ	0xFDB
 24714                           fsr2h	equ	0xFDA
 24715                           fsr2l	equ	0xFD9
 24716                           status	equ	0xFD8
 24717                           
 24718 ;; *************** function _USBConfigureEndpoint *****************
 24719 ;; Defined at:
 24720 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 24721 ;; Parameters:    Size  Location     Type
 24722 ;;  EPNum           1    wreg     unsigned char 
 24723 ;;  direction       1    0[COMRAM] unsigned char 
 24724 ;; Auto vars:     Size  Location     Type
 24725 ;;  EPNum           1    5[COMRAM] unsigned char 
 24726 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 24727 ;;		 -> BDT(48), 
 24728 ;; Return value:  Size  Location     Type
 24729 ;;		None               void
 24730 ;; Registers used:
 24731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24732 ;; Tracked objects:
 24733 ;;		On entry : 0/2
 24734 ;;		On exit  : 0/0
 24735 ;;		Unchanged: 0/0
 24736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24737 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24738 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24739 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24741 ;;Total ram usage:        8 bytes
 24742 ;; Hardware stack levels used:    1
 24743 ;; This function calls:
 24744 ;;		Nothing
 24745 ;; This function is called by:
 24746 ;;		_USBEnableEndpoint
 24747 ;; This function uses a non-reentrant model
 24748 ;;
 24749                           
 24750                           	psect	text121
 24751  01356E                     __ptext121:
 24752                           	opt stack 0
 24753  01356E                     _USBConfigureEndpoint:
 24754                           	opt stack 15
 24755                           
 24756                           ;incstack = 0
 24757                           ;USBConfigureEndpoint@EPNum stored from wreg
 24758  01356E  6E30               	movwf	USBConfigureEndpoint@EPNum,c
 24759                           
 24760                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 24761                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 24762  013570  6A31               	clrf	USBConfigureEndpoint@handle,c
 24763  013572  0E0D               	movlw	13
 24764  013574  6E32               	movwf	USBConfigureEndpoint@handle+1,c
 24765                           
 24766                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 24767  013576  502B               	movf	USBConfigureEndpoint@direction,w,c
 24768  013578  6E2C               	movwf	??_USBConfigureEndpoint& (0+255),c
 24769  01357A  6A2D               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 24770  01357C  90D8               	bcf	status,0,c
 24771  01357E  362C               	rlcf	??_USBConfigureEndpoint,f,c
 24772  013580  362D               	rlcf	??_USBConfigureEndpoint+1,f,c
 24773  013582  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 24774  013584  6E2E               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 24775  013586  6A2F               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 24776  013588  D822               	call	PL252	;call to abstracted procedure
 24777  01358A  502C               	movf	??_USBConfigureEndpoint,w,c
 24778  01358C  262E               	addwf	??_USBConfigureEndpoint+2,f,c
 24779  01358E  502D               	movf	??_USBConfigureEndpoint+1,w,c
 24780  013590  222F               	addwfc	??_USBConfigureEndpoint+3,f,c
 24781  013592  D81D               	call	PL252	;call to abstracted procedure
 24782  013594  502E               	movf	??_USBConfigureEndpoint+2,w,c
 24783  013596  2631               	addwf	USBConfigureEndpoint@handle,f,c
 24784  013598  502F               	movf	??_USBConfigureEndpoint+3,w,c
 24785  01359A  2232               	addwfc	USBConfigureEndpoint@handle+1,f,c
 24786                           
 24787                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 24788  01359C  D81F               	call	PL338	;call to abstracted procedure
 24789  01359E  9EDF               	bcf	indf2,7,c
 24790                           
 24791                           ;usb_device.c: 1557: if(direction == 0)
 24792  0135A0  502B               	movf	USBConfigureEndpoint@direction,w,c
 24793  0135A2  E104               	bnz	i2l6084
 24794                           
 24795                           ;usb_device.c: 1558: {
 24796                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 24797  0135A4  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 24798  0135A6  EC33  F095         	call	PL22	;call to abstracted procedure
 24799  0135AA  D003               	goto	L22
 24800  0135AC                     i2l6084:
 24801                           
 24802                           ;usb_device.c: 1561: else
 24803                           ;usb_device.c: 1562: {
 24804                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 24805  0135AC  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 24806  0135AE  EC3B  F095         	call	PL46	;call to abstracted procedure
 24807  0135B2                     L22:
 24808  0135B2  C031  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 24809  0135B6  C032  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 24810                           
 24811                           ;usb_device.c: 1564: }
 24812                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 24813  0135BA  D810               	call	PL338	;call to abstracted procedure
 24814  0135BC  9CDF               	bcf	indf2,6,c
 24815                           
 24816                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 24817  0135BE  EE20 F004          	lfsr	2,4
 24818  0135C2  5031               	movf	USBConfigureEndpoint@handle,w,c
 24819  0135C4  26D9               	addwf	fsr2l,f,c
 24820  0135C6  5032               	movf	USBConfigureEndpoint@handle+1,w,c
 24821  0135C8  22DA               	addwfc	fsr2h,f,c
 24822  0135CA  8CDF               	bsf	indf2,6,c
 24823  0135CC  0012               	return		;funcret
 24824  0135CE                     __end_of_USBConfigureEndpoint:
 24825                           	opt stack 0
 24826  0135CE                     PL252:
 24827                           	opt stack 15
 24828  0135CE  90D8               	bcf	status,0,c
 24829  0135D0  362E               	rlcf	??_USBConfigureEndpoint+2,f,c
 24830  0135D2  362F               	rlcf	??_USBConfigureEndpoint+3,f,c
 24831  0135D4  90D8               	bcf	status,0,c
 24832  0135D6  362E               	rlcf	??_USBConfigureEndpoint+2,f,c
 24833  0135D8  362F               	rlcf	??_USBConfigureEndpoint+3,f,c
 24834  0135DA  0012               	return	
 24835  0135DC                     __end_ofPL252:
 24836                           	opt stack 0
 24837  0135DC                     PL338:
 24838                           	opt stack 15
 24839  0135DC  C031  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24840  0135E0  C032  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24841  0135E4  0012               	return	
 24842  0135E6                     __end_ofPL338:
 24843                           	opt stack 0
 24844                           tblptru	equ	0xFF8
 24845                           tblptrh	equ	0xFF7
 24846                           tblptrl	equ	0xFF6
 24847                           tablat	equ	0xFF5
 24848                           prodh	equ	0xFF4
 24849                           prodl	equ	0xFF3
 24850                           intcon	equ	0xFF2
 24851                           intcon2	equ	0xFF1
 24852                           postinc0	equ	0xFEE
 24853                           wreg	equ	0xFE8
 24854                           indf1	equ	0xFE7
 24855                           postinc1	equ	0xFE6
 24856                           postdec1	equ	0xFE5
 24857                           fsr1h	equ	0xFE2
 24858                           fsr1l	equ	0xFE1
 24859                           indf2	equ	0xFDF
 24860                           postinc2	equ	0xFDE
 24861                           postdec2	equ	0xFDD
 24862                           plusw2	equ	0xFDB
 24863                           fsr2h	equ	0xFDA
 24864                           fsr2l	equ	0xFD9
 24865                           status	equ	0xFD8
 24866                           
 24867 ;; *************** function _USBCtrlTrfOutHandler *****************
 24868 ;; Defined at:
 24869 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 24870 ;; Parameters:    Size  Location     Type
 24871 ;;		None
 24872 ;; Auto vars:     Size  Location     Type
 24873 ;;		None
 24874 ;; Return value:  Size  Location     Type
 24875 ;;		None               void
 24876 ;; Registers used:
 24877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24878 ;; Tracked objects:
 24879 ;;		On entry : F/1
 24880 ;;		On exit  : F/1
 24881 ;;		Unchanged: 0/0
 24882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24887 ;;Total ram usage:        0 bytes
 24888 ;; Hardware stack levels used:    1
 24889 ;; Hardware stack levels required when called:    2
 24890 ;; This function calls:
 24891 ;;		_USBCtrlTrfRxService
 24892 ;; This function is called by:
 24893 ;;		_USBCtrlEPService
 24894 ;; This function uses a non-reentrant model
 24895 ;;
 24896                           
 24897                           	psect	text122
 24898  014476                     __ptext122:
 24899                           	opt stack 0
 24900  014476                     _USBCtrlTrfOutHandler:
 24901                           	opt stack 15
 24902                           
 24903                           ; BSR set to: 1
 24904                           ;usb_device.c: 2543: if(controlTransferState == 2)
 24905                           
 24906                           ;incstack = 0
 24907  014476  0E02               	movlw	2
 24908  014478  1820               	xorwf	_controlTransferState,w,c	;volatile
 24909  01447A  E102               	bnz	i2l335
 24910                           
 24911                           ; BSR set to: 1
 24912                           ;usb_device.c: 2544: {
 24913                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 24914  01447C  EF24  F091         	goto	_USBCtrlTrfRxService	;wreg free
 24915  014480                     i2l335:
 24916                           
 24917                           ; BSR set to: 1
 24918                           ;usb_device.c: 2547: else
 24919                           ;usb_device.c: 2548: {
 24920                           ;usb_device.c: 2551: controlTransferState = 0;
 24921  014480  6A20               	clrf	_controlTransferState,c	;volatile
 24922                           
 24923                           ; BSR set to: 1
 24924                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 24925  014482  5125               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 24926  014484  E106               	bnz	i2l337
 24927                           
 24928                           ; BSR set to: 1
 24929                           ;usb_device.c: 2559: {
 24930                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 24931                           
 24932                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24933                           
 24934                           ; BSR set to: 1
 24935                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24936  014486  EC0E  F093         	call	PL2	;call to abstracted procedure
 24937  01448A  0E0C               	movlw	12
 24938                           
 24939                           ; BSR set to: 1
 24940                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24941  01448C  EC73  F091         	call	PL34	;call to abstracted procedure
 24942                           
 24943                           ;usb_device.c: 2564: }
 24944  014490  0C00               	retlw	0
 24945  014492                     i2l337:
 24946                           
 24947                           ; BSR set to: 1
 24948                           ;usb_device.c: 2565: else
 24949                           ;usb_device.c: 2566: {
 24950                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 24951  014492  6B25               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 24952                           
 24953                           ; BSR set to: 1
 24954  014494  0012               	return		;funcret
 24955  014496                     __end_of_USBCtrlTrfOutHandler:
 24956                           	opt stack 0
 24957                           tblptru	equ	0xFF8
 24958                           tblptrh	equ	0xFF7
 24959                           tblptrl	equ	0xFF6
 24960                           tablat	equ	0xFF5
 24961                           prodh	equ	0xFF4
 24962                           prodl	equ	0xFF3
 24963                           intcon	equ	0xFF2
 24964                           intcon2	equ	0xFF1
 24965                           postinc0	equ	0xFEE
 24966                           wreg	equ	0xFE8
 24967                           indf1	equ	0xFE7
 24968                           postinc1	equ	0xFE6
 24969                           postdec1	equ	0xFE5
 24970                           fsr1h	equ	0xFE2
 24971                           fsr1l	equ	0xFE1
 24972                           indf2	equ	0xFDF
 24973                           postinc2	equ	0xFDE
 24974                           postdec2	equ	0xFDD
 24975                           plusw2	equ	0xFDB
 24976                           fsr2h	equ	0xFDA
 24977                           fsr2l	equ	0xFD9
 24978                           status	equ	0xFD8
 24979                           
 24980 ;; *************** function _USBCtrlTrfRxService *****************
 24981 ;; Defined at:
 24982 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 24983 ;; Parameters:    Size  Location     Type
 24984 ;;		None
 24985 ;; Auto vars:     Size  Location     Type
 24986 ;;  byteToRead      1    1[COMRAM] unsigned char 
 24987 ;;  i               1    0[COMRAM] unsigned char 
 24988 ;; Return value:  Size  Location     Type
 24989 ;;		None               void
 24990 ;; Registers used:
 24991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24992 ;; Tracked objects:
 24993 ;;		On entry : F/1
 24994 ;;		On exit  : F/1
 24995 ;;		Unchanged: 0/0
 24996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25001 ;;Total ram usage:        2 bytes
 25002 ;; Hardware stack levels used:    1
 25003 ;; Hardware stack levels required when called:    1
 25004 ;; This function calls:
 25005 ;;		_USBCtrlEPAllowStatusStage
 25006 ;; This function is called by:
 25007 ;;		_USBCtrlTrfOutHandler
 25008 ;; This function uses a non-reentrant model
 25009 ;;
 25010                           
 25011                           	psect	text123
 25012  012248                     __ptext123:
 25013                           	opt stack 0
 25014  012248                     _USBCtrlTrfRxService:
 25015                           	opt stack 15
 25016                           
 25017                           ; BSR set to: 1
 25018                           ;usb_device.c: 1854: uint8_t byteToRead;
 25019                           ;usb_device.c: 1855: uint8_t i;
 25020                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 25021                           
 25022                           ; BSR set to: 1
 25023                           ;incstack = 0
 25024  012248  EE20 F001          	lfsr	2,1
 25025  01224C  EC38  F09A         	call	PL134	;call to abstracted procedure
 25026  012250  22DA               	addwfc	fsr2h,f,c
 25027  012252  50DF               	movf	indf2,w,c
 25028  012254  6E2C               	movwf	USBCtrlTrfRxService@byteToRead,c
 25029                           
 25030                           ; BSR set to: 1
 25031                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 25032  012256  502C               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25033  012258  5C05               	subwf	_outPipes+4,w,c	;volatile
 25034  01225A  0E00               	movlw	0
 25035  01225C  5806               	subwfb	_outPipes+5,w,c	;volatile
 25036  01225E  E202               	bc	i2l7010
 25037                           
 25038                           ; BSR set to: 1
 25039                           ;usb_device.c: 1866: {
 25040                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 25041  012260  C005  F02C         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 25042  012264                     i2l7010:
 25043                           
 25044                           ; BSR set to: 1
 25045                           ;usb_device.c: 1868: }
 25046                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 25047  012264  502C               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25048  012266  5E05               	subwf	_outPipes+4,f,c	;volatile
 25049  012268  0E00               	movlw	0
 25050  01226A  5A06               	subwfb	_outPipes+5,f,c	;volatile
 25051                           
 25052                           ; BSR set to: 1
 25053                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 25054  01226C  6A2B               	clrf	USBCtrlTrfRxService@i,c
 25055  01226E  D00F               	goto	i2l7020
 25056  012270                     i2l7014:
 25057                           
 25058                           ; BSR set to: 1
 25059                           ;usb_device.c: 1875: {
 25060                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 25061  012270  0E38               	movlw	56
 25062  012272  242B               	addwf	USBCtrlTrfRxService@i,w,c
 25063  012274  6ED9               	movwf	fsr2l,c
 25064  012276  6ADA               	clrf	fsr2h,c
 25065  012278  0E0D               	movlw	13
 25066  01227A  22DA               	addwfc	fsr2h,f,c
 25067  01227C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 25068  012280  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 25069  012284  CFDF FFE7          	movff	indf2,indf1
 25070                           
 25071                           ; BSR set to: 1
 25072  012288  4A01               	infsnz	_outPipes,f,c	;volatile
 25073  01228A  2A02               	incf	_outPipes+1,f,c	;volatile
 25074                           
 25075                           ; BSR set to: 1
 25076  01228C  2A2B               	incf	USBCtrlTrfRxService@i,f,c
 25077  01228E                     i2l7020:
 25078                           
 25079                           ; BSR set to: 1
 25080  01228E  502C               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25081  012290  5C2B               	subwf	USBCtrlTrfRxService@i,w,c
 25082  012292  E3EE               	bnc	i2l7014
 25083                           
 25084                           ; BSR set to: 1
 25085                           ;usb_device.c: 1877: }
 25086                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 25087  012294  5005               	movf	_outPipes+4,w,c	;volatile
 25088  012296  1006               	iorwf	_outPipes+5,w,c	;volatile
 25089  012298  E012               	bz	i2l7036
 25090                           
 25091                           ; BSR set to: 1
 25092                           ;usb_device.c: 1882: {
 25093                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 25094  01229A  EE20 F001          	lfsr	2,1
 25095  01229E  D819               	call	PL6	;call to abstracted procedure
 25096                           
 25097                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25098  0122A0  D81D               	call	PL10	;call to abstracted procedure
 25099  0122A2  D817               	call	PL6	;call to abstracted procedure
 25100  0122A4  D82D               	call	PL238	;call to abstracted procedure
 25101                           
 25102                           ; BSR set to: 1
 25103                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 25104  0122A6  ECFE  F0A0         	call	PL112	;call to abstracted procedure
 25105  0122AA  BCDF               	btfsc	indf2,6,c
 25106  0122AC  D004               	goto	i2l7032
 25107                           
 25108                           ; BSR set to: 1
 25109                           ;usb_device.c: 1886: {
 25110                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25111  0122AE  D823               	call	PL40	;call to abstracted procedure
 25112  0122B0  0E48               	movlw	72
 25113                           
 25114                           ; BSR set to: 1
 25115                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25116  0122B2  D819               	call	PL34	;call to abstracted procedure
 25117                           
 25118                           ;usb_device.c: 1889: }
 25119  0122B4  0C00               	retlw	0
 25120  0122B6                     i2l7032:
 25121                           
 25122                           ; BSR set to: 1
 25123                           ;usb_device.c: 1890: else
 25124                           ;usb_device.c: 1891: {
 25125                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 25126  0122B6  D81F               	call	PL40	;call to abstracted procedure
 25127  0122B8  0E08               	movlw	8
 25128                           
 25129                           ; BSR set to: 1
 25130                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25131  0122BA  D815               	call	PL34	;call to abstracted procedure
 25132  0122BC  0C00               	retlw	0
 25133  0122BE                     i2l7036:
 25134                           
 25135                           ; BSR set to: 1
 25136                           ;usb_device.c: 1896: else
 25137                           ;usb_device.c: 1897: {
 25138                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 25139                           
 25140                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25141                           
 25142                           ; BSR set to: 1
 25143                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25144  0122BE  EC0E  F093         	call	PL2	;call to abstracted procedure
 25145  0122C2  0E04               	movlw	4
 25146                           
 25147                           ; BSR set to: 1
 25148                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25149  0122C4  D810               	call	PL34	;call to abstracted procedure
 25150                           
 25151                           ; BSR set to: 1
 25152                           ;usb_device.c: 1926: }
 25153                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 25154                           
 25155                           ; BSR set to: 1
 25156                           ;usb_device.c: 1915: {
 25157                           ;usb_device.c: 1921: outPipes[0].pFunc();
 25158  0122C6  9E04               	bcf	_outPipes+3,7,c	;volatile
 25159                           
 25160                           ; BSR set to: 1
 25161                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 25162  0122C8  501B               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25163  0122CA  B4D8               	btfsc	status,2,c
 25164                           
 25165                           ; BSR set to: 1
 25166                           ;usb_device.c: 1942: {
 25167                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 25168  0122CC  ECFC  F099         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25169                           
 25170                           ; BSR set to: 1
 25171  0122D0  0012               	return		;funcret
 25172  0122D2                     __end_of_USBCtrlTrfRxService:
 25173                           	opt stack 0
 25174  0122D2                     PL6:
 25175                           	opt stack 14
 25176  0122D2  5018               	movf	_pBDTEntryEP0OutNext,w,c
 25177  0122D4  26D9               	addwf	fsr2l,f,c
 25178  0122D6  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 25179  0122D8  22DA               	addwfc	fsr2h,f,c
 25180  0122DA  0012               	return	
 25181  0122DC                     __end_ofPL6:
 25182                           	opt stack 0
 25183  0122DC                     PL10:
 25184                           	opt stack 14
 25185  0122DC  0E08               	movlw	8
 25186  0122DE  6EDF               	movwf	indf2,c
 25187  0122E0  EE20 F002          	lfsr	2,2
 25188  0122E4  0C08               	retlw	8
 25189  0122E6                     __end_ofPL10:
 25190                           	opt stack 0
 25191  0122E6                     PL34:
 25192                           	opt stack 14
 25193  0122E6  6EDF               	movwf	indf2,c
 25194  0122E8  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25195  0122EC  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25196  0122F0  0E00               	movlw	0
 25197  0122F2  8EDB               	bsf	plusw2,7,c
 25198  0122F4  0C00               	retlw	0
 25199  0122F6                     __end_ofPL34:
 25200                           	opt stack 0
 25201  0122F6                     PL40:
 25202                           	opt stack 11
 25203  0122F6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25204  0122FA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25205  0122FE  0012               	return	
 25206  012300                     __end_ofPL40:
 25207                           	opt stack 0
 25208  012300                     PL238:
 25209                           	opt stack 14
 25210  012300  0E38               	movlw	56
 25211  012302  6EDE               	movwf	postinc2,c
 25212  012304  0E0D               	movlw	13
 25213  012306  6EDD               	movwf	postdec2,c
 25214  012308  0C0D               	retlw	13
 25215  01230A                     __end_ofPL238:
 25216                           	opt stack 0
 25217                           tblptru	equ	0xFF8
 25218                           tblptrh	equ	0xFF7
 25219                           tblptrl	equ	0xFF6
 25220                           tablat	equ	0xFF5
 25221                           prodh	equ	0xFF4
 25222                           prodl	equ	0xFF3
 25223                           intcon	equ	0xFF2
 25224                           intcon2	equ	0xFF1
 25225                           postinc0	equ	0xFEE
 25226                           wreg	equ	0xFE8
 25227                           indf1	equ	0xFE7
 25228                           postinc1	equ	0xFE6
 25229                           postdec1	equ	0xFE5
 25230                           fsr1h	equ	0xFE2
 25231                           fsr1l	equ	0xFE1
 25232                           indf2	equ	0xFDF
 25233                           postinc2	equ	0xFDE
 25234                           postdec2	equ	0xFDD
 25235                           plusw2	equ	0xFDB
 25236                           fsr2h	equ	0xFDA
 25237                           fsr2l	equ	0xFD9
 25238                           status	equ	0xFD8
 25239                           
 25240 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 25241 ;; Defined at:
 25242 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 25243 ;; Parameters:    Size  Location     Type
 25244 ;;		None
 25245 ;; Auto vars:     Size  Location     Type
 25246 ;;		None
 25247 ;; Return value:  Size  Location     Type
 25248 ;;		None               void
 25249 ;; Registers used:
 25250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25251 ;; Tracked objects:
 25252 ;;		On entry : 0/F
 25253 ;;		On exit  : F/1
 25254 ;;		Unchanged: 0/0
 25255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25260 ;;Total ram usage:        0 bytes
 25261 ;; Hardware stack levels used:    1
 25262 ;; This function calls:
 25263 ;;		Nothing
 25264 ;; This function is called by:
 25265 ;;		_USBDeviceTasks
 25266 ;;		_USBCtrlEPServiceComplete
 25267 ;;		_USBCtrlTrfRxService
 25268 ;; This function uses a non-reentrant model
 25269 ;;
 25270                           
 25271                           	psect	text124
 25272  0133F8                     __ptext124:
 25273                           	opt stack 0
 25274  0133F8                     _USBCtrlEPAllowStatusStage:
 25275                           	opt stack 15
 25276                           
 25277                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 25278                           
 25279                           ; BSR set to: 1
 25280                           ;incstack = 0
 25281  0133F8  0101               	movlb	1	; () banked
 25282  0133FA  5129               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 25283  0133FC  A4D8               	btfss	status,2,c
 25284  0133FE  0012               	return	
 25285                           
 25286                           ; BSR set to: 1
 25287                           ;usb_device.c: 1424: {
 25288                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 25289  013400  0E01               	movlw	1
 25290  013402  6F29               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25291                           
 25292                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 25293  013404  512A               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 25294  013406  A4D8               	btfss	status,2,c
 25295  013408  0012               	return	
 25296                           
 25297                           ; BSR set to: 1
 25298                           ;usb_device.c: 1427: {
 25299                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 25300  01340A  0E01               	movlw	1
 25301  01340C  6F2A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25302                           
 25303                           ; BSR set to: 1
 25304                           ;usb_device.c: 1432: if(controlTransferState == 2)
 25305  01340E  0E02               	movlw	2
 25306  013410  1820               	xorwf	_controlTransferState,w,c	;volatile
 25307  013412  E10D               	bnz	i2l6516
 25308                           
 25309                           ; BSR set to: 1
 25310                           ;usb_device.c: 1433: {
 25311                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 25312  013414  EE20 F001          	lfsr	2,1
 25313  013418  ECCD  F091         	call	PL228	;call to abstracted procedure
 25314  01341C  6ADF               	clrf	indf2,c
 25315                           
 25316                           ; BSR set to: 1
 25317                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25318  01341E  ECE1  F098         	call	PL48	;call to abstracted procedure
 25319  013422  0E48               	movlw	72
 25320  013424  6EDF               	movwf	indf2,c
 25321                           
 25322                           ; BSR set to: 1
 25323                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25324  013426  ECE1  F098         	call	PL48	;call to abstracted procedure
 25325                           
 25326                           ;usb_device.c: 1437: }
 25327  01342A  EFF1  F098         	goto	PL244	;call to abstracted procedure
 25328  01342E                     i2l6516:
 25329                           
 25330                           ; BSR set to: 1
 25331                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 25332  01342E  0420               	decf	_controlTransferState,w,c	;volatile
 25333  013430  A4D8               	btfss	status,2,c
 25334  013432  0012               	return	
 25335                           
 25336                           ; BSR set to: 1
 25337                           ;usb_device.c: 1439: {
 25338                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 25339  013434  6B25               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25340                           
 25341                           ; BSR set to: 1
 25342                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 25343  013436  EE20 F001          	lfsr	2,1
 25344  01343A  D81A               	call	PL134	;call to abstracted procedure
 25345  01343C  22DA               	addwfc	fsr2h,f,c
 25346                           
 25347                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25348  01343E  EC6E  F091         	call	PL10	;call to abstracted procedure
 25349  013442  D816               	call	PL134	;call to abstracted procedure
 25350  013444  D80F               	call	PL36	;call to abstracted procedure
 25351                           
 25352                           ; BSR set to: 1
 25353                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 25354  013446  ECFE  F0A0         	call	PL112	;call to abstracted procedure
 25355  01344A  0E04               	movlw	4
 25356  01344C  6EDF               	movwf	indf2,c
 25357                           
 25358                           ; BSR set to: 1
 25359                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25360  01344E  ECFE  F0A0         	call	PL112	;call to abstracted procedure
 25361  013452  0E00               	movlw	0
 25362  013454  8EDB               	bsf	plusw2,7,c
 25363                           
 25364                           ; BSR set to: 1
 25365                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 25366  013456  0E01               	movlw	1
 25367  013458  6F25               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 25368                           
 25369                           ; BSR set to: 1
 25370                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 25371                           
 25372                           ; BSR set to: 1
 25373                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25374                           
 25375                           ; BSR set to: 1
 25376                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 25377  01345A  EC0E  F093         	call	PL2	;call to abstracted procedure
 25378  01345E  0E80               	movlw	128
 25379  013460  6EDF               	movwf	indf2,c
 25380  013462  0C80               	retlw	128
 25381  013464                     __end_of_USBCtrlEPAllowStatusStage:
 25382                           	opt stack 0
 25383  013464                     PL36:
 25384                           	opt stack 11
 25385  013464  22DA               	addwfc	fsr2h,f,c
 25386  013466  0E30               	movlw	48
 25387  013468  6EDE               	movwf	postinc2,c
 25388  01346A  0E0D               	movlw	13
 25389  01346C  6EDD               	movwf	postdec2,c
 25390  01346E  0C0D               	retlw	13
 25391  013470                     __end_ofPL36:
 25392                           	opt stack 0
 25393  013470                     PL134:
 25394                           	opt stack 15
 25395  013470  5016               	movf	_pBDTEntryEP0OutCurrent,w,c
 25396  013472  26D9               	addwf	fsr2l,f,c
 25397  013474  5017               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25398  013476  0012               	return	
 25399  013478                     __end_ofPL134:
 25400                           	opt stack 0
 25401                           tblptru	equ	0xFF8
 25402                           tblptrh	equ	0xFF7
 25403                           tblptrl	equ	0xFF6
 25404                           tablat	equ	0xFF5
 25405                           prodh	equ	0xFF4
 25406                           prodl	equ	0xFF3
 25407                           intcon	equ	0xFF2
 25408                           intcon2	equ	0xFF1
 25409                           postinc0	equ	0xFEE
 25410                           wreg	equ	0xFE8
 25411                           indf1	equ	0xFE7
 25412                           postinc1	equ	0xFE6
 25413                           postdec1	equ	0xFE5
 25414                           fsr1h	equ	0xFE2
 25415                           fsr1l	equ	0xFE1
 25416                           indf2	equ	0xFDF
 25417                           postinc2	equ	0xFDE
 25418                           postdec2	equ	0xFDD
 25419                           plusw2	equ	0xFDB
 25420                           fsr2h	equ	0xFDA
 25421                           fsr2l	equ	0xFD9
 25422                           status	equ	0xFD8
 25423                           
 25424 ;; *************** function _USBCtrlTrfInHandler *****************
 25425 ;; Defined at:
 25426 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 25427 ;; Parameters:    Size  Location     Type
 25428 ;;		None
 25429 ;; Auto vars:     Size  Location     Type
 25430 ;;  lastDTS         1    1[COMRAM] unsigned char 
 25431 ;; Return value:  Size  Location     Type
 25432 ;;		None               void
 25433 ;; Registers used:
 25434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25435 ;; Tracked objects:
 25436 ;;		On entry : F/1
 25437 ;;		On exit  : 1/1
 25438 ;;		Unchanged: 0/0
 25439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25443 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25444 ;;Total ram usage:        1 bytes
 25445 ;; Hardware stack levels used:    1
 25446 ;; Hardware stack levels required when called:    1
 25447 ;; This function calls:
 25448 ;;		_USBCtrlTrfTxService
 25449 ;; This function is called by:
 25450 ;;		_USBCtrlEPService
 25451 ;; This function uses a non-reentrant model
 25452 ;;
 25453                           
 25454                           	psect	text125
 25455  013160                     __ptext125:
 25456                           	opt stack 0
 25457  013160                     _USBCtrlTrfInHandler:
 25458                           	opt stack 0
 25459                           
 25460                           ; BSR set to: 1
 25461                           ;usb_device.c: 2597: uint8_t lastDTS;
 25462                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 25463                           
 25464                           ; BSR set to: 1
 25465                           ;incstack = 0
 25466  013160  D830               	call	PL48	;call to abstracted procedure
 25467  013162  0E00               	movlw	0
 25468  013164  BCDF               	btfsc	indf2,6,c
 25469  013166  0E01               	movlw	1
 25470  013168  6E2C               	movwf	USBCtrlTrfInHandler@lastDTS,c
 25471                           
 25472                           ; BSR set to: 1
 25473                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25474  01316A  0E04               	movlw	4
 25475  01316C  1A10               	xorwf	_pBDTEntryIn,f,c
 25476                           
 25477                           ; BSR set to: 1
 25478                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 25479  01316E  0E08               	movlw	8
 25480  013170  181C               	xorwf	_USBDeviceState,w,c	;volatile
 25481  013172  E10A               	bnz	i2l7200
 25482                           
 25483                           ; BSR set to: 1
 25484                           ;usb_device.c: 2608: {
 25485                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 25486  013174  010D               	movlb	13	; () banked
 25487  013176  5132               	movf	50,w,b	;volatile
 25488  013178  0B7F               	andlw	127
 25489  01317A  010F               	movlb	15	; () banked
 25490  01317C  6F38               	movwf	56,b	;volatile
 25491                           
 25492                           ; BSR set to: 15
 25493                           ;usb_device.c: 2610: if(UADDR != 0u)
 25494  01317E  5138               	movf	56,w,b
 25495                           
 25496                           ; BSR set to: 15
 25497                           ;usb_device.c: 2611: {
 25498                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 25499  013180  0E10               	movlw	16
 25500  013182  B4D8               	btfsc	status,2,c
 25501                           
 25502                           ; BSR set to: 15
 25503                           ;usb_device.c: 2614: else
 25504                           ;usb_device.c: 2615: {
 25505                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 25506  013184  0E04               	movlw	4
 25507                           
 25508                           ;usb_device.c: 2613: }
 25509  013186  6E1C               	movwf	_USBDeviceState,c	;volatile
 25510  013188                     i2l7200:
 25511                           
 25512                           ;usb_device.c: 2617: }
 25513                           ;usb_device.c: 2618: }
 25514                           ;usb_device.c: 2621: if(controlTransferState == 1)
 25515  013188  0420               	decf	_controlTransferState,w,c	;volatile
 25516  01318A  E117               	bnz	i2l345
 25517                           
 25518                           ;usb_device.c: 2622: {
 25519                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 25520  01318C  D81F               	call	PL126	;call to abstracted procedure
 25521                           
 25522                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 25523  01318E  EC85  F091         	call	_USBCtrlTrfTxService	;wreg free
 25524                           
 25525                           ; BSR set to: 1
 25526                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 25527  013192  0E02               	movlw	2
 25528  013194  1824               	xorwf	_shortPacketStatus,w,c	;volatile
 25529  013196  E105               	bnz	i2l7212
 25530                           
 25531                           ; BSR set to: 1
 25532                           ;usb_device.c: 2631: {
 25533                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 25534  013198  D814               	call	PL48	;call to abstracted procedure
 25535  01319A  0E04               	movlw	4
 25536  01319C  6EDF               	movwf	indf2,c
 25537                           
 25538                           ; BSR set to: 1
 25539                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25540  01319E  D811               	call	PL48	;call to abstracted procedure
 25541                           
 25542                           ;usb_device.c: 2636: }
 25543  0131A0  D020               	goto	PL244	;call to abstracted procedure
 25544  0131A2                     i2l7212:
 25545                           
 25546                           ; BSR set to: 1
 25547                           ;usb_device.c: 2637: else
 25548                           ;usb_device.c: 2638: {
 25549                           ;usb_device.c: 2639: if(lastDTS == 0)
 25550  0131A2  502C               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 25551  0131A4  E105               	bnz	i2l7218
 25552                           
 25553                           ; BSR set to: 1
 25554                           ;usb_device.c: 2640: {
 25555                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25556  0131A6  D80D               	call	PL48	;call to abstracted procedure
 25557  0131A8  0E48               	movlw	72
 25558  0131AA  6EDF               	movwf	indf2,c
 25559                           
 25560                           ; BSR set to: 1
 25561                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25562  0131AC  D80A               	call	PL48	;call to abstracted procedure
 25563                           
 25564                           ;usb_device.c: 2643: }
 25565  0131AE  D019               	goto	PL244	;call to abstracted procedure
 25566  0131B0                     i2l7218:
 25567                           
 25568                           ; BSR set to: 1
 25569                           ;usb_device.c: 2644: else
 25570                           ;usb_device.c: 2645: {
 25571                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 25572  0131B0  D808               	call	PL48	;call to abstracted procedure
 25573  0131B2  0E08               	movlw	8
 25574  0131B4  6EDF               	movwf	indf2,c
 25575                           
 25576                           ; BSR set to: 1
 25577                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25578  0131B6  D805               	call	PL48	;call to abstracted procedure
 25579  0131B8  D014               	goto	PL244	;call to abstracted procedure
 25580  0131BA                     i2l345:
 25581                           
 25582                           ;usb_device.c: 2651: else
 25583                           ;usb_device.c: 2652: {
 25584                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 25585  0131BA  BE04               	btfsc	_outPipes+3,7,c	;volatile
 25586                           
 25587                           ;usb_device.c: 2661: }
 25588                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 25589                           
 25590                           ;usb_device.c: 2659: {
 25591                           ;usb_device.c: 2660: outPipes[0].pFunc();
 25592  0131BC  9E04               	bcf	_outPipes+3,7,c	;volatile
 25593                           
 25594                           ;usb_device.c: 2663: }
 25595                           ;usb_device.c: 2665: controlTransferState = 0;
 25596  0131BE  6A20               	clrf	_controlTransferState,c	;volatile
 25597  0131C0  0012               	return		;funcret
 25598  0131C2                     __end_of_USBCtrlTrfInHandler:
 25599                           	opt stack 0
 25600  0131C2                     PL48:
 25601                           	opt stack 18
 25602  0131C2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 25603  0131C6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25604  0131CA  0012               	return	
 25605  0131CC                     __end_ofPL48:
 25606                           	opt stack 0
 25607  0131CC                     PL126:
 25608                           	opt stack 14
 25609  0131CC  EE20 F002          	lfsr	2,2
 25610  0131D0  5010               	movf	_pBDTEntryIn,w,c
 25611  0131D2  26D9               	addwf	fsr2l,f,c
 25612  0131D4  5011               	movf	_pBDTEntryIn+1,w,c
 25613  0131D6  22DA               	addwfc	fsr2h,f,c
 25614  0131D8  0E38               	movlw	56
 25615  0131DA  6EDE               	movwf	postinc2,c
 25616  0131DC  0E0D               	movlw	13
 25617  0131DE  6EDD               	movwf	postdec2,c
 25618  0131E0  0C0D               	retlw	13
 25619  0131E2                     __end_ofPL126:
 25620                           	opt stack 0
 25621  0131E2                     PL244:
 25622                           	opt stack 14
 25623  0131E2  0E00               	movlw	0
 25624  0131E4  8EDB               	bsf	plusw2,7,c
 25625  0131E6  0C00               	retlw	0
 25626  0131E8                     __end_ofPL244:
 25627                           	opt stack 0
 25628                           tblptru	equ	0xFF8
 25629                           tblptrh	equ	0xFF7
 25630                           tblptrl	equ	0xFF6
 25631                           tablat	equ	0xFF5
 25632                           prodh	equ	0xFF4
 25633                           prodl	equ	0xFF3
 25634                           intcon	equ	0xFF2
 25635                           intcon2	equ	0xFF1
 25636                           postinc0	equ	0xFEE
 25637                           wreg	equ	0xFE8
 25638                           indf1	equ	0xFE7
 25639                           postinc1	equ	0xFE6
 25640                           postdec1	equ	0xFE5
 25641                           fsr1h	equ	0xFE2
 25642                           fsr1l	equ	0xFE1
 25643                           indf2	equ	0xFDF
 25644                           postinc2	equ	0xFDE
 25645                           postdec2	equ	0xFDD
 25646                           plusw2	equ	0xFDB
 25647                           fsr2h	equ	0xFDA
 25648                           fsr2l	equ	0xFD9
 25649                           status	equ	0xFD8
 25650                           
 25651 ;; *************** function _USBCtrlTrfTxService *****************
 25652 ;; Defined at:
 25653 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 25654 ;; Parameters:    Size  Location     Type
 25655 ;;		None
 25656 ;; Auto vars:     Size  Location     Type
 25657 ;;  byteToSend      1    0[COMRAM] unsigned char 
 25658 ;; Return value:  Size  Location     Type
 25659 ;;		None               void
 25660 ;; Registers used:
 25661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25662 ;; Tracked objects:
 25663 ;;		On entry : 1/D
 25664 ;;		On exit  : F/1
 25665 ;;		Unchanged: 0/0
 25666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25671 ;;Total ram usage:        1 bytes
 25672 ;; Hardware stack levels used:    1
 25673 ;; This function calls:
 25674 ;;		Nothing
 25675 ;; This function is called by:
 25676 ;;		_USBCtrlEPAllowDataStage
 25677 ;;		_USBCtrlTrfInHandler
 25678 ;; This function uses a non-reentrant model
 25679 ;;
 25680                           
 25681                           	psect	text126
 25682  01230A                     __ptext126:
 25683                           	opt stack 0
 25684  01230A                     _USBCtrlTrfTxService:
 25685                           	opt stack 14
 25686                           
 25687                           ;usb_device.c: 1773: uint8_t byteToSend;
 25688                           ;usb_device.c: 1777: byteToSend = 8;
 25689                           
 25690                           ;incstack = 0
 25691  01230A  0E08               	movlw	8
 25692  01230C  6E2B               	movwf	USBCtrlTrfTxService@byteToSend,c
 25693                           
 25694                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 25695  01230E  500F               	movf	_inPipes+5,w,c	;volatile
 25696  012310  E10D               	bnz	i2l6360
 25697  012312  0E08               	movlw	8
 25698  012314  5C0E               	subwf	_inPipes+4,w,c	;volatile
 25699  012316  E20A               	bc	i2l6360
 25700                           
 25701                           ;usb_device.c: 1779: {
 25702                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 25703  012318  C00E  F02B         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 25704                           
 25705                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 25706  01231C  5024               	movf	_shortPacketStatus,w,c	;volatile
 25707  01231E  E102               	bnz	i2l6356
 25708                           
 25709                           ;usb_device.c: 1788: {
 25710                           ;usb_device.c: 1789: shortPacketStatus = 1;
 25711  012320  0E01               	movlw	1
 25712  012322  D003               	goto	L24
 25713  012324                     i2l6356:
 25714                           
 25715                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 25716  012324  0424               	decf	_shortPacketStatus,w,c	;volatile
 25717  012326  E102               	bnz	i2l6360
 25718                           
 25719                           ;usb_device.c: 1792: {
 25720                           ;usb_device.c: 1793: shortPacketStatus = 2;
 25721  012328  0E02               	movlw	2
 25722  01232A                     L24:
 25723  01232A  6E24               	movwf	_shortPacketStatus,c	;volatile
 25724  01232C                     i2l6360:
 25725                           
 25726                           ;usb_device.c: 1794: }
 25727                           ;usb_device.c: 1795: }
 25728                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 25729  01232C  502B               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25730  01232E  5E0E               	subwf	_inPipes+4,f,c	;volatile
 25731  012330  0E00               	movlw	0
 25732  012332  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 25733                           
 25734                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 25735  012334  EE20 F001          	lfsr	2,1
 25736  012338  D830               	call	PL228	;call to abstracted procedure
 25737  01233A  C02B  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 25738                           
 25739                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 25740  01233E  0E38               	movlw	56
 25741  012340  0101               	movlb	1	; () banked
 25742  012342  6F1D               	movwf	_pDst& (0+255),b
 25743  012344  0E0D               	movlw	13
 25744  012346  6F1E               	movwf	(_pDst+1)& (0+255),b
 25745                           
 25746                           ; BSR set to: 1
 25747                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 25748  012348  B00D               	btfsc	_inPipes+3,0,c	;volatile
 25749  01234A  D01A               	goto	i2l6388
 25750  01234C  D00B               	goto	i2l6378
 25751  01234E                     i2l6370:
 25752                           
 25753                           ; BSR set to: 1
 25754                           ;usb_device.c: 1812: {
 25755                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 25756  01234E  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 25757  012352  D819               	call	PL166	;call to abstracted procedure
 25758  012354  64F7               	cpfsgt	tblptrh,c
 25759  012356  D003               	bra	i2u518_47
 25760  012358  0008               	tblrd		*
 25761  01235A  50F5               	movf	tablat,w,c
 25762  01235C  D002               	bra	i2u518_40
 25763  01235E                     i2u518_47:
 25764  01235E  ECD2  F08F         	call	PL24	;call to abstracted procedure
 25765  012362                     i2u518_40:
 25766                           
 25767                           ; BSR set to: 1
 25768                           ;usb_device.c: 1814: byteToSend--;
 25769  012362  D820               	call	PL240	;call to abstracted procedure
 25770  012364                     i2l6378:
 25771                           
 25772                           ; BSR set to: 1
 25773  012364  502B               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25774  012366  E1F3               	bnz	i2l6370
 25775  012368  0012               	return	
 25776  01236A                     i2l6380:
 25777                           
 25778                           ; BSR set to: 1
 25779                           ;usb_device.c: 1820: {
 25780                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 25781  01236A  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 25782  01236E  D80B               	call	PL166	;call to abstracted procedure
 25783  012370  64F7               	cpfsgt	tblptrh,c
 25784  012372  D003               	bra	i2u520_47
 25785  012374  0008               	tblrd		*
 25786  012376  50F5               	movf	tablat,w,c
 25787  012378  D002               	bra	i2u520_40
 25788  01237A                     i2u520_47:
 25789  01237A  ECD2  F08F         	call	PL24	;call to abstracted procedure
 25790  01237E                     i2u520_40:
 25791                           
 25792                           ; BSR set to: 1
 25793                           ;usb_device.c: 1822: byteToSend--;
 25794  01237E  D812               	call	PL240	;call to abstracted procedure
 25795  012380                     i2l6388:
 25796                           
 25797                           ; BSR set to: 1
 25798  012380  502B               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25799  012382  E1F3               	bnz	i2l6380
 25800                           
 25801                           ; BSR set to: 1
 25802  012384  0012               	return		;funcret
 25803  012386                     __end_of_USBCtrlTrfTxService:
 25804                           	opt stack 0
 25805  012386                     PL166:
 25806                           	opt stack 14
 25807  012386  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25808  01238A  0E00               	movlw	low (__mediumconst shr (0+16))
 25809  01238C  6EF8               	movwf	tblptru,c
 25810  01238E  C11D  FFD9         	movff	_pDst,fsr2l
 25811  012392  C11E  FFDA         	movff	_pDst+1,fsr2h
 25812  012396  0E0E               	movlw	(high __ramtop+-1)
 25813  012398  0012               	return	
 25814  01239A                     __end_ofPL166:
 25815                           	opt stack 0
 25816  01239A                     PL228:
 25817                           	opt stack 15
 25818  01239A  5010               	movf	_pBDTEntryIn,w,c
 25819  01239C  26D9               	addwf	fsr2l,f,c
 25820  01239E  5011               	movf	_pBDTEntryIn+1,w,c
 25821  0123A0  22DA               	addwfc	fsr2h,f,c
 25822  0123A2  0012               	return	
 25823  0123A4                     __end_ofPL228:
 25824                           	opt stack 0
 25825  0123A4                     PL240:
 25826                           	opt stack 14
 25827  0123A4  6EDF               	movwf	indf2,c
 25828  0123A6  4A0A               	infsnz	_inPipes,f,c	;volatile
 25829  0123A8  2A0B               	incf	_inPipes+1,f,c	;volatile
 25830  0123AA  0101               	movlb	1	; () banked
 25831  0123AC  4B1D               	infsnz	_pDst& (0+255),f,b
 25832  0123AE  2B1E               	incf	(_pDst+1)& (0+255),f,b
 25833  0123B0  062B               	decf	USBCtrlTrfTxService@byteToSend,f,c
 25834  0123B2  0012               	return	
 25835  0123B4                     __end_ofPL240:
 25836                           	opt stack 0
 25837                           tblptru	equ	0xFF8
 25838                           tblptrh	equ	0xFF7
 25839                           tblptrl	equ	0xFF6
 25840                           tablat	equ	0xFF5
 25841                           prodh	equ	0xFF4
 25842                           prodl	equ	0xFF3
 25843                           intcon	equ	0xFF2
 25844                           intcon2	equ	0xFF1
 25845                           postinc0	equ	0xFEE
 25846                           wreg	equ	0xFE8
 25847                           indf1	equ	0xFE7
 25848                           postinc1	equ	0xFE6
 25849                           postdec1	equ	0xFE5
 25850                           fsr1h	equ	0xFE2
 25851                           fsr1l	equ	0xFE1
 25852                           indf2	equ	0xFDF
 25853                           postinc2	equ	0xFDE
 25854                           postdec2	equ	0xFDD
 25855                           plusw2	equ	0xFDB
 25856                           fsr2h	equ	0xFDA
 25857                           fsr2l	equ	0xFD9
 25858                           status	equ	0xFD8
 25859                           
 25860 ;; *************** function _LED_indicator *****************
 25861 ;; Defined at:
 25862 ;;		line 22 in file "ChargeStation_task.c"
 25863 ;; Parameters:    Size  Location     Type
 25864 ;;		None
 25865 ;; Auto vars:     Size  Location     Type
 25866 ;;  i               1   10[COMRAM] unsigned char 
 25867 ;; Return value:  Size  Location     Type
 25868 ;;		None               void
 25869 ;; Registers used:
 25870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25871 ;; Tracked objects:
 25872 ;;		On entry : F/1
 25873 ;;		On exit  : 0/0
 25874 ;;		Unchanged: 0/0
 25875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25878 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25880 ;;Total ram usage:        4 bytes
 25881 ;; Hardware stack levels used:    1
 25882 ;; Hardware stack levels required when called:    1
 25883 ;; This function calls:
 25884 ;;		i2_LED_output
 25885 ;;		i2___lwdiv
 25886 ;; This function is called by:
 25887 ;;		_ISR
 25888 ;; This function uses a non-reentrant model
 25889 ;;
 25890                           
 25891                           	psect	text127
 25892  0123B4                     __ptext127:
 25893                           	opt stack 0
 25894  0123B4                     _LED_indicator:
 25895                           	opt stack 19
 25896                           
 25897                           ; BSR set to: 1
 25898                           ;ChargeStation_task.c: 23: uint8_t i;
 25899                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 25900                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 25901                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 25902                           
 25903                           ; BSR set to: 1
 25904                           ;incstack = 0
 25905  0123B4  6A35               	clrf	LED_indicator@i,c
 25906  0123B6                     i2l9180:
 25907                           
 25908                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 25909  0123B6  5035               	movf	LED_indicator@i,w,c
 25910  0123B8  ECEC  F08C         	call	PL4	;call to abstracted procedure
 25911  0123BC  0101               	movlb	1	; () banked
 25912  0123BE  A2DF               	btfss	indf2,1,c
 25913  0123C0  D03C               	goto	i2l9200
 25914                           
 25915                           ; BSR set to: 1
 25916                           ;ChargeStation_task.c: 29: cnt[i]++;
 25917  0123C2  D840               	call	PL152	;call to abstracted procedure
 25918  0123C4  2ADF               	incf	indf2,f,c
 25919                           
 25920                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 25921  0123C6  D83E               	call	PL152	;call to abstracted procedure
 25922  0123C8  A0DF               	btfss	indf2,0,c
 25923  0123CA  D005               	goto	i2l9186
 25924                           
 25925                           ; BSR set to: 1
 25926                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 25927  0123CC  6A2B               	clrf	i2LED_output@value,c
 25928  0123CE  5035               	movf	LED_indicator@i,w,c
 25929  0123D0  EC0F  F09F         	call	i2_LED_output
 25930                           
 25931                           ;ChargeStation_task.c: 32: } else {
 25932  0123D4  D032               	goto	i2l9200
 25933  0123D6                     i2l9186:
 25934                           
 25935                           ; BSR set to: 1
 25936                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 25937  0123D6  D836               	call	PL152	;call to abstracted procedure
 25938  0123D8  50DF               	movf	indf2,w,c
 25939  0123DA  6E32               	movwf	??_LED_indicator& (0+255),c
 25940  0123DC  90D8               	bcf	status,0,c
 25941  0123DE  3032               	rrcf	??_LED_indicator,w,c
 25942  0123E0  6E33               	movwf	(??_LED_indicator+1)& (0+255),c
 25943  0123E2  6A34               	clrf	(??_LED_indicator+2)& (0+255),c
 25944  0123E4  5035               	movf	LED_indicator@i,w,c
 25945  0123E6  ECEA  F082         	call	PL16	;call to abstracted procedure
 25946  0123EA  CFDE F02B          	movff	postinc2,i2___lwdiv@dividend
 25947  0123EE  CFDD F02C          	movff	postdec2,i2___lwdiv@dividend+1
 25948  0123F2  6A2E               	clrf	i2___lwdiv@divisor+1,c
 25949  0123F4  0E64               	movlw	100
 25950  0123F6  6E2D               	movwf	i2___lwdiv@divisor,c
 25951  0123F8  ECEA  F09E         	call	i2___lwdiv	;wreg free
 25952  0123FC  5033               	movf	??_LED_indicator+1,w,c
 25953  0123FE  5C2B               	subwf	?i2___lwdiv,w,c
 25954  012400  5034               	movf	??_LED_indicator+2,w,c
 25955  012402  582C               	subwfb	?i2___lwdiv+1,w,c
 25956  012404  E307               	bnc	i2l9192
 25957                           
 25958                           ; BSR set to: 1
 25959                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 25960  012406  0E01               	movlw	1
 25961  012408  6E2B               	movwf	i2LED_output@value,c
 25962  01240A  5035               	movf	LED_indicator@i,w,c
 25963  01240C  EC0F  F09F         	call	i2_LED_output
 25964                           
 25965                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 25966  012410  D820               	call	PL196	;call to abstracted procedure
 25967  012412  D011               	goto	L25
 25968  012414                     i2l9192:
 25969                           
 25970                           ; BSR set to: 1
 25971                           ;ChargeStation_task.c: 37: cntf[i]++;
 25972  012414  D81E               	call	PL196	;call to abstracted procedure
 25973  012416  22DA               	addwfc	fsr2h,f,c
 25974  012418  2ADF               	incf	indf2,f,c
 25975                           
 25976                           ; BSR set to: 1
 25977                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 25978  01241A  6A2B               	clrf	i2LED_output@value,c
 25979  01241C  5035               	movf	LED_indicator@i,w,c
 25980  01241E  EC0F  F09F         	call	i2_LED_output
 25981                           
 25982                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 25983  012422  D817               	call	PL196	;call to abstracted procedure
 25984  012424  22DA               	addwfc	fsr2h,f,c
 25985  012426  0E01               	movlw	1
 25986  012428  64DF               	cpfsgt	indf2,c
 25987  01242A  D007               	goto	i2l9200
 25988                           
 25989                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 25990  01242C  0E06               	movlw	low LED_indicator@cnt
 25991  01242E  2435               	addwf	LED_indicator@i,w,c
 25992  012430  6ED9               	movwf	fsr2l,c
 25993  012432  6ADA               	clrf	fsr2h,c
 25994  012434  0E01               	movlw	high LED_indicator@cnt
 25995  012436                     L25:
 25996  012436  22DA               	addwfc	fsr2h,f,c
 25997  012438  6ADF               	clrf	indf2,c
 25998  01243A                     i2l9200:
 25999  01243A  2A35               	incf	LED_indicator@i,f,c
 26000  01243C  0E02               	movlw	2
 26001  01243E  6435               	cpfsgt	LED_indicator@i,c
 26002  012440  D7BA               	goto	i2l9180
 26003  012442  0C02               	retlw	2
 26004  012444                     __end_of_LED_indicator:
 26005                           	opt stack 0
 26006  012444                     PL152:
 26007                           	opt stack 19
 26008  012444  0E06               	movlw	low LED_indicator@cnt
 26009  012446  2435               	addwf	LED_indicator@i,w,c
 26010  012448  6ED9               	movwf	fsr2l,c
 26011  01244A  6ADA               	clrf	fsr2h,c
 26012  01244C  0E01               	movlw	high LED_indicator@cnt
 26013  01244E  22DA               	addwfc	fsr2h,f,c
 26014  012450  0012               	return	
 26015  012452                     __end_ofPL152:
 26016                           	opt stack 0
 26017  012452                     PL196:
 26018                           	opt stack 19
 26019  012452  0E00               	movlw	low LED_indicator@cntf
 26020  012454  2435               	addwf	LED_indicator@i,w,c
 26021  012456  6ED9               	movwf	fsr2l,c
 26022  012458  6ADA               	clrf	fsr2h,c
 26023  01245A  0E02               	movlw	high LED_indicator@cntf
 26024  01245C  0012               	return	
 26025  01245E                     __end_ofPL196:
 26026                           	opt stack 0
 26027                           tblptru	equ	0xFF8
 26028                           tblptrh	equ	0xFF7
 26029                           tblptrl	equ	0xFF6
 26030                           tablat	equ	0xFF5
 26031                           prodh	equ	0xFF4
 26032                           prodl	equ	0xFF3
 26033                           intcon	equ	0xFF2
 26034                           intcon2	equ	0xFF1
 26035                           postinc0	equ	0xFEE
 26036                           wreg	equ	0xFE8
 26037                           indf1	equ	0xFE7
 26038                           postinc1	equ	0xFE6
 26039                           postdec1	equ	0xFE5
 26040                           fsr1h	equ	0xFE2
 26041                           fsr1l	equ	0xFE1
 26042                           indf2	equ	0xFDF
 26043                           postinc2	equ	0xFDE
 26044                           postdec2	equ	0xFDD
 26045                           plusw2	equ	0xFDB
 26046                           fsr2h	equ	0xFDA
 26047                           fsr2l	equ	0xFD9
 26048                           status	equ	0xFD8
 26049                           
 26050 ;; *************** function i2___lwdiv *****************
 26051 ;; Defined at:
 26052 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 26053 ;; Parameters:    Size  Location     Type
 26054 ;;  dividend        2    0[COMRAM] unsigned int 
 26055 ;;  divisor         2    2[COMRAM] unsigned int 
 26056 ;; Auto vars:     Size  Location     Type
 26057 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 26058 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 26059 ;; Return value:  Size  Location     Type
 26060 ;;                  2    0[COMRAM] unsigned int 
 26061 ;; Registers used:
 26062 ;;		wreg, status,2, status,0
 26063 ;; Tracked objects:
 26064 ;;		On entry : F/1
 26065 ;;		On exit  : F/1
 26066 ;;		Unchanged: F/0
 26067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26069 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26071 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26072 ;;Total ram usage:        7 bytes
 26073 ;; Hardware stack levels used:    1
 26074 ;; This function calls:
 26075 ;;		Nothing
 26076 ;; This function is called by:
 26077 ;;		_LED_indicator
 26078 ;; This function uses a non-reentrant model
 26079 ;;
 26080                           
 26081                           	psect	text128
 26082  013DD4                     __ptext128:
 26083                           	opt stack 0
 26084  013DD4                     i2___lwdiv:
 26085                           	opt stack 19
 26086                           
 26087                           ; BSR set to: 1
 26088                           
 26089                           ;incstack = 0
 26090  013DD4  6A2F               	clrf	i2___lwdiv@quotient,c
 26091  013DD6  6A30               	clrf	i2___lwdiv@quotient+1,c
 26092                           
 26093                           ; BSR set to: 1
 26094  013DD8  502D               	movf	i2___lwdiv@divisor,w,c
 26095  013DDA  102E               	iorwf	i2___lwdiv@divisor+1,w,c
 26096  013DDC  E01B               	bz	i2l2406
 26097                           
 26098                           ; BSR set to: 1
 26099  013DDE  0E01               	movlw	1
 26100  013DE0  6E31               	movwf	i2___lwdiv@counter,c
 26101  013DE2  D004               	goto	i2l9002
 26102  013DE4                     i2l9000:
 26103                           
 26104                           ; BSR set to: 1
 26105  013DE4  90D8               	bcf	status,0,c
 26106  013DE6  362D               	rlcf	i2___lwdiv@divisor,f,c
 26107  013DE8  362E               	rlcf	i2___lwdiv@divisor+1,f,c
 26108  013DEA  2A31               	incf	i2___lwdiv@counter,f,c
 26109  013DEC                     i2l9002:
 26110                           
 26111                           ; BSR set to: 1
 26112  013DEC  AE2E               	btfss	i2___lwdiv@divisor+1,7,c
 26113  013DEE  D7FA               	goto	i2l9000
 26114  013DF0                     i2l9004:
 26115                           
 26116                           ; BSR set to: 1
 26117  013DF0  90D8               	bcf	status,0,c
 26118  013DF2  362F               	rlcf	i2___lwdiv@quotient,f,c
 26119  013DF4  3630               	rlcf	i2___lwdiv@quotient+1,f,c
 26120                           
 26121                           ; BSR set to: 1
 26122  013DF6  502D               	movf	i2___lwdiv@divisor,w,c
 26123  013DF8  5C2B               	subwf	i2___lwdiv@dividend,w,c
 26124  013DFA  502E               	movf	i2___lwdiv@divisor+1,w,c
 26125  013DFC  582C               	subwfb	i2___lwdiv@dividend+1,w,c
 26126  013DFE  E305               	bnc	i2l9012
 26127                           
 26128                           ; BSR set to: 1
 26129  013E00  502D               	movf	i2___lwdiv@divisor,w,c
 26130  013E02  5E2B               	subwf	i2___lwdiv@dividend,f,c
 26131  013E04  502E               	movf	i2___lwdiv@divisor+1,w,c
 26132  013E06  5A2C               	subwfb	i2___lwdiv@dividend+1,f,c
 26133                           
 26134                           ; BSR set to: 1
 26135  013E08  802F               	bsf	i2___lwdiv@quotient,0,c
 26136  013E0A                     i2l9012:
 26137                           
 26138                           ; BSR set to: 1
 26139  013E0A  90D8               	bcf	status,0,c
 26140  013E0C  322E               	rrcf	i2___lwdiv@divisor+1,f,c
 26141  013E0E  322D               	rrcf	i2___lwdiv@divisor,f,c
 26142                           
 26143                           ; BSR set to: 1
 26144  013E10  2E31               	decfsz	i2___lwdiv@counter,f,c
 26145  013E12  D7EE               	goto	i2l9004
 26146  013E14                     i2l2406:
 26147                           
 26148                           ; BSR set to: 1
 26149  013E14  C02F  F02B         	movff	i2___lwdiv@quotient,?i2___lwdiv
 26150  013E18  C030  F02C         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 26151                           
 26152                           ; BSR set to: 1
 26153  013E1C  0012               	return		;funcret
 26154  013E1E                     __end_ofi2___lwdiv:
 26155                           	opt stack 0
 26156                           tblptru	equ	0xFF8
 26157                           tblptrh	equ	0xFF7
 26158                           tblptrl	equ	0xFF6
 26159                           tablat	equ	0xFF5
 26160                           prodh	equ	0xFF4
 26161                           prodl	equ	0xFF3
 26162                           intcon	equ	0xFF2
 26163                           intcon2	equ	0xFF1
 26164                           postinc0	equ	0xFEE
 26165                           wreg	equ	0xFE8
 26166                           indf1	equ	0xFE7
 26167                           postinc1	equ	0xFE6
 26168                           postdec1	equ	0xFE5
 26169                           fsr1h	equ	0xFE2
 26170                           fsr1l	equ	0xFE1
 26171                           indf2	equ	0xFDF
 26172                           postinc2	equ	0xFDE
 26173                           postdec2	equ	0xFDD
 26174                           plusw2	equ	0xFDB
 26175                           fsr2h	equ	0xFDA
 26176                           fsr2l	equ	0xFD9
 26177                           status	equ	0xFD8
 26178                           
 26179 ;; *************** function i2_LED_output *****************
 26180 ;; Defined at:
 26181 ;;		line 36 in file "io.c"
 26182 ;; Parameters:    Size  Location     Type
 26183 ;;  b               1    wreg     unsigned char 
 26184 ;;  value           1    0[COMRAM] unsigned char 
 26185 ;; Auto vars:     Size  Location     Type
 26186 ;;  b               1    1[COMRAM] unsigned char 
 26187 ;; Return value:  Size  Location     Type
 26188 ;;		None               void
 26189 ;; Registers used:
 26190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26191 ;; Tracked objects:
 26192 ;;		On entry : F/1
 26193 ;;		On exit  : 0/0
 26194 ;;		Unchanged: 0/0
 26195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26196 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26200 ;;Total ram usage:        2 bytes
 26201 ;; Hardware stack levels used:    1
 26202 ;; This function calls:
 26203 ;;		Nothing
 26204 ;; This function is called by:
 26205 ;;		_LED_indicator
 26206 ;; This function uses a non-reentrant model
 26207 ;;
 26208                           
 26209                           	psect	text129
 26210  013E1E                     __ptext129:
 26211                           	opt stack 0
 26212  013E1E                     i2_LED_output:
 26213                           	opt stack 19
 26214                           
 26215                           ; BSR set to: 1
 26216                           ;incstack = 0
 26217                           ;i2LED_output@b stored from wreg
 26218  013E1E  6E2C               	movwf	i2LED_output@b,c
 26219                           
 26220                           ;io.c: 37: port[b].flag.led_flag = value;
 26221  013E20  502C               	movf	i2LED_output@b,w,c
 26222  013E22  ECEC  F08C         	call	PL4	;call to abstracted procedure
 26223  013E26  B02B               	btfsc	i2LED_output@value,0,c
 26224  013E28  D003               	bra	i2u894_45
 26225  013E2A  0101               	movlb	1	; () banked
 26226  013E2C  96DF               	bcf	indf2,3,c
 26227  013E2E  D002               	bra	i2u894_46
 26228  013E30                     i2u894_45:
 26229  013E30  0101               	movlb	1	; () banked
 26230  013E32  86DF               	bsf	indf2,3,c
 26231  013E34                     i2u894_46:
 26232                           
 26233                           ;io.c: 38: switch (b) {
 26234  013E34  D012               	goto	i2l8992
 26235  013E36                     i2l1635:
 26236                           
 26237                           ; BSR set to: 1
 26238                           ;io.c: 40: LATB7 = value;
 26239  013E36  A02B               	btfss	i2LED_output@value,0,c
 26240  013E38  D002               	goto	i2u895_40
 26241  013E3A  8E8A               	bsf	3978,7,c	;volatile
 26242  013E3C  0012               	return	
 26243  013E3E                     i2u895_40:
 26244  013E3E  9E8A               	bcf	3978,7,c	;volatile
 26245                           
 26246                           ;io.c: 41: break;
 26247  013E40  0012               	return	
 26248  013E42                     i2l1637:
 26249                           
 26250                           ; BSR set to: 1
 26251                           ;io.c: 43: LATB6 = value;
 26252  013E42  A02B               	btfss	i2LED_output@value,0,c
 26253  013E44  D002               	goto	i2u897_40
 26254  013E46  8C8A               	bsf	3978,6,c	;volatile
 26255  013E48  0012               	return	
 26256  013E4A                     i2u897_40:
 26257  013E4A  9C8A               	bcf	3978,6,c	;volatile
 26258                           
 26259                           ;io.c: 44: break;
 26260  013E4C  0012               	return	
 26261  013E4E                     i2l1638:
 26262                           
 26263                           ; BSR set to: 1
 26264                           ;io.c: 46: LATC2 = value;
 26265  013E4E  A02B               	btfss	i2LED_output@value,0,c
 26266  013E50  D002               	goto	i2u899_40
 26267  013E52  848B               	bsf	3979,2,c	;volatile
 26268  013E54  0012               	return	
 26269  013E56                     i2u899_40:
 26270  013E56  948B               	bcf	3979,2,c	;volatile
 26271                           
 26272                           ;io.c: 47: break;
 26273  013E58  0012               	return	
 26274  013E5A                     i2l8992:
 26275                           
 26276                           ; BSR set to: 1
 26277  013E5A  502C               	movf	i2LED_output@b,w,c
 26278                           
 26279                           ; Switch size 1, requested type "space"
 26280                           ; Number of cases is 3, Range of values is 0 to 2
 26281                           ; switch strategies available:
 26282                           ; Name         Instructions Cycles
 26283                           ; simple_byte           10     6 (average)
 26284                           ;	Chosen strategy is simple_byte
 26285  013E5C  E0EC               	bz	i2l1635
 26286  013E5E  0A01               	xorlw	1	; case 1
 26287  013E60  E0F0               	bz	i2l1637
 26288  013E62  0A03               	xorlw	3	; case 2
 26289  013E64  E0F4               	bz	i2l1638
 26290  013E66  0012               	return		;funcret
 26291  013E68                     __end_ofi2_LED_output:
 26292                           	opt stack 0
 26293                           tblptru	equ	0xFF8
 26294                           tblptrh	equ	0xFF7
 26295                           tblptrl	equ	0xFF6
 26296                           tablat	equ	0xFF5
 26297                           prodh	equ	0xFF4
 26298                           prodl	equ	0xFF3
 26299                           intcon	equ	0xFF2
 26300                           intcon2	equ	0xFF1
 26301                           postinc0	equ	0xFEE
 26302                           wreg	equ	0xFE8
 26303                           indf1	equ	0xFE7
 26304                           postinc1	equ	0xFE6
 26305                           postdec1	equ	0xFE5
 26306                           fsr1h	equ	0xFE2
 26307                           fsr1l	equ	0xFE1
 26308                           indf2	equ	0xFDF
 26309                           postinc2	equ	0xFDE
 26310                           postdec2	equ	0xFDD
 26311                           plusw2	equ	0xFDB
 26312                           fsr2h	equ	0xFDA
 26313                           fsr2l	equ	0xFD9
 26314                           status	equ	0xFD8
 26315                           tblptru	equ	0xFF8
 26316                           tblptrh	equ	0xFF7
 26317                           tblptrl	equ	0xFF6
 26318                           tablat	equ	0xFF5
 26319                           prodh	equ	0xFF4
 26320                           prodl	equ	0xFF3
 26321                           intcon	equ	0xFF2
 26322                           intcon2	equ	0xFF1
 26323                           postinc0	equ	0xFEE
 26324                           wreg	equ	0xFE8
 26325                           indf1	equ	0xFE7
 26326                           postinc1	equ	0xFE6
 26327                           postdec1	equ	0xFE5
 26328                           fsr1h	equ	0xFE2
 26329                           fsr1l	equ	0xFE1
 26330                           indf2	equ	0xFDF
 26331                           postinc2	equ	0xFDE
 26332                           postdec2	equ	0xFDD
 26333                           plusw2	equ	0xFDB
 26334                           fsr2h	equ	0xFDA
 26335                           fsr2l	equ	0xFD9
 26336                           status	equ	0xFD8
 26337                           
 26338                           	psect	rparam
 26339  0000                     tblptru	equ	0xFF8
 26340                           tblptrh	equ	0xFF7
 26341                           tblptrl	equ	0xFF6
 26342                           tablat	equ	0xFF5
 26343                           prodh	equ	0xFF4
 26344                           prodl	equ	0xFF3
 26345                           intcon	equ	0xFF2
 26346                           intcon2	equ	0xFF1
 26347                           postinc0	equ	0xFEE
 26348                           wreg	equ	0xFE8
 26349                           indf1	equ	0xFE7
 26350                           postinc1	equ	0xFE6
 26351                           postdec1	equ	0xFE5
 26352                           fsr1h	equ	0xFE2
 26353                           fsr1l	equ	0xFE1
 26354                           indf2	equ	0xFDF
 26355                           postinc2	equ	0xFDE
 26356                           postdec2	equ	0xFDD
 26357                           plusw2	equ	0xFDB
 26358                           fsr2h	equ	0xFDA
 26359                           fsr2l	equ	0xFD9
 26360                           status	equ	0xFD8
 26361                           
 26362                           	psect	temp
 26363  000054                     btemp:
 26364                           	opt stack 0
 26365  000054                     	ds	1
 26366  0000                     int$flags	set	btemp
 26367                           tblptru	equ	0xFF8
 26368                           tblptrh	equ	0xFF7
 26369                           tblptrl	equ	0xFF6
 26370                           tablat	equ	0xFF5
 26371                           prodh	equ	0xFF4
 26372                           prodl	equ	0xFF3
 26373                           intcon	equ	0xFF2
 26374                           intcon2	equ	0xFF1
 26375                           postinc0	equ	0xFEE
 26376                           wreg	equ	0xFE8
 26377                           indf1	equ	0xFE7
 26378                           postinc1	equ	0xFE6
 26379                           postdec1	equ	0xFE5
 26380                           fsr1h	equ	0xFE2
 26381                           fsr1l	equ	0xFE1
 26382                           indf2	equ	0xFDF
 26383                           postinc2	equ	0xFDE
 26384                           postdec2	equ	0xFDD
 26385                           plusw2	equ	0xFDB
 26386                           fsr2h	equ	0xFDA
 26387                           fsr2l	equ	0xFD9
 26388                           status	equ	0xFD8
 26389                           tblptru	equ	0xFF8
 26390                           tblptrh	equ	0xFF7
 26391                           tblptrl	equ	0xFF6
 26392                           tablat	equ	0xFF5
 26393                           prodh	equ	0xFF4
 26394                           prodl	equ	0xFF3
 26395                           intcon	equ	0xFF2
 26396                           intcon2	equ	0xFF1
 26397                           postinc0	equ	0xFEE
 26398                           wreg	equ	0xFE8
 26399                           indf1	equ	0xFE7
 26400                           postinc1	equ	0xFE6
 26401                           postdec1	equ	0xFE5
 26402                           fsr1h	equ	0xFE2
 26403                           fsr1l	equ	0xFE1
 26404                           indf2	equ	0xFDF
 26405                           postinc2	equ	0xFDE
 26406                           postdec2	equ	0xFDD
 26407                           plusw2	equ	0xFDB
 26408                           fsr2h	equ	0xFDA
 26409                           fsr2l	equ	0xFD9
 26410                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        2
    BSS         2825
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      83
    BANK0           160    139     142
    BANK1           256    105     255
    BANK2           256      0     204
    BANK3           256      0     228
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_task@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    data_out@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    terminal_operation@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put_num@rb.buf	PTR unsigned char  size(2) Largest target is 0
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    terminal_time@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    terminal_at_hand@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    print_time@tx.buf	PTR unsigned char  size(2) Largest target is 0
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put_str@rb.buf	PTR unsigned char  size(2) Largest target is 0
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_100(CODE[6]), STR_99(CODE[6]), STR_97(CODE[6]), STR_96(CODE[6]), 
		 -> STR_92(CODE[6]), STR_91(CODE[6]), STR_89(CODE[6]), STR_88(CODE[6]), 
		 -> STR_84(CODE[6]), STR_83(CODE[6]), STR_81(CODE[6]), STR_80(CODE[6]), 
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6192(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6175(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6158(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6192(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6175(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6158(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_65(CODE[2]), STR_64(CODE[6]), STR_61(CODE[5]), STR_60(CODE[11]), 
		 -> STR_59(CODE[6]), STR_58(CODE[1]), STR_57(CODE[12]), STR_56(CODE[3]), 
		 -> STR_55(CODE[9]), STR_54(CODE[9]), STR_52(CODE[2]), STR_51(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), data_out@p(CODE[6]), 
		 -> sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_73(CODE[28]), STR_72(CODE[9]), STR_71(CODE[11]), STR_70(CODE[6]), 
		 -> STR_68(CODE[24]), STR_67(CODE[32]), STR_23(CODE[37]), STR_21(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> display_LCD@str_5634(BANK1[20]), data_out@str(BANK0[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), 
		 -> display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    settings_integrating_reset@strp_6193	PTR unsigned char  size(1) Largest target is 20
		 -> settings_integrating_reset@str_6192(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(1) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_6176	PTR unsigned char  size(1) Largest target is 20
		 -> settings_led_indicator@str_6175(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(1) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_6159	PTR unsigned char  size(1) Largest target is 20
		 -> settings_auto_stop@str_6158(BANK0[20]), 

    settings_auto_stop@strp	PTR unsigned char  size(1) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_117(CODE[1]), STR_115(CODE[15]), STR_113(CODE[16]), STR_111(CODE[17]), 
		 -> STR_109(CODE[16]), STR_107(CODE[17]), STR_105(CODE[17]), STR_103(CODE[1]), 
		 -> settings_integrating_reset@str_6192(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_95(CODE[1]), settings_led_indicator@str_6175(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_87(CODE[1]), settings_auto_stop@str_6158(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_79(CODE[1]), STR_77(CODE[1]), STR_75(CODE[13]), STR_48(CODE[14]), 
		 -> STR_44(CODE[1]), STR_42(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_116(CODE[1]), STR_114(CODE[9]), STR_112(CODE[9]), STR_110(CODE[9]), 
		 -> STR_108(CODE[9]), STR_106(CODE[9]), STR_104(CODE[9]), STR_102(CODE[1]), 
		 -> STR_101(CODE[1]), STR_98(CODE[17]), STR_94(CODE[1]), STR_93(CODE[1]), 
		 -> STR_90(CODE[17]), STR_86(CODE[1]), STR_85(CODE[1]), STR_82(CODE[17]), 
		 -> STR_78(CODE[1]), STR_76(CODE[1]), STR_74(CODE[15]), STR_47(CODE[15]), 
		 -> STR_43(CODE[1]), STR_41(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    get_string_usb@s	PTR unsigned char  size(1) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(1) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK2[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_5634(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_50(CODE[16]), 
		 -> STR_49(CODE[12]), STR_46(CODE[13]), STR_45(CODE[17]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6192(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6175(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6158(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK2[14]), 

    get_quot_rem@quot	PTR unsigned long  size(1) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK1[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_69(CODE[2]), data_out@str(BANK0[30]), STR_66(CODE[18]), STR_63(CODE[36]), 
		 -> STR_62(CODE[24]), STR_53(CODE[434]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK1[8]), 

    S3152ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(BANK1[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(COMRAM[4]), port(BANK1[69]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_ST7032_cursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_ST7032_cursor
    _normal_task->_data_out
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_command->_ringbuf_put
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___lbdiv
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task
    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  563686
                          _RTCC_task
                        _ST7032_task
                           _USB_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  198251
                                            133 BANK0      6     2      4
                                              0 BANK1    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  169105
                                            122 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  106669
                                            113 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   56639
                                            106 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   30707
                                             74 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   14653
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               7     3      4    4753
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   10717
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0   22435
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   10226
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2     870
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23026
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15394
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   30005
                                             21 BANK0      1     1      0
                                _ADC
                         _LED_output
                                _OUT
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  219805
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   81844
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              46    46      0   10117
                                              6 BANK0     46    46      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          49    49      0    8965
                                              6 BANK0     49    49      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  46    46      0    8934
                                              6 BANK0     46    46      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   48193
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   20963
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   20963
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     491
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         84    84      0   82006
                                             88 BANK0      4     4      0
                                              0 BANK1     80    80      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    6     0      6   35084
                                             82 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    2659
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   22742
                                             74 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    2468
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _ST7032_puts                                          2     0      2    6992
                                             16 BANK0      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (5) _ST7032_put                                           1     1      0    5737
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ST7032_cursor                                        4     3      1    8366
                                             17 BANK0      4     3      1
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   29011
                                             74 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             43    23     20   16624
                                             35 BANK0     39    19     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    7899
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11002
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9962
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   39800
                           _ADC_init
                          _CTMU_init
                          _RTCC_init
                        _ST7032_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   21182
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1322
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) _ST7032_clear                                         0     0      0    7077
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (5) _ST7032_command                                       2     1      1    7077
                                             15 BANK0      2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   15419
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2    9480
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    13    11      2    8549
                                             34 BANK0     13    11      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         9     5      4    5068
                                             25 BANK0      9     5      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2     731
                                              5 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     422
                                              4 BANK0      1     1      0
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (8) ___lbdiv                                              4     3      1     360
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6694
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6694
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1386
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   15667
                                             17 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    5706
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       3     1      2    2812
                                             11 BANK0      3     1      2
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          2     1      1     223
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       5     3      2    5008
                                             12 BANK0      5     3      2
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         5     4      1    2385
                                              7 BANK0      5     4      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2329
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2091
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    2064
                                             15 BANK0      3     3      0
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1330
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2     669
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    5939
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    5939
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5234
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2517
                                              6 BANK0      6     5      1
                            ___awmod
                            ___lbmod
 ---------------------------------------------------------------------------------
 (9) ___lbmod                                              4     3      1     351
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     671
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     325
                                              2 BANK0      2     0      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                10    10      0   32883
                                             31 COMRAM    10    10      0
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4694
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0     734
                                              7 COMRAM     4     4      0
                       i2_LED_output
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
             ___lbmod
         _month_length
           ___awmod
           ___lbmod
   _ST7032_task
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
               ___lbmod
           _month_length
             ___awmod
             ___lbmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___lbdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
                 ___lbmod
           _month_length
             ___awmod
             ___lbmod
     _ST7032_init
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_cursor
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_puts
         _ST7032_put
           _ringbuf_put
             _ringbuf_num
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
                 ___lbmod
             _month_length
               ___awmod
               ___lbmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
                   ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___lbdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                     ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
               ___lbmod
           _month_length
             ___awmod
             ___lbmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
                   ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___lbdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                     ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
               ___lbmod
           _month_length
             ___awmod
             ___lbmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _LED_output
     _OUT
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _ST7032_clear
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_cursor
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_puts
           _ST7032_put
             _ringbuf_put
               _ringbuf_num
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
           ___lbmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
                   ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___lbdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
                   ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                     ___lbmod
               _month_length
                 ___awmod
                 ___lbmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                     ___lbmod
                 _month_length
                   ___awmod
                   ___lbmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CC      10       79.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FF       7       99.6%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      53       1       88.3%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     458       8        0.0%
DATA                 0      0     C28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Nov 15 19:02:34 2015

             ?_settings_integrating_reset 002B                           get_string_usb@s 0070  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002B  
                  _settings_led_indicator 18D0                  __end_of_port_button_task 2248  
               settings_adjust_time@state 0136                           _ringbuf_put_num 3804  
                                      PL2 261C                                        PL4 19D8  
                                      PL6 22D2                                        PL8 10CC  
                            ?_display_dec 00AA                           _ringbuf_put_str 3B80  
                      __size_of_ANALOG_IN 0018                             _USBDeviceInit 2A96  
                     ___wmul@multiplicand 0078                        i2___lwdiv@dividend 002B  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 0052  
                            __CFG_CP0$OFF 000000               settings_led_indicator@state 0139  
                                     PL10 22DC                                       PL20 372A  
                                     PL12 0DD8                                       PL30 1288  
                                     PL22 2A66                                       PL14 0DF2  
                                     PL40 22F6                                       PL32 1296  
                                     PL24 1FA4                                       PL16 05D4  
                                     PL50 1642                                       PL42 176A  
                                     PL34 22E6                                       PL26 175A  
                                     PL18 2BB0                                       PL60 02EE  
                                     PL52 2598                                       PL44 3F58  
                                     PL36 3464                                       PL28 05E4  
                                     PL70 10FE                                       PL62 10F2  
                                     PL54 10E4                                       PL46 2A76  
                                     PL38 12A0                                       PL80 26D0  
                                     PL72 2D72                                       PL64 0AAC  
                                     PL56 1502                                       PL48 31C2  
                                     PL90 060A                                       PL82 1EC2  
                                     PL74 3FE8                                       PL66 1510  
                                     PL58 204E                                       PL92 0F8A  
                                     PL84 1532                                       PL76 2B20  
                                     PL68 151C                                       PL94 1AE4  
                                     PL86 1114                                       PL78 0F80  
                                     PL96 1AF2                                       PL88 0300  
                                     PL98 2772      USER_USB_CALLBACK_EVENT_HANDLER@event 0037  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0039                                       l207 418C  
                                     l208 418A                                       l500 1E1A  
             __end_of_USBStdGetDscHandler 1FA4                                       _ADC 4234  
                                     l530 11B0                                       l531 11BE  
                                     l532 11CC                                       l509 1E68  
                                     l525 1162                                       l701 4218  
                                     l470 2E2A                                       l526 1174  
                                     l527 1184                                       l528 1194  
                                     l720 4250                                       l529 11A2  
                                     l706 3ED0                                       l731 2DBC  
                                     l770 3806                                       l851 304A  
                                     _BDT 000D00                                       l933 1410  
                                     l870 1B76                                       l857 2CEE  
                                     l948 0FE4                                       _ISR 0008  
                                     _UIE 000F36                                       _UIR 000F62  
                                     _OUT 3CF6                         get_string_usb@len 006C  
                           ?_get_quot_rem 0079                        caltime_to_epoch@tm 0079  
                              _USBSuspend 43B2                                       _now 028F  
                       _RTCC_from_caltime 4328                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 003F                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 17B6  
                          _USBDeviceState 001C                __end_of_settings_auto_stop 1AE4  
                             ?_ST7032_put 002B                   _RTCC_adjust_time_cursor 36D0  
                      ?_RTCC_from_caltime 008F                     ??_USBCtrlTrfRxService 002B  
                __size_ofi2_USBDeviceInit 006C                            ??_getsUSBUSART 0068  
                                    PL100 0C70                                      PL110 1BD6  
                                    PL102 2C4E                                      ?_ADC 0060  
                                    PL200 4196                                      PL120 1CBC  
                                    PL112 41FC                                      PL104 30B0  
                                    PL210 2098                                      PL202 0850  
                                    PL130 030A                                      PL122 43C8  
                                    PL114 0F9C                                      PL106 0AB6  
                                    PL300 0336                                      PL220 2E8E  
                                    PL212 0C7A                                      PL204 0624  
                                    PL140 29F2                                      PL132 0AC2  
                                    PL124 2140                                      PL116 32E6  
                                    PL108 1FB0                                      PL310 1EE2  
                                    PL302 1130                                      PL230 0C84  
                                    PL222 2780                                      PL214 2162  
                                    PL206 3B74                                      PL150 2804  
                                    PL142 1FCA                                      PL134 3470  
                                    PL126 31CC                                      PL118 2074  
                                    PL320 1666                                      PL312 36C6  
                                    PL304 1138                                      PL240 23A4  
                                    PL232 0866                                      PL224 085C  
                                    PL216 062C                                      PL208 2FA4  
                                    PL160 2158                                      PL152 2444  
                                    PL144 13E4                                      PL136 0832  
                                    PL128 30BE                  USBEnableEndpoint@options 0033  
                                    PL330 1EEC                                      PL322 3B28  
                                    PL314 17AC                                      PL306 3156  
                                    PL250 2FAE                                      PL242 0870  
                                    PL234 3BBC                                      PL226 0AD2  
                                    PL218 26E0                                      PL170 061C  
                                    PL162 2942                                      PL154 391C  
                                    PL146 302C                                      PL138 0FAC  
                                    PL340 2A8C                                      PL332 3040  
                                    PL324 3CEC                                      PL316 3036  
                                    PL308 1142                                      PL260 3362  
                                    PL252 35CE                                      PL244 31E2  
                                    PL236 3FA4                                      PL228 239A  
                                    PL180 1CD2                                      PL172 1654  
                                    PL164 207E                                      PL156 4408  
                                    PL148 2F20                                      PL350 088C  
                                    PL342 087A                                      PL334 1670  
                                    PL326 336C                                      PL318 444C  
                                    PL270 4062                                      PL262 1CF6  
                                    PL254 0E12                                      PL246 2172  
                                    PL238 2300                                      PL190 0ACC  
                                    PL182 083E                                      PL174 0DFC  
                                    PL166 2386                                      PL158 214A  
                                    PL360 1BFC                                      PL352 0E32  
                                    PL344 1BF2                                      PL336 3DCA  
                                    PL328 281C                                      PL280 0E26  
                                    PL272 3F68                                      PL264 0E1C  
                                    PL256 0320                                      PL248 165E  
                                    PL192 0FC2                                      PL184 1BE0  
                                    PL176 2812                                      PL168 2950  
                                    PL362 2824                                      PL354 1DFA  
                                    PL346 0642                                      PL338 35DC  
                                    PL290 1FD6                                      PL282 3EA2  
                                    PL274 2CE4                                      PL266 1784  
                                    PL258 2A82                                      PL194 208C  
                                    PL186 1CE4                                      PL178 177A  
                                    PL364 1C04                                      PL356 0340  
                                    PL348 0884                                      PL292 20A8  
                                    PL284 30CA                                      PL276 178E  
                                    PL268 18C6                                      PL196 2452  
                                    PL188 111E                                      PL366 1D00  
                                    PL358 24FE                                      PL294 17A0  
                                    PL286 032A                                      PL278 2956  
                                    PL198 0E06                                      PL296 13EE  
                                    PL288 1794                                      PL298 0636  
                 _RTCC_adjust_time_toggle 43F6                                      ?_ISR 002B  
                  __end_of_get_string_usb 410C                          _terminal_at_hand 3C18  
                                    ?_OUT 0060                               ?_LED_output 0060  
                                    l1100 1DC8                                      l1309 4570  
                                    l1341 39B6                                      l1173 07C4  
                                    l1094 1D76                                      l2156 29E8  
                                    l1621 3D18                                      l2406 3D80  
                                    l1622 3D24                                      l1462 21F6  
                                    l2416 4026                                      l1456 2208  
                                    l2353 364A                                      l1473 3244  
                                    l1619 3D0C                                      l2363 38B8  
                                    l1635 3C78                                      l1467 31F4  
                                    l1804 2B96                USBConfigureEndpoint@handle 0031  
                                    l1637 3C84                                      l1805 2B4C  
                                    l1638 3C90                                      l1822 1ACC  
                                    l1823 1A32                                      l1487 28BA  
                                    l1844 19C0                                      l1845 191C  
                                    l1951 00EC                                      l1928 0018  
                                    l1945 0164                                      l1866 1742  
                                    OUT@b 0061                                      l1867 16BE  
                                    l1883 12B0                                      l1892 136A  
                                    l1885 12C0                                      l1967 020E  
                                    l1968 0212                                      l1995 3BD4  
                      __CFG_WPFP$PAGE_127 000000                                      l9500 3756  
                                    l7830 11F2                                      l9520 3796  
                                    l9512 3780                                      l9504 3762  
                                    l9600 409E                                      l9506 376A  
                                    l9610 35FE                                      l7850 1250  
                                    l7842 1228                                      l7834 1204  
                                    l7826 11E0                                      l9508 376E  
                                    l9516 378A                                      l9612 360A  
                                    l9550 2FF8                                      l9622 363C  
                                    l9614 360E                                      l7854 1264  
                                    l7846 123C                                      l7838 1216  
                                    l9536 42FA                                      l9528 42E4  
                                    l9720 3884                                      l9704 44AC  
                                    l9634 2800                                      l7858 1276  
                                    l9722 3888                                      l9732 3B82  
                                    l9574 3BE8                                      l9566 34D6  
                                    l9590 4086                                      l9726 38AA  
                                    l9718 3878                                      l9814 0020  
                                    l9496 374A                                      l9672 154C  
                                    l9680 156A                                      l9584 407C  
                                    l9736 3BA6                                      l9904 01EC  
                                    l9832 007A                                      l9824 003A  
                                    l9808 0006                                      l9666 1548  
                                    l9930 024C                                      l9914 0224  
                                    l9922 0236                                      l9842 009E  
                                    l9834 007E                                      l9818 0026  
                                    l9684 1578                                      l9596 4096  
                                    l9588 4082                                      l9924 023C  
                                    l9852 00F2                                      l9844 00A4  
                                    l9846 00AA                                      STR_1 FDFC  
                                    l9688 1590                                      l9944 02D0  
                                    l9936 025A                                      l9864 0136  
                                    l9856 00FC                                      STR_2 FF7F  
                                    l9794 1B9E                                      l9938 0266  
                                    l9890 01AA                                      l9874 017A  
                                    l9858 010C                                      l9946 02DE  
                                    l9962 3AEC                                      STR_4 FFFB  
                                    l9796 1BA0                                      l9884 01A6  
                                    l9948 02E8                                      l9868 0148  
                                    l9964 3AF0                                      STR_7 FFFD  
                                    l9982 4268                                      l9966 3AF8  
                                    STR_9 FFF9                                      l9992 2A0A  
                                    l9968 3B02                                      l9986 4278  
                                    l9898 01DC                                      l9998 2A22  
                                    u7400 124A                                      u7410 125E  
                                    u7420 1272                     ??_USBCtrlTrfTxService 002B  
                                    u7390 1236                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      u9720 34EA  
                                    u9660 3496                                      u9680 34B8  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9738 34EE                                      u9930 3B9A  
                                    u9940 3BB6                                      u9678 349A  
                                    u9937 3B96                                      u9698 34BC  
                                    u9947 3BB2                              __CFG_WDTPS$8 000000  
                         _CDCDataInHandle 0117                               display@item 0064  
                     ??_RTCC_from_caltime 0091                               display@str0 0060  
                             display@str1 0062    USBStdFeatureReqHandler@current_ep_data 0043  
                                    _pDst 011D                                      _atoi 2962  
                                    _main 37A0                  ??i2_USBTransferOnePacket 002F  
                button_timer_interrupt@bt 0083                             _software_init 392A  
                                    _port 013D                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 002F                                      fsr2h 000FDA  
                                    indf1 000FE7                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 4170                                      btemp 0054  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 45A4  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00BC                          __end_of_ADC_init 444C  
                           __CFG_IESO$OFF 000000                RTCC_adjust_time_dec@i_3710 0097  
                      __size_of_CTMU_init 0022                        __size_of_CTMU_read 0090  
              __end_of_USBCheckStdRequest 2CE4                    ??_USBCtrlTrfOutHandler 002D  
                            ?_ST7032_init 002B                              ?_ST7032_task 002B  
                          terminal_task@i 01FC                              ?_ST7032_puts 0070  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 003F  
                         ??_terminal_task 00E9                           ??_terminal_time 00D9  
                                   ??_ADC 0062                        terminal_task@ascii 01FB  
                                   ADC@ch 0063                             ADC_init@p_ref 0060  
                                   ??_ISR 004A                                     ??_OUT 0061  
                ??_USBStdGetStatusHandler 002B                              print_time@tx 00AA  
                       _terminal_data_out 0133                            ?_USBDeviceInit 002B  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                                   l10010 2A54                                     l10100 3724  
                                   l10022 2D8C                                     l10110 1424  
                                   l10210 3F76                                     l10130 148E  
                                   l10122 1478                                     l10114 143A  
                                   l10300 211E                                     l10214 3F8E  
                                   l10062 3CDE                                     l10142 14D6  
                                   l10126 1486                                     l10118 1452  
                                   l10312 3D50                                     l10304 2138  
                                   l10080 36DE                                     l10160 0FF2  
                                   l10136 14AE                                     l10144 14E8  
                                   l11032 3812                                     l10232 3E6A  
                                   l10314 3D58                                     l10066 4148  
                                   l10138 14B4                                     l10074 4402  
                                   l11042 3860                                     l10234 3E72  
                                   l11052 2F14                                     l11060 2F1E  
                                   l11220 40EC                                     l11204 439C  
                                   l10324 3D76                                     l10316 3D5C  
                                   l10068 4150                                     l10092 3708  
                                   l10084 36EC                                     l10172 1044  
                                   l10164 1008                                     l10148 14F6  
                                   l11036 382E                                     l10244 2964  
                                   l10228 3C4E                                     l11054 2F1A  
                                   l10502 1E86                                     l10430 2E4C  
                                   l11206 43A0                                     l10350 2AE0  
                                   l11070 38F0                                     l10262 29C0  
                                   l10254 298A                                     l10246 2968  
                                   l10238 3E96                                     l10504 1E8E  
                                   l10512 1E90                                     l11080 3B44  
                                   l10344 2AC4                                     l10272 3C9C  
                                   l10280 20C6                                     l11312 21FA  
                                   l11320 223C                                     l10096 3716  
                                   l10088 36FA                                     l10192 109A  
                                   l10176 1052                                     l10168 1020  
                                   l11400 13B8                                     l10256 2992  
                                   l10600 0982                                     l10522 1EA6  
                                   l10514 1E96                                     l10434 2E66  
                                   l11218 40E8                                     l11234 2508  
                                   l10290 20E4                                     l11314 220C  
                                   l11306 21EC                                     l10186 1074  
                                   l10194 10AC                                     l10258 2998  
                                   l11162 0B92                                     l11154 0B4E  
                                   l11146 0B04                                     l10524 1EBE  
                                   l10428 2E48                                     l11244 2584  
                                   l11308 21F0                                     l10188 107A  
                                   l11340 12E0                                     l11404 13D2  
                                   l10620 0A68                                     l10612 0A0A  
                                   l10604 09AC                                     l11164 0B98  
                                   l11148 0B12                                     l11510 1D4C  
                                   l11502 1D3A                                     l10470 1E32  
                                   l10438 2E8A                                     l10454 44CC  
                                   l10374 2AF0                                     l10358 2AE4  
                                   l11246 258C                                     l11430 0428  
                                   l11414 0370                                     l11262 32DC  
                                   l10294 2100                                     l10286 20DA  
                                   l10198 10C4                                     l11350 12F8  
                                   l10614 0A26                                     l11190 0C5C  
                                   l11174 0BF2                                     l11158 0B68  
                                   l11520 1D86                                     l10480 1E5A  
                                   l11432 0460                                     l11424 03B0  
                                   l11408 034E                                     l11256 3272  
                                   l11272 3F36                                     l10720 19F2  
                                   l10800 18FC                                     l11360 1320  
                                   l11352 12FC                                     l11336 12DA  
                                   l10624 0A94                                     l10608 09E0  
                                   l11184 0C22                                     l11168 0BB2  
                                   l11522 1D8E                                     l11530 1DC2  
                                   l11506 1D46                                     l10474 1E3A  
                                   l10466 1E2A                                     l11434 0486  
                                   l11450 05A8                                     l11290 21A6  
                                   l10714 19EA                                     l11362 1332  
                                   l11338 12DC                                     l10618 0A50  
                                   l11186 0C30                                     l11610 07FC  
                                   l11602 07C8                                     l11524 1D98  
                                   l11516 1D66                                     l10572 0D92  
                                   l11276 3F4E                                     l10740 1A36  
                                   l10724 1A08                                     l11380 138A  
                                   l11364 1344                                     l11356 1304  
                                   l11348 12F6                                     l11534 1DD0  
                                   l11518 1D7E                                     l11542 1DE2  
                                   l10494 1E84                                     l10486 1E6C  
                                   l10662 3D30                                     l10574 0DA0  
                                   l11286 2184                                     l10726 1A12  
                                   l10902 16F2                                     l10814 1920  
                                   l11390 13AC                                     l11382 1392  
                                   l11374 1376                                     l11358 130E  
                                   l11702 288E                                     l10582 08BE  
                                   l11606 07D2                                     l11528 1DA2  
                                   l11448 0594                                     l11456 05BA  
                                   l11296 21C4                                     l10752 1A78  
                                   l10832 1980                                     l11384 139C  
                                   l11368 1356                                     l10592 091E  
                                   l10584 08CA                                     l11560 0692  
                                   l11538 1DDA                                     l10690 2B76  
                                   l10674 2B30                                     l10906 1706  
                                   l10922 1738                                     l10834 198C  
                                   l10842 19AA                                     l11394 13B2  
                                   l11386 13A2                                     l10594 093A  
                                   l11618 081C                                     l10940 3FFE  
                                   l11468 1C3C                                     l10684 2B60  
                                   l10756 1A8E                                     l10772 1AC2  
                                   l10908 1710                                     l10916 172C  
                                   l10828 196A                                     l11652 3220  
                                   l11644 3210                                     l11708 28BE  
                                   l10588 08F6                                     l11580 072C  
                                   l11572 070A                                     l11564 06E8  
                                   l11556 066C                                     l10942 4006  
                                   l10758 1A98                                     l10766 1AB6  
                                   l10870 1684                                     l11670 3250  
                                   l11638 3204                                     l11646 3214  
                                   l10598 0964                                     l11590 0750  
                                   l11582 072E                                     l11574 070C  
                                   l11566 06EA                                     l10960 422A  
                                   l10944 400A                                     l10864 167C  
                                   l10848 19B6                                     l11816 37FA  
                                   l11498 1D1C                                     l10698 2B8C  
                                   l10890 16C2                                     l10874 1698  
                                   l10794 18DA                                     l11658 3230  
                                   l11690 2844                                     l11754 394E  
                                   l11770 37A8                                     l10972 3ED2  
                                   l10948 401C                                     l10876 16A2  
                                   l10788 18D2                                     l11596 079E  
                                   l11588 074E                                     l10798 18F0  
                                   l11598 07B0                 __end_of_RTCC_from_caltime 434C  
                                   ?_atoi 007C                                     ?_main 002B  
                 __size_of_put_string_usb 0022                            ??_get_quot_rem 007D  
                         __end_of___lbdiv 40A2                                     _ADRES 000FC3  
                                   STR_10 FFE6                                     STR_11 FFFB  
                                   STR_20 FFE3                                     STR_12 FFFB  
                                   STR_13 FFF7                                     STR_14 FF8F  
                                   STR_30 FFD9                                     STR_31 FFF3  
                                   STR_15 FF79                                     STR_23 FD98  
                                   STR_16 FFFD                                     STR_32 FFC9  
                                   STR_40 FF91                                     STR_24 FF82  
                                   STR_41 FFE6                                     STR_17 FF80  
                                   STR_33 FDFF                                     STR_25 FF53  
                                   STR_42 FFE6                                     STR_18 FFF9  
                                   STR_26 FFEF                                     STR_34 FFE7  
                                   STR_50 FEC3                                     STR_43 FFE6  
                                   STR_35 FE4B                                     STR_27 FFEE  
                                   STR_19 FFE3                                     STR_51 FFCF  
                                   STR_44 FFE6                                     STR_52 FFF1  
                                   STR_36 FFDE                                     STR_60 FF48  
                                   STR_28 FF31                           __end_of___awmod 37A0  
                                   STR_29 FFE9                                     STR_37 FFF5  
                                   STR_61 FFD4                                     STR_45 FE92  
                                   STR_53 FBE6                                     STR_70 FFB7  
                                   STR_38 FF98                                     STR_54 FF67  
                                   STR_46 FF0C                                     STR_62 FE1D  
                                   STR_39 FFBB                                     STR_55 FF70  
                                   STR_71 FF3D                                     STR_47 FEE2  
                                   STR_63 FDBD                                     STR_72 FE44  
                                   STR_56 FFEB                                     STR_64 FFC3  
                                   STR_80 FFA5                                     STR_48 FEF1  
                                   STR_65 FFDC                                     STR_81 FFAB  
                                   STR_57 FF25                                     STR_49 FF19  
                                   STR_73 FE01                                     STR_58 FFE6  
                                   STR_74 FEE2                                     STR_90 FE81  
                                   STR_82 FE81                                     STR_66 FE4D  
                                   STR_91 FFA5                                     STR_83 FFA5  
                                   STR_59 FFBD                                     STR_75 FEFF  
                                   STR_67 FDE1                                     STR_76 FFE6  
                                   STR_92 FFAB                                     STR_84 FFAB  
                                   STR_68 FE35                           __end_of___lbmod 4302  
                                   STR_93 FFE6                                     STR_85 FFE6  
                                   STR_77 FFE6                                     STR_69 FDBB  
                                   STR_94 FFE6                                     STR_86 FFE6  
                                   STR_78 FFE6                                     STR_95 FFE6  
                                   STR_87 FFE6                                     STR_79 FFE6  
                                   STR_88 FFA5                                     STR_96 FFB1  
                                   STR_89 FFAB                                     STR_97 FF9F  
                                   STR_98 FE81                                     STR_99 FFB1  
       __size_of_USBCtrlEPServiceComplete 0074                           __end_of___lldiv 365C  
                                   u10040 00D2                                     u10047 00CE  
                                   u10080 012A                                     u12100 3284  
                                   u10350 2E00                                     u10270 3B20  
                                   u10087 0126                                     u12120 3F48  
                                   u11410 3D20                                     u10355 2DF6  
                                   u10277 3B1C                                     u11430 3D2C  
                                   u12055 252A                                     u12080 257A  
                                   u10640 3F86                                     u12320 03FE  
                                   u10800 3C8C                                     u11520 1A5C  
                         __end_of___llmod 38CA                                     u12321 03FA  
                  __end_of_USBDeviceTasks 18C6                                     u10650 3F9E  
                                   u12330 0400                                     u11610 1944  
                                   u10820 3C98                                     u11390 3D14  
                                   u10647 3F82                                     u11385 3D08  
                                   u10657 3F9A                                     u11386 3D0A  
                                   u11538 1A60                                     u10780 3C80  
                                   u10860 20F6                                     u11628 1948  
                                   _LATB2 007C52                                     u10775 3C74  
                                   _LATA5 007C4D                                     u10776 3C76  
                                   u10880 2114                                     _LATC2 007C5A  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   u10890 2130                                     _LATB6 007C56  
                                   u10867 20F2                                     _LATB7 007C57  
                                   u10887 2110                                     u12817 2DA8  
                                   u10897 212C                 ?_USBCtrlEPServiceComplete 002B  
                                   u12827 2DB2                                     u11795 4444  
                                   u11796 4446                           __end_of___lwdiv 3D8A  
                         __end_of___lwmod 4030                                     i2l300 3672  
                                   i2l232 25DE                                     i2l170 1868  
                                   i2l308 41F8                             __CFG_WDTEN$ON 000000  
                                   i2l158 17E2                                     i2l335 4480  
                                   i2l168 1860                                     i2l345 31BA  
                                   i2l337 4492                                     i2l169 18C2  
                                   i2l450 310C                                     i2l290 1F90  
                                   i2l285 1F52                                     i2l375 0E54  
                                   i2l295 3664                                     i2l359 2C66  
                                   i2l288 1F8C                                     i2l368 2C84  
                                   i2l393 0F32                                     i2l385 0EF4  
                                   i2l298 36B2                                     i2l299 366E  
                                   _UADDR 000F38                   ST7032_task@st7032_state 0124  
                         ??_hardware_init 0091                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
                  __size_of_ctmu_sampling 0088                    __size_of_LED_indicator 0090  
      __size_of_USBCtrlEPAllowStatusStage 006C                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 3A3C  
                                   _sd000 FBE2                                     _sd001 FB3C  
                                   _sd002 FB70                           __end_of_display 2140  
                ST7032_cursor@row_offsets 0072                    __size_of_ST7032_cursor 0020  
                    caltime_to_epoch@year 007F                                i2memset@p1 002B  
                         __end_of_dpowers FA79                           ??_settings_task 0099  
                         __end_of_isdigit 44B4                        __size_of_RTCC_init 0042  
                         ?_get_string_usb 006C                        __size_of_RTCC_task 0032  
                        ringbuf_delete@rb 0060                                     atoi@a 0081  
                                   atoi@s 007C                 RTCC_adjust_time_cursor@tm 0060  
                            display_dec@s 00AE               settings_task@settings_state 013A  
                                   tablat 000FF5                         __end_of_ANALOG_IN 44E8  
                          ?_software_init 002B                                     plusw2 000FDB  
                       __end_of_CDCInitEP 3AE2                          __end_of_USB_init 4500  
                        __end_of_USB_task 39E4                __size_of_ringbuf_backspace 0052  
                                   status 000FD8                           __end_of_sprintf 02EE  
                         ___lbdiv@divisor 0060                              __end_ofPL100 0C7A  
                            __end_ofPL110 1BE0                              __end_ofPL102 2C5A  
                            __end_ofPL200 41A2                              __end_ofPL120 1CD2  
                            __end_ofPL112 4206                              __end_ofPL104 30BE  
                            __end_ofPL210 20A8                              __end_ofPL202 085C  
                            __end_ofPL130 0320                              __end_ofPL122 43D4  
                            __end_ofPL114 0FAC                              __end_ofPL106 0AC2  
                            __end_ofPL300 0340                              __end_ofPL220 2E9E  
                            __end_ofPL212 0C84                              __end_ofPL204 062C  
                            __end_ofPL140 29FC                              __end_ofPL132 0ACC  
                            __end_ofPL124 214A                              __end_ofPL116 32F2  
                            __end_ofPL108 1FCA                              __end_ofPL310 1EEC  
                            __end_ofPL302 1138                              __end_ofPL230 0C8E  
                            __end_ofPL222 278A                              __end_ofPL214 2172  
                            __end_ofPL206 3B80                              __end_ofPL150 2812  
                            __end_ofPL142 1FD6                              __end_ofPL134 3478  
                            __end_ofPL126 31E2                              __end_ofPL118 207E  
                            __end_ofPL320 1670                              __end_ofPL312 36D0  
                            __end_ofPL304 1142                              __end_ofPL240 23B4  
                            __end_ofPL232 0870                              __end_ofPL224 0866  
                            __end_ofPL216 0636                              __end_ofPL208 2FAE  
                            __end_ofPL160 2162                              __end_ofPL152 2452  
                            __end_ofPL144 13EE                              __end_ofPL136 083E  
                            __end_ofPL128 30CA                              __end_ofPL330 1EF6  
                            __end_ofPL322 3B32                              __end_ofPL314 17B6  
                            __end_ofPL306 3160                              __end_ofPL250 2FBC  
                            __end_ofPL242 087A                              __end_ofPL234 3BCC  
                            __end_ofPL226 0ADC                              __end_ofPL218 26EA  
                            __end_ofPL170 0624                              __end_ofPL162 2950  
                            __end_ofPL154 392A                              __end_ofPL146 3036  
                            __end_ofPL138 0FC2                              __end_ofPL340 2A96  
                            __end_ofPL332 304A                              __end_ofPL324 3CF6  
                            __end_ofPL316 3040                              __end_ofPL308 114C  
                            __end_ofPL260 336C                              __end_ofPL252 35DC  
                            __end_ofPL244 31E8                              __end_ofPL236 3FB4  
                            __end_ofPL228 23A4                              __end_ofPL180 1CE4  
                            __end_ofPL172 165E                              __end_ofPL164 208C  
                            __end_ofPL156 4416                              __end_ofPL148 2F2E  
                            __end_ofPL350 0894                              __end_ofPL342 0884  
                            __end_ofPL334 167A                              __end_ofPL326 3376  
                            __end_ofPL318 4456                              __end_ofPL270 406C  
                            __end_ofPL262 1D00                              __end_ofPL254 0E1C  
                            __end_ofPL246 2180                              __end_ofPL238 230A  
                            __end_ofPL190 0AD2                              __end_ofPL182 0850  
                            __end_ofPL174 0E06                              __end_ofPL166 239A  
                            __end_ofPL158 2158                              __end_ofPL360 1C04  
                            __end_ofPL352 0E3A                              __end_ofPL344 1BFC  
                            __end_ofPL336 3DD4                              __end_ofPL328 2824  
                            __end_ofPL280 0E32                              __end_ofPL272 3F74  
                            __end_ofPL264 0E26                              __end_ofPL256 032A  
                            __end_ofPL248 1666                              __end_ofPL192 0FCC  
                            __end_ofPL184 1BF2                              __end_ofPL176 281C  
                            __end_ofPL168 2956                              __end_ofPL362 282A  
                            __end_ofPL354 1E02                              __end_ofPL346 064C  
                            __end_ofPL338 35E6                              __end_ofPL290 1FE2  
                            __end_ofPL282 3EAE                              __end_ofPL274 2CEE  
                            __end_ofPL266 178E                              __end_ofPL258 2A8C  
                            __end_ofPL194 2098                              __end_ofPL186 1CF6  
                            __end_ofPL178 1784                              __end_ofPL364 1C0C  
                            __end_ofPL356 0348                              __end_ofPL348 088C  
                            __end_ofPL292 20B4                              __end_ofPL284 30D6  
                            __end_ofPL276 1794                              __end_ofPL268 18D0  
                            __end_ofPL196 245E                              __end_ofPL188 1130  
                            __end_ofPL366 1D08                              __end_ofPL358 2504  
                            __end_ofPL294 17AC                              __end_ofPL286 0336  
                            __end_ofPL278 2962                              __end_ofPL198 0E12  
                            __end_ofPL296 13F8                              __end_ofPL288 17A0  
                            __end_ofPL298 0642                          __end_ofi2_memset 42B2  
                         ___lbdiv@counter 0062                         month_length@month 0066  
                             CTMU_read@ch 0070                   __end_of_ringbuf_put_num 3868  
                 __end_of_ringbuf_put_str 3BBC                        __size_ofi2___lwdiv 004A  
                           ?_ST7032_clear 002B                       terminal_task@i_4590 01FA  
                         putUSBUSART@data 0061              __size_of_USBStdSetCfgHandler 007C  
                         __initialization 34F4                           terminal_task@rx 00E7  
                         terminal_task@tx 00E5                           terminal_time@tx 00D1  
                            __end_of_atoi 29F2                              __end_of_main 3804  
                     __size_of_ST7032_put 0034                          __end_of_Auto_cut 2598  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                    _settings_adjust_time 2B2E                RTCC_adjust_time_inc@i_3680 0097  
                     __size_of_LED_output 004A                  ctmu_set_ratio@percentage 0083  
               __size_of_USBCtrlEPService 008A                             print_time@str 00AC  
               RTCC_adjust_time_toggle@tm 0060                                    ??_atoi 007E  
                                  ??_main 00EB                           LED_output@value 0060  
         settings_led_indicator@strp_6176 0090                             __activetblptr 000003  
                         ?_USBDeviceTasks 002B                 ??_RTCC_adjust_time_cursor 0062  
                             ?_USBSuspend 002B                 ??_RTCC_adjust_time_toggle 0062  
                                  ISR@cnt 0121                         __end_of_CTMU_init 4390  
                       __end_of_CTMU_read 2E0E                              _cdc_mem_type 012B  
                             ST7032_put@c 006F                   __end_of_USBDeviceAttach 4196  
                        _CDCDataOutHandle 0119                         _getsUSBUSART$1957 006A  
                        ___llmod@dividend 006D                                    STR_100 FF9F  
                                  STR_101 FFE6                                    STR_102 FFE6  
                                  STR_110 FF5E                                    STR_103 FFE6  
                                  STR_111 FE70                                    STR_112 FF5E  
                                  STR_104 FF5E                                    STR_113 FEB3  
                                  STR_105 FE5F                                    STR_114 FF5E  
                                  STR_106 FF5E                                    STR_107 FE5F  
                                  STR_115 FED3                                    STR_116 FFE6  
                                  STR_108 FF5E                                    STR_117 FFE6  
                                  STR_109 FEA3                                    STR_118 FF8A  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                       display_time_1602@tm 00B2  
                               ??_USB_ISR 004A                           getsUSBUSART@len 0067  
                   __size_of_CDCTxService 00C0                                    i2l2406 3E14  
                                  i2l1635 3E36                                    i2l1637 3E42  
                                  i2l1638 3E4E                                    i2l1754 0090  
                                  i2l7010 2264                                    i2l7020 228E  
                                  i2l7014 2270                                    i2l6222 313A  
                                  i2l6206 3106                                    i2l7200 3188  
                                  i2l7032 22B6                                    i2l6160 3300  
                                  i2l6216 3126                                    i2l7212 31A2  
                                  i2l7036 22BE                                    i2l6084 35AC  
                                  i2l6228 3140                                    i2l6340 43D4  
                                  i2l6500 42A2                                    i2l6094 40B0  
                                  i2l6166 331A                                    i2l7070 2C76  
                                  i2l9000 3DE4                                    i2l6360 232C  
                                  i2l6192 30EE                                    i2l7080 2C98  
                                  i2l9002 3DEC                                    i2l6370 234E  
                                  i2l7218 31B0                                    i2l6098 40BE  
                                  i2l6178 334E                                    i2l6610 1F56  
                                  i2l6602 1F16                                    i2l7058 2C6E  
                                  i2l9012 3E0A                                    i2l9004 3DF0  
                                  i2l6380 236A                                    i2l6356 2324  
                                  i2l6516 342E                                    i2l6188 30E2  
                                  i2l6700 0F00                                    i2l7084 2CA4  
                                  i2l9020 457E                                    i2l6198 30F8  
                                  i2l6710 0F1E                                    i2l6630 3682  
                                  i2l8310 201A                                    i2l9200 243A  
                                  i2l6720 0F3C                                    i2l6712 0F24  
                                  i2l6640 36A4                                    i2l6544 3A0E  
                                  i2l8304 2000                                    i2l6378 2364  
                                  i2l6618 1F94                                    i2l8410 1828  
                                  i2l6388 2380                                    i2l6548 3A22  
                                  i2l8420 183C                                    i2l8404 1820  
                                  i2l6726 0F56                                    i2l6590 292A  
                                  i2l8334 2024                                    i2l8318 201C  
                                  i2l8414 1830                                    i2l6728 0F5C  
                                  i2l6496 4292                                    i2l6568 28E8  
                                  i2l7640 41F6                                    i2l7616 446E  
                                  i2l6682 0EB4                                    i2l6674 0E96  
                                  i2l6658 0E56                                    i2l7618 4470  
                                  i2l9180 23B6                                    i2l6684 0EB6  
                                  i2l7660 2C00                                    i2l8428 1856  
                                  i2l6598 1F06                                    i2l8454 18A6  
                                  i2l8390 17F8                                    i2l9350 0042  
                                  i2l9192 2414                                    i2l6688 0EC4  
                                  i2l8456 18BA                                    i2l8448 188C  
                                  i2l8376 17DA                                    i2l8368 17CA  
                                  i2l9360 005C                                    i2l9186 23D6  
                                  i2l6698 0EE8                                    i2l6962 25C0  
                                  i2l7674 2C40                                    i2l6966 25C6  
                                  i2l8398 1808                                    i2l9366 0072  
                                  i2l9376 0088                                    i2l6978 25F2  
                                  i2l6986 2600                                    i2l8992 3E5A  
                           CDCTxService@i 0069                                    _RTCCAL 000F3E  
                          __CFG_WPCFG$OFF 000000                  i2USBTransferOnePacket@ep 002F  
      settings_integrating_reset@str_6192 007E                         ??i2_USBDeviceInit 0033  
         __size_ofi2_USBTransferOnePacket 0070                          __end_of_data_out 1CBC  
                          __CFG_WPDIS$OFF 000000                            ??_ST7032_clear 0071  
                __end_of_is_usb_available 4574                             _ctmu_sampling 26EA  
                           _LED_indicator 23B4                        _terminal_task$7069 01F8  
                      epoch_to_caltime@tm 0082                      get_string_usb@rx_len 006E  
                             LED_output@b 0061                         _shortPacketStatus 0024  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0082  
                 __size_of_ST7032_command 0042                   __size_of_ctmu_set_ratio 0086  
                        ringbuf_put_num@i 0088                           USBDeviceTasks@i 0049  
                           _ST7032_cursor 4416                     caltime_to_epoch@epoch 0081  
                        ??_integrate_time 0060               USBStdFeatureReqHandler@pUEP 0041  
                      _terminal_time$7070 00D9                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002C                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                        __end_of_bootload 413E                                    ___lmul 3BCC  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 2CEE  
                                  ___wmul 4302                        ??_epoch_to_caltime 0084  
                               ??___lbdiv 0061                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 10CC                                 ??___lbmod 0061  
                   ?_settings_adjust_time 002B              __end_of_RTCC_adjust_time_inc 1502  
                                  _d_to_x 4548                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 2E8E                      ringbuf_put_num@value 0085  
                            ?_timer0_init 002B                                 ??___llmod 0075  
                       __end_of_RTCC_init 3B74                              ?_timer1_init 0060  
                               ??___lwdiv 0080                         __end_of_RTCC_task 41D4  
                               ??___lwmod 0064                              ?_timer3_init 002B  
                            ?_normal_task 002B                                    _lcd_tx 0182  
                       _USBEnableEndpoint 40A2           __size_of_USBStdGetStatusHandler 006A  
                                  _ctmu_m 0025                                    _memset 425E  
                                  clear_0 34FC                                    clear_1 350E  
                                  clear_2 351A                           put_string_usb@s 006D  
                                  clear_3 3526                                    clear_4 3532  
                                  clear_5 3546                           __CFG_CLKOEC$OFF 000000  
                         ___awmod@divisor 0062                      __size_of_display_LCD 028C  
                         ___awmod@counter 0064                        _ctmu_sampling_flag 012C  
                                  _x_to_d 4530                        ?_USBEnableEndpoint 0033  
              __size_of_RTCC_from_caltime 0024                                    _usb_rx 02B5  
                                  _usb_tx 02BD                      __size_of_display_dec 0040  
                                  _strcat 3AE2                                    _strcmp 3E68  
                                  _strcpy 413E                                 ??_display 0064  
           __size_of_USBTransferOnePacket 006A                 __size_of_caltime_to_epoch 0106  
                      _terminal_operation 0ADC                                 ??_isdigit 0060  
             settings_auto_stop@strp_6159 0090                              _CDCTxService 1E02  
                       __end_ofi2___lwdiv 3E1E                              __mediumconst FA50  
                           _cut_time_flag 012D                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                               ?_ADC_init 002B                       ??_USBEnableEndpoint 0034  
                               ??_sprintf 0097                       ?_terminal_operation 00DA  
                           ?i2_LED_output 002B                               _CtrlTrfData 000D38  
                        ___lbdiv@dividend 0061                           ??_software_init 0084  
                    _controlTransferState 0020                      __CFG_LS48MHZ$SYS48X8 000000  
                         ___lbmod@divisor 0060                                __accesstop 0060  
                 __end_of__initialization 3564                           ___lbmod@counter 0062  
                            __pbssBIGRAMl 04C8                              CTMU_read@sum 0071  
                           ?_millis_timer 002B                      __end_of_get_quot_rem 2FA4  
                          ?_ctmu_sampling 002B                            ?_LED_indicator 002B  
                           ___rparam_used 000001                           _RTCC_from_epoch 4500  
                __size_of_USBStallHandler 0028                          ?_ringbuf_put_num 0083  
                        ?_ringbuf_put_str 006F                   ?_settings_led_indicator 002B  
                    __CFG_WPEND$PAGE_WPFP 000000                            ?_ST7032_cursor 0071  
                     __size_of_USBSuspend 0016                          LED_indicator@cnt 0106  
                        terminal_task@op0 022B                          terminal_task@op1 0244  
                        terminal_task@op2 025D                          terminal_task@op3 0276  
                        terminal_task@buf 0194                            __pcstackCOMRAM 002B  
               __end_of_USBEnableEndpoint 40D8                             __end_of_sd000 FBE6  
                           __end_of_sd001 FB70                             __end_of_sd002 FBA4  
                        terminal_time@op0 00D3                          terminal_time@op1 00D5  
                        terminal_time@op2 00D7                              __pidataBANK1 45A4  
          settings_led_indicator@str_6175 007B                      ??_terminal_operation 00E4  
                __end_of_terminal_at_hand 3C62          __size_of_USBCtrlEPAllowDataStage 0058  
                    __size_of_ST7032_init 00A0                      __size_of_ST7032_task 00F2  
                    __size_of_ST7032_puts 0030             __size_of_USBConfigureEndpoint 0060  
                       ?_port_button_task 002B               __end_of_USBCtrlTrfInHandler 31C2  
                         __CFG_DSWDTPS$G2 000000                                __end_ofPL2 264A  
                              __end_ofPL4 19E8                                __end_ofPL6 22DC  
                              __end_ofPL8 10E4                          ___lbdiv@quotient 0063  
                          _put_string_usb 4390                    i2_USBTransferOnePacket 32F2  
                      ??_port_button_task 0066                      terminal_task@command 018A  
                               ?_USB_init 002B                                 ?_USB_task 002B  
                       _CDCTxService$2005 0067                   __size_of_ringbuf_delete 0022  
                               ?i2_memset 002B                                _cdc_rx_len 001E  
                              _cdc_tx_len 00EB                              ??_ST7032_put 006F  
                              ??_ADC_init 0060                caltime_to_epoch@month_3500 0080  
                ??_USBCtrlTrfSetupHandler 0046                            ??i2_LED_output 002C  
                            ??_LED_output 0061                    RTCC_adjust_time_dec@tm 0091  
                        ?_USBDeviceAttach 002B                    _USBStdGetStatusHandler 365C  
                            sprintf@width 00A8                    RTCC_adjust_time_inc@tm 0091  
                              __pbssBANK0 00EB                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                 ?_Auto_cut 002B  
                          LED_indicator@i 0035                            ??_millis_timer 002B  
                      __size_of_ctmu_task 000E                                 ISR@cnt_t1 0122  
                      ST7032_command@wait 006F                   __end_of_caltime_to_RTCC 2D72  
          __end_of_settings_led_indicator 19D8                           _RTCC_to_caltime 304A  
                      _settings_auto_stop 19E8               __size_of_USBWakeFromSuspend 0020  
                             _pBDTEntryIn 0010          __end_of_USBCtrlEPServiceComplete 261C  
             __size_of_USBCheckCDCRequest 0080                     __end_of_weekday_3char FBC0  
                  ??_settings_adjust_time 0099                     RTCC_task@prev_halfsec 0123  
                    USBCtrlTrfRxService@i 002B                                   ?___lmul 006D  
                   settings_auto_stop@str 0067                                   ?___wmul 0076  
                          ST7032_init@buf 0400                       ?_settings_auto_stop 002B  
                                 ?_d_to_x 002B                              ST7032_puts@s 0070  
                      __end_of_ST7032_put 3FE8                    __end_of_put_string_usb 43B2  
                                 ?_memset 0060                            ___lmul@product 0075  
                              _device_dsc FBC0                        __end_of_LED_output 3CAC  
                        _USBCtrlEPService 2BC4                                   ?_x_to_d 002B  
                              _ep_data_in 0109                                   ?_strcat 0060  
                                 ?_strcmp 0060                                   ?_strcpy 0060  
                 settings_auto_stop@state 0137               __end_of_USBCtrlTrfRxService 22D2  
                      _USBCheckStdRequest 2C5A                                ??_USB_init 0069  
                       _configDescriptor1 FAF9                                ??_USB_task 0071  
                        ??_get_string_usb 006E                        __CFG_OSC$INTOSCPLL 000000  
                    __end_of_ST7032_clear 45A0                                ANALOG_IN@b 0060  
                              ??i2_memset 0031                                 ?_data_out 00AA  
             __end_of_USBCtrlTrfTxService 2386                       _USBStdSetCfgHandler 28C6  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                    terminal_operation@tx 00DA                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                      ??_settings_auto_stop 0066  
                     ?_USBCheckStdRequest 002B              __size_of_USBStdGetDscHandler 00AE  
                                 _UIEbits 000F36                           integrate_time@i 0062  
                                 _USB_ISR 45A0                   __end_of_RTCC_from_epoch 4518  
                               ?_bootload 002B                          ST7032_cursor@col 0074  
                    timer1_init@prescaler 0062                      _RTCC_adjust_time_dec 0FCC  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 13F8  
                        ST7032_cursor@row 0071                                ??_Auto_cut 007C  
                        __CFG_CFGPLLEN$ON 000000                  ??_button_timer_interrupt 0086  
                           _cdc_trf_state 001F                           ??_ctmu_sampling 0088  
                         ??_LED_indicator 0032                             ?_month_length 0066  
                     epoch_to_caltime@day 0087                       epoch_to_caltime@num 008B  
                         ??_ST7032_cursor 0072                         RTCC_from_epoch@tm 008F  
                                 _pCDCDst 010F                                   _pCDCSrc 0112  
                   __size_of_getsUSBUSART 0080                    display_time_1602@line0 00B4  
                  display_time_1602@line1 00B6                                 _ANALOG_IN 44D0  
                                 __Hparam 0000                            _ST7032_command 3EF2  
                          _ctmu_set_ratio 264A       settings_integrating_reset@strp_6193 0093  
                    ?_USBStdSetCfgHandler 002B                                 _CDCInitEP 3A90  
                                 __Lparam 0000                                _ctmu_ratio 0021  
                       ringbuf_put_num@rb 0083                            display_LCD@str 0194  
              __size_of_USBEnableEndpoint 0036                         ringbuf_put_str@rb 006F  
                            USB_task@data 0073                      ??_USBCheckStdRequest 0046  
           __size_of_USBCtrlTrfOutHandler 0020                             ?_ringbuf_init 0060  
                                 ___lbdiv 406C                           __size_of___lmul 004C  
                                 ___awmod 3738                                   ___lbmod 42DA  
                                 ___lldiv 35E6                          ??_USBDeviceTasks 0049  
                         __size_of___wmul 0026                                   ___llmod 3868  
                   ringbuf_put_num@digits 0087                                   ___lwdiv 3D40  
                         ?_put_string_usb 006B                         ??_USBStallHandler 002B  
                                 ___lwmod 3FF2                           __size_of_d_to_x 0016  
                   __end_of_terminal_task 0832                     __end_of_terminal_time 0AAC  
             settings_integrating_reset@i 0094               settings_integrating_reset@j 0096  
                    __size_of_ringbuf_pop 0082                      __size_of_ringbuf_num 0070  
                    __size_of_ringbuf_put 007A                           __CFG_STVREN$OFF 000000  
                    __size_of_putUSBUSART 001C                                   __pcinit 34F4  
                      getsUSBUSART@buffer 0069                           __size_of_memset 002A  
               __end_of_configDescriptor1 FB3C                                   __ramtop 0F00  
                    __size_of_timer0_init 002E                      __size_of_timer1_init 0044  
                                 __ptext0 37A0                                   __ptext1 064C  
                                 __ptext2 0ADC                                   __ptext3 0894  
                                 __ptext4 3C18                                   __ptext5 3A3C  
                                 __ptext6 4328                                   __ptext7 3E68  
                                 __ptext8 2962                                   __ptext9 410C  
                                 _inPipes 000A                      __size_of_timer3_init 0028  
                    __size_of_normal_task 0086             settings_integrating_reset@str 006A  
                       __end_of_ctmu_task 4594                           __size_of_x_to_d 0018  
             _USBDeferOUTDataStagePackets 0128                         port_button_task@i 0066  
                                 _display 20B4                                 _T0CONbits 000FD5  
                            __size_of_ADC 002A                           __size_of_strcat 0046  
                        _time_change_flag 0135                          _caltime_to_epoch 153C  
                         __size_of_strcmp 003A                           __size_of_strcpy 0032  
                            __size_of_ISR 00B4                                 _T1CONbits 000FCD  
                            __size_of_OUT 004A                                   _dpowers FA51  
                            ??_USBSuspend 003F                   __size_of_RTCC_from_RTCC 0018  
                              data_out@tx 00AA                                   _isdigit 4496  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                      hardware_init@usbrx 0300                        hardware_init@usbtx 04C8  
                              ??_data_out 00AC            settings_integrating_reset@strp 0092  
                   __end_of_hardware_init 33F8                           i2_USBDeviceInit 1FE2  
                        i2USBDeviceInit@i 0033                         __end_ofdata_out@p FBE2  
                                 _uart_rx 02A5                                   _uart_tx 02AD  
                      __end_of_USB_CD_Ptr FA81                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 0040                   __end_of_RTCC_to_caltime 30B0  
                   ?_RTCC_adjust_time_dec 0091                     ?_RTCC_adjust_time_inc 0091  
                   __size_of_get_quot_rem 0076                      end_of_initialization 3564  
                            _getsUSBUSART 2E0E                                ??_bootload 0075  
                               _CTMU_init 436E                                 _CTMU_read 2D7E  
                   __end_of_settings_task 13E4                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FA7F                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 0018           settings_integrating_reset@state 0138  
                          ??_month_length 0067                            display_dec@dec 00AC  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 00AA  
         _dummy_encapsulated_cmd_response 029D                    _terminal_data_out_flag 0134  
            terminal_operation@percentage 00E4                    __end_of_ST7032_command 3F34  
                  __end_of_ctmu_set_ratio 26D0                               sleep_task@i 0075  
                ?_USBStdFeatureReqHandler 002B                          ?_caltime_to_RTCC 0065  
                   ??_USBStdSetCfgHandler 003F                           ___lldiv@divisor 0064  
                              ?_ANALOG_IN 002B                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 002B                           ___lldiv@counter 006C  
                       ?_is_usb_available 002B                        __end_of_USBSuspend 43C8  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 39E4  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                _sleep_task 282A  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                      __end_ofi2_LED_output 3E68  
                _USBCtrlEPServiceComplete 25A8                                   strcmp@r 0066  
              _USBStatusStageEnabledFlag1 0129                _USBStatusStageEnabledFlag2 012A  
                      USBEnableEndpoint@p 0034                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 3B32                      __end_of_millis_timer 4586  
                               _RTCC_task 41A2                              _display_char 0203  
                            _display_flag 012F                        ST7032_cursor@F8592 01FD  
                              _print_item 00EC                              _get_quot_rem 2F2E  
                              _print_time 3A3C                                _print_port 0023  
                          _ringbuf_delete 434C              __end_ofdisplay_LCD@port_char FAF9  
               __size_of_epoch_to_caltime 00D6                          ___lbmod@dividend 0061  
                        __CFG_CPUDIV$OSC1 000000                        _BothEP0OutUOWNsSet 0125  
                     RTCC_from_caltime@tm 008F                 USBConfigureEndpoint@EPNum 0030  
                       i2___lwdiv@divisor 002D                         __size_of_ADC_init 0016  
              ?_USBCtrlEPAllowStatusStage 002B                settings_led_indicator@strp 008F  
                               i2___lwdiv 3DD4                         i2___lwdiv@counter 0031  
                        ?_RTCC_from_epoch 008F                                ?_CTMU_init 002B  
                              ?_CTMU_read 006D       USER_USB_CALLBACK_EVENT_HANDLER@size 003B  
                               _USTATcopy 002A                                 Auto_cut@i 007E  
                             ___lbmod@rem 0063           __size_of_button_timer_interrupt 013C  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 2A66  
                         ?_ST7032_command 006F                           ?_ctmu_set_ratio 002B  
                        __CFG_IOL1WAY$OFF 000000                         putUSBUSART@length 0060  
                     __CFG_MSSP7B_EN$MSK7 000000                         LED_indicator@cntf 0200  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 3D8A  
                           ??_display_LCD 00B8                            ringbuf_pop@ret 006E  
                           ??_display_dec 00AE                   ?i2_USBTransferOnePacket 002B  
            ??_settings_integrating_reset 0066                     __end_of_USBDeviceInit 2B20  
                       ?_terminal_at_hand 00CA                            __end_of___lmul 3C18  
                ?_RTCC_adjust_time_cursor 0060                     ST7032_command@command 0070  
                          __end_of___wmul 4328                            __end_of_d_to_x 455E  
                   __size_of_ST7032_clear 000C                  ?_RTCC_adjust_time_toggle 0060  
                 __end_ofi2_USBDeviceInit 204E                    __end_of_ringbuf_delete 436E  
                      ??_terminal_at_hand 00D1                                 i2memset@c 002D  
                               i2memset@n 002F                                 i2memset@p 0031  
                          __end_of_memset 4288                                ?_RTCC_init 002B  
                              ?_RTCC_task 002B                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 0126                            __end_of_x_to_d 4548  
                          __end_of_strcat 3B28                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 3EA2                            __end_of_strcpy 4170  
                             __end_ofPL10 22E6                               __end_ofPL20 3738  
                             __end_ofPL12 0DF2                               __end_ofPL30 1296  
                             __end_ofPL22 2A76                               __end_ofPL14 0DFC  
                             __end_ofPL40 2300                               __end_ofPL32 12A0  
                             __end_ofPL24 1FB0                               __end_ofPL16 05E4  
                             __end_ofPL50 1654                               __end_ofPL42 177A  
                             __end_ofPL34 22F6                               __end_ofPL26 176A  
                             __end_ofPL18 2BC4                               __end_ofPL60 0300  
                             __end_ofPL52 25A8                               __end_ofPL44 3F68  
                             __end_ofPL36 3470                               __end_ofPL28 060A  
                             __end_ofPL70 1114                               __end_ofPL62 10FE  
                             __end_ofPL54 10F2                               __end_ofPL46 2A82  
                             __end_ofPL38 12AE                               __end_ofPL80 26E0  
                             __end_ofPL72 2D7E                               __end_ofPL64 0AB6  
                             __end_ofPL56 1510                               __end_ofPL48 31CC  
                             __end_ofPL90 061C                               __end_ofPL82 1EE2  
                             __end_ofPL74 3FF2                               __end_ofPL66 151C  
                             __end_ofPL58 2074                               __end_ofPL92 0F9C  
                             __end_ofPL84 153C                               __end_ofPL76 2B2E  
                             __end_ofPL68 1532                               __end_ofPL94 1AF2  
                             __end_ofPL86 111E                               __end_ofPL78 0F8A  
                             __end_ofPL96 1B00                               __end_ofPL88 030A  
                             __end_ofPL98 2780                       start_initialization 34F4  
                              CTMU_read@i 0075                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002B                               __end_of_ADC 425E  
                             __end_of_ISR 00BC             USBCtrlTrfRxService@byteToRead 002C  
                             __end_of_OUT 3D40                         __size_of_USB_init 0018  
                       __size_of_USB_task 005A                    ??_RTCC_adjust_time_dec 0093  
                  ??_RTCC_adjust_time_inc 0093                               _cdc_data_rx 0364  
                             _cdc_data_tx 03A4                         __size_ofi2_memset 002A  
            __end_of_USBConfigureEndpoint 35CE                          ?_RTCC_to_caltime 0062  
               __size_of_port_button_task 00C8                                ?i2___lwdiv 002B  
         __end_of_USBStdFeatureReqHandler 0F80         __end_of_USBCtrlEPAllowStatusStage 3464  
                   __end_of_software_init 398A                  __end_of_USBCtrlEPService 2C4E  
                     settings_auto_stop@i 0091                       settings_auto_stop@j 0093  
                       _integrate_current 326E                           ___llmod@divisor 0071  
     __size_of_settings_integrating_reset 00E0                         __size_of_Auto_cut 0094  
                         ___llmod@counter 0075                   settings_led_indicator@i 0091  
                 settings_led_indicator@j 0093                        ?_integrate_current 002B  
               ??_USBCtrlEPAllowDataStage 002C                               ??_ANALOG_IN 0060  
                             ??_CDCInitEP 0037                            USBDeviceInit@i 0068  
                           ??_ST7032_init 0071                              _ST7032_clear 4594  
                           ??_ST7032_task 006F                             ??_ST7032_puts 0072  
                  _pBDTEntryEP0OutCurrent 0016                              _ctmu_value_m 011B  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 3362                          display_LCD@onoff FBD2  
              settings_auto_stop@str_6158 007B                       ringbuf_put_num@temp 0089  
            settings_led_indicator@i_6177 0092                                  ??___lmul 0075  
                             ?_sleep_task 002B                                  ??___wmul 007A  
                     _USBStdGetDscHandler 1EF6                                  ??_d_to_x 0064  
                     ??_integrate_current 006D               __size_of_terminal_operation 0194  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 01FD  
                             _st7032_flag 0132                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0064                  __size_of_ringbuf_put_str 003C  
                  _button_timer_interrupt 114C                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                                  ??_strcat 0064  
                                ??_strcmp 0064                                  ??_strcpy 0064  
                    __end_of_month_length 34F4                            _RTCC_from_RTCC 4518  
                     __end_of_display_LCD 05D4                    _USBActiveConfiguration 0029  
          __end_of_USBStdGetStatusHandler 36C6                               ?_print_time 00AA  
                 __size_of_integrate_time 0024                       __end_of_display_dec 3CEC  
                             __pbssCOMRAM 0001                            USB_task@rx_len 0071  
                           __pcstackBANK0 0060                             __pcstackBANK1 0194  
            __size_of_USBCtrlTrfInHandler 0062                      __end_of_ringbuf_init 4062  
                    ?_USBStdGetDscHandler 002B                              _isdigit$6473 0061  
                       __size_of_data_out 00B0                                  ?_USB_ISR 002B  
               __end_of_integrate_current 32E6                      sleep_task@sleep_flag 013B  
                             ??_CTMU_init 0060                               ??_CTMU_read 006F  
              __end_of_USBWakeFromSuspend 4476                               sprintf@flag 00A6  
                   RTCC_adjust_time_dec@i 0098                         __size_of_bootload 0032  
                             sprintf@prec 009B                           _USBStallHandler 41D4  
                            _pBDTEntryOut 0100                     RTCC_adjust_time_inc@i 0098  
              __end_of_USBCheckCDCRequest 3156                  __end_of_caltime_to_epoch 1642  
                         millis_timer@cnt 011F                                 _data_item 012E  
                __size_of_USBDeviceAttach 0026                     __size_ofi2_LED_output 004A  
                        ??_put_string_usb 006D                          ___lwdiv@dividend 007C  
         __end_of_RTCC_adjust_time_cursor 372A                      display_LCD@port_char FA81  
                               __pintcode 0008           __end_of_RTCC_adjust_time_toggle 4408  
                           __pmediumconst FA50                                 __ptext100 45A0  
                               __ptext101 17B6                                  ?___lbdiv 0060  
                               __ptext110 2C5A                                 __ptext102 1FE2  
                               __ptext111 28C6                                 __ptext103 4456  
                               __ptext120 40A2                                 __ptext112 4288  
                               __ptext104 43B2                                 __ptext121 356E  
                               __ptext113 365C                                 __ptext105 41D4  
                               __ptext122 4476                                 __ptext114 1EF6  
                               __ptext106 2BC4                                 __ptext123 2248  
                               __ptext115 0E3A                                 __ptext107 3D8A  
                               __ptext124 33F8                                 __ptext116 43D4  
                               __ptext108 25A8                                 __ptext125 3160  
                               __ptext117 30D6                                 __ptext109 39E4  
                               __ptext126 230A                                 __ptext118 3A90  
                               __ptext127 23B4                                 __ptext119 32F2  
                               __ptext128 3DD4                                 __ptext129 3E1E  
                                ?___awmod 0060                                  ?___lbmod 0060  
                   __size_of_millis_timer 0012                                  ?___lldiv 0060  
                                ?___llmod 006D                                  ?___lwdiv 007C  
           __size_of_settings_adjust_time 0082                                  ?___lwmod 0060  
                   _is_usb_available$5165 0060                    settings_auto_stop@strp 008F  
                  __end_of_RTCC_from_RTCC 4530                       __end_of_ST7032_init 24FE  
                     __end_of_ST7032_task 1DFA                       __end_of_ST7032_puts 3FA4  
                        ?i2_USBDeviceInit 002B                  settings_auto_stop@i_6160 0092  
                             ??_RTCC_init 0091                                  ?_display 0060  
                             ??_RTCC_task 0088                      _USBTransferOnePacket 29FC  
                                ?_isdigit 002B                          _epoch_to_caltime 1B00  
                                OUT@value 0060                      __CFG_RTCOSC$T1OSCREF 000000  
                        _display_LCD$7071 01D0                          _display_LCD$7072 01D4  
                        _display_LCD$7073 01D8                          _display_LCD$7074 01DC  
                        _display_LCD$7075 01E0                                 _ctmu_task 4586  
                                _ADC_init 4436                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4496                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 002B                           ST7032_task@data 0071  
                             _ep_data_out 010C                          ___lwdiv@quotient 0081  
                   terminal_at_hand@value 00D0                           ST7032_task@wait 0115  
                                ?_sprintf 0083              __size_of_USBCtrlTrfRxService 008A  
             __size_of_settings_auto_stop 00FC             USBConfigureEndpoint@direction 002B  
                             ??i2___lwdiv 002F                              i2_LED_output 3E1E  
                     __size_of_sleep_task 009C                                 data_out@i 00CA  
                               data_out@p FBDC                                 d_to_x@dec 0064  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 007C  
                ringbuf_init@internal_buf 0062                            ___wmul@product 007A  
              ??_USBCtrlEPServiceComplete 002C                     __end_of_ctmu_sampling 2772  
                   __end_of_LED_indicator 2444                              _millis_timer 4574  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                     __size_of_print_time 0054                     __end_of_ST7032_cursor 4436  
                                i2u520_40 237E                                  i2u520_47 237A  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u518_40 2362                                  i2u518_47 235E  
                                i2u544_40 1F3C                                  i2u544_47 1F3A  
                                i2u545_40 1F4E                                  i2u545_47 1F4C  
                                i2u547_40 1F86                                  i2u547_47 1F84  
               USBCtrlEPService@setup_cnt 0048                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 006B  
                                i2u894_45 3E30                                  i2u894_46 3E34  
                                i2u895_40 3E3E                                  _RCONbits 000FD0  
                                i2u897_40 3E4A                         _display_time_1602 0C8E  
                                i2u899_40 3E56                             ??_putUSBUSART 0061  
                                _UEP0bits 000F26        __end_of_settings_integrating_reset 175A  
              _settings_integrating_reset 167A                _USBDeferINDataStagePackets 0127  
                   terminal_operation@op0 00DC                     terminal_operation@op1 00DE  
                   terminal_operation@op2 00E0                     terminal_operation@op3 00E2  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 008A                               _display_LCD 0348  
                           ??_timer3_init 0060                             ??_normal_task 00CB  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 00B2                               _display_dec 3CAC  
                    _USBConfigureEndpoint 356E                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0146                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0076  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                          software_init@i 0084            button_timer_interrupt@sw_value 0085  
                                _USB_init 44E8                                  _USB_task 398A  
               __size_of_is_usb_available 0016                             ?_CDCTxService 002B  
                     ??_display_time_1602 00B8                              _RemoteWakeup 001A  
                                i2_memset 4288                         ??_ringbuf_put_num 0088  
                              ?_ctmu_task 002B                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 41FC                             ringbuf_put@rb 0068  
                ??_settings_led_indicator 0066                          ??_ST7032_command 0070  
                       ___lmul@multiplier 006D                          ??_ctmu_set_ratio 0083  
                             _INTCON2bits 000FF1                          _port_button_task 2180  
              __size_of_integrate_current 0078               ??_USBCtrlEPAllowStatusStage 002B  
             __end_of_USBStdSetCfgHandler 2942                          __size_of_USB_ISR 0004  
                                _Auto_cut 2504                      epoch_to_caltime@year 0089  
           settings_task@item_change_flag 0099                    __size_of_terminal_task 01E6  
                  __size_of_terminal_time 0218                   __size_of_get_string_usb 0034  
                      __end_of_device_dsc FBD2                   ?_USBCtrlTrfSetupHandler 002B  
               __end_of_display_time_1602 0DD8                   USBStdGetStatusHandler@p 002B  
                                __Hrparam 0000                               _ST7032_init 245E  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                             _ST7032_task 1D08                             i2LED_output@b 002C  
                             _ST7032_puts 3F74                                  _SetupPkt 000D30  
                           _weekday_3char FBA4                    __size_of_hardware_init 0082  
                   __size_of_month_length 007C                        ringbuf_put_str@str 0071  
                   ?_USBConfigureEndpoint 002B                  __size_of_caltime_to_RTCC 0084  
                       ??_USBDeviceAttach 0060                          __size_of___lbdiv 0036  
                        __size_of___awmod 0068                          __size_of___lbmod 0028  
                        __size_of___lldiv 0076                          __size_of___llmod 0062  
                        __size_of___lwdiv 004A                          __size_of___lwmod 003E  
                  __size_of_settings_task 0136                       __end_of_ringbuf_pop 2F20  
                     __end_of_ringbuf_num 302C                       __end_of_ringbuf_put 2804  
                     __end_of_putUSBUSART 44D0                               _line_coding 02C5  
                          _integrate_flag 0130                            ??_CDCTxService 0067  
                          _integrate_time 3F34                       __end_of_timer0_init 4234  
                   __size_of_ringbuf_init 0032                       __end_of_timer1_init 3EF2  
                        __size_of_display 008C                                sprintf@len 00A0  
                     __end_of_timer3_init 42DA                                sprintf@val 00A2  
                     __end_of_normal_task 326E                       display_LCD@str_5634 01BC  
                       i2LED_output@value 002B                                strcat@from 0062  
                                _data_out 1C0C                          __size_of_isdigit 001E  
                 __size_of_USBDeviceTasks 0110                           ___lwdiv@divisor 007E  
                         ___lwdiv@counter 0080                      timer0_init@prescaler 0061  
                                __ptext10 3804                                  __ptext11 434C  
                                __ptext20 19E8                                  __ptext12 38CA  
                                __ptext21 2B2E                                  __ptext13 392A  
                __end_ofdisplay_LCD@onoff FBDC                                  __ptext30 326E  
                                __ptext22 43F6                                  __ptext14 264A  
                                __ptext31 0348                                  __ptext23 13F8  
                                __ptext15 282A                                  __ptext40 0000  
                                __ptext32 0C8E                                  __ptext24 0FCC  
                                __ptext16 31E8                                  __ptext41 4496  
                                __ptext33 413E                                  __ptext25 36D0  
                                __ptext17 12AE                                  __ptext50 3376  
                                __ptext42 3868                                  __ptext34 3CAC  
                                __ptext26 2180                                  __ptext18 18D0  
                                __ptext51 42B2                                  __ptext43 3B80  
                                __ptext35 3AE2                                  __ptext27 20B4  
                                __ptext19 167A                                  __ptext60 4594  
                                __ptext52 3EAE                                  __ptext44 3FF2  
                                __ptext36 3F74                                  __ptext28 3C62  
                                __ptext61 3EF2                                  __ptext53 4206  
                                __ptext45 2504                                  __ptext37 3FB4  
                                __ptext29 3F34                                  __ptext70 4436  
                                __ptext62 3B32                                  __ptext54 44E8  
                                __ptext46 4302                                  __ptext38 4416  
                                __ptext71 4586                                  __ptext63 4500  
                                __ptext55 2A96                                  __ptext47 3CF6  
                                __ptext39 1C0C                                  __ptext80 44B4  
                                __ptext72 26EA                                  __ptext64 1B00  
                                __ptext56 425E                                  __ptext48 44D0  
                                __ptext81 40D8                                  __ptext73 114C  
                                __ptext65 2F2E                                  __ptext57 4170  
                                __ptext49 4234                                  __ptext90 4518  
                                __ptext82 455E                                  __ptext74 3D40  
                                __ptext66 2CEE                                  __ptext58 245E  
                                __ptext91 153C                                  __ptext83 2E0E  
                                __ptext75 2D7E                                  __ptext67 4548  
                                __ptext59 4030                                  __ptext92 3478  
                                __ptext84 1E02                                  __ptext76 35E6  
                                __ptext68 406C                                  __ptext93 42DA  
                                __ptext85 29FC                                  __ptext77 398A  
                                __ptext69 436E                                  __ptext94 3738  
                                __ptext86 1D08                                  __ptext78 278A  
                                __ptext95 3BCC                                  __ptext87 2E9E  
                                __ptext79 4390                                  __ptext96 304A  
                                __ptext88 2FBC                                  __ptext97 4530  
                                __ptext89 41A2                                  __ptext99 4574  
                            _SSP1CON2bits 000FC5          __size_of_RTCC_adjust_time_cursor 005A  
               __size_of_terminal_at_hand 004A          __size_of_RTCC_adjust_time_toggle 0012  
                                _bootload 410C                          __size_of_sprintf 02EE  
                              strcpy@from 0062                      terminal_at_hand@hand 00CC  
                           __size_of_atoi 0090            __end_of_USBCtrlTrfSetupHandler 3DCA  
                           __size_of_main 0064                         ?_USBCtrlEPService 002B  
                             data_out@str 00AC                              _month_length 3478  
                       put_string_usb@len 006B                        ??_USBCtrlEPService 0046  
                __size_of_RTCC_from_epoch 0018                       _USBCtrlTrfInHandler 3160  
                            ??_sleep_task 0075                                  _outPipes 0001  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 0083  
                    _USBCtrlTrfOutHandler 4476                                  int$flags 0054  
                            _ringbuf_init 4030                                  atoi@sign 0080  
               _USBCtrlEPAllowStatusStage 33F8          settings_integrating_reset@i_6194 0095  
                               x_to_d@hex 0061                                  display@i 0065  
                  ??_USBTransferOnePacket 0064                             _terminal_task 064C  
                           _terminal_time 0894                    __end_of_integrate_time 3F58  
               _USBDeferStatusStagePacket 001B                              ??_print_time 00AC  
                CDCTxService@byte_to_send 006A                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 002B                               ??_ctmu_task 0088  
           USBCtrlTrfTxService@byteToSend 002B                                _ST7032_put 3FB4  
                         display_dec@edit 00AD                             _hardware_init 3376  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002B                  USBStdFeatureReqHandler@p 0044  
                        get_quot_rem@quot 0081                 terminal_task@command_init 013C  
                              _LED_output 3C62                         RTCC_to_caltime@tm 0062  
         __size_of_settings_led_indicator 0108             __size_of_RTCC_adjust_time_dec 0100  
           __size_of_RTCC_adjust_time_inc 010A                                  intlevel2 0000  
                               sprintf@ap 009F                                 sprintf@cp 009D  
                               sprintf@sp 0083                        __end_of_sleep_task 28C6  
                  __size_of_USBDeviceInit 008A                             _settings_flag 0131  
                           _settings_item 00ED   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 43F6  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0022         ??_USER_USB_CALLBACK_EVENT_HANDLER 003D  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0037           _USER_USB_CALLBACK_EVENT_HANDLER 43D4  
                           _settings_task 12AE                          ___lwmod@dividend 0060  
            i2USBTransferOnePacket@handle 0030                          ___lldiv@dividend 0060  
                     terminal_at_hand@max 00CF                       terminal_at_hand@min 00CE  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 38CA  
              __size_of_display_time_1602 014A                  __end_of_epoch_to_caltime 1BD6  
                __size_of_RTCC_to_caltime 0066                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 1288                __end_of_terminal_operation 0C70  
                      __end_of_print_time 3A90                i2USBTransferOnePacket@data 002C  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 002C                     ?_USBCtrlTrfOutHandler 002B  
                             _ringbuf_pop 2E9E                               _ringbuf_num 2FBC  
                             _ringbuf_put 278A                               _putUSBUSART 44B4  
                     _USBCtrlTrfRxService 2248                               _timer0_init 4206  
                      _USBWakeFromSuspend 4456                               _timer1_init 3EAE  
                             _timer3_init 42B2                               _normal_task 31E8  
                          ?_terminal_task 00E5                            ?_terminal_time 00D1  
                 _USBStdFeatureReqHandler 0E3A                        _USBCheckCDCRequest 30D6  
                     _USBCtrlTrfTxService 230A                           ?_integrate_time 002B  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 0079  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                  __size_of_software_init 0060                                  sprintf@c 00A7  
                                sprintf@f 0085                                  strcat@cp 0064  
                                strcat@to 0060                       ?_USBWakeFromSuspend 002B  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 455E                 settings_led_indicator@str 0067  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 0062  
                       caltime_to_RTCC@tm 0065                         ??_caltime_to_RTCC 0067  
                   ??_USBCtrlTrfInHandler 002C                                  strcpy@cp 0064  
                                strcpy@to 0060                     _USBAlternateInterface 0192  
                         ___lwmod@counter 0064                        terminal_at_hand@tx 00CA  
                     ?_USBCheckCDCRequest 002B                            ?_hardware_init 002B  
               i2USBTransferOnePacket@dir 002B                 i2USBTransferOnePacket@len 002E  
                     USBEnableEndpoint@ep 0036                           _endpoint_number 0022  
            __end_of_settings_adjust_time 2BB0                      ?_USBCtrlTrfRxService 002B  
                           ?_getsUSBUSART 0067                        integrate_current@i 006F  
                ?_USBCtrlEPAllowDataStage 002B                            ?_settings_task 002B  
                          _get_string_usb 40D8                      ?_USBCtrlTrfTxService 002B  
               __end_of_ringbuf_backspace 391C              _USBStatusStageTimeoutCounter 001D  
                    ??_USBWakeFromSuspend 003F                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 1EC2                      ??_USBCheckCDCRequest 002B  
                              _USB_CD_Ptr FA7F                          ??_RTCC_from_RTCC 0088  
